; ModuleID = 'programs_new/Python-new/_ssl.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct.PySocketModule_APIObject = type { %struct._typeobject*, %struct._object*, %struct._object* }
%struct.PyType_Slot = type { i32, i8* }
%struct.PyType_Spec = type { i8*, i32, i32, i32, %struct.PyType_Slot* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.py_ssl_error_code = type { i8*, i32, i32 }
%struct.py_ssl_library_code = type { i8*, i32 }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.PySSLContext = type { %struct._object, %struct.ssl_ctx_st*, i8*, i32, %struct._object*, i32 }
%struct.ssl_ctx_st = type { %struct.ssl_method_st*, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i64, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, %struct.anon.5, i32, i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, i32 (%struct.ssl_st*, i8*, i32*)*, i32 (%struct.ssl_st*, i8*, i32)*, %struct.crypto_ex_data_st, %struct.env_md_st*, %struct.env_md_st*, %struct.env_md_st*, %struct.stack_st_X509*, %struct.stack_st_SSL_COMP*, void (%struct.ssl_st*, i32, i32)*, %struct.stack_st_X509_NAME*, i64, i64, i64, %struct.cert_st*, i32, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, i32, [32 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*, i32*)*, %struct.X509_VERIFY_PARAM_st*, i32, i32, %struct.engine_st*, i32 (%struct.ssl_st*, i32*, i8*)*, i8*, [16 x i8], [16 x i8], [16 x i8], i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, i32 (%struct.ssl_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*, i64, i8*)*, i8*, i8*, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32, %struct.ssl3_buf_freelist_st*, %struct.ssl3_buf_freelist_st*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.ssl_method_st = type { i32, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i32)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i64 (%struct.ssl_st*, i32, i32, i32, i64, i32*)*, i32 (%struct.ssl_st*, i32, i8*, i32, i32)*, i32 (%struct.ssl_st*, i32, i8*, i32)*, i32 (%struct.ssl_st*)*, i64 (%struct.ssl_st*, i32, i64, i8*)*, i64 (%struct.ssl_ctx_st*, i32, i64, i8*)*, %struct.ssl_cipher_st* (i8*)*, i32 (%struct.ssl_cipher_st*, i8*)*, i32 (%struct.ssl_st*)*, i32 ()*, %struct.ssl_cipher_st* (i32)*, %struct.ssl_method_st* (i32)*, i64 ()*, %struct.ssl3_enc_method*, i32 ()*, i64 (%struct.ssl_st*, i32, void ()*)*, i64 (%struct.ssl_ctx_st*, i32, void ()*)* }
%struct.ssl_st = type { i32, i32, %struct.ssl_method_st*, %struct.bio_st*, %struct.bio_st*, %struct.bio_st*, i32, i32, {}*, i32, i32, i32, i32, i32, i32, %struct.buf_mem_st*, i8*, i32, i32, i8*, i32, %struct.ssl2_state_st*, %struct.ssl3_state_st*, %struct.dtls1_state_st*, i32, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, %struct.X509_VERIFY_PARAM_st*, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, i32, %struct.evp_cipher_ctx_st*, %struct.env_md_ctx_st*, %struct.comp_ctx_st*, %struct.evp_cipher_ctx_st*, %struct.env_md_ctx_st*, %struct.comp_ctx_st*, %struct.cert_st*, i32, [32 x i8], %struct.ssl_session_st*, i32 (%struct.ssl_st*, i8*, i32*)*, i32, i32 (i32, %struct.x509_store_ctx_st*)*, void (%struct.ssl_st*, i32, i32)*, i32, i32, %struct.kssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %struct.ssl_ctx_st*, i32, i64, %struct.crypto_ex_data_st, %struct.stack_st_X509_NAME*, i32, i64, i64, i64, i32, i32, i32, void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)*, i8*, i8*, i32, i32, i32, %struct.stack_st_OCSP_RESPID*, %struct.stack_st_X509_EXTENSION*, i8*, i32, i32, i64, i8*, i64, i8*, i8*, i64, %struct.tls_session_ticket_ext_st*, i32 (%struct.ssl_st*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8*, i32*, %struct.stack_st_SSL_CIPHER*, %struct.ssl_cipher_st**, i8*)*, i8*, %struct.ssl_ctx_st*, i8*, i8, %struct.stack_st_SRTP_PROTECTION_PROFILE*, %struct.srtp_protection_profile_st*, i32, i32, i32, i32 }
%struct.bio_st = type { %struct.bio_method_st*, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*, i8*, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, %struct.bio_st*, i32, i64, i64, %struct.crypto_ex_data_st }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, void (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.ssl2_state_st = type { i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i8*, i8*, i8*, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i32, [32 x i8], i32, [16 x i8], i32, [48 x i8], i64, i64, %struct.anon }
%struct.anon = type { i32, i32, i32, i32, i32, i32, [32 x i8], i32, i32, i32, i32 }
%struct.ssl3_state_st = type { i64, i32, [8 x i8], i32, [64 x i8], [8 x i8], i32, [64 x i8], [32 x i8], [32 x i8], i32, i32, i32, %struct.ssl3_buffer_st, %struct.ssl3_buffer_st, %struct.ssl3_record_st, %struct.ssl3_record_st, [2 x i8], i32, [4 x i8], i32, i32, i32, i32, i32, i8*, %struct.bio_st*, %struct.env_md_ctx_st**, i32, i32, i32, i32, [2 x i8], i32, i32, i32, i32, i8*, i64, i8*, i64, %struct.anon.0, [64 x i8], i8, [64 x i8], i8, i32, i32 }
%struct.ssl3_buffer_st = type { i8*, i64, i32, i32 }
%struct.ssl3_record_st = type { i32, i32, i32, i8*, i8*, i8*, i64, [8 x i8] }
%struct.anon.0 = type { [128 x i8], [128 x i8], i32, [128 x i8], i32, i64, i32, %struct.ssl_cipher_st*, %struct.dh_st*, %struct.ec_key_st*, i32, i32, i32, i32, [9 x i8], %struct.stack_st_X509_NAME*, i32, i32, i8*, %struct.evp_cipher_st*, %struct.env_md_st*, i32, i32, %struct.ssl_comp_st*, i32 }
%struct.ssl_cipher_st = type { i32, i8*, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32 }
%struct.dh_st = type { i32, i32, %struct.bignum_st*, %struct.bignum_st*, i64, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, %struct.crypto_ex_data_st, %struct.dh_method*, %struct.engine_st* }
%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.dh_method = type { i8*, i32 (%struct.dh_st*)*, i32 (i8*, %struct.bignum_st*, %struct.dh_st*)*, i32 (%struct.dh_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*)*, i32 (%struct.dh_st*)*, i32 (%struct.dh_st*)*, i32, i8*, i32 (%struct.dh_st*, i32, i32, %struct.bn_gencb_st*)* }
%struct.bignum_ctx = type opaque
%struct.bn_gencb_st = type { i32, i8*, %union.anon }
%union.anon = type { void (i32, i32, i8*)* }
%struct.ec_key_st = type opaque
%struct.evp_cipher_st = type { i32, i32, i32, i32, i64, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, i32 (%struct.evp_cipher_ctx_st*)*, i32, i32 (%struct.evp_cipher_ctx_st*, %struct.asn1_type_st*)*, i32 (%struct.evp_cipher_ctx_st*, %struct.asn1_type_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)*, i8* }
%struct.asn1_type_st = type { i32, %union.anon.1 }
%union.anon.1 = type { i8* }
%struct.ssl_comp_st = type { i32, i8*, %struct.comp_method_st* }
%struct.comp_method_st = type { i32, i8*, i32 (%struct.comp_ctx_st*)*, void (%struct.comp_ctx_st*)*, i32 (%struct.comp_ctx_st*, i8*, i32, i8*, i32)*, i32 (%struct.comp_ctx_st*, i8*, i32, i8*, i32)*, i64 ()*, i64 ()* }
%struct.dtls1_state_st = type { i32, [256 x i8], [256 x i8], i32, i16, i16, %struct.dtls1_bitmap_st, %struct.dtls1_bitmap_st, i16, i16, i16, [8 x i8], %struct.record_pqueue_st, %struct.record_pqueue_st, %struct._pqueue*, %struct._pqueue*, %struct.record_pqueue_st, i32, %struct.hm_header_st, %struct.hm_header_st, %struct.dtls1_timeout_st, %struct.timeval, i16, [2 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct.dtls1_bitmap_st = type { i64, [8 x i8] }
%struct._pqueue = type opaque
%struct.record_pqueue_st = type { i16, %struct._pqueue* }
%struct.hm_header_st = type { i8, i64, i16, i64, i64, i32, %struct.dtls1_retransmit_state }
%struct.dtls1_retransmit_state = type { %struct.evp_cipher_ctx_st*, %struct.env_md_ctx_st*, %struct.comp_ctx_st*, %struct.ssl_session_st*, i16 }
%struct.dtls1_timeout_st = type { i32, i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, %struct.engine_st*, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i8*, i32, i64, i8*, i32, i32, [32 x i8] }
%struct.env_md_ctx_st = type { %struct.env_md_st*, %struct.engine_st*, i64, i8*, %struct.evp_pkey_ctx_st*, i32 (%struct.env_md_ctx_st*, i8*, i64)* }
%struct.evp_pkey_ctx_st = type opaque
%struct.comp_ctx_st = type { %struct.comp_method_st*, i64, i64, i64, i64, %struct.crypto_ex_data_st }
%struct.kssl_ctx_st = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i8* }
%struct.stack_st_OCSP_RESPID = type opaque
%struct.stack_st_X509_EXTENSION = type { %struct.stack_st }
%struct.stack_st = type { i32, i8**, i32, i32, i32 (i8*, i8*)* }
%struct.tls_session_ticket_ext_st = type { i16, i8* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%struct.ssl3_enc_method = type opaque
%struct.stack_st_SSL_CIPHER = type { %struct.stack_st }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, {}*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, %struct.crypto_ex_data_st, i32 }
%struct.stack_st_X509_OBJECT = type { %struct.stack_st }
%struct.stack_st_X509_LOOKUP = type { %struct.stack_st }
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, i32, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, i32 (%struct.x509_store_ctx_st*)*, {}*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type { %struct.stack_st }
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type { %struct.stack_st }
%struct.stack_st_X509_REVOKED = type { %struct.stack_st }
%struct.ASN1_ENCODING_st = type { i8*, i64, i32 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.stack_st_GENERAL_NAME = type { %struct.stack_st }
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.4, %struct.X509_name_st* }
%union.anon.4 = type { %struct.stack_st_GENERAL_NAME* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, i8*, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, %struct.stack_st_IPAddressFamily*, %struct.ASIdentifiers_st*, [20 x i8], %struct.x509_cert_aux_st* }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type { %struct.asn1_string_st*, %struct.asn1_string_st* }
%struct.X509_pubkey_st = type { %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, i32, %struct.evp_pkey_asn1_method_st*, %struct.engine_st*, %union.anon.2, i32, %struct.stack_st_X509_ATTRIBUTE* }
%struct.evp_pkey_asn1_method_st = type opaque
%union.anon.2 = type { i8* }
%struct.stack_st_X509_ATTRIBUTE = type { %struct.stack_st }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type { %struct.stack_st }
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type { %struct.stack_st }
%struct.stack_st_IPAddressFamily = type { %struct.stack_st }
%struct.ASIdentifiers_st = type { %struct.ASIdentifierChoice_st*, %struct.ASIdentifierChoice_st* }
%struct.ASIdentifierChoice_st = type { i32, %union.anon.3 }
%union.anon.3 = type { i32* }
%struct.x509_cert_aux_st = type { %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_ALGOR* }
%struct.stack_st_ASN1_OBJECT = type { %struct.stack_st }
%struct.stack_st_X509_ALGOR = type { %struct.stack_st }
%struct.lhash_st_SSL_SESSION = type { i32 }
%struct.ssl_session_st = type { i32, i32, [8 x i8], i32, [48 x i8], i32, [32 x i8], i32, [32 x i8], i32, [256 x i8], i8*, i8*, i32, %struct.sess_cert_st*, %struct.x509_st*, i64, i32, i64, i64, i32, %struct.ssl_cipher_st*, i64, %struct.stack_st_SSL_CIPHER*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, i8*, i64, i8*, i64, i8*, i8*, i64, i64 }
%struct.sess_cert_st = type opaque
%struct.anon.5 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void*, i32 }
%struct.stack_st_void = type { %struct.stack_st }
%struct.env_md_st = type { i32, i32, i32, i64, i32 (%struct.env_md_ctx_st*)*, i32 (%struct.env_md_ctx_st*, i8*, i64)*, i32 (%struct.env_md_ctx_st*, i8*)*, i32 (%struct.env_md_ctx_st*, %struct.env_md_ctx_st*)*, i32 (%struct.env_md_ctx_st*)*, i32 (i32, i8*, i32, i8*, i32*, i8*)*, i32 (i32, i8*, i32, i8*, i32, i8*)*, [5 x i32], i32, i32, i32 (%struct.env_md_ctx_st*, i32, i32, i8*)* }
%struct.stack_st_X509 = type { %struct.stack_st }
%struct.stack_st_SSL_COMP = type { %struct.stack_st }
%struct.stack_st_X509_NAME = type { %struct.stack_st }
%struct.cert_st = type opaque
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT* }
%struct.engine_st = type opaque
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st, i32, [128 x i8] }
%struct.ssl3_buf_freelist_st = type opaque
%struct.stack_st_SRTP_PROTECTION_PROFILE = type { %struct.stack_st }
%struct._ts = type { %struct._ts*, %struct._ts*, %struct._is*, %struct._frame*, i32, i8, i8, i32, i32, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, %struct._object*, i64, i32, %struct._object*, void (i8*)*, i8* }
%struct._is = type { %struct._is*, %struct._ts*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, i32, i32, %struct._object* }
%struct._frame = type opaque
%struct.PySocketSockObject = type { %struct._object, i32, i32, i32, i32, %struct._object* ()*, double }
%struct.PySSLSocket = type { %struct._object, %struct._object*, %struct.ssl_st*, %struct.PySSLContext*, %struct.x509_st*, i8, i8, i32 }
%struct._PySSLPasswordInfo = type { %struct._ts*, %struct._object*, i8*, i32, i32 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.x509_object_st = type { i32, %union.anon.6 }
%union.anon.6 = type { i8* }
%struct.err_state_st = type { %struct.crypto_threadid_st, [16 x i32], [16 x i64], [16 x i8*], [16 x i32], [16 x i8*], [16 x i32], i32, i32 }
%struct.crypto_threadid_st = type { i8*, i64 }
%struct.PyByteArrayObject = type { %struct.PyVarObject, i64, i8*, i8*, i32 }
%struct.X509_name_entry_st = type { %struct.asn1_object_st*, %struct.asn1_string_st*, i32, i32 }
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }
%struct.GENERAL_NAME_st = type { i32, %union.anon.7 }
%union.anon.7 = type { i8* }
%struct.v3_ext_method = type { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }
%struct.ASN1_ITEM_st = type opaque
%struct.stack_st_CONF_VALUE = type { %struct.stack_st }
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.X509_req_st = type { %struct.X509_req_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32 }
%struct.X509_req_info_st = type { %struct.ASN1_ENCODING_st, %struct.asn1_string_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.stack_st_X509_ATTRIBUTE* }
%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.ASN1_VALUE_st = type opaque
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.stack_st_ACCESS_DESCRIPTION = type { %struct.stack_st }
%struct.ACCESS_DESCRIPTION_st = type { %struct.asn1_object_st*, %struct.GENERAL_NAME_st* }
%struct.DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, i32 }
%struct.fd_set = type { [16 x i64] }
%struct.pollfd = type { i32, i16, i16 }
%struct.PyOSErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i64 }

@PySSLContext_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.86, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.PySSLContext*)* @context_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySSLContext*, i32 (%struct._object*, i8*)*, i8*)* @context_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySSLContext*)* @context_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([13 x %struct.PyMethodDef], [13 x %struct.PyMethodDef]* @context_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([5 x %struct.PyGetSetDef], [5 x %struct.PyGetSetDef]* @context_getsetlist, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @context_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PySSLSocket_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.194, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.PySSLSocket*)* @PySSL_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([11 x %struct.PyMethodDef], [11 x %struct.PyMethodDef]* @PySSLMethods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @ssl_getsetlist, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_sslmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @module_doc, i32 0, i32 0), i64 -1, %struct.PyMethodDef* getelementptr inbounds ([10 x %struct.PyMethodDef], [10 x %struct.PyMethodDef]* @PySSL_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str = private unnamed_addr constant [13 x i8] c"_socket.CAPI\00", align 1
@PySocketModule = internal global %struct.PySocketModule_APIObject zeroinitializer, align 8
@PyExc_OSError = external global %struct._object*, align 8
@sslerror_type_slots = internal global [4 x %struct.PyType_Slot] [%struct.PyType_Slot { i32 48, i8* null }, %struct.PyType_Slot { i32 56, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @SSLError_doc, i32 0, i32 0) }, %struct.PyType_Slot { i32 70, i8* bitcast (%struct._object* (%struct.PyOSErrorObject*)* @SSLError_str to i8*) }, %struct.PyType_Slot zeroinitializer], align 16
@sslerror_type_spec = internal global %struct.PyType_Spec { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.263, i32 0, i32 0), i32 104, i32 0, i32 263168, %struct.PyType_Slot* getelementptr inbounds ([4 x %struct.PyType_Slot], [4 x %struct.PyType_Slot]* @sslerror_type_slots, i32 0, i32 0) }, align 8
@PySSLErrorObject = internal global %struct._object* null, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"ssl.SSLZeroReturnError\00", align 1
@SSLZeroReturnError_doc = internal global [32 x i8] c"SSL/TLS session closed cleanly.\00", align 16
@PySSLZeroReturnErrorObject = internal global %struct._object* null, align 8
@.str.2 = private unnamed_addr constant [21 x i8] c"ssl.SSLWantReadError\00", align 1
@SSLWantReadError_doc = internal global [97 x i8] c"Non-blocking SSL socket needs to read more data\0Abefore the requested operation can be completed.\00", align 16
@PySSLWantReadErrorObject = internal global %struct._object* null, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"ssl.SSLWantWriteError\00", align 1
@SSLWantWriteError_doc = internal global [98 x i8] c"Non-blocking SSL socket needs to write more data\0Abefore the requested operation can be completed.\00", align 16
@PySSLWantWriteErrorObject = internal global %struct._object* null, align 8
@.str.4 = private unnamed_addr constant [20 x i8] c"ssl.SSLSyscallError\00", align 1
@SSLSyscallError_doc = internal global [44 x i8] c"System error when attempting SSL operation.\00", align 16
@PySSLSyscallErrorObject = internal global %struct._object* null, align 8
@.str.5 = private unnamed_addr constant [16 x i8] c"ssl.SSLEOFError\00", align 1
@SSLEOFError_doc = internal global [40 x i8] c"SSL/TLS connection terminated abruptly.\00", align 16
@PySSLEOFErrorObject = internal global %struct._object* null, align 8
@.str.6 = private unnamed_addr constant [9 x i8] c"SSLError\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"SSLZeroReturnError\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"SSLWantReadError\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"SSLWantWriteError\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"SSLSyscallError\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"SSLEOFError\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"_SSLContext\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"_SSLSocket\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"SSL_ERROR_ZERO_RETURN\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"SSL_ERROR_WANT_READ\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"SSL_ERROR_WANT_WRITE\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"SSL_ERROR_WANT_X509_LOOKUP\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"SSL_ERROR_SYSCALL\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"SSL_ERROR_SSL\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"SSL_ERROR_WANT_CONNECT\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"SSL_ERROR_EOF\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"SSL_ERROR_INVALID_ERROR_CODE\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"CERT_NONE\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"CERT_OPTIONAL\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"CERT_REQUIRED\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"VERIFY_DEFAULT\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"VERIFY_CRL_CHECK_LEAF\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"VERIFY_CRL_CHECK_CHAIN\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"VERIFY_X509_STRICT\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"ALERT_DESCRIPTION_CLOSE_NOTIFY\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"ALERT_DESCRIPTION_UNEXPECTED_MESSAGE\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"ALERT_DESCRIPTION_BAD_RECORD_MAC\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"ALERT_DESCRIPTION_RECORD_OVERFLOW\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"ALERT_DESCRIPTION_DECOMPRESSION_FAILURE\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"ALERT_DESCRIPTION_HANDSHAKE_FAILURE\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"ALERT_DESCRIPTION_BAD_CERTIFICATE\00", align 1
@.str.37 = private unnamed_addr constant [42 x i8] c"ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"ALERT_DESCRIPTION_CERTIFICATE_REVOKED\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"ALERT_DESCRIPTION_CERTIFICATE_EXPIRED\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN\00", align 1
@.str.41 = private unnamed_addr constant [36 x i8] c"ALERT_DESCRIPTION_ILLEGAL_PARAMETER\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ALERT_DESCRIPTION_UNKNOWN_CA\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"ALERT_DESCRIPTION_ACCESS_DENIED\00", align 1
@.str.44 = private unnamed_addr constant [31 x i8] c"ALERT_DESCRIPTION_DECODE_ERROR\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"ALERT_DESCRIPTION_DECRYPT_ERROR\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"ALERT_DESCRIPTION_PROTOCOL_VERSION\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"ALERT_DESCRIPTION_INSUFFICIENT_SECURITY\00", align 1
@.str.48 = private unnamed_addr constant [33 x i8] c"ALERT_DESCRIPTION_INTERNAL_ERROR\00", align 1
@.str.49 = private unnamed_addr constant [33 x i8] c"ALERT_DESCRIPTION_USER_CANCELLED\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"ALERT_DESCRIPTION_NO_RENEGOTIATION\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION\00", align 1
@.str.52 = private unnamed_addr constant [43 x i8] c"ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE\00", align 1
@.str.53 = private unnamed_addr constant [36 x i8] c"ALERT_DESCRIPTION_UNRECOGNIZED_NAME\00", align 1
@.str.54 = private unnamed_addr constant [50 x i8] c"ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE\00", align 1
@.str.55 = private unnamed_addr constant [45 x i8] c"ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"PROTOCOL_SSLv2\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"PROTOCOL_SSLv3\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"PROTOCOL_SSLv23\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"PROTOCOL_TLSv1\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"PROTOCOL_TLSv1_1\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"PROTOCOL_TLSv1_2\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"OP_ALL\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"OP_NO_SSLv2\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"OP_NO_SSLv3\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"OP_NO_TLSv1\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"OP_NO_TLSv1_1\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"OP_NO_TLSv1_2\00", align 1
@.str.69 = private unnamed_addr constant [28 x i8] c"OP_CIPHER_SERVER_PREFERENCE\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"OP_SINGLE_DH_USE\00", align 1
@.str.71 = private unnamed_addr constant [19 x i8] c"OP_SINGLE_ECDH_USE\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"OP_NO_COMPRESSION\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@.str.73 = private unnamed_addr constant [8 x i8] c"HAS_SNI\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"HAS_TLS_UNIQUE\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"HAS_ECDH\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"HAS_NPN\00", align 1
@err_codes_to_names = internal global %struct._object* null, align 8
@err_names_to_codes = internal global %struct._object* null, align 8
@error_codes = internal global [329 x %struct.py_ssl_error_code] [%struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.264, i32 0, i32 0), i32 9, i32 100 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.265, i32 0, i32 0), i32 9, i32 101 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.266, i32 0, i32 0), i32 9, i32 102 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.267, i32 0, i32 0), i32 9, i32 103 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.268, i32 0, i32 0), i32 9, i32 116 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.269, i32 0, i32 0), i32 9, i32 104 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.270, i32 0, i32 0), i32 9, i32 117 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.271, i32 0, i32 0), i32 9, i32 118 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i32 0, i32 0), i32 9, i32 127 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i32 9, i32 115 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.274, i32 0, i32 0), i32 9, i32 119 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.275, i32 0, i32 0), i32 9, i32 120 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.276, i32 0, i32 0), i32 9, i32 121 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.277, i32 0, i32 0), i32 9, i32 122 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.278, i32 0, i32 0), i32 9, i32 123 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.279, i32 0, i32 0), i32 9, i32 105 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.280, i32 0, i32 0), i32 9, i32 106 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.281, i32 0, i32 0), i32 9, i32 107 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.282, i32 0, i32 0), i32 9, i32 108 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.283, i32 0, i32 0), i32 9, i32 109 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.284, i32 0, i32 0), i32 9, i32 110 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.285, i32 0, i32 0), i32 9, i32 124 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i32 0, i32 0), i32 9, i32 125 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.287, i32 0, i32 0), i32 9, i32 111 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.288, i32 0, i32 0), i32 9, i32 112 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.289, i32 0, i32 0), i32 9, i32 113 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.290, i32 0, i32 0), i32 9, i32 114 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.291, i32 0, i32 0), i32 9, i32 126 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.292, i32 0, i32 0), i32 20, i32 100 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.293, i32 0, i32 0), i32 20, i32 272 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.294, i32 0, i32 0), i32 20, i32 101 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.295, i32 0, i32 0), i32 20, i32 102 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.296, i32 0, i32 0), i32 20, i32 103 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.297, i32 0, i32 0), i32 20, i32 104 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.298, i32 0, i32 0), i32 20, i32 106 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.299, i32 0, i32 0), i32 20, i32 107 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.300, i32 0, i32 0), i32 20, i32 108 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.301, i32 0, i32 0), i32 20, i32 109 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.302, i32 0, i32 0), i32 20, i32 110 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.303, i32 0, i32 0), i32 20, i32 111 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.304, i32 0, i32 0), i32 20, i32 112 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.305, i32 0, i32 0), i32 20, i32 304 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.306, i32 0, i32 0), i32 20, i32 305 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.307, i32 0, i32 0), i32 20, i32 306 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.308, i32 0, i32 0), i32 20, i32 332 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.309, i32 0, i32 0), i32 20, i32 105 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.310, i32 0, i32 0), i32 20, i32 271 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.311, i32 0, i32 0), i32 20, i32 113 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.312, i32 0, i32 0), i32 20, i32 333 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.313, i32 0, i32 0), i32 20, i32 114 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.314, i32 0, i32 0), i32 20, i32 115 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.315, i32 0, i32 0), i32 20, i32 116 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.316, i32 0, i32 0), i32 20, i32 316 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.317, i32 0, i32 0), i32 20, i32 117 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.318, i32 0, i32 0), i32 20, i32 118 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.319, i32 0, i32 0), i32 20, i32 119 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.320, i32 0, i32 0), i32 20, i32 120 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.321, i32 0, i32 0), i32 20, i32 121 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.322, i32 0, i32 0), i32 20, i32 122 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.323, i32 0, i32 0), i32 20, i32 123 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.324, i32 0, i32 0), i32 20, i32 124 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.325, i32 0, i32 0), i32 20, i32 125 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.326, i32 0, i32 0), i32 20, i32 126 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.327, i32 0, i32 0), i32 20, i32 127 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.328, i32 0, i32 0), i32 20, i32 128 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.329, i32 0, i32 0), i32 20, i32 129 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i32 0, i32 0), i32 20, i32 130 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.331, i32 0, i32 0), i32 20, i32 131 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.332, i32 0, i32 0), i32 20, i32 132 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.333, i32 0, i32 0), i32 20, i32 133 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.334, i32 0, i32 0), i32 20, i32 134 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.335, i32 0, i32 0), i32 20, i32 135 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.336, i32 0, i32 0), i32 20, i32 136 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.337, i32 0, i32 0), i32 20, i32 137 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.338, i32 0, i32 0), i32 20, i32 138 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.339, i32 0, i32 0), i32 20, i32 139 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.340, i32 0, i32 0), i32 20, i32 226 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.341, i32 0, i32 0), i32 20, i32 140 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.342, i32 0, i32 0), i32 20, i32 343 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.343, i32 0, i32 0), i32 20, i32 141 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.344, i32 0, i32 0), i32 20, i32 307 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.345, i32 0, i32 0), i32 20, i32 142 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.346, i32 0, i32 0), i32 20, i32 143 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.347, i32 0, i32 0), i32 20, i32 144 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.348, i32 0, i32 0), i32 20, i32 308 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.349, i32 0, i32 0), i32 20, i32 145 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.350, i32 0, i32 0), i32 20, i32 146 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.351, i32 0, i32 0), i32 20, i32 147 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.352, i32 0, i32 0), i32 20, i32 281 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.353, i32 0, i32 0), i32 20, i32 148 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.354, i32 0, i32 0), i32 20, i32 149 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.355, i32 0, i32 0), i32 20, i32 334 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.356, i32 0, i32 0), i32 20, i32 309 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.357, i32 0, i32 0), i32 20, i32 317 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.358, i32 0, i32 0), i32 20, i32 318 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.359, i32 0, i32 0), i32 20, i32 322 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.360, i32 0, i32 0), i32 20, i32 323 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.361, i32 0, i32 0), i32 20, i32 310 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.362, i32 0, i32 0), i32 20, i32 150 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.363, i32 0, i32 0), i32 20, i32 282 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.364, i32 0, i32 0), i32 20, i32 151 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.365, i32 0, i32 0), i32 20, i32 152 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.366, i32 0, i32 0), i32 20, i32 153 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.367, i32 0, i32 0), i32 20, i32 154 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.368, i32 0, i32 0), i32 20, i32 155 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.369, i32 0, i32 0), i32 20, i32 156 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.370, i32 0, i32 0), i32 20, i32 283 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.371, i32 0, i32 0), i32 20, i32 340 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.372, i32 0, i32 0), i32 20, i32 158 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.373, i32 0, i32 0), i32 20, i32 280 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.374, i32 0, i32 0), i32 20, i32 341 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.375, i32 0, i32 0), i32 20, i32 278 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.376, i32 0, i32 0), i32 20, i32 328 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.377, i32 0, i32 0), i32 20, i32 325 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.378, i32 0, i32 0), i32 20, i32 279 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.379, i32 0, i32 0), i32 20, i32 284 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.380, i32 0, i32 0), i32 20, i32 285 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.381, i32 0, i32 0), i32 20, i32 286 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.382, i32 0, i32 0), i32 20, i32 287 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.383, i32 0, i32 0), i32 20, i32 288 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0), i32 20, i32 289 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.385, i32 0, i32 0), i32 20, i32 290 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.386, i32 0, i32 0), i32 20, i32 291 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.387, i32 0, i32 0), i32 20, i32 292 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.388, i32 0, i32 0), i32 20, i32 293 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.389, i32 0, i32 0), i32 20, i32 294 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.390, i32 0, i32 0), i32 20, i32 295 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.391, i32 0, i32 0), i32 20, i32 159 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.392, i32 0, i32 0), i32 20, i32 160 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.393, i32 0, i32 0), i32 20, i32 274 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.394, i32 0, i32 0), i32 20, i32 161 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.395, i32 0, i32 0), i32 20, i32 296 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.396, i32 0, i32 0), i32 20, i32 162 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.397, i32 0, i32 0), i32 20, i32 163 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.398, i32 0, i32 0), i32 20, i32 164 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.399, i32 0, i32 0), i32 20, i32 165 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.400, i32 0, i32 0), i32 20, i32 166 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.401, i32 0, i32 0), i32 20, i32 167 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.402, i32 0, i32 0), i32 20, i32 168 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.403, i32 0, i32 0), i32 20, i32 169 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.404, i32 0, i32 0), i32 20, i32 170 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.405, i32 0, i32 0), i32 20, i32 171 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.406, i32 0, i32 0), i32 20, i32 311 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.407, i32 0, i32 0), i32 20, i32 172 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.408, i32 0, i32 0), i32 20, i32 173 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.409, i32 0, i32 0), i32 20, i32 174 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.410, i32 0, i32 0), i32 20, i32 175 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.411, i32 0, i32 0), i32 20, i32 176 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.412, i32 0, i32 0), i32 20, i32 177 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.413, i32 0, i32 0), i32 20, i32 178 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.414, i32 0, i32 0), i32 20, i32 179 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.415, i32 0, i32 0), i32 20, i32 180 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.416, i32 0, i32 0), i32 20, i32 181 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.417, i32 0, i32 0), i32 20, i32 182 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.418, i32 0, i32 0), i32 20, i32 183 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.419, i32 0, i32 0), i32 20, i32 184 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.420, i32 0, i32 0), i32 20, i32 185 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.421, i32 0, i32 0), i32 20, i32 331 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.422, i32 0, i32 0), i32 20, i32 186 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.423, i32 0, i32 0), i32 20, i32 187 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.424, i32 0, i32 0), i32 20, i32 330 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.425, i32 0, i32 0), i32 20, i32 188 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.426, i32 0, i32 0), i32 20, i32 189 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.427, i32 0, i32 0), i32 20, i32 190 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.428, i32 0, i32 0), i32 20, i32 191 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.429, i32 0, i32 0), i32 20, i32 192 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.430, i32 0, i32 0), i32 20, i32 339 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.431, i32 0, i32 0), i32 20, i32 324 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.432, i32 0, i32 0), i32 20, i32 193 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.433, i32 0, i32 0), i32 20, i32 194 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.434, i32 0, i32 0), i32 20, i32 195 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i32 0, i32 0), i32 20, i32 196 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.436, i32 0, i32 0), i32 20, i32 197 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.437, i32 0, i32 0), i32 20, i32 344 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.438, i32 0, i32 0), i32 20, i32 297 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.439, i32 0, i32 0), i32 20, i32 327 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.440, i32 0, i32 0), i32 20, i32 198 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.441, i32 0, i32 0), i32 20, i32 227 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.442, i32 0, i32 0), i32 20, i32 270 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.443, i32 0, i32 0), i32 20, i32 199 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.444, i32 0, i32 0), i32 20, i32 200 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.445, i32 0, i32 0), i32 20, i32 201 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.446, i32 0, i32 0), i32 20, i32 202 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.447, i32 0, i32 0), i32 20, i32 203 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.448, i32 0, i32 0), i32 20, i32 204 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.449, i32 0, i32 0), i32 20, i32 205 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.450, i32 0, i32 0), i32 20, i32 206 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.451, i32 0, i32 0), i32 20, i32 207 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.452, i32 0, i32 0), i32 20, i32 223 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.453, i32 0, i32 0), i32 20, i32 224 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.454, i32 0, i32 0), i32 20, i32 225 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.455, i32 0, i32 0), i32 20, i32 208 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.456, i32 0, i32 0), i32 20, i32 209 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.457, i32 0, i32 0), i32 20, i32 210 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.458, i32 0, i32 0), i32 20, i32 211 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.459, i32 0, i32 0), i32 20, i32 312 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.460, i32 0, i32 0), i32 20, i32 212 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.461, i32 0, i32 0), i32 20, i32 213 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.462, i32 0, i32 0), i32 20, i32 214 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.463, i32 0, i32 0), i32 20, i32 298 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.464, i32 0, i32 0), i32 20, i32 335 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.465, i32 0, i32 0), i32 20, i32 336 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.466, i32 0, i32 0), i32 20, i32 337 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.467, i32 0, i32 0), i32 20, i32 215 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.468, i32 0, i32 0), i32 20, i32 342 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.469, i32 0, i32 0), i32 20, i32 216 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.470, i32 0, i32 0), i32 20, i32 217 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.471, i32 0, i32 0), i32 20, i32 218 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.472, i32 0, i32 0), i32 20, i32 345 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.473, i32 0, i32 0), i32 20, i32 275 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.474, i32 0, i32 0), i32 20, i32 277 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.475, i32 0, i32 0), i32 20, i32 219 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.476, i32 0, i32 0), i32 20, i32 220 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.477, i32 0, i32 0), i32 20, i32 221 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.478, i32 0, i32 0), i32 20, i32 299 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.479, i32 0, i32 0), i32 20, i32 321 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.480, i32 0, i32 0), i32 20, i32 319 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.481, i32 0, i32 0), i32 20, i32 320 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.482, i32 0, i32 0), i32 20, i32 300 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.483, i32 0, i32 0), i32 20, i32 222 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.484, i32 0, i32 0), i32 20, i32 1042 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.485, i32 0, i32 0), i32 20, i32 1020 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.486, i32 0, i32 0), i32 20, i32 1045 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.487, i32 0, i32 0), i32 20, i32 1044 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.488, i32 0, i32 0), i32 20, i32 1046 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.489, i32 0, i32 0), i32 20, i32 1030 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.490, i32 0, i32 0), i32 20, i32 1040 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.491, i32 0, i32 0), i32 20, i32 1047 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.492, i32 0, i32 0), i32 20, i32 1041 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.493, i32 0, i32 0), i32 20, i32 1010 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.494, i32 0, i32 0), i32 20, i32 1043 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.495, i32 0, i32 0), i32 20, i32 228 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.496, i32 0, i32 0), i32 20, i32 229 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.497, i32 0, i32 0), i32 20, i32 230 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.498, i32 0, i32 0), i32 20, i32 301 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.499, i32 0, i32 0), i32 20, i32 302 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.500, i32 0, i32 0), i32 20, i32 273 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.501, i32 0, i32 0), i32 20, i32 303 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.502, i32 0, i32 0), i32 20, i32 231 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.503, i32 0, i32 0), i32 20, i32 1049 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.504, i32 0, i32 0), i32 20, i32 1050 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.505, i32 0, i32 0), i32 20, i32 1021 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.506, i32 0, i32 0), i32 20, i32 1051 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.507, i32 0, i32 0), i32 20, i32 1060 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.508, i32 0, i32 0), i32 20, i32 1071 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.509, i32 0, i32 0), i32 20, i32 1080 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.510, i32 0, i32 0), i32 20, i32 1100 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.511, i32 0, i32 0), i32 20, i32 1070 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.512, i32 0, i32 0), i32 20, i32 1022 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.513, i32 0, i32 0), i32 20, i32 1048 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.514, i32 0, i32 0), i32 20, i32 1090 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.515, i32 0, i32 0), i32 20, i32 1114 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.516, i32 0, i32 0), i32 20, i32 1113 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.517, i32 0, i32 0), i32 20, i32 1111 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.518, i32 0, i32 0), i32 20, i32 1112 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.519, i32 0, i32 0), i32 20, i32 1110 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.520, i32 0, i32 0), i32 20, i32 232 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.521, i32 0, i32 0), i32 20, i32 157 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.522, i32 0, i32 0), i32 20, i32 233 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.523, i32 0, i32 0), i32 20, i32 234 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.524, i32 0, i32 0), i32 20, i32 235 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.525, i32 0, i32 0), i32 20, i32 236 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.526, i32 0, i32 0), i32 20, i32 313 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.527, i32 0, i32 0), i32 20, i32 237 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.528, i32 0, i32 0), i32 20, i32 238 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.529, i32 0, i32 0), i32 20, i32 314 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.530, i32 0, i32 0), i32 20, i32 239 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.531, i32 0, i32 0), i32 20, i32 240 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.532, i32 0, i32 0), i32 20, i32 241 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.533, i32 0, i32 0), i32 20, i32 242 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.534, i32 0, i32 0), i32 20, i32 243 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.535, i32 0, i32 0), i32 20, i32 244 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.536, i32 0, i32 0), i32 20, i32 245 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.537, i32 0, i32 0), i32 20, i32 276 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.538, i32 0, i32 0), i32 20, i32 246 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.539, i32 0, i32 0), i32 20, i32 247 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.540, i32 0, i32 0), i32 20, i32 248 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.541, i32 0, i32 0), i32 20, i32 249 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.542, i32 0, i32 0), i32 20, i32 250 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.543, i32 0, i32 0), i32 20, i32 251 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.544, i32 0, i32 0), i32 20, i32 252 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.545, i32 0, i32 0), i32 20, i32 253 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.546, i32 0, i32 0), i32 20, i32 254 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.547, i32 0, i32 0), i32 20, i32 255 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.548, i32 0, i32 0), i32 20, i32 338 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.289, i32 0, i32 0), i32 20, i32 256 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.549, i32 0, i32 0), i32 20, i32 257 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.550, i32 0, i32 0), i32 20, i32 326 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.551, i32 0, i32 0), i32 20, i32 315 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.552, i32 0, i32 0), i32 20, i32 258 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.553, i32 0, i32 0), i32 20, i32 259 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.554, i32 0, i32 0), i32 20, i32 329 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.555, i32 0, i32 0), i32 20, i32 260 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.556, i32 0, i32 0), i32 20, i32 261 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.557, i32 0, i32 0), i32 20, i32 262 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.558, i32 0, i32 0), i32 20, i32 263 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.559, i32 0, i32 0), i32 20, i32 264 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.560, i32 0, i32 0), i32 20, i32 265 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.561, i32 0, i32 0), i32 20, i32 266 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.562, i32 0, i32 0), i32 20, i32 267 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.563, i32 0, i32 0), i32 20, i32 268 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.564, i32 0, i32 0), i32 20, i32 269 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.565, i32 0, i32 0), i32 11, i32 100 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.566, i32 0, i32 0), i32 11, i32 118 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.567, i32 0, i32 0), i32 11, i32 114 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.568, i32 0, i32 0), i32 11, i32 101 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.569, i32 0, i32 0), i32 11, i32 102 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.570, i32 0, i32 0), i32 11, i32 113 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.571, i32 0, i32 0), i32 11, i32 119 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.378, i32 0, i32 0), i32 11, i32 123 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.572, i32 0, i32 0), i32 11, i32 115 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.573, i32 0, i32 0), i32 11, i32 116 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.574, i32 0, i32 0), i32 11, i32 103 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.575, i32 0, i32 0), i32 11, i32 104 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.576, i32 0, i32 0), i32 11, i32 124 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.577, i32 0, i32 0), i32 11, i32 105 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.578, i32 0, i32 0), i32 11, i32 125 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.579, i32 0, i32 0), i32 11, i32 126 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.580, i32 0, i32 0), i32 11, i32 106 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.581, i32 0, i32 0), i32 11, i32 107 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.582, i32 0, i32 0), i32 11, i32 108 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.583, i32 0, i32 0), i32 11, i32 117 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.584, i32 0, i32 0), i32 11, i32 109 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.585, i32 0, i32 0), i32 11, i32 121 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.586, i32 0, i32 0), i32 11, i32 120 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.587, i32 0, i32 0), i32 11, i32 111 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.588, i32 0, i32 0), i32 11, i32 112 }, %struct.py_ssl_error_code { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.589, i32 0, i32 0), i32 11, i32 122 }, %struct.py_ssl_error_code zeroinitializer], align 16
@.str.77 = private unnamed_addr constant [3 x i8] c"ii\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"err_codes_to_names\00", align 1
@.str.79 = private unnamed_addr constant [19 x i8] c"err_names_to_codes\00", align 1
@lib_codes_to_names = internal global %struct._object* null, align 8
@library_codes = internal global [4 x %struct.py_ssl_library_code] [%struct.py_ssl_library_code { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.590, i32 0, i32 0), i32 9 }, %struct.py_ssl_library_code { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.591, i32 0, i32 0), i32 20 }, %struct.py_ssl_library_code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.592, i32 0, i32 0), i32 11 }, %struct.py_ssl_library_code zeroinitializer], align 16
@.str.80 = private unnamed_addr constant [19 x i8] c"lib_codes_to_names\00", align 1
@.str.81 = private unnamed_addr constant [23 x i8] c"OPENSSL_VERSION_NUMBER\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"IIIII\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"OPENSSL_VERSION_INFO\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"OPENSSL_VERSION\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"_OPENSSL_API_VERSION\00", align 1
@.str.86 = private unnamed_addr constant [17 x i8] c"_ssl._SSLContext\00", align 1
@context_methods = internal global [13 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @context_wrap_socket to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @set_ciphers to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @_set_npn_protocols to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.90, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @load_cert_chain to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.91, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @load_dh_params to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @load_verify_locations to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @session_stats to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.94, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @set_default_verify_paths to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @set_ecdh_curve to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.96, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*)* @set_servername_callback to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([349 x i8], [349 x i8]* @PySSL_set_servername_callback_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*)* @cert_store_stats to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([316 x i8], [316 x i8]* @PySSL_get_stats_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @get_ca_certs to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([305 x i8], [305 x i8]* @PySSL_get_ca_certs_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@context_getsetlist = internal global [5 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.177, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PySSLContext*, i8*)* @get_check_hostname to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_check_hostname to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PySSLContext*, i8*)* @get_options to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_options to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.179, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PySSLContext*, i8*)* @get_verify_flags to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_verify_flags to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.180, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PySSLContext*, i8*)* @get_verify_mode to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_verify_mode to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.87 = private unnamed_addr constant [13 x i8] c"_wrap_socket\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"set_ciphers\00", align 1
@.str.89 = private unnamed_addr constant [19 x i8] c"_set_npn_protocols\00", align 1
@.str.90 = private unnamed_addr constant [16 x i8] c"load_cert_chain\00", align 1
@.str.91 = private unnamed_addr constant [15 x i8] c"load_dh_params\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"load_verify_locations\00", align 1
@.str.93 = private unnamed_addr constant [14 x i8] c"session_stats\00", align 1
@.str.94 = private unnamed_addr constant [25 x i8] c"set_default_verify_paths\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"set_ecdh_curve\00", align 1
@.str.96 = private unnamed_addr constant [24 x i8] c"set_servername_callback\00", align 1
@PySSL_set_servername_callback_doc = internal global [349 x i8] c"set_servername_callback(method)\0A\0AThis sets a callback that will be called when a server name is provided by\0Athe SSL/TLS client in the SNI extension.\0A\0AIf the argument is None then the callback is disabled. The method is called\0Awith the SSLSocket, the server name as a string, and the SSLContext object.\0ASee RFC 6066 for details of the SNI extension.\00", align 16
@.str.97 = private unnamed_addr constant [17 x i8] c"cert_store_stats\00", align 1
@PySSL_get_stats_doc = internal global [316 x i8] c"cert_store_stats() -> {'crl': int, 'x509_ca': int, 'x509': int}\0A\0AReturns quantities of loaded X.509 certificates. X.509 certificates with a\0ACA extension and certificate revocation lists inside the context's cert\0Astore.\0ANOTE: Certificates in a capath directory aren't loaded unless they have\0Abeen used at least once.\00", align 16
@.str.98 = private unnamed_addr constant [13 x i8] c"get_ca_certs\00", align 1
@PySSL_get_ca_certs_doc = internal global [305 x i8] c"get_ca_certs(binary_form=False) -> list of loaded certificate\0A\0AReturns a list of dicts with information of loaded CA certs. If the\0Aoptional argument is True, returns a DER-encoded copy of the CA certificate.\0ANOTE: Certificates in a capath directory aren't loaded unless they have\0Abeen used at least once.\00", align 16
@.str.99 = private unnamed_addr constant [5 x i8] c"sock\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"server_side\00", align 1
@.str.101 = private unnamed_addr constant [16 x i8] c"server_hostname\00", align 1
@context_wrap_socket.kwlist = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.101, i32 0, i32 0), i8* null], align 16
@.str.102 = private unnamed_addr constant [20 x i8] c"O!i|O!:_wrap_socket\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.103 = private unnamed_addr constant [19 x i8] c"O!iet:_wrap_socket\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"idna\00", align 1
@_ssl_locks_count = internal global i32 0, align 4
@.str.105 = private unnamed_addr constant [14 x i8] c"s:set_ciphers\00", align 1
@.str.106 = private unnamed_addr constant [27 x i8] c"No cipher can be selected.\00", align 1
@.str.107 = private unnamed_addr constant [21 x i8] c"y*:set_npn_protocols\00", align 1
@.str.108 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"certfile\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"keyfile\00", align 1
@.str.111 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@load_cert_chain.kwlist = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i32 0, i32 0), i8* null], align 16
@.str.112 = private unnamed_addr constant [21 x i8] c"O|OO:load_cert_chain\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.113 = private unnamed_addr constant [43 x i8] c"certfile should be a valid filesystem path\00", align 1
@.str.114 = private unnamed_addr constant [42 x i8] c"keyfile should be a valid filesystem path\00", align 1
@.str.115 = private unnamed_addr constant [40 x i8] c"password should be a string or callable\00", align 1
@PyExc_IOError = external global %struct._object*, align 8
@.str.116 = private unnamed_addr constant [69 x i8] c"/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_ssl.c\00", align 1
@PyByteArray_Type = external global %struct._typeobject, align 8
@_PyByteArray_empty_string = external global [0 x i8], align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.117 = private unnamed_addr constant [40 x i8] c"password cannot be longer than %d bytes\00", align 1
@PyExc_MemoryError = external global %struct._object*, align 8
@.str.118 = private unnamed_addr constant [35 x i8] c"unable to allocate password buffer\00", align 1
@.str.119 = private unnamed_addr constant [39 x i8] c"password callback must return a string\00", align 1
@fill_and_set_sslerror.PyId_reason = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i32 0, i32 0), %struct._object* null }, align 8
@.str.120 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@fill_and_set_sslerror.PyId_library = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.121, i32 0, i32 0), %struct._object* null }, align 8
@.str.121 = private unnamed_addr constant [8 x i8] c"library\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.123 = private unnamed_addr constant [24 x i8] c"[%S: %S] %s (_ssl.c:%d)\00", align 1
@.str.124 = private unnamed_addr constant [20 x i8] c"[%S] %s (_ssl.c:%d)\00", align 1
@.str.125 = private unnamed_addr constant [15 x i8] c"%s (_ssl.c:%d)\00", align 1
@.str.126 = private unnamed_addr constant [3 x i8] c"iN\00", align 1
@.str.127 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.128 = private unnamed_addr constant [7 x i8] c"cafile\00", align 1
@.str.129 = private unnamed_addr constant [7 x i8] c"capath\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"cadata\00", align 1
@load_verify_locations.kwlist = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i8* null], align 16
@.str.131 = private unnamed_addr constant [27 x i8] c"|OOO:load_verify_locations\00", align 1
@.str.132 = private unnamed_addr constant [48 x i8] c"cafile, capath and cadata cannot be all omitted\00", align 1
@.str.133 = private unnamed_addr constant [41 x i8] c"cafile should be a valid filesystem path\00", align 1
@.str.134 = private unnamed_addr constant [41 x i8] c"capath should be a valid filesystem path\00", align 1
@.str.135 = private unnamed_addr constant [61 x i8] c"cadata should be a contiguous buffer with a single dimension\00", align 1
@.str.136 = private unnamed_addr constant [55 x i8] c"cadata should be a ASCII string or a bytes-like object\00", align 1
@.str.137 = private unnamed_addr constant [23 x i8] c"Empty certificate data\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.138 = private unnamed_addr constant [30 x i8] c"Certificate data is too long.\00", align 1
@.str.139 = private unnamed_addr constant [22 x i8] c"Can't allocate buffer\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"connect_good\00", align 1
@.str.143 = private unnamed_addr constant [20 x i8] c"connect_renegotiate\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@.str.145 = private unnamed_addr constant [12 x i8] c"accept_good\00", align 1
@.str.146 = private unnamed_addr constant [19 x i8] c"accept_renegotiate\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"hits\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"misses\00", align 1
@.str.149 = private unnamed_addr constant [9 x i8] c"timeouts\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c"cache_full\00", align 1
@.str.151 = private unnamed_addr constant [31 x i8] c"unknown elliptic curve name %R\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.153 = private unnamed_addr constant [22 x i8] c"not a callable object\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"{sisisi}\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"x509\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"crl\00", align 1
@.str.157 = private unnamed_addr constant [8 x i8] c"x509_ca\00", align 1
@.str.158 = private unnamed_addr constant [12 x i8] c"binary_form\00", align 1
@get_ca_certs.kwlist = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.158, i32 0, i32 0), i8* null], align 16
@.str.159 = private unnamed_addr constant [16 x i8] c"|p:get_ca_certs\00", align 1
@.str.160 = private unnamed_addr constant [8 x i8] c"subject\00", align 1
@.str.161 = private unnamed_addr constant [7 x i8] c"issuer\00", align 1
@.str.162 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.163 = private unnamed_addr constant [13 x i8] c"serialNumber\00", align 1
@.str.164 = private unnamed_addr constant [10 x i8] c"notBefore\00", align 1
@.str.165 = private unnamed_addr constant [9 x i8] c"notAfter\00", align 1
@.str.166 = private unnamed_addr constant [15 x i8] c"subjectAltName\00", align 1
@.str.167 = private unnamed_addr constant [5 x i8] c"OCSP\00", align 1
@.str.168 = private unnamed_addr constant [10 x i8] c"caIssuers\00", align 1
@.str.169 = private unnamed_addr constant [22 x i8] c"crlDistributionPoints\00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.171 = private unnamed_addr constant [56 x i8] c"_ssl.c:808: No method for internalizing subjectAltName!\00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"DirName\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"email\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"DNS\00", align 1
@.str.175 = private unnamed_addr constant [4 x i8] c"URI\00", align 1
@PyExc_RuntimeWarning = external global %struct._object*, align 8
@.str.176 = private unnamed_addr constant [29 x i8] c"Unknown general name type %d\00", align 1
@.str.177 = private unnamed_addr constant [15 x i8] c"check_hostname\00", align 1
@.str.178 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@.str.179 = private unnamed_addr constant [13 x i8] c"verify_flags\00", align 1
@.str.180 = private unnamed_addr constant [12 x i8] c"verify_mode\00", align 1
@.str.181 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.182 = private unnamed_addr constant [78 x i8] c"check_hostname needs a SSL context with either CERT_OPTIONAL or CERT_REQUIRED\00", align 1
@.str.183 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.184 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.185 = private unnamed_addr constant [50 x i8] c"invalid return value from SSL_CTX_get_verify_mode\00", align 1
@.str.186 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.187 = private unnamed_addr constant [30 x i8] c"invalid value for verify_mode\00", align 1
@.str.188 = private unnamed_addr constant [68 x i8] c"Cannot set verify_mode to CERT_NONE when check_hostname is enabled.\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@context_new.kwlist = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i32 0, i32 0), i8* null], align 16
@.str.190 = private unnamed_addr constant [14 x i8] c"i:_SSLContext\00", align 1
@.str.191 = private unnamed_addr constant [25 x i8] c"invalid protocol version\00", align 1
@.str.192 = private unnamed_addr constant [31 x i8] c"failed to allocate SSL context\00", align 1
@.str.193 = private unnamed_addr constant [7 x i8] c"Python\00", align 1
@.str.194 = private unnamed_addr constant [16 x i8] c"_ssl._SSLSocket\00", align 1
@PySSLMethods = internal global [11 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.195, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_SSLdo_handshake to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*, %struct._object*)* @PySSL_SSLwrite to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @PySSL_SSLwrite_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*, %struct._object*)* @PySSL_SSLread to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @PySSL_SSLread_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.198, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_SSLpending to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @PySSL_SSLpending_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.199, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*, %struct._object*)* @PySSL_peercert to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([478 x i8], [478 x i8]* @PySSL_peercert_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_cipher to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.201, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_selected_npn_protocol to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.202, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_compression to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.203, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_SSLshutdown to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @PySSL_SSLshutdown_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PySSLSocket*)* @PySSL_tls_unique_cb to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @PySSL_tls_unique_cb_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@ssl_getsetlist = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct.PySSLContext* (%struct.PySSLSocket*, i8*)* @PySSL_get_context to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PySSLSocket*, %struct._object*, i8*)* @PySSL_set_context to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([307 x i8], [307 x i8]* @PySSL_set_context_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.195 = private unnamed_addr constant [13 x i8] c"do_handshake\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@PySSL_SSLwrite_doc = internal global [96 x i8] c"write(s) -> len\0A\0AWrites the string s into the SSL object.  Returns the number\0Aof bytes written.\00", align 16
@.str.197 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@PySSL_SSLread_doc = internal global [65 x i8] c"read([len]) -> string\0A\0ARead up to len bytes from the SSL socket.\00", align 16
@.str.198 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@PySSL_SSLpending_doc = internal global [114 x i8] c"pending() -> count\0A\0AReturns the number of already decrypted bytes available for read,\0Apending on the connection.\0A\00", align 16
@.str.199 = private unnamed_addr constant [17 x i8] c"peer_certificate\00", align 1
@PySSL_peercert_doc = internal global [478 x i8] c"peer_certificate([der=False]) -> certificate\0A\0AReturns the certificate for the peer.  If no certificate was provided,\0Areturns None.  If a certificate was provided, but not validated, returns\0Aan empty dictionary.  Otherwise returns a dict containing information\0Aabout the peer certificate.\0A\0AIf the optional argument is True, returns a DER-encoded copy of the\0Apeer certificate, or None if no certificate was provided.  This will\0Areturn the certificate even if it wasn't validated.\00", align 16
@.str.200 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str.201 = private unnamed_addr constant [22 x i8] c"selected_npn_protocol\00", align 1
@.str.202 = private unnamed_addr constant [12 x i8] c"compression\00", align 1
@.str.203 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@PySSL_SSLshutdown_doc = internal global [118 x i8] c"shutdown(s) -> socket\0A\0ADoes the SSL shutdown handshake with the remote end, and returns\0Athe underlying socket object.\00", align 16
@.str.204 = private unnamed_addr constant [14 x i8] c"tls_unique_cb\00", align 1
@PySSL_tls_unique_cb_doc = internal global [157 x i8] c"tls_unique_cb() -> bytes\0A\0AReturns the 'tls-unique' channel binding data, as defined by RFC 5929.\0A\0AIf the TLS handshake is not yet complete, None is returned\00", align 16
@.str.205 = private unnamed_addr constant [34 x i8] c"Underlying socket connection gone\00", align 1
@.str.206 = private unnamed_addr constant [46 x i8] c"_ssl.c:582: The handshake operation timed out\00", align 1
@.str.207 = private unnamed_addr constant [47 x i8] c"_ssl.c:586: Underlying socket has been closed.\00", align 1
@.str.208 = private unnamed_addr constant [54 x i8] c"_ssl.c:590: Underlying socket too large for select().\00", align 1
@.str.209 = private unnamed_addr constant [41 x i8] c"TLS/SSL connection has been closed (EOF)\00", align 1
@.str.210 = private unnamed_addr constant [38 x i8] c"The operation did not complete (read)\00", align 1
@.str.211 = private unnamed_addr constant [39 x i8] c"The operation did not complete (write)\00", align 1
@.str.212 = private unnamed_addr constant [45 x i8] c"The operation did not complete (X509 lookup)\00", align 1
@.str.213 = private unnamed_addr constant [41 x i8] c"The operation did not complete (connect)\00", align 1
@.str.214 = private unnamed_addr constant [38 x i8] c"EOF occurred in violation of protocol\00", align 1
@.str.215 = private unnamed_addr constant [24 x i8] c"Some I/O error occurred\00", align 1
@.str.216 = private unnamed_addr constant [38 x i8] c"A failure in the SSL library occurred\00", align 1
@.str.217 = private unnamed_addr constant [19 x i8] c"Invalid error code\00", align 1
@.str.218 = private unnamed_addr constant [9 x i8] c"y*:write\00", align 1
@.str.219 = private unnamed_addr constant [28 x i8] c"string longer than %d bytes\00", align 1
@.str.220 = private unnamed_addr constant [30 x i8] c"The write operation timed out\00", align 1
@.str.221 = private unnamed_addr constant [35 x i8] c"Underlying socket has been closed.\00", align 1
@.str.222 = private unnamed_addr constant [42 x i8] c"Underlying socket too large for select().\00", align 1
@.str.223 = private unnamed_addr constant [10 x i8] c"i|w*:read\00", align 1
@.str.224 = private unnamed_addr constant [38 x i8] c"maximum length can't fit in a C 'int'\00", align 1
@.str.225 = private unnamed_addr constant [29 x i8] c"The read operation timed out\00", align 1
@.str.226 = private unnamed_addr constant [20 x i8] c"|p:peer_certificate\00", align 1
@.str.227 = private unnamed_addr constant [23 x i8] c"handshake not done yet\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@PySSL_set_context_doc = internal global [307 x i8] c"_setter_context(ctx)\0AThis changes the context associated with the SSLSocket. This is typically\0Aused from within a callback function set by the set_servername_callback\0Aon the SSLContext to change the certificate information associated with the\0ASSLSocket before the cryptographic exchange handshake messages\0A\00", align 16
@.str.229 = private unnamed_addr constant [31 x i8] c"The value must be a SSLContext\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"_ssl\00", align 1
@module_doc = internal global [91 x i8] c"Implementation module for SSL socket operations.  See the socket module\0Afor documentation.\00", align 16
@PySSL_methods = internal global [10 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.231, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PySSL_test_decode_certificate, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.232, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_add, i32 1, i8* getelementptr inbounds ([154 x i8], [154 x i8]* @PySSL_RAND_add_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.233, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_bytes, i32 1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @PySSL_RAND_bytes_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.234, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_pseudo_bytes, i32 1, i8* getelementptr inbounds ([160 x i8], [160 x i8]* @PySSL_RAND_pseudo_bytes_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_egd, i32 1, i8* getelementptr inbounds ([222 x i8], [222 x i8]* @PySSL_RAND_egd_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.236, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @PySSL_RAND_status to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @PySSL_RAND_status_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.237, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @PySSL_get_default_verify_paths to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([229 x i8], [229 x i8]* @PySSL_get_default_verify_paths_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @PySSL_txt2obj to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([216 x i8], [216 x i8]* @PySSL_txt2obj_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.239, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PySSL_nid2obj, i32 1, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @PySSL_nid2obj_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.231 = private unnamed_addr constant [18 x i8] c"_test_decode_cert\00", align 1
@.str.232 = private unnamed_addr constant [9 x i8] c"RAND_add\00", align 1
@PySSL_RAND_add_doc = internal global [154 x i8] c"RAND_add(string, entropy)\0A\0AMix string into the OpenSSL PRNG state.  entropy (a float) is a lower\0Abound on the entropy contained in string.  See RFC 1750.\00", align 16
@.str.233 = private unnamed_addr constant [11 x i8] c"RAND_bytes\00", align 1
@PySSL_RAND_bytes_doc = internal global [81 x i8] c"RAND_bytes(n) -> bytes\0A\0AGenerate n cryptographically strong pseudo-random bytes.\00", align 16
@.str.234 = private unnamed_addr constant [18 x i8] c"RAND_pseudo_bytes\00", align 1
@PySSL_RAND_pseudo_bytes_doc = internal global [160 x i8] c"RAND_pseudo_bytes(n) -> (bytes, is_cryptographic)\0A\0AGenerate n pseudo-random bytes. is_cryptographic is True if the bytesgenerated are cryptographically strong.\00", align 16
@.str.235 = private unnamed_addr constant [9 x i8] c"RAND_egd\00", align 1
@PySSL_RAND_egd_doc = internal global [222 x i8] c"RAND_egd(path) -> bytes\0A\0AQueries the entropy gather daemon (EGD) on the socket named by 'path'.\0AReturns number of bytes read.  Raises SSLError if connection to EGD\0Afails or if it does not provide enough data to seed PRNG.\00", align 16
@.str.236 = private unnamed_addr constant [12 x i8] c"RAND_status\00", align 1
@PySSL_RAND_status_doc = internal global [202 x i8] c"RAND_status() -> 0 or 1\0A\0AReturns 1 if the OpenSSL PRNG has been seeded with enough data and 0 if not.\0AIt is necessary to seed the PRNG with RAND_add() on some platforms before\0Ausing the ssl() function.\00", align 16
@.str.237 = private unnamed_addr constant [25 x i8] c"get_default_verify_paths\00", align 1
@PySSL_get_default_verify_paths_doc = internal global [229 x i8] c"get_default_verify_paths() -> tuple\0A\0AReturn search paths and environment vars that are used by SSLContext's\0Aset_default_verify_paths() to load default CAs. The values are\0A'cert_file_env', 'cert_file', 'cert_dir_env', 'cert_dir'.\00", align 16
@.str.238 = private unnamed_addr constant [8 x i8] c"txt2obj\00", align 1
@PySSL_txt2obj_doc = internal global [216 x i8] c"txt2obj(txt, name=False) -> (nid, shortname, longname, oid)\0A\0ALookup NID, short name, long name and OID of an ASN1_OBJECT. By default\0Aobjects are looked up by OID. With name=True short and long name are also\0Amatched.\00", align 16
@.str.239 = private unnamed_addr constant [8 x i8] c"nid2obj\00", align 1
@PySSL_nid2obj_doc = internal global [117 x i8] c"nid2obj(nid) -> (nid, shortname, longname, oid)\0A\0ALookup NID, short name, long name and OID of an ASN1_OBJECT by NID.\00", align 16
@.str.240 = private unnamed_addr constant [27 x i8] c"O&:test_decode_certificate\00", align 1
@.str.241 = private unnamed_addr constant [33 x i8] c"Can't malloc memory to read file\00", align 1
@.str.242 = private unnamed_addr constant [16 x i8] c"Can't open file\00", align 1
@.str.243 = private unnamed_addr constant [32 x i8] c"Error decoding PEM-encoded file\00", align 1
@.str.244 = private unnamed_addr constant [13 x i8] c"s#d:RAND_add\00", align 1
@.str.245 = private unnamed_addr constant [13 x i8] c"i:RAND_bytes\00", align 1
@.str.246 = private unnamed_addr constant [21 x i8] c"num must be positive\00", align 1
@.str.247 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.248 = private unnamed_addr constant [5 x i8] c"(ks)\00", align 1
@.str.249 = private unnamed_addr constant [20 x i8] c"i:RAND_pseudo_bytes\00", align 1
@.str.250 = private unnamed_addr constant [12 x i8] c"O&:RAND_egd\00", align 1
@.str.251 = private unnamed_addr constant [73 x i8] c"EGD connection failed or EGD did not return enough data to seed the PRNG\00", align 1
@.str.252 = private unnamed_addr constant [5 x i8] c"NNNN\00", align 1
@.str.253 = private unnamed_addr constant [4 x i8] c"txt\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@PySSL_txt2obj.kwlist = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i32 0, i32 0), i8* null], align 16
@.str.255 = private unnamed_addr constant [12 x i8] c"s|p:txt2obj\00", align 1
@.str.256 = private unnamed_addr constant [24 x i8] c"unknown object '%.100s'\00", align 1
@.str.257 = private unnamed_addr constant [15 x i8] c"Unknown object\00", align 1
@.str.258 = private unnamed_addr constant [6 x i8] c"isss#\00", align 1
@.str.259 = private unnamed_addr constant [5 x i8] c"issO\00", align 1
@.str.260 = private unnamed_addr constant [10 x i8] c"i:nid2obj\00", align 1
@.str.261 = private unnamed_addr constant [22 x i8] c"NID must be positive.\00", align 1
@.str.262 = private unnamed_addr constant [15 x i8] c"unknown NID %i\00", align 1
@_ssl_locks = internal global i8** null, align 8
@SSLError_doc = internal global [45 x i8] c"An error occurred in the SSL implementation.\00", align 16
@.str.263 = private unnamed_addr constant [13 x i8] c"ssl.SSLError\00", align 1
@.str.264 = private unnamed_addr constant [18 x i8] c"BAD_BASE64_DECODE\00", align 1
@.str.265 = private unnamed_addr constant [12 x i8] c"BAD_DECRYPT\00", align 1
@.str.266 = private unnamed_addr constant [13 x i8] c"BAD_END_LINE\00", align 1
@.str.267 = private unnamed_addr constant [13 x i8] c"BAD_IV_CHARS\00", align 1
@.str.268 = private unnamed_addr constant [17 x i8] c"BAD_MAGIC_NUMBER\00", align 1
@.str.269 = private unnamed_addr constant [18 x i8] c"BAD_PASSWORD_READ\00", align 1
@.str.270 = private unnamed_addr constant [19 x i8] c"BAD_VERSION_NUMBER\00", align 1
@.str.271 = private unnamed_addr constant [18 x i8] c"BIO_WRITE_FAILURE\00", align 1
@.str.272 = private unnamed_addr constant [15 x i8] c"CIPHER_IS_NULL\00", align 1
@.str.273 = private unnamed_addr constant [29 x i8] c"ERROR_CONVERTING_PRIVATE_KEY\00", align 1
@.str.274 = private unnamed_addr constant [27 x i8] c"EXPECTING_PRIVATE_KEY_BLOB\00", align 1
@.str.275 = private unnamed_addr constant [26 x i8] c"EXPECTING_PUBLIC_KEY_BLOB\00", align 1
@.str.276 = private unnamed_addr constant [20 x i8] c"INCONSISTENT_HEADER\00", align 1
@.str.277 = private unnamed_addr constant [27 x i8] c"KEYBLOB_HEADER_PARSE_ERROR\00", align 1
@.str.278 = private unnamed_addr constant [18 x i8] c"KEYBLOB_TOO_SHORT\00", align 1
@.str.279 = private unnamed_addr constant [13 x i8] c"NOT_DEK_INFO\00", align 1
@.str.280 = private unnamed_addr constant [14 x i8] c"NOT_ENCRYPTED\00", align 1
@.str.281 = private unnamed_addr constant [14 x i8] c"NOT_PROC_TYPE\00", align 1
@.str.282 = private unnamed_addr constant [14 x i8] c"NO_START_LINE\00", align 1
@.str.283 = private unnamed_addr constant [26 x i8] c"PROBLEMS_GETTING_PASSWORD\00", align 1
@.str.284 = private unnamed_addr constant [18 x i8] c"PUBLIC_KEY_NO_RSA\00", align 1
@.str.285 = private unnamed_addr constant [19 x i8] c"PVK_DATA_TOO_SHORT\00", align 1
@.str.286 = private unnamed_addr constant [14 x i8] c"PVK_TOO_SHORT\00", align 1
@.str.287 = private unnamed_addr constant [9 x i8] c"READ_KEY\00", align 1
@.str.288 = private unnamed_addr constant [13 x i8] c"SHORT_HEADER\00", align 1
@.str.289 = private unnamed_addr constant [19 x i8] c"UNSUPPORTED_CIPHER\00", align 1
@.str.290 = private unnamed_addr constant [23 x i8] c"UNSUPPORTED_ENCRYPTION\00", align 1
@.str.291 = private unnamed_addr constant [27 x i8] c"UNSUPPORTED_KEY_COMPONENTS\00", align 1
@.str.292 = private unnamed_addr constant [22 x i8] c"APP_DATA_IN_HANDSHAKE\00", align 1
@.str.293 = private unnamed_addr constant [46 x i8] c"ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT\00", align 1
@.str.294 = private unnamed_addr constant [17 x i8] c"BAD_ALERT_RECORD\00", align 1
@.str.295 = private unnamed_addr constant [24 x i8] c"BAD_AUTHENTICATION_TYPE\00", align 1
@.str.296 = private unnamed_addr constant [23 x i8] c"BAD_CHANGE_CIPHER_SPEC\00", align 1
@.str.297 = private unnamed_addr constant [13 x i8] c"BAD_CHECKSUM\00", align 1
@.str.298 = private unnamed_addr constant [30 x i8] c"BAD_DATA_RETURNED_BY_CALLBACK\00", align 1
@.str.299 = private unnamed_addr constant [18 x i8] c"BAD_DECOMPRESSION\00", align 1
@.str.300 = private unnamed_addr constant [16 x i8] c"BAD_DH_G_LENGTH\00", align 1
@.str.301 = private unnamed_addr constant [22 x i8] c"BAD_DH_PUB_KEY_LENGTH\00", align 1
@.str.302 = private unnamed_addr constant [16 x i8] c"BAD_DH_P_LENGTH\00", align 1
@.str.303 = private unnamed_addr constant [18 x i8] c"BAD_DIGEST_LENGTH\00", align 1
@.str.304 = private unnamed_addr constant [18 x i8] c"BAD_DSA_SIGNATURE\00", align 1
@.str.305 = private unnamed_addr constant [13 x i8] c"BAD_ECC_CERT\00", align 1
@.str.306 = private unnamed_addr constant [20 x i8] c"BAD_ECDSA_SIGNATURE\00", align 1
@.str.307 = private unnamed_addr constant [12 x i8] c"BAD_ECPOINT\00", align 1
@.str.308 = private unnamed_addr constant [21 x i8] c"BAD_HANDSHAKE_LENGTH\00", align 1
@.str.309 = private unnamed_addr constant [18 x i8] c"BAD_HELLO_REQUEST\00", align 1
@.str.310 = private unnamed_addr constant [11 x i8] c"BAD_LENGTH\00", align 1
@.str.311 = private unnamed_addr constant [15 x i8] c"BAD_MAC_DECODE\00", align 1
@.str.312 = private unnamed_addr constant [15 x i8] c"BAD_MAC_LENGTH\00", align 1
@.str.313 = private unnamed_addr constant [17 x i8] c"BAD_MESSAGE_TYPE\00", align 1
@.str.314 = private unnamed_addr constant [18 x i8] c"BAD_PACKET_LENGTH\00", align 1
@.str.315 = private unnamed_addr constant [28 x i8] c"BAD_PROTOCOL_VERSION_NUMBER\00", align 1
@.str.316 = private unnamed_addr constant [29 x i8] c"BAD_PSK_IDENTITY_HINT_LENGTH\00", align 1
@.str.317 = private unnamed_addr constant [22 x i8] c"BAD_RESPONSE_ARGUMENT\00", align 1
@.str.318 = private unnamed_addr constant [16 x i8] c"BAD_RSA_DECRYPT\00", align 1
@.str.319 = private unnamed_addr constant [16 x i8] c"BAD_RSA_ENCRYPT\00", align 1
@.str.320 = private unnamed_addr constant [17 x i8] c"BAD_RSA_E_LENGTH\00", align 1
@.str.321 = private unnamed_addr constant [23 x i8] c"BAD_RSA_MODULUS_LENGTH\00", align 1
@.str.322 = private unnamed_addr constant [18 x i8] c"BAD_RSA_SIGNATURE\00", align 1
@.str.323 = private unnamed_addr constant [14 x i8] c"BAD_SIGNATURE\00", align 1
@.str.324 = private unnamed_addr constant [17 x i8] c"BAD_SSL_FILETYPE\00", align 1
@.str.325 = private unnamed_addr constant [26 x i8] c"BAD_SSL_SESSION_ID_LENGTH\00", align 1
@.str.326 = private unnamed_addr constant [10 x i8] c"BAD_STATE\00", align 1
@.str.327 = private unnamed_addr constant [16 x i8] c"BAD_WRITE_RETRY\00", align 1
@.str.328 = private unnamed_addr constant [12 x i8] c"BIO_NOT_SET\00", align 1
@.str.329 = private unnamed_addr constant [26 x i8] c"BLOCK_CIPHER_PAD_IS_WRONG\00", align 1
@.str.330 = private unnamed_addr constant [7 x i8] c"BN_LIB\00", align 1
@.str.331 = private unnamed_addr constant [22 x i8] c"CA_DN_LENGTH_MISMATCH\00", align 1
@.str.332 = private unnamed_addr constant [15 x i8] c"CA_DN_TOO_LONG\00", align 1
@.str.333 = private unnamed_addr constant [19 x i8] c"CCS_RECEIVED_EARLY\00", align 1
@.str.334 = private unnamed_addr constant [26 x i8] c"CERTIFICATE_VERIFY_FAILED\00", align 1
@.str.335 = private unnamed_addr constant [21 x i8] c"CERT_LENGTH_MISMATCH\00", align 1
@.str.336 = private unnamed_addr constant [23 x i8] c"CHALLENGE_IS_DIFFERENT\00", align 1
@.str.337 = private unnamed_addr constant [25 x i8] c"CIPHER_CODE_WRONG_LENGTH\00", align 1
@.str.338 = private unnamed_addr constant [27 x i8] c"CIPHER_OR_HASH_UNAVAILABLE\00", align 1
@.str.339 = private unnamed_addr constant [23 x i8] c"CIPHER_TABLE_SRC_ERROR\00", align 1
@.str.340 = private unnamed_addr constant [19 x i8] c"CLIENTHELLO_TLSEXT\00", align 1
@.str.341 = private unnamed_addr constant [27 x i8] c"COMPRESSED_LENGTH_TOO_LONG\00", align 1
@.str.342 = private unnamed_addr constant [21 x i8] c"COMPRESSION_DISABLED\00", align 1
@.str.343 = private unnamed_addr constant [20 x i8] c"COMPRESSION_FAILURE\00", align 1
@.str.344 = private unnamed_addr constant [40 x i8] c"COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE\00", align 1
@.str.345 = private unnamed_addr constant [26 x i8] c"COMPRESSION_LIBRARY_ERROR\00", align 1
@.str.346 = private unnamed_addr constant [27 x i8] c"CONNECTION_ID_IS_DIFFERENT\00", align 1
@.str.347 = private unnamed_addr constant [24 x i8] c"CONNECTION_TYPE_NOT_SET\00", align 1
@.str.348 = private unnamed_addr constant [16 x i8] c"COOKIE_MISMATCH\00", align 1
@.str.349 = private unnamed_addr constant [30 x i8] c"DATA_BETWEEN_CCS_AND_FINISHED\00", align 1
@.str.350 = private unnamed_addr constant [21 x i8] c"DATA_LENGTH_TOO_LONG\00", align 1
@.str.351 = private unnamed_addr constant [18 x i8] c"DECRYPTION_FAILED\00", align 1
@.str.352 = private unnamed_addr constant [36 x i8] c"DECRYPTION_FAILED_OR_BAD_RECORD_MAC\00", align 1
@.str.353 = private unnamed_addr constant [32 x i8] c"DH_PUBLIC_VALUE_LENGTH_IS_WRONG\00", align 1
@.str.354 = private unnamed_addr constant [20 x i8] c"DIGEST_CHECK_FAILED\00", align 1
@.str.355 = private unnamed_addr constant [21 x i8] c"DTLS_MESSAGE_TOO_BIG\00", align 1
@.str.356 = private unnamed_addr constant [25 x i8] c"DUPLICATE_COMPRESSION_ID\00", align 1
@.str.357 = private unnamed_addr constant [31 x i8] c"ECC_CERT_NOT_FOR_KEY_AGREEMENT\00", align 1
@.str.358 = private unnamed_addr constant [25 x i8] c"ECC_CERT_NOT_FOR_SIGNING\00", align 1
@.str.359 = private unnamed_addr constant [35 x i8] c"ECC_CERT_SHOULD_HAVE_RSA_SIGNATURE\00", align 1
@.str.360 = private unnamed_addr constant [36 x i8] c"ECC_CERT_SHOULD_HAVE_SHA1_SIGNATURE\00", align 1
@.str.361 = private unnamed_addr constant [29 x i8] c"ECGROUP_TOO_LARGE_FOR_CIPHER\00", align 1
@.str.362 = private unnamed_addr constant [26 x i8] c"ENCRYPTED_LENGTH_TOO_LONG\00", align 1
@.str.363 = private unnamed_addr constant [29 x i8] c"ERROR_GENERATING_TMP_RSA_KEY\00", align 1
@.str.364 = private unnamed_addr constant [30 x i8] c"ERROR_IN_RECEIVED_CIPHER_LIST\00", align 1
@.str.365 = private unnamed_addr constant [23 x i8] c"EXCESSIVE_MESSAGE_SIZE\00", align 1
@.str.366 = private unnamed_addr constant [22 x i8] c"EXTRA_DATA_IN_MESSAGE\00", align 1
@.str.367 = private unnamed_addr constant [23 x i8] c"GOT_A_FIN_BEFORE_A_CCS\00", align 1
@.str.368 = private unnamed_addr constant [20 x i8] c"HTTPS_PROXY_REQUEST\00", align 1
@.str.369 = private unnamed_addr constant [13 x i8] c"HTTP_REQUEST\00", align 1
@.str.370 = private unnamed_addr constant [16 x i8] c"ILLEGAL_PADDING\00", align 1
@.str.371 = private unnamed_addr constant [25 x i8] c"INCONSISTENT_COMPRESSION\00", align 1
@.str.372 = private unnamed_addr constant [25 x i8] c"INVALID_CHALLENGE_LENGTH\00", align 1
@.str.373 = private unnamed_addr constant [16 x i8] c"INVALID_COMMAND\00", align 1
@.str.374 = private unnamed_addr constant [30 x i8] c"INVALID_COMPRESSION_ALGORITHM\00", align 1
@.str.375 = private unnamed_addr constant [16 x i8] c"INVALID_PURPOSE\00", align 1
@.str.376 = private unnamed_addr constant [24 x i8] c"INVALID_STATUS_RESPONSE\00", align 1
@.str.377 = private unnamed_addr constant [27 x i8] c"INVALID_TICKET_KEYS_LENGTH\00", align 1
@.str.378 = private unnamed_addr constant [14 x i8] c"INVALID_TRUST\00", align 1
@.str.379 = private unnamed_addr constant [17 x i8] c"KEY_ARG_TOO_LONG\00", align 1
@.str.380 = private unnamed_addr constant [5 x i8] c"KRB5\00", align 1
@.str.381 = private unnamed_addr constant [16 x i8] c"KRB5_C_CC_PRINC\00", align 1
@.str.382 = private unnamed_addr constant [16 x i8] c"KRB5_C_GET_CRED\00", align 1
@.str.383 = private unnamed_addr constant [12 x i8] c"KRB5_C_INIT\00", align 1
@.str.384 = private unnamed_addr constant [14 x i8] c"KRB5_C_MK_REQ\00", align 1
@.str.385 = private unnamed_addr constant [18 x i8] c"KRB5_S_BAD_TICKET\00", align 1
@.str.386 = private unnamed_addr constant [12 x i8] c"KRB5_S_INIT\00", align 1
@.str.387 = private unnamed_addr constant [14 x i8] c"KRB5_S_RD_REQ\00", align 1
@.str.388 = private unnamed_addr constant [19 x i8] c"KRB5_S_TKT_EXPIRED\00", align 1
@.str.389 = private unnamed_addr constant [15 x i8] c"KRB5_S_TKT_NYV\00", align 1
@.str.390 = private unnamed_addr constant [16 x i8] c"KRB5_S_TKT_SKEW\00", align 1
@.str.391 = private unnamed_addr constant [16 x i8] c"LENGTH_MISMATCH\00", align 1
@.str.392 = private unnamed_addr constant [17 x i8] c"LENGTH_TOO_SHORT\00", align 1
@.str.393 = private unnamed_addr constant [12 x i8] c"LIBRARY_BUG\00", align 1
@.str.394 = private unnamed_addr constant [23 x i8] c"LIBRARY_HAS_NO_CIPHERS\00", align 1
@.str.395 = private unnamed_addr constant [17 x i8] c"MESSAGE_TOO_LONG\00", align 1
@.str.396 = private unnamed_addr constant [20 x i8] c"MISSING_DH_DSA_CERT\00", align 1
@.str.397 = private unnamed_addr constant [15 x i8] c"MISSING_DH_KEY\00", align 1
@.str.398 = private unnamed_addr constant [20 x i8] c"MISSING_DH_RSA_CERT\00", align 1
@.str.399 = private unnamed_addr constant [25 x i8] c"MISSING_DSA_SIGNING_CERT\00", align 1
@.str.400 = private unnamed_addr constant [26 x i8] c"MISSING_EXPORT_TMP_DH_KEY\00", align 1
@.str.401 = private unnamed_addr constant [27 x i8] c"MISSING_EXPORT_TMP_RSA_KEY\00", align 1
@.str.402 = private unnamed_addr constant [24 x i8] c"MISSING_RSA_CERTIFICATE\00", align 1
@.str.403 = private unnamed_addr constant [28 x i8] c"MISSING_RSA_ENCRYPTING_CERT\00", align 1
@.str.404 = private unnamed_addr constant [25 x i8] c"MISSING_RSA_SIGNING_CERT\00", align 1
@.str.405 = private unnamed_addr constant [19 x i8] c"MISSING_TMP_DH_KEY\00", align 1
@.str.406 = private unnamed_addr constant [21 x i8] c"MISSING_TMP_ECDH_KEY\00", align 1
@.str.407 = private unnamed_addr constant [20 x i8] c"MISSING_TMP_RSA_KEY\00", align 1
@.str.408 = private unnamed_addr constant [21 x i8] c"MISSING_TMP_RSA_PKEY\00", align 1
@.str.409 = private unnamed_addr constant [23 x i8] c"MISSING_VERIFY_MESSAGE\00", align 1
@.str.410 = private unnamed_addr constant [25 x i8] c"NON_SSLV2_INITIAL_PACKET\00", align 1
@.str.411 = private unnamed_addr constant [25 x i8] c"NO_CERTIFICATES_RETURNED\00", align 1
@.str.412 = private unnamed_addr constant [24 x i8] c"NO_CERTIFICATE_ASSIGNED\00", align 1
@.str.413 = private unnamed_addr constant [24 x i8] c"NO_CERTIFICATE_RETURNED\00", align 1
@.str.414 = private unnamed_addr constant [19 x i8] c"NO_CERTIFICATE_SET\00", align 1
@.str.415 = private unnamed_addr constant [25 x i8] c"NO_CERTIFICATE_SPECIFIED\00", align 1
@.str.416 = private unnamed_addr constant [21 x i8] c"NO_CIPHERS_AVAILABLE\00", align 1
@.str.417 = private unnamed_addr constant [18 x i8] c"NO_CIPHERS_PASSED\00", align 1
@.str.418 = private unnamed_addr constant [21 x i8] c"NO_CIPHERS_SPECIFIED\00", align 1
@.str.419 = private unnamed_addr constant [15 x i8] c"NO_CIPHER_LIST\00", align 1
@.str.420 = private unnamed_addr constant [16 x i8] c"NO_CIPHER_MATCH\00", align 1
@.str.421 = private unnamed_addr constant [22 x i8] c"NO_CLIENT_CERT_METHOD\00", align 1
@.str.422 = private unnamed_addr constant [24 x i8] c"NO_CLIENT_CERT_RECEIVED\00", align 1
@.str.423 = private unnamed_addr constant [25 x i8] c"NO_COMPRESSION_SPECIFIED\00", align 1
@.str.424 = private unnamed_addr constant [33 x i8] c"NO_GOST_CERTIFICATE_SENT_BY_PEER\00", align 1
@.str.425 = private unnamed_addr constant [20 x i8] c"NO_METHOD_SPECIFIED\00", align 1
@.str.426 = private unnamed_addr constant [14 x i8] c"NO_PRIVATEKEY\00", align 1
@.str.427 = private unnamed_addr constant [24 x i8] c"NO_PRIVATE_KEY_ASSIGNED\00", align 1
@.str.428 = private unnamed_addr constant [23 x i8] c"NO_PROTOCOLS_AVAILABLE\00", align 1
@.str.429 = private unnamed_addr constant [13 x i8] c"NO_PUBLICKEY\00", align 1
@.str.430 = private unnamed_addr constant [17 x i8] c"NO_RENEGOTIATION\00", align 1
@.str.431 = private unnamed_addr constant [19 x i8] c"NO_REQUIRED_DIGEST\00", align 1
@.str.432 = private unnamed_addr constant [17 x i8] c"NO_SHARED_CIPHER\00", align 1
@.str.433 = private unnamed_addr constant [19 x i8] c"NO_VERIFY_CALLBACK\00", align 1
@.str.434 = private unnamed_addr constant [13 x i8] c"NULL_SSL_CTX\00", align 1
@.str.435 = private unnamed_addr constant [23 x i8] c"NULL_SSL_METHOD_PASSED\00", align 1
@.str.436 = private unnamed_addr constant [32 x i8] c"OLD_SESSION_CIPHER_NOT_RETURNED\00", align 1
@.str.437 = private unnamed_addr constant [47 x i8] c"OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED\00", align 1
@.str.438 = private unnamed_addr constant [30 x i8] c"ONLY_TLS_ALLOWED_IN_FIPS_MODE\00", align 1
@.str.439 = private unnamed_addr constant [26 x i8] c"OPAQUE_PRF_INPUT_TOO_LONG\00", align 1
@.str.440 = private unnamed_addr constant [23 x i8] c"PACKET_LENGTH_TOO_LONG\00", align 1
@.str.441 = private unnamed_addr constant [13 x i8] c"PARSE_TLSEXT\00", align 1
@.str.442 = private unnamed_addr constant [14 x i8] c"PATH_TOO_LONG\00", align 1
@.str.443 = private unnamed_addr constant [34 x i8] c"PEER_DID_NOT_RETURN_A_CERTIFICATE\00", align 1
@.str.444 = private unnamed_addr constant [11 x i8] c"PEER_ERROR\00", align 1
@.str.445 = private unnamed_addr constant [23 x i8] c"PEER_ERROR_CERTIFICATE\00", align 1
@.str.446 = private unnamed_addr constant [26 x i8] c"PEER_ERROR_NO_CERTIFICATE\00", align 1
@.str.447 = private unnamed_addr constant [21 x i8] c"PEER_ERROR_NO_CIPHER\00", align 1
@.str.448 = private unnamed_addr constant [40 x i8] c"PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE\00", align 1
@.str.449 = private unnamed_addr constant [24 x i8] c"PRE_MAC_LENGTH_TOO_LONG\00", align 1
@.str.450 = private unnamed_addr constant [34 x i8] c"PROBLEMS_MAPPING_CIPHER_FUNCTIONS\00", align 1
@.str.451 = private unnamed_addr constant [21 x i8] c"PROTOCOL_IS_SHUTDOWN\00", align 1
@.str.452 = private unnamed_addr constant [23 x i8] c"PSK_IDENTITY_NOT_FOUND\00", align 1
@.str.453 = private unnamed_addr constant [17 x i8] c"PSK_NO_CLIENT_CB\00", align 1
@.str.454 = private unnamed_addr constant [17 x i8] c"PSK_NO_SERVER_CB\00", align 1
@.str.455 = private unnamed_addr constant [25 x i8] c"PUBLIC_KEY_ENCRYPT_ERROR\00", align 1
@.str.456 = private unnamed_addr constant [22 x i8] c"PUBLIC_KEY_IS_NOT_RSA\00", align 1
@.str.457 = private unnamed_addr constant [19 x i8] c"PUBLIC_KEY_NOT_RSA\00", align 1
@.str.458 = private unnamed_addr constant [17 x i8] c"READ_BIO_NOT_SET\00", align 1
@.str.459 = private unnamed_addr constant [21 x i8] c"READ_TIMEOUT_EXPIRED\00", align 1
@.str.460 = private unnamed_addr constant [23 x i8] c"READ_WRONG_PACKET_TYPE\00", align 1
@.str.461 = private unnamed_addr constant [23 x i8] c"RECORD_LENGTH_MISMATCH\00", align 1
@.str.462 = private unnamed_addr constant [17 x i8] c"RECORD_TOO_LARGE\00", align 1
@.str.463 = private unnamed_addr constant [17 x i8] c"RECORD_TOO_SMALL\00", align 1
@.str.464 = private unnamed_addr constant [25 x i8] c"RENEGOTIATE_EXT_TOO_LONG\00", align 1
@.str.465 = private unnamed_addr constant [27 x i8] c"RENEGOTIATION_ENCODING_ERR\00", align 1
@.str.466 = private unnamed_addr constant [23 x i8] c"RENEGOTIATION_MISMATCH\00", align 1
@.str.467 = private unnamed_addr constant [24 x i8] c"REQUIRED_CIPHER_MISSING\00", align 1
@.str.468 = private unnamed_addr constant [40 x i8] c"REQUIRED_COMPRESSSION_ALGORITHM_MISSING\00", align 1
@.str.469 = private unnamed_addr constant [27 x i8] c"REUSE_CERT_LENGTH_NOT_ZERO\00", align 1
@.str.470 = private unnamed_addr constant [25 x i8] c"REUSE_CERT_TYPE_NOT_ZERO\00", align 1
@.str.471 = private unnamed_addr constant [27 x i8] c"REUSE_CIPHER_LIST_NOT_ZERO\00", align 1
@.str.472 = private unnamed_addr constant [33 x i8] c"SCSV_RECEIVED_WHEN_RENEGOTIATING\00", align 1
@.str.473 = private unnamed_addr constant [19 x i8] c"SERVERHELLO_TLSEXT\00", align 1
@.str.474 = private unnamed_addr constant [33 x i8] c"SESSION_ID_CONTEXT_UNINITIALIZED\00", align 1
@.str.475 = private unnamed_addr constant [11 x i8] c"SHORT_READ\00", align 1
@.str.476 = private unnamed_addr constant [38 x i8] c"SIGNATURE_FOR_NON_SIGNING_CERTIFICATE\00", align 1
@.str.477 = private unnamed_addr constant [29 x i8] c"SSL23_DOING_SESSION_ID_REUSE\00", align 1
@.str.478 = private unnamed_addr constant [28 x i8] c"SSL2_CONNECTION_ID_TOO_LONG\00", align 1
@.str.479 = private unnamed_addr constant [31 x i8] c"SSL3_EXT_INVALID_ECPOINTFORMAT\00", align 1
@.str.480 = private unnamed_addr constant [28 x i8] c"SSL3_EXT_INVALID_SERVERNAME\00", align 1
@.str.481 = private unnamed_addr constant [33 x i8] c"SSL3_EXT_INVALID_SERVERNAME_TYPE\00", align 1
@.str.482 = private unnamed_addr constant [25 x i8] c"SSL3_SESSION_ID_TOO_LONG\00", align 1
@.str.483 = private unnamed_addr constant [26 x i8] c"SSL3_SESSION_ID_TOO_SHORT\00", align 1
@.str.484 = private unnamed_addr constant [28 x i8] c"SSLV3_ALERT_BAD_CERTIFICATE\00", align 1
@.str.485 = private unnamed_addr constant [27 x i8] c"SSLV3_ALERT_BAD_RECORD_MAC\00", align 1
@.str.486 = private unnamed_addr constant [32 x i8] c"SSLV3_ALERT_CERTIFICATE_EXPIRED\00", align 1
@.str.487 = private unnamed_addr constant [32 x i8] c"SSLV3_ALERT_CERTIFICATE_REVOKED\00", align 1
@.str.488 = private unnamed_addr constant [32 x i8] c"SSLV3_ALERT_CERTIFICATE_UNKNOWN\00", align 1
@.str.489 = private unnamed_addr constant [34 x i8] c"SSLV3_ALERT_DECOMPRESSION_FAILURE\00", align 1
@.str.490 = private unnamed_addr constant [30 x i8] c"SSLV3_ALERT_HANDSHAKE_FAILURE\00", align 1
@.str.491 = private unnamed_addr constant [30 x i8] c"SSLV3_ALERT_ILLEGAL_PARAMETER\00", align 1
@.str.492 = private unnamed_addr constant [27 x i8] c"SSLV3_ALERT_NO_CERTIFICATE\00", align 1
@.str.493 = private unnamed_addr constant [31 x i8] c"SSLV3_ALERT_UNEXPECTED_MESSAGE\00", align 1
@.str.494 = private unnamed_addr constant [36 x i8] c"SSLV3_ALERT_UNSUPPORTED_CERTIFICATE\00", align 1
@.str.495 = private unnamed_addr constant [35 x i8] c"SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION\00", align 1
@.str.496 = private unnamed_addr constant [22 x i8] c"SSL_HANDSHAKE_FAILURE\00", align 1
@.str.497 = private unnamed_addr constant [27 x i8] c"SSL_LIBRARY_HAS_NO_CIPHERS\00", align 1
@.str.498 = private unnamed_addr constant [31 x i8] c"SSL_SESSION_ID_CALLBACK_FAILED\00", align 1
@.str.499 = private unnamed_addr constant [24 x i8] c"SSL_SESSION_ID_CONFLICT\00", align 1
@.str.500 = private unnamed_addr constant [32 x i8] c"SSL_SESSION_ID_CONTEXT_TOO_LONG\00", align 1
@.str.501 = private unnamed_addr constant [30 x i8] c"SSL_SESSION_ID_HAS_BAD_LENGTH\00", align 1
@.str.502 = private unnamed_addr constant [28 x i8] c"SSL_SESSION_ID_IS_DIFFERENT\00", align 1
@.str.503 = private unnamed_addr constant [26 x i8] c"TLSV1_ALERT_ACCESS_DENIED\00", align 1
@.str.504 = private unnamed_addr constant [25 x i8] c"TLSV1_ALERT_DECODE_ERROR\00", align 1
@.str.505 = private unnamed_addr constant [30 x i8] c"TLSV1_ALERT_DECRYPTION_FAILED\00", align 1
@.str.506 = private unnamed_addr constant [26 x i8] c"TLSV1_ALERT_DECRYPT_ERROR\00", align 1
@.str.507 = private unnamed_addr constant [31 x i8] c"TLSV1_ALERT_EXPORT_RESTRICTION\00", align 1
@.str.508 = private unnamed_addr constant [34 x i8] c"TLSV1_ALERT_INSUFFICIENT_SECURITY\00", align 1
@.str.509 = private unnamed_addr constant [27 x i8] c"TLSV1_ALERT_INTERNAL_ERROR\00", align 1
@.str.510 = private unnamed_addr constant [29 x i8] c"TLSV1_ALERT_NO_RENEGOTIATION\00", align 1
@.str.511 = private unnamed_addr constant [29 x i8] c"TLSV1_ALERT_PROTOCOL_VERSION\00", align 1
@.str.512 = private unnamed_addr constant [28 x i8] c"TLSV1_ALERT_RECORD_OVERFLOW\00", align 1
@.str.513 = private unnamed_addr constant [23 x i8] c"TLSV1_ALERT_UNKNOWN_CA\00", align 1
@.str.514 = private unnamed_addr constant [27 x i8] c"TLSV1_ALERT_USER_CANCELLED\00", align 1
@.str.515 = private unnamed_addr constant [33 x i8] c"TLSV1_BAD_CERTIFICATE_HASH_VALUE\00", align 1
@.str.516 = private unnamed_addr constant [38 x i8] c"TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE\00", align 1
@.str.517 = private unnamed_addr constant [31 x i8] c"TLSV1_CERTIFICATE_UNOBTAINABLE\00", align 1
@.str.518 = private unnamed_addr constant [24 x i8] c"TLSV1_UNRECOGNIZED_NAME\00", align 1
@.str.519 = private unnamed_addr constant [28 x i8] c"TLSV1_UNSUPPORTED_EXTENSION\00", align 1
@.str.520 = private unnamed_addr constant [37 x i8] c"TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER\00", align 1
@.str.521 = private unnamed_addr constant [31 x i8] c"TLS_INVALID_ECPOINTFORMAT_LIST\00", align 1
@.str.522 = private unnamed_addr constant [47 x i8] c"TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST\00", align 1
@.str.523 = private unnamed_addr constant [40 x i8] c"TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG\00", align 1
@.str.524 = private unnamed_addr constant [32 x i8] c"TRIED_TO_USE_UNSUPPORTED_CIPHER\00", align 1
@.str.525 = private unnamed_addr constant [26 x i8] c"UNABLE_TO_DECODE_DH_CERTS\00", align 1
@.str.526 = private unnamed_addr constant [28 x i8] c"UNABLE_TO_DECODE_ECDH_CERTS\00", align 1
@.str.527 = private unnamed_addr constant [29 x i8] c"UNABLE_TO_EXTRACT_PUBLIC_KEY\00", align 1
@.str.528 = private unnamed_addr constant [29 x i8] c"UNABLE_TO_FIND_DH_PARAMETERS\00", align 1
@.str.529 = private unnamed_addr constant [31 x i8] c"UNABLE_TO_FIND_ECDH_PARAMETERS\00", align 1
@.str.530 = private unnamed_addr constant [37 x i8] c"UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS\00", align 1
@.str.531 = private unnamed_addr constant [26 x i8] c"UNABLE_TO_FIND_SSL_METHOD\00", align 1
@.str.532 = private unnamed_addr constant [33 x i8] c"UNABLE_TO_LOAD_SSL2_MD5_ROUTINES\00", align 1
@.str.533 = private unnamed_addr constant [33 x i8] c"UNABLE_TO_LOAD_SSL3_MD5_ROUTINES\00", align 1
@.str.534 = private unnamed_addr constant [34 x i8] c"UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES\00", align 1
@.str.535 = private unnamed_addr constant [19 x i8] c"UNEXPECTED_MESSAGE\00", align 1
@.str.536 = private unnamed_addr constant [18 x i8] c"UNEXPECTED_RECORD\00", align 1
@.str.537 = private unnamed_addr constant [14 x i8] c"UNINITIALIZED\00", align 1
@.str.538 = private unnamed_addr constant [19 x i8] c"UNKNOWN_ALERT_TYPE\00", align 1
@.str.539 = private unnamed_addr constant [25 x i8] c"UNKNOWN_CERTIFICATE_TYPE\00", align 1
@.str.540 = private unnamed_addr constant [24 x i8] c"UNKNOWN_CIPHER_RETURNED\00", align 1
@.str.541 = private unnamed_addr constant [20 x i8] c"UNKNOWN_CIPHER_TYPE\00", align 1
@.str.542 = private unnamed_addr constant [26 x i8] c"UNKNOWN_KEY_EXCHANGE_TYPE\00", align 1
@.str.543 = private unnamed_addr constant [18 x i8] c"UNKNOWN_PKEY_TYPE\00", align 1
@.str.544 = private unnamed_addr constant [17 x i8] c"UNKNOWN_PROTOCOL\00", align 1
@.str.545 = private unnamed_addr constant [26 x i8] c"UNKNOWN_REMOTE_ERROR_TYPE\00", align 1
@.str.546 = private unnamed_addr constant [20 x i8] c"UNKNOWN_SSL_VERSION\00", align 1
@.str.547 = private unnamed_addr constant [14 x i8] c"UNKNOWN_STATE\00", align 1
@.str.548 = private unnamed_addr constant [37 x i8] c"UNSAFE_LEGACY_RENEGOTIATION_DISABLED\00", align 1
@.str.549 = private unnamed_addr constant [34 x i8] c"UNSUPPORTED_COMPRESSION_ALGORITHM\00", align 1
@.str.550 = private unnamed_addr constant [24 x i8] c"UNSUPPORTED_DIGEST_TYPE\00", align 1
@.str.551 = private unnamed_addr constant [27 x i8] c"UNSUPPORTED_ELLIPTIC_CURVE\00", align 1
@.str.552 = private unnamed_addr constant [21 x i8] c"UNSUPPORTED_PROTOCOL\00", align 1
@.str.553 = private unnamed_addr constant [24 x i8] c"UNSUPPORTED_SSL_VERSION\00", align 1
@.str.554 = private unnamed_addr constant [24 x i8] c"UNSUPPORTED_STATUS_TYPE\00", align 1
@.str.555 = private unnamed_addr constant [18 x i8] c"WRITE_BIO_NOT_SET\00", align 1
@.str.556 = private unnamed_addr constant [22 x i8] c"WRONG_CIPHER_RETURNED\00", align 1
@.str.557 = private unnamed_addr constant [19 x i8] c"WRONG_MESSAGE_TYPE\00", align 1
@.str.558 = private unnamed_addr constant [25 x i8] c"WRONG_NUMBER_OF_KEY_BITS\00", align 1
@.str.559 = private unnamed_addr constant [23 x i8] c"WRONG_SIGNATURE_LENGTH\00", align 1
@.str.560 = private unnamed_addr constant [21 x i8] c"WRONG_SIGNATURE_SIZE\00", align 1
@.str.561 = private unnamed_addr constant [18 x i8] c"WRONG_SSL_VERSION\00", align 1
@.str.562 = private unnamed_addr constant [21 x i8] c"WRONG_VERSION_NUMBER\00", align 1
@.str.563 = private unnamed_addr constant [9 x i8] c"X509_LIB\00", align 1
@.str.564 = private unnamed_addr constant [33 x i8] c"X509_VERIFICATION_SETUP_PROBLEMS\00", align 1
@.str.565 = private unnamed_addr constant [18 x i8] c"BAD_X509_FILETYPE\00", align 1
@.str.566 = private unnamed_addr constant [20 x i8] c"BASE64_DECODE_ERROR\00", align 1
@.str.567 = private unnamed_addr constant [18 x i8] c"CANT_CHECK_DH_KEY\00", align 1
@.str.568 = private unnamed_addr constant [27 x i8] c"CERT_ALREADY_IN_HASH_TABLE\00", align 1
@.str.569 = private unnamed_addr constant [13 x i8] c"ERR_ASN1_LIB\00", align 1
@.str.570 = private unnamed_addr constant [18 x i8] c"INVALID_DIRECTORY\00", align 1
@.str.571 = private unnamed_addr constant [19 x i8] c"INVALID_FIELD_NAME\00", align 1
@.str.572 = private unnamed_addr constant [18 x i8] c"KEY_TYPE_MISMATCH\00", align 1
@.str.573 = private unnamed_addr constant [20 x i8] c"KEY_VALUES_MISMATCH\00", align 1
@.str.574 = private unnamed_addr constant [17 x i8] c"LOADING_CERT_DIR\00", align 1
@.str.575 = private unnamed_addr constant [17 x i8] c"LOADING_DEFAULTS\00", align 1
@.str.576 = private unnamed_addr constant [21 x i8] c"METHOD_NOT_SUPPORTED\00", align 1
@.str.577 = private unnamed_addr constant [29 x i8] c"NO_CERT_SET_FOR_US_TO_VERIFY\00", align 1
@.str.578 = private unnamed_addr constant [24 x i8] c"PUBLIC_KEY_DECODE_ERROR\00", align 1
@.str.579 = private unnamed_addr constant [24 x i8] c"PUBLIC_KEY_ENCODE_ERROR\00", align 1
@.str.580 = private unnamed_addr constant [13 x i8] c"SHOULD_RETRY\00", align 1
@.str.581 = private unnamed_addr constant [35 x i8] c"UNABLE_TO_FIND_PARAMETERS_IN_CHAIN\00", align 1
@.str.582 = private unnamed_addr constant [31 x i8] c"UNABLE_TO_GET_CERTS_PUBLIC_KEY\00", align 1
@.str.583 = private unnamed_addr constant [17 x i8] c"UNKNOWN_KEY_TYPE\00", align 1
@.str.584 = private unnamed_addr constant [12 x i8] c"UNKNOWN_NID\00", align 1
@.str.585 = private unnamed_addr constant [19 x i8] c"UNKNOWN_PURPOSE_ID\00", align 1
@.str.586 = private unnamed_addr constant [17 x i8] c"UNKNOWN_TRUST_ID\00", align 1
@.str.587 = private unnamed_addr constant [22 x i8] c"UNSUPPORTED_ALGORITHM\00", align 1
@.str.588 = private unnamed_addr constant [18 x i8] c"WRONG_LOOKUP_TYPE\00", align 1
@.str.589 = private unnamed_addr constant [11 x i8] c"WRONG_TYPE\00", align 1
@.str.590 = private unnamed_addr constant [4 x i8] c"PEM\00", align 1
@.str.591 = private unnamed_addr constant [4 x i8] c"SSL\00", align 1
@.str.592 = private unnamed_addr constant [5 x i8] c"X509\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__ssl() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %d = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %libver = alloca i64, align 8
  %major = alloca i32, align 4
  %minor = alloca i32, align 4
  %fix = alloca i32, align 4
  %patch = alloca i32, align 4
  %status = alloca i32, align 4
  %socket_api = alloca %struct.PySocketModule_APIObject*, align 8
  %errcode = alloca %struct.py_ssl_error_code*, align 8
  %libcode = alloca %struct.py_ssl_library_code*, align 8
  %cleanup.dest.slot = alloca i32
  %mnemo = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp162 = alloca %struct._object*, align 8
  %mnemo190 = alloca %struct._object*, align 8
  %key191 = alloca %struct._object*, align 8
  %_py_decref_tmp207 = alloca %struct._object*, align 8
  %_py_decref_tmp220 = alloca %struct._object*, align 8
  %0 = bitcast %struct._object** %m to i8*, !dbg !3829
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3829
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !2284, metadata !3830), !dbg !3831
  %1 = bitcast %struct._object** %d to i8*, !dbg !3829
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3829
  call void @llvm.dbg.declare(metadata %struct._object** %d, metadata !2285, metadata !3830), !dbg !3832
  %2 = bitcast %struct._object** %r to i8*, !dbg !3829
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3829
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !2286, metadata !3830), !dbg !3833
  %3 = bitcast i64* %libver to i8*, !dbg !3834
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3834
  call void @llvm.dbg.declare(metadata i64* %libver, metadata !2287, metadata !3830), !dbg !3835
  %4 = bitcast i32* %major to i8*, !dbg !3836
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %major, metadata !2288, metadata !3830), !dbg !3837
  %5 = bitcast i32* %minor to i8*, !dbg !3836
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !2289, metadata !3830), !dbg !3838
  %6 = bitcast i32* %fix to i8*, !dbg !3836
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %fix, metadata !2290, metadata !3830), !dbg !3839
  %7 = bitcast i32* %patch to i8*, !dbg !3836
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %patch, metadata !2291, metadata !3830), !dbg !3840
  %8 = bitcast i32* %status to i8*, !dbg !3836
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2292, metadata !3830), !dbg !3841
  %9 = bitcast %struct.PySocketModule_APIObject** %socket_api to i8*, !dbg !3842
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !3842
  call void @llvm.dbg.declare(metadata %struct.PySocketModule_APIObject** %socket_api, metadata !2293, metadata !3830), !dbg !3843
  %10 = bitcast %struct.py_ssl_error_code** %errcode to i8*, !dbg !3844
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !3844
  call void @llvm.dbg.declare(metadata %struct.py_ssl_error_code** %errcode, metadata !2303, metadata !3830), !dbg !3845
  %11 = bitcast %struct.py_ssl_library_code** %libcode to i8*, !dbg !3846
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !3846
  call void @llvm.dbg.declare(metadata %struct.py_ssl_library_code** %libcode, metadata !2310, metadata !3830), !dbg !3847
  %call = call i32 @PyType_Ready(%struct._typeobject* @PySSLContext_Type), !dbg !3848
  %cmp = icmp slt i32 %call, 0, !dbg !3850
  br i1 %cmp, label %if.then, label %if.end, !dbg !3851

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3852
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3852

if.end:                                           ; preds = %entry
  %call1 = call i32 @PyType_Ready(%struct._typeobject* @PySSLSocket_Type), !dbg !3853
  %cmp2 = icmp slt i32 %call1, 0, !dbg !3855
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !3856

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3857
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3857

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_sslmodule, i32 1013), !dbg !3858
  store %struct._object* %call5, %struct._object** %m, align 8, !dbg !3859, !tbaa !3860
  %12 = load %struct._object*, %struct._object** %m, align 8, !dbg !3864, !tbaa !3860
  %cmp6 = icmp eq %struct._object* %12, null, !dbg !3866
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !3867

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !3868
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3868

if.end.8:                                         ; preds = %if.end.4
  %13 = load %struct._object*, %struct._object** %m, align 8, !dbg !3869, !tbaa !3860
  %call9 = call %struct._object* @PyModule_GetDict(%struct._object* %13), !dbg !3870
  store %struct._object* %call9, %struct._object** %d, align 8, !dbg !3871, !tbaa !3860
  %call10 = call i8* @PyCapsule_Import(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 1), !dbg !3872
  %14 = bitcast i8* %call10 to %struct.PySocketModule_APIObject*, !dbg !3872
  store %struct.PySocketModule_APIObject* %14, %struct.PySocketModule_APIObject** %socket_api, align 8, !dbg !3873, !tbaa !3860
  %15 = load %struct.PySocketModule_APIObject*, %struct.PySocketModule_APIObject** %socket_api, align 8, !dbg !3874, !tbaa !3860
  %tobool = icmp ne %struct.PySocketModule_APIObject* %15, null, !dbg !3874
  br i1 %tobool, label %if.end.12, label %if.then.11, !dbg !3876

if.then.11:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %retval, !dbg !3877
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3877

if.end.12:                                        ; preds = %if.end.8
  %16 = load %struct.PySocketModule_APIObject*, %struct.PySocketModule_APIObject** %socket_api, align 8, !dbg !3878, !tbaa !3860
  %17 = bitcast %struct.PySocketModule_APIObject* %16 to i8*, !dbg !3879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.PySocketModule_APIObject* @PySocketModule to i8*), i8* %17, i64 24, i32 8, i1 false), !dbg !3879, !tbaa.struct !3880
  call void @SSL_load_error_strings(), !dbg !3881
  %call13 = call i32 @SSL_library_init(), !dbg !3882
  %call14 = call i32 @_setup_ssl_threads(), !dbg !3883
  %tobool15 = icmp ne i32 %call14, 0, !dbg !3883
  br i1 %tobool15, label %if.end.17, label %if.then.16, !dbg !3885

if.then.16:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval, !dbg !3886
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3886

if.end.17:                                        ; preds = %if.end.12
  call void @OPENSSL_add_all_algorithms_noconf(), !dbg !3888
  %18 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3889, !tbaa !3860
  %19 = bitcast %struct._object* %18 to i8*, !dbg !3889
  store i8* %19, i8** getelementptr inbounds ([4 x %struct.PyType_Slot], [4 x %struct.PyType_Slot]* @sslerror_type_slots, i32 0, i64 0, i32 1), align 8, !dbg !3890, !tbaa !3891
  %call18 = call %struct._object* @PyType_FromSpec(%struct.PyType_Spec* @sslerror_type_spec), !dbg !3894
  store %struct._object* %call18, %struct._object** @PySSLErrorObject, align 8, !dbg !3895, !tbaa !3860
  %20 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3896, !tbaa !3860
  %cmp19 = icmp eq %struct._object* %20, null, !dbg !3898
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !3899

if.then.20:                                       ; preds = %if.end.17
  store %struct._object* null, %struct._object** %retval, !dbg !3900
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3900

if.end.21:                                        ; preds = %if.end.17
  %21 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3901, !tbaa !3860
  %call22 = call %struct._object* @PyErr_NewExceptionWithDoc(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @SSLZeroReturnError_doc, i32 0, i32 0), %struct._object* %21, %struct._object* null), !dbg !3902
  store %struct._object* %call22, %struct._object** @PySSLZeroReturnErrorObject, align 8, !dbg !3903, !tbaa !3860
  %22 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3904, !tbaa !3860
  %call23 = call %struct._object* @PyErr_NewExceptionWithDoc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @SSLWantReadError_doc, i32 0, i32 0), %struct._object* %22, %struct._object* null), !dbg !3905
  store %struct._object* %call23, %struct._object** @PySSLWantReadErrorObject, align 8, !dbg !3906, !tbaa !3860
  %23 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3907, !tbaa !3860
  %call24 = call %struct._object* @PyErr_NewExceptionWithDoc(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @SSLWantWriteError_doc, i32 0, i32 0), %struct._object* %23, %struct._object* null), !dbg !3908
  store %struct._object* %call24, %struct._object** @PySSLWantWriteErrorObject, align 8, !dbg !3909, !tbaa !3860
  %24 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3910, !tbaa !3860
  %call25 = call %struct._object* @PyErr_NewExceptionWithDoc(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @SSLSyscallError_doc, i32 0, i32 0), %struct._object* %24, %struct._object* null), !dbg !3911
  store %struct._object* %call25, %struct._object** @PySSLSyscallErrorObject, align 8, !dbg !3912, !tbaa !3860
  %25 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3913, !tbaa !3860
  %call26 = call %struct._object* @PyErr_NewExceptionWithDoc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @SSLEOFError_doc, i32 0, i32 0), %struct._object* %25, %struct._object* null), !dbg !3914
  store %struct._object* %call26, %struct._object** @PySSLEOFErrorObject, align 8, !dbg !3915, !tbaa !3860
  %26 = load %struct._object*, %struct._object** @PySSLZeroReturnErrorObject, align 8, !dbg !3916, !tbaa !3860
  %cmp27 = icmp eq %struct._object* %26, null, !dbg !3918
  br i1 %cmp27, label %if.then.35, label %lor.lhs.false, !dbg !3919

lor.lhs.false:                                    ; preds = %if.end.21
  %27 = load %struct._object*, %struct._object** @PySSLWantReadErrorObject, align 8, !dbg !3920, !tbaa !3860
  %cmp28 = icmp eq %struct._object* %27, null, !dbg !3922
  br i1 %cmp28, label %if.then.35, label %lor.lhs.false.29, !dbg !3923

lor.lhs.false.29:                                 ; preds = %lor.lhs.false
  %28 = load %struct._object*, %struct._object** @PySSLWantWriteErrorObject, align 8, !dbg !3924, !tbaa !3860
  %cmp30 = icmp eq %struct._object* %28, null, !dbg !3925
  br i1 %cmp30, label %if.then.35, label %lor.lhs.false.31, !dbg !3926

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.29
  %29 = load %struct._object*, %struct._object** @PySSLSyscallErrorObject, align 8, !dbg !3927, !tbaa !3860
  %cmp32 = icmp eq %struct._object* %29, null, !dbg !3928
  br i1 %cmp32, label %if.then.35, label %lor.lhs.false.33, !dbg !3929

lor.lhs.false.33:                                 ; preds = %lor.lhs.false.31
  %30 = load %struct._object*, %struct._object** @PySSLEOFErrorObject, align 8, !dbg !3930, !tbaa !3860
  %cmp34 = icmp eq %struct._object* %30, null, !dbg !3931
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !3932

if.then.35:                                       ; preds = %lor.lhs.false.33, %lor.lhs.false.31, %lor.lhs.false.29, %lor.lhs.false, %if.end.21
  store %struct._object* null, %struct._object** %retval, !dbg !3933
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3933

if.end.36:                                        ; preds = %lor.lhs.false.33
  %31 = load %struct._object*, %struct._object** %d, align 8, !dbg !3934, !tbaa !3860
  %32 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !3936, !tbaa !3860
  %call37 = call i32 @PyDict_SetItemString(%struct._object* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), %struct._object* %32), !dbg !3937
  %cmp38 = icmp ne i32 %call37, 0, !dbg !3938
  br i1 %cmp38, label %if.then.54, label %lor.lhs.false.39, !dbg !3939

lor.lhs.false.39:                                 ; preds = %if.end.36
  %33 = load %struct._object*, %struct._object** %d, align 8, !dbg !3940, !tbaa !3860
  %34 = load %struct._object*, %struct._object** @PySSLZeroReturnErrorObject, align 8, !dbg !3942, !tbaa !3860
  %call40 = call i32 @PyDict_SetItemString(%struct._object* %33, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), %struct._object* %34), !dbg !3943
  %cmp41 = icmp ne i32 %call40, 0, !dbg !3944
  br i1 %cmp41, label %if.then.54, label %lor.lhs.false.42, !dbg !3945

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.39
  %35 = load %struct._object*, %struct._object** %d, align 8, !dbg !3946, !tbaa !3860
  %36 = load %struct._object*, %struct._object** @PySSLWantReadErrorObject, align 8, !dbg !3947, !tbaa !3860
  %call43 = call i32 @PyDict_SetItemString(%struct._object* %35, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), %struct._object* %36), !dbg !3948
  %cmp44 = icmp ne i32 %call43, 0, !dbg !3949
  br i1 %cmp44, label %if.then.54, label %lor.lhs.false.45, !dbg !3950

lor.lhs.false.45:                                 ; preds = %lor.lhs.false.42
  %37 = load %struct._object*, %struct._object** %d, align 8, !dbg !3951, !tbaa !3860
  %38 = load %struct._object*, %struct._object** @PySSLWantWriteErrorObject, align 8, !dbg !3952, !tbaa !3860
  %call46 = call i32 @PyDict_SetItemString(%struct._object* %37, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0), %struct._object* %38), !dbg !3953
  %cmp47 = icmp ne i32 %call46, 0, !dbg !3954
  br i1 %cmp47, label %if.then.54, label %lor.lhs.false.48, !dbg !3955

lor.lhs.false.48:                                 ; preds = %lor.lhs.false.45
  %39 = load %struct._object*, %struct._object** %d, align 8, !dbg !3956, !tbaa !3860
  %40 = load %struct._object*, %struct._object** @PySSLSyscallErrorObject, align 8, !dbg !3957, !tbaa !3860
  %call49 = call i32 @PyDict_SetItemString(%struct._object* %39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0), %struct._object* %40), !dbg !3958
  %cmp50 = icmp ne i32 %call49, 0, !dbg !3959
  br i1 %cmp50, label %if.then.54, label %lor.lhs.false.51, !dbg !3960

lor.lhs.false.51:                                 ; preds = %lor.lhs.false.48
  %41 = load %struct._object*, %struct._object** %d, align 8, !dbg !3961, !tbaa !3860
  %42 = load %struct._object*, %struct._object** @PySSLEOFErrorObject, align 8, !dbg !3962, !tbaa !3860
  %call52 = call i32 @PyDict_SetItemString(%struct._object* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), %struct._object* %42), !dbg !3963
  %cmp53 = icmp ne i32 %call52, 0, !dbg !3964
  br i1 %cmp53, label %if.then.54, label %if.end.55, !dbg !3965

if.then.54:                                       ; preds = %lor.lhs.false.51, %lor.lhs.false.48, %lor.lhs.false.45, %lor.lhs.false.42, %lor.lhs.false.39, %if.end.36
  store %struct._object* null, %struct._object** %retval, !dbg !3966
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3966

if.end.55:                                        ; preds = %lor.lhs.false.51
  %43 = load %struct._object*, %struct._object** %d, align 8, !dbg !3967, !tbaa !3860
  %call56 = call i32 @PyDict_SetItemString(%struct._object* %43, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PySSLContext_Type, i32 0, i32 0, i32 0)), !dbg !3969
  %cmp57 = icmp ne i32 %call56, 0, !dbg !3970
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !3971

if.then.58:                                       ; preds = %if.end.55
  store %struct._object* null, %struct._object** %retval, !dbg !3972
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3972

if.end.59:                                        ; preds = %if.end.55
  %44 = load %struct._object*, %struct._object** %d, align 8, !dbg !3973, !tbaa !3860
  %call60 = call i32 @PyDict_SetItemString(%struct._object* %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PySSLSocket_Type, i32 0, i32 0, i32 0)), !dbg !3975
  %cmp61 = icmp ne i32 %call60, 0, !dbg !3976
  br i1 %cmp61, label %if.then.62, label %if.end.63, !dbg !3977

if.then.62:                                       ; preds = %if.end.59
  store %struct._object* null, %struct._object** %retval, !dbg !3978
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !3978

if.end.63:                                        ; preds = %if.end.59
  %45 = load %struct._object*, %struct._object** %m, align 8, !dbg !3979, !tbaa !3860
  %call64 = call i32 @PyModule_AddIntConstant(%struct._object* %45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i64 6), !dbg !3980
  %46 = load %struct._object*, %struct._object** %m, align 8, !dbg !3981, !tbaa !3860
  %call65 = call i32 @PyModule_AddIntConstant(%struct._object* %46, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i32 0, i32 0), i64 2), !dbg !3982
  %47 = load %struct._object*, %struct._object** %m, align 8, !dbg !3983, !tbaa !3860
  %call66 = call i32 @PyModule_AddIntConstant(%struct._object* %47, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i32 0, i32 0), i64 3), !dbg !3984
  %48 = load %struct._object*, %struct._object** %m, align 8, !dbg !3985, !tbaa !3860
  %call67 = call i32 @PyModule_AddIntConstant(%struct._object* %48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i64 4), !dbg !3986
  %49 = load %struct._object*, %struct._object** %m, align 8, !dbg !3987, !tbaa !3860
  %call68 = call i32 @PyModule_AddIntConstant(%struct._object* %49, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i32 0, i32 0), i64 5), !dbg !3988
  %50 = load %struct._object*, %struct._object** %m, align 8, !dbg !3989, !tbaa !3860
  %call69 = call i32 @PyModule_AddIntConstant(%struct._object* %50, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i64 1), !dbg !3990
  %51 = load %struct._object*, %struct._object** %m, align 8, !dbg !3991, !tbaa !3860
  %call70 = call i32 @PyModule_AddIntConstant(%struct._object* %51, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i64 7), !dbg !3992
  %52 = load %struct._object*, %struct._object** %m, align 8, !dbg !3993, !tbaa !3860
  %call71 = call i32 @PyModule_AddIntConstant(%struct._object* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0), i64 8), !dbg !3994
  %53 = load %struct._object*, %struct._object** %m, align 8, !dbg !3995, !tbaa !3860
  %call72 = call i32 @PyModule_AddIntConstant(%struct._object* %53, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i32 0, i32 0), i64 10), !dbg !3996
  %54 = load %struct._object*, %struct._object** %m, align 8, !dbg !3997, !tbaa !3860
  %call73 = call i32 @PyModule_AddIntConstant(%struct._object* %54, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i64 0), !dbg !3998
  %55 = load %struct._object*, %struct._object** %m, align 8, !dbg !3999, !tbaa !3860
  %call74 = call i32 @PyModule_AddIntConstant(%struct._object* %55, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i64 1), !dbg !4000
  %56 = load %struct._object*, %struct._object** %m, align 8, !dbg !4001, !tbaa !3860
  %call75 = call i32 @PyModule_AddIntConstant(%struct._object* %56, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i32 0, i32 0), i64 2), !dbg !4002
  %57 = load %struct._object*, %struct._object** %m, align 8, !dbg !4003, !tbaa !3860
  %call76 = call i32 @PyModule_AddIntConstant(%struct._object* %57, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i64 0), !dbg !4004
  %58 = load %struct._object*, %struct._object** %m, align 8, !dbg !4005, !tbaa !3860
  %call77 = call i32 @PyModule_AddIntConstant(%struct._object* %58, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i64 4), !dbg !4006
  %59 = load %struct._object*, %struct._object** %m, align 8, !dbg !4007, !tbaa !3860
  %call78 = call i32 @PyModule_AddIntConstant(%struct._object* %59, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i32 0, i32 0), i64 12), !dbg !4008
  %60 = load %struct._object*, %struct._object** %m, align 8, !dbg !4009, !tbaa !3860
  %call79 = call i32 @PyModule_AddIntConstant(%struct._object* %60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i32 0, i32 0), i64 32), !dbg !4010
  %61 = load %struct._object*, %struct._object** %m, align 8, !dbg !4011, !tbaa !3860
  %call80 = call i32 @PyModule_AddIntConstant(%struct._object* %61, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i64 0), !dbg !4012
  %62 = load %struct._object*, %struct._object** %m, align 8, !dbg !4013, !tbaa !3860
  %call81 = call i32 @PyModule_AddIntConstant(%struct._object* %62, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i32 0, i32 0), i64 10), !dbg !4014
  %63 = load %struct._object*, %struct._object** %m, align 8, !dbg !4015, !tbaa !3860
  %call82 = call i32 @PyModule_AddIntConstant(%struct._object* %63, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i32 0, i32 0), i64 20), !dbg !4016
  %64 = load %struct._object*, %struct._object** %m, align 8, !dbg !4017, !tbaa !3860
  %call83 = call i32 @PyModule_AddIntConstant(%struct._object* %64, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i32 0, i32 0), i64 22), !dbg !4018
  %65 = load %struct._object*, %struct._object** %m, align 8, !dbg !4019, !tbaa !3860
  %call84 = call i32 @PyModule_AddIntConstant(%struct._object* %65, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i32 0, i32 0), i64 30), !dbg !4020
  %66 = load %struct._object*, %struct._object** %m, align 8, !dbg !4021, !tbaa !3860
  %call85 = call i32 @PyModule_AddIntConstant(%struct._object* %66, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i32 0, i32 0), i64 40), !dbg !4022
  %67 = load %struct._object*, %struct._object** %m, align 8, !dbg !4023, !tbaa !3860
  %call86 = call i32 @PyModule_AddIntConstant(%struct._object* %67, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i32 0, i32 0), i64 42), !dbg !4024
  %68 = load %struct._object*, %struct._object** %m, align 8, !dbg !4025, !tbaa !3860
  %call87 = call i32 @PyModule_AddIntConstant(%struct._object* %68, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37, i32 0, i32 0), i64 43), !dbg !4026
  %69 = load %struct._object*, %struct._object** %m, align 8, !dbg !4027, !tbaa !3860
  %call88 = call i32 @PyModule_AddIntConstant(%struct._object* %69, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i32 0, i32 0), i64 44), !dbg !4028
  %70 = load %struct._object*, %struct._object** %m, align 8, !dbg !4029, !tbaa !3860
  %call89 = call i32 @PyModule_AddIntConstant(%struct._object* %70, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i32 0, i32 0), i64 45), !dbg !4030
  %71 = load %struct._object*, %struct._object** %m, align 8, !dbg !4031, !tbaa !3860
  %call90 = call i32 @PyModule_AddIntConstant(%struct._object* %71, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i32 0, i32 0), i64 46), !dbg !4032
  %72 = load %struct._object*, %struct._object** %m, align 8, !dbg !4033, !tbaa !3860
  %call91 = call i32 @PyModule_AddIntConstant(%struct._object* %72, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.41, i32 0, i32 0), i64 47), !dbg !4034
  %73 = load %struct._object*, %struct._object** %m, align 8, !dbg !4035, !tbaa !3860
  %call92 = call i32 @PyModule_AddIntConstant(%struct._object* %73, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i64 48), !dbg !4036
  %74 = load %struct._object*, %struct._object** %m, align 8, !dbg !4037, !tbaa !3860
  %call93 = call i32 @PyModule_AddIntConstant(%struct._object* %74, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i32 0, i32 0), i64 49), !dbg !4038
  %75 = load %struct._object*, %struct._object** %m, align 8, !dbg !4039, !tbaa !3860
  %call94 = call i32 @PyModule_AddIntConstant(%struct._object* %75, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.44, i32 0, i32 0), i64 50), !dbg !4040
  %76 = load %struct._object*, %struct._object** %m, align 8, !dbg !4041, !tbaa !3860
  %call95 = call i32 @PyModule_AddIntConstant(%struct._object* %76, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i32 0, i32 0), i64 51), !dbg !4042
  %77 = load %struct._object*, %struct._object** %m, align 8, !dbg !4043, !tbaa !3860
  %call96 = call i32 @PyModule_AddIntConstant(%struct._object* %77, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46, i32 0, i32 0), i64 70), !dbg !4044
  %78 = load %struct._object*, %struct._object** %m, align 8, !dbg !4045, !tbaa !3860
  %call97 = call i32 @PyModule_AddIntConstant(%struct._object* %78, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i32 0, i32 0), i64 71), !dbg !4046
  %79 = load %struct._object*, %struct._object** %m, align 8, !dbg !4047, !tbaa !3860
  %call98 = call i32 @PyModule_AddIntConstant(%struct._object* %79, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.48, i32 0, i32 0), i64 80), !dbg !4048
  %80 = load %struct._object*, %struct._object** %m, align 8, !dbg !4049, !tbaa !3860
  %call99 = call i32 @PyModule_AddIntConstant(%struct._object* %80, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.49, i32 0, i32 0), i64 90), !dbg !4050
  %81 = load %struct._object*, %struct._object** %m, align 8, !dbg !4051, !tbaa !3860
  %call100 = call i32 @PyModule_AddIntConstant(%struct._object* %81, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i32 0, i32 0), i64 100), !dbg !4052
  %82 = load %struct._object*, %struct._object** %m, align 8, !dbg !4053, !tbaa !3860
  %call101 = call i32 @PyModule_AddIntConstant(%struct._object* %82, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.51, i32 0, i32 0), i64 110), !dbg !4054
  %83 = load %struct._object*, %struct._object** %m, align 8, !dbg !4055, !tbaa !3860
  %call102 = call i32 @PyModule_AddIntConstant(%struct._object* %83, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52, i32 0, i32 0), i64 111), !dbg !4056
  %84 = load %struct._object*, %struct._object** %m, align 8, !dbg !4057, !tbaa !3860
  %call103 = call i32 @PyModule_AddIntConstant(%struct._object* %84, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.53, i32 0, i32 0), i64 112), !dbg !4058
  %85 = load %struct._object*, %struct._object** %m, align 8, !dbg !4059, !tbaa !3860
  %call104 = call i32 @PyModule_AddIntConstant(%struct._object* %85, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.54, i32 0, i32 0), i64 113), !dbg !4060
  %86 = load %struct._object*, %struct._object** %m, align 8, !dbg !4061, !tbaa !3860
  %call105 = call i32 @PyModule_AddIntConstant(%struct._object* %86, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.55, i32 0, i32 0), i64 114), !dbg !4062
  %87 = load %struct._object*, %struct._object** %m, align 8, !dbg !4063, !tbaa !3860
  %call106 = call i32 @PyModule_AddIntConstant(%struct._object* %87, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i32 0, i32 0), i64 115), !dbg !4064
  %88 = load %struct._object*, %struct._object** %m, align 8, !dbg !4065, !tbaa !3860
  %call107 = call i32 @PyModule_AddIntConstant(%struct._object* %88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i64 0), !dbg !4066
  %89 = load %struct._object*, %struct._object** %m, align 8, !dbg !4067, !tbaa !3860
  %call108 = call i32 @PyModule_AddIntConstant(%struct._object* %89, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i64 1), !dbg !4068
  %90 = load %struct._object*, %struct._object** %m, align 8, !dbg !4069, !tbaa !3860
  %call109 = call i32 @PyModule_AddIntConstant(%struct._object* %90, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !4070
  %91 = load %struct._object*, %struct._object** %m, align 8, !dbg !4071, !tbaa !3860
  %call110 = call i32 @PyModule_AddIntConstant(%struct._object* %91, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i64 3), !dbg !4072
  %92 = load %struct._object*, %struct._object** %m, align 8, !dbg !4073, !tbaa !3860
  %call111 = call i32 @PyModule_AddIntConstant(%struct._object* %92, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i32 0, i32 0), i64 4), !dbg !4074
  %93 = load %struct._object*, %struct._object** %m, align 8, !dbg !4075, !tbaa !3860
  %call112 = call i32 @PyModule_AddIntConstant(%struct._object* %93, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i64 5), !dbg !4076
  %94 = load %struct._object*, %struct._object** %m, align 8, !dbg !4077, !tbaa !3860
  %call113 = call i32 @PyModule_AddIntConstant(%struct._object* %94, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i64 2147484663), !dbg !4078
  %95 = load %struct._object*, %struct._object** %m, align 8, !dbg !4079, !tbaa !3860
  %call114 = call i32 @PyModule_AddIntConstant(%struct._object* %95, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0), i64 16777216), !dbg !4080
  %96 = load %struct._object*, %struct._object** %m, align 8, !dbg !4081, !tbaa !3860
  %call115 = call i32 @PyModule_AddIntConstant(%struct._object* %96, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0), i64 33554432), !dbg !4082
  %97 = load %struct._object*, %struct._object** %m, align 8, !dbg !4083, !tbaa !3860
  %call116 = call i32 @PyModule_AddIntConstant(%struct._object* %97, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), i64 67108864), !dbg !4084
  %98 = load %struct._object*, %struct._object** %m, align 8, !dbg !4085, !tbaa !3860
  %call117 = call i32 @PyModule_AddIntConstant(%struct._object* %98, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i64 268435456), !dbg !4086
  %99 = load %struct._object*, %struct._object** %m, align 8, !dbg !4087, !tbaa !3860
  %call118 = call i32 @PyModule_AddIntConstant(%struct._object* %99, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0), i64 134217728), !dbg !4088
  %100 = load %struct._object*, %struct._object** %m, align 8, !dbg !4089, !tbaa !3860
  %call119 = call i32 @PyModule_AddIntConstant(%struct._object* %100, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.69, i32 0, i32 0), i64 4194304), !dbg !4090
  %101 = load %struct._object*, %struct._object** %m, align 8, !dbg !4091, !tbaa !3860
  %call120 = call i32 @PyModule_AddIntConstant(%struct._object* %101, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i32 0, i32 0), i64 1048576), !dbg !4092
  %102 = load %struct._object*, %struct._object** %m, align 8, !dbg !4093, !tbaa !3860
  %call121 = call i32 @PyModule_AddIntConstant(%struct._object* %102, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.71, i32 0, i32 0), i64 524288), !dbg !4094
  %103 = load %struct._object*, %struct._object** %m, align 8, !dbg !4095, !tbaa !3860
  %call122 = call i32 @PyModule_AddIntConstant(%struct._object* %103, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i32 0, i32 0), i64 131072), !dbg !4096
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %r, align 8, !dbg !4097, !tbaa !3860
  %104 = load %struct._object*, %struct._object** %r, align 8, !dbg !4098, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0, !dbg !4099
  %105 = load i64, i64* %ob_refcnt, align 8, !dbg !4100, !tbaa !4101
  %inc = add i64 %105, 1, !dbg !4100
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4100, !tbaa !4101
  %106 = load %struct._object*, %struct._object** %m, align 8, !dbg !4104, !tbaa !3860
  %107 = load %struct._object*, %struct._object** %r, align 8, !dbg !4105, !tbaa !3860
  %call123 = call i32 @PyModule_AddObject(%struct._object* %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), %struct._object* %107), !dbg !4106
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %r, align 8, !dbg !4107, !tbaa !3860
  %108 = load %struct._object*, %struct._object** %r, align 8, !dbg !4108, !tbaa !3860
  %ob_refcnt124 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 0, !dbg !4109
  %109 = load i64, i64* %ob_refcnt124, align 8, !dbg !4110, !tbaa !4101
  %inc125 = add i64 %109, 1, !dbg !4110
  store i64 %inc125, i64* %ob_refcnt124, align 8, !dbg !4110, !tbaa !4101
  %110 = load %struct._object*, %struct._object** %m, align 8, !dbg !4111, !tbaa !3860
  %111 = load %struct._object*, %struct._object** %r, align 8, !dbg !4112, !tbaa !3860
  %call126 = call i32 @PyModule_AddObject(%struct._object* %110, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i32 0, i32 0), %struct._object* %111), !dbg !4113
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %r, align 8, !dbg !4114, !tbaa !3860
  %112 = load %struct._object*, %struct._object** %r, align 8, !dbg !4115, !tbaa !3860
  %ob_refcnt127 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !4116
  %113 = load i64, i64* %ob_refcnt127, align 8, !dbg !4117, !tbaa !4101
  %inc128 = add i64 %113, 1, !dbg !4117
  store i64 %inc128, i64* %ob_refcnt127, align 8, !dbg !4117, !tbaa !4101
  %114 = load %struct._object*, %struct._object** %m, align 8, !dbg !4118, !tbaa !3860
  %115 = load %struct._object*, %struct._object** %r, align 8, !dbg !4119, !tbaa !3860
  %call129 = call i32 @PyModule_AddObject(%struct._object* %114, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), %struct._object* %115), !dbg !4120
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %r, align 8, !dbg !4121, !tbaa !3860
  %116 = load %struct._object*, %struct._object** %r, align 8, !dbg !4122, !tbaa !3860
  %ob_refcnt130 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !4123
  %117 = load i64, i64* %ob_refcnt130, align 8, !dbg !4124, !tbaa !4101
  %inc131 = add i64 %117, 1, !dbg !4124
  store i64 %inc131, i64* %ob_refcnt130, align 8, !dbg !4124, !tbaa !4101
  %118 = load %struct._object*, %struct._object** %m, align 8, !dbg !4125, !tbaa !3860
  %119 = load %struct._object*, %struct._object** %r, align 8, !dbg !4126, !tbaa !3860
  %call132 = call i32 @PyModule_AddObject(%struct._object* %118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i32 0, i32 0), %struct._object* %119), !dbg !4127
  %call133 = call %struct._object* @PyDict_New(), !dbg !4128
  store %struct._object* %call133, %struct._object** @err_codes_to_names, align 8, !dbg !4129, !tbaa !3860
  %call134 = call %struct._object* @PyDict_New(), !dbg !4130
  store %struct._object* %call134, %struct._object** @err_names_to_codes, align 8, !dbg !4131, !tbaa !3860
  %120 = load %struct._object*, %struct._object** @err_codes_to_names, align 8, !dbg !4132, !tbaa !3860
  %cmp135 = icmp eq %struct._object* %120, null, !dbg !4134
  br i1 %cmp135, label %if.then.138, label %lor.lhs.false.136, !dbg !4135

lor.lhs.false.136:                                ; preds = %if.end.63
  %121 = load %struct._object*, %struct._object** @err_names_to_codes, align 8, !dbg !4136, !tbaa !3860
  %cmp137 = icmp eq %struct._object* %121, null, !dbg !4138
  br i1 %cmp137, label %if.then.138, label %if.end.139, !dbg !4139

if.then.138:                                      ; preds = %lor.lhs.false.136, %if.end.63
  store %struct._object* null, %struct._object** %retval, !dbg !4140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4140

if.end.139:                                       ; preds = %lor.lhs.false.136
  store %struct.py_ssl_error_code* getelementptr inbounds ([329 x %struct.py_ssl_error_code], [329 x %struct.py_ssl_error_code]* @error_codes, i32 0, i32 0), %struct.py_ssl_error_code** %errcode, align 8, !dbg !4141, !tbaa !3860
  br label %while.cond, !dbg !4142

while.cond:                                       ; preds = %cleanup.cont, %if.end.139
  %122 = load %struct.py_ssl_error_code*, %struct.py_ssl_error_code** %errcode, align 8, !dbg !4143, !tbaa !3860
  %mnemonic = getelementptr inbounds %struct.py_ssl_error_code, %struct.py_ssl_error_code* %122, i32 0, i32 0, !dbg !4146
  %123 = load i8*, i8** %mnemonic, align 8, !dbg !4146, !tbaa !4147
  %cmp140 = icmp ne i8* %123, null, !dbg !4149
  br i1 %cmp140, label %while.body, label %while.end, !dbg !4142

while.body:                                       ; preds = %while.cond
  %124 = bitcast %struct._object** %mnemo to i8*, !dbg !4150
  call void @llvm.lifetime.start(i64 8, i8* %124) #1, !dbg !4150
  call void @llvm.dbg.declare(metadata %struct._object** %mnemo, metadata !2316, metadata !3830), !dbg !4151
  %125 = bitcast %struct._object** %key to i8*, !dbg !4150
  call void @llvm.lifetime.start(i64 8, i8* %125) #1, !dbg !4150
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !2318, metadata !3830), !dbg !4152
  %126 = load %struct.py_ssl_error_code*, %struct.py_ssl_error_code** %errcode, align 8, !dbg !4153, !tbaa !3860
  %mnemonic141 = getelementptr inbounds %struct.py_ssl_error_code, %struct.py_ssl_error_code* %126, i32 0, i32 0, !dbg !4154
  %127 = load i8*, i8** %mnemonic141, align 8, !dbg !4154, !tbaa !4147
  %call142 = call %struct._object* @PyUnicode_FromString(i8* %127), !dbg !4155
  store %struct._object* %call142, %struct._object** %mnemo, align 8, !dbg !4156, !tbaa !3860
  %128 = load %struct.py_ssl_error_code*, %struct.py_ssl_error_code** %errcode, align 8, !dbg !4157, !tbaa !3860
  %library = getelementptr inbounds %struct.py_ssl_error_code, %struct.py_ssl_error_code* %128, i32 0, i32 1, !dbg !4158
  %129 = load i32, i32* %library, align 4, !dbg !4158, !tbaa !4159
  %130 = load %struct.py_ssl_error_code*, %struct.py_ssl_error_code** %errcode, align 8, !dbg !4160, !tbaa !3860
  %reason = getelementptr inbounds %struct.py_ssl_error_code, %struct.py_ssl_error_code* %130, i32 0, i32 2, !dbg !4161
  %131 = load i32, i32* %reason, align 4, !dbg !4161, !tbaa !4162
  %call143 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i32 %129, i32 %131), !dbg !4163
  store %struct._object* %call143, %struct._object** %key, align 8, !dbg !4164, !tbaa !3860
  %132 = load %struct._object*, %struct._object** %mnemo, align 8, !dbg !4165, !tbaa !3860
  %cmp144 = icmp eq %struct._object* %132, null, !dbg !4167
  br i1 %cmp144, label %if.then.147, label %lor.lhs.false.145, !dbg !4168

lor.lhs.false.145:                                ; preds = %while.body
  %133 = load %struct._object*, %struct._object** %key, align 8, !dbg !4169, !tbaa !3860
  %cmp146 = icmp eq %struct._object* %133, null, !dbg !4171
  br i1 %cmp146, label %if.then.147, label %if.end.148, !dbg !4172

if.then.147:                                      ; preds = %lor.lhs.false.145, %while.body
  store %struct._object* null, %struct._object** %retval, !dbg !4173
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4173

if.end.148:                                       ; preds = %lor.lhs.false.145
  %134 = load %struct._object*, %struct._object** @err_codes_to_names, align 8, !dbg !4174, !tbaa !3860
  %135 = load %struct._object*, %struct._object** %key, align 8, !dbg !4176, !tbaa !3860
  %136 = load %struct._object*, %struct._object** %mnemo, align 8, !dbg !4177, !tbaa !3860
  %call149 = call i32 @PyDict_SetItem(%struct._object* %134, %struct._object* %135, %struct._object* %136), !dbg !4178
  %tobool150 = icmp ne i32 %call149, 0, !dbg !4178
  br i1 %tobool150, label %if.then.151, label %if.end.152, !dbg !4179

if.then.151:                                      ; preds = %if.end.148
  store %struct._object* null, %struct._object** %retval, !dbg !4180
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4180

if.end.152:                                       ; preds = %if.end.148
  %137 = load %struct._object*, %struct._object** @err_names_to_codes, align 8, !dbg !4181, !tbaa !3860
  %138 = load %struct._object*, %struct._object** %mnemo, align 8, !dbg !4183, !tbaa !3860
  %139 = load %struct._object*, %struct._object** %key, align 8, !dbg !4184, !tbaa !3860
  %call153 = call i32 @PyDict_SetItem(%struct._object* %137, %struct._object* %138, %struct._object* %139), !dbg !4185
  %tobool154 = icmp ne i32 %call153, 0, !dbg !4185
  br i1 %tobool154, label %if.then.155, label %if.end.156, !dbg !4186

if.then.155:                                      ; preds = %if.end.152
  store %struct._object* null, %struct._object** %retval, !dbg !4187
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4187

if.end.156:                                       ; preds = %if.end.152
  br label %do.body, !dbg !4188

do.body:                                          ; preds = %if.end.156
  %140 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4189
  call void @llvm.lifetime.start(i64 8, i8* %140) #1, !dbg !4189
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2319, metadata !3830), !dbg !4191
  %141 = load %struct._object*, %struct._object** %key, align 8, !dbg !4192, !tbaa !3860
  store %struct._object* %141, %struct._object** %_py_decref_tmp, align 8, !dbg !4191, !tbaa !3860
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4193, !tbaa !3860
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 0, !dbg !4195
  %143 = load i64, i64* %ob_refcnt157, align 8, !dbg !4196, !tbaa !4101
  %dec = add i64 %143, -1, !dbg !4196
  store i64 %dec, i64* %ob_refcnt157, align 8, !dbg !4196, !tbaa !4101
  %cmp158 = icmp ne i64 %dec, 0, !dbg !4197
  br i1 %cmp158, label %if.then.159, label %if.else, !dbg !4198

if.then.159:                                      ; preds = %do.body
  br label %if.end.160, !dbg !4199

if.else:                                          ; preds = %do.body
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4201, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 1, !dbg !4203
  %145 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4203, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %145, i32 0, i32 4, !dbg !4205
  %146 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4205, !tbaa !4206
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4209, !tbaa !3860
  call void %146(%struct._object* %147), !dbg !4210
  br label %if.end.160

if.end.160:                                       ; preds = %if.else, %if.then.159
  %148 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4211
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !4211
  br label %do.cond, !dbg !4213

do.cond:                                          ; preds = %if.end.160
  br label %do.end, !dbg !4214

do.end:                                           ; preds = %do.cond
  br label %do.body.161, !dbg !4216

do.body.161:                                      ; preds = %do.end
  %149 = bitcast %struct._object** %_py_decref_tmp162 to i8*, !dbg !4217
  call void @llvm.lifetime.start(i64 8, i8* %149) #1, !dbg !4217
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp162, metadata !2321, metadata !3830), !dbg !4219
  %150 = load %struct._object*, %struct._object** %mnemo, align 8, !dbg !4220, !tbaa !3860
  store %struct._object* %150, %struct._object** %_py_decref_tmp162, align 8, !dbg !4219, !tbaa !3860
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp162, align 8, !dbg !4221, !tbaa !3860
  %ob_refcnt163 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 0, !dbg !4223
  %152 = load i64, i64* %ob_refcnt163, align 8, !dbg !4224, !tbaa !4101
  %dec164 = add i64 %152, -1, !dbg !4224
  store i64 %dec164, i64* %ob_refcnt163, align 8, !dbg !4224, !tbaa !4101
  %cmp165 = icmp ne i64 %dec164, 0, !dbg !4225
  br i1 %cmp165, label %if.then.166, label %if.else.167, !dbg !4226

if.then.166:                                      ; preds = %do.body.161
  br label %if.end.170, !dbg !4227

if.else.167:                                      ; preds = %do.body.161
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp162, align 8, !dbg !4229, !tbaa !3860
  %ob_type168 = getelementptr inbounds %struct._object, %struct._object* %153, i32 0, i32 1, !dbg !4231
  %154 = load %struct._typeobject*, %struct._typeobject** %ob_type168, align 8, !dbg !4231, !tbaa !4204
  %tp_dealloc169 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %154, i32 0, i32 4, !dbg !4232
  %155 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc169, align 8, !dbg !4232, !tbaa !4206
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp162, align 8, !dbg !4233, !tbaa !3860
  call void %155(%struct._object* %156), !dbg !4234
  br label %if.end.170

if.end.170:                                       ; preds = %if.else.167, %if.then.166
  %157 = bitcast %struct._object** %_py_decref_tmp162 to i8*, !dbg !4235
  call void @llvm.lifetime.end(i64 8, i8* %157) #1, !dbg !4235
  br label %do.cond.171, !dbg !4236

do.cond.171:                                      ; preds = %if.end.170
  br label %do.end.172, !dbg !4237

do.end.172:                                       ; preds = %do.cond.171
  %158 = load %struct.py_ssl_error_code*, %struct.py_ssl_error_code** %errcode, align 8, !dbg !4239, !tbaa !3860
  %incdec.ptr = getelementptr %struct.py_ssl_error_code, %struct.py_ssl_error_code* %158, i32 1, !dbg !4239
  store %struct.py_ssl_error_code* %incdec.ptr, %struct.py_ssl_error_code** %errcode, align 8, !dbg !4239, !tbaa !3860
  store i32 0, i32* %cleanup.dest.slot, !dbg !4240
  br label %cleanup, !dbg !4240

cleanup:                                          ; preds = %do.end.172, %if.then.155, %if.then.151, %if.then.147
  %159 = bitcast %struct._object** %key to i8*, !dbg !4241
  call void @llvm.lifetime.end(i64 8, i8* %159) #1, !dbg !4241
  %160 = bitcast %struct._object** %mnemo to i8*, !dbg !4241
  call void @llvm.lifetime.end(i64 8, i8* %160) #1, !dbg !4241
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %while.cond, !dbg !4142

while.end:                                        ; preds = %while.cond
  %161 = load %struct._object*, %struct._object** %m, align 8, !dbg !4242, !tbaa !3860
  %162 = load %struct._object*, %struct._object** @err_codes_to_names, align 8, !dbg !4244, !tbaa !3860
  %call174 = call i32 @PyModule_AddObject(%struct._object* %161, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), %struct._object* %162), !dbg !4245
  %tobool175 = icmp ne i32 %call174, 0, !dbg !4245
  br i1 %tobool175, label %if.then.176, label %if.end.177, !dbg !4246

if.then.176:                                      ; preds = %while.end
  store %struct._object* null, %struct._object** %retval, !dbg !4247
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4247

if.end.177:                                       ; preds = %while.end
  %163 = load %struct._object*, %struct._object** %m, align 8, !dbg !4248, !tbaa !3860
  %164 = load %struct._object*, %struct._object** @err_names_to_codes, align 8, !dbg !4250, !tbaa !3860
  %call178 = call i32 @PyModule_AddObject(%struct._object* %163, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i32 0, i32 0), %struct._object* %164), !dbg !4251
  %tobool179 = icmp ne i32 %call178, 0, !dbg !4251
  br i1 %tobool179, label %if.then.180, label %if.end.181, !dbg !4252

if.then.180:                                      ; preds = %if.end.177
  store %struct._object* null, %struct._object** %retval, !dbg !4253
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4253

if.end.181:                                       ; preds = %if.end.177
  %call182 = call %struct._object* @PyDict_New(), !dbg !4254
  store %struct._object* %call182, %struct._object** @lib_codes_to_names, align 8, !dbg !4255, !tbaa !3860
  %165 = load %struct._object*, %struct._object** @lib_codes_to_names, align 8, !dbg !4256, !tbaa !3860
  %cmp183 = icmp eq %struct._object* %165, null, !dbg !4258
  br i1 %cmp183, label %if.then.184, label %if.end.185, !dbg !4259

if.then.184:                                      ; preds = %if.end.181
  store %struct._object* null, %struct._object** %retval, !dbg !4260
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4260

if.end.185:                                       ; preds = %if.end.181
  store %struct.py_ssl_library_code* getelementptr inbounds ([4 x %struct.py_ssl_library_code], [4 x %struct.py_ssl_library_code]* @library_codes, i32 0, i32 0), %struct.py_ssl_library_code** %libcode, align 8, !dbg !4261, !tbaa !3860
  br label %while.cond.186, !dbg !4262

while.cond.186:                                   ; preds = %cleanup.cont.236, %if.end.185
  %166 = load %struct.py_ssl_library_code*, %struct.py_ssl_library_code** %libcode, align 8, !dbg !4263, !tbaa !3860
  %library187 = getelementptr inbounds %struct.py_ssl_library_code, %struct.py_ssl_library_code* %166, i32 0, i32 0, !dbg !4264
  %167 = load i8*, i8** %library187, align 8, !dbg !4264, !tbaa !4265
  %cmp188 = icmp ne i8* %167, null, !dbg !4267
  br i1 %cmp188, label %while.body.189, label %while.end.237, !dbg !4262

while.body.189:                                   ; preds = %while.cond.186
  %168 = bitcast %struct._object** %mnemo190 to i8*, !dbg !4268
  call void @llvm.lifetime.start(i64 8, i8* %168) #1, !dbg !4268
  call void @llvm.dbg.declare(metadata %struct._object** %mnemo190, metadata !2323, metadata !3830), !dbg !4269
  %169 = bitcast %struct._object** %key191 to i8*, !dbg !4268
  call void @llvm.lifetime.start(i64 8, i8* %169) #1, !dbg !4268
  call void @llvm.dbg.declare(metadata %struct._object** %key191, metadata !2325, metadata !3830), !dbg !4270
  %170 = load %struct.py_ssl_library_code*, %struct.py_ssl_library_code** %libcode, align 8, !dbg !4271, !tbaa !3860
  %code = getelementptr inbounds %struct.py_ssl_library_code, %struct.py_ssl_library_code* %170, i32 0, i32 1, !dbg !4272
  %171 = load i32, i32* %code, align 4, !dbg !4272, !tbaa !4273
  %conv = sext i32 %171 to i64, !dbg !4271
  %call192 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !4274
  store %struct._object* %call192, %struct._object** %key191, align 8, !dbg !4275, !tbaa !3860
  %172 = load %struct.py_ssl_library_code*, %struct.py_ssl_library_code** %libcode, align 8, !dbg !4276, !tbaa !3860
  %library193 = getelementptr inbounds %struct.py_ssl_library_code, %struct.py_ssl_library_code* %172, i32 0, i32 0, !dbg !4277
  %173 = load i8*, i8** %library193, align 8, !dbg !4277, !tbaa !4265
  %call194 = call %struct._object* @PyUnicode_FromString(i8* %173), !dbg !4278
  store %struct._object* %call194, %struct._object** %mnemo190, align 8, !dbg !4279, !tbaa !3860
  %174 = load %struct._object*, %struct._object** %key191, align 8, !dbg !4280, !tbaa !3860
  %cmp195 = icmp eq %struct._object* %174, null, !dbg !4282
  br i1 %cmp195, label %if.then.200, label %lor.lhs.false.197, !dbg !4283

lor.lhs.false.197:                                ; preds = %while.body.189
  %175 = load %struct._object*, %struct._object** %mnemo190, align 8, !dbg !4284, !tbaa !3860
  %cmp198 = icmp eq %struct._object* %175, null, !dbg !4286
  br i1 %cmp198, label %if.then.200, label %if.end.201, !dbg !4287

if.then.200:                                      ; preds = %lor.lhs.false.197, %while.body.189
  store %struct._object* null, %struct._object** %retval, !dbg !4288
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233, !dbg !4288

if.end.201:                                       ; preds = %lor.lhs.false.197
  %176 = load %struct._object*, %struct._object** @lib_codes_to_names, align 8, !dbg !4289, !tbaa !3860
  %177 = load %struct._object*, %struct._object** %key191, align 8, !dbg !4291, !tbaa !3860
  %178 = load %struct._object*, %struct._object** %mnemo190, align 8, !dbg !4292, !tbaa !3860
  %call202 = call i32 @PyDict_SetItem(%struct._object* %176, %struct._object* %177, %struct._object* %178), !dbg !4293
  %tobool203 = icmp ne i32 %call202, 0, !dbg !4293
  br i1 %tobool203, label %if.then.204, label %if.end.205, !dbg !4294

if.then.204:                                      ; preds = %if.end.201
  store %struct._object* null, %struct._object** %retval, !dbg !4295
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233, !dbg !4295

if.end.205:                                       ; preds = %if.end.201
  br label %do.body.206, !dbg !4296

do.body.206:                                      ; preds = %if.end.205
  %179 = bitcast %struct._object** %_py_decref_tmp207 to i8*, !dbg !4297
  call void @llvm.lifetime.start(i64 8, i8* %179) #1, !dbg !4297
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp207, metadata !2326, metadata !3830), !dbg !4299
  %180 = load %struct._object*, %struct._object** %key191, align 8, !dbg !4300, !tbaa !3860
  store %struct._object* %180, %struct._object** %_py_decref_tmp207, align 8, !dbg !4299, !tbaa !3860
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp207, align 8, !dbg !4301, !tbaa !3860
  %ob_refcnt208 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 0, !dbg !4303
  %182 = load i64, i64* %ob_refcnt208, align 8, !dbg !4304, !tbaa !4101
  %dec209 = add i64 %182, -1, !dbg !4304
  store i64 %dec209, i64* %ob_refcnt208, align 8, !dbg !4304, !tbaa !4101
  %cmp210 = icmp ne i64 %dec209, 0, !dbg !4305
  br i1 %cmp210, label %if.then.212, label %if.else.213, !dbg !4306

if.then.212:                                      ; preds = %do.body.206
  br label %if.end.216, !dbg !4307

if.else.213:                                      ; preds = %do.body.206
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp207, align 8, !dbg !4309, !tbaa !3860
  %ob_type214 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 1, !dbg !4311
  %184 = load %struct._typeobject*, %struct._typeobject** %ob_type214, align 8, !dbg !4311, !tbaa !4204
  %tp_dealloc215 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %184, i32 0, i32 4, !dbg !4312
  %185 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc215, align 8, !dbg !4312, !tbaa !4206
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp207, align 8, !dbg !4313, !tbaa !3860
  call void %185(%struct._object* %186), !dbg !4314
  br label %if.end.216

if.end.216:                                       ; preds = %if.else.213, %if.then.212
  %187 = bitcast %struct._object** %_py_decref_tmp207 to i8*, !dbg !4315
  call void @llvm.lifetime.end(i64 8, i8* %187) #1, !dbg !4315
  br label %do.cond.217, !dbg !4317

do.cond.217:                                      ; preds = %if.end.216
  br label %do.end.218, !dbg !4318

do.end.218:                                       ; preds = %do.cond.217
  br label %do.body.219, !dbg !4320

do.body.219:                                      ; preds = %do.end.218
  %188 = bitcast %struct._object** %_py_decref_tmp220 to i8*, !dbg !4321
  call void @llvm.lifetime.start(i64 8, i8* %188) #1, !dbg !4321
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp220, metadata !2328, metadata !3830), !dbg !4323
  %189 = load %struct._object*, %struct._object** %mnemo190, align 8, !dbg !4324, !tbaa !3860
  store %struct._object* %189, %struct._object** %_py_decref_tmp220, align 8, !dbg !4323, !tbaa !3860
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8, !dbg !4325, !tbaa !3860
  %ob_refcnt221 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 0, !dbg !4327
  %191 = load i64, i64* %ob_refcnt221, align 8, !dbg !4328, !tbaa !4101
  %dec222 = add i64 %191, -1, !dbg !4328
  store i64 %dec222, i64* %ob_refcnt221, align 8, !dbg !4328, !tbaa !4101
  %cmp223 = icmp ne i64 %dec222, 0, !dbg !4329
  br i1 %cmp223, label %if.then.225, label %if.else.226, !dbg !4330

if.then.225:                                      ; preds = %do.body.219
  br label %if.end.229, !dbg !4331

if.else.226:                                      ; preds = %do.body.219
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8, !dbg !4333, !tbaa !3860
  %ob_type227 = getelementptr inbounds %struct._object, %struct._object* %192, i32 0, i32 1, !dbg !4335
  %193 = load %struct._typeobject*, %struct._typeobject** %ob_type227, align 8, !dbg !4335, !tbaa !4204
  %tp_dealloc228 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %193, i32 0, i32 4, !dbg !4336
  %194 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc228, align 8, !dbg !4336, !tbaa !4206
  %195 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8, !dbg !4337, !tbaa !3860
  call void %194(%struct._object* %195), !dbg !4338
  br label %if.end.229

if.end.229:                                       ; preds = %if.else.226, %if.then.225
  %196 = bitcast %struct._object** %_py_decref_tmp220 to i8*, !dbg !4339
  call void @llvm.lifetime.end(i64 8, i8* %196) #1, !dbg !4339
  br label %do.cond.230, !dbg !4340

do.cond.230:                                      ; preds = %if.end.229
  br label %do.end.231, !dbg !4341

do.end.231:                                       ; preds = %do.cond.230
  %197 = load %struct.py_ssl_library_code*, %struct.py_ssl_library_code** %libcode, align 8, !dbg !4343, !tbaa !3860
  %incdec.ptr232 = getelementptr %struct.py_ssl_library_code, %struct.py_ssl_library_code* %197, i32 1, !dbg !4343
  store %struct.py_ssl_library_code* %incdec.ptr232, %struct.py_ssl_library_code** %libcode, align 8, !dbg !4343, !tbaa !3860
  store i32 0, i32* %cleanup.dest.slot, !dbg !4344
  br label %cleanup.233, !dbg !4344

cleanup.233:                                      ; preds = %do.end.231, %if.then.204, %if.then.200
  %198 = bitcast %struct._object** %key191 to i8*, !dbg !4345
  call void @llvm.lifetime.end(i64 8, i8* %198) #1, !dbg !4345
  %199 = bitcast %struct._object** %mnemo190 to i8*, !dbg !4345
  call void @llvm.lifetime.end(i64 8, i8* %199) #1, !dbg !4345
  %cleanup.dest.235 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.233
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.235, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.236, label %NewDefault.1

cleanup.cont.236:                                 ; preds = %LeafBlock.2
  br label %while.cond.186, !dbg !4262

while.end.237:                                    ; preds = %while.cond.186
  %200 = load %struct._object*, %struct._object** %m, align 8, !dbg !4346, !tbaa !3860
  %201 = load %struct._object*, %struct._object** @lib_codes_to_names, align 8, !dbg !4348, !tbaa !3860
  %call238 = call i32 @PyModule_AddObject(%struct._object* %200, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80, i32 0, i32 0), %struct._object* %201), !dbg !4349
  %tobool239 = icmp ne i32 %call238, 0, !dbg !4349
  br i1 %tobool239, label %if.then.240, label %if.end.241, !dbg !4350

if.then.240:                                      ; preds = %while.end.237
  store %struct._object* null, %struct._object** %retval, !dbg !4351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4351

if.end.241:                                       ; preds = %while.end.237
  %call242 = call i64 @SSLeay(), !dbg !4352
  store i64 %call242, i64* %libver, align 8, !dbg !4353, !tbaa !4354
  %202 = load i64, i64* %libver, align 8, !dbg !4355, !tbaa !4354
  %call243 = call %struct._object* @PyLong_FromUnsignedLong(i64 %202), !dbg !4356
  store %struct._object* %call243, %struct._object** %r, align 8, !dbg !4357, !tbaa !3860
  %203 = load %struct._object*, %struct._object** %r, align 8, !dbg !4358, !tbaa !3860
  %cmp244 = icmp eq %struct._object* %203, null, !dbg !4360
  br i1 %cmp244, label %if.then.246, label %if.end.247, !dbg !4361

if.then.246:                                      ; preds = %if.end.241
  store %struct._object* null, %struct._object** %retval, !dbg !4362
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4362

if.end.247:                                       ; preds = %if.end.241
  %204 = load %struct._object*, %struct._object** %m, align 8, !dbg !4363, !tbaa !3860
  %205 = load %struct._object*, %struct._object** %r, align 8, !dbg !4365, !tbaa !3860
  %call248 = call i32 @PyModule_AddObject(%struct._object* %204, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.81, i32 0, i32 0), %struct._object* %205), !dbg !4366
  %tobool249 = icmp ne i32 %call248, 0, !dbg !4366
  br i1 %tobool249, label %if.then.250, label %if.end.251, !dbg !4367

if.then.250:                                      ; preds = %if.end.247
  store %struct._object* null, %struct._object** %retval, !dbg !4368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4368

if.end.251:                                       ; preds = %if.end.247
  %206 = load i64, i64* %libver, align 8, !dbg !4369, !tbaa !4354
  call void @parse_openssl_version(i64 %206, i32* %major, i32* %minor, i32* %fix, i32* %patch, i32* %status), !dbg !4370
  %207 = load i32, i32* %major, align 4, !dbg !4371, !tbaa !4372
  %208 = load i32, i32* %minor, align 4, !dbg !4373, !tbaa !4372
  %209 = load i32, i32* %fix, align 4, !dbg !4374, !tbaa !4372
  %210 = load i32, i32* %patch, align 4, !dbg !4375, !tbaa !4372
  %211 = load i32, i32* %status, align 4, !dbg !4376, !tbaa !4372
  %call252 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), i32 %207, i32 %208, i32 %209, i32 %210, i32 %211), !dbg !4377
  store %struct._object* %call252, %struct._object** %r, align 8, !dbg !4378, !tbaa !3860
  %212 = load %struct._object*, %struct._object** %r, align 8, !dbg !4379, !tbaa !3860
  %cmp253 = icmp eq %struct._object* %212, null, !dbg !4381
  br i1 %cmp253, label %if.then.258, label %lor.lhs.false.255, !dbg !4382

lor.lhs.false.255:                                ; preds = %if.end.251
  %213 = load %struct._object*, %struct._object** %m, align 8, !dbg !4383, !tbaa !3860
  %214 = load %struct._object*, %struct._object** %r, align 8, !dbg !4385, !tbaa !3860
  %call256 = call i32 @PyModule_AddObject(%struct._object* %213, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i32 0, i32 0), %struct._object* %214), !dbg !4386
  %tobool257 = icmp ne i32 %call256, 0, !dbg !4386
  br i1 %tobool257, label %if.then.258, label %if.end.259, !dbg !4387

if.then.258:                                      ; preds = %lor.lhs.false.255, %if.end.251
  store %struct._object* null, %struct._object** %retval, !dbg !4388
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4388

if.end.259:                                       ; preds = %lor.lhs.false.255
  %call260 = call i8* @SSLeay_version(i32 0), !dbg !4389
  %call261 = call %struct._object* @PyUnicode_FromString(i8* %call260), !dbg !4390
  store %struct._object* %call261, %struct._object** %r, align 8, !dbg !4391, !tbaa !3860
  %215 = load %struct._object*, %struct._object** %r, align 8, !dbg !4392, !tbaa !3860
  %cmp262 = icmp eq %struct._object* %215, null, !dbg !4394
  br i1 %cmp262, label %if.then.267, label %lor.lhs.false.264, !dbg !4395

lor.lhs.false.264:                                ; preds = %if.end.259
  %216 = load %struct._object*, %struct._object** %m, align 8, !dbg !4396, !tbaa !3860
  %217 = load %struct._object*, %struct._object** %r, align 8, !dbg !4398, !tbaa !3860
  %call265 = call i32 @PyModule_AddObject(%struct._object* %216, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), %struct._object* %217), !dbg !4399
  %tobool266 = icmp ne i32 %call265, 0, !dbg !4399
  br i1 %tobool266, label %if.then.267, label %if.end.268, !dbg !4400

if.then.267:                                      ; preds = %lor.lhs.false.264, %if.end.259
  store %struct._object* null, %struct._object** %retval, !dbg !4401
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4401

if.end.268:                                       ; preds = %lor.lhs.false.264
  store i64 268439647, i64* %libver, align 8, !dbg !4402, !tbaa !4354
  %218 = load i64, i64* %libver, align 8, !dbg !4403, !tbaa !4354
  call void @parse_openssl_version(i64 %218, i32* %major, i32* %minor, i32* %fix, i32* %patch, i32* %status), !dbg !4404
  %219 = load i32, i32* %major, align 4, !dbg !4405, !tbaa !4372
  %220 = load i32, i32* %minor, align 4, !dbg !4406, !tbaa !4372
  %221 = load i32, i32* %fix, align 4, !dbg !4407, !tbaa !4372
  %222 = load i32, i32* %patch, align 4, !dbg !4408, !tbaa !4372
  %223 = load i32, i32* %status, align 4, !dbg !4409, !tbaa !4372
  %call269 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), i32 %219, i32 %220, i32 %221, i32 %222, i32 %223), !dbg !4410
  store %struct._object* %call269, %struct._object** %r, align 8, !dbg !4411, !tbaa !3860
  %224 = load %struct._object*, %struct._object** %r, align 8, !dbg !4412, !tbaa !3860
  %cmp270 = icmp eq %struct._object* %224, null, !dbg !4414
  br i1 %cmp270, label %if.then.275, label %lor.lhs.false.272, !dbg !4415

lor.lhs.false.272:                                ; preds = %if.end.268
  %225 = load %struct._object*, %struct._object** %m, align 8, !dbg !4416, !tbaa !3860
  %226 = load %struct._object*, %struct._object** %r, align 8, !dbg !4418, !tbaa !3860
  %call273 = call i32 @PyModule_AddObject(%struct._object* %225, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i32 0, i32 0), %struct._object* %226), !dbg !4419
  %tobool274 = icmp ne i32 %call273, 0, !dbg !4419
  br i1 %tobool274, label %if.then.275, label %if.end.276, !dbg !4420

if.then.275:                                      ; preds = %lor.lhs.false.272, %if.end.268
  store %struct._object* null, %struct._object** %retval, !dbg !4421
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4421

if.end.276:                                       ; preds = %lor.lhs.false.272
  %227 = load %struct._object*, %struct._object** %m, align 8, !dbg !4422, !tbaa !3860
  store %struct._object* %227, %struct._object** %retval, !dbg !4423
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !4423

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.277

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.277

cleanup.277:                                      ; preds = %NewDefault.1, %NewDefault, %if.end.276, %if.then.275, %if.then.267, %if.then.258, %if.then.250, %if.then.246, %if.then.240, %if.then.184, %if.then.180, %if.then.176, %if.then.138, %if.then.62, %if.then.58, %if.then.54, %if.then.35, %if.then.20, %if.then.16, %if.then.11, %if.then.7, %if.then.3, %if.then
  %228 = bitcast %struct.py_ssl_library_code** %libcode to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %228) #1, !dbg !4424
  %229 = bitcast %struct.py_ssl_error_code** %errcode to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %229) #1, !dbg !4424
  %230 = bitcast %struct.PySocketModule_APIObject** %socket_api to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %230) #1, !dbg !4424
  %231 = bitcast i32* %status to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 4, i8* %231) #1, !dbg !4424
  %232 = bitcast i32* %patch to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 4, i8* %232) #1, !dbg !4424
  %233 = bitcast i32* %fix to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 4, i8* %233) #1, !dbg !4424
  %234 = bitcast i32* %minor to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 4, i8* %234) #1, !dbg !4424
  %235 = bitcast i32* %major to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 4, i8* %235) #1, !dbg !4424
  %236 = bitcast i64* %libver to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %236) #1, !dbg !4424
  %237 = bitcast %struct._object** %r to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %237) #1, !dbg !4424
  %238 = bitcast %struct._object** %d to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %238) #1, !dbg !4424
  %239 = bitcast %struct._object** %m to i8*, !dbg !4424
  call void @llvm.lifetime.end(i64 8, i8* %239) #1, !dbg !4424
  %240 = load %struct._object*, %struct._object** %retval, !dbg !4424
  ret %struct._object* %240, !dbg !4424
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare i32 @PyType_Ready(%struct._typeobject*) #3

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare %struct._object* @PyModule_GetDict(%struct._object*) #3

declare i8* @PyCapsule_Import(i8*, i32) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare void @SSL_load_error_strings() #3

declare i32 @SSL_library_init() #3

; Function Attrs: nounwind uwtable
define internal i32 @_setup_ssl_threads() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %j = alloca i32, align 4
  %0 = bitcast i32* %i to i8*, !dbg !4425
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4425
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3580, metadata !3830), !dbg !4426
  %1 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4427, !tbaa !3860
  %cmp = icmp eq i8** %1, null, !dbg !4428
  br i1 %cmp, label %if.then, label %if.end.26, !dbg !4429

if.then:                                          ; preds = %entry
  %call = call i32 @CRYPTO_num_locks(), !dbg !4430
  store i32 %call, i32* @_ssl_locks_count, align 4, !dbg !4431, !tbaa !4372
  %2 = load i32, i32* @_ssl_locks_count, align 4, !dbg !4432, !tbaa !4372
  %conv = zext i32 %2 to i64, !dbg !4432
  %mul = mul i64 8, %conv, !dbg !4433
  %call1 = call i8* @PyMem_Malloc(i64 %mul), !dbg !4434
  %3 = bitcast i8* %call1 to i8**, !dbg !4435
  store i8** %3, i8*** @_ssl_locks, align 8, !dbg !4436, !tbaa !3860
  %4 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4437, !tbaa !3860
  %cmp2 = icmp eq i8** %4, null, !dbg !4439
  br i1 %cmp2, label %if.then.4, label %if.end, !dbg !4440

if.then.4:                                        ; preds = %if.then
  store i32 0, i32* %retval, !dbg !4441
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4441

if.end:                                           ; preds = %if.then
  %5 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4442, !tbaa !3860
  %6 = bitcast i8** %5 to i8*, !dbg !4443
  %7 = load i32, i32* @_ssl_locks_count, align 4, !dbg !4444, !tbaa !4372
  %conv5 = zext i32 %7 to i64, !dbg !4444
  %mul6 = mul i64 8, %conv5, !dbg !4445
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 %mul6, i32 8, i1 false), !dbg !4443
  store i32 0, i32* %i, align 4, !dbg !4446, !tbaa !4372
  br label %for.cond, !dbg !4447

for.cond:                                         ; preds = %for.inc.22, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !4448, !tbaa !4372
  %9 = load i32, i32* @_ssl_locks_count, align 4, !dbg !4451, !tbaa !4372
  %cmp7 = icmp ult i32 %8, %9, !dbg !4452
  br i1 %cmp7, label %for.body, label %for.end.24, !dbg !4453

for.body:                                         ; preds = %for.cond
  %call9 = call i8* @PyThread_allocate_lock(), !dbg !4454
  %10 = load i32, i32* %i, align 4, !dbg !4455, !tbaa !4372
  %idxprom = zext i32 %10 to i64, !dbg !4456
  %11 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4456, !tbaa !3860
  %arrayidx = getelementptr i8*, i8** %11, i64 %idxprom, !dbg !4456
  store i8* %call9, i8** %arrayidx, align 8, !dbg !4457, !tbaa !3860
  %12 = load i32, i32* %i, align 4, !dbg !4458, !tbaa !4372
  %idxprom10 = zext i32 %12 to i64, !dbg !4459
  %13 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4459, !tbaa !3860
  %arrayidx11 = getelementptr i8*, i8** %13, i64 %idxprom10, !dbg !4459
  %14 = load i8*, i8** %arrayidx11, align 8, !dbg !4459, !tbaa !3860
  %cmp12 = icmp eq i8* %14, null, !dbg !4460
  br i1 %cmp12, label %if.then.14, label %if.end.21, !dbg !4461

if.then.14:                                       ; preds = %for.body
  %15 = bitcast i32* %j to i8*, !dbg !4462
  call void @llvm.lifetime.start(i64 4, i8* %15) #1, !dbg !4462
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3581, metadata !3830), !dbg !4463
  store i32 0, i32* %j, align 4, !dbg !4464, !tbaa !4372
  br label %for.cond.15, !dbg !4466

for.cond.15:                                      ; preds = %for.inc, %if.then.14
  %16 = load i32, i32* %j, align 4, !dbg !4467, !tbaa !4372
  %17 = load i32, i32* %i, align 4, !dbg !4471, !tbaa !4372
  %cmp16 = icmp ult i32 %16, %17, !dbg !4472
  br i1 %cmp16, label %for.body.18, label %for.end, !dbg !4473

for.body.18:                                      ; preds = %for.cond.15
  %18 = load i32, i32* %j, align 4, !dbg !4474, !tbaa !4372
  %idxprom19 = zext i32 %18 to i64, !dbg !4476
  %19 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4476, !tbaa !3860
  %arrayidx20 = getelementptr i8*, i8** %19, i64 %idxprom19, !dbg !4476
  %20 = load i8*, i8** %arrayidx20, align 8, !dbg !4476, !tbaa !3860
  call void @PyThread_free_lock(i8* %20), !dbg !4477
  br label %for.inc, !dbg !4478

for.inc:                                          ; preds = %for.body.18
  %21 = load i32, i32* %j, align 4, !dbg !4479, !tbaa !4372
  %inc = add i32 %21, 1, !dbg !4479
  store i32 %inc, i32* %j, align 4, !dbg !4479, !tbaa !4372
  br label %for.cond.15, !dbg !4480

for.end:                                          ; preds = %for.cond.15
  %22 = load i8**, i8*** @_ssl_locks, align 8, !dbg !4481, !tbaa !3860
  %23 = bitcast i8** %22 to i8*, !dbg !4481
  call void @PyMem_Free(i8* %23), !dbg !4482
  store i32 0, i32* %retval, !dbg !4483
  store i32 1, i32* %cleanup.dest.slot
  %24 = bitcast i32* %j to i8*, !dbg !4484
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !4484
  br label %cleanup

if.end.21:                                        ; preds = %for.body
  br label %for.inc.22, !dbg !4485

for.inc.22:                                       ; preds = %if.end.21
  %25 = load i32, i32* %i, align 4, !dbg !4486, !tbaa !4372
  %inc23 = add i32 %25, 1, !dbg !4486
  store i32 %inc23, i32* %i, align 4, !dbg !4486, !tbaa !4372
  br label %for.cond, !dbg !4487

for.end.24:                                       ; preds = %for.cond
  call void @CRYPTO_set_locking_callback(void (i32, i32, i8*, i32)* @_ssl_thread_locking_function), !dbg !4488
  %call25 = call i32 @CRYPTO_THREADID_set_callback(void (%struct.crypto_threadid_st*)* @_ssl_threadid_callback), !dbg !4489
  br label %if.end.26, !dbg !4490

if.end.26:                                        ; preds = %for.end.24, %entry
  store i32 1, i32* %retval, !dbg !4491
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4491

cleanup:                                          ; preds = %if.end.26, %for.end, %if.then.4
  %26 = bitcast i32* %i to i8*, !dbg !4492
  call void @llvm.lifetime.end(i64 4, i8* %26) #1, !dbg !4492
  %27 = load i32, i32* %retval, !dbg !4492
  ret i32 %27, !dbg !4492
}

declare void @OPENSSL_add_all_algorithms_noconf() #3

declare %struct._object* @PyType_FromSpec(%struct.PyType_Spec*) #3

declare %struct._object* @PyErr_NewExceptionWithDoc(i8*, i8*, %struct._object*, %struct._object*) #3

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #3

declare i32 @PyModule_AddIntConstant(%struct._object*, i8*, i64) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyDict_New() #3

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare %struct._object* @Py_BuildValue(i8*, ...) #3

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare %struct._object* @PyLong_FromLong(i64) #3

declare i64 @SSLeay() #3

declare %struct._object* @PyLong_FromUnsignedLong(i64) #3

; Function Attrs: nounwind uwtable
define internal void @parse_openssl_version(i64 %libver, i32* %major, i32* %minor, i32* %fix, i32* %patch, i32* %status) #0 {
entry:
  %libver.addr = alloca i64, align 8
  %major.addr = alloca i32*, align 8
  %minor.addr = alloca i32*, align 8
  %fix.addr = alloca i32*, align 8
  %patch.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  store i64 %libver, i64* %libver.addr, align 8, !tbaa !4354
  call void @llvm.dbg.declare(metadata i64* %libver.addr, metadata !3634, metadata !3830), !dbg !4493
  store i32* %major, i32** %major.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %major.addr, metadata !3635, metadata !3830), !dbg !4494
  store i32* %minor, i32** %minor.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %minor.addr, metadata !3636, metadata !3830), !dbg !4495
  store i32* %fix, i32** %fix.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %fix.addr, metadata !3637, metadata !3830), !dbg !4496
  store i32* %patch, i32** %patch.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %patch.addr, metadata !3638, metadata !3830), !dbg !4497
  store i32* %status, i32** %status.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !3639, metadata !3830), !dbg !4498
  %0 = load i64, i64* %libver.addr, align 8, !dbg !4499, !tbaa !4354
  %and = and i64 %0, 15, !dbg !4500
  %conv = trunc i64 %and to i32, !dbg !4499
  %1 = load i32*, i32** %status.addr, align 8, !dbg !4501, !tbaa !3860
  store i32 %conv, i32* %1, align 4, !dbg !4502, !tbaa !4372
  %2 = load i64, i64* %libver.addr, align 8, !dbg !4503, !tbaa !4354
  %shr = lshr i64 %2, 4, !dbg !4503
  store i64 %shr, i64* %libver.addr, align 8, !dbg !4503, !tbaa !4354
  %3 = load i64, i64* %libver.addr, align 8, !dbg !4504, !tbaa !4354
  %and1 = and i64 %3, 255, !dbg !4505
  %conv2 = trunc i64 %and1 to i32, !dbg !4504
  %4 = load i32*, i32** %patch.addr, align 8, !dbg !4506, !tbaa !3860
  store i32 %conv2, i32* %4, align 4, !dbg !4507, !tbaa !4372
  %5 = load i64, i64* %libver.addr, align 8, !dbg !4508, !tbaa !4354
  %shr3 = lshr i64 %5, 8, !dbg !4508
  store i64 %shr3, i64* %libver.addr, align 8, !dbg !4508, !tbaa !4354
  %6 = load i64, i64* %libver.addr, align 8, !dbg !4509, !tbaa !4354
  %and4 = and i64 %6, 255, !dbg !4510
  %conv5 = trunc i64 %and4 to i32, !dbg !4509
  %7 = load i32*, i32** %fix.addr, align 8, !dbg !4511, !tbaa !3860
  store i32 %conv5, i32* %7, align 4, !dbg !4512, !tbaa !4372
  %8 = load i64, i64* %libver.addr, align 8, !dbg !4513, !tbaa !4354
  %shr6 = lshr i64 %8, 8, !dbg !4513
  store i64 %shr6, i64* %libver.addr, align 8, !dbg !4513, !tbaa !4354
  %9 = load i64, i64* %libver.addr, align 8, !dbg !4514, !tbaa !4354
  %and7 = and i64 %9, 255, !dbg !4515
  %conv8 = trunc i64 %and7 to i32, !dbg !4514
  %10 = load i32*, i32** %minor.addr, align 8, !dbg !4516, !tbaa !3860
  store i32 %conv8, i32* %10, align 4, !dbg !4517, !tbaa !4372
  %11 = load i64, i64* %libver.addr, align 8, !dbg !4518, !tbaa !4354
  %shr9 = lshr i64 %11, 8, !dbg !4518
  store i64 %shr9, i64* %libver.addr, align 8, !dbg !4518, !tbaa !4354
  %12 = load i64, i64* %libver.addr, align 8, !dbg !4519, !tbaa !4354
  %and10 = and i64 %12, 255, !dbg !4520
  %conv11 = trunc i64 %and10 to i32, !dbg !4519
  %13 = load i32*, i32** %major.addr, align 8, !dbg !4521, !tbaa !3860
  store i32 %conv11, i32* %13, align 4, !dbg !4522, !tbaa !4372
  ret void, !dbg !4523
}

declare i8* @SSLeay_version(i32) #3

; Function Attrs: nounwind uwtable
define internal void @context_dealloc(%struct.PySSLContext* %self) #0 {
entry:
  %self.addr = alloca %struct.PySSLContext*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2334, metadata !3830), !dbg !4524
  %0 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4525, !tbaa !3860
  %call = call i32 @context_clear(%struct.PySSLContext* %0), !dbg !4526
  %1 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4527, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %1, i32 0, i32 1, !dbg !4528
  %2 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4528, !tbaa !4529
  call void @SSL_CTX_free(%struct.ssl_ctx_st* %2), !dbg !4531
  %3 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4532, !tbaa !3860
  %npn_protocols = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %3, i32 0, i32 2, !dbg !4533
  %4 = load i8*, i8** %npn_protocols, align 8, !dbg !4533, !tbaa !4534
  call void @PyMem_Free(i8* %4), !dbg !4535
  %5 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4536, !tbaa !3860
  %6 = bitcast %struct.PySSLContext* %5 to %struct._object*, !dbg !4537
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !4538
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4538, !tbaa !4204
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 38, !dbg !4539
  %8 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4539, !tbaa !4540
  %9 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4541, !tbaa !3860
  %10 = bitcast %struct.PySSLContext* %9 to i8*, !dbg !4541
  call void %8(i8* %10), !dbg !4542
  ret void, !dbg !4543
}

; Function Attrs: nounwind uwtable
define internal i32 @context_traverse(%struct.PySSLContext* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLContext*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2339, metadata !3830), !dbg !4544
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !2340, metadata !3830), !dbg !4545
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2341, metadata !3830), !dbg !4546
  br label %do.body, !dbg !4547

do.body:                                          ; preds = %entry
  %0 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4548, !tbaa !3860
  %set_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %0, i32 0, i32 4, !dbg !4550
  %1 = load %struct._object*, %struct._object** %set_hostname, align 8, !dbg !4550, !tbaa !4551
  %tobool = icmp ne %struct._object* %1, null, !dbg !4552
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !4553

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !4554
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !4554
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !2342, metadata !3830), !dbg !4556
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4557, !tbaa !3860
  %4 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4558, !tbaa !3860
  %set_hostname1 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %4, i32 0, i32 4, !dbg !4559
  %5 = load %struct._object*, %struct._object** %set_hostname1, align 8, !dbg !4559, !tbaa !4551
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !4560, !tbaa !3860
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !4557
  store i32 %call, i32* %vret, align 4, !dbg !4556, !tbaa !4372
  %7 = load i32, i32* %vret, align 4, !dbg !4561, !tbaa !4372
  %tobool2 = icmp ne i32 %7, 0, !dbg !4561
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !4563

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !4564, !tbaa !4372
  store i32 %8, i32* %retval, !dbg !4566
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4566

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !4567
  br label %cleanup, !dbg !4567

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !4569
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !4569
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !4572

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4573

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval, !dbg !4576
  br label %return, !dbg !4576

return:                                           ; preds = %LeafBlock, %do.end
  %10 = load i32, i32* %retval, !dbg !4577
  ret i32 %10, !dbg !4577
}

; Function Attrs: nounwind uwtable
define internal i32 @context_clear(%struct.PySSLContext* %self) #0 {
entry:
  %self.addr = alloca %struct.PySSLContext*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2350, metadata !3830), !dbg !4578
  br label %do.body, !dbg !4579

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4580
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4580
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2351, metadata !3830), !dbg !4582
  %1 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4583, !tbaa !3860
  %set_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %1, i32 0, i32 4, !dbg !4584
  %2 = load %struct._object*, %struct._object** %set_hostname, align 8, !dbg !4584, !tbaa !4551
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !4582, !tbaa !3860
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4585, !tbaa !3860
  %cmp = icmp ne %struct._object* %3, null, !dbg !4586
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !4587

if.then:                                          ; preds = %do.body
  %4 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4588, !tbaa !3860
  %set_hostname1 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %4, i32 0, i32 4, !dbg !4590
  store %struct._object* null, %struct._object** %set_hostname1, align 8, !dbg !4591, !tbaa !4551
  br label %do.body.2, !dbg !4592

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4593
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4593
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2353, metadata !3830), !dbg !4595
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4596, !tbaa !3860
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !4595, !tbaa !3860
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4597, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !4599
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !4600, !tbaa !4101
  %dec = add i64 %8, -1, !dbg !4600
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4600, !tbaa !4101
  %cmp3 = icmp ne i64 %dec, 0, !dbg !4601
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !4602

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !4603

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4605, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4607
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4607, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !4608
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4608, !tbaa !4206
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4609, !tbaa !3860
  call void %11(%struct._object* %12), !dbg !4610
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4611
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !4611
  br label %do.cond, !dbg !4613

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4614

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !4616

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4618
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !4618
  br label %do.end.7, !dbg !4621

do.end.7:                                         ; preds = %if.end.5
  ret i32 0, !dbg !4622
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @context_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [2 x i8*], align 16
  %self = alloca %struct.PySSLContext*, align 8
  %proto_version = alloca i32, align 4
  %options = alloca i64, align 8
  %ctx = alloca %struct.ssl_ctx_st*, align 8
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !3230, metadata !3830), !dbg !4623
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3231, metadata !3830), !dbg !4624
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !3232, metadata !3830), !dbg !4625
  %0 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !4626
  call void @llvm.lifetime.start(i64 16, i8* %0) #1, !dbg !4626
  call void @llvm.dbg.declare(metadata [2 x i8*]* %kwlist, metadata !3233, metadata !3830), !dbg !4627
  %1 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !4627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([2 x i8*]* @context_new.kwlist to i8*), i64 16, i32 16, i1 false), !dbg !4627
  %2 = bitcast %struct.PySSLContext** %self to i8*, !dbg !4628
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4628
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self, metadata !3234, metadata !3830), !dbg !4629
  %3 = bitcast i32* %proto_version to i8*, !dbg !4630
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !4630
  call void @llvm.dbg.declare(metadata i32* %proto_version, metadata !3235, metadata !3830), !dbg !4631
  store i32 2, i32* %proto_version, align 4, !dbg !4631, !tbaa !4372
  %4 = bitcast i64* %options to i8*, !dbg !4632
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4632
  call void @llvm.dbg.declare(metadata i64* %options, metadata !3236, metadata !3830), !dbg !4633
  %5 = bitcast %struct.ssl_ctx_st** %ctx to i8*, !dbg !4634
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4634
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %ctx, metadata !3237, metadata !3830), !dbg !4635
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4635, !tbaa !3860
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4636, !tbaa !3860
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4638, !tbaa !3860
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %kwlist, i32 0, i32 0, !dbg !4639
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i32 0, i32 0), i8** %arraydecay, i32* %proto_version), !dbg !4640
  %tobool = icmp ne i32 %call, 0, !dbg !4640
  br i1 %tobool, label %if.end, label %if.then, !dbg !4641

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4642
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4642

if.end:                                           ; preds = %entry
  %8 = bitcast %struct._ts** %_save to i8*, !dbg !4643
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4643
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3238, metadata !3830), !dbg !4644
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !4644, !tbaa !3860
  br label %do.body, !dbg !4645

do.body:                                          ; preds = %if.end
  %9 = load i32, i32* @_ssl_locks_count, align 4, !dbg !4646, !tbaa !4372
  %cmp = icmp ugt i32 %9, 0, !dbg !4650
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !4651

if.then.1:                                        ; preds = %do.body
  %call2 = call %struct._ts* @PyEval_SaveThread(), !dbg !4652
  store %struct._ts* %call2, %struct._ts** %_save, align 8, !dbg !4655, !tbaa !3860
  br label %if.end.3, !dbg !4656

if.end.3:                                         ; preds = %if.then.1, %do.body
  br label %do.cond, !dbg !4657

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !4660

do.end:                                           ; preds = %do.cond
  %10 = load i32, i32* %proto_version, align 4, !dbg !4662, !tbaa !4372
  %cmp4 = icmp eq i32 %10, 3, !dbg !4664
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !4665

if.then.5:                                        ; preds = %do.end
  %call6 = call %struct.ssl_method_st* @TLSv1_method(), !dbg !4666
  %call7 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %call6), !dbg !4667
  store %struct.ssl_ctx_st* %call7, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4668, !tbaa !3860
  br label %if.end.38, !dbg !4669

if.else:                                          ; preds = %do.end
  %11 = load i32, i32* %proto_version, align 4, !dbg !4670, !tbaa !4372
  %cmp8 = icmp eq i32 %11, 4, !dbg !4672
  br i1 %cmp8, label %if.then.9, label %if.else.12, !dbg !4673

if.then.9:                                        ; preds = %if.else
  %call10 = call %struct.ssl_method_st* @TLSv1_1_method(), !dbg !4674
  %call11 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %call10), !dbg !4675
  store %struct.ssl_ctx_st* %call11, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4676, !tbaa !3860
  br label %if.end.37, !dbg !4677

if.else.12:                                       ; preds = %if.else
  %12 = load i32, i32* %proto_version, align 4, !dbg !4678, !tbaa !4372
  %cmp13 = icmp eq i32 %12, 5, !dbg !4680
  br i1 %cmp13, label %if.then.14, label %if.else.17, !dbg !4681

if.then.14:                                       ; preds = %if.else.12
  %call15 = call %struct.ssl_method_st* @TLSv1_2_method(), !dbg !4682
  %call16 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %call15), !dbg !4683
  store %struct.ssl_ctx_st* %call16, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4684, !tbaa !3860
  br label %if.end.36, !dbg !4685

if.else.17:                                       ; preds = %if.else.12
  %13 = load i32, i32* %proto_version, align 4, !dbg !4686, !tbaa !4372
  %cmp18 = icmp eq i32 %13, 1, !dbg !4688
  br i1 %cmp18, label %if.then.19, label %if.else.22, !dbg !4689

if.then.19:                                       ; preds = %if.else.17
  %call20 = call %struct.ssl_method_st* @SSLv3_method(), !dbg !4690
  %call21 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %call20), !dbg !4691
  store %struct.ssl_ctx_st* %call21, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4692, !tbaa !3860
  br label %if.end.35, !dbg !4693

if.else.22:                                       ; preds = %if.else.17
  %14 = load i32, i32* %proto_version, align 4, !dbg !4694, !tbaa !4372
  %cmp23 = icmp eq i32 %14, 0, !dbg !4696
  br i1 %cmp23, label %if.then.24, label %if.else.27, !dbg !4697

if.then.24:                                       ; preds = %if.else.22
  %call25 = call %struct.ssl_method_st* @SSLv2_method(), !dbg !4698
  %call26 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %call25), !dbg !4699
  store %struct.ssl_ctx_st* %call26, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4700, !tbaa !3860
  br label %if.end.34, !dbg !4701

if.else.27:                                       ; preds = %if.else.22
  %15 = load i32, i32* %proto_version, align 4, !dbg !4702, !tbaa !4372
  %cmp28 = icmp eq i32 %15, 2, !dbg !4704
  br i1 %cmp28, label %if.then.29, label %if.else.32, !dbg !4705

if.then.29:                                       ; preds = %if.else.27
  %call30 = call %struct.ssl_method_st* @SSLv23_method(), !dbg !4706
  %call31 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %call30), !dbg !4707
  store %struct.ssl_ctx_st* %call31, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4708, !tbaa !3860
  br label %if.end.33, !dbg !4709

if.else.32:                                       ; preds = %if.else.27
  store i32 -1, i32* %proto_version, align 4, !dbg !4710, !tbaa !4372
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.32, %if.then.29
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.then.24
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.then.19
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.then.14
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.then.9
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.then.5
  br label %do.body.39, !dbg !4711

do.body.39:                                       ; preds = %if.end.38
  %16 = load i32, i32* @_ssl_locks_count, align 4, !dbg !4712, !tbaa !4372
  %cmp40 = icmp ugt i32 %16, 0, !dbg !4716
  br i1 %cmp40, label %if.then.41, label %if.end.42, !dbg !4717

if.then.41:                                       ; preds = %do.body.39
  %17 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !4718, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %17), !dbg !4721
  br label %if.end.42, !dbg !4722

if.end.42:                                        ; preds = %if.then.41, %do.body.39
  br label %do.cond.43, !dbg !4723

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !4726

do.end.44:                                        ; preds = %do.cond.43
  %18 = bitcast %struct._ts** %_save to i8*, !dbg !4728
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !4728
  %19 = load i32, i32* %proto_version, align 4, !dbg !4730, !tbaa !4372
  %cmp45 = icmp eq i32 %19, -1, !dbg !4732
  br i1 %cmp45, label %if.then.46, label %if.end.47, !dbg !4733

if.then.46:                                       ; preds = %do.end.44
  %20 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4734, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %20, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.191, i32 0, i32 0)), !dbg !4736
  store %struct._object* null, %struct._object** %retval, !dbg !4737
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4737

if.end.47:                                        ; preds = %do.end.44
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4738, !tbaa !3860
  %cmp48 = icmp eq %struct.ssl_ctx_st* %21, null, !dbg !4740
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !4741

if.then.49:                                       ; preds = %if.end.47
  %22 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !4742, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.192, i32 0, i32 0)), !dbg !4744
  store %struct._object* null, %struct._object** %retval, !dbg !4745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4745

if.end.50:                                        ; preds = %if.end.47
  %23 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4746, !tbaa !3860
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 36, !dbg !4747
  %24 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4747, !tbaa !4748
  %25 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4749, !tbaa !3860
  %call51 = call %struct._object* %24(%struct._typeobject* %25, i64 0), !dbg !4746
  %26 = bitcast %struct._object* %call51 to %struct.PySSLContext*, !dbg !4750
  store %struct.PySSLContext* %26, %struct.PySSLContext** %self, align 8, !dbg !4751, !tbaa !3860
  %27 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4752, !tbaa !3860
  %cmp52 = icmp eq %struct.PySSLContext* %27, null, !dbg !4754
  br i1 %cmp52, label %if.then.53, label %if.end.54, !dbg !4755

if.then.53:                                       ; preds = %if.end.50
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4756, !tbaa !3860
  call void @SSL_CTX_free(%struct.ssl_ctx_st* %28), !dbg !4758
  store %struct._object* null, %struct._object** %retval, !dbg !4759
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4759

if.end.54:                                        ; preds = %if.end.50
  %29 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4760, !tbaa !3860
  %30 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4761, !tbaa !3860
  %ctx55 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %30, i32 0, i32 1, !dbg !4762
  store %struct.ssl_ctx_st* %29, %struct.ssl_ctx_st** %ctx55, align 8, !dbg !4763, !tbaa !4529
  %31 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4764, !tbaa !3860
  %npn_protocols = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %31, i32 0, i32 2, !dbg !4765
  store i8* null, i8** %npn_protocols, align 8, !dbg !4766, !tbaa !4534
  %32 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4767, !tbaa !3860
  %set_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %32, i32 0, i32 4, !dbg !4768
  store %struct._object* null, %struct._object** %set_hostname, align 8, !dbg !4769, !tbaa !4551
  %33 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4770, !tbaa !3860
  %check_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %33, i32 0, i32 5, !dbg !4771
  store i32 0, i32* %check_hostname, align 4, !dbg !4772, !tbaa !4773
  %34 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4774, !tbaa !3860
  %ctx56 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %34, i32 0, i32 1, !dbg !4775
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx56, align 8, !dbg !4775, !tbaa !4529
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* %35, i32 0, i32 (i32, %struct.x509_store_ctx_st*)* null), !dbg !4776
  store i64 2147484663, i64* %options, align 8, !dbg !4777, !tbaa !4354
  %36 = load i32, i32* %proto_version, align 4, !dbg !4778, !tbaa !4372
  %cmp57 = icmp ne i32 %36, 0, !dbg !4780
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !4781

if.then.58:                                       ; preds = %if.end.54
  %37 = load i64, i64* %options, align 8, !dbg !4782, !tbaa !4354
  %or = or i64 %37, 16777216, !dbg !4782
  store i64 %or, i64* %options, align 8, !dbg !4782, !tbaa !4354
  br label %if.end.59, !dbg !4783

if.end.59:                                        ; preds = %if.then.58, %if.end.54
  %38 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4784, !tbaa !3860
  %ctx60 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %38, i32 0, i32 1, !dbg !4785
  %39 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx60, align 8, !dbg !4785, !tbaa !4529
  %40 = load i64, i64* %options, align 8, !dbg !4786, !tbaa !4354
  %call61 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %39, i32 32, i64 %40, i8* null), !dbg !4787
  %41 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4788, !tbaa !3860
  %ctx62 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %41, i32 0, i32 1, !dbg !4789
  %42 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx62, align 8, !dbg !4789, !tbaa !4529
  %call63 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %42, i32 94, i64 1, i8* null), !dbg !4790
  %43 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4791, !tbaa !3860
  %ctx64 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %43, i32 0, i32 1, !dbg !4792
  %44 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx64, align 8, !dbg !4792, !tbaa !4529
  %call65 = call i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.193, i32 0, i32 0), i32 7), !dbg !4793
  %45 = load %struct.PySSLContext*, %struct.PySSLContext** %self, align 8, !dbg !4794, !tbaa !3860
  %46 = bitcast %struct.PySSLContext* %45 to %struct._object*, !dbg !4795
  store %struct._object* %46, %struct._object** %retval, !dbg !4796
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4796

cleanup:                                          ; preds = %if.end.59, %if.then.53, %if.then.49, %if.then.46, %if.then
  %47 = bitcast %struct.ssl_ctx_st** %ctx to i8*, !dbg !4797
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !4797
  %48 = bitcast i64* %options to i8*, !dbg !4797
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !4797
  %49 = bitcast i32* %proto_version to i8*, !dbg !4797
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !4797
  %50 = bitcast %struct.PySSLContext** %self to i8*, !dbg !4797
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !4797
  %51 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !4797
  call void @llvm.lifetime.end(i64 16, i8* %51) #1, !dbg !4797
  %52 = load %struct._object*, %struct._object** %retval, !dbg !4797
  ret %struct._object* %52, !dbg !4797
}

declare void @SSL_CTX_free(%struct.ssl_ctx_st*) #3

declare void @PyMem_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @context_wrap_socket(%struct.PySSLContext* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [4 x i8*], align 16
  %sock = alloca %struct.PySocketSockObject*, align 8
  %server_side = alloca i32, align 4
  %hostname = alloca i8*, align 8
  %hostname_obj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2361, metadata !3830), !dbg !4798
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2362, metadata !3830), !dbg !4799
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2363, metadata !3830), !dbg !4800
  %0 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !4801
  call void @llvm.lifetime.start(i64 32, i8* %0) #1, !dbg !4801
  call void @llvm.dbg.declare(metadata [4 x i8*]* %kwlist, metadata !2364, metadata !3830), !dbg !4802
  %1 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !4802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([4 x i8*]* @context_wrap_socket.kwlist to i8*), i64 32, i32 16, i1 false), !dbg !4802
  %2 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !4803
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4803
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %sock, metadata !2366, metadata !3830), !dbg !4804
  %3 = bitcast i32* %server_side to i8*, !dbg !4805
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !4805
  call void @llvm.dbg.declare(metadata i32* %server_side, metadata !2367, metadata !3830), !dbg !4806
  store i32 0, i32* %server_side, align 4, !dbg !4806, !tbaa !4372
  %4 = bitcast i8** %hostname to i8*, !dbg !4807
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4807
  call void @llvm.dbg.declare(metadata i8** %hostname, metadata !2368, metadata !3830), !dbg !4808
  store i8* null, i8** %hostname, align 8, !dbg !4808, !tbaa !3860
  %5 = bitcast %struct._object** %hostname_obj to i8*, !dbg !4809
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4809
  call void @llvm.dbg.declare(metadata %struct._object** %hostname_obj, metadata !2369, metadata !3830), !dbg !4810
  %6 = bitcast %struct._object** %res to i8*, !dbg !4809
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4809
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2370, metadata !3830), !dbg !4811
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4812, !tbaa !3860
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4814, !tbaa !3860
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %kwlist, i32 0, i32 0, !dbg !4815
  %9 = load %struct._typeobject*, %struct._typeobject** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 0), align 8, !dbg !4816, !tbaa !4817
  %10 = load %struct._typeobject*, %struct._typeobject** getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 1), align 8, !dbg !4819, !tbaa !4204
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %7, %struct._object* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0), i8** %arraydecay, %struct._typeobject* %9, %struct.PySocketSockObject** %sock, i32* %server_side, %struct._typeobject* %10, %struct._object** %hostname_obj), !dbg !4820
  %tobool = icmp ne i32 %call, 0, !dbg !4820
  br i1 %tobool, label %if.end.5, label %if.then, !dbg !4821

if.then:                                          ; preds = %entry
  call void @PyErr_Clear(), !dbg !4822
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4824, !tbaa !3860
  %12 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4826, !tbaa !3860
  %arraydecay1 = getelementptr inbounds [4 x i8*], [4 x i8*]* %kwlist, i32 0, i32 0, !dbg !4827
  %13 = load %struct._typeobject*, %struct._typeobject** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 0), align 8, !dbg !4828, !tbaa !4817
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %11, %struct._object* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.103, i32 0, i32 0), i8** %arraydecay1, %struct._typeobject* %13, %struct.PySocketSockObject** %sock, i32* %server_side, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0), i8** %hostname), !dbg !4829
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4829
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !4830

if.then.4:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !4831
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4831

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !4832

if.end.5:                                         ; preds = %if.end, %entry
  %14 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4833, !tbaa !3860
  %15 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !4834, !tbaa !3860
  %16 = load i32, i32* %server_side, align 4, !dbg !4835, !tbaa !4372
  %17 = load i8*, i8** %hostname, align 8, !dbg !4836, !tbaa !3860
  %call6 = call %struct.PySSLSocket* @newPySSLSocket(%struct.PySSLContext* %14, %struct.PySocketSockObject* %15, i32 %16, i8* %17), !dbg !4837
  %18 = bitcast %struct.PySSLSocket* %call6 to %struct._object*, !dbg !4838
  store %struct._object* %18, %struct._object** %res, align 8, !dbg !4839, !tbaa !3860
  %19 = load i8*, i8** %hostname, align 8, !dbg !4840, !tbaa !3860
  %cmp = icmp ne i8* %19, null, !dbg !4842
  br i1 %cmp, label %if.then.7, label %if.end.8, !dbg !4843

if.then.7:                                        ; preds = %if.end.5
  %20 = load i8*, i8** %hostname, align 8, !dbg !4844, !tbaa !3860
  call void @PyMem_Free(i8* %20), !dbg !4845
  br label %if.end.8, !dbg !4845

if.end.8:                                         ; preds = %if.then.7, %if.end.5
  %21 = load %struct._object*, %struct._object** %res, align 8, !dbg !4846, !tbaa !3860
  store %struct._object* %21, %struct._object** %retval, !dbg !4847
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4847

cleanup:                                          ; preds = %if.end.8, %if.then.4
  %22 = bitcast %struct._object** %res to i8*, !dbg !4848
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !4848
  %23 = bitcast %struct._object** %hostname_obj to i8*, !dbg !4848
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !4848
  %24 = bitcast i8** %hostname to i8*, !dbg !4848
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !4848
  %25 = bitcast i32* %server_side to i8*, !dbg !4848
  call void @llvm.lifetime.end(i64 4, i8* %25) #1, !dbg !4848
  %26 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !4848
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !4848
  %27 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !4848
  call void @llvm.lifetime.end(i64 32, i8* %27) #1, !dbg !4848
  %28 = load %struct._object*, %struct._object** %retval, !dbg !4848
  ret %struct._object* %28, !dbg !4848
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @set_ciphers(%struct.PySSLContext* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca i32, align 4
  %cipherlist = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2394, metadata !3830), !dbg !4849
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2395, metadata !3830), !dbg !4850
  %0 = bitcast i32* %ret to i8*, !dbg !4851
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4851
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2396, metadata !3830), !dbg !4852
  %1 = bitcast i8** %cipherlist to i8*, !dbg !4853
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4853
  call void @llvm.dbg.declare(metadata i8** %cipherlist, metadata !2397, metadata !3830), !dbg !4854
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4855, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i32 0, i32 0), i8** %cipherlist), !dbg !4857
  %tobool = icmp ne i32 %call, 0, !dbg !4857
  br i1 %tobool, label %if.end, label %if.then, !dbg !4858

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4859

if.end:                                           ; preds = %entry
  %3 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4860, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %3, i32 0, i32 1, !dbg !4861
  %4 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4861, !tbaa !4529
  %5 = load i8*, i8** %cipherlist, align 8, !dbg !4862, !tbaa !3860
  %call1 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* %4, i8* %5), !dbg !4863
  store i32 %call1, i32* %ret, align 4, !dbg !4864, !tbaa !4372
  %6 = load i32, i32* %ret, align 4, !dbg !4865, !tbaa !4372
  %cmp = icmp eq i32 %6, 0, !dbg !4867
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4868

if.then.2:                                        ; preds = %if.end
  call void @ERR_clear_error(), !dbg !4869
  %7 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !4871, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.106, i32 0, i32 0)), !dbg !4872
  store %struct._object* null, %struct._object** %retval, !dbg !4873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4873

if.end.3:                                         ; preds = %if.end
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4874, !tbaa !4101
  %inc = add i64 %8, 1, !dbg !4874
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4874, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4875
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4875

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %9 = bitcast i8** %cipherlist to i8*, !dbg !4876
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !4876
  %10 = bitcast i32* %ret to i8*, !dbg !4876
  call void @llvm.lifetime.end(i64 4, i8* %10) #1, !dbg !4876
  %11 = load %struct._object*, %struct._object** %retval, !dbg !4876
  ret %struct._object* %11, !dbg !4876
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_set_npn_protocols(%struct.PySSLContext* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %protos = alloca %struct.bufferinfo, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2400, metadata !3830), !dbg !4877
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2401, metadata !3830), !dbg !4878
  %0 = bitcast %struct.bufferinfo* %protos to i8*, !dbg !4879
  call void @llvm.lifetime.start(i64 80, i8* %0) #1, !dbg !4879
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %protos, metadata !2402, metadata !3830), !dbg !4880
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4881, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.107, i32 0, i32 0), %struct.bufferinfo* %protos), !dbg !4883
  %tobool = icmp ne i32 %call, 0, !dbg !4883
  br i1 %tobool, label %if.end, label %if.then, !dbg !4884

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4885
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4885

if.end:                                           ; preds = %entry
  %2 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4886, !tbaa !3860
  %npn_protocols = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %2, i32 0, i32 2, !dbg !4888
  %3 = load i8*, i8** %npn_protocols, align 8, !dbg !4888, !tbaa !4534
  %cmp = icmp ne i8* %3, null, !dbg !4889
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !4890

if.then.1:                                        ; preds = %if.end
  %4 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4891, !tbaa !3860
  %npn_protocols2 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %4, i32 0, i32 2, !dbg !4893
  %5 = load i8*, i8** %npn_protocols2, align 8, !dbg !4893, !tbaa !4534
  call void @PyMem_Free(i8* %5), !dbg !4894
  br label %if.end.3, !dbg !4895

if.end.3:                                         ; preds = %if.then.1, %if.end
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %protos, i32 0, i32 2, !dbg !4896
  %6 = load i64, i64* %len, align 8, !dbg !4896, !tbaa !4897
  %call4 = call i8* @PyMem_Malloc(i64 %6), !dbg !4899
  %7 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4900, !tbaa !3860
  %npn_protocols5 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %7, i32 0, i32 2, !dbg !4901
  store i8* %call4, i8** %npn_protocols5, align 8, !dbg !4902, !tbaa !4534
  %8 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4903, !tbaa !3860
  %npn_protocols6 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %8, i32 0, i32 2, !dbg !4905
  %9 = load i8*, i8** %npn_protocols6, align 8, !dbg !4905, !tbaa !4534
  %cmp7 = icmp eq i8* %9, null, !dbg !4906
  br i1 %cmp7, label %if.then.8, label %if.end.10, !dbg !4907

if.then.8:                                        ; preds = %if.end.3
  call void @PyBuffer_Release(%struct.bufferinfo* %protos), !dbg !4908
  %call9 = call %struct._object* @PyErr_NoMemory(), !dbg !4910
  store %struct._object* %call9, %struct._object** %retval, !dbg !4911
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4911

if.end.10:                                        ; preds = %if.end.3
  %10 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4912, !tbaa !3860
  %npn_protocols11 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %10, i32 0, i32 2, !dbg !4913
  %11 = load i8*, i8** %npn_protocols11, align 8, !dbg !4913, !tbaa !4534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %protos, i32 0, i32 0, !dbg !4914
  %12 = load i8*, i8** %buf, align 8, !dbg !4914, !tbaa !4915
  %len12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %protos, i32 0, i32 2, !dbg !4916
  %13 = load i64, i64* %len12, align 8, !dbg !4916, !tbaa !4897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 %13, i32 1, i1 false), !dbg !4917
  %len13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %protos, i32 0, i32 2, !dbg !4918
  %14 = load i64, i64* %len13, align 8, !dbg !4918, !tbaa !4897
  %conv = trunc i64 %14 to i32, !dbg !4919
  %15 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4920, !tbaa !3860
  %npn_protocols_len = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %15, i32 0, i32 3, !dbg !4921
  store i32 %conv, i32* %npn_protocols_len, align 4, !dbg !4922, !tbaa !4923
  %16 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4924, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %16, i32 0, i32 1, !dbg !4925
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4925, !tbaa !4529
  %18 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4926, !tbaa !3860
  %19 = bitcast %struct.PySSLContext* %18 to i8*, !dbg !4926
  call void @SSL_CTX_set_next_protos_advertised_cb(%struct.ssl_ctx_st* %17, i32 (%struct.ssl_st*, i8**, i32*, i8*)* @_advertiseNPN_cb, i8* %19), !dbg !4927
  %20 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4928, !tbaa !3860
  %ctx14 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %20, i32 0, i32 1, !dbg !4929
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx14, align 8, !dbg !4929, !tbaa !4529
  %22 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4930, !tbaa !3860
  %23 = bitcast %struct.PySSLContext* %22 to i8*, !dbg !4930
  call void @SSL_CTX_set_next_proto_select_cb(%struct.ssl_ctx_st* %21, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* @_selectNPN_cb, i8* %23), !dbg !4931
  call void @PyBuffer_Release(%struct.bufferinfo* %protos), !dbg !4932
  %24 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4933, !tbaa !4101
  %inc = add i64 %24, 1, !dbg !4933
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4933, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4934

cleanup:                                          ; preds = %if.end.10, %if.then.8, %if.then
  %25 = bitcast %struct.bufferinfo* %protos to i8*, !dbg !4935
  call void @llvm.lifetime.end(i64 80, i8* %25) #1, !dbg !4935
  %26 = load %struct._object*, %struct._object** %retval, !dbg !4935
  ret %struct._object* %26, !dbg !4935
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @load_cert_chain(%struct.PySSLContext* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [4 x i8*], align 16
  %certfile = alloca %struct._object*, align 8
  %keyfile = alloca %struct._object*, align 8
  %password = alloca %struct._object*, align 8
  %certfile_bytes = alloca %struct._object*, align 8
  %keyfile_bytes = alloca %struct._object*, align 8
  %orig_passwd_cb = alloca i32 (i8*, i32, i32, i8*)*, align 8
  %orig_passwd_userdata = alloca i8*, align 8
  %pw_info = alloca %struct._PySSLPasswordInfo, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp91 = alloca %struct._object*, align 8
  %_py_decref_tmp95 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp156 = alloca %struct._object*, align 8
  %_py_xdecref_tmp171 = alloca %struct._object*, align 8
  %_py_decref_tmp175 = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2423, metadata !3830), !dbg !4936
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2424, metadata !3830), !dbg !4937
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2425, metadata !3830), !dbg !4938
  %0 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !4939
  call void @llvm.lifetime.start(i64 32, i8* %0) #1, !dbg !4939
  call void @llvm.dbg.declare(metadata [4 x i8*]* %kwlist, metadata !2426, metadata !3830), !dbg !4940
  %1 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !4940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([4 x i8*]* @load_cert_chain.kwlist to i8*), i64 32, i32 16, i1 false), !dbg !4940
  %2 = bitcast %struct._object** %certfile to i8*, !dbg !4941
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4941
  call void @llvm.dbg.declare(metadata %struct._object** %certfile, metadata !2427, metadata !3830), !dbg !4942
  %3 = bitcast %struct._object** %keyfile to i8*, !dbg !4941
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4941
  call void @llvm.dbg.declare(metadata %struct._object** %keyfile, metadata !2428, metadata !3830), !dbg !4943
  store %struct._object* null, %struct._object** %keyfile, align 8, !dbg !4943, !tbaa !3860
  %4 = bitcast %struct._object** %password to i8*, !dbg !4941
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4941
  call void @llvm.dbg.declare(metadata %struct._object** %password, metadata !2429, metadata !3830), !dbg !4944
  store %struct._object* null, %struct._object** %password, align 8, !dbg !4944, !tbaa !3860
  %5 = bitcast %struct._object** %certfile_bytes to i8*, !dbg !4945
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4945
  call void @llvm.dbg.declare(metadata %struct._object** %certfile_bytes, metadata !2430, metadata !3830), !dbg !4946
  store %struct._object* null, %struct._object** %certfile_bytes, align 8, !dbg !4946, !tbaa !3860
  %6 = bitcast %struct._object** %keyfile_bytes to i8*, !dbg !4945
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4945
  call void @llvm.dbg.declare(metadata %struct._object** %keyfile_bytes, metadata !2431, metadata !3830), !dbg !4947
  store %struct._object* null, %struct._object** %keyfile_bytes, align 8, !dbg !4947, !tbaa !3860
  %7 = bitcast i32 (i8*, i32, i32, i8*)** %orig_passwd_cb to i8*, !dbg !4948
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !4948
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32, i8*)** %orig_passwd_cb, metadata !2432, metadata !3830), !dbg !4949
  %8 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4950, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %8, i32 0, i32 1, !dbg !4951
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4951, !tbaa !4529
  %default_passwd_callback = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %9, i32 0, i32 17, !dbg !4952
  %10 = load i32 (i8*, i32, i32, i8*)*, i32 (i8*, i32, i32, i8*)** %default_passwd_callback, align 8, !dbg !4952, !tbaa !4953
  store i32 (i8*, i32, i32, i8*)* %10, i32 (i8*, i32, i32, i8*)** %orig_passwd_cb, align 8, !dbg !4949, !tbaa !3860
  %11 = bitcast i8** %orig_passwd_userdata to i8*, !dbg !4957
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !4957
  call void @llvm.dbg.declare(metadata i8** %orig_passwd_userdata, metadata !2433, metadata !3830), !dbg !4958
  %12 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !4959, !tbaa !3860
  %ctx1 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %12, i32 0, i32 1, !dbg !4960
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx1, align 8, !dbg !4960, !tbaa !4529
  %default_passwd_callback_userdata = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %13, i32 0, i32 18, !dbg !4961
  %14 = load i8*, i8** %default_passwd_callback_userdata, align 8, !dbg !4961, !tbaa !4962
  store i8* %14, i8** %orig_passwd_userdata, align 8, !dbg !4958, !tbaa !3860
  %15 = bitcast %struct._PySSLPasswordInfo* %pw_info to i8*, !dbg !4963
  call void @llvm.lifetime.start(i64 32, i8* %15) #1, !dbg !4963
  call void @llvm.dbg.declare(metadata %struct._PySSLPasswordInfo* %pw_info, metadata !2434, metadata !3830), !dbg !4964
  %16 = bitcast %struct._PySSLPasswordInfo* %pw_info to i8*, !dbg !4964
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 32, i32 8, i1 false), !dbg !4964
  %17 = bitcast i32* %r to i8*, !dbg !4965
  call void @llvm.lifetime.start(i64 4, i8* %17) #1, !dbg !4965
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2435, metadata !3830), !dbg !4966
  %call = call i32* @__errno_location() #2, !dbg !4967
  store i32 0, i32* %call, align 4, !dbg !4968, !tbaa !4372
  call void @ERR_clear_error(), !dbg !4969
  %18 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4970, !tbaa !3860
  %19 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4972, !tbaa !3860
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %kwlist, i32 0, i32 0, !dbg !4973
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %18, %struct._object* %19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.112, i32 0, i32 0), i8** %arraydecay, %struct._object** %certfile, %struct._object** %keyfile, %struct._object** %password), !dbg !4974
  %tobool = icmp ne i32 %call2, 0, !dbg !4974
  br i1 %tobool, label %if.end, label %if.then, !dbg !4975

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4976
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4976

if.end:                                           ; preds = %entry
  %20 = load %struct._object*, %struct._object** %keyfile, align 8, !dbg !4977, !tbaa !3860
  %cmp = icmp eq %struct._object* %20, @_Py_NoneStruct, !dbg !4979
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !4980

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %keyfile, align 8, !dbg !4981, !tbaa !3860
  br label %if.end.4, !dbg !4982

if.end.4:                                         ; preds = %if.then.3, %if.end
  %21 = load %struct._object*, %struct._object** %certfile, align 8, !dbg !4983, !tbaa !3860
  %22 = bitcast %struct._object** %certfile_bytes to i8*, !dbg !4985
  %call5 = call i32 @PyUnicode_FSConverter(%struct._object* %21, i8* %22), !dbg !4986
  %tobool6 = icmp ne i32 %call5, 0, !dbg !4986
  br i1 %tobool6, label %if.end.8, label %if.then.7, !dbg !4987

if.then.7:                                        ; preds = %if.end.4
  %23 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4988, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.113, i32 0, i32 0)), !dbg !4990
  store %struct._object* null, %struct._object** %retval, !dbg !4991
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4991

if.end.8:                                         ; preds = %if.end.4
  %24 = load %struct._object*, %struct._object** %keyfile, align 8, !dbg !4992, !tbaa !3860
  %tobool9 = icmp ne %struct._object* %24, null, !dbg !4992
  br i1 %tobool9, label %land.lhs.true, label %if.end.13, !dbg !4994

land.lhs.true:                                    ; preds = %if.end.8
  %25 = load %struct._object*, %struct._object** %keyfile, align 8, !dbg !4995, !tbaa !3860
  %26 = bitcast %struct._object** %keyfile_bytes to i8*, !dbg !4997
  %call10 = call i32 @PyUnicode_FSConverter(%struct._object* %25, i8* %26), !dbg !4998
  %tobool11 = icmp ne i32 %call10, 0, !dbg !4998
  br i1 %tobool11, label %if.end.13, label %if.then.12, !dbg !4999

if.then.12:                                       ; preds = %land.lhs.true
  %27 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5000, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %27, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.114, i32 0, i32 0)), !dbg !5002
  br label %error.148, !dbg !5003

if.end.13:                                        ; preds = %land.lhs.true, %if.end.8
  %28 = load %struct._object*, %struct._object** %password, align 8, !dbg !5004, !tbaa !3860
  %tobool14 = icmp ne %struct._object* %28, null, !dbg !5004
  br i1 %tobool14, label %land.lhs.true.15, label %if.end.28, !dbg !5006

land.lhs.true.15:                                 ; preds = %if.end.13
  %29 = load %struct._object*, %struct._object** %password, align 8, !dbg !5007, !tbaa !3860
  %cmp16 = icmp ne %struct._object* %29, @_Py_NoneStruct, !dbg !5009
  br i1 %cmp16, label %if.then.17, label %if.end.28, !dbg !5010

if.then.17:                                       ; preds = %land.lhs.true.15
  %30 = load %struct._object*, %struct._object** %password, align 8, !dbg !5011, !tbaa !3860
  %call18 = call i32 @PyCallable_Check(%struct._object* %30), !dbg !5014
  %tobool19 = icmp ne i32 %call18, 0, !dbg !5014
  br i1 %tobool19, label %if.then.20, label %if.else, !dbg !5015

if.then.20:                                       ; preds = %if.then.17
  %31 = load %struct._object*, %struct._object** %password, align 8, !dbg !5016, !tbaa !3860
  %callable = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 1, !dbg !5018
  store %struct._object* %31, %struct._object** %callable, align 8, !dbg !5019, !tbaa !5020
  br label %if.end.25, !dbg !5022

if.else:                                          ; preds = %if.then.17
  %32 = load %struct._object*, %struct._object** %password, align 8, !dbg !5023, !tbaa !3860
  %call21 = call i32 @_pwinfo_set(%struct._PySSLPasswordInfo* %pw_info, %struct._object* %32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.115, i32 0, i32 0)), !dbg !5025
  %tobool22 = icmp ne i32 %call21, 0, !dbg !5025
  br i1 %tobool22, label %if.end.24, label %if.then.23, !dbg !5026

if.then.23:                                       ; preds = %if.else
  br label %error.148, !dbg !5027

if.end.24:                                        ; preds = %if.else
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %if.then.20
  %33 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5029, !tbaa !3860
  %ctx26 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %33, i32 0, i32 1, !dbg !5030
  %34 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx26, align 8, !dbg !5030, !tbaa !4529
  call void @SSL_CTX_set_default_passwd_cb(%struct.ssl_ctx_st* %34, i32 (i8*, i32, i32, i8*)* @_password_callback), !dbg !5031
  %35 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5032, !tbaa !3860
  %ctx27 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %35, i32 0, i32 1, !dbg !5033
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx27, align 8, !dbg !5033, !tbaa !4529
  %37 = bitcast %struct._PySSLPasswordInfo* %pw_info to i8*, !dbg !5034
  call void @SSL_CTX_set_default_passwd_cb_userdata(%struct.ssl_ctx_st* %36, i8* %37), !dbg !5035
  br label %if.end.28, !dbg !5036

if.end.28:                                        ; preds = %if.end.25, %land.lhs.true.15, %if.end.13
  br label %do.body, !dbg !5037

do.body:                                          ; preds = %if.end.28
  %38 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5038, !tbaa !4372
  %cmp29 = icmp ugt i32 %38, 0, !dbg !5042
  br i1 %cmp29, label %if.then.30, label %if.end.32, !dbg !5043

if.then.30:                                       ; preds = %do.body
  %call31 = call %struct._ts* @PyEval_SaveThread(), !dbg !5044
  %thread_state = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 0, !dbg !5047
  store %struct._ts* %call31, %struct._ts** %thread_state, align 8, !dbg !5048, !tbaa !5049
  br label %if.end.32, !dbg !5050

if.end.32:                                        ; preds = %if.then.30, %do.body
  br label %do.cond, !dbg !5051

do.cond:                                          ; preds = %if.end.32
  br label %do.end, !dbg !5054

do.end:                                           ; preds = %do.cond
  %39 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5056, !tbaa !3860
  %ctx33 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %39, i32 0, i32 1, !dbg !5057
  %40 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx33, align 8, !dbg !5057, !tbaa !4529
  %41 = load %struct._object*, %struct._object** %certfile_bytes, align 8, !dbg !5058, !tbaa !3860
  %42 = bitcast %struct._object* %41 to %struct.PyBytesObject*, !dbg !5059
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %42, i32 0, i32 2, !dbg !5060
  %arraydecay34 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5061
  %call35 = call i32 @SSL_CTX_use_certificate_chain_file(%struct.ssl_ctx_st* %40, i8* %arraydecay34), !dbg !5062
  store i32 %call35, i32* %r, align 4, !dbg !5063, !tbaa !4372
  br label %do.body.36, !dbg !5064

do.body.36:                                       ; preds = %do.end
  %43 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5065, !tbaa !4372
  %cmp37 = icmp ugt i32 %43, 0, !dbg !5069
  br i1 %cmp37, label %if.then.38, label %if.end.40, !dbg !5070

if.then.38:                                       ; preds = %do.body.36
  %thread_state39 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 0, !dbg !5071
  %44 = load %struct._ts*, %struct._ts** %thread_state39, align 8, !dbg !5071, !tbaa !5049
  call void @PyEval_RestoreThread(%struct._ts* %44), !dbg !5074
  br label %if.end.40, !dbg !5075

if.end.40:                                        ; preds = %if.then.38, %do.body.36
  br label %do.cond.41, !dbg !5076

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !5079

do.end.42:                                        ; preds = %do.cond.41
  %45 = load i32, i32* %r, align 4, !dbg !5081, !tbaa !4372
  %cmp43 = icmp ne i32 %45, 1, !dbg !5083
  br i1 %cmp43, label %if.then.44, label %if.end.56, !dbg !5084

if.then.44:                                       ; preds = %do.end.42
  %error = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 4, !dbg !5085
  %46 = load i32, i32* %error, align 4, !dbg !5085, !tbaa !5088
  %tobool45 = icmp ne i32 %46, 0, !dbg !5089
  br i1 %tobool45, label %if.then.46, label %if.else.47, !dbg !5090

if.then.46:                                       ; preds = %if.then.44
  call void @ERR_clear_error(), !dbg !5091
  br label %if.end.55, !dbg !5093

if.else.47:                                       ; preds = %if.then.44
  %call48 = call i32* @__errno_location() #2, !dbg !5094
  %47 = load i32, i32* %call48, align 4, !dbg !5096, !tbaa !4372
  %cmp49 = icmp ne i32 %47, 0, !dbg !5097
  br i1 %cmp49, label %if.then.50, label %if.else.52, !dbg !5098

if.then.50:                                       ; preds = %if.else.47
  call void @ERR_clear_error(), !dbg !5099
  %48 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !5101, !tbaa !3860
  %call51 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %48), !dbg !5102
  br label %if.end.54, !dbg !5103

if.else.52:                                       ; preds = %if.else.47
  %call53 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2511), !dbg !5104
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.52, %if.then.50
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.then.46
  br label %error.148, !dbg !5106

if.end.56:                                        ; preds = %do.end.42
  br label %do.body.57, !dbg !5107

do.body.57:                                       ; preds = %if.end.56
  %49 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5108, !tbaa !4372
  %cmp58 = icmp ugt i32 %49, 0, !dbg !5112
  br i1 %cmp58, label %if.then.59, label %if.end.62, !dbg !5113

if.then.59:                                       ; preds = %do.body.57
  %call60 = call %struct._ts* @PyEval_SaveThread(), !dbg !5114
  %thread_state61 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 0, !dbg !5117
  store %struct._ts* %call60, %struct._ts** %thread_state61, align 8, !dbg !5118, !tbaa !5049
  br label %if.end.62, !dbg !5119

if.end.62:                                        ; preds = %if.then.59, %do.body.57
  br label %do.cond.63, !dbg !5120

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !5123

do.end.64:                                        ; preds = %do.cond.63
  %50 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5125, !tbaa !3860
  %ctx65 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %50, i32 0, i32 1, !dbg !5126
  %51 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx65, align 8, !dbg !5126, !tbaa !4529
  %52 = load %struct._object*, %struct._object** %keyfile, align 8, !dbg !5127, !tbaa !3860
  %tobool66 = icmp ne %struct._object* %52, null, !dbg !5127
  br i1 %tobool66, label %cond.true, label %cond.false, !dbg !5127

cond.true:                                        ; preds = %do.end.64
  %53 = load %struct._object*, %struct._object** %keyfile_bytes, align 8, !dbg !5128, !tbaa !3860
  br label %cond.end, !dbg !5127

cond.false:                                       ; preds = %do.end.64
  %54 = load %struct._object*, %struct._object** %certfile_bytes, align 8, !dbg !5130, !tbaa !3860
  br label %cond.end, !dbg !5127

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %53, %cond.true ], [ %54, %cond.false ], !dbg !5127
  %55 = bitcast %struct._object* %cond to %struct.PyBytesObject*, !dbg !5132
  %ob_sval67 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %55, i32 0, i32 2, !dbg !5135
  %arraydecay68 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval67, i32 0, i32 0, !dbg !5136
  %call69 = call i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st* %51, i8* %arraydecay68, i32 1), !dbg !5137
  store i32 %call69, i32* %r, align 4, !dbg !5138, !tbaa !4372
  br label %do.body.70, !dbg !5139

do.body.70:                                       ; preds = %cond.end
  %56 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5140, !tbaa !4372
  %cmp71 = icmp ugt i32 %56, 0, !dbg !5144
  br i1 %cmp71, label %if.then.72, label %if.end.74, !dbg !5145

if.then.72:                                       ; preds = %do.body.70
  %thread_state73 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 0, !dbg !5146
  %57 = load %struct._ts*, %struct._ts** %thread_state73, align 8, !dbg !5146, !tbaa !5049
  call void @PyEval_RestoreThread(%struct._ts* %57), !dbg !5149
  br label %if.end.74, !dbg !5150

if.end.74:                                        ; preds = %if.then.72, %do.body.70
  br label %do.cond.75, !dbg !5151

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !5154

do.end.76:                                        ; preds = %do.cond.75
  br label %do.body.77, !dbg !5156

do.body.77:                                       ; preds = %do.end.76
  %58 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5157
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !5157
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2436, metadata !3830), !dbg !5159
  %59 = load %struct._object*, %struct._object** %keyfile_bytes, align 8, !dbg !5160, !tbaa !3860
  store %struct._object* %59, %struct._object** %_py_tmp, align 8, !dbg !5159, !tbaa !3860
  %60 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5161, !tbaa !3860
  %cmp78 = icmp ne %struct._object* %60, null, !dbg !5162
  br i1 %cmp78, label %if.then.79, label %if.end.87, !dbg !5163

if.then.79:                                       ; preds = %do.body.77
  store %struct._object* null, %struct._object** %keyfile_bytes, align 8, !dbg !5164, !tbaa !3860
  br label %do.body.80, !dbg !5166

do.body.80:                                       ; preds = %if.then.79
  %61 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5167
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !5167
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2438, metadata !3830), !dbg !5169
  %62 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5170, !tbaa !3860
  store %struct._object* %62, %struct._object** %_py_decref_tmp, align 8, !dbg !5169, !tbaa !3860
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5171, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !5173
  %64 = load i64, i64* %ob_refcnt, align 8, !dbg !5174, !tbaa !4101
  %dec = add i64 %64, -1, !dbg !5174
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5174, !tbaa !4101
  %cmp81 = icmp ne i64 %dec, 0, !dbg !5175
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !5176

if.then.82:                                       ; preds = %do.body.80
  br label %if.end.84, !dbg !5177

if.else.83:                                       ; preds = %do.body.80
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5179, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !5181
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5181, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !5182
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5182, !tbaa !4206
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5183, !tbaa !3860
  call void %67(%struct._object* %68), !dbg !5184
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.83, %if.then.82
  %69 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5185
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !5185
  br label %do.cond.85, !dbg !5187

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !5188

do.end.86:                                        ; preds = %do.cond.85
  br label %if.end.87, !dbg !5190

if.end.87:                                        ; preds = %do.end.86, %do.body.77
  %70 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5192
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !5192
  br label %do.cond.88, !dbg !5194

do.cond.88:                                       ; preds = %if.end.87
  br label %do.end.89, !dbg !5195

do.end.89:                                        ; preds = %do.cond.88
  br label %do.body.90, !dbg !5197

do.body.90:                                       ; preds = %do.end.89
  %71 = bitcast %struct._object** %_py_tmp91 to i8*, !dbg !5198
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !5198
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp91, metadata !2442, metadata !3830), !dbg !5200
  %72 = load %struct._object*, %struct._object** %certfile_bytes, align 8, !dbg !5201, !tbaa !3860
  store %struct._object* %72, %struct._object** %_py_tmp91, align 8, !dbg !5200, !tbaa !3860
  %73 = load %struct._object*, %struct._object** %_py_tmp91, align 8, !dbg !5202, !tbaa !3860
  %cmp92 = icmp ne %struct._object* %73, null, !dbg !5203
  br i1 %cmp92, label %if.then.93, label %if.end.106, !dbg !5204

if.then.93:                                       ; preds = %do.body.90
  store %struct._object* null, %struct._object** %certfile_bytes, align 8, !dbg !5205, !tbaa !3860
  br label %do.body.94, !dbg !5207

do.body.94:                                       ; preds = %if.then.93
  %74 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !5208
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !5208
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp95, metadata !2444, metadata !3830), !dbg !5210
  %75 = load %struct._object*, %struct._object** %_py_tmp91, align 8, !dbg !5211, !tbaa !3860
  store %struct._object* %75, %struct._object** %_py_decref_tmp95, align 8, !dbg !5210, !tbaa !3860
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !5212, !tbaa !3860
  %ob_refcnt96 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !5214
  %77 = load i64, i64* %ob_refcnt96, align 8, !dbg !5215, !tbaa !4101
  %dec97 = add i64 %77, -1, !dbg !5215
  store i64 %dec97, i64* %ob_refcnt96, align 8, !dbg !5215, !tbaa !4101
  %cmp98 = icmp ne i64 %dec97, 0, !dbg !5216
  br i1 %cmp98, label %if.then.99, label %if.else.100, !dbg !5217

if.then.99:                                       ; preds = %do.body.94
  br label %if.end.103, !dbg !5218

if.else.100:                                      ; preds = %do.body.94
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !5220, !tbaa !3860
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !5222
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8, !dbg !5222, !tbaa !4204
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !5223
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8, !dbg !5223, !tbaa !4206
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !5224, !tbaa !3860
  call void %80(%struct._object* %81), !dbg !5225
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  %82 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !5226
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !5226
  br label %do.cond.104, !dbg !5228

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !5229

do.end.105:                                       ; preds = %do.cond.104
  br label %if.end.106, !dbg !5231

if.end.106:                                       ; preds = %do.end.105, %do.body.90
  %83 = bitcast %struct._object** %_py_tmp91 to i8*, !dbg !5233
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !5233
  br label %do.cond.107, !dbg !5234

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !5235

do.end.108:                                       ; preds = %do.cond.107
  %84 = load i32, i32* %r, align 4, !dbg !5237, !tbaa !4372
  %cmp109 = icmp ne i32 %84, 1, !dbg !5239
  br i1 %cmp109, label %if.then.110, label %if.end.123, !dbg !5240

if.then.110:                                      ; preds = %do.end.108
  %error111 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 4, !dbg !5241
  %85 = load i32, i32* %error111, align 4, !dbg !5241, !tbaa !5088
  %tobool112 = icmp ne i32 %85, 0, !dbg !5244
  br i1 %tobool112, label %if.then.113, label %if.else.114, !dbg !5245

if.then.113:                                      ; preds = %if.then.110
  call void @ERR_clear_error(), !dbg !5246
  br label %if.end.122, !dbg !5248

if.else.114:                                      ; preds = %if.then.110
  %call115 = call i32* @__errno_location() #2, !dbg !5249
  %86 = load i32, i32* %call115, align 4, !dbg !5251, !tbaa !4372
  %cmp116 = icmp ne i32 %86, 0, !dbg !5252
  br i1 %cmp116, label %if.then.117, label %if.else.119, !dbg !5253

if.then.117:                                      ; preds = %if.else.114
  call void @ERR_clear_error(), !dbg !5254
  %87 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !5256, !tbaa !3860
  %call118 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %87), !dbg !5257
  br label %if.end.121, !dbg !5258

if.else.119:                                      ; preds = %if.else.114
  %call120 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2532), !dbg !5259
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.119, %if.then.117
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %if.then.113
  br label %error.148, !dbg !5261

if.end.123:                                       ; preds = %do.end.108
  br label %do.body.124, !dbg !5262

do.body.124:                                      ; preds = %if.end.123
  %88 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5263, !tbaa !4372
  %cmp125 = icmp ugt i32 %88, 0, !dbg !5267
  br i1 %cmp125, label %if.then.126, label %if.end.129, !dbg !5268

if.then.126:                                      ; preds = %do.body.124
  %call127 = call %struct._ts* @PyEval_SaveThread(), !dbg !5269
  %thread_state128 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 0, !dbg !5272
  store %struct._ts* %call127, %struct._ts** %thread_state128, align 8, !dbg !5273, !tbaa !5049
  br label %if.end.129, !dbg !5274

if.end.129:                                       ; preds = %if.then.126, %do.body.124
  br label %do.cond.130, !dbg !5275

do.cond.130:                                      ; preds = %if.end.129
  br label %do.end.131, !dbg !5278

do.end.131:                                       ; preds = %do.cond.130
  %89 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5280, !tbaa !3860
  %ctx132 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %89, i32 0, i32 1, !dbg !5281
  %90 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx132, align 8, !dbg !5281, !tbaa !4529
  %call133 = call i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st* %90), !dbg !5282
  store i32 %call133, i32* %r, align 4, !dbg !5283, !tbaa !4372
  br label %do.body.134, !dbg !5284

do.body.134:                                      ; preds = %do.end.131
  %91 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5285, !tbaa !4372
  %cmp135 = icmp ugt i32 %91, 0, !dbg !5289
  br i1 %cmp135, label %if.then.136, label %if.end.138, !dbg !5290

if.then.136:                                      ; preds = %do.body.134
  %thread_state137 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 0, !dbg !5291
  %92 = load %struct._ts*, %struct._ts** %thread_state137, align 8, !dbg !5291, !tbaa !5049
  call void @PyEval_RestoreThread(%struct._ts* %92), !dbg !5294
  br label %if.end.138, !dbg !5295

if.end.138:                                       ; preds = %if.then.136, %do.body.134
  br label %do.cond.139, !dbg !5296

do.cond.139:                                      ; preds = %if.end.138
  br label %do.end.140, !dbg !5299

do.end.140:                                       ; preds = %do.cond.139
  %93 = load i32, i32* %r, align 4, !dbg !5301, !tbaa !4372
  %cmp141 = icmp ne i32 %93, 1, !dbg !5303
  br i1 %cmp141, label %if.then.142, label %if.end.144, !dbg !5304

if.then.142:                                      ; preds = %do.end.140
  %call143 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2540), !dbg !5305
  br label %error.148, !dbg !5307

if.end.144:                                       ; preds = %do.end.140
  %94 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5308, !tbaa !3860
  %ctx145 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %94, i32 0, i32 1, !dbg !5309
  %95 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx145, align 8, !dbg !5309, !tbaa !4529
  %96 = load i32 (i8*, i32, i32, i8*)*, i32 (i8*, i32, i32, i8*)** %orig_passwd_cb, align 8, !dbg !5310, !tbaa !3860
  call void @SSL_CTX_set_default_passwd_cb(%struct.ssl_ctx_st* %95, i32 (i8*, i32, i32, i8*)* %96), !dbg !5311
  %97 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5312, !tbaa !3860
  %ctx146 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %97, i32 0, i32 1, !dbg !5313
  %98 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx146, align 8, !dbg !5313, !tbaa !4529
  %99 = load i8*, i8** %orig_passwd_userdata, align 8, !dbg !5314, !tbaa !3860
  call void @SSL_CTX_set_default_passwd_cb_userdata(%struct.ssl_ctx_st* %98, i8* %99), !dbg !5315
  %password147 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 2, !dbg !5316
  %100 = load i8*, i8** %password147, align 8, !dbg !5316, !tbaa !5317
  call void @PyMem_Free(i8* %100), !dbg !5318
  %101 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5319, !tbaa !4101
  %inc = add i64 %101, 1, !dbg !5319
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5319, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5320
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5320

error.148:                                        ; preds = %if.then.142, %if.end.122, %if.end.55, %if.then.23, %if.then.12
  %102 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5321, !tbaa !3860
  %ctx149 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %102, i32 0, i32 1, !dbg !5322
  %103 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx149, align 8, !dbg !5322, !tbaa !4529
  %104 = load i32 (i8*, i32, i32, i8*)*, i32 (i8*, i32, i32, i8*)** %orig_passwd_cb, align 8, !dbg !5323, !tbaa !3860
  call void @SSL_CTX_set_default_passwd_cb(%struct.ssl_ctx_st* %103, i32 (i8*, i32, i32, i8*)* %104), !dbg !5324
  %105 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5325, !tbaa !3860
  %ctx150 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %105, i32 0, i32 1, !dbg !5326
  %106 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx150, align 8, !dbg !5326, !tbaa !4529
  %107 = load i8*, i8** %orig_passwd_userdata, align 8, !dbg !5327, !tbaa !3860
  call void @SSL_CTX_set_default_passwd_cb_userdata(%struct.ssl_ctx_st* %106, i8* %107), !dbg !5328
  %password151 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %pw_info, i32 0, i32 2, !dbg !5329
  %108 = load i8*, i8** %password151, align 8, !dbg !5329, !tbaa !5317
  call void @PyMem_Free(i8* %108), !dbg !5330
  br label %do.body.152, !dbg !5331

do.body.152:                                      ; preds = %error.148
  %109 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5332
  call void @llvm.lifetime.start(i64 8, i8* %109) #1, !dbg !5332
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2448, metadata !3830), !dbg !5334
  %110 = load %struct._object*, %struct._object** %keyfile_bytes, align 8, !dbg !5335, !tbaa !3860
  store %struct._object* %110, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5334, !tbaa !3860
  %111 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5336, !tbaa !3860
  %cmp153 = icmp ne %struct._object* %111, null, !dbg !5337
  br i1 %cmp153, label %if.then.154, label %if.end.167, !dbg !5338

if.then.154:                                      ; preds = %do.body.152
  br label %do.body.155, !dbg !5339

do.body.155:                                      ; preds = %if.then.154
  %112 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !5341
  call void @llvm.lifetime.start(i64 8, i8* %112) #1, !dbg !5341
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp156, metadata !2450, metadata !3830), !dbg !5343
  %113 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5344, !tbaa !3860
  store %struct._object* %113, %struct._object** %_py_decref_tmp156, align 8, !dbg !5343, !tbaa !3860
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !5345, !tbaa !3860
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 0, !dbg !5347
  %115 = load i64, i64* %ob_refcnt157, align 8, !dbg !5348, !tbaa !4101
  %dec158 = add i64 %115, -1, !dbg !5348
  store i64 %dec158, i64* %ob_refcnt157, align 8, !dbg !5348, !tbaa !4101
  %cmp159 = icmp ne i64 %dec158, 0, !dbg !5349
  br i1 %cmp159, label %if.then.160, label %if.else.161, !dbg !5350

if.then.160:                                      ; preds = %do.body.155
  br label %if.end.164, !dbg !5351

if.else.161:                                      ; preds = %do.body.155
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !5353, !tbaa !3860
  %ob_type162 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 1, !dbg !5355
  %117 = load %struct._typeobject*, %struct._typeobject** %ob_type162, align 8, !dbg !5355, !tbaa !4204
  %tp_dealloc163 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %117, i32 0, i32 4, !dbg !5356
  %118 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc163, align 8, !dbg !5356, !tbaa !4206
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !5357, !tbaa !3860
  call void %118(%struct._object* %119), !dbg !5358
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.161, %if.then.160
  %120 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !5359
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !5359
  br label %do.cond.165, !dbg !5361

do.cond.165:                                      ; preds = %if.end.164
  br label %do.end.166, !dbg !5362

do.end.166:                                       ; preds = %do.cond.165
  br label %if.end.167, !dbg !5364

if.end.167:                                       ; preds = %do.end.166, %do.body.152
  %121 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5366
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !5366
  br label %do.cond.168, !dbg !5367

do.cond.168:                                      ; preds = %if.end.167
  br label %do.end.169, !dbg !5368

do.end.169:                                       ; preds = %do.cond.168
  br label %do.body.170, !dbg !5370

do.body.170:                                      ; preds = %do.end.169
  %122 = bitcast %struct._object** %_py_xdecref_tmp171 to i8*, !dbg !5371
  call void @llvm.lifetime.start(i64 8, i8* %122) #1, !dbg !5371
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp171, metadata !2453, metadata !3830), !dbg !5373
  %123 = load %struct._object*, %struct._object** %certfile_bytes, align 8, !dbg !5374, !tbaa !3860
  store %struct._object* %123, %struct._object** %_py_xdecref_tmp171, align 8, !dbg !5373, !tbaa !3860
  %124 = load %struct._object*, %struct._object** %_py_xdecref_tmp171, align 8, !dbg !5375, !tbaa !3860
  %cmp172 = icmp ne %struct._object* %124, null, !dbg !5376
  br i1 %cmp172, label %if.then.173, label %if.end.186, !dbg !5377

if.then.173:                                      ; preds = %do.body.170
  br label %do.body.174, !dbg !5378

do.body.174:                                      ; preds = %if.then.173
  %125 = bitcast %struct._object** %_py_decref_tmp175 to i8*, !dbg !5380
  call void @llvm.lifetime.start(i64 8, i8* %125) #1, !dbg !5380
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp175, metadata !2455, metadata !3830), !dbg !5382
  %126 = load %struct._object*, %struct._object** %_py_xdecref_tmp171, align 8, !dbg !5383, !tbaa !3860
  store %struct._object* %126, %struct._object** %_py_decref_tmp175, align 8, !dbg !5382, !tbaa !3860
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8, !dbg !5384, !tbaa !3860
  %ob_refcnt176 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 0, !dbg !5386
  %128 = load i64, i64* %ob_refcnt176, align 8, !dbg !5387, !tbaa !4101
  %dec177 = add i64 %128, -1, !dbg !5387
  store i64 %dec177, i64* %ob_refcnt176, align 8, !dbg !5387, !tbaa !4101
  %cmp178 = icmp ne i64 %dec177, 0, !dbg !5388
  br i1 %cmp178, label %if.then.179, label %if.else.180, !dbg !5389

if.then.179:                                      ; preds = %do.body.174
  br label %if.end.183, !dbg !5390

if.else.180:                                      ; preds = %do.body.174
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8, !dbg !5392, !tbaa !3860
  %ob_type181 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 1, !dbg !5394
  %130 = load %struct._typeobject*, %struct._typeobject** %ob_type181, align 8, !dbg !5394, !tbaa !4204
  %tp_dealloc182 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %130, i32 0, i32 4, !dbg !5395
  %131 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc182, align 8, !dbg !5395, !tbaa !4206
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8, !dbg !5396, !tbaa !3860
  call void %131(%struct._object* %132), !dbg !5397
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.180, %if.then.179
  %133 = bitcast %struct._object** %_py_decref_tmp175 to i8*, !dbg !5398
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !5398
  br label %do.cond.184, !dbg !5400

do.cond.184:                                      ; preds = %if.end.183
  br label %do.end.185, !dbg !5401

do.end.185:                                       ; preds = %do.cond.184
  br label %if.end.186, !dbg !5403

if.end.186:                                       ; preds = %do.end.185, %do.body.170
  %134 = bitcast %struct._object** %_py_xdecref_tmp171 to i8*, !dbg !5405
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !5405
  br label %do.cond.187, !dbg !5406

do.cond.187:                                      ; preds = %if.end.186
  br label %do.end.188, !dbg !5407

do.end.188:                                       ; preds = %do.cond.187
  store %struct._object* null, %struct._object** %retval, !dbg !5409
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5409

cleanup:                                          ; preds = %do.end.188, %if.end.144, %if.then.7, %if.then
  %135 = bitcast i32* %r to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 4, i8* %135) #1, !dbg !5410
  %136 = bitcast %struct._PySSLPasswordInfo* %pw_info to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 32, i8* %136) #1, !dbg !5410
  %137 = bitcast i8** %orig_passwd_userdata to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !5410
  %138 = bitcast i32 (i8*, i32, i32, i8*)** %orig_passwd_cb to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !5410
  %139 = bitcast %struct._object** %keyfile_bytes to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !5410
  %140 = bitcast %struct._object** %certfile_bytes to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !5410
  %141 = bitcast %struct._object** %password to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !5410
  %142 = bitcast %struct._object** %keyfile to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %142) #1, !dbg !5410
  %143 = bitcast %struct._object** %certfile to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 8, i8* %143) #1, !dbg !5410
  %144 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !5410
  call void @llvm.lifetime.end(i64 32, i8* %144) #1, !dbg !5410
  %145 = load %struct._object*, %struct._object** %retval, !dbg !5410
  ret %struct._object* %145, !dbg !5410
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @load_dh_params(%struct.PySSLContext* %self, %struct._object* %filepath) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %filepath.addr = alloca %struct._object*, align 8
  %f = alloca %struct._IO_FILE*, align 8
  %dh = alloca %struct.dh_st*, align 8
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2539, metadata !3830), !dbg !5411
  store %struct._object* %filepath, %struct._object** %filepath.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %filepath.addr, metadata !2540, metadata !3830), !dbg !5412
  %0 = bitcast %struct._IO_FILE** %f to i8*, !dbg !5413
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5413
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f, metadata !2541, metadata !3830), !dbg !5414
  %1 = bitcast %struct.dh_st** %dh to i8*, !dbg !5415
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5415
  call void @llvm.dbg.declare(metadata %struct.dh_st** %dh, metadata !2542, metadata !3830), !dbg !5416
  %2 = load %struct._object*, %struct._object** %filepath.addr, align 8, !dbg !5417, !tbaa !3860
  %call = call %struct._IO_FILE* @_Py_fopen_obj(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i32 0, i32 0)), !dbg !5418
  store %struct._IO_FILE* %call, %struct._IO_FILE** %f, align 8, !dbg !5419, !tbaa !3860
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !5420, !tbaa !3860
  %cmp = icmp eq %struct._IO_FILE* %3, null, !dbg !5422
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !5423

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !5424
  %tobool = icmp ne %struct._object* %call1, null, !dbg !5424
  br i1 %tobool, label %if.end, label %if.then.2, !dbg !5427

if.then.2:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5428, !tbaa !3860
  %5 = load %struct._object*, %struct._object** %filepath.addr, align 8, !dbg !5429, !tbaa !3860
  %call3 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %4, %struct._object* %5), !dbg !5430
  br label %if.end, !dbg !5430

if.end:                                           ; preds = %if.then.2, %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !5431
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5431

if.end.4:                                         ; preds = %entry
  %call5 = call i32* @__errno_location() #2, !dbg !5432
  store i32 0, i32* %call5, align 4, !dbg !5433, !tbaa !4372
  %6 = bitcast %struct._ts** %_save to i8*, !dbg !5434
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5434
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !2543, metadata !3830), !dbg !5435
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !5435, !tbaa !3860
  br label %do.body, !dbg !5436

do.body:                                          ; preds = %if.end.4
  %7 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5437, !tbaa !4372
  %cmp6 = icmp ugt i32 %7, 0, !dbg !5441
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !5442

if.then.7:                                        ; preds = %do.body
  %call8 = call %struct._ts* @PyEval_SaveThread(), !dbg !5443
  store %struct._ts* %call8, %struct._ts** %_save, align 8, !dbg !5446, !tbaa !3860
  br label %if.end.9, !dbg !5447

if.end.9:                                         ; preds = %if.then.7, %do.body
  br label %do.cond, !dbg !5448

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !5451

do.end:                                           ; preds = %do.cond
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !5453, !tbaa !3860
  %call10 = call %struct.dh_st* @PEM_read_DHparams(%struct._IO_FILE* %8, %struct.dh_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null), !dbg !5454
  store %struct.dh_st* %call10, %struct.dh_st** %dh, align 8, !dbg !5455, !tbaa !3860
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !5456, !tbaa !3860
  %call11 = call i32 @fclose(%struct._IO_FILE* %9), !dbg !5457
  br label %do.body.12, !dbg !5458

do.body.12:                                       ; preds = %do.end
  %10 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5459, !tbaa !4372
  %cmp13 = icmp ugt i32 %10, 0, !dbg !5463
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !5464

if.then.14:                                       ; preds = %do.body.12
  %11 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !5465, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %11), !dbg !5468
  br label %if.end.15, !dbg !5469

if.end.15:                                        ; preds = %if.then.14, %do.body.12
  br label %do.cond.16, !dbg !5470

do.cond.16:                                       ; preds = %if.end.15
  br label %do.end.17, !dbg !5473

do.end.17:                                        ; preds = %do.cond.16
  %12 = bitcast %struct._ts** %_save to i8*, !dbg !5475
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !5475
  %13 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !5477, !tbaa !3860
  %cmp18 = icmp eq %struct.dh_st* %13, null, !dbg !5479
  br i1 %cmp18, label %if.then.19, label %if.end.26, !dbg !5480

if.then.19:                                       ; preds = %do.end.17
  %call20 = call i32* @__errno_location() #2, !dbg !5481
  %14 = load i32, i32* %call20, align 4, !dbg !5484, !tbaa !4372
  %cmp21 = icmp ne i32 %14, 0, !dbg !5485
  br i1 %cmp21, label %if.then.22, label %if.else, !dbg !5486

if.then.22:                                       ; preds = %if.then.19
  call void @ERR_clear_error(), !dbg !5487
  %15 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5489, !tbaa !3860
  %16 = load %struct._object*, %struct._object** %filepath.addr, align 8, !dbg !5490, !tbaa !3860
  %call23 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %15, %struct._object* %16), !dbg !5491
  br label %if.end.25, !dbg !5492

if.else:                                          ; preds = %if.then.19
  %call24 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2776), !dbg !5493
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.22
  store %struct._object* null, %struct._object** %retval, !dbg !5495
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5495

if.end.26:                                        ; preds = %do.end.17
  %17 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5496, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %17, i32 0, i32 1, !dbg !5498
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !5498, !tbaa !4529
  %19 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !5499, !tbaa !3860
  %20 = bitcast %struct.dh_st* %19 to i8*, !dbg !5500
  %call27 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %18, i32 3, i64 0, i8* %20), !dbg !5501
  %cmp28 = icmp eq i64 %call27, 0, !dbg !5502
  br i1 %cmp28, label %if.then.29, label %if.end.31, !dbg !5503

if.then.29:                                       ; preds = %if.end.26
  %call30 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2781), !dbg !5504
  br label %if.end.31, !dbg !5504

if.end.31:                                        ; preds = %if.then.29, %if.end.26
  %21 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !5505, !tbaa !3860
  call void @DH_free(%struct.dh_st* %21), !dbg !5506
  %22 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5507, !tbaa !4101
  %inc = add i64 %22, 1, !dbg !5507
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5507, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5508
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5508

cleanup:                                          ; preds = %if.end.31, %if.end.25, %if.end
  %23 = bitcast %struct.dh_st** %dh to i8*, !dbg !5509
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !5509
  %24 = bitcast %struct._IO_FILE** %f to i8*, !dbg !5509
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !5509
  %25 = load %struct._object*, %struct._object** %retval, !dbg !5509
  ret %struct._object* %25, !dbg !5509
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @load_verify_locations(%struct.PySSLContext* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [4 x i8*], align 16
  %cafile = alloca %struct._object*, align 8
  %capath = alloca %struct._object*, align 8
  %cadata = alloca %struct._object*, align 8
  %cafile_bytes = alloca %struct._object*, align 8
  %capath_bytes = alloca %struct._object*, align 8
  %cafile_buf = alloca i8*, align 8
  %capath_buf = alloca i8*, align 8
  %r = alloca i32, align 4
  %ok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %buf = alloca %struct.bufferinfo, align 8
  %cadata_ascii = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_save = alloca %struct._ts*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp102 = alloca %struct._object*, align 8
  %_py_xdecref_tmp117 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2547, metadata !3830), !dbg !5510
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2548, metadata !3830), !dbg !5511
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2549, metadata !3830), !dbg !5512
  %0 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !5513
  call void @llvm.lifetime.start(i64 32, i8* %0) #1, !dbg !5513
  call void @llvm.dbg.declare(metadata [4 x i8*]* %kwlist, metadata !2550, metadata !3830), !dbg !5514
  %1 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !5514
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([4 x i8*]* @load_verify_locations.kwlist to i8*), i64 32, i32 16, i1 false), !dbg !5514
  %2 = bitcast %struct._object** %cafile to i8*, !dbg !5515
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5515
  call void @llvm.dbg.declare(metadata %struct._object** %cafile, metadata !2551, metadata !3830), !dbg !5516
  store %struct._object* null, %struct._object** %cafile, align 8, !dbg !5516, !tbaa !3860
  %3 = bitcast %struct._object** %capath to i8*, !dbg !5515
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5515
  call void @llvm.dbg.declare(metadata %struct._object** %capath, metadata !2552, metadata !3830), !dbg !5517
  store %struct._object* null, %struct._object** %capath, align 8, !dbg !5517, !tbaa !3860
  %4 = bitcast %struct._object** %cadata to i8*, !dbg !5515
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5515
  call void @llvm.dbg.declare(metadata %struct._object** %cadata, metadata !2553, metadata !3830), !dbg !5518
  store %struct._object* null, %struct._object** %cadata, align 8, !dbg !5518, !tbaa !3860
  %5 = bitcast %struct._object** %cafile_bytes to i8*, !dbg !5519
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !5519
  call void @llvm.dbg.declare(metadata %struct._object** %cafile_bytes, metadata !2554, metadata !3830), !dbg !5520
  store %struct._object* null, %struct._object** %cafile_bytes, align 8, !dbg !5520, !tbaa !3860
  %6 = bitcast %struct._object** %capath_bytes to i8*, !dbg !5519
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5519
  call void @llvm.dbg.declare(metadata %struct._object** %capath_bytes, metadata !2555, metadata !3830), !dbg !5521
  store %struct._object* null, %struct._object** %capath_bytes, align 8, !dbg !5521, !tbaa !3860
  %7 = bitcast i8** %cafile_buf to i8*, !dbg !5522
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !5522
  call void @llvm.dbg.declare(metadata i8** %cafile_buf, metadata !2556, metadata !3830), !dbg !5523
  store i8* null, i8** %cafile_buf, align 8, !dbg !5523, !tbaa !3860
  %8 = bitcast i8** %capath_buf to i8*, !dbg !5522
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5522
  call void @llvm.dbg.declare(metadata i8** %capath_buf, metadata !2557, metadata !3830), !dbg !5524
  store i8* null, i8** %capath_buf, align 8, !dbg !5524, !tbaa !3860
  %9 = bitcast i32* %r to i8*, !dbg !5525
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !5525
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2558, metadata !3830), !dbg !5526
  store i32 0, i32* %r, align 4, !dbg !5526, !tbaa !4372
  %10 = bitcast i32* %ok to i8*, !dbg !5525
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !5525
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !2559, metadata !3830), !dbg !5527
  store i32 1, i32* %ok, align 4, !dbg !5527, !tbaa !4372
  %call = call i32* @__errno_location() #2, !dbg !5528
  store i32 0, i32* %call, align 4, !dbg !5529, !tbaa !4372
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5530, !tbaa !3860
  %12 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5532, !tbaa !3860
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %kwlist, i32 0, i32 0, !dbg !5533
  %call1 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %11, %struct._object* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i32 0, i32 0), i8** %arraydecay, %struct._object** %cafile, %struct._object** %capath, %struct._object** %cadata), !dbg !5534
  %tobool = icmp ne i32 %call1, 0, !dbg !5534
  br i1 %tobool, label %if.end, label %if.then, !dbg !5535

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5536
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !5536

if.end:                                           ; preds = %entry
  %13 = load %struct._object*, %struct._object** %cafile, align 8, !dbg !5537, !tbaa !3860
  %cmp = icmp eq %struct._object* %13, @_Py_NoneStruct, !dbg !5539
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !5540

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %cafile, align 8, !dbg !5541, !tbaa !3860
  br label %if.end.3, !dbg !5542

if.end.3:                                         ; preds = %if.then.2, %if.end
  %14 = load %struct._object*, %struct._object** %capath, align 8, !dbg !5543, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %14, @_Py_NoneStruct, !dbg !5545
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !5546

if.then.5:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %capath, align 8, !dbg !5547, !tbaa !3860
  br label %if.end.6, !dbg !5548

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  %15 = load %struct._object*, %struct._object** %cadata, align 8, !dbg !5549, !tbaa !3860
  %cmp7 = icmp eq %struct._object* %15, @_Py_NoneStruct, !dbg !5551
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !5552

if.then.8:                                        ; preds = %if.end.6
  store %struct._object* null, %struct._object** %cadata, align 8, !dbg !5553, !tbaa !3860
  br label %if.end.9, !dbg !5554

if.end.9:                                         ; preds = %if.then.8, %if.end.6
  %16 = load %struct._object*, %struct._object** %cafile, align 8, !dbg !5555, !tbaa !3860
  %cmp10 = icmp eq %struct._object* %16, null, !dbg !5557
  br i1 %cmp10, label %land.lhs.true, label %if.end.15, !dbg !5558

land.lhs.true:                                    ; preds = %if.end.9
  %17 = load %struct._object*, %struct._object** %capath, align 8, !dbg !5559, !tbaa !3860
  %cmp11 = icmp eq %struct._object* %17, null, !dbg !5561
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.15, !dbg !5562

land.lhs.true.12:                                 ; preds = %land.lhs.true
  %18 = load %struct._object*, %struct._object** %cadata, align 8, !dbg !5563, !tbaa !3860
  %cmp13 = icmp eq %struct._object* %18, null, !dbg !5565
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !5566

if.then.14:                                       ; preds = %land.lhs.true.12
  %19 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5567, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.132, i32 0, i32 0)), !dbg !5569
  br label %error, !dbg !5570

if.end.15:                                        ; preds = %land.lhs.true.12, %land.lhs.true, %if.end.9
  %20 = load %struct._object*, %struct._object** %cafile, align 8, !dbg !5571, !tbaa !3860
  %tobool16 = icmp ne %struct._object* %20, null, !dbg !5571
  br i1 %tobool16, label %land.lhs.true.17, label %if.end.21, !dbg !5573

land.lhs.true.17:                                 ; preds = %if.end.15
  %21 = load %struct._object*, %struct._object** %cafile, align 8, !dbg !5574, !tbaa !3860
  %22 = bitcast %struct._object** %cafile_bytes to i8*, !dbg !5576
  %call18 = call i32 @PyUnicode_FSConverter(%struct._object* %21, i8* %22), !dbg !5577
  %tobool19 = icmp ne i32 %call18, 0, !dbg !5577
  br i1 %tobool19, label %if.end.21, label %if.then.20, !dbg !5578

if.then.20:                                       ; preds = %land.lhs.true.17
  %23 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5579, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.133, i32 0, i32 0)), !dbg !5581
  br label %error, !dbg !5582

if.end.21:                                        ; preds = %land.lhs.true.17, %if.end.15
  %24 = load %struct._object*, %struct._object** %capath, align 8, !dbg !5583, !tbaa !3860
  %tobool22 = icmp ne %struct._object* %24, null, !dbg !5583
  br i1 %tobool22, label %land.lhs.true.23, label %if.end.27, !dbg !5585

land.lhs.true.23:                                 ; preds = %if.end.21
  %25 = load %struct._object*, %struct._object** %capath, align 8, !dbg !5586, !tbaa !3860
  %26 = bitcast %struct._object** %capath_bytes to i8*, !dbg !5588
  %call24 = call i32 @PyUnicode_FSConverter(%struct._object* %25, i8* %26), !dbg !5589
  %tobool25 = icmp ne i32 %call24, 0, !dbg !5589
  br i1 %tobool25, label %if.end.27, label %if.then.26, !dbg !5590

if.then.26:                                       ; preds = %land.lhs.true.23
  %27 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5591, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %27, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.134, i32 0, i32 0)), !dbg !5593
  br label %error, !dbg !5594

if.end.27:                                        ; preds = %land.lhs.true.23, %if.end.21
  %28 = load %struct._object*, %struct._object** %cadata, align 8, !dbg !5595, !tbaa !3860
  %tobool28 = icmp ne %struct._object* %28, null, !dbg !5595
  br i1 %tobool28, label %if.then.29, label %if.end.58, !dbg !5596

if.then.29:                                       ; preds = %if.end.27
  %29 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !5597
  call void @llvm.lifetime.start(i64 80, i8* %29) #1, !dbg !5597
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !2560, metadata !3830), !dbg !5598
  %30 = bitcast %struct._object** %cadata_ascii to i8*, !dbg !5599
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !5599
  call void @llvm.dbg.declare(metadata %struct._object** %cadata_ascii, metadata !2563, metadata !3830), !dbg !5600
  store %struct._object* null, %struct._object** %cadata_ascii, align 8, !dbg !5600, !tbaa !3860
  %31 = load %struct._object*, %struct._object** %cadata, align 8, !dbg !5601, !tbaa !3860
  %call30 = call i32 @PyObject_GetBuffer(%struct._object* %31, %struct.bufferinfo* %buf, i32 0), !dbg !5602
  %cmp31 = icmp eq i32 %call30, 0, !dbg !5603
  br i1 %cmp31, label %if.then.32, label %if.else, !dbg !5604

if.then.32:                                       ; preds = %if.then.29
  %call33 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %buf, i8 signext 67), !dbg !5605
  %tobool34 = icmp ne i32 %call33, 0, !dbg !5605
  br i1 %tobool34, label %lor.lhs.false, label %if.then.36, !dbg !5608

lor.lhs.false:                                    ; preds = %if.then.32
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 5, !dbg !5609
  %32 = load i32, i32* %ndim, align 4, !dbg !5609, !tbaa !5611
  %cmp35 = icmp sgt i32 %32, 1, !dbg !5612
  br i1 %cmp35, label %if.then.36, label %if.end.37, !dbg !5613

if.then.36:                                       ; preds = %lor.lhs.false, %if.then.32
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !5614
  %33 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5616, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.135, i32 0, i32 0)), !dbg !5617
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5618

if.end.37:                                        ; preds = %lor.lhs.false
  %34 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5619, !tbaa !3860
  %buf38 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !5620
  %35 = load i8*, i8** %buf38, align 8, !dbg !5620, !tbaa !4915
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !5621
  %36 = load i64, i64* %len, align 8, !dbg !5621, !tbaa !4897
  %call39 = call i32 @_add_ca_certs(%struct.PySSLContext* %34, i8* %35, i64 %36, i32 2), !dbg !5622
  store i32 %call39, i32* %r, align 4, !dbg !5623, !tbaa !4372
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !5624
  %37 = load i32, i32* %r, align 4, !dbg !5625, !tbaa !4372
  %cmp40 = icmp eq i32 %37, -1, !dbg !5627
  br i1 %cmp40, label %if.then.41, label %if.end.42, !dbg !5628

if.then.41:                                       ; preds = %if.end.37
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5629

if.end.42:                                        ; preds = %if.end.37
  br label %if.end.56, !dbg !5631

if.else:                                          ; preds = %if.then.29
  call void @PyErr_Clear(), !dbg !5632
  %38 = load %struct._object*, %struct._object** %cadata, align 8, !dbg !5633, !tbaa !3860
  %call43 = call %struct._object* @PyUnicode_AsASCIIString(%struct._object* %38), !dbg !5634
  store %struct._object* %call43, %struct._object** %cadata_ascii, align 8, !dbg !5635, !tbaa !3860
  %39 = load %struct._object*, %struct._object** %cadata_ascii, align 8, !dbg !5636, !tbaa !3860
  %cmp44 = icmp eq %struct._object* %39, null, !dbg !5638
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !5639

if.then.45:                                       ; preds = %if.else
  %40 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5640, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %40, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.136, i32 0, i32 0)), !dbg !5642
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5643

if.end.46:                                        ; preds = %if.else
  %41 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5644, !tbaa !3860
  %42 = load %struct._object*, %struct._object** %cadata_ascii, align 8, !dbg !5645, !tbaa !3860
  %43 = bitcast %struct._object* %42 to %struct.PyBytesObject*, !dbg !5646
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %43, i32 0, i32 2, !dbg !5647
  %arraydecay47 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5648
  %44 = load %struct._object*, %struct._object** %cadata_ascii, align 8, !dbg !5649, !tbaa !3860
  %45 = bitcast %struct._object* %44 to %struct.PyVarObject*, !dbg !5650
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %45, i32 0, i32 1, !dbg !5651
  %46 = load i64, i64* %ob_size, align 8, !dbg !5651, !tbaa !5652
  %call48 = call i32 @_add_ca_certs(%struct.PySSLContext* %41, i8* %arraydecay47, i64 %46, i32 1), !dbg !5653
  store i32 %call48, i32* %r, align 4, !dbg !5654, !tbaa !4372
  br label %do.body, !dbg !5655

do.body:                                          ; preds = %if.end.46
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5656
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !5656
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2564, metadata !3830), !dbg !5658
  %48 = load %struct._object*, %struct._object** %cadata_ascii, align 8, !dbg !5659, !tbaa !3860
  store %struct._object* %48, %struct._object** %_py_decref_tmp, align 8, !dbg !5658, !tbaa !3860
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5660, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !5662
  %50 = load i64, i64* %ob_refcnt, align 8, !dbg !5663, !tbaa !4101
  %dec = add i64 %50, -1, !dbg !5663
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5663, !tbaa !4101
  %cmp49 = icmp ne i64 %dec, 0, !dbg !5664
  br i1 %cmp49, label %if.then.50, label %if.else.51, !dbg !5665

if.then.50:                                       ; preds = %do.body
  br label %if.end.52, !dbg !5666

if.else.51:                                       ; preds = %do.body
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5668, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !5670
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5670, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !5671
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5671, !tbaa !4206
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5672, !tbaa !3860
  call void %53(%struct._object* %54), !dbg !5673
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.51, %if.then.50
  %55 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5674
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !5674
  br label %do.cond, !dbg !5676

do.cond:                                          ; preds = %if.end.52
  br label %do.end, !dbg !5677

do.end:                                           ; preds = %do.cond
  %56 = load i32, i32* %r, align 4, !dbg !5679, !tbaa !4372
  %cmp53 = icmp eq i32 %56, -1, !dbg !5681
  br i1 %cmp53, label %if.then.54, label %if.end.55, !dbg !5682

if.then.54:                                       ; preds = %do.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5683

if.end.55:                                        ; preds = %do.end
  br label %if.end.56

if.end.56:                                        ; preds = %if.end.55, %if.end.42
  store i32 0, i32* %cleanup.dest.slot, !dbg !5685
  br label %cleanup, !dbg !5685

cleanup:                                          ; preds = %if.end.56, %if.then.54, %if.then.45, %if.then.41, %if.then.36
  %57 = bitcast %struct._object** %cadata_ascii to i8*, !dbg !5686
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !5686
  %58 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !5686
  call void @llvm.lifetime.end(i64 80, i8* %58) #1, !dbg !5686
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %error, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.58, !dbg !5688

if.end.58:                                        ; preds = %cleanup.cont, %if.end.27
  %59 = load %struct._object*, %struct._object** %cafile, align 8, !dbg !5689, !tbaa !3860
  %tobool59 = icmp ne %struct._object* %59, null, !dbg !5689
  br i1 %tobool59, label %if.then.62, label %lor.lhs.false.60, !dbg !5690

lor.lhs.false.60:                                 ; preds = %if.end.58
  %60 = load %struct._object*, %struct._object** %capath, align 8, !dbg !5691, !tbaa !3860
  %tobool61 = icmp ne %struct._object* %60, null, !dbg !5691
  br i1 %tobool61, label %if.then.62, label %if.end.97, !dbg !5693

if.then.62:                                       ; preds = %lor.lhs.false.60, %if.end.58
  %61 = load %struct._object*, %struct._object** %cafile, align 8, !dbg !5694, !tbaa !3860
  %tobool63 = icmp ne %struct._object* %61, null, !dbg !5694
  br i1 %tobool63, label %if.then.64, label %if.end.67, !dbg !5696

if.then.64:                                       ; preds = %if.then.62
  %62 = load %struct._object*, %struct._object** %cafile_bytes, align 8, !dbg !5697, !tbaa !3860
  %63 = bitcast %struct._object* %62 to %struct.PyBytesObject*, !dbg !5698
  %ob_sval65 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %63, i32 0, i32 2, !dbg !5699
  %arraydecay66 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval65, i32 0, i32 0, !dbg !5700
  store i8* %arraydecay66, i8** %cafile_buf, align 8, !dbg !5701, !tbaa !3860
  br label %if.end.67, !dbg !5702

if.end.67:                                        ; preds = %if.then.64, %if.then.62
  %64 = load %struct._object*, %struct._object** %capath, align 8, !dbg !5703, !tbaa !3860
  %tobool68 = icmp ne %struct._object* %64, null, !dbg !5703
  br i1 %tobool68, label %if.then.69, label %if.end.72, !dbg !5705

if.then.69:                                       ; preds = %if.end.67
  %65 = load %struct._object*, %struct._object** %capath_bytes, align 8, !dbg !5706, !tbaa !3860
  %66 = bitcast %struct._object* %65 to %struct.PyBytesObject*, !dbg !5707
  %ob_sval70 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %66, i32 0, i32 2, !dbg !5708
  %arraydecay71 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval70, i32 0, i32 0, !dbg !5709
  store i8* %arraydecay71, i8** %capath_buf, align 8, !dbg !5710, !tbaa !3860
  br label %if.end.72, !dbg !5711

if.end.72:                                        ; preds = %if.then.69, %if.end.67
  %67 = bitcast %struct._ts** %_save to i8*, !dbg !5712
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !5712
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !2568, metadata !3830), !dbg !5713
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !5713, !tbaa !3860
  br label %do.body.73, !dbg !5714

do.body.73:                                       ; preds = %if.end.72
  %68 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5715, !tbaa !4372
  %cmp74 = icmp ugt i32 %68, 0, !dbg !5719
  br i1 %cmp74, label %if.then.75, label %if.end.77, !dbg !5720

if.then.75:                                       ; preds = %do.body.73
  %call76 = call %struct._ts* @PyEval_SaveThread(), !dbg !5721
  store %struct._ts* %call76, %struct._ts** %_save, align 8, !dbg !5724, !tbaa !3860
  br label %if.end.77, !dbg !5725

if.end.77:                                        ; preds = %if.then.75, %do.body.73
  br label %do.cond.78, !dbg !5726

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !5729

do.end.79:                                        ; preds = %do.cond.78
  %69 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5731, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %69, i32 0, i32 1, !dbg !5732
  %70 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !5732, !tbaa !4529
  %71 = load i8*, i8** %cafile_buf, align 8, !dbg !5733, !tbaa !3860
  %72 = load i8*, i8** %capath_buf, align 8, !dbg !5734, !tbaa !3860
  %call80 = call i32 @SSL_CTX_load_verify_locations(%struct.ssl_ctx_st* %70, i8* %71, i8* %72), !dbg !5735
  store i32 %call80, i32* %r, align 4, !dbg !5736, !tbaa !4372
  br label %do.body.81, !dbg !5737

do.body.81:                                       ; preds = %do.end.79
  %73 = load i32, i32* @_ssl_locks_count, align 4, !dbg !5738, !tbaa !4372
  %cmp82 = icmp ugt i32 %73, 0, !dbg !5742
  br i1 %cmp82, label %if.then.83, label %if.end.84, !dbg !5743

if.then.83:                                       ; preds = %do.body.81
  %74 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !5744, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %74), !dbg !5747
  br label %if.end.84, !dbg !5748

if.end.84:                                        ; preds = %if.then.83, %do.body.81
  br label %do.cond.85, !dbg !5749

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !5752

do.end.86:                                        ; preds = %do.cond.85
  %75 = bitcast %struct._ts** %_save to i8*, !dbg !5754
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !5754
  %76 = load i32, i32* %r, align 4, !dbg !5756, !tbaa !4372
  %cmp87 = icmp ne i32 %76, 1, !dbg !5758
  br i1 %cmp87, label %if.then.88, label %if.end.96, !dbg !5759

if.then.88:                                       ; preds = %do.end.86
  store i32 0, i32* %ok, align 4, !dbg !5760, !tbaa !4372
  %call89 = call i32* @__errno_location() #2, !dbg !5762
  %77 = load i32, i32* %call89, align 4, !dbg !5764, !tbaa !4372
  %cmp90 = icmp ne i32 %77, 0, !dbg !5765
  br i1 %cmp90, label %if.then.91, label %if.else.93, !dbg !5766

if.then.91:                                       ; preds = %if.then.88
  call void @ERR_clear_error(), !dbg !5767
  %78 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !5769, !tbaa !3860
  %call92 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %78), !dbg !5770
  br label %if.end.95, !dbg !5771

if.else.93:                                       ; preds = %if.then.88
  %call94 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2734), !dbg !5772
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.93, %if.then.91
  br label %error, !dbg !5774

if.end.96:                                        ; preds = %do.end.86
  br label %if.end.97, !dbg !5775

if.end.97:                                        ; preds = %if.end.96, %lor.lhs.false.60
  br label %end, !dbg !5776

error:                                            ; preds = %LeafBlock.1, %if.end.95, %if.then.26, %if.then.20, %if.then.14
  store i32 0, i32* %ok, align 4, !dbg !5777, !tbaa !4372
  br label %end, !dbg !5778

end:                                              ; preds = %error, %if.end.97
  br label %do.body.98, !dbg !5779

do.body.98:                                       ; preds = %end
  %79 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5780
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !5780
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2572, metadata !3830), !dbg !5782
  %80 = load %struct._object*, %struct._object** %cafile_bytes, align 8, !dbg !5783, !tbaa !3860
  store %struct._object* %80, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5782, !tbaa !3860
  %81 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5784, !tbaa !3860
  %cmp99 = icmp ne %struct._object* %81, null, !dbg !5785
  br i1 %cmp99, label %if.then.100, label %if.end.113, !dbg !5786

if.then.100:                                      ; preds = %do.body.98
  br label %do.body.101, !dbg !5787

do.body.101:                                      ; preds = %if.then.100
  %82 = bitcast %struct._object** %_py_decref_tmp102 to i8*, !dbg !5789
  call void @llvm.lifetime.start(i64 8, i8* %82) #1, !dbg !5789
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp102, metadata !2574, metadata !3830), !dbg !5791
  %83 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5792, !tbaa !3860
  store %struct._object* %83, %struct._object** %_py_decref_tmp102, align 8, !dbg !5791, !tbaa !3860
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp102, align 8, !dbg !5793, !tbaa !3860
  %ob_refcnt103 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 0, !dbg !5795
  %85 = load i64, i64* %ob_refcnt103, align 8, !dbg !5796, !tbaa !4101
  %dec104 = add i64 %85, -1, !dbg !5796
  store i64 %dec104, i64* %ob_refcnt103, align 8, !dbg !5796, !tbaa !4101
  %cmp105 = icmp ne i64 %dec104, 0, !dbg !5797
  br i1 %cmp105, label %if.then.106, label %if.else.107, !dbg !5798

if.then.106:                                      ; preds = %do.body.101
  br label %if.end.110, !dbg !5799

if.else.107:                                      ; preds = %do.body.101
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp102, align 8, !dbg !5801, !tbaa !3860
  %ob_type108 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 1, !dbg !5803
  %87 = load %struct._typeobject*, %struct._typeobject** %ob_type108, align 8, !dbg !5803, !tbaa !4204
  %tp_dealloc109 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %87, i32 0, i32 4, !dbg !5804
  %88 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc109, align 8, !dbg !5804, !tbaa !4206
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp102, align 8, !dbg !5805, !tbaa !3860
  call void %88(%struct._object* %89), !dbg !5806
  br label %if.end.110

if.end.110:                                       ; preds = %if.else.107, %if.then.106
  %90 = bitcast %struct._object** %_py_decref_tmp102 to i8*, !dbg !5807
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !5807
  br label %do.cond.111, !dbg !5809

do.cond.111:                                      ; preds = %if.end.110
  br label %do.end.112, !dbg !5810

do.end.112:                                       ; preds = %do.cond.111
  br label %if.end.113, !dbg !5812

if.end.113:                                       ; preds = %do.end.112, %do.body.98
  %91 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5814
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !5814
  br label %do.cond.114, !dbg !5817

do.cond.114:                                      ; preds = %if.end.113
  br label %do.end.115, !dbg !5818

do.end.115:                                       ; preds = %do.cond.114
  br label %do.body.116, !dbg !5820

do.body.116:                                      ; preds = %do.end.115
  %92 = bitcast %struct._object** %_py_xdecref_tmp117 to i8*, !dbg !5821
  call void @llvm.lifetime.start(i64 8, i8* %92) #1, !dbg !5821
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp117, metadata !2577, metadata !3830), !dbg !5823
  %93 = load %struct._object*, %struct._object** %capath_bytes, align 8, !dbg !5824, !tbaa !3860
  store %struct._object* %93, %struct._object** %_py_xdecref_tmp117, align 8, !dbg !5823, !tbaa !3860
  %94 = load %struct._object*, %struct._object** %_py_xdecref_tmp117, align 8, !dbg !5825, !tbaa !3860
  %cmp118 = icmp ne %struct._object* %94, null, !dbg !5826
  br i1 %cmp118, label %if.then.119, label %if.end.132, !dbg !5827

if.then.119:                                      ; preds = %do.body.116
  br label %do.body.120, !dbg !5828

do.body.120:                                      ; preds = %if.then.119
  %95 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !5830
  call void @llvm.lifetime.start(i64 8, i8* %95) #1, !dbg !5830
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp121, metadata !2579, metadata !3830), !dbg !5832
  %96 = load %struct._object*, %struct._object** %_py_xdecref_tmp117, align 8, !dbg !5833, !tbaa !3860
  store %struct._object* %96, %struct._object** %_py_decref_tmp121, align 8, !dbg !5832, !tbaa !3860
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !5834, !tbaa !3860
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !5836
  %98 = load i64, i64* %ob_refcnt122, align 8, !dbg !5837, !tbaa !4101
  %dec123 = add i64 %98, -1, !dbg !5837
  store i64 %dec123, i64* %ob_refcnt122, align 8, !dbg !5837, !tbaa !4101
  %cmp124 = icmp ne i64 %dec123, 0, !dbg !5838
  br i1 %cmp124, label %if.then.125, label %if.else.126, !dbg !5839

if.then.125:                                      ; preds = %do.body.120
  br label %if.end.129, !dbg !5840

if.else.126:                                      ; preds = %do.body.120
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !5842, !tbaa !3860
  %ob_type127 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !5844
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type127, align 8, !dbg !5844, !tbaa !4204
  %tp_dealloc128 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !5845
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc128, align 8, !dbg !5845, !tbaa !4206
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !5846, !tbaa !3860
  call void %101(%struct._object* %102), !dbg !5847
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.126, %if.then.125
  %103 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !5848
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !5848
  br label %do.cond.130, !dbg !5850

do.cond.130:                                      ; preds = %if.end.129
  br label %do.end.131, !dbg !5851

do.end.131:                                       ; preds = %do.cond.130
  br label %if.end.132, !dbg !5853

if.end.132:                                       ; preds = %do.end.131, %do.body.116
  %104 = bitcast %struct._object** %_py_xdecref_tmp117 to i8*, !dbg !5855
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !5855
  br label %do.cond.133, !dbg !5856

do.cond.133:                                      ; preds = %if.end.132
  br label %do.end.134, !dbg !5857

do.end.134:                                       ; preds = %do.cond.133
  %105 = load i32, i32* %ok, align 4, !dbg !5859, !tbaa !4372
  %tobool135 = icmp ne i32 %105, 0, !dbg !5859
  br i1 %tobool135, label %if.then.136, label %if.else.137, !dbg !5861

if.then.136:                                      ; preds = %do.end.134
  %106 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5862, !tbaa !4101
  %inc = add i64 %106, 1, !dbg !5862
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5862, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5864
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !5864

if.else.137:                                      ; preds = %do.end.134
  store %struct._object* null, %struct._object** %retval, !dbg !5865
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !5865

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.138

cleanup.138:                                      ; preds = %NewDefault, %if.else.137, %if.then.136, %if.then
  %107 = bitcast i32* %ok to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 4, i8* %107) #1, !dbg !5867
  %108 = bitcast i32* %r to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 4, i8* %108) #1, !dbg !5867
  %109 = bitcast i8** %capath_buf to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !5867
  %110 = bitcast i8** %cafile_buf to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !5867
  %111 = bitcast %struct._object** %capath_bytes to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !5867
  %112 = bitcast %struct._object** %cafile_bytes to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !5867
  %113 = bitcast %struct._object** %cadata to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !5867
  %114 = bitcast %struct._object** %capath to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !5867
  %115 = bitcast %struct._object** %cafile to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !5867
  %116 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !5867
  call void @llvm.lifetime.end(i64 32, i8* %116) #1, !dbg !5867
  %117 = load %struct._object*, %struct._object** %retval, !dbg !5867
  ret %struct._object* %117, !dbg !5867
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @session_stats(%struct.PySSLContext* %self, %struct._object* %unused) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %unused.addr = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %value = alloca %struct._object*, align 8
  %stats = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  %_py_decref_tmp108 = alloca %struct._object*, align 8
  %_py_decref_tmp130 = alloca %struct._object*, align 8
  %_py_decref_tmp152 = alloca %struct._object*, align 8
  %_py_decref_tmp174 = alloca %struct._object*, align 8
  %_py_decref_tmp196 = alloca %struct._object*, align 8
  %_py_decref_tmp218 = alloca %struct._object*, align 8
  %_py_decref_tmp240 = alloca %struct._object*, align 8
  %_py_decref_tmp255 = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2600, metadata !3830), !dbg !5868
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !2601, metadata !3830), !dbg !5869
  %0 = bitcast i32* %r to i8*, !dbg !5870
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !5870
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2602, metadata !3830), !dbg !5871
  %1 = bitcast %struct._object** %value to i8*, !dbg !5872
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5872
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2603, metadata !3830), !dbg !5873
  %2 = bitcast %struct._object** %stats to i8*, !dbg !5872
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5872
  call void @llvm.dbg.declare(metadata %struct._object** %stats, metadata !2604, metadata !3830), !dbg !5874
  %call = call %struct._object* @PyDict_New(), !dbg !5875
  store %struct._object* %call, %struct._object** %stats, align 8, !dbg !5874, !tbaa !3860
  %3 = load %struct._object*, %struct._object** %stats, align 8, !dbg !5876, !tbaa !3860
  %tobool = icmp ne %struct._object* %3, null, !dbg !5876
  br i1 %tobool, label %if.end, label %if.then, !dbg !5878

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5879
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5879

if.end:                                           ; preds = %entry
  %4 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5880, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %4, i32 0, i32 1, !dbg !5881
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !5881, !tbaa !4529
  %call1 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %5, i32 20, i64 0, i8* null), !dbg !5882
  %call2 = call %struct._object* @PyLong_FromLong(i64 %call1), !dbg !5883
  store %struct._object* %call2, %struct._object** %value, align 8, !dbg !5884, !tbaa !3860
  %6 = load %struct._object*, %struct._object** %value, align 8, !dbg !5885, !tbaa !3860
  %cmp = icmp eq %struct._object* %6, null, !dbg !5887
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !5888

if.then.3:                                        ; preds = %if.end
  br label %error, !dbg !5889

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %stats, align 8, !dbg !5891, !tbaa !3860
  %8 = load %struct._object*, %struct._object** %value, align 8, !dbg !5893, !tbaa !3860
  %call5 = call i32 @PyDict_SetItemString(%struct._object* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0), %struct._object* %8), !dbg !5894
  store i32 %call5, i32* %r, align 4, !dbg !5895, !tbaa !4372
  br label %do.body, !dbg !5896

do.body:                                          ; preds = %if.end.4
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5897
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !5897
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2605, metadata !3830), !dbg !5899
  %10 = load %struct._object*, %struct._object** %value, align 8, !dbg !5900, !tbaa !3860
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !5899, !tbaa !3860
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5901, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !5903
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !5904, !tbaa !4101
  %dec = add i64 %12, -1, !dbg !5904
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5904, !tbaa !4101
  %cmp6 = icmp ne i64 %dec, 0, !dbg !5905
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !5906

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !5907

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5909, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !5911
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5911, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !5912
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5912, !tbaa !4206
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5913, !tbaa !3860
  call void %15(%struct._object* %16), !dbg !5914
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5915
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !5915
  br label %do.cond, !dbg !5917

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !5918

do.end:                                           ; preds = %do.cond
  %18 = load i32, i32* %r, align 4, !dbg !5920, !tbaa !4372
  %cmp9 = icmp slt i32 %18, 0, !dbg !5923
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !5924

if.then.10:                                       ; preds = %do.end
  br label %error, !dbg !5925

if.end.11:                                        ; preds = %do.end
  %19 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5927, !tbaa !3860
  %ctx12 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %19, i32 0, i32 1, !dbg !5928
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx12, align 8, !dbg !5928, !tbaa !4529
  %call13 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %20, i32 21, i64 0, i8* null), !dbg !5929
  %call14 = call %struct._object* @PyLong_FromLong(i64 %call13), !dbg !5930
  store %struct._object* %call14, %struct._object** %value, align 8, !dbg !5931, !tbaa !3860
  %21 = load %struct._object*, %struct._object** %value, align 8, !dbg !5932, !tbaa !3860
  %cmp15 = icmp eq %struct._object* %21, null, !dbg !5934
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !5935

if.then.16:                                       ; preds = %if.end.11
  br label %error, !dbg !5936

if.end.17:                                        ; preds = %if.end.11
  %22 = load %struct._object*, %struct._object** %stats, align 8, !dbg !5938, !tbaa !3860
  %23 = load %struct._object*, %struct._object** %value, align 8, !dbg !5939, !tbaa !3860
  %call18 = call i32 @PyDict_SetItemString(%struct._object* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), %struct._object* %23), !dbg !5940
  store i32 %call18, i32* %r, align 4, !dbg !5941, !tbaa !4372
  br label %do.body.19, !dbg !5942

do.body.19:                                       ; preds = %if.end.17
  %24 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !5943
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !5943
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp20, metadata !2607, metadata !3830), !dbg !5945
  %25 = load %struct._object*, %struct._object** %value, align 8, !dbg !5946, !tbaa !3860
  store %struct._object* %25, %struct._object** %_py_decref_tmp20, align 8, !dbg !5945, !tbaa !3860
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !5947, !tbaa !3860
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !5949
  %27 = load i64, i64* %ob_refcnt21, align 8, !dbg !5950, !tbaa !4101
  %dec22 = add i64 %27, -1, !dbg !5950
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !5950, !tbaa !4101
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !5951
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !5952

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28, !dbg !5953

if.else.25:                                       ; preds = %do.body.19
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !5955, !tbaa !3860
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !5957
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !5957, !tbaa !4204
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !5958
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8, !dbg !5958, !tbaa !4206
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !5959, !tbaa !3860
  call void %30(%struct._object* %31), !dbg !5960
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  %32 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !5961
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !5961
  br label %do.cond.29, !dbg !5962

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !5963

do.end.30:                                        ; preds = %do.cond.29
  %33 = load i32, i32* %r, align 4, !dbg !5965, !tbaa !4372
  %cmp31 = icmp slt i32 %33, 0, !dbg !5968
  br i1 %cmp31, label %if.then.32, label %if.end.33, !dbg !5969

if.then.32:                                       ; preds = %do.end.30
  br label %error, !dbg !5970

if.end.33:                                        ; preds = %do.end.30
  %34 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !5972, !tbaa !3860
  %ctx34 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %34, i32 0, i32 1, !dbg !5973
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx34, align 8, !dbg !5973, !tbaa !4529
  %call35 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %35, i32 22, i64 0, i8* null), !dbg !5974
  %call36 = call %struct._object* @PyLong_FromLong(i64 %call35), !dbg !5975
  store %struct._object* %call36, %struct._object** %value, align 8, !dbg !5976, !tbaa !3860
  %36 = load %struct._object*, %struct._object** %value, align 8, !dbg !5977, !tbaa !3860
  %cmp37 = icmp eq %struct._object* %36, null, !dbg !5979
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !5980

if.then.38:                                       ; preds = %if.end.33
  br label %error, !dbg !5981

if.end.39:                                        ; preds = %if.end.33
  %37 = load %struct._object*, %struct._object** %stats, align 8, !dbg !5983, !tbaa !3860
  %38 = load %struct._object*, %struct._object** %value, align 8, !dbg !5984, !tbaa !3860
  %call40 = call i32 @PyDict_SetItemString(%struct._object* %37, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), %struct._object* %38), !dbg !5985
  store i32 %call40, i32* %r, align 4, !dbg !5986, !tbaa !4372
  br label %do.body.41, !dbg !5987

do.body.41:                                       ; preds = %if.end.39
  %39 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !5988
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !5988
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !2609, metadata !3830), !dbg !5990
  %40 = load %struct._object*, %struct._object** %value, align 8, !dbg !5991, !tbaa !3860
  store %struct._object* %40, %struct._object** %_py_decref_tmp42, align 8, !dbg !5990, !tbaa !3860
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !5992, !tbaa !3860
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !5994
  %42 = load i64, i64* %ob_refcnt43, align 8, !dbg !5995, !tbaa !4101
  %dec44 = add i64 %42, -1, !dbg !5995
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !5995, !tbaa !4101
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !5996
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !5997

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !5998

if.else.47:                                       ; preds = %do.body.41
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !6000, !tbaa !3860
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !6002
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !6002, !tbaa !4204
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !6003
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !6003, !tbaa !4206
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !6004, !tbaa !3860
  call void %45(%struct._object* %46), !dbg !6005
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %47 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !6006
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !6006
  br label %do.cond.51, !dbg !6007

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !6008

do.end.52:                                        ; preds = %do.cond.51
  %48 = load i32, i32* %r, align 4, !dbg !6010, !tbaa !4372
  %cmp53 = icmp slt i32 %48, 0, !dbg !6013
  br i1 %cmp53, label %if.then.54, label %if.end.55, !dbg !6014

if.then.54:                                       ; preds = %do.end.52
  br label %error, !dbg !6015

if.end.55:                                        ; preds = %do.end.52
  %49 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6017, !tbaa !3860
  %ctx56 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %49, i32 0, i32 1, !dbg !6018
  %50 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx56, align 8, !dbg !6018, !tbaa !4529
  %call57 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %50, i32 23, i64 0, i8* null), !dbg !6019
  %call58 = call %struct._object* @PyLong_FromLong(i64 %call57), !dbg !6020
  store %struct._object* %call58, %struct._object** %value, align 8, !dbg !6021, !tbaa !3860
  %51 = load %struct._object*, %struct._object** %value, align 8, !dbg !6022, !tbaa !3860
  %cmp59 = icmp eq %struct._object* %51, null, !dbg !6024
  br i1 %cmp59, label %if.then.60, label %if.end.61, !dbg !6025

if.then.60:                                       ; preds = %if.end.55
  br label %error, !dbg !6026

if.end.61:                                        ; preds = %if.end.55
  %52 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6028, !tbaa !3860
  %53 = load %struct._object*, %struct._object** %value, align 8, !dbg !6029, !tbaa !3860
  %call62 = call i32 @PyDict_SetItemString(%struct._object* %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.143, i32 0, i32 0), %struct._object* %53), !dbg !6030
  store i32 %call62, i32* %r, align 4, !dbg !6031, !tbaa !4372
  br label %do.body.63, !dbg !6032

do.body.63:                                       ; preds = %if.end.61
  %54 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !6033
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !6033
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !2611, metadata !3830), !dbg !6035
  %55 = load %struct._object*, %struct._object** %value, align 8, !dbg !6036, !tbaa !3860
  store %struct._object* %55, %struct._object** %_py_decref_tmp64, align 8, !dbg !6035, !tbaa !3860
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !6037, !tbaa !3860
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !6039
  %57 = load i64, i64* %ob_refcnt65, align 8, !dbg !6040, !tbaa !4101
  %dec66 = add i64 %57, -1, !dbg !6040
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !6040, !tbaa !4101
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !6041
  br i1 %cmp67, label %if.then.68, label %if.else.69, !dbg !6042

if.then.68:                                       ; preds = %do.body.63
  br label %if.end.72, !dbg !6043

if.else.69:                                       ; preds = %do.body.63
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !6045, !tbaa !3860
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !6047
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !6047, !tbaa !4204
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !6048
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !6048, !tbaa !4206
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !6049, !tbaa !3860
  call void %60(%struct._object* %61), !dbg !6050
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %62 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !6051
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !6051
  br label %do.cond.73, !dbg !6052

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !6053

do.end.74:                                        ; preds = %do.cond.73
  %63 = load i32, i32* %r, align 4, !dbg !6055, !tbaa !4372
  %cmp75 = icmp slt i32 %63, 0, !dbg !6058
  br i1 %cmp75, label %if.then.76, label %if.end.77, !dbg !6059

if.then.76:                                       ; preds = %do.end.74
  br label %error, !dbg !6060

if.end.77:                                        ; preds = %do.end.74
  %64 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6062, !tbaa !3860
  %ctx78 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %64, i32 0, i32 1, !dbg !6063
  %65 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx78, align 8, !dbg !6063, !tbaa !4529
  %call79 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %65, i32 24, i64 0, i8* null), !dbg !6064
  %call80 = call %struct._object* @PyLong_FromLong(i64 %call79), !dbg !6065
  store %struct._object* %call80, %struct._object** %value, align 8, !dbg !6066, !tbaa !3860
  %66 = load %struct._object*, %struct._object** %value, align 8, !dbg !6067, !tbaa !3860
  %cmp81 = icmp eq %struct._object* %66, null, !dbg !6069
  br i1 %cmp81, label %if.then.82, label %if.end.83, !dbg !6070

if.then.82:                                       ; preds = %if.end.77
  br label %error, !dbg !6071

if.end.83:                                        ; preds = %if.end.77
  %67 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6073, !tbaa !3860
  %68 = load %struct._object*, %struct._object** %value, align 8, !dbg !6074, !tbaa !3860
  %call84 = call i32 @PyDict_SetItemString(%struct._object* %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0), %struct._object* %68), !dbg !6075
  store i32 %call84, i32* %r, align 4, !dbg !6076, !tbaa !4372
  br label %do.body.85, !dbg !6077

do.body.85:                                       ; preds = %if.end.83
  %69 = bitcast %struct._object** %_py_decref_tmp86 to i8*, !dbg !6078
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !6078
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp86, metadata !2613, metadata !3830), !dbg !6080
  %70 = load %struct._object*, %struct._object** %value, align 8, !dbg !6081, !tbaa !3860
  store %struct._object* %70, %struct._object** %_py_decref_tmp86, align 8, !dbg !6080, !tbaa !3860
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6082, !tbaa !3860
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !6084
  %72 = load i64, i64* %ob_refcnt87, align 8, !dbg !6085, !tbaa !4101
  %dec88 = add i64 %72, -1, !dbg !6085
  store i64 %dec88, i64* %ob_refcnt87, align 8, !dbg !6085, !tbaa !4101
  %cmp89 = icmp ne i64 %dec88, 0, !dbg !6086
  br i1 %cmp89, label %if.then.90, label %if.else.91, !dbg !6087

if.then.90:                                       ; preds = %do.body.85
  br label %if.end.94, !dbg !6088

if.else.91:                                       ; preds = %do.body.85
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6090, !tbaa !3860
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !6092
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8, !dbg !6092, !tbaa !4204
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !6093
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8, !dbg !6093, !tbaa !4206
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6094, !tbaa !3860
  call void %75(%struct._object* %76), !dbg !6095
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  %77 = bitcast %struct._object** %_py_decref_tmp86 to i8*, !dbg !6096
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !6096
  br label %do.cond.95, !dbg !6097

do.cond.95:                                       ; preds = %if.end.94
  br label %do.end.96, !dbg !6098

do.end.96:                                        ; preds = %do.cond.95
  %78 = load i32, i32* %r, align 4, !dbg !6100, !tbaa !4372
  %cmp97 = icmp slt i32 %78, 0, !dbg !6103
  br i1 %cmp97, label %if.then.98, label %if.end.99, !dbg !6104

if.then.98:                                       ; preds = %do.end.96
  br label %error, !dbg !6105

if.end.99:                                        ; preds = %do.end.96
  %79 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6107, !tbaa !3860
  %ctx100 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %79, i32 0, i32 1, !dbg !6108
  %80 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx100, align 8, !dbg !6108, !tbaa !4529
  %call101 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %80, i32 25, i64 0, i8* null), !dbg !6109
  %call102 = call %struct._object* @PyLong_FromLong(i64 %call101), !dbg !6110
  store %struct._object* %call102, %struct._object** %value, align 8, !dbg !6111, !tbaa !3860
  %81 = load %struct._object*, %struct._object** %value, align 8, !dbg !6112, !tbaa !3860
  %cmp103 = icmp eq %struct._object* %81, null, !dbg !6114
  br i1 %cmp103, label %if.then.104, label %if.end.105, !dbg !6115

if.then.104:                                      ; preds = %if.end.99
  br label %error, !dbg !6116

if.end.105:                                       ; preds = %if.end.99
  %82 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6118, !tbaa !3860
  %83 = load %struct._object*, %struct._object** %value, align 8, !dbg !6119, !tbaa !3860
  %call106 = call i32 @PyDict_SetItemString(%struct._object* %82, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.145, i32 0, i32 0), %struct._object* %83), !dbg !6120
  store i32 %call106, i32* %r, align 4, !dbg !6121, !tbaa !4372
  br label %do.body.107, !dbg !6122

do.body.107:                                      ; preds = %if.end.105
  %84 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !6123
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !6123
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp108, metadata !2615, metadata !3830), !dbg !6125
  %85 = load %struct._object*, %struct._object** %value, align 8, !dbg !6126, !tbaa !3860
  store %struct._object* %85, %struct._object** %_py_decref_tmp108, align 8, !dbg !6125, !tbaa !3860
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !6127, !tbaa !3860
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !6129
  %87 = load i64, i64* %ob_refcnt109, align 8, !dbg !6130, !tbaa !4101
  %dec110 = add i64 %87, -1, !dbg !6130
  store i64 %dec110, i64* %ob_refcnt109, align 8, !dbg !6130, !tbaa !4101
  %cmp111 = icmp ne i64 %dec110, 0, !dbg !6131
  br i1 %cmp111, label %if.then.112, label %if.else.113, !dbg !6132

if.then.112:                                      ; preds = %do.body.107
  br label %if.end.116, !dbg !6133

if.else.113:                                      ; preds = %do.body.107
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !6135, !tbaa !3860
  %ob_type114 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !6137
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type114, align 8, !dbg !6137, !tbaa !4204
  %tp_dealloc115 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !6138
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc115, align 8, !dbg !6138, !tbaa !4206
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !6139, !tbaa !3860
  call void %90(%struct._object* %91), !dbg !6140
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.113, %if.then.112
  %92 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !6141
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !6141
  br label %do.cond.117, !dbg !6142

do.cond.117:                                      ; preds = %if.end.116
  br label %do.end.118, !dbg !6143

do.end.118:                                       ; preds = %do.cond.117
  %93 = load i32, i32* %r, align 4, !dbg !6145, !tbaa !4372
  %cmp119 = icmp slt i32 %93, 0, !dbg !6148
  br i1 %cmp119, label %if.then.120, label %if.end.121, !dbg !6149

if.then.120:                                      ; preds = %do.end.118
  br label %error, !dbg !6150

if.end.121:                                       ; preds = %do.end.118
  %94 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6152, !tbaa !3860
  %ctx122 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %94, i32 0, i32 1, !dbg !6153
  %95 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx122, align 8, !dbg !6153, !tbaa !4529
  %call123 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %95, i32 26, i64 0, i8* null), !dbg !6154
  %call124 = call %struct._object* @PyLong_FromLong(i64 %call123), !dbg !6155
  store %struct._object* %call124, %struct._object** %value, align 8, !dbg !6156, !tbaa !3860
  %96 = load %struct._object*, %struct._object** %value, align 8, !dbg !6157, !tbaa !3860
  %cmp125 = icmp eq %struct._object* %96, null, !dbg !6159
  br i1 %cmp125, label %if.then.126, label %if.end.127, !dbg !6160

if.then.126:                                      ; preds = %if.end.121
  br label %error, !dbg !6161

if.end.127:                                       ; preds = %if.end.121
  %97 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6163, !tbaa !3860
  %98 = load %struct._object*, %struct._object** %value, align 8, !dbg !6164, !tbaa !3860
  %call128 = call i32 @PyDict_SetItemString(%struct._object* %97, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.146, i32 0, i32 0), %struct._object* %98), !dbg !6165
  store i32 %call128, i32* %r, align 4, !dbg !6166, !tbaa !4372
  br label %do.body.129, !dbg !6167

do.body.129:                                      ; preds = %if.end.127
  %99 = bitcast %struct._object** %_py_decref_tmp130 to i8*, !dbg !6168
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !6168
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp130, metadata !2617, metadata !3830), !dbg !6170
  %100 = load %struct._object*, %struct._object** %value, align 8, !dbg !6171, !tbaa !3860
  store %struct._object* %100, %struct._object** %_py_decref_tmp130, align 8, !dbg !6170, !tbaa !3860
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8, !dbg !6172, !tbaa !3860
  %ob_refcnt131 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !6174
  %102 = load i64, i64* %ob_refcnt131, align 8, !dbg !6175, !tbaa !4101
  %dec132 = add i64 %102, -1, !dbg !6175
  store i64 %dec132, i64* %ob_refcnt131, align 8, !dbg !6175, !tbaa !4101
  %cmp133 = icmp ne i64 %dec132, 0, !dbg !6176
  br i1 %cmp133, label %if.then.134, label %if.else.135, !dbg !6177

if.then.134:                                      ; preds = %do.body.129
  br label %if.end.138, !dbg !6178

if.else.135:                                      ; preds = %do.body.129
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8, !dbg !6180, !tbaa !3860
  %ob_type136 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !6182
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type136, align 8, !dbg !6182, !tbaa !4204
  %tp_dealloc137 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %104, i32 0, i32 4, !dbg !6183
  %105 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc137, align 8, !dbg !6183, !tbaa !4206
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8, !dbg !6184, !tbaa !3860
  call void %105(%struct._object* %106), !dbg !6185
  br label %if.end.138

if.end.138:                                       ; preds = %if.else.135, %if.then.134
  %107 = bitcast %struct._object** %_py_decref_tmp130 to i8*, !dbg !6186
  call void @llvm.lifetime.end(i64 8, i8* %107) #1, !dbg !6186
  br label %do.cond.139, !dbg !6187

do.cond.139:                                      ; preds = %if.end.138
  br label %do.end.140, !dbg !6188

do.end.140:                                       ; preds = %do.cond.139
  %108 = load i32, i32* %r, align 4, !dbg !6190, !tbaa !4372
  %cmp141 = icmp slt i32 %108, 0, !dbg !6193
  br i1 %cmp141, label %if.then.142, label %if.end.143, !dbg !6194

if.then.142:                                      ; preds = %do.end.140
  br label %error, !dbg !6195

if.end.143:                                       ; preds = %do.end.140
  %109 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6197, !tbaa !3860
  %ctx144 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %109, i32 0, i32 1, !dbg !6198
  %110 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx144, align 8, !dbg !6198, !tbaa !4529
  %call145 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %110, i32 24, i64 0, i8* null), !dbg !6199
  %call146 = call %struct._object* @PyLong_FromLong(i64 %call145), !dbg !6200
  store %struct._object* %call146, %struct._object** %value, align 8, !dbg !6201, !tbaa !3860
  %111 = load %struct._object*, %struct._object** %value, align 8, !dbg !6202, !tbaa !3860
  %cmp147 = icmp eq %struct._object* %111, null, !dbg !6204
  br i1 %cmp147, label %if.then.148, label %if.end.149, !dbg !6205

if.then.148:                                      ; preds = %if.end.143
  br label %error, !dbg !6206

if.end.149:                                       ; preds = %if.end.143
  %112 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6208, !tbaa !3860
  %113 = load %struct._object*, %struct._object** %value, align 8, !dbg !6209, !tbaa !3860
  %call150 = call i32 @PyDict_SetItemString(%struct._object* %112, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0), %struct._object* %113), !dbg !6210
  store i32 %call150, i32* %r, align 4, !dbg !6211, !tbaa !4372
  br label %do.body.151, !dbg !6212

do.body.151:                                      ; preds = %if.end.149
  %114 = bitcast %struct._object** %_py_decref_tmp152 to i8*, !dbg !6213
  call void @llvm.lifetime.start(i64 8, i8* %114) #1, !dbg !6213
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp152, metadata !2619, metadata !3830), !dbg !6215
  %115 = load %struct._object*, %struct._object** %value, align 8, !dbg !6216, !tbaa !3860
  store %struct._object* %115, %struct._object** %_py_decref_tmp152, align 8, !dbg !6215, !tbaa !3860
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp152, align 8, !dbg !6217, !tbaa !3860
  %ob_refcnt153 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !6219
  %117 = load i64, i64* %ob_refcnt153, align 8, !dbg !6220, !tbaa !4101
  %dec154 = add i64 %117, -1, !dbg !6220
  store i64 %dec154, i64* %ob_refcnt153, align 8, !dbg !6220, !tbaa !4101
  %cmp155 = icmp ne i64 %dec154, 0, !dbg !6221
  br i1 %cmp155, label %if.then.156, label %if.else.157, !dbg !6222

if.then.156:                                      ; preds = %do.body.151
  br label %if.end.160, !dbg !6223

if.else.157:                                      ; preds = %do.body.151
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp152, align 8, !dbg !6225, !tbaa !3860
  %ob_type158 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !6227
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type158, align 8, !dbg !6227, !tbaa !4204
  %tp_dealloc159 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !6228
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc159, align 8, !dbg !6228, !tbaa !4206
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp152, align 8, !dbg !6229, !tbaa !3860
  call void %120(%struct._object* %121), !dbg !6230
  br label %if.end.160

if.end.160:                                       ; preds = %if.else.157, %if.then.156
  %122 = bitcast %struct._object** %_py_decref_tmp152 to i8*, !dbg !6231
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !6231
  br label %do.cond.161, !dbg !6232

do.cond.161:                                      ; preds = %if.end.160
  br label %do.end.162, !dbg !6233

do.end.162:                                       ; preds = %do.cond.161
  %123 = load i32, i32* %r, align 4, !dbg !6235, !tbaa !4372
  %cmp163 = icmp slt i32 %123, 0, !dbg !6238
  br i1 %cmp163, label %if.then.164, label %if.end.165, !dbg !6239

if.then.164:                                      ; preds = %do.end.162
  br label %error, !dbg !6240

if.end.165:                                       ; preds = %do.end.162
  %124 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6242, !tbaa !3860
  %ctx166 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %124, i32 0, i32 1, !dbg !6243
  %125 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx166, align 8, !dbg !6243, !tbaa !4529
  %call167 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %125, i32 27, i64 0, i8* null), !dbg !6244
  %call168 = call %struct._object* @PyLong_FromLong(i64 %call167), !dbg !6245
  store %struct._object* %call168, %struct._object** %value, align 8, !dbg !6246, !tbaa !3860
  %126 = load %struct._object*, %struct._object** %value, align 8, !dbg !6247, !tbaa !3860
  %cmp169 = icmp eq %struct._object* %126, null, !dbg !6249
  br i1 %cmp169, label %if.then.170, label %if.end.171, !dbg !6250

if.then.170:                                      ; preds = %if.end.165
  br label %error, !dbg !6251

if.end.171:                                       ; preds = %if.end.165
  %127 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6253, !tbaa !3860
  %128 = load %struct._object*, %struct._object** %value, align 8, !dbg !6254, !tbaa !3860
  %call172 = call i32 @PyDict_SetItemString(%struct._object* %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), %struct._object* %128), !dbg !6255
  store i32 %call172, i32* %r, align 4, !dbg !6256, !tbaa !4372
  br label %do.body.173, !dbg !6257

do.body.173:                                      ; preds = %if.end.171
  %129 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !6258
  call void @llvm.lifetime.start(i64 8, i8* %129) #1, !dbg !6258
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp174, metadata !2621, metadata !3830), !dbg !6260
  %130 = load %struct._object*, %struct._object** %value, align 8, !dbg !6261, !tbaa !3860
  store %struct._object* %130, %struct._object** %_py_decref_tmp174, align 8, !dbg !6260, !tbaa !3860
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6262, !tbaa !3860
  %ob_refcnt175 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 0, !dbg !6264
  %132 = load i64, i64* %ob_refcnt175, align 8, !dbg !6265, !tbaa !4101
  %dec176 = add i64 %132, -1, !dbg !6265
  store i64 %dec176, i64* %ob_refcnt175, align 8, !dbg !6265, !tbaa !4101
  %cmp177 = icmp ne i64 %dec176, 0, !dbg !6266
  br i1 %cmp177, label %if.then.178, label %if.else.179, !dbg !6267

if.then.178:                                      ; preds = %do.body.173
  br label %if.end.182, !dbg !6268

if.else.179:                                      ; preds = %do.body.173
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6270, !tbaa !3860
  %ob_type180 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 1, !dbg !6272
  %134 = load %struct._typeobject*, %struct._typeobject** %ob_type180, align 8, !dbg !6272, !tbaa !4204
  %tp_dealloc181 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %134, i32 0, i32 4, !dbg !6273
  %135 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc181, align 8, !dbg !6273, !tbaa !4206
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6274, !tbaa !3860
  call void %135(%struct._object* %136), !dbg !6275
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.179, %if.then.178
  %137 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !6276
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !6276
  br label %do.cond.183, !dbg !6277

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !6278

do.end.184:                                       ; preds = %do.cond.183
  %138 = load i32, i32* %r, align 4, !dbg !6280, !tbaa !4372
  %cmp185 = icmp slt i32 %138, 0, !dbg !6283
  br i1 %cmp185, label %if.then.186, label %if.end.187, !dbg !6284

if.then.186:                                      ; preds = %do.end.184
  br label %error, !dbg !6285

if.end.187:                                       ; preds = %do.end.184
  %139 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6287, !tbaa !3860
  %ctx188 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %139, i32 0, i32 1, !dbg !6288
  %140 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx188, align 8, !dbg !6288, !tbaa !4529
  %call189 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %140, i32 29, i64 0, i8* null), !dbg !6289
  %call190 = call %struct._object* @PyLong_FromLong(i64 %call189), !dbg !6290
  store %struct._object* %call190, %struct._object** %value, align 8, !dbg !6291, !tbaa !3860
  %141 = load %struct._object*, %struct._object** %value, align 8, !dbg !6292, !tbaa !3860
  %cmp191 = icmp eq %struct._object* %141, null, !dbg !6294
  br i1 %cmp191, label %if.then.192, label %if.end.193, !dbg !6295

if.then.192:                                      ; preds = %if.end.187
  br label %error, !dbg !6296

if.end.193:                                       ; preds = %if.end.187
  %142 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6298, !tbaa !3860
  %143 = load %struct._object*, %struct._object** %value, align 8, !dbg !6299, !tbaa !3860
  %call194 = call i32 @PyDict_SetItemString(%struct._object* %142, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i32 0, i32 0), %struct._object* %143), !dbg !6300
  store i32 %call194, i32* %r, align 4, !dbg !6301, !tbaa !4372
  br label %do.body.195, !dbg !6302

do.body.195:                                      ; preds = %if.end.193
  %144 = bitcast %struct._object** %_py_decref_tmp196 to i8*, !dbg !6303
  call void @llvm.lifetime.start(i64 8, i8* %144) #1, !dbg !6303
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp196, metadata !2623, metadata !3830), !dbg !6305
  %145 = load %struct._object*, %struct._object** %value, align 8, !dbg !6306, !tbaa !3860
  store %struct._object* %145, %struct._object** %_py_decref_tmp196, align 8, !dbg !6305, !tbaa !3860
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp196, align 8, !dbg !6307, !tbaa !3860
  %ob_refcnt197 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 0, !dbg !6309
  %147 = load i64, i64* %ob_refcnt197, align 8, !dbg !6310, !tbaa !4101
  %dec198 = add i64 %147, -1, !dbg !6310
  store i64 %dec198, i64* %ob_refcnt197, align 8, !dbg !6310, !tbaa !4101
  %cmp199 = icmp ne i64 %dec198, 0, !dbg !6311
  br i1 %cmp199, label %if.then.200, label %if.else.201, !dbg !6312

if.then.200:                                      ; preds = %do.body.195
  br label %if.end.204, !dbg !6313

if.else.201:                                      ; preds = %do.body.195
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp196, align 8, !dbg !6315, !tbaa !3860
  %ob_type202 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 1, !dbg !6317
  %149 = load %struct._typeobject*, %struct._typeobject** %ob_type202, align 8, !dbg !6317, !tbaa !4204
  %tp_dealloc203 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %149, i32 0, i32 4, !dbg !6318
  %150 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc203, align 8, !dbg !6318, !tbaa !4206
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp196, align 8, !dbg !6319, !tbaa !3860
  call void %150(%struct._object* %151), !dbg !6320
  br label %if.end.204

if.end.204:                                       ; preds = %if.else.201, %if.then.200
  %152 = bitcast %struct._object** %_py_decref_tmp196 to i8*, !dbg !6321
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !6321
  br label %do.cond.205, !dbg !6322

do.cond.205:                                      ; preds = %if.end.204
  br label %do.end.206, !dbg !6323

do.end.206:                                       ; preds = %do.cond.205
  %153 = load i32, i32* %r, align 4, !dbg !6325, !tbaa !4372
  %cmp207 = icmp slt i32 %153, 0, !dbg !6328
  br i1 %cmp207, label %if.then.208, label %if.end.209, !dbg !6329

if.then.208:                                      ; preds = %do.end.206
  br label %error, !dbg !6330

if.end.209:                                       ; preds = %do.end.206
  %154 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6332, !tbaa !3860
  %ctx210 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %154, i32 0, i32 1, !dbg !6333
  %155 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx210, align 8, !dbg !6333, !tbaa !4529
  %call211 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %155, i32 30, i64 0, i8* null), !dbg !6334
  %call212 = call %struct._object* @PyLong_FromLong(i64 %call211), !dbg !6335
  store %struct._object* %call212, %struct._object** %value, align 8, !dbg !6336, !tbaa !3860
  %156 = load %struct._object*, %struct._object** %value, align 8, !dbg !6337, !tbaa !3860
  %cmp213 = icmp eq %struct._object* %156, null, !dbg !6339
  br i1 %cmp213, label %if.then.214, label %if.end.215, !dbg !6340

if.then.214:                                      ; preds = %if.end.209
  br label %error, !dbg !6341

if.end.215:                                       ; preds = %if.end.209
  %157 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6343, !tbaa !3860
  %158 = load %struct._object*, %struct._object** %value, align 8, !dbg !6344, !tbaa !3860
  %call216 = call i32 @PyDict_SetItemString(%struct._object* %157, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i32 0, i32 0), %struct._object* %158), !dbg !6345
  store i32 %call216, i32* %r, align 4, !dbg !6346, !tbaa !4372
  br label %do.body.217, !dbg !6347

do.body.217:                                      ; preds = %if.end.215
  %159 = bitcast %struct._object** %_py_decref_tmp218 to i8*, !dbg !6348
  call void @llvm.lifetime.start(i64 8, i8* %159) #1, !dbg !6348
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp218, metadata !2625, metadata !3830), !dbg !6350
  %160 = load %struct._object*, %struct._object** %value, align 8, !dbg !6351, !tbaa !3860
  store %struct._object* %160, %struct._object** %_py_decref_tmp218, align 8, !dbg !6350, !tbaa !3860
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8, !dbg !6352, !tbaa !3860
  %ob_refcnt219 = getelementptr inbounds %struct._object, %struct._object* %161, i32 0, i32 0, !dbg !6354
  %162 = load i64, i64* %ob_refcnt219, align 8, !dbg !6355, !tbaa !4101
  %dec220 = add i64 %162, -1, !dbg !6355
  store i64 %dec220, i64* %ob_refcnt219, align 8, !dbg !6355, !tbaa !4101
  %cmp221 = icmp ne i64 %dec220, 0, !dbg !6356
  br i1 %cmp221, label %if.then.222, label %if.else.223, !dbg !6357

if.then.222:                                      ; preds = %do.body.217
  br label %if.end.226, !dbg !6358

if.else.223:                                      ; preds = %do.body.217
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8, !dbg !6360, !tbaa !3860
  %ob_type224 = getelementptr inbounds %struct._object, %struct._object* %163, i32 0, i32 1, !dbg !6362
  %164 = load %struct._typeobject*, %struct._typeobject** %ob_type224, align 8, !dbg !6362, !tbaa !4204
  %tp_dealloc225 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %164, i32 0, i32 4, !dbg !6363
  %165 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc225, align 8, !dbg !6363, !tbaa !4206
  %166 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8, !dbg !6364, !tbaa !3860
  call void %165(%struct._object* %166), !dbg !6365
  br label %if.end.226

if.end.226:                                       ; preds = %if.else.223, %if.then.222
  %167 = bitcast %struct._object** %_py_decref_tmp218 to i8*, !dbg !6366
  call void @llvm.lifetime.end(i64 8, i8* %167) #1, !dbg !6366
  br label %do.cond.227, !dbg !6367

do.cond.227:                                      ; preds = %if.end.226
  br label %do.end.228, !dbg !6368

do.end.228:                                       ; preds = %do.cond.227
  %168 = load i32, i32* %r, align 4, !dbg !6370, !tbaa !4372
  %cmp229 = icmp slt i32 %168, 0, !dbg !6373
  br i1 %cmp229, label %if.then.230, label %if.end.231, !dbg !6374

if.then.230:                                      ; preds = %do.end.228
  br label %error, !dbg !6375

if.end.231:                                       ; preds = %do.end.228
  %169 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6377, !tbaa !3860
  %ctx232 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %169, i32 0, i32 1, !dbg !6378
  %170 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx232, align 8, !dbg !6378, !tbaa !4529
  %call233 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %170, i32 31, i64 0, i8* null), !dbg !6379
  %call234 = call %struct._object* @PyLong_FromLong(i64 %call233), !dbg !6380
  store %struct._object* %call234, %struct._object** %value, align 8, !dbg !6381, !tbaa !3860
  %171 = load %struct._object*, %struct._object** %value, align 8, !dbg !6382, !tbaa !3860
  %cmp235 = icmp eq %struct._object* %171, null, !dbg !6384
  br i1 %cmp235, label %if.then.236, label %if.end.237, !dbg !6385

if.then.236:                                      ; preds = %if.end.231
  br label %error, !dbg !6386

if.end.237:                                       ; preds = %if.end.231
  %172 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6388, !tbaa !3860
  %173 = load %struct._object*, %struct._object** %value, align 8, !dbg !6389, !tbaa !3860
  %call238 = call i32 @PyDict_SetItemString(%struct._object* %172, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i32 0, i32 0), %struct._object* %173), !dbg !6390
  store i32 %call238, i32* %r, align 4, !dbg !6391, !tbaa !4372
  br label %do.body.239, !dbg !6392

do.body.239:                                      ; preds = %if.end.237
  %174 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !6393
  call void @llvm.lifetime.start(i64 8, i8* %174) #1, !dbg !6393
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp240, metadata !2627, metadata !3830), !dbg !6395
  %175 = load %struct._object*, %struct._object** %value, align 8, !dbg !6396, !tbaa !3860
  store %struct._object* %175, %struct._object** %_py_decref_tmp240, align 8, !dbg !6395, !tbaa !3860
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !6397, !tbaa !3860
  %ob_refcnt241 = getelementptr inbounds %struct._object, %struct._object* %176, i32 0, i32 0, !dbg !6399
  %177 = load i64, i64* %ob_refcnt241, align 8, !dbg !6400, !tbaa !4101
  %dec242 = add i64 %177, -1, !dbg !6400
  store i64 %dec242, i64* %ob_refcnt241, align 8, !dbg !6400, !tbaa !4101
  %cmp243 = icmp ne i64 %dec242, 0, !dbg !6401
  br i1 %cmp243, label %if.then.244, label %if.else.245, !dbg !6402

if.then.244:                                      ; preds = %do.body.239
  br label %if.end.248, !dbg !6403

if.else.245:                                      ; preds = %do.body.239
  %178 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !6405, !tbaa !3860
  %ob_type246 = getelementptr inbounds %struct._object, %struct._object* %178, i32 0, i32 1, !dbg !6407
  %179 = load %struct._typeobject*, %struct._typeobject** %ob_type246, align 8, !dbg !6407, !tbaa !4204
  %tp_dealloc247 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %179, i32 0, i32 4, !dbg !6408
  %180 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc247, align 8, !dbg !6408, !tbaa !4206
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !6409, !tbaa !3860
  call void %180(%struct._object* %181), !dbg !6410
  br label %if.end.248

if.end.248:                                       ; preds = %if.else.245, %if.then.244
  %182 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !6411
  call void @llvm.lifetime.end(i64 8, i8* %182) #1, !dbg !6411
  br label %do.cond.249, !dbg !6412

do.cond.249:                                      ; preds = %if.end.248
  br label %do.end.250, !dbg !6413

do.end.250:                                       ; preds = %do.cond.249
  %183 = load i32, i32* %r, align 4, !dbg !6415, !tbaa !4372
  %cmp251 = icmp slt i32 %183, 0, !dbg !6418
  br i1 %cmp251, label %if.then.252, label %if.end.253, !dbg !6419

if.then.252:                                      ; preds = %do.end.250
  br label %error, !dbg !6420

if.end.253:                                       ; preds = %do.end.250
  %184 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6422, !tbaa !3860
  store %struct._object* %184, %struct._object** %retval, !dbg !6423
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6423

error:                                            ; preds = %if.then.252, %if.then.236, %if.then.230, %if.then.214, %if.then.208, %if.then.192, %if.then.186, %if.then.170, %if.then.164, %if.then.148, %if.then.142, %if.then.126, %if.then.120, %if.then.104, %if.then.98, %if.then.82, %if.then.76, %if.then.60, %if.then.54, %if.then.38, %if.then.32, %if.then.16, %if.then.10, %if.then.3
  br label %do.body.254, !dbg !6424

do.body.254:                                      ; preds = %error
  %185 = bitcast %struct._object** %_py_decref_tmp255 to i8*, !dbg !6425
  call void @llvm.lifetime.start(i64 8, i8* %185) #1, !dbg !6425
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp255, metadata !2629, metadata !3830), !dbg !6427
  %186 = load %struct._object*, %struct._object** %stats, align 8, !dbg !6428, !tbaa !3860
  store %struct._object* %186, %struct._object** %_py_decref_tmp255, align 8, !dbg !6427, !tbaa !3860
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp255, align 8, !dbg !6429, !tbaa !3860
  %ob_refcnt256 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 0, !dbg !6431
  %188 = load i64, i64* %ob_refcnt256, align 8, !dbg !6432, !tbaa !4101
  %dec257 = add i64 %188, -1, !dbg !6432
  store i64 %dec257, i64* %ob_refcnt256, align 8, !dbg !6432, !tbaa !4101
  %cmp258 = icmp ne i64 %dec257, 0, !dbg !6433
  br i1 %cmp258, label %if.then.259, label %if.else.260, !dbg !6434

if.then.259:                                      ; preds = %do.body.254
  br label %if.end.263, !dbg !6435

if.else.260:                                      ; preds = %do.body.254
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp255, align 8, !dbg !6437, !tbaa !3860
  %ob_type261 = getelementptr inbounds %struct._object, %struct._object* %189, i32 0, i32 1, !dbg !6439
  %190 = load %struct._typeobject*, %struct._typeobject** %ob_type261, align 8, !dbg !6439, !tbaa !4204
  %tp_dealloc262 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %190, i32 0, i32 4, !dbg !6440
  %191 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc262, align 8, !dbg !6440, !tbaa !4206
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp255, align 8, !dbg !6441, !tbaa !3860
  call void %191(%struct._object* %192), !dbg !6442
  br label %if.end.263

if.end.263:                                       ; preds = %if.else.260, %if.then.259
  %193 = bitcast %struct._object** %_py_decref_tmp255 to i8*, !dbg !6443
  call void @llvm.lifetime.end(i64 8, i8* %193) #1, !dbg !6443
  br label %do.cond.264, !dbg !6445

do.cond.264:                                      ; preds = %if.end.263
  br label %do.end.265, !dbg !6446

do.end.265:                                       ; preds = %do.cond.264
  store %struct._object* null, %struct._object** %retval, !dbg !6448
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6448

cleanup:                                          ; preds = %do.end.265, %if.end.253, %if.then
  %194 = bitcast %struct._object** %stats to i8*, !dbg !6449
  call void @llvm.lifetime.end(i64 8, i8* %194) #1, !dbg !6449
  %195 = bitcast %struct._object** %value to i8*, !dbg !6449
  call void @llvm.lifetime.end(i64 8, i8* %195) #1, !dbg !6449
  %196 = bitcast i32* %r to i8*, !dbg !6449
  call void @llvm.lifetime.end(i64 4, i8* %196) #1, !dbg !6449
  %197 = load %struct._object*, %struct._object** %retval, !dbg !6449
  ret %struct._object* %197, !dbg !6449
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @set_default_verify_paths(%struct.PySSLContext* %self, %struct._object* %unused) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2633, metadata !3830), !dbg !6450
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !2634, metadata !3830), !dbg !6451
  %0 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6452, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %0, i32 0, i32 1, !dbg !6454
  %1 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6454, !tbaa !4529
  %call = call i32 @SSL_CTX_set_default_verify_paths(%struct.ssl_ctx_st* %1), !dbg !6455
  %tobool = icmp ne i32 %call, 0, !dbg !6455
  br i1 %tobool, label %if.end, label %if.then, !dbg !6456

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2865), !dbg !6457
  store %struct._object* null, %struct._object** %retval, !dbg !6459
  br label %return, !dbg !6459

if.end:                                           ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6460, !tbaa !4101
  %inc = add i64 %2, 1, !dbg !6460
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6460, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6461
  br label %return, !dbg !6461

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct._object*, %struct._object** %retval, !dbg !6462
  ret %struct._object* %3, !dbg !6462
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @set_ecdh_curve(%struct.PySSLContext* %self, %struct._object* %name) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %name.addr = alloca %struct._object*, align 8
  %name_bytes = alloca %struct._object*, align 8
  %nid = alloca i32, align 4
  %key = alloca %struct.ec_key_st*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2637, metadata !3830), !dbg !6463
  store %struct._object* %name, %struct._object** %name.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %name.addr, metadata !2638, metadata !3830), !dbg !6464
  %0 = bitcast %struct._object** %name_bytes to i8*, !dbg !6465
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6465
  call void @llvm.dbg.declare(metadata %struct._object** %name_bytes, metadata !2639, metadata !3830), !dbg !6466
  %1 = bitcast i32* %nid to i8*, !dbg !6467
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !6467
  call void @llvm.dbg.declare(metadata i32* %nid, metadata !2640, metadata !3830), !dbg !6468
  %2 = bitcast %struct.ec_key_st** %key to i8*, !dbg !6469
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.ec_key_st** %key, metadata !2641, metadata !3830), !dbg !6470
  %3 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !6471, !tbaa !3860
  %4 = bitcast %struct._object** %name_bytes to i8*, !dbg !6473
  %call = call i32 @PyUnicode_FSConverter(%struct._object* %3, i8* %4), !dbg !6474
  %tobool = icmp ne i32 %call, 0, !dbg !6474
  br i1 %tobool, label %if.end, label %if.then, !dbg !6475

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6476

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %name_bytes, align 8, !dbg !6477, !tbaa !3860
  %6 = bitcast %struct._object* %5 to %struct.PyBytesObject*, !dbg !6478
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %6, i32 0, i32 2, !dbg !6479
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !6480
  %call1 = call i32 @OBJ_sn2nid(i8* %arraydecay), !dbg !6481
  store i32 %call1, i32* %nid, align 4, !dbg !6482, !tbaa !4372
  br label %do.body, !dbg !6483

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6484
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6484
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2642, metadata !3830), !dbg !6486
  %8 = load %struct._object*, %struct._object** %name_bytes, align 8, !dbg !6487, !tbaa !3860
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !6486, !tbaa !3860
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6488, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !6490
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !6491, !tbaa !4101
  %dec = add i64 %10, -1, !dbg !6491
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6491, !tbaa !4101
  %cmp = icmp ne i64 %dec, 0, !dbg !6492
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !6493

if.then.2:                                        ; preds = %do.body
  br label %if.end.3, !dbg !6494

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6496, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6498
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6498, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !6499
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6499, !tbaa !4206
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6500, !tbaa !3860
  call void %13(%struct._object* %14), !dbg !6501
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6502
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !6502
  br label %do.cond, !dbg !6504

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !6505

do.end:                                           ; preds = %do.cond
  %16 = load i32, i32* %nid, align 4, !dbg !6507, !tbaa !4372
  %cmp4 = icmp eq i32 %16, 0, !dbg !6509
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !6510

if.then.5:                                        ; preds = %do.end
  %17 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6511, !tbaa !3860
  %18 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !6513, !tbaa !3860
  %call6 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.151, i32 0, i32 0), %struct._object* %18), !dbg !6514
  store %struct._object* null, %struct._object** %retval, !dbg !6515
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6515

if.end.7:                                         ; preds = %do.end
  %19 = load i32, i32* %nid, align 4, !dbg !6516, !tbaa !4372
  %call8 = call %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 %19), !dbg !6517
  store %struct.ec_key_st* %call8, %struct.ec_key_st** %key, align 8, !dbg !6518, !tbaa !3860
  %20 = load %struct.ec_key_st*, %struct.ec_key_st** %key, align 8, !dbg !6519, !tbaa !3860
  %cmp9 = icmp eq %struct.ec_key_st* %20, null, !dbg !6521
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !6522

if.then.10:                                       ; preds = %if.end.7
  %call11 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2891), !dbg !6523
  store %struct._object* null, %struct._object** %retval, !dbg !6525
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6525

if.end.12:                                        ; preds = %if.end.7
  %21 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6526, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %21, i32 0, i32 1, !dbg !6527
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6527, !tbaa !4529
  %23 = load %struct.ec_key_st*, %struct.ec_key_st** %key, align 8, !dbg !6528, !tbaa !3860
  %24 = bitcast %struct.ec_key_st* %23 to i8*, !dbg !6529
  %call13 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %22, i32 4, i64 0, i8* %24), !dbg !6530
  %25 = load %struct.ec_key_st*, %struct.ec_key_st** %key, align 8, !dbg !6531, !tbaa !3860
  call void @EC_KEY_free(%struct.ec_key_st* %25), !dbg !6532
  %26 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6533, !tbaa !4101
  %inc = add i64 %26, 1, !dbg !6533
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6533, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6534
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6534

cleanup:                                          ; preds = %if.end.12, %if.then.10, %if.then.5, %if.then
  %27 = bitcast %struct.ec_key_st** %key to i8*, !dbg !6535
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !6535
  %28 = bitcast i32* %nid to i8*, !dbg !6535
  call void @llvm.lifetime.end(i64 4, i8* %28) #1, !dbg !6535
  %29 = bitcast %struct._object** %name_bytes to i8*, !dbg !6535
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !6535
  %30 = load %struct._object*, %struct._object** %retval, !dbg !6535
  ret %struct._object* %30, !dbg !6535
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @set_servername_callback(%struct.PySSLContext* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %cb = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2646, metadata !3830), !dbg !6536
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2647, metadata !3830), !dbg !6537
  %0 = bitcast %struct._object** %cb to i8*, !dbg !6538
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6538
  call void @llvm.dbg.declare(metadata %struct._object** %cb, metadata !2648, metadata !3830), !dbg !6539
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6540, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i32 0, i32 0), %struct._object** %cb), !dbg !6542
  %tobool = icmp ne i32 %call, 0, !dbg !6542
  br i1 %tobool, label %if.end, label %if.then, !dbg !6543

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6544
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6544

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6545

do.body:                                          ; preds = %if.end
  %2 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6546
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6546
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2649, metadata !3830), !dbg !6548
  %3 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6549, !tbaa !3860
  %set_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %3, i32 0, i32 4, !dbg !6550
  %4 = load %struct._object*, %struct._object** %set_hostname, align 8, !dbg !6550, !tbaa !4551
  store %struct._object* %4, %struct._object** %_py_tmp, align 8, !dbg !6548, !tbaa !3860
  %5 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6551, !tbaa !3860
  %cmp = icmp ne %struct._object* %5, null, !dbg !6552
  br i1 %cmp, label %if.then.1, label %if.end.7, !dbg !6553

if.then.1:                                        ; preds = %do.body
  %6 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6554, !tbaa !3860
  %set_hostname2 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %6, i32 0, i32 4, !dbg !6556
  store %struct._object* null, %struct._object** %set_hostname2, align 8, !dbg !6557, !tbaa !4551
  br label %do.body.3, !dbg !6558

do.body.3:                                        ; preds = %if.then.1
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6559
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6559
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2651, metadata !3830), !dbg !6561
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6562, !tbaa !3860
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !6561, !tbaa !3860
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6563, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !6565
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !6566, !tbaa !4101
  %dec = add i64 %10, -1, !dbg !6566
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6566, !tbaa !4101
  %cmp4 = icmp ne i64 %dec, 0, !dbg !6567
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !6568

if.then.5:                                        ; preds = %do.body.3
  br label %if.end.6, !dbg !6569

if.else:                                          ; preds = %do.body.3
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6571, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6573
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6573, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !6574
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6574, !tbaa !4206
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6575, !tbaa !3860
  call void %13(%struct._object* %14), !dbg !6576
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6577
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !6577
  br label %do.cond, !dbg !6579

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !6580

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !6582

if.end.7:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6584
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !6584
  br label %do.cond.8, !dbg !6587

do.cond.8:                                        ; preds = %if.end.7
  br label %do.end.9, !dbg !6588

do.end.9:                                         ; preds = %do.cond.8
  %17 = load %struct._object*, %struct._object** %cb, align 8, !dbg !6590, !tbaa !3860
  %cmp10 = icmp eq %struct._object* %17, @_Py_NoneStruct, !dbg !6592
  br i1 %cmp10, label %if.then.11, label %if.else.13, !dbg !6593

if.then.11:                                       ; preds = %do.end.9
  %18 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6594, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %18, i32 0, i32 1, !dbg !6596
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6596, !tbaa !4529
  %call12 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %19, i32 53, void ()* null), !dbg !6597
  br label %if.end.26, !dbg !6598

if.else.13:                                       ; preds = %do.end.9
  %20 = load %struct._object*, %struct._object** %cb, align 8, !dbg !6599, !tbaa !3860
  %call14 = call i32 @PyCallable_Check(%struct._object* %20), !dbg !6602
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6602
  br i1 %tobool15, label %if.end.19, label %if.then.16, !dbg !6603

if.then.16:                                       ; preds = %if.else.13
  %21 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6604, !tbaa !3860
  %ctx17 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %21, i32 0, i32 1, !dbg !6606
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx17, align 8, !dbg !6606, !tbaa !4529
  %call18 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %22, i32 53, void ()* null), !dbg !6607
  %23 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6608, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.153, i32 0, i32 0)), !dbg !6609
  store %struct._object* null, %struct._object** %retval, !dbg !6610
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6610

if.end.19:                                        ; preds = %if.else.13
  %24 = load %struct._object*, %struct._object** %cb, align 8, !dbg !6611, !tbaa !3860
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !6612
  %25 = load i64, i64* %ob_refcnt20, align 8, !dbg !6613, !tbaa !4101
  %inc = add i64 %25, 1, !dbg !6613
  store i64 %inc, i64* %ob_refcnt20, align 8, !dbg !6613, !tbaa !4101
  %26 = load %struct._object*, %struct._object** %cb, align 8, !dbg !6614, !tbaa !3860
  %27 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6615, !tbaa !3860
  %set_hostname21 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %27, i32 0, i32 4, !dbg !6616
  store %struct._object* %26, %struct._object** %set_hostname21, align 8, !dbg !6617, !tbaa !4551
  %28 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6618, !tbaa !3860
  %ctx22 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %28, i32 0, i32 1, !dbg !6619
  %29 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx22, align 8, !dbg !6619, !tbaa !4529
  %call23 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %29, i32 53, void ()* bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @_servername_callback to void ()*)), !dbg !6620
  %30 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6621, !tbaa !3860
  %ctx24 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %30, i32 0, i32 1, !dbg !6622
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx24, align 8, !dbg !6622, !tbaa !4529
  %32 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6623, !tbaa !3860
  %33 = bitcast %struct.PySSLContext* %32 to i8*, !dbg !6624
  %call25 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %31, i32 54, i64 0, i8* %33), !dbg !6625
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.19, %if.then.11
  %34 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6626, !tbaa !4101
  %inc27 = add i64 %34, 1, !dbg !6626
  store i64 %inc27, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6626, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6627
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6627

cleanup:                                          ; preds = %if.end.26, %if.then.16, %if.then
  %35 = bitcast %struct._object** %cb to i8*, !dbg !6628
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !6628
  %36 = load %struct._object*, %struct._object** %retval, !dbg !6628
  ret %struct._object* %36, !dbg !6628
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cert_store_stats(%struct.PySSLContext* %self) #0 {
entry:
  %self.addr = alloca %struct.PySSLContext*, align 8
  %store = alloca %struct.x509_store_st*, align 8
  %obj = alloca %struct.x509_object_st*, align 8
  %x509 = alloca i32, align 4
  %crl = alloca i32, align 4
  %pkey = alloca i32, align 4
  %ca = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2692, metadata !3830), !dbg !6629
  %0 = bitcast %struct.x509_store_st** %store to i8*, !dbg !6630
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6630
  call void @llvm.dbg.declare(metadata %struct.x509_store_st** %store, metadata !2693, metadata !3830), !dbg !6631
  %1 = bitcast %struct.x509_object_st** %obj to i8*, !dbg !6632
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6632
  call void @llvm.dbg.declare(metadata %struct.x509_object_st** %obj, metadata !2694, metadata !3830), !dbg !6633
  %2 = bitcast i32* %x509 to i8*, !dbg !6634
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %x509, metadata !2695, metadata !3830), !dbg !6635
  store i32 0, i32* %x509, align 4, !dbg !6635, !tbaa !4372
  %3 = bitcast i32* %crl to i8*, !dbg !6634
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %crl, metadata !2696, metadata !3830), !dbg !6636
  store i32 0, i32* %crl, align 4, !dbg !6636, !tbaa !4372
  %4 = bitcast i32* %pkey to i8*, !dbg !6634
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %pkey, metadata !2697, metadata !3830), !dbg !6637
  store i32 0, i32* %pkey, align 4, !dbg !6637, !tbaa !4372
  %5 = bitcast i32* %ca to i8*, !dbg !6634
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %ca, metadata !2698, metadata !3830), !dbg !6638
  store i32 0, i32* %ca, align 4, !dbg !6638, !tbaa !4372
  %6 = bitcast i32* %i to i8*, !dbg !6634
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2699, metadata !3830), !dbg !6639
  %7 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6640, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %7, i32 0, i32 1, !dbg !6641
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6641, !tbaa !4529
  %call = call %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* %8), !dbg !6642
  store %struct.x509_store_st* %call, %struct.x509_store_st** %store, align 8, !dbg !6643, !tbaa !3860
  store i32 0, i32* %i, align 4, !dbg !6644, !tbaa !4372
  br label %for.cond, !dbg !6646

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !6647, !tbaa !4372
  %10 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !6651, !tbaa !3860
  %objs = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %10, i32 0, i32 1, !dbg !6652
  %11 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %objs, align 8, !dbg !6652, !tbaa !6653
  %12 = bitcast %struct.stack_st_X509_OBJECT* %11 to %struct.stack_st*, !dbg !6655
  %call1 = call i32 @sk_num(%struct.stack_st* %12), !dbg !6656
  %cmp = icmp slt i32 %9, %call1, !dbg !6657
  br i1 %cmp, label %for.body, label %for.end, !dbg !6658

for.body:                                         ; preds = %for.cond
  %13 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !6659, !tbaa !3860
  %objs2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %13, i32 0, i32 1, !dbg !6661
  %14 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %objs2, align 8, !dbg !6661, !tbaa !6653
  %15 = bitcast %struct.stack_st_X509_OBJECT* %14 to %struct.stack_st*, !dbg !6662
  %16 = load i32, i32* %i, align 4, !dbg !6663, !tbaa !4372
  %call3 = call i8* @sk_value(%struct.stack_st* %15, i32 %16), !dbg !6664
  %17 = bitcast i8* %call3 to %struct.x509_object_st*, !dbg !6665
  store %struct.x509_object_st* %17, %struct.x509_object_st** %obj, align 8, !dbg !6666, !tbaa !3860
  %18 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !6667, !tbaa !3860
  %type = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %18, i32 0, i32 0, !dbg !6668
  %19 = load i32, i32* %type, align 4, !dbg !6668, !tbaa !6669
  br label %NodeBlock.3

NodeBlock.3:                                      ; preds = %for.body
  %Pivot.4 = icmp slt i32 %19, 2
  br i1 %Pivot.4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.3
  %Pivot = icmp slt i32 %19, 3
  br i1 %Pivot, label %sw.bb.7, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %19, 3
  br i1 %SwitchLeaf2, label %sw.bb.9, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.3
  %SwitchLeaf = icmp eq i32 %19, 1
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %20 = load i32, i32* %x509, align 4, !dbg !6671, !tbaa !4372
  %inc = add i32 %20, 1, !dbg !6671
  store i32 %inc, i32* %x509, align 4, !dbg !6671, !tbaa !4372
  %21 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !6673, !tbaa !3860
  %data = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %21, i32 0, i32 1, !dbg !6675
  %x5094 = bitcast %union.anon.6* %data to %struct.x509_st**, !dbg !6676
  %22 = load %struct.x509_st*, %struct.x509_st** %x5094, align 8, !dbg !6676, !tbaa !3860
  %call5 = call i32 @X509_check_ca(%struct.x509_st* %22), !dbg !6677
  %tobool = icmp ne i32 %call5, 0, !dbg !6677
  br i1 %tobool, label %if.then, label %if.end, !dbg !6678

if.then:                                          ; preds = %sw.bb
  %23 = load i32, i32* %ca, align 4, !dbg !6679, !tbaa !4372
  %inc6 = add i32 %23, 1, !dbg !6679
  store i32 %inc6, i32* %ca, align 4, !dbg !6679, !tbaa !4372
  br label %if.end, !dbg !6681

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !6682

sw.bb.7:                                          ; preds = %NodeBlock
  %24 = load i32, i32* %crl, align 4, !dbg !6683, !tbaa !4372
  %inc8 = add i32 %24, 1, !dbg !6683
  store i32 %inc8, i32* %crl, align 4, !dbg !6683, !tbaa !4372
  br label %sw.epilog, !dbg !6684

sw.bb.9:                                          ; preds = %LeafBlock.1
  %25 = load i32, i32* %pkey, align 4, !dbg !6685, !tbaa !4372
  %inc10 = add i32 %25, 1, !dbg !6685
  store i32 %inc10, i32* %pkey, align 4, !dbg !6685, !tbaa !4372
  br label %sw.epilog, !dbg !6686

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  br label %sw.epilog, !dbg !6687

sw.epilog:                                        ; preds = %sw.default, %sw.bb.9, %sw.bb.7, %if.end
  br label %for.inc, !dbg !6688

for.inc:                                          ; preds = %sw.epilog
  %26 = load i32, i32* %i, align 4, !dbg !6689, !tbaa !4372
  %inc11 = add i32 %26, 1, !dbg !6689
  store i32 %inc11, i32* %i, align 4, !dbg !6689, !tbaa !4372
  br label %for.cond, !dbg !6690

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %x509, align 4, !dbg !6691, !tbaa !4372
  %28 = load i32, i32* %crl, align 4, !dbg !6692, !tbaa !4372
  %29 = load i32, i32* %ca, align 4, !dbg !6693, !tbaa !4372
  %call12 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i32 0, i32 0), i32 %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i32 0, i32 0), i32 %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.157, i32 0, i32 0), i32 %29), !dbg !6694
  %30 = bitcast i32* %i to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 4, i8* %30) #1, !dbg !6695
  %31 = bitcast i32* %ca to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 4, i8* %31) #1, !dbg !6695
  %32 = bitcast i32* %pkey to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 4, i8* %32) #1, !dbg !6695
  %33 = bitcast i32* %crl to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 4, i8* %33) #1, !dbg !6695
  %34 = bitcast i32* %x509 to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 4, i8* %34) #1, !dbg !6695
  %35 = bitcast %struct.x509_object_st** %obj to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !6695
  %36 = bitcast %struct.x509_store_st** %store to i8*, !dbg !6695
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !6695
  ret %struct._object* %call12, !dbg !6696
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_ca_certs(%struct.PySSLContext* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [2 x i8*], align 16
  %store = alloca %struct.x509_store_st*, align 8
  %ci = alloca %struct._object*, align 8
  %rlist = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %binary_mode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %obj = alloca %struct.x509_object_st*, align 8
  %cert = alloca %struct.x509_st*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %_py_xdecref_tmp58 = alloca %struct._object*, align 8
  %_py_decref_tmp62 = alloca %struct._object*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2702, metadata !3830), !dbg !6697
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2703, metadata !3830), !dbg !6698
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2704, metadata !3830), !dbg !6699
  %0 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !6700
  call void @llvm.lifetime.start(i64 16, i8* %0) #1, !dbg !6700
  call void @llvm.dbg.declare(metadata [2 x i8*]* %kwlist, metadata !2705, metadata !3830), !dbg !6701
  %1 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !6701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([2 x i8*]* @get_ca_certs.kwlist to i8*), i64 16, i32 16, i1 false), !dbg !6701
  %2 = bitcast %struct.x509_store_st** %store to i8*, !dbg !6702
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6702
  call void @llvm.dbg.declare(metadata %struct.x509_store_st** %store, metadata !2707, metadata !3830), !dbg !6703
  %3 = bitcast %struct._object** %ci to i8*, !dbg !6704
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6704
  call void @llvm.dbg.declare(metadata %struct._object** %ci, metadata !2708, metadata !3830), !dbg !6705
  store %struct._object* null, %struct._object** %ci, align 8, !dbg !6705, !tbaa !3860
  %4 = bitcast %struct._object** %rlist to i8*, !dbg !6704
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6704
  call void @llvm.dbg.declare(metadata %struct._object** %rlist, metadata !2709, metadata !3830), !dbg !6706
  store %struct._object* null, %struct._object** %rlist, align 8, !dbg !6706, !tbaa !3860
  %5 = bitcast i32* %i to i8*, !dbg !6707
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !6707
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2710, metadata !3830), !dbg !6708
  %6 = bitcast i32* %binary_mode to i8*, !dbg !6709
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !6709
  call void @llvm.dbg.declare(metadata i32* %binary_mode, metadata !2711, metadata !3830), !dbg !6710
  store i32 0, i32* %binary_mode, align 4, !dbg !6710, !tbaa !4372
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6711, !tbaa !3860
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6713, !tbaa !3860
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %kwlist, i32 0, i32 0, !dbg !6714
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %7, %struct._object* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.159, i32 0, i32 0), i8** %arraydecay, i32* %binary_mode), !dbg !6715
  %tobool = icmp ne i32 %call, 0, !dbg !6715
  br i1 %tobool, label %if.end, label %if.then, !dbg !6716

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !6717

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyList_New(i64 0), !dbg !6719
  store %struct._object* %call1, %struct._object** %rlist, align 8, !dbg !6721, !tbaa !3860
  %cmp = icmp eq %struct._object* %call1, null, !dbg !6722
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !6723

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6724
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !6724

if.end.3:                                         ; preds = %if.end
  %9 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !6726, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %9, i32 0, i32 1, !dbg !6727
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6727, !tbaa !4529
  %call4 = call %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* %10), !dbg !6728
  store %struct.x509_store_st* %call4, %struct.x509_store_st** %store, align 8, !dbg !6729, !tbaa !3860
  store i32 0, i32* %i, align 4, !dbg !6730, !tbaa !4372
  br label %for.cond, !dbg !6731

for.cond:                                         ; preds = %for.inc, %if.end.3
  %11 = load i32, i32* %i, align 4, !dbg !6732, !tbaa !4372
  %12 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !6735, !tbaa !3860
  %objs = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %12, i32 0, i32 1, !dbg !6736
  %13 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %objs, align 8, !dbg !6736, !tbaa !6653
  %14 = bitcast %struct.stack_st_X509_OBJECT* %13 to %struct.stack_st*, !dbg !6737
  %call5 = call i32 @sk_num(%struct.stack_st* %14), !dbg !6738
  %cmp6 = icmp slt i32 %11, %call5, !dbg !6739
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6740

for.body:                                         ; preds = %for.cond
  %15 = bitcast %struct.x509_object_st** %obj to i8*, !dbg !6741
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !6741
  call void @llvm.dbg.declare(metadata %struct.x509_object_st** %obj, metadata !2712, metadata !3830), !dbg !6742
  %16 = bitcast %struct.x509_st** %cert to i8*, !dbg !6743
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !6743
  call void @llvm.dbg.declare(metadata %struct.x509_st** %cert, metadata !2716, metadata !3830), !dbg !6744
  %17 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !6745, !tbaa !3860
  %objs7 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %17, i32 0, i32 1, !dbg !6746
  %18 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %objs7, align 8, !dbg !6746, !tbaa !6653
  %19 = bitcast %struct.stack_st_X509_OBJECT* %18 to %struct.stack_st*, !dbg !6747
  %20 = load i32, i32* %i, align 4, !dbg !6748, !tbaa !4372
  %call8 = call i8* @sk_value(%struct.stack_st* %19, i32 %20), !dbg !6749
  %21 = bitcast i8* %call8 to %struct.x509_object_st*, !dbg !6750
  store %struct.x509_object_st* %21, %struct.x509_object_st** %obj, align 8, !dbg !6751, !tbaa !3860
  %22 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !6752, !tbaa !3860
  %type = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %22, i32 0, i32 0, !dbg !6754
  %23 = load i32, i32* %type, align 4, !dbg !6754, !tbaa !6669
  %cmp9 = icmp ne i32 %23, 1, !dbg !6755
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !6756

if.then.10:                                       ; preds = %for.body
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6757

if.end.11:                                        ; preds = %for.body
  %24 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !6759, !tbaa !3860
  %data = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %24, i32 0, i32 1, !dbg !6760
  %x509 = bitcast %union.anon.6* %data to %struct.x509_st**, !dbg !6761
  %25 = load %struct.x509_st*, %struct.x509_st** %x509, align 8, !dbg !6761, !tbaa !3860
  store %struct.x509_st* %25, %struct.x509_st** %cert, align 8, !dbg !6762, !tbaa !3860
  %26 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !6763, !tbaa !3860
  %call12 = call i32 @X509_check_ca(%struct.x509_st* %26), !dbg !6765
  %tobool13 = icmp ne i32 %call12, 0, !dbg !6765
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !6766

if.then.14:                                       ; preds = %if.end.11
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6767

if.end.15:                                        ; preds = %if.end.11
  %27 = load i32, i32* %binary_mode, align 4, !dbg !6769, !tbaa !4372
  %tobool16 = icmp ne i32 %27, 0, !dbg !6769
  br i1 %tobool16, label %if.then.17, label %if.else, !dbg !6771

if.then.17:                                       ; preds = %if.end.15
  %28 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !6772, !tbaa !3860
  %call18 = call %struct._object* @_certificate_to_der(%struct.x509_st* %28), !dbg !6774
  store %struct._object* %call18, %struct._object** %ci, align 8, !dbg !6775, !tbaa !3860
  br label %if.end.20, !dbg !6776

if.else:                                          ; preds = %if.end.15
  %29 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !6777, !tbaa !3860
  %call19 = call %struct._object* @_decode_certificate(%struct.x509_st* %29), !dbg !6779
  store %struct._object* %call19, %struct._object** %ci, align 8, !dbg !6780, !tbaa !3860
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.17
  %30 = load %struct._object*, %struct._object** %ci, align 8, !dbg !6781, !tbaa !3860
  %cmp21 = icmp eq %struct._object* %30, null, !dbg !6783
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !6784

if.then.22:                                       ; preds = %if.end.20
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6785

if.end.23:                                        ; preds = %if.end.20
  %31 = load %struct._object*, %struct._object** %rlist, align 8, !dbg !6787, !tbaa !3860
  %32 = load %struct._object*, %struct._object** %ci, align 8, !dbg !6789, !tbaa !3860
  %call24 = call i32 @PyList_Append(%struct._object* %31, %struct._object* %32), !dbg !6790
  %cmp25 = icmp eq i32 %call24, -1, !dbg !6791
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !6792

if.then.26:                                       ; preds = %if.end.23
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6793

if.end.27:                                        ; preds = %if.end.23
  br label %do.body, !dbg !6795

do.body:                                          ; preds = %if.end.27
  %33 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6796
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !6796
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2717, metadata !3830), !dbg !6798
  %34 = load %struct._object*, %struct._object** %ci, align 8, !dbg !6799, !tbaa !3860
  store %struct._object* %34, %struct._object** %_py_tmp, align 8, !dbg !6798, !tbaa !3860
  %35 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6800, !tbaa !3860
  %cmp28 = icmp ne %struct._object* %35, null, !dbg !6801
  br i1 %cmp28, label %if.then.29, label %if.end.35, !dbg !6802

if.then.29:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %ci, align 8, !dbg !6803, !tbaa !3860
  br label %do.body.30, !dbg !6805

do.body.30:                                       ; preds = %if.then.29
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6806
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !6806
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2719, metadata !3830), !dbg !6808
  %37 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6809, !tbaa !3860
  store %struct._object* %37, %struct._object** %_py_decref_tmp, align 8, !dbg !6808, !tbaa !3860
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6810, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !6812
  %39 = load i64, i64* %ob_refcnt, align 8, !dbg !6813, !tbaa !4101
  %dec = add i64 %39, -1, !dbg !6813
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6813, !tbaa !4101
  %cmp31 = icmp ne i64 %dec, 0, !dbg !6814
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !6815

if.then.32:                                       ; preds = %do.body.30
  br label %if.end.34, !dbg !6816

if.else.33:                                       ; preds = %do.body.30
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6818, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !6820
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6820, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !6821
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6821, !tbaa !4206
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6822, !tbaa !3860
  call void %42(%struct._object* %43), !dbg !6823
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.33, %if.then.32
  %44 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6824
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !6824
  br label %do.cond, !dbg !6826

do.cond:                                          ; preds = %if.end.34
  br label %do.end, !dbg !6827

do.end:                                           ; preds = %do.cond
  br label %if.end.35, !dbg !6829

if.end.35:                                        ; preds = %do.end, %do.body
  %45 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6831
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !6831
  br label %do.cond.36, !dbg !6834

do.cond.36:                                       ; preds = %if.end.35
  br label %do.end.37, !dbg !6835

do.end.37:                                        ; preds = %do.cond.36
  store i32 0, i32* %cleanup.dest.slot, !dbg !6837
  br label %cleanup, !dbg !6837

cleanup:                                          ; preds = %do.end.37, %if.then.26, %if.then.22, %if.then.14, %if.then.10
  %46 = bitcast %struct.x509_st** %cert to i8*, !dbg !6838
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !6838
  %47 = bitcast %struct.x509_object_st** %obj to i8*, !dbg !6838
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !6838
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.3

NodeBlock.3:                                      ; preds = %cleanup
  %Pivot.4 = icmp slt i32 %cleanup.dest, 4
  br i1 %Pivot.4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.3
  %Pivot = icmp slt i32 %cleanup.dest, 5
  br i1 %Pivot, label %for.inc, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 5
  br i1 %SwitchLeaf2, label %error, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.3
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !6839

for.inc:                                          ; preds = %NodeBlock, %cleanup.cont
  %48 = load i32, i32* %i, align 4, !dbg !6840, !tbaa !4372
  %inc = add i32 %48, 1, !dbg !6840
  store i32 %inc, i32* %i, align 4, !dbg !6840, !tbaa !4372
  br label %for.cond, !dbg !6841

for.end:                                          ; preds = %for.cond
  %49 = load %struct._object*, %struct._object** %rlist, align 8, !dbg !6842, !tbaa !3860
  store %struct._object* %49, %struct._object** %retval, !dbg !6843
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !6843

error:                                            ; preds = %LeafBlock.1
  br label %do.body.39, !dbg !6844

do.body.39:                                       ; preds = %error
  %50 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6845
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !6845
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2723, metadata !3830), !dbg !6847
  %51 = load %struct._object*, %struct._object** %ci, align 8, !dbg !6848, !tbaa !3860
  store %struct._object* %51, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6847, !tbaa !3860
  %52 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6849, !tbaa !3860
  %cmp40 = icmp ne %struct._object* %52, null, !dbg !6850
  br i1 %cmp40, label %if.then.41, label %if.end.54, !dbg !6851

if.then.41:                                       ; preds = %do.body.39
  br label %do.body.42, !dbg !6852

do.body.42:                                       ; preds = %if.then.41
  %53 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !6854
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !6854
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !2725, metadata !3830), !dbg !6856
  %54 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6857, !tbaa !3860
  store %struct._object* %54, %struct._object** %_py_decref_tmp43, align 8, !dbg !6856, !tbaa !3860
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !6858, !tbaa !3860
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !6860
  %56 = load i64, i64* %ob_refcnt44, align 8, !dbg !6861, !tbaa !4101
  %dec45 = add i64 %56, -1, !dbg !6861
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !6861, !tbaa !4101
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !6862
  br i1 %cmp46, label %if.then.47, label %if.else.48, !dbg !6863

if.then.47:                                       ; preds = %do.body.42
  br label %if.end.51, !dbg !6864

if.else.48:                                       ; preds = %do.body.42
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !6866, !tbaa !3860
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !6868
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !6868, !tbaa !4204
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !6869
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8, !dbg !6869, !tbaa !4206
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !6870, !tbaa !3860
  call void %59(%struct._object* %60), !dbg !6871
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  %61 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !6872
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !6872
  br label %do.cond.52, !dbg !6874

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !6875

do.end.53:                                        ; preds = %do.cond.52
  br label %if.end.54, !dbg !6877

if.end.54:                                        ; preds = %do.end.53, %do.body.39
  %62 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6879
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !6879
  br label %do.cond.55, !dbg !6882

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !6883

do.end.56:                                        ; preds = %do.cond.55
  br label %do.body.57, !dbg !6885

do.body.57:                                       ; preds = %do.end.56
  %63 = bitcast %struct._object** %_py_xdecref_tmp58 to i8*, !dbg !6886
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !6886
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp58, metadata !2728, metadata !3830), !dbg !6888
  %64 = load %struct._object*, %struct._object** %rlist, align 8, !dbg !6889, !tbaa !3860
  store %struct._object* %64, %struct._object** %_py_xdecref_tmp58, align 8, !dbg !6888, !tbaa !3860
  %65 = load %struct._object*, %struct._object** %_py_xdecref_tmp58, align 8, !dbg !6890, !tbaa !3860
  %cmp59 = icmp ne %struct._object* %65, null, !dbg !6891
  br i1 %cmp59, label %if.then.60, label %if.end.73, !dbg !6892

if.then.60:                                       ; preds = %do.body.57
  br label %do.body.61, !dbg !6893

do.body.61:                                       ; preds = %if.then.60
  %66 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !6895
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !6895
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp62, metadata !2730, metadata !3830), !dbg !6897
  %67 = load %struct._object*, %struct._object** %_py_xdecref_tmp58, align 8, !dbg !6898, !tbaa !3860
  store %struct._object* %67, %struct._object** %_py_decref_tmp62, align 8, !dbg !6897, !tbaa !3860
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !6899, !tbaa !3860
  %ob_refcnt63 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !6901
  %69 = load i64, i64* %ob_refcnt63, align 8, !dbg !6902, !tbaa !4101
  %dec64 = add i64 %69, -1, !dbg !6902
  store i64 %dec64, i64* %ob_refcnt63, align 8, !dbg !6902, !tbaa !4101
  %cmp65 = icmp ne i64 %dec64, 0, !dbg !6903
  br i1 %cmp65, label %if.then.66, label %if.else.67, !dbg !6904

if.then.66:                                       ; preds = %do.body.61
  br label %if.end.70, !dbg !6905

if.else.67:                                       ; preds = %do.body.61
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !6907, !tbaa !3860
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !6909
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8, !dbg !6909, !tbaa !4204
  %tp_dealloc69 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !6910
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc69, align 8, !dbg !6910, !tbaa !4206
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !6911, !tbaa !3860
  call void %72(%struct._object* %73), !dbg !6912
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.67, %if.then.66
  %74 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !6913
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !6913
  br label %do.cond.71, !dbg !6915

do.cond.71:                                       ; preds = %if.end.70
  br label %do.end.72, !dbg !6916

do.end.72:                                        ; preds = %do.cond.71
  br label %if.end.73, !dbg !6918

if.end.73:                                        ; preds = %do.end.72, %do.body.57
  %75 = bitcast %struct._object** %_py_xdecref_tmp58 to i8*, !dbg !6920
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !6920
  br label %do.cond.74, !dbg !6921

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !6922

do.end.75:                                        ; preds = %do.cond.74
  store %struct._object* null, %struct._object** %retval, !dbg !6924
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !6924

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.76

cleanup.76:                                       ; preds = %NewDefault, %do.end.75, %for.end, %if.then.2, %if.then
  %76 = bitcast i32* %binary_mode to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 4, i8* %76) #1, !dbg !6925
  %77 = bitcast i32* %i to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 4, i8* %77) #1, !dbg !6925
  %78 = bitcast %struct._object** %rlist to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !6925
  %79 = bitcast %struct._object** %ci to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !6925
  %80 = bitcast %struct.x509_store_st** %store to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !6925
  %81 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 16, i8* %81) #1, !dbg !6925
  %82 = load %struct._object*, %struct._object** %retval, !dbg !6925
  ret %struct._object* %82, !dbg !6925
}

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #3

declare void @PyErr_Clear() #3

; Function Attrs: nounwind uwtable
define internal %struct.PySSLSocket* @newPySSLSocket(%struct.PySSLContext* %sslctx, %struct.PySocketSockObject* %sock, i32 %socket_type, i8* %server_hostname) #0 {
entry:
  %retval = alloca %struct.PySSLSocket*, align 8
  %sslctx.addr = alloca %struct.PySSLContext*, align 8
  %sock.addr = alloca %struct.PySocketSockObject*, align 8
  %socket_type.addr = alloca i32, align 4
  %server_hostname.addr = alloca i8*, align 8
  %self = alloca %struct.PySSLSocket*, align 8
  %ctx = alloca %struct.ssl_ctx_st*, align 8
  %mode = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  %_save36 = alloca %struct._ts*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySSLContext* %sslctx, %struct.PySSLContext** %sslctx.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %sslctx.addr, metadata !2375, metadata !3830), !dbg !6926
  store %struct.PySocketSockObject* %sock, %struct.PySocketSockObject** %sock.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %sock.addr, metadata !2376, metadata !3830), !dbg !6927
  store i32 %socket_type, i32* %socket_type.addr, align 4, !tbaa !6928
  call void @llvm.dbg.declare(metadata i32* %socket_type.addr, metadata !2377, metadata !3830), !dbg !6929
  store i8* %server_hostname, i8** %server_hostname.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %server_hostname.addr, metadata !2378, metadata !3830), !dbg !6930
  %0 = bitcast %struct.PySSLSocket** %self to i8*, !dbg !6931
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6931
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self, metadata !2379, metadata !3830), !dbg !6932
  %1 = bitcast %struct.ssl_ctx_st** %ctx to i8*, !dbg !6933
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6933
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %ctx, metadata !2380, metadata !3830), !dbg !6934
  %2 = load %struct.PySSLContext*, %struct.PySSLContext** %sslctx.addr, align 8, !dbg !6935, !tbaa !3860
  %ctx1 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %2, i32 0, i32 1, !dbg !6936
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx1, align 8, !dbg !6936, !tbaa !4529
  store %struct.ssl_ctx_st* %3, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6934, !tbaa !3860
  %4 = bitcast i64* %mode to i8*, !dbg !6937
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6937
  call void @llvm.dbg.declare(metadata i64* %mode, metadata !2381, metadata !3830), !dbg !6938
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* @PySSLSocket_Type), !dbg !6939
  %5 = bitcast %struct._object* %call to %struct.PySSLSocket*, !dbg !6940
  store %struct.PySSLSocket* %5, %struct.PySSLSocket** %self, align 8, !dbg !6941, !tbaa !3860
  %6 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6942, !tbaa !3860
  %cmp = icmp eq %struct.PySSLSocket* %6, null, !dbg !6944
  br i1 %cmp, label %if.then, label %if.end, !dbg !6945

if.then:                                          ; preds = %entry
  store %struct.PySSLSocket* null, %struct.PySSLSocket** %retval, !dbg !6946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6946

if.end:                                           ; preds = %entry
  %7 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6947, !tbaa !3860
  %peer_cert = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %7, i32 0, i32 4, !dbg !6948
  store %struct.x509_st* null, %struct.x509_st** %peer_cert, align 8, !dbg !6949, !tbaa !6950
  %8 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6952, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %8, i32 0, i32 2, !dbg !6953
  store %struct.ssl_st* null, %struct.ssl_st** %ssl, align 8, !dbg !6954, !tbaa !6955
  %9 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6956, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %9, i32 0, i32 1, !dbg !6957
  store %struct._object* null, %struct._object** %Socket, align 8, !dbg !6958, !tbaa !6959
  %10 = load %struct.PySSLContext*, %struct.PySSLContext** %sslctx.addr, align 8, !dbg !6960, !tbaa !3860
  %11 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6961, !tbaa !3860
  %ctx2 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %11, i32 0, i32 3, !dbg !6962
  store %struct.PySSLContext* %10, %struct.PySSLContext** %ctx2, align 8, !dbg !6963, !tbaa !6964
  %12 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6965, !tbaa !3860
  %shutdown_seen_zero = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %12, i32 0, i32 5, !dbg !6966
  store i8 0, i8* %shutdown_seen_zero, align 1, !dbg !6967, !tbaa !6968
  %13 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !6969, !tbaa !3860
  %handshake_done = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %13, i32 0, i32 6, !dbg !6970
  store i8 0, i8* %handshake_done, align 1, !dbg !6971, !tbaa !6972
  %14 = load %struct.PySSLContext*, %struct.PySSLContext** %sslctx.addr, align 8, !dbg !6973, !tbaa !3860
  %15 = bitcast %struct.PySSLContext* %14 to %struct._object*, !dbg !6974
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !6975
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !6976, !tbaa !4101
  %inc = add i64 %16, 1, !dbg !6976
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6976, !tbaa !4101
  %call3 = call %struct.err_state_st* @ERR_get_state(), !dbg !6977
  call void @ERR_clear_error(), !dbg !6978
  %17 = bitcast %struct._ts** %_save to i8*, !dbg !6979
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !6979
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !2382, metadata !3830), !dbg !6980
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !6980, !tbaa !3860
  br label %do.body, !dbg !6981

do.body:                                          ; preds = %if.end
  %18 = load i32, i32* @_ssl_locks_count, align 4, !dbg !6982, !tbaa !4372
  %cmp4 = icmp ugt i32 %18, 0, !dbg !6986
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !6987

if.then.5:                                        ; preds = %do.body
  %call6 = call %struct._ts* @PyEval_SaveThread(), !dbg !6988
  store %struct._ts* %call6, %struct._ts** %_save, align 8, !dbg !6991, !tbaa !3860
  br label %if.end.7, !dbg !6992

if.end.7:                                         ; preds = %if.then.5, %do.body
  br label %do.cond, !dbg !6993

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !6996

do.end:                                           ; preds = %do.cond
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6998, !tbaa !3860
  %call8 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* %19), !dbg !6999
  %20 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7000, !tbaa !3860
  %ssl9 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %20, i32 0, i32 2, !dbg !7001
  store %struct.ssl_st* %call8, %struct.ssl_st** %ssl9, align 8, !dbg !7002, !tbaa !6955
  br label %do.body.10, !dbg !7003

do.body.10:                                       ; preds = %do.end
  %21 = load i32, i32* @_ssl_locks_count, align 4, !dbg !7004, !tbaa !4372
  %cmp11 = icmp ugt i32 %21, 0, !dbg !7008
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !7009

if.then.12:                                       ; preds = %do.body.10
  %22 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !7010, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %22), !dbg !7013
  br label %if.end.13, !dbg !7014

if.end.13:                                        ; preds = %if.then.12, %do.body.10
  br label %do.cond.14, !dbg !7015

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !7018

do.end.15:                                        ; preds = %do.cond.14
  %23 = bitcast %struct._ts** %_save to i8*, !dbg !7020
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !7020
  %24 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7022, !tbaa !3860
  %ssl16 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %24, i32 0, i32 2, !dbg !7023
  %25 = load %struct.ssl_st*, %struct.ssl_st** %ssl16, align 8, !dbg !7023, !tbaa !6955
  %26 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7024, !tbaa !3860
  %27 = bitcast %struct.PySSLSocket* %26 to i8*, !dbg !7025
  %call17 = call i32 @SSL_set_ex_data(%struct.ssl_st* %25, i32 0, i8* %27), !dbg !7026
  %28 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7027, !tbaa !3860
  %ssl18 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %28, i32 0, i32 2, !dbg !7028
  %29 = load %struct.ssl_st*, %struct.ssl_st** %ssl18, align 8, !dbg !7028, !tbaa !6955
  %30 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock.addr, align 8, !dbg !7029, !tbaa !3860
  %sock_fd = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %30, i32 0, i32 1, !dbg !7030
  %31 = load i32, i32* %sock_fd, align 4, !dbg !7030, !tbaa !7031
  %call19 = call i32 @SSL_set_fd(%struct.ssl_st* %29, i32 %31), !dbg !7034
  store i64 2, i64* %mode, align 8, !dbg !7035, !tbaa !4354
  %32 = load i64, i64* %mode, align 8, !dbg !7036, !tbaa !4354
  %or = or i64 %32, 4, !dbg !7036
  store i64 %or, i64* %mode, align 8, !dbg !7036, !tbaa !4354
  %33 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7037, !tbaa !3860
  %ssl20 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %33, i32 0, i32 2, !dbg !7038
  %34 = load %struct.ssl_st*, %struct.ssl_st** %ssl20, align 8, !dbg !7038, !tbaa !6955
  %35 = load i64, i64* %mode, align 8, !dbg !7039, !tbaa !4354
  %call21 = call i64 @SSL_ctrl(%struct.ssl_st* %34, i32 33, i64 %35, i8* null), !dbg !7040
  %36 = load i8*, i8** %server_hostname.addr, align 8, !dbg !7041, !tbaa !3860
  %cmp22 = icmp ne i8* %36, null, !dbg !7043
  br i1 %cmp22, label %if.then.23, label %if.end.26, !dbg !7044

if.then.23:                                       ; preds = %do.end.15
  %37 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7045, !tbaa !3860
  %ssl24 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %37, i32 0, i32 2, !dbg !7046
  %38 = load %struct.ssl_st*, %struct.ssl_st** %ssl24, align 8, !dbg !7046, !tbaa !6955
  %39 = load i8*, i8** %server_hostname.addr, align 8, !dbg !7047, !tbaa !3860
  %call25 = call i64 @SSL_ctrl(%struct.ssl_st* %38, i32 55, i64 0, i8* %39), !dbg !7048
  br label %if.end.26, !dbg !7048

if.end.26:                                        ; preds = %if.then.23, %do.end.15
  %40 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock.addr, align 8, !dbg !7049, !tbaa !3860
  %sock_timeout = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %40, i32 0, i32 6, !dbg !7051
  %41 = load double, double* %sock_timeout, align 8, !dbg !7051, !tbaa !7052
  %cmp27 = fcmp oge double %41, 0.000000e+00, !dbg !7053
  br i1 %cmp27, label %if.then.28, label %if.end.35, !dbg !7054

if.then.28:                                       ; preds = %if.end.26
  %42 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7055, !tbaa !3860
  %ssl29 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %42, i32 0, i32 2, !dbg !7057
  %43 = load %struct.ssl_st*, %struct.ssl_st** %ssl29, align 8, !dbg !7057, !tbaa !6955
  %call30 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %43), !dbg !7058
  %call31 = call i64 @BIO_ctrl(%struct.bio_st* %call30, i32 102, i64 1, i8* null), !dbg !7059
  %44 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7060, !tbaa !3860
  %ssl32 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %44, i32 0, i32 2, !dbg !7061
  %45 = load %struct.ssl_st*, %struct.ssl_st** %ssl32, align 8, !dbg !7061, !tbaa !6955
  %call33 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %45), !dbg !7062
  %call34 = call i64 @BIO_ctrl(%struct.bio_st* %call33, i32 102, i64 1, i8* null), !dbg !7063
  br label %if.end.35, !dbg !7064

if.end.35:                                        ; preds = %if.then.28, %if.end.26
  %46 = bitcast %struct._ts** %_save36 to i8*, !dbg !7065
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !7065
  call void @llvm.dbg.declare(metadata %struct._ts** %_save36, metadata !2384, metadata !3830), !dbg !7066
  store %struct._ts* null, %struct._ts** %_save36, align 8, !dbg !7066, !tbaa !3860
  br label %do.body.37, !dbg !7067

do.body.37:                                       ; preds = %if.end.35
  %47 = load i32, i32* @_ssl_locks_count, align 4, !dbg !7068, !tbaa !4372
  %cmp38 = icmp ugt i32 %47, 0, !dbg !7072
  br i1 %cmp38, label %if.then.39, label %if.end.41, !dbg !7073

if.then.39:                                       ; preds = %do.body.37
  %call40 = call %struct._ts* @PyEval_SaveThread(), !dbg !7074
  store %struct._ts* %call40, %struct._ts** %_save36, align 8, !dbg !7077, !tbaa !3860
  br label %if.end.41, !dbg !7078

if.end.41:                                        ; preds = %if.then.39, %do.body.37
  br label %do.cond.42, !dbg !7079

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !7082

do.end.43:                                        ; preds = %do.cond.42
  %48 = load i32, i32* %socket_type.addr, align 4, !dbg !7084, !tbaa !6928
  %cmp44 = icmp eq i32 %48, 0, !dbg !7086
  br i1 %cmp44, label %if.then.45, label %if.else, !dbg !7087

if.then.45:                                       ; preds = %do.end.43
  %49 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7088, !tbaa !3860
  %ssl46 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %49, i32 0, i32 2, !dbg !7089
  %50 = load %struct.ssl_st*, %struct.ssl_st** %ssl46, align 8, !dbg !7089, !tbaa !6955
  call void @SSL_set_connect_state(%struct.ssl_st* %50), !dbg !7090
  br label %if.end.48, !dbg !7090

if.else:                                          ; preds = %do.end.43
  %51 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7091, !tbaa !3860
  %ssl47 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %51, i32 0, i32 2, !dbg !7092
  %52 = load %struct.ssl_st*, %struct.ssl_st** %ssl47, align 8, !dbg !7092, !tbaa !6955
  call void @SSL_set_accept_state(%struct.ssl_st* %52), !dbg !7093
  br label %if.end.48

if.end.48:                                        ; preds = %if.else, %if.then.45
  br label %do.body.49, !dbg !7094

do.body.49:                                       ; preds = %if.end.48
  %53 = load i32, i32* @_ssl_locks_count, align 4, !dbg !7095, !tbaa !4372
  %cmp50 = icmp ugt i32 %53, 0, !dbg !7099
  br i1 %cmp50, label %if.then.51, label %if.end.52, !dbg !7100

if.then.51:                                       ; preds = %do.body.49
  %54 = load %struct._ts*, %struct._ts** %_save36, align 8, !dbg !7101, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %54), !dbg !7104
  br label %if.end.52, !dbg !7105

if.end.52:                                        ; preds = %if.then.51, %do.body.49
  br label %do.cond.53, !dbg !7106

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !7109

do.end.54:                                        ; preds = %do.cond.53
  %55 = bitcast %struct._ts** %_save36 to i8*, !dbg !7111
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !7111
  %56 = load i32, i32* %socket_type.addr, align 4, !dbg !7112, !tbaa !6928
  %57 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7113, !tbaa !3860
  %socket_type55 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %57, i32 0, i32 7, !dbg !7114
  store i32 %56, i32* %socket_type55, align 4, !dbg !7115, !tbaa !7116
  %58 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock.addr, align 8, !dbg !7117, !tbaa !3860
  %59 = bitcast %struct.PySocketSockObject* %58 to %struct._object*, !dbg !7118
  %call56 = call %struct._object* @PyWeakref_NewRef(%struct._object* %59, %struct._object* null), !dbg !7119
  %60 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7120, !tbaa !3860
  %Socket57 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %60, i32 0, i32 1, !dbg !7121
  store %struct._object* %call56, %struct._object** %Socket57, align 8, !dbg !7122, !tbaa !6959
  %61 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7123, !tbaa !3860
  %Socket58 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %61, i32 0, i32 1, !dbg !7124
  %62 = load %struct._object*, %struct._object** %Socket58, align 8, !dbg !7124, !tbaa !6959
  %cmp59 = icmp eq %struct._object* %62, null, !dbg !7125
  br i1 %cmp59, label %if.then.60, label %if.end.69, !dbg !7126

if.then.60:                                       ; preds = %do.end.54
  br label %do.body.61, !dbg !7127

do.body.61:                                       ; preds = %if.then.60
  %63 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7128
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !7128
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2386, metadata !3830), !dbg !7130
  %64 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7131, !tbaa !3860
  %65 = bitcast %struct.PySSLSocket* %64 to %struct._object*, !dbg !7132
  store %struct._object* %65, %struct._object** %_py_decref_tmp, align 8, !dbg !7130, !tbaa !3860
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7133, !tbaa !3860
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !7135
  %67 = load i64, i64* %ob_refcnt62, align 8, !dbg !7136, !tbaa !4101
  %dec = add i64 %67, -1, !dbg !7136
  store i64 %dec, i64* %ob_refcnt62, align 8, !dbg !7136, !tbaa !4101
  %cmp63 = icmp ne i64 %dec, 0, !dbg !7137
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !7138

if.then.64:                                       ; preds = %do.body.61
  br label %if.end.66, !dbg !7139

if.else.65:                                       ; preds = %do.body.61
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7141, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !7143
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7143, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !7144
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7144, !tbaa !4206
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7145, !tbaa !3860
  call void %70(%struct._object* %71), !dbg !7146
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.65, %if.then.64
  %72 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7147
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !7147
  br label %do.cond.67, !dbg !7149

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !7150

do.end.68:                                        ; preds = %do.cond.67
  store %struct.PySSLSocket* null, %struct.PySSLSocket** %retval, !dbg !7152
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7152

if.end.69:                                        ; preds = %do.end.54
  %73 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self, align 8, !dbg !7153, !tbaa !3860
  store %struct.PySSLSocket* %73, %struct.PySSLSocket** %retval, !dbg !7154
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7154

cleanup:                                          ; preds = %if.end.69, %do.end.68, %if.then
  %74 = bitcast i64* %mode to i8*, !dbg !7155
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !7155
  %75 = bitcast %struct.ssl_ctx_st** %ctx to i8*, !dbg !7155
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !7155
  %76 = bitcast %struct.PySSLSocket** %self to i8*, !dbg !7155
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !7155
  %77 = load %struct.PySSLSocket*, %struct.PySSLSocket** %retval, !dbg !7155
  ret %struct.PySSLSocket* %77, !dbg !7155
}

declare %struct._object* @_PyObject_New(%struct._typeobject*) #3

declare %struct.err_state_st* @ERR_get_state() #3

declare void @ERR_clear_error() #3

declare %struct._ts* @PyEval_SaveThread() #3

declare %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st*) #3

declare void @PyEval_RestoreThread(%struct._ts*) #3

declare i32 @SSL_set_ex_data(%struct.ssl_st*, i32, i8*) #3

declare i32 @SSL_set_fd(%struct.ssl_st*, i32) #3

declare i64 @SSL_ctrl(%struct.ssl_st*, i32, i64, i8*) #3

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) #3

declare %struct.bio_st* @SSL_get_rbio(%struct.ssl_st*) #3

declare %struct.bio_st* @SSL_get_wbio(%struct.ssl_st*) #3

declare void @SSL_set_connect_state(%struct.ssl_st*) #3

declare void @SSL_set_accept_state(%struct.ssl_st*) #3

declare %struct._object* @PyWeakref_NewRef(%struct._object*, %struct._object*) #3

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #3

declare i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st*, i8*) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare i8* @PyMem_Malloc(i64) #3

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

declare %struct._object* @PyErr_NoMemory() #3

declare void @SSL_CTX_set_next_protos_advertised_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_advertiseNPN_cb(%struct.ssl_st* %s, i8** %data, i32* %len, i8* %args) #0 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %data.addr = alloca i8**, align 8
  %len.addr = alloca i32*, align 8
  %args.addr = alloca i8*, align 8
  %ssl_ctx = alloca %struct.PySSLContext*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !2405, metadata !3830), !dbg !7156
  store i8** %data, i8*** %data.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !2406, metadata !3830), !dbg !7157
  store i32* %len, i32** %len.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %len.addr, metadata !2407, metadata !3830), !dbg !7158
  store i8* %args, i8** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !2408, metadata !3830), !dbg !7159
  %0 = bitcast %struct.PySSLContext** %ssl_ctx to i8*, !dbg !7160
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7160
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %ssl_ctx, metadata !2409, metadata !3830), !dbg !7161
  %1 = load i8*, i8** %args.addr, align 8, !dbg !7162, !tbaa !3860
  %2 = bitcast i8* %1 to %struct.PySSLContext*, !dbg !7163
  store %struct.PySSLContext* %2, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7161, !tbaa !3860
  %3 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7164, !tbaa !3860
  %npn_protocols = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %3, i32 0, i32 2, !dbg !7166
  %4 = load i8*, i8** %npn_protocols, align 8, !dbg !7166, !tbaa !4534
  %cmp = icmp eq i8* %4, null, !dbg !7167
  br i1 %cmp, label %if.then, label %if.else, !dbg !7168

if.then:                                          ; preds = %entry
  %5 = load i8**, i8*** %data.addr, align 8, !dbg !7169, !tbaa !3860
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.108, i32 0, i32 0), i8** %5, align 8, !dbg !7171, !tbaa !3860
  %6 = load i32*, i32** %len.addr, align 8, !dbg !7172, !tbaa !3860
  store i32 0, i32* %6, align 4, !dbg !7173, !tbaa !4372
  br label %if.end, !dbg !7174

if.else:                                          ; preds = %entry
  %7 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7175, !tbaa !3860
  %npn_protocols1 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %7, i32 0, i32 2, !dbg !7177
  %8 = load i8*, i8** %npn_protocols1, align 8, !dbg !7177, !tbaa !4534
  %9 = load i8**, i8*** %data.addr, align 8, !dbg !7178, !tbaa !3860
  store i8* %8, i8** %9, align 8, !dbg !7179, !tbaa !3860
  %10 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7180, !tbaa !3860
  %npn_protocols_len = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %10, i32 0, i32 3, !dbg !7181
  %11 = load i32, i32* %npn_protocols_len, align 4, !dbg !7181, !tbaa !4923
  %12 = load i32*, i32** %len.addr, align 8, !dbg !7182, !tbaa !3860
  store i32 %11, i32* %12, align 4, !dbg !7183, !tbaa !4372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = bitcast %struct.PySSLContext** %ssl_ctx to i8*, !dbg !7184
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !7184
  ret i32 0, !dbg !7185
}

declare void @SSL_CTX_set_next_proto_select_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_selectNPN_cb(%struct.ssl_st* %s, i8** %out, i8* %outlen, i8* %server, i32 %server_len, i8* %args) #0 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %out.addr = alloca i8**, align 8
  %outlen.addr = alloca i8*, align 8
  %server.addr = alloca i8*, align 8
  %server_len.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %ssl_ctx = alloca %struct.PySSLContext*, align 8
  %client = alloca i8*, align 8
  %client_len = alloca i32, align 4
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !2412, metadata !3830), !dbg !7186
  store i8** %out, i8*** %out.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8*** %out.addr, metadata !2413, metadata !3830), !dbg !7187
  store i8* %outlen, i8** %outlen.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %outlen.addr, metadata !2414, metadata !3830), !dbg !7188
  store i8* %server, i8** %server.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %server.addr, metadata !2415, metadata !3830), !dbg !7189
  store i32 %server_len, i32* %server_len.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %server_len.addr, metadata !2416, metadata !3830), !dbg !7190
  store i8* %args, i8** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !2417, metadata !3830), !dbg !7191
  %0 = bitcast %struct.PySSLContext** %ssl_ctx to i8*, !dbg !7192
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7192
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %ssl_ctx, metadata !2418, metadata !3830), !dbg !7193
  %1 = load i8*, i8** %args.addr, align 8, !dbg !7194, !tbaa !3860
  %2 = bitcast i8* %1 to %struct.PySSLContext*, !dbg !7195
  store %struct.PySSLContext* %2, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7193, !tbaa !3860
  %3 = bitcast i8** %client to i8*, !dbg !7196
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7196
  call void @llvm.dbg.declare(metadata i8** %client, metadata !2419, metadata !3830), !dbg !7197
  %4 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7198, !tbaa !3860
  %npn_protocols = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %4, i32 0, i32 2, !dbg !7199
  %5 = load i8*, i8** %npn_protocols, align 8, !dbg !7199, !tbaa !4534
  store i8* %5, i8** %client, align 8, !dbg !7197, !tbaa !3860
  %6 = bitcast i32* %client_len to i8*, !dbg !7200
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !7200
  call void @llvm.dbg.declare(metadata i32* %client_len, metadata !2420, metadata !3830), !dbg !7201
  %7 = load i8*, i8** %client, align 8, !dbg !7202, !tbaa !3860
  %cmp = icmp eq i8* %7, null, !dbg !7204
  br i1 %cmp, label %if.then, label %if.else, !dbg !7205

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.108, i32 0, i32 0), i8** %client, align 8, !dbg !7206, !tbaa !3860
  store i32 0, i32* %client_len, align 4, !dbg !7208, !tbaa !4372
  br label %if.end, !dbg !7209

if.else:                                          ; preds = %entry
  %8 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !7210, !tbaa !3860
  %npn_protocols_len = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %8, i32 0, i32 3, !dbg !7212
  %9 = load i32, i32* %npn_protocols_len, align 4, !dbg !7212, !tbaa !4923
  store i32 %9, i32* %client_len, align 4, !dbg !7213, !tbaa !4372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i8**, i8*** %out.addr, align 8, !dbg !7214, !tbaa !3860
  %11 = load i8*, i8** %outlen.addr, align 8, !dbg !7215, !tbaa !3860
  %12 = load i8*, i8** %server.addr, align 8, !dbg !7216, !tbaa !3860
  %13 = load i32, i32* %server_len.addr, align 4, !dbg !7217, !tbaa !4372
  %14 = load i8*, i8** %client, align 8, !dbg !7218, !tbaa !3860
  %15 = load i32, i32* %client_len, align 4, !dbg !7219, !tbaa !4372
  %call = call i32 @SSL_select_next_proto(i8** %10, i8* %11, i8* %12, i32 %13, i8* %14, i32 %15), !dbg !7220
  %16 = bitcast i32* %client_len to i8*, !dbg !7221
  call void @llvm.lifetime.end(i64 4, i8* %16) #1, !dbg !7221
  %17 = bitcast i8** %client to i8*, !dbg !7221
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !7221
  %18 = bitcast %struct.PySSLContext** %ssl_ctx to i8*, !dbg !7221
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !7221
  ret i32 0, !dbg !7222
}

declare i32 @SSL_select_next_proto(i8**, i8*, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #4

declare i32 @PyUnicode_FSConverter(%struct._object*, i8*) #3

declare i32 @PyCallable_Check(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_pwinfo_set(%struct._PySSLPasswordInfo* %pw_info, %struct._object* %password, i8* %bad_type_error) #0 {
entry:
  %retval = alloca i32, align 4
  %pw_info.addr = alloca %struct._PySSLPasswordInfo*, align 8
  %password.addr = alloca %struct._object*, align 8
  %bad_type_error.addr = alloca i8*, align 8
  %password_bytes = alloca %struct._object*, align 8
  %data = alloca i8*, align 8
  %size = alloca i64, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  store %struct._PySSLPasswordInfo* %pw_info, %struct._PySSLPasswordInfo** %pw_info.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._PySSLPasswordInfo** %pw_info.addr, metadata !2462, metadata !3830), !dbg !7223
  store %struct._object* %password, %struct._object** %password.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %password.addr, metadata !2463, metadata !3830), !dbg !7224
  store i8* %bad_type_error, i8** %bad_type_error.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %bad_type_error.addr, metadata !2464, metadata !3830), !dbg !7225
  %0 = bitcast %struct._object** %password_bytes to i8*, !dbg !7226
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7226
  call void @llvm.dbg.declare(metadata %struct._object** %password_bytes, metadata !2465, metadata !3830), !dbg !7227
  store %struct._object* null, %struct._object** %password_bytes, align 8, !dbg !7227, !tbaa !3860
  %1 = bitcast i8** %data to i8*, !dbg !7228
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7228
  call void @llvm.dbg.declare(metadata i8** %data, metadata !2466, metadata !3830), !dbg !7229
  store i8* null, i8** %data, align 8, !dbg !7229, !tbaa !3860
  %2 = bitcast i64* %size to i8*, !dbg !7230
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7230
  call void @llvm.dbg.declare(metadata i64* %size, metadata !2467, metadata !3830), !dbg !7231
  %3 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7232, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !7234
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7234, !tbaa !4204
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !7235
  %5 = load i64, i64* %tp_flags, align 8, !dbg !7235, !tbaa !7236
  %and = and i64 %5, 268435456, !dbg !7237
  %cmp = icmp ne i64 %and, 0, !dbg !7238
  br i1 %cmp, label %if.then, label %if.else, !dbg !7239

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7240, !tbaa !3860
  %call = call %struct._object* @PyUnicode_AsEncodedString(%struct._object* %6, i8* null, i8* null), !dbg !7242
  store %struct._object* %call, %struct._object** %password_bytes, align 8, !dbg !7243, !tbaa !3860
  %7 = load %struct._object*, %struct._object** %password_bytes, align 8, !dbg !7244, !tbaa !3860
  %tobool = icmp ne %struct._object* %7, null, !dbg !7244
  br i1 %tobool, label %if.end, label %if.then.1, !dbg !7246

if.then.1:                                        ; preds = %if.then
  br label %error, !dbg !7247

if.end:                                           ; preds = %if.then
  %8 = load %struct._object*, %struct._object** %password_bytes, align 8, !dbg !7249, !tbaa !3860
  %9 = bitcast %struct._object* %8 to %struct.PyBytesObject*, !dbg !7250
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %9, i32 0, i32 2, !dbg !7251
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !7252
  store i8* %arraydecay, i8** %data, align 8, !dbg !7253, !tbaa !3860
  %10 = load %struct._object*, %struct._object** %password_bytes, align 8, !dbg !7254, !tbaa !3860
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !7255
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !7256
  %12 = load i64, i64* %ob_size, align 8, !dbg !7256, !tbaa !5652
  store i64 %12, i64* %size, align 8, !dbg !7257, !tbaa !4354
  br label %if.end.23, !dbg !7258

if.else:                                          ; preds = %entry
  %13 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7259, !tbaa !3860
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !7261
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !7261, !tbaa !4204
  %tp_flags3 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 19, !dbg !7262
  %15 = load i64, i64* %tp_flags3, align 8, !dbg !7262, !tbaa !7236
  %and4 = and i64 %15, 134217728, !dbg !7263
  %cmp5 = icmp ne i64 %and4, 0, !dbg !7264
  br i1 %cmp5, label %if.then.6, label %if.else.10, !dbg !7265

if.then.6:                                        ; preds = %if.else
  %16 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7266, !tbaa !3860
  %17 = bitcast %struct._object* %16 to %struct.PyBytesObject*, !dbg !7268
  %ob_sval7 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %17, i32 0, i32 2, !dbg !7269
  %arraydecay8 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval7, i32 0, i32 0, !dbg !7270
  store i8* %arraydecay8, i8** %data, align 8, !dbg !7271, !tbaa !3860
  %18 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7272, !tbaa !3860
  %19 = bitcast %struct._object* %18 to %struct.PyVarObject*, !dbg !7273
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1, !dbg !7274
  %20 = load i64, i64* %ob_size9, align 8, !dbg !7274, !tbaa !5652
  store i64 %20, i64* %size, align 8, !dbg !7275, !tbaa !4354
  br label %if.end.22, !dbg !7276

if.else.10:                                       ; preds = %if.else
  %21 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7277, !tbaa !3860
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !7279
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !7279, !tbaa !4204
  %cmp12 = icmp eq %struct._typeobject* %22, @PyByteArray_Type, !dbg !7280
  br i1 %cmp12, label %if.then.16, label %lor.lhs.false, !dbg !7281

lor.lhs.false:                                    ; preds = %if.else.10
  %23 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7282, !tbaa !3860
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !7284
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !7284, !tbaa !4204
  %call14 = call i32 @PyType_IsSubtype(%struct._typeobject* %24, %struct._typeobject* @PyByteArray_Type), !dbg !7285
  %tobool15 = icmp ne i32 %call14, 0, !dbg !7285
  br i1 %tobool15, label %if.then.16, label %if.else.20, !dbg !7286

if.then.16:                                       ; preds = %lor.lhs.false, %if.else.10
  %25 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7287, !tbaa !3860
  %26 = bitcast %struct._object* %25 to %struct.PyVarObject*, !dbg !7289
  %ob_size17 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %26, i32 0, i32 1, !dbg !7290
  %27 = load i64, i64* %ob_size17, align 8, !dbg !7290, !tbaa !5652
  %tobool18 = icmp ne i64 %27, 0, !dbg !7291
  br i1 %tobool18, label %cond.true, label %cond.false, !dbg !7291

cond.true:                                        ; preds = %if.then.16
  %28 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7292, !tbaa !3860
  %29 = bitcast %struct._object* %28 to %struct.PyByteArrayObject*, !dbg !7294
  %ob_start = getelementptr inbounds %struct.PyByteArrayObject, %struct.PyByteArrayObject* %29, i32 0, i32 3, !dbg !7295
  %30 = load i8*, i8** %ob_start, align 8, !dbg !7295, !tbaa !7296
  br label %cond.end, !dbg !7291

cond.false:                                       ; preds = %if.then.16
  br label %cond.end, !dbg !7298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %30, %cond.true ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_PyByteArray_empty_string, i32 0, i32 0), %cond.false ], !dbg !7291
  store i8* %cond, i8** %data, align 8, !dbg !7300, !tbaa !3860
  %31 = load %struct._object*, %struct._object** %password.addr, align 8, !dbg !7303, !tbaa !3860
  %32 = bitcast %struct._object* %31 to %struct.PyVarObject*, !dbg !7304
  %ob_size19 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %32, i32 0, i32 1, !dbg !7305
  %33 = load i64, i64* %ob_size19, align 8, !dbg !7305, !tbaa !5652
  store i64 %33, i64* %size, align 8, !dbg !7306, !tbaa !4354
  br label %if.end.21, !dbg !7307

if.else.20:                                       ; preds = %lor.lhs.false
  %34 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7308, !tbaa !3860
  %35 = load i8*, i8** %bad_type_error.addr, align 8, !dbg !7310, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %34, i8* %35), !dbg !7311
  br label %error, !dbg !7312

if.end.21:                                        ; preds = %cond.end
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.6
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end
  %36 = load i64, i64* %size, align 8, !dbg !7313, !tbaa !4354
  %cmp24 = icmp sgt i64 %36, 2147483647, !dbg !7315
  br i1 %cmp24, label %if.then.25, label %if.end.27, !dbg !7316

if.then.25:                                       ; preds = %if.end.23
  %37 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7317, !tbaa !3860
  %call26 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117, i32 0, i32 0), i32 2147483647), !dbg !7319
  br label %error, !dbg !7320

if.end.27:                                        ; preds = %if.end.23
  %38 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info.addr, align 8, !dbg !7321, !tbaa !3860
  %password28 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %38, i32 0, i32 2, !dbg !7322
  %39 = load i8*, i8** %password28, align 8, !dbg !7322, !tbaa !5317
  call void @PyMem_Free(i8* %39), !dbg !7323
  %40 = load i64, i64* %size, align 8, !dbg !7324, !tbaa !4354
  %call29 = call i8* @PyMem_Malloc(i64 %40), !dbg !7325
  %41 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info.addr, align 8, !dbg !7326, !tbaa !3860
  %password30 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %41, i32 0, i32 2, !dbg !7327
  store i8* %call29, i8** %password30, align 8, !dbg !7328, !tbaa !5317
  %42 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info.addr, align 8, !dbg !7329, !tbaa !3860
  %password31 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %42, i32 0, i32 2, !dbg !7331
  %43 = load i8*, i8** %password31, align 8, !dbg !7331, !tbaa !5317
  %tobool32 = icmp ne i8* %43, null, !dbg !7329
  br i1 %tobool32, label %if.end.34, label %if.then.33, !dbg !7332

if.then.33:                                       ; preds = %if.end.27
  %44 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !7333, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %44, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.118, i32 0, i32 0)), !dbg !7335
  br label %error, !dbg !7336

if.end.34:                                        ; preds = %if.end.27
  %45 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info.addr, align 8, !dbg !7337, !tbaa !3860
  %password35 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %45, i32 0, i32 2, !dbg !7338
  %46 = load i8*, i8** %password35, align 8, !dbg !7338, !tbaa !5317
  %47 = load i8*, i8** %data, align 8, !dbg !7339, !tbaa !3860
  %48 = load i64, i64* %size, align 8, !dbg !7340, !tbaa !4354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 %48, i32 1, i1 false), !dbg !7341
  %49 = load i64, i64* %size, align 8, !dbg !7342, !tbaa !4354
  %conv = trunc i64 %49 to i32, !dbg !7343
  %50 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info.addr, align 8, !dbg !7344, !tbaa !3860
  %size36 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %50, i32 0, i32 3, !dbg !7345
  store i32 %conv, i32* %size36, align 4, !dbg !7346, !tbaa !7347
  br label %do.body, !dbg !7348

do.body:                                          ; preds = %if.end.34
  %51 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7349
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !7349
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2468, metadata !3830), !dbg !7351
  %52 = load %struct._object*, %struct._object** %password_bytes, align 8, !dbg !7352, !tbaa !3860
  store %struct._object* %52, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7351, !tbaa !3860
  %53 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7353, !tbaa !3860
  %cmp37 = icmp ne %struct._object* %53, null, !dbg !7354
  br i1 %cmp37, label %if.then.39, label %if.end.47, !dbg !7355

if.then.39:                                       ; preds = %do.body
  br label %do.body.40, !dbg !7356

do.body.40:                                       ; preds = %if.then.39
  %54 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7358
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !7358
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2470, metadata !3830), !dbg !7360
  %55 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7361, !tbaa !3860
  store %struct._object* %55, %struct._object** %_py_decref_tmp, align 8, !dbg !7360, !tbaa !3860
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7362, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !7364
  %57 = load i64, i64* %ob_refcnt, align 8, !dbg !7365, !tbaa !4101
  %dec = add i64 %57, -1, !dbg !7365
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7365, !tbaa !4101
  %cmp41 = icmp ne i64 %dec, 0, !dbg !7366
  br i1 %cmp41, label %if.then.43, label %if.else.44, !dbg !7367

if.then.43:                                       ; preds = %do.body.40
  br label %if.end.46, !dbg !7368

if.else.44:                                       ; preds = %do.body.40
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7370, !tbaa !3860
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !7372
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !7372, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !7373
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7373, !tbaa !4206
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7374, !tbaa !3860
  call void %60(%struct._object* %61), !dbg !7375
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.44, %if.then.43
  %62 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7376
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !7376
  br label %do.cond, !dbg !7378

do.cond:                                          ; preds = %if.end.46
  br label %do.end, !dbg !7379

do.end:                                           ; preds = %do.cond
  br label %if.end.47, !dbg !7381

if.end.47:                                        ; preds = %do.end, %do.body
  %63 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7383
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !7383
  br label %do.cond.48, !dbg !7386

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !7387

do.end.49:                                        ; preds = %do.cond.48
  store i32 1, i32* %retval, !dbg !7389
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7389

error:                                            ; preds = %if.then.33, %if.then.25, %if.else.20, %if.then.1
  br label %do.body.50, !dbg !7390

do.body.50:                                       ; preds = %error
  %64 = bitcast %struct._object** %_py_xdecref_tmp51 to i8*, !dbg !7391
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !7391
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp51, metadata !2473, metadata !3830), !dbg !7393
  %65 = load %struct._object*, %struct._object** %password_bytes, align 8, !dbg !7394, !tbaa !3860
  store %struct._object* %65, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !7393, !tbaa !3860
  %66 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !7395, !tbaa !3860
  %cmp52 = icmp ne %struct._object* %66, null, !dbg !7396
  br i1 %cmp52, label %if.then.54, label %if.end.68, !dbg !7397

if.then.54:                                       ; preds = %do.body.50
  br label %do.body.55, !dbg !7398

do.body.55:                                       ; preds = %if.then.54
  %67 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7400
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !7400
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !2475, metadata !3830), !dbg !7402
  %68 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !7403, !tbaa !3860
  store %struct._object* %68, %struct._object** %_py_decref_tmp56, align 8, !dbg !7402, !tbaa !3860
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7404, !tbaa !3860
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !7406
  %70 = load i64, i64* %ob_refcnt57, align 8, !dbg !7407, !tbaa !4101
  %dec58 = add i64 %70, -1, !dbg !7407
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !7407, !tbaa !4101
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !7408
  br i1 %cmp59, label %if.then.61, label %if.else.62, !dbg !7409

if.then.61:                                       ; preds = %do.body.55
  br label %if.end.65, !dbg !7410

if.else.62:                                       ; preds = %do.body.55
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7412, !tbaa !3860
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !7414
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !7414, !tbaa !4204
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !7415
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !7415, !tbaa !4206
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7416, !tbaa !3860
  call void %73(%struct._object* %74), !dbg !7417
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %75 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7418
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !7418
  br label %do.cond.66, !dbg !7420

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !7421

do.end.67:                                        ; preds = %do.cond.66
  br label %if.end.68, !dbg !7423

if.end.68:                                        ; preds = %do.end.67, %do.body.50
  %76 = bitcast %struct._object** %_py_xdecref_tmp51 to i8*, !dbg !7425
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !7425
  br label %do.cond.69, !dbg !7426

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !7427

do.end.70:                                        ; preds = %do.cond.69
  store i32 0, i32* %retval, !dbg !7429
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7429

cleanup:                                          ; preds = %do.end.70, %do.end.49
  %77 = bitcast i64* %size to i8*, !dbg !7430
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !7430
  %78 = bitcast i8** %data to i8*, !dbg !7430
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !7430
  %79 = bitcast %struct._object** %password_bytes to i8*, !dbg !7430
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !7430
  %80 = load i32, i32* %retval, !dbg !7430
  ret i32 %80, !dbg !7430
}

declare void @SSL_CTX_set_default_passwd_cb(%struct.ssl_ctx_st*, i32 (i8*, i32, i32, i8*)*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_password_callback(i8* %buf, i32 %size, i32 %rwflag, i8* %userdata) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %rwflag.addr = alloca i32, align 4
  %userdata.addr = alloca i8*, align 8
  %pw_info = alloca %struct._PySSLPasswordInfo*, align 8
  %fn_ret = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2480, metadata !3830), !dbg !7431
  store i32 %size, i32* %size.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2481, metadata !3830), !dbg !7432
  store i32 %rwflag, i32* %rwflag.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %rwflag.addr, metadata !2482, metadata !3830), !dbg !7433
  store i8* %userdata, i8** %userdata.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !2483, metadata !3830), !dbg !7434
  %0 = bitcast %struct._PySSLPasswordInfo** %pw_info to i8*, !dbg !7435
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7435
  call void @llvm.dbg.declare(metadata %struct._PySSLPasswordInfo** %pw_info, metadata !2484, metadata !3830), !dbg !7436
  %1 = load i8*, i8** %userdata.addr, align 8, !dbg !7437, !tbaa !3860
  %2 = bitcast i8* %1 to %struct._PySSLPasswordInfo*, !dbg !7438
  store %struct._PySSLPasswordInfo* %2, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7436, !tbaa !3860
  %3 = bitcast %struct._object** %fn_ret to i8*, !dbg !7439
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7439
  call void @llvm.dbg.declare(metadata %struct._object** %fn_ret, metadata !2485, metadata !3830), !dbg !7440
  store %struct._object* null, %struct._object** %fn_ret, align 8, !dbg !7440, !tbaa !3860
  br label %do.body, !dbg !7441

do.body:                                          ; preds = %entry
  %4 = load i32, i32* @_ssl_locks_count, align 4, !dbg !7442, !tbaa !4372
  %cmp = icmp ugt i32 %4, 0, !dbg !7446
  br i1 %cmp, label %if.then, label %if.end, !dbg !7447

if.then:                                          ; preds = %do.body
  %5 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7448, !tbaa !3860
  %thread_state = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %5, i32 0, i32 0, !dbg !7451
  %6 = load %struct._ts*, %struct._ts** %thread_state, align 8, !dbg !7451, !tbaa !5049
  call void @PyEval_RestoreThread(%struct._ts* %6), !dbg !7452
  br label %if.end, !dbg !7453

if.end:                                           ; preds = %if.then, %do.body
  br label %do.cond, !dbg !7454

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7457

do.end:                                           ; preds = %do.cond
  %7 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7459, !tbaa !3860
  %callable = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %7, i32 0, i32 1, !dbg !7460
  %8 = load %struct._object*, %struct._object** %callable, align 8, !dbg !7460, !tbaa !5020
  %tobool = icmp ne %struct._object* %8, null, !dbg !7459
  br i1 %tobool, label %if.then.1, label %if.end.22, !dbg !7461

if.then.1:                                        ; preds = %do.end
  %9 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7462, !tbaa !3860
  %callable2 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %9, i32 0, i32 1, !dbg !7463
  %10 = load %struct._object*, %struct._object** %callable2, align 8, !dbg !7463, !tbaa !5020
  %call = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %10, i8* null), !dbg !7464
  store %struct._object* %call, %struct._object** %fn_ret, align 8, !dbg !7465, !tbaa !3860
  %11 = load %struct._object*, %struct._object** %fn_ret, align 8, !dbg !7466, !tbaa !3860
  %tobool3 = icmp ne %struct._object* %11, null, !dbg !7466
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !7468

if.then.4:                                        ; preds = %if.then.1
  br label %error, !dbg !7469

if.end.5:                                         ; preds = %if.then.1
  %12 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7471, !tbaa !3860
  %13 = load %struct._object*, %struct._object** %fn_ret, align 8, !dbg !7473, !tbaa !3860
  %call6 = call i32 @_pwinfo_set(%struct._PySSLPasswordInfo* %12, %struct._object* %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.119, i32 0, i32 0)), !dbg !7474
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7474
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !7475

if.then.8:                                        ; preds = %if.end.5
  br label %error, !dbg !7476

if.end.9:                                         ; preds = %if.end.5
  br label %do.body.10, !dbg !7478

do.body.10:                                       ; preds = %if.end.9
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7479
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !7479
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2486, metadata !3830), !dbg !7481
  %15 = load %struct._object*, %struct._object** %fn_ret, align 8, !dbg !7482, !tbaa !3860
  store %struct._object* %15, %struct._object** %_py_tmp, align 8, !dbg !7481, !tbaa !3860
  %16 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7483, !tbaa !3860
  %cmp11 = icmp ne %struct._object* %16, null, !dbg !7484
  br i1 %cmp11, label %if.then.12, label %if.end.19, !dbg !7485

if.then.12:                                       ; preds = %do.body.10
  store %struct._object* null, %struct._object** %fn_ret, align 8, !dbg !7486, !tbaa !3860
  br label %do.body.13, !dbg !7488

do.body.13:                                       ; preds = %if.then.12
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7489
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !7489
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2490, metadata !3830), !dbg !7491
  %18 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7492, !tbaa !3860
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !7491, !tbaa !3860
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7493, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !7495
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !7496, !tbaa !4101
  %dec = add i64 %20, -1, !dbg !7496
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7496, !tbaa !4101
  %cmp14 = icmp ne i64 %dec, 0, !dbg !7497
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !7498

if.then.15:                                       ; preds = %do.body.13
  br label %if.end.16, !dbg !7499

if.else:                                          ; preds = %do.body.13
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7501, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !7503
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7503, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !7504
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7504, !tbaa !4206
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7505, !tbaa !3860
  call void %23(%struct._object* %24), !dbg !7506
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7507
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !7507
  br label %do.cond.17, !dbg !7509

do.cond.17:                                       ; preds = %if.end.16
  br label %do.end.18, !dbg !7510

do.end.18:                                        ; preds = %do.cond.17
  br label %if.end.19, !dbg !7512

if.end.19:                                        ; preds = %do.end.18, %do.body.10
  %26 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7514
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !7514
  br label %do.cond.20, !dbg !7517

do.cond.20:                                       ; preds = %if.end.19
  br label %do.end.21, !dbg !7518

do.end.21:                                        ; preds = %do.cond.20
  br label %if.end.22, !dbg !7520

if.end.22:                                        ; preds = %do.end.21, %do.end
  %27 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7521, !tbaa !3860
  %size23 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %27, i32 0, i32 3, !dbg !7523
  %28 = load i32, i32* %size23, align 4, !dbg !7523, !tbaa !7347
  %29 = load i32, i32* %size.addr, align 4, !dbg !7524, !tbaa !4372
  %cmp24 = icmp sgt i32 %28, %29, !dbg !7525
  br i1 %cmp24, label %if.then.25, label %if.end.27, !dbg !7526

if.then.25:                                       ; preds = %if.end.22
  %30 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7527, !tbaa !3860
  %31 = load i32, i32* %size.addr, align 4, !dbg !7529, !tbaa !4372
  %call26 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %30, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117, i32 0, i32 0), i32 %31), !dbg !7530
  br label %error, !dbg !7531

if.end.27:                                        ; preds = %if.end.22
  br label %do.body.28, !dbg !7532

do.body.28:                                       ; preds = %if.end.27
  %32 = load i32, i32* @_ssl_locks_count, align 4, !dbg !7533, !tbaa !4372
  %cmp29 = icmp ugt i32 %32, 0, !dbg !7537
  br i1 %cmp29, label %if.then.30, label %if.end.33, !dbg !7538

if.then.30:                                       ; preds = %do.body.28
  %call31 = call %struct._ts* @PyEval_SaveThread(), !dbg !7539
  %33 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7542, !tbaa !3860
  %thread_state32 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %33, i32 0, i32 0, !dbg !7543
  store %struct._ts* %call31, %struct._ts** %thread_state32, align 8, !dbg !7544, !tbaa !5049
  br label %if.end.33, !dbg !7545

if.end.33:                                        ; preds = %if.then.30, %do.body.28
  br label %do.cond.34, !dbg !7546

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !7549

do.end.35:                                        ; preds = %do.cond.34
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !7551, !tbaa !3860
  %35 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7552, !tbaa !3860
  %password = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %35, i32 0, i32 2, !dbg !7553
  %36 = load i8*, i8** %password, align 8, !dbg !7553, !tbaa !5317
  %37 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7554, !tbaa !3860
  %size36 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %37, i32 0, i32 3, !dbg !7555
  %38 = load i32, i32* %size36, align 4, !dbg !7555, !tbaa !7347
  %conv = sext i32 %38 to i64, !dbg !7554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %conv, i32 1, i1 false), !dbg !7556
  %39 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7557, !tbaa !3860
  %size37 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %39, i32 0, i32 3, !dbg !7558
  %40 = load i32, i32* %size37, align 4, !dbg !7558, !tbaa !7347
  store i32 %40, i32* %retval, !dbg !7559
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7559

error:                                            ; preds = %if.then.25, %if.then.8, %if.then.4
  br label %do.body.38, !dbg !7560

do.body.38:                                       ; preds = %error
  %41 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7561
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !7561
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2494, metadata !3830), !dbg !7563
  %42 = load %struct._object*, %struct._object** %fn_ret, align 8, !dbg !7564, !tbaa !3860
  store %struct._object* %42, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7563, !tbaa !3860
  %43 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7565, !tbaa !3860
  %cmp39 = icmp ne %struct._object* %43, null, !dbg !7566
  br i1 %cmp39, label %if.then.41, label %if.end.55, !dbg !7567

if.then.41:                                       ; preds = %do.body.38
  br label %do.body.42, !dbg !7568

do.body.42:                                       ; preds = %if.then.41
  %44 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !7570
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !7570
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !2496, metadata !3830), !dbg !7572
  %45 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7573, !tbaa !3860
  store %struct._object* %45, %struct._object** %_py_decref_tmp43, align 8, !dbg !7572, !tbaa !3860
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !7574, !tbaa !3860
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !7576
  %47 = load i64, i64* %ob_refcnt44, align 8, !dbg !7577, !tbaa !4101
  %dec45 = add i64 %47, -1, !dbg !7577
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !7577, !tbaa !4101
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !7578
  br i1 %cmp46, label %if.then.48, label %if.else.49, !dbg !7579

if.then.48:                                       ; preds = %do.body.42
  br label %if.end.52, !dbg !7580

if.else.49:                                       ; preds = %do.body.42
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !7582, !tbaa !3860
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !7584
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !7584, !tbaa !4204
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !7585
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8, !dbg !7585, !tbaa !4206
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !7586, !tbaa !3860
  call void %50(%struct._object* %51), !dbg !7587
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  %52 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !7588
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !7588
  br label %do.cond.53, !dbg !7590

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !7591

do.end.54:                                        ; preds = %do.cond.53
  br label %if.end.55, !dbg !7593

if.end.55:                                        ; preds = %do.end.54, %do.body.38
  %53 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7595
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !7595
  br label %do.cond.56, !dbg !7598

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !7599

do.end.57:                                        ; preds = %do.cond.56
  br label %do.body.58, !dbg !7601

do.body.58:                                       ; preds = %do.end.57
  %54 = load i32, i32* @_ssl_locks_count, align 4, !dbg !7602, !tbaa !4372
  %cmp59 = icmp ugt i32 %54, 0, !dbg !7606
  br i1 %cmp59, label %if.then.61, label %if.end.64, !dbg !7607

if.then.61:                                       ; preds = %do.body.58
  %call62 = call %struct._ts* @PyEval_SaveThread(), !dbg !7608
  %55 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7611, !tbaa !3860
  %thread_state63 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %55, i32 0, i32 0, !dbg !7612
  store %struct._ts* %call62, %struct._ts** %thread_state63, align 8, !dbg !7613, !tbaa !5049
  br label %if.end.64, !dbg !7614

if.end.64:                                        ; preds = %if.then.61, %do.body.58
  br label %do.cond.65, !dbg !7615

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !7618

do.end.66:                                        ; preds = %do.cond.65
  %56 = load %struct._PySSLPasswordInfo*, %struct._PySSLPasswordInfo** %pw_info, align 8, !dbg !7620, !tbaa !3860
  %error67 = getelementptr inbounds %struct._PySSLPasswordInfo, %struct._PySSLPasswordInfo* %56, i32 0, i32 4, !dbg !7621
  store i32 1, i32* %error67, align 4, !dbg !7622, !tbaa !5088
  store i32 -1, i32* %retval, !dbg !7623
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7623

cleanup:                                          ; preds = %do.end.66, %do.end.35
  %57 = bitcast %struct._object** %fn_ret to i8*, !dbg !7624
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !7624
  %58 = bitcast %struct._PySSLPasswordInfo** %pw_info to i8*, !dbg !7624
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !7624
  %59 = load i32, i32* %retval, !dbg !7624
  ret i32 %59, !dbg !7624
}

declare void @SSL_CTX_set_default_passwd_cb_userdata(%struct.ssl_ctx_st*, i8*) #3

declare i32 @SSL_CTX_use_certificate_chain_file(%struct.ssl_ctx_st*, i8*) #3

declare %struct._object* @PyErr_SetFromErrno(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_setSSLError(i8* %errstr, i32 %errcode, i8* %filename, i32 %lineno) #0 {
entry:
  %errstr.addr = alloca i8*, align 8
  %errcode.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %lineno.addr = alloca i32, align 4
  store i8* %errstr, i8** %errstr.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %errstr.addr, metadata !2503, metadata !3830), !dbg !7625
  store i32 %errcode, i32* %errcode.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %errcode.addr, metadata !2504, metadata !3830), !dbg !7626
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !2505, metadata !3830), !dbg !7627
  store i32 %lineno, i32* %lineno.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %lineno.addr, metadata !2506, metadata !3830), !dbg !7628
  %0 = load i8*, i8** %errstr.addr, align 8, !dbg !7629, !tbaa !3860
  %cmp = icmp eq i8* %0, null, !dbg !7631
  br i1 %cmp, label %if.then, label %if.else, !dbg !7632

if.then:                                          ; preds = %entry
  %call = call i64 @ERR_peek_last_error(), !dbg !7633
  %conv = trunc i64 %call to i32, !dbg !7633
  store i32 %conv, i32* %errcode.addr, align 4, !dbg !7634, !tbaa !4372
  br label %if.end, !dbg !7635

if.else:                                          ; preds = %entry
  store i32 0, i32* %errcode.addr, align 4, !dbg !7636, !tbaa !4372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !7637, !tbaa !3860
  %2 = load i32, i32* %errcode.addr, align 4, !dbg !7638, !tbaa !4372
  %3 = load i8*, i8** %errstr.addr, align 8, !dbg !7639, !tbaa !3860
  %4 = load i32, i32* %lineno.addr, align 4, !dbg !7640, !tbaa !4372
  %5 = load i32, i32* %errcode.addr, align 4, !dbg !7641, !tbaa !4372
  %conv1 = sext i32 %5 to i64, !dbg !7641
  call void @fill_and_set_sslerror(%struct._object* %1, i32 %2, i8* %3, i32 %4, i64 %conv1), !dbg !7642
  call void @ERR_clear_error(), !dbg !7643
  ret %struct._object* null, !dbg !7644
}

declare i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st*, i8*, i32) #3

declare i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st*) #3

declare %struct._object* @PyUnicode_AsEncodedString(%struct._object*, i8*, i8*) #3

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare %struct._object* @PyObject_CallFunctionObjArgs(%struct._object*, ...) #3

declare i64 @ERR_peek_last_error() #3

; Function Attrs: nounwind uwtable
define internal void @fill_and_set_sslerror(%struct._object* %type, i32 %ssl_errno, i8* %errstr, i32 %lineno, i64 %errcode) #0 {
entry:
  %type.addr = alloca %struct._object*, align 8
  %ssl_errno.addr = alloca i32, align 4
  %errstr.addr = alloca i8*, align 8
  %lineno.addr = alloca i32, align 4
  %errcode.addr = alloca i64, align 8
  %err_value = alloca %struct._object*, align 8
  %reason_obj = alloca %struct._object*, align 8
  %lib_obj = alloca %struct._object*, align 8
  %init_value = alloca %struct._object*, align 8
  %msg = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %lib = alloca i32, align 4
  %reason = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp109 = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !2511, metadata !3830), !dbg !7645
  store i32 %ssl_errno, i32* %ssl_errno.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %ssl_errno.addr, metadata !2512, metadata !3830), !dbg !7646
  store i8* %errstr, i8** %errstr.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %errstr.addr, metadata !2513, metadata !3830), !dbg !7647
  store i32 %lineno, i32* %lineno.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %lineno.addr, metadata !2514, metadata !3830), !dbg !7648
  store i64 %errcode, i64* %errcode.addr, align 8, !tbaa !4354
  call void @llvm.dbg.declare(metadata i64* %errcode.addr, metadata !2515, metadata !3830), !dbg !7649
  %0 = bitcast %struct._object** %err_value to i8*, !dbg !7650
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7650
  call void @llvm.dbg.declare(metadata %struct._object** %err_value, metadata !2516, metadata !3830), !dbg !7651
  store %struct._object* null, %struct._object** %err_value, align 8, !dbg !7651, !tbaa !3860
  %1 = bitcast %struct._object** %reason_obj to i8*, !dbg !7650
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7650
  call void @llvm.dbg.declare(metadata %struct._object** %reason_obj, metadata !2517, metadata !3830), !dbg !7652
  store %struct._object* null, %struct._object** %reason_obj, align 8, !dbg !7652, !tbaa !3860
  %2 = bitcast %struct._object** %lib_obj to i8*, !dbg !7650
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7650
  call void @llvm.dbg.declare(metadata %struct._object** %lib_obj, metadata !2518, metadata !3830), !dbg !7653
  store %struct._object* null, %struct._object** %lib_obj, align 8, !dbg !7653, !tbaa !3860
  %3 = bitcast %struct._object** %init_value to i8*, !dbg !7654
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7654
  call void @llvm.dbg.declare(metadata %struct._object** %init_value, metadata !2519, metadata !3830), !dbg !7655
  %4 = bitcast %struct._object** %msg to i8*, !dbg !7654
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !7654
  call void @llvm.dbg.declare(metadata %struct._object** %msg, metadata !2520, metadata !3830), !dbg !7656
  %5 = bitcast %struct._object** %key to i8*, !dbg !7654
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !7654
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !2521, metadata !3830), !dbg !7657
  %6 = load i64, i64* %errcode.addr, align 8, !dbg !7658, !tbaa !4354
  %cmp = icmp ne i64 %6, 0, !dbg !7659
  br i1 %cmp, label %if.then, label %if.end.45, !dbg !7660

if.then:                                          ; preds = %entry
  %7 = bitcast i32* %lib to i8*, !dbg !7661
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !7661
  call void @llvm.dbg.declare(metadata i32* %lib, metadata !2522, metadata !3830), !dbg !7662
  %8 = bitcast i32* %reason to i8*, !dbg !7661
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !7661
  call void @llvm.dbg.declare(metadata i32* %reason, metadata !2525, metadata !3830), !dbg !7663
  %9 = load i64, i64* %errcode.addr, align 8, !dbg !7664, !tbaa !4354
  %shr = lshr i64 %9, 24, !dbg !7665
  %and = and i64 %shr, 255, !dbg !7666
  %conv = trunc i64 %and to i32, !dbg !7667
  store i32 %conv, i32* %lib, align 4, !dbg !7668, !tbaa !4372
  %10 = load i64, i64* %errcode.addr, align 8, !dbg !7669, !tbaa !4354
  %and1 = and i64 %10, 4095, !dbg !7670
  %conv2 = trunc i64 %and1 to i32, !dbg !7671
  store i32 %conv2, i32* %reason, align 4, !dbg !7672, !tbaa !4372
  %11 = load i32, i32* %lib, align 4, !dbg !7673, !tbaa !4372
  %12 = load i32, i32* %reason, align 4, !dbg !7674, !tbaa !4372
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i32 %11, i32 %12), !dbg !7675
  store %struct._object* %call, %struct._object** %key, align 8, !dbg !7676, !tbaa !3860
  %13 = load %struct._object*, %struct._object** %key, align 8, !dbg !7677, !tbaa !3860
  %cmp3 = icmp eq %struct._object* %13, null, !dbg !7679
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !7680

if.then.5:                                        ; preds = %if.then
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7681

if.end:                                           ; preds = %if.then
  %14 = load %struct._object*, %struct._object** @err_codes_to_names, align 8, !dbg !7682, !tbaa !3860
  %15 = load %struct._object*, %struct._object** %key, align 8, !dbg !7683, !tbaa !3860
  %call6 = call %struct._object* @PyDict_GetItem(%struct._object* %14, %struct._object* %15), !dbg !7684
  store %struct._object* %call6, %struct._object** %reason_obj, align 8, !dbg !7685, !tbaa !3860
  br label %do.body, !dbg !7686

do.body:                                          ; preds = %if.end
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7687
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !7687
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2526, metadata !3830), !dbg !7689
  %17 = load %struct._object*, %struct._object** %key, align 8, !dbg !7690, !tbaa !3860
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !7689, !tbaa !3860
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7691, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !7693
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !7694, !tbaa !4101
  %dec = add i64 %19, -1, !dbg !7694
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7694, !tbaa !4101
  %cmp7 = icmp ne i64 %dec, 0, !dbg !7695
  br i1 %cmp7, label %if.then.9, label %if.else, !dbg !7696

if.then.9:                                        ; preds = %do.body
  br label %if.end.10, !dbg !7697

if.else:                                          ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7699, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !7701
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7701, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !7702
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7702, !tbaa !4206
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7703, !tbaa !3860
  call void %22(%struct._object* %23), !dbg !7704
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7705
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !7705
  br label %do.cond, !dbg !7707

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !7708

do.end:                                           ; preds = %do.cond
  %25 = load %struct._object*, %struct._object** %reason_obj, align 8, !dbg !7710, !tbaa !3860
  %cmp11 = icmp eq %struct._object* %25, null, !dbg !7712
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !7713

if.then.13:                                       ; preds = %do.end
  call void @PyErr_Clear(), !dbg !7714
  br label %if.end.14, !dbg !7716

if.end.14:                                        ; preds = %if.then.13, %do.end
  %26 = load i32, i32* %lib, align 4, !dbg !7717, !tbaa !4372
  %conv15 = sext i32 %26 to i64, !dbg !7717
  %call16 = call %struct._object* @PyLong_FromLong(i64 %conv15), !dbg !7718
  store %struct._object* %call16, %struct._object** %key, align 8, !dbg !7719, !tbaa !3860
  %27 = load %struct._object*, %struct._object** %key, align 8, !dbg !7720, !tbaa !3860
  %cmp17 = icmp eq %struct._object* %27, null, !dbg !7722
  br i1 %cmp17, label %if.then.19, label %if.end.20, !dbg !7723

if.then.19:                                       ; preds = %if.end.14
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7724

if.end.20:                                        ; preds = %if.end.14
  %28 = load %struct._object*, %struct._object** @lib_codes_to_names, align 8, !dbg !7725, !tbaa !3860
  %29 = load %struct._object*, %struct._object** %key, align 8, !dbg !7726, !tbaa !3860
  %call21 = call %struct._object* @PyDict_GetItem(%struct._object* %28, %struct._object* %29), !dbg !7727
  store %struct._object* %call21, %struct._object** %lib_obj, align 8, !dbg !7728, !tbaa !3860
  br label %do.body.22, !dbg !7729

do.body.22:                                       ; preds = %if.end.20
  %30 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7730
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !7730
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !2528, metadata !3830), !dbg !7732
  %31 = load %struct._object*, %struct._object** %key, align 8, !dbg !7733, !tbaa !3860
  store %struct._object* %31, %struct._object** %_py_decref_tmp23, align 8, !dbg !7732, !tbaa !3860
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7734, !tbaa !3860
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !7736
  %33 = load i64, i64* %ob_refcnt24, align 8, !dbg !7737, !tbaa !4101
  %dec25 = add i64 %33, -1, !dbg !7737
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !7737, !tbaa !4101
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !7738
  br i1 %cmp26, label %if.then.28, label %if.else.29, !dbg !7739

if.then.28:                                       ; preds = %do.body.22
  br label %if.end.32, !dbg !7740

if.else.29:                                       ; preds = %do.body.22
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7742, !tbaa !3860
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !7744
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !7744, !tbaa !4204
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !7745
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8, !dbg !7745, !tbaa !4206
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7746, !tbaa !3860
  call void %36(%struct._object* %37), !dbg !7747
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  %38 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7748
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !7748
  br label %do.cond.33, !dbg !7749

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !7750

do.end.34:                                        ; preds = %do.cond.33
  %39 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7752, !tbaa !3860
  %cmp35 = icmp eq %struct._object* %39, null, !dbg !7754
  br i1 %cmp35, label %if.then.37, label %if.end.38, !dbg !7755

if.then.37:                                       ; preds = %do.end.34
  call void @PyErr_Clear(), !dbg !7756
  br label %if.end.38, !dbg !7758

if.end.38:                                        ; preds = %if.then.37, %do.end.34
  %40 = load i8*, i8** %errstr.addr, align 8, !dbg !7759, !tbaa !3860
  %cmp39 = icmp eq i8* %40, null, !dbg !7761
  br i1 %cmp39, label %if.then.41, label %if.end.43, !dbg !7762

if.then.41:                                       ; preds = %if.end.38
  %41 = load i64, i64* %errcode.addr, align 8, !dbg !7763, !tbaa !4354
  %call42 = call i8* @ERR_reason_error_string(i64 %41), !dbg !7764
  store i8* %call42, i8** %errstr.addr, align 8, !dbg !7765, !tbaa !3860
  br label %if.end.43, !dbg !7766

if.end.43:                                        ; preds = %if.then.41, %if.end.38
  store i32 0, i32* %cleanup.dest.slot, !dbg !7767
  br label %cleanup, !dbg !7767

cleanup:                                          ; preds = %if.end.43, %if.then.19, %if.then.5
  %42 = bitcast i32* %reason to i8*, !dbg !7768
  call void @llvm.lifetime.end(i64 4, i8* %42) #1, !dbg !7768
  %43 = bitcast i32* %lib to i8*, !dbg !7768
  call void @llvm.lifetime.end(i64 4, i8* %43) #1, !dbg !7768
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf, label %fail, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.45, !dbg !7770

if.end.45:                                        ; preds = %cleanup.cont, %entry
  %44 = load i8*, i8** %errstr.addr, align 8, !dbg !7771, !tbaa !3860
  %cmp46 = icmp eq i8* %44, null, !dbg !7773
  br i1 %cmp46, label %if.then.48, label %if.end.49, !dbg !7774

if.then.48:                                       ; preds = %if.end.45
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i32 0, i32 0), i8** %errstr.addr, align 8, !dbg !7775, !tbaa !3860
  br label %if.end.49, !dbg !7776

if.end.49:                                        ; preds = %if.then.48, %if.end.45
  %45 = load %struct._object*, %struct._object** %reason_obj, align 8, !dbg !7777, !tbaa !3860
  %tobool = icmp ne %struct._object* %45, null, !dbg !7777
  br i1 %tobool, label %land.lhs.true, label %if.else.53, !dbg !7779

land.lhs.true:                                    ; preds = %if.end.49
  %46 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7780, !tbaa !3860
  %tobool50 = icmp ne %struct._object* %46, null, !dbg !7780
  br i1 %tobool50, label %if.then.51, label %if.else.53, !dbg !7782

if.then.51:                                       ; preds = %land.lhs.true
  %47 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7783, !tbaa !3860
  %48 = load %struct._object*, %struct._object** %reason_obj, align 8, !dbg !7784, !tbaa !3860
  %49 = load i8*, i8** %errstr.addr, align 8, !dbg !7785, !tbaa !3860
  %50 = load i32, i32* %lineno.addr, align 4, !dbg !7786, !tbaa !4372
  %call52 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.123, i32 0, i32 0), %struct._object* %47, %struct._object* %48, i8* %49, i32 %50), !dbg !7787
  store %struct._object* %call52, %struct._object** %msg, align 8, !dbg !7788, !tbaa !3860
  br label %if.end.60, !dbg !7789

if.else.53:                                       ; preds = %land.lhs.true, %if.end.49
  %51 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7790, !tbaa !3860
  %tobool54 = icmp ne %struct._object* %51, null, !dbg !7790
  br i1 %tobool54, label %if.then.55, label %if.else.57, !dbg !7792

if.then.55:                                       ; preds = %if.else.53
  %52 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7793, !tbaa !3860
  %53 = load i8*, i8** %errstr.addr, align 8, !dbg !7794, !tbaa !3860
  %54 = load i32, i32* %lineno.addr, align 4, !dbg !7795, !tbaa !4372
  %call56 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.124, i32 0, i32 0), %struct._object* %52, i8* %53, i32 %54), !dbg !7796
  store %struct._object* %call56, %struct._object** %msg, align 8, !dbg !7797, !tbaa !3860
  br label %if.end.59, !dbg !7798

if.else.57:                                       ; preds = %if.else.53
  %55 = load i8*, i8** %errstr.addr, align 8, !dbg !7799, !tbaa !3860
  %56 = load i32, i32* %lineno.addr, align 4, !dbg !7800, !tbaa !4372
  %call58 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.125, i32 0, i32 0), i8* %55, i32 %56), !dbg !7801
  store %struct._object* %call58, %struct._object** %msg, align 8, !dbg !7802, !tbaa !3860
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.57, %if.then.55
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.then.51
  %57 = load %struct._object*, %struct._object** %msg, align 8, !dbg !7803, !tbaa !3860
  %cmp61 = icmp eq %struct._object* %57, null, !dbg !7805
  br i1 %cmp61, label %if.then.63, label %if.end.64, !dbg !7806

if.then.63:                                       ; preds = %if.end.60
  br label %fail, !dbg !7807

if.end.64:                                        ; preds = %if.end.60
  %58 = load i32, i32* %ssl_errno.addr, align 4, !dbg !7808, !tbaa !4372
  %59 = load %struct._object*, %struct._object** %msg, align 8, !dbg !7809, !tbaa !3860
  %call65 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i32 0, i32 0), i32 %58, %struct._object* %59), !dbg !7810
  store %struct._object* %call65, %struct._object** %init_value, align 8, !dbg !7811, !tbaa !3860
  %60 = load %struct._object*, %struct._object** %init_value, align 8, !dbg !7812, !tbaa !3860
  %cmp66 = icmp eq %struct._object* %60, null, !dbg !7814
  br i1 %cmp66, label %if.then.68, label %if.end.69, !dbg !7815

if.then.68:                                       ; preds = %if.end.64
  br label %fail, !dbg !7816

if.end.69:                                        ; preds = %if.end.64
  %61 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !7817, !tbaa !3860
  %62 = load %struct._object*, %struct._object** %init_value, align 8, !dbg !7818, !tbaa !3860
  %call70 = call %struct._object* @PyObject_CallObject(%struct._object* %61, %struct._object* %62), !dbg !7819
  store %struct._object* %call70, %struct._object** %err_value, align 8, !dbg !7820, !tbaa !3860
  br label %do.body.71, !dbg !7821

do.body.71:                                       ; preds = %if.end.69
  %63 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !7822
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !7822
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp72, metadata !2530, metadata !3830), !dbg !7824
  %64 = load %struct._object*, %struct._object** %init_value, align 8, !dbg !7825, !tbaa !3860
  store %struct._object* %64, %struct._object** %_py_decref_tmp72, align 8, !dbg !7824, !tbaa !3860
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !7826, !tbaa !3860
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !7828
  %66 = load i64, i64* %ob_refcnt73, align 8, !dbg !7829, !tbaa !4101
  %dec74 = add i64 %66, -1, !dbg !7829
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !7829, !tbaa !4101
  %cmp75 = icmp ne i64 %dec74, 0, !dbg !7830
  br i1 %cmp75, label %if.then.77, label %if.else.78, !dbg !7831

if.then.77:                                       ; preds = %do.body.71
  br label %if.end.81, !dbg !7832

if.else.78:                                       ; preds = %do.body.71
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !7834, !tbaa !3860
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !7836
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8, !dbg !7836, !tbaa !4204
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !7837
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8, !dbg !7837, !tbaa !4206
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !7838, !tbaa !3860
  call void %69(%struct._object* %70), !dbg !7839
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  %71 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !7840
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !7840
  br label %do.cond.82, !dbg !7842

do.cond.82:                                       ; preds = %if.end.81
  br label %do.end.83, !dbg !7843

do.end.83:                                        ; preds = %do.cond.82
  %72 = load %struct._object*, %struct._object** %err_value, align 8, !dbg !7845, !tbaa !3860
  %cmp84 = icmp eq %struct._object* %72, null, !dbg !7847
  br i1 %cmp84, label %if.then.86, label %if.end.87, !dbg !7848

if.then.86:                                       ; preds = %do.end.83
  br label %fail, !dbg !7849

if.end.87:                                        ; preds = %do.end.83
  %73 = load %struct._object*, %struct._object** %reason_obj, align 8, !dbg !7850, !tbaa !3860
  %cmp88 = icmp eq %struct._object* %73, null, !dbg !7852
  br i1 %cmp88, label %if.then.90, label %if.end.91, !dbg !7853

if.then.90:                                       ; preds = %if.end.87
  store %struct._object* @_Py_NoneStruct, %struct._object** %reason_obj, align 8, !dbg !7854, !tbaa !3860
  br label %if.end.91, !dbg !7855

if.end.91:                                        ; preds = %if.then.90, %if.end.87
  %74 = load %struct._object*, %struct._object** %err_value, align 8, !dbg !7856, !tbaa !3860
  %75 = load %struct._object*, %struct._object** %reason_obj, align 8, !dbg !7858, !tbaa !3860
  %call92 = call i32 @_PyObject_SetAttrId(%struct._object* %74, %struct._Py_Identifier* @fill_and_set_sslerror.PyId_reason, %struct._object* %75), !dbg !7859
  %tobool93 = icmp ne i32 %call92, 0, !dbg !7859
  br i1 %tobool93, label %if.then.94, label %if.end.95, !dbg !7860

if.then.94:                                       ; preds = %if.end.91
  br label %fail, !dbg !7861

if.end.95:                                        ; preds = %if.end.91
  %76 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7862, !tbaa !3860
  %cmp96 = icmp eq %struct._object* %76, null, !dbg !7864
  br i1 %cmp96, label %if.then.98, label %if.end.99, !dbg !7865

if.then.98:                                       ; preds = %if.end.95
  store %struct._object* @_Py_NoneStruct, %struct._object** %lib_obj, align 8, !dbg !7866, !tbaa !3860
  br label %if.end.99, !dbg !7867

if.end.99:                                        ; preds = %if.then.98, %if.end.95
  %77 = load %struct._object*, %struct._object** %err_value, align 8, !dbg !7868, !tbaa !3860
  %78 = load %struct._object*, %struct._object** %lib_obj, align 8, !dbg !7870, !tbaa !3860
  %call100 = call i32 @_PyObject_SetAttrId(%struct._object* %77, %struct._Py_Identifier* @fill_and_set_sslerror.PyId_library, %struct._object* %78), !dbg !7871
  %tobool101 = icmp ne i32 %call100, 0, !dbg !7871
  br i1 %tobool101, label %if.then.102, label %if.end.103, !dbg !7872

if.then.102:                                      ; preds = %if.end.99
  br label %fail, !dbg !7873

if.end.103:                                       ; preds = %if.end.99
  %79 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !7874, !tbaa !3860
  %80 = load %struct._object*, %struct._object** %err_value, align 8, !dbg !7875, !tbaa !3860
  call void @PyErr_SetObject(%struct._object* %79, %struct._object* %80), !dbg !7876
  br label %fail, !dbg !7876

fail:                                             ; preds = %LeafBlock, %if.end.103, %if.then.102, %if.then.94, %if.then.86, %if.then.68, %if.then.63
  br label %do.body.104, !dbg !7877

do.body.104:                                      ; preds = %fail
  %81 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7878
  call void @llvm.lifetime.start(i64 8, i8* %81) #1, !dbg !7878
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2532, metadata !3830), !dbg !7880
  %82 = load %struct._object*, %struct._object** %err_value, align 8, !dbg !7881, !tbaa !3860
  store %struct._object* %82, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7880, !tbaa !3860
  %83 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7882, !tbaa !3860
  %cmp105 = icmp ne %struct._object* %83, null, !dbg !7883
  br i1 %cmp105, label %if.then.107, label %if.end.121, !dbg !7884

if.then.107:                                      ; preds = %do.body.104
  br label %do.body.108, !dbg !7885

do.body.108:                                      ; preds = %if.then.107
  %84 = bitcast %struct._object** %_py_decref_tmp109 to i8*, !dbg !7887
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !7887
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp109, metadata !2534, metadata !3830), !dbg !7889
  %85 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7890, !tbaa !3860
  store %struct._object* %85, %struct._object** %_py_decref_tmp109, align 8, !dbg !7889, !tbaa !3860
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !7891, !tbaa !3860
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !7893
  %87 = load i64, i64* %ob_refcnt110, align 8, !dbg !7894, !tbaa !4101
  %dec111 = add i64 %87, -1, !dbg !7894
  store i64 %dec111, i64* %ob_refcnt110, align 8, !dbg !7894, !tbaa !4101
  %cmp112 = icmp ne i64 %dec111, 0, !dbg !7895
  br i1 %cmp112, label %if.then.114, label %if.else.115, !dbg !7896

if.then.114:                                      ; preds = %do.body.108
  br label %if.end.118, !dbg !7897

if.else.115:                                      ; preds = %do.body.108
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !7899, !tbaa !3860
  %ob_type116 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !7901
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type116, align 8, !dbg !7901, !tbaa !4204
  %tp_dealloc117 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !7902
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc117, align 8, !dbg !7902, !tbaa !4206
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !7903, !tbaa !3860
  call void %90(%struct._object* %91), !dbg !7904
  br label %if.end.118

if.end.118:                                       ; preds = %if.else.115, %if.then.114
  %92 = bitcast %struct._object** %_py_decref_tmp109 to i8*, !dbg !7905
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !7905
  br label %do.cond.119, !dbg !7907

do.cond.119:                                      ; preds = %if.end.118
  br label %do.end.120, !dbg !7908

do.end.120:                                       ; preds = %do.cond.119
  br label %if.end.121, !dbg !7910

if.end.121:                                       ; preds = %do.end.120, %do.body.104
  %93 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7912
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !7912
  br label %do.cond.122, !dbg !7915

do.cond.122:                                      ; preds = %if.end.121
  br label %do.end.123, !dbg !7916

do.end.123:                                       ; preds = %do.cond.122
  %94 = bitcast %struct._object** %key to i8*, !dbg !7918
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !7918
  %95 = bitcast %struct._object** %msg to i8*, !dbg !7918
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !7918
  %96 = bitcast %struct._object** %init_value to i8*, !dbg !7918
  call void @llvm.lifetime.end(i64 8, i8* %96) #1, !dbg !7918
  %97 = bitcast %struct._object** %lib_obj to i8*, !dbg !7918
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !7918
  %98 = bitcast %struct._object** %reason_obj to i8*, !dbg !7918
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !7918
  %99 = bitcast %struct._object** %err_value to i8*, !dbg !7918
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !7918
  ret void, !dbg !7918
}

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #3

declare i8* @ERR_reason_error_string(i64) #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

declare i32 @_PyObject_SetAttrId(%struct._object*, %struct._Py_Identifier*, %struct._object*) #3

declare void @PyErr_SetObject(%struct._object*, %struct._object*) #3

declare %struct._IO_FILE* @_Py_fopen_obj(%struct._object*, i8*) #3

declare %struct._object* @PyErr_Occurred() #3

declare %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object*, %struct._object*) #3

declare %struct.dh_st* @PEM_read_DHparams(%struct._IO_FILE*, %struct.dh_st**, i32 (i8*, i32, i32, i8*)*, i8*) #3

declare i32 @fclose(%struct._IO_FILE*) #3

declare i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st*, i32, i64, i8*) #3

declare void @DH_free(%struct.dh_st*) #3

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #3

declare i32 @PyBuffer_IsContiguous(%struct.bufferinfo*, i8 signext) #3

; Function Attrs: nounwind uwtable
define internal i32 @_add_ca_certs(%struct.PySSLContext* %self, i8* %data, i64 %len, i32 %filetype) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLContext*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %filetype.addr = alloca i32, align 4
  %biobuf = alloca %struct.bio_st*, align 8
  %store = alloca %struct.x509_store_st*, align 8
  %retval1 = alloca i32, align 4
  %err = alloca i32, align 4
  %loaded = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %cert = alloca %struct.x509_st*, align 8
  %r = alloca i32, align 4
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !2586, metadata !3830), !dbg !7919
  store i8* %data, i8** %data.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2587, metadata !3830), !dbg !7920
  store i64 %len, i64* %len.addr, align 8, !tbaa !4354
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !2588, metadata !3830), !dbg !7921
  store i32 %filetype, i32* %filetype.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %filetype.addr, metadata !2589, metadata !3830), !dbg !7922
  %0 = bitcast %struct.bio_st** %biobuf to i8*, !dbg !7923
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7923
  call void @llvm.dbg.declare(metadata %struct.bio_st** %biobuf, metadata !2590, metadata !3830), !dbg !7924
  store %struct.bio_st* null, %struct.bio_st** %biobuf, align 8, !dbg !7924, !tbaa !3860
  %1 = bitcast %struct.x509_store_st** %store to i8*, !dbg !7925
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7925
  call void @llvm.dbg.declare(metadata %struct.x509_store_st** %store, metadata !2591, metadata !3830), !dbg !7926
  %2 = bitcast i32* %retval1 to i8*, !dbg !7927
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !7927
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !2592, metadata !3830), !dbg !7928
  store i32 0, i32* %retval1, align 4, !dbg !7928, !tbaa !4372
  %3 = bitcast i32* %err to i8*, !dbg !7927
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !7927
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2593, metadata !3830), !dbg !7929
  %4 = bitcast i32* %loaded to i8*, !dbg !7927
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !7927
  call void @llvm.dbg.declare(metadata i32* %loaded, metadata !2594, metadata !3830), !dbg !7930
  store i32 0, i32* %loaded, align 4, !dbg !7930, !tbaa !4372
  %5 = load i64, i64* %len.addr, align 8, !dbg !7931, !tbaa !4354
  %cmp = icmp sle i64 %5, 0, !dbg !7933
  br i1 %cmp, label %if.then, label %if.else, !dbg !7934

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7935, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.137, i32 0, i32 0)), !dbg !7937
  store i32 -1, i32* %retval, !dbg !7938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !7938

if.else:                                          ; preds = %entry
  %7 = load i64, i64* %len.addr, align 8, !dbg !7939, !tbaa !4354
  %cmp2 = icmp sgt i64 %7, 2147483647, !dbg !7941
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !7942

if.then.3:                                        ; preds = %if.else
  %8 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !7943, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.138, i32 0, i32 0)), !dbg !7945
  store i32 -1, i32* %retval, !dbg !7946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !7946

if.end:                                           ; preds = %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end
  %9 = load i8*, i8** %data.addr, align 8, !dbg !7947, !tbaa !3860
  %10 = load i64, i64* %len.addr, align 8, !dbg !7948, !tbaa !4354
  %conv = trunc i64 %10 to i32, !dbg !7949
  %call = call %struct.bio_st* @BIO_new_mem_buf(i8* %9, i32 %conv), !dbg !7950
  store %struct.bio_st* %call, %struct.bio_st** %biobuf, align 8, !dbg !7951, !tbaa !3860
  %11 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !7952, !tbaa !3860
  %cmp5 = icmp eq %struct.bio_st* %11, null, !dbg !7954
  br i1 %cmp5, label %if.then.7, label %if.end.9, !dbg !7955

if.then.7:                                        ; preds = %if.end.4
  %call8 = call %struct._object* @_setSSLError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2581), !dbg !7956
  store i32 -1, i32* %retval, !dbg !7958
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !7958

if.end.9:                                         ; preds = %if.end.4
  %12 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !7959, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %12, i32 0, i32 1, !dbg !7960
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !7960, !tbaa !4529
  %call10 = call %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* %13), !dbg !7961
  store %struct.x509_store_st* %call10, %struct.x509_store_st** %store, align 8, !dbg !7962, !tbaa !3860
  br label %while.cond, !dbg !7963

while.cond:                                       ; preds = %cleanup.cont, %if.end.9
  br label %while.body, !dbg !7964

while.body:                                       ; preds = %while.cond
  %14 = bitcast %struct.x509_st** %cert to i8*, !dbg !7967
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !7967
  call void @llvm.dbg.declare(metadata %struct.x509_st** %cert, metadata !2595, metadata !3830), !dbg !7968
  store %struct.x509_st* null, %struct.x509_st** %cert, align 8, !dbg !7968, !tbaa !3860
  %15 = bitcast i32* %r to i8*, !dbg !7969
  call void @llvm.lifetime.start(i64 4, i8* %15) #1, !dbg !7969
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2597, metadata !3830), !dbg !7970
  %16 = load i32, i32* %filetype.addr, align 4, !dbg !7971, !tbaa !4372
  %cmp11 = icmp eq i32 %16, 2, !dbg !7973
  br i1 %cmp11, label %if.then.13, label %if.else.15, !dbg !7974

if.then.13:                                       ; preds = %while.body
  %17 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !7975, !tbaa !3860
  %call14 = call %struct.x509_st* @d2i_X509_bio(%struct.bio_st* %17, %struct.x509_st** null), !dbg !7977
  store %struct.x509_st* %call14, %struct.x509_st** %cert, align 8, !dbg !7978, !tbaa !3860
  br label %if.end.19, !dbg !7979

if.else.15:                                       ; preds = %while.body
  %18 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !7980, !tbaa !3860
  %19 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !7982, !tbaa !3860
  %ctx16 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %19, i32 0, i32 1, !dbg !7983
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx16, align 8, !dbg !7983, !tbaa !4529
  %default_passwd_callback = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %20, i32 0, i32 17, !dbg !7984
  %21 = load i32 (i8*, i32, i32, i8*)*, i32 (i8*, i32, i32, i8*)** %default_passwd_callback, align 8, !dbg !7984, !tbaa !4953
  %22 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !7985, !tbaa !3860
  %ctx17 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %22, i32 0, i32 1, !dbg !7986
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx17, align 8, !dbg !7986, !tbaa !4529
  %default_passwd_callback_userdata = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %23, i32 0, i32 18, !dbg !7987
  %24 = load i8*, i8** %default_passwd_callback_userdata, align 8, !dbg !7987, !tbaa !4962
  %call18 = call %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* %18, %struct.x509_st** null, i32 (i8*, i32, i32, i8*)* %21, i8* %24), !dbg !7988
  store %struct.x509_st* %call18, %struct.x509_st** %cert, align 8, !dbg !7989, !tbaa !3860
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.15, %if.then.13
  %25 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !7990, !tbaa !3860
  %cmp20 = icmp eq %struct.x509_st* %25, null, !dbg !7992
  br i1 %cmp20, label %if.then.22, label %if.end.23, !dbg !7993

if.then.22:                                       ; preds = %if.end.19
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7994

if.end.23:                                        ; preds = %if.end.19
  %26 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !7996, !tbaa !3860
  %27 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !7997, !tbaa !3860
  %call24 = call i32 @X509_STORE_add_cert(%struct.x509_store_st* %26, %struct.x509_st* %27), !dbg !7998
  store i32 %call24, i32* %r, align 4, !dbg !7999, !tbaa !4372
  %28 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !8000, !tbaa !3860
  call void @X509_free(%struct.x509_st* %28), !dbg !8001
  %29 = load i32, i32* %r, align 4, !dbg !8002, !tbaa !4372
  %tobool = icmp ne i32 %29, 0, !dbg !8002
  br i1 %tobool, label %if.end.40, label %if.then.25, !dbg !8004

if.then.25:                                       ; preds = %if.end.23
  %call26 = call i64 @ERR_peek_last_error(), !dbg !8005
  %conv27 = trunc i64 %call26 to i32, !dbg !8005
  store i32 %conv27, i32* %err, align 4, !dbg !8007, !tbaa !4372
  %30 = load i32, i32* %err, align 4, !dbg !8008, !tbaa !4372
  %conv28 = sext i32 %30 to i64, !dbg !8010
  %shr = lshr i64 %conv28, 24, !dbg !8011
  %and = and i64 %shr, 255, !dbg !8012
  %conv29 = trunc i64 %and to i32, !dbg !8013
  %cmp30 = icmp eq i32 %conv29, 11, !dbg !8014
  br i1 %cmp30, label %land.lhs.true, label %if.else.38, !dbg !8015

land.lhs.true:                                    ; preds = %if.then.25
  %31 = load i32, i32* %err, align 4, !dbg !8016, !tbaa !4372
  %conv32 = sext i32 %31 to i64, !dbg !8017
  %and33 = and i64 %conv32, 4095, !dbg !8018
  %conv34 = trunc i64 %and33 to i32, !dbg !8019
  %cmp35 = icmp eq i32 %conv34, 101, !dbg !8020
  br i1 %cmp35, label %if.then.37, label %if.else.38, !dbg !8021

if.then.37:                                       ; preds = %land.lhs.true
  call void @ERR_clear_error(), !dbg !8022
  br label %if.end.39, !dbg !8024

if.else.38:                                       ; preds = %land.lhs.true, %if.then.25
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8025

if.end.39:                                        ; preds = %if.then.37
  br label %if.end.40, !dbg !8027

if.end.40:                                        ; preds = %if.end.39, %if.end.23
  %32 = load i32, i32* %loaded, align 4, !dbg !8028, !tbaa !4372
  %inc = add i32 %32, 1, !dbg !8028
  store i32 %inc, i32* %loaded, align 4, !dbg !8028, !tbaa !4372
  store i32 0, i32* %cleanup.dest.slot, !dbg !8029
  br label %cleanup, !dbg !8029

cleanup:                                          ; preds = %if.end.40, %if.else.38, %if.then.22
  %33 = bitcast i32* %r to i8*, !dbg !8030
  call void @llvm.lifetime.end(i64 4, i8* %33) #1, !dbg !8030
  %34 = bitcast %struct.x509_st** %cert to i8*, !dbg !8030
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !8030
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 3
  br i1 %SwitchLeaf, label %while.end, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %while.cond, !dbg !7963

while.end:                                        ; preds = %LeafBlock
  %call42 = call i64 @ERR_peek_last_error(), !dbg !8031
  %conv43 = trunc i64 %call42 to i32, !dbg !8031
  store i32 %conv43, i32* %err, align 4, !dbg !8032, !tbaa !4372
  %35 = load i32, i32* %filetype.addr, align 4, !dbg !8033, !tbaa !4372
  %cmp44 = icmp eq i32 %35, 2, !dbg !8035
  br i1 %cmp44, label %land.lhs.true.46, label %if.else.63, !dbg !8036

land.lhs.true.46:                                 ; preds = %while.end
  %36 = load i32, i32* %loaded, align 4, !dbg !8037, !tbaa !4372
  %cmp47 = icmp sgt i32 %36, 0, !dbg !8038
  br i1 %cmp47, label %land.lhs.true.49, label %if.else.63, !dbg !8039

land.lhs.true.49:                                 ; preds = %land.lhs.true.46
  %37 = load i32, i32* %err, align 4, !dbg !8040, !tbaa !4372
  %conv50 = sext i32 %37 to i64, !dbg !8041
  %shr51 = lshr i64 %conv50, 24, !dbg !8042
  %and52 = and i64 %shr51, 255, !dbg !8043
  %conv53 = trunc i64 %and52 to i32, !dbg !8044
  %cmp54 = icmp eq i32 %conv53, 13, !dbg !8045
  br i1 %cmp54, label %land.lhs.true.56, label %if.else.63, !dbg !8046

land.lhs.true.56:                                 ; preds = %land.lhs.true.49
  %38 = load i32, i32* %err, align 4, !dbg !8047, !tbaa !4372
  %conv57 = sext i32 %38 to i64, !dbg !8048
  %and58 = and i64 %conv57, 4095, !dbg !8049
  %conv59 = trunc i64 %and58 to i32, !dbg !8050
  %cmp60 = icmp eq i32 %conv59, 123, !dbg !8051
  br i1 %cmp60, label %if.then.62, label %if.else.63, !dbg !8052

if.then.62:                                       ; preds = %land.lhs.true.56
  call void @ERR_clear_error(), !dbg !8053
  store i32 0, i32* %retval1, align 4, !dbg !8055, !tbaa !4372
  br label %if.end.86, !dbg !8056

if.else.63:                                       ; preds = %land.lhs.true.56, %land.lhs.true.49, %land.lhs.true.46, %while.end
  %39 = load i32, i32* %filetype.addr, align 4, !dbg !8057, !tbaa !4372
  %cmp64 = icmp eq i32 %39, 1, !dbg !8059
  br i1 %cmp64, label %land.lhs.true.66, label %if.else.83, !dbg !8060

land.lhs.true.66:                                 ; preds = %if.else.63
  %40 = load i32, i32* %loaded, align 4, !dbg !8061, !tbaa !4372
  %cmp67 = icmp sgt i32 %40, 0, !dbg !8062
  br i1 %cmp67, label %land.lhs.true.69, label %if.else.83, !dbg !8063

land.lhs.true.69:                                 ; preds = %land.lhs.true.66
  %41 = load i32, i32* %err, align 4, !dbg !8064, !tbaa !4372
  %conv70 = sext i32 %41 to i64, !dbg !8065
  %shr71 = lshr i64 %conv70, 24, !dbg !8066
  %and72 = and i64 %shr71, 255, !dbg !8067
  %conv73 = trunc i64 %and72 to i32, !dbg !8068
  %cmp74 = icmp eq i32 %conv73, 9, !dbg !8069
  br i1 %cmp74, label %land.lhs.true.76, label %if.else.83, !dbg !8070

land.lhs.true.76:                                 ; preds = %land.lhs.true.69
  %42 = load i32, i32* %err, align 4, !dbg !8071, !tbaa !4372
  %conv77 = sext i32 %42 to i64, !dbg !8072
  %and78 = and i64 %conv77, 4095, !dbg !8073
  %conv79 = trunc i64 %and78 to i32, !dbg !8074
  %cmp80 = icmp eq i32 %conv79, 108, !dbg !8075
  br i1 %cmp80, label %if.then.82, label %if.else.83, !dbg !8076

if.then.82:                                       ; preds = %land.lhs.true.76
  call void @ERR_clear_error(), !dbg !8077
  store i32 0, i32* %retval1, align 4, !dbg !8079, !tbaa !4372
  br label %if.end.85, !dbg !8080

if.else.83:                                       ; preds = %land.lhs.true.76, %land.lhs.true.69, %land.lhs.true.66, %if.else.63
  %call84 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2633), !dbg !8081
  store i32 -1, i32* %retval1, align 4, !dbg !8083, !tbaa !4372
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.83, %if.then.82
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.then.62
  %43 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8084, !tbaa !3860
  %call87 = call i32 @BIO_free(%struct.bio_st* %43), !dbg !8085
  %44 = load i32, i32* %retval1, align 4, !dbg !8086, !tbaa !4372
  store i32 %44, i32* %retval, !dbg !8087
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !8087

cleanup.88:                                       ; preds = %if.end.86, %if.then.7, %if.then.3, %if.then
  %45 = bitcast i32* %loaded to i8*, !dbg !8088
  call void @llvm.lifetime.end(i64 4, i8* %45) #1, !dbg !8088
  %46 = bitcast i32* %err to i8*, !dbg !8088
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !8088
  %47 = bitcast i32* %retval1 to i8*, !dbg !8088
  call void @llvm.lifetime.end(i64 4, i8* %47) #1, !dbg !8088
  %48 = bitcast %struct.x509_store_st** %store to i8*, !dbg !8088
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !8088
  %49 = bitcast %struct.bio_st** %biobuf to i8*, !dbg !8088
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !8088
  %50 = load i32, i32* %retval, !dbg !8088
  ret i32 %50, !dbg !8088
}

declare %struct._object* @PyUnicode_AsASCIIString(%struct._object*) #3

declare i32 @SSL_CTX_load_verify_locations(%struct.ssl_ctx_st*, i8*, i8*) #3

declare %struct.bio_st* @BIO_new_mem_buf(i8*, i32) #3

declare %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st*) #3

declare %struct.x509_st* @d2i_X509_bio(%struct.bio_st*, %struct.x509_st**) #3

declare %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st*, %struct.x509_st**, i32 (i8*, i32, i32, i8*)*, i8*) #3

declare i32 @X509_STORE_add_cert(%struct.x509_store_st*, %struct.x509_st*) #3

declare void @X509_free(%struct.x509_st*) #3

declare i32 @BIO_free(%struct.bio_st*) #3

declare i32 @SSL_CTX_set_default_verify_paths(%struct.ssl_ctx_st*) #3

declare i32 @OBJ_sn2nid(i8*) #3

declare %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32) #3

declare void @EC_KEY_free(%struct.ec_key_st*) #3

declare i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st*, i32, void ()*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_servername_callback(%struct.ssl_st* %s, i32* %al, i8* %args) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %al.addr = alloca i32*, align 8
  %args.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %ssl_ctx = alloca %struct.PySSLContext*, align 8
  %ssl = alloca %struct.PySSLSocket*, align 8
  %servername_o = alloca %struct._object*, align 8
  %servername_idna = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %ssl_socket = alloca %struct._object*, align 8
  %servername = alloca i8*, align 8
  %gstate = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp90 = alloca %struct._object*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !2657, metadata !3830), !dbg !8089
  store i32* %al, i32** %al.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i32** %al.addr, metadata !2658, metadata !3830), !dbg !8090
  store i8* %args, i8** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !2659, metadata !3830), !dbg !8091
  %0 = bitcast i32* %ret to i8*, !dbg !8092
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2660, metadata !3830), !dbg !8093
  %1 = bitcast %struct.PySSLContext** %ssl_ctx to i8*, !dbg !8094
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8094
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %ssl_ctx, metadata !2661, metadata !3830), !dbg !8095
  %2 = load i8*, i8** %args.addr, align 8, !dbg !8096, !tbaa !3860
  %3 = bitcast i8* %2 to %struct.PySSLContext*, !dbg !8097
  store %struct.PySSLContext* %3, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8095, !tbaa !3860
  %4 = bitcast %struct.PySSLSocket** %ssl to i8*, !dbg !8098
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8098
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %ssl, metadata !2662, metadata !3830), !dbg !8099
  %5 = bitcast %struct._object** %servername_o to i8*, !dbg !8100
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8100
  call void @llvm.dbg.declare(metadata %struct._object** %servername_o, metadata !2663, metadata !3830), !dbg !8101
  %6 = bitcast %struct._object** %servername_idna to i8*, !dbg !8102
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8102
  call void @llvm.dbg.declare(metadata %struct._object** %servername_idna, metadata !2664, metadata !3830), !dbg !8103
  %7 = bitcast %struct._object** %result to i8*, !dbg !8104
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !8104
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2665, metadata !3830), !dbg !8105
  %8 = bitcast %struct._object** %ssl_socket to i8*, !dbg !8106
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !8106
  call void @llvm.dbg.declare(metadata %struct._object** %ssl_socket, metadata !2666, metadata !3830), !dbg !8107
  %9 = bitcast i8** %servername to i8*, !dbg !8108
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !8108
  call void @llvm.dbg.declare(metadata i8** %servername, metadata !2667, metadata !3830), !dbg !8109
  %10 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !8110, !tbaa !3860
  %call = call i8* @SSL_get_servername(%struct.ssl_st* %10, i32 0), !dbg !8111
  store i8* %call, i8** %servername, align 8, !dbg !8109, !tbaa !3860
  %11 = bitcast i32* %gstate to i8*, !dbg !8112
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !8112
  call void @llvm.dbg.declare(metadata i32* %gstate, metadata !2668, metadata !3830), !dbg !8113
  %call1 = call i32 @PyGILState_Ensure(), !dbg !8114
  store i32 %call1, i32* %gstate, align 4, !dbg !8113, !tbaa !6928
  %12 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8115, !tbaa !3860
  %set_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %12, i32 0, i32 4, !dbg !8117
  %13 = load %struct._object*, %struct._object** %set_hostname, align 8, !dbg !8117, !tbaa !4551
  %cmp = icmp eq %struct._object* %13, null, !dbg !8118
  br i1 %cmp, label %if.then, label %if.end, !dbg !8119

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %gstate, align 4, !dbg !8120, !tbaa !6928
  call void @PyGILState_Release(i32 %14), !dbg !8122
  store i32 0, i32* %retval, !dbg !8123
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8123

if.end:                                           ; preds = %entry
  %15 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !8124, !tbaa !3860
  %call2 = call i8* @SSL_get_ex_data(%struct.ssl_st* %15, i32 0), !dbg !8125
  %16 = bitcast i8* %call2 to %struct.PySSLSocket*, !dbg !8126
  store %struct.PySSLSocket* %16, %struct.PySSLSocket** %ssl, align 8, !dbg !8127, !tbaa !3860
  %17 = load %struct.PySSLSocket*, %struct.PySSLSocket** %ssl, align 8, !dbg !8128, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %17, i32 0, i32 1, !dbg !8129
  %18 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !8129, !tbaa !6959
  %call3 = call %struct._object* @PyWeakref_GetObject(%struct._object* %18), !dbg !8130
  store %struct._object* %call3, %struct._object** %ssl_socket, align 8, !dbg !8131, !tbaa !3860
  %19 = load %struct._object*, %struct._object** %ssl_socket, align 8, !dbg !8132, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !8133
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !8134, !tbaa !4101
  %inc = add i64 %20, 1, !dbg !8134
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8134, !tbaa !4101
  %21 = load %struct._object*, %struct._object** %ssl_socket, align 8, !dbg !8135, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %21, @_Py_NoneStruct, !dbg !8137
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !8138

if.then.5:                                        ; preds = %if.end
  br label %error, !dbg !8139

if.end.6:                                         ; preds = %if.end
  %22 = load i8*, i8** %servername, align 8, !dbg !8141, !tbaa !3860
  %cmp7 = icmp eq i8* %22, null, !dbg !8142
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !8143

if.then.8:                                        ; preds = %if.end.6
  %23 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8144, !tbaa !3860
  %set_hostname9 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %23, i32 0, i32 4, !dbg !8146
  %24 = load %struct._object*, %struct._object** %set_hostname9, align 8, !dbg !8146, !tbaa !4551
  %25 = load %struct._object*, %struct._object** %ssl_socket, align 8, !dbg !8147, !tbaa !3860
  %26 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8148, !tbaa !3860
  %call10 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %24, %struct._object* %25, %struct._object* @_Py_NoneStruct, %struct.PySSLContext* %26, i8* null), !dbg !8149
  store %struct._object* %call10, %struct._object** %result, align 8, !dbg !8150, !tbaa !3860
  br label %if.end.50, !dbg !8151

if.else:                                          ; preds = %if.end.6
  %27 = load i8*, i8** %servername, align 8, !dbg !8152, !tbaa !3860
  %call11 = call %struct._object* @PyBytes_FromString(i8* %27), !dbg !8153
  store %struct._object* %call11, %struct._object** %servername_o, align 8, !dbg !8154, !tbaa !3860
  %28 = load %struct._object*, %struct._object** %servername_o, align 8, !dbg !8155, !tbaa !3860
  %cmp12 = icmp eq %struct._object* %28, null, !dbg !8157
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !8158

if.then.13:                                       ; preds = %if.else
  %29 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8159, !tbaa !3860
  %30 = bitcast %struct.PySSLContext* %29 to %struct._object*, !dbg !8161
  call void @PyErr_WriteUnraisable(%struct._object* %30), !dbg !8162
  br label %error, !dbg !8163

if.end.14:                                        ; preds = %if.else
  %31 = load %struct._object*, %struct._object** %servername_o, align 8, !dbg !8164, !tbaa !3860
  %call15 = call %struct._object* @PyUnicode_FromEncodedObject(%struct._object* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0), i8* null), !dbg !8165
  store %struct._object* %call15, %struct._object** %servername_idna, align 8, !dbg !8166, !tbaa !3860
  %32 = load %struct._object*, %struct._object** %servername_idna, align 8, !dbg !8167, !tbaa !3860
  %cmp16 = icmp eq %struct._object* %32, null, !dbg !8168
  br i1 %cmp16, label %if.then.17, label %if.end.23, !dbg !8169

if.then.17:                                       ; preds = %if.end.14
  %33 = load %struct._object*, %struct._object** %servername_o, align 8, !dbg !8170, !tbaa !3860
  call void @PyErr_WriteUnraisable(%struct._object* %33), !dbg !8171
  br label %do.body, !dbg !8172

do.body:                                          ; preds = %if.then.17
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8173
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !8173
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2670, metadata !3830), !dbg !8175
  %35 = load %struct._object*, %struct._object** %servername_o, align 8, !dbg !8176, !tbaa !3860
  store %struct._object* %35, %struct._object** %_py_decref_tmp, align 8, !dbg !8175, !tbaa !3860
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8177, !tbaa !3860
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !8179
  %37 = load i64, i64* %ob_refcnt18, align 8, !dbg !8180, !tbaa !4101
  %dec = add i64 %37, -1, !dbg !8180
  store i64 %dec, i64* %ob_refcnt18, align 8, !dbg !8180, !tbaa !4101
  %cmp19 = icmp ne i64 %dec, 0, !dbg !8181
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !8182

if.then.20:                                       ; preds = %do.body
  br label %if.end.22, !dbg !8183

if.else.21:                                       ; preds = %do.body
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8185, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !8187
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8187, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !8188
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8188, !tbaa !4206
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8189, !tbaa !3860
  call void %40(%struct._object* %41), !dbg !8190
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %if.then.20
  %42 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8191
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !8191
  br label %do.cond, !dbg !8193

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !8194

do.end:                                           ; preds = %do.cond
  br label %error, !dbg !8196

if.end.23:                                        ; preds = %if.end.14
  br label %do.body.24, !dbg !8197

do.body.24:                                       ; preds = %if.end.23
  %43 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !8198
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !8198
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp25, metadata !2676, metadata !3830), !dbg !8200
  %44 = load %struct._object*, %struct._object** %servername_o, align 8, !dbg !8201, !tbaa !3860
  store %struct._object* %44, %struct._object** %_py_decref_tmp25, align 8, !dbg !8200, !tbaa !3860
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !8202, !tbaa !3860
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !8204
  %46 = load i64, i64* %ob_refcnt26, align 8, !dbg !8205, !tbaa !4101
  %dec27 = add i64 %46, -1, !dbg !8205
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !8205, !tbaa !4101
  %cmp28 = icmp ne i64 %dec27, 0, !dbg !8206
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !8207

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33, !dbg !8208

if.else.30:                                       ; preds = %do.body.24
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !8210, !tbaa !3860
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !8212
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !8212, !tbaa !4204
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !8213
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !8213, !tbaa !4206
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !8214, !tbaa !3860
  call void %49(%struct._object* %50), !dbg !8215
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  %51 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !8216
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !8216
  br label %do.cond.34, !dbg !8218

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !8219

do.end.35:                                        ; preds = %do.cond.34
  %52 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8221, !tbaa !3860
  %set_hostname36 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %52, i32 0, i32 4, !dbg !8222
  %53 = load %struct._object*, %struct._object** %set_hostname36, align 8, !dbg !8222, !tbaa !4551
  %54 = load %struct._object*, %struct._object** %ssl_socket, align 8, !dbg !8223, !tbaa !3860
  %55 = load %struct._object*, %struct._object** %servername_idna, align 8, !dbg !8224, !tbaa !3860
  %56 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8225, !tbaa !3860
  %call37 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %53, %struct._object* %54, %struct._object* %55, %struct.PySSLContext* %56, i8* null), !dbg !8226
  store %struct._object* %call37, %struct._object** %result, align 8, !dbg !8227, !tbaa !3860
  br label %do.body.38, !dbg !8228

do.body.38:                                       ; preds = %do.end.35
  %57 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !8229
  call void @llvm.lifetime.start(i64 8, i8* %57) #1, !dbg !8229
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !2678, metadata !3830), !dbg !8231
  %58 = load %struct._object*, %struct._object** %servername_idna, align 8, !dbg !8232, !tbaa !3860
  store %struct._object* %58, %struct._object** %_py_decref_tmp39, align 8, !dbg !8231, !tbaa !3860
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !8233, !tbaa !3860
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !8235
  %60 = load i64, i64* %ob_refcnt40, align 8, !dbg !8236, !tbaa !4101
  %dec41 = add i64 %60, -1, !dbg !8236
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !8236, !tbaa !4101
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !8237
  br i1 %cmp42, label %if.then.43, label %if.else.44, !dbg !8238

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47, !dbg !8239

if.else.44:                                       ; preds = %do.body.38
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !8241, !tbaa !3860
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !8243
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !8243, !tbaa !4204
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4, !dbg !8244
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8, !dbg !8244, !tbaa !4206
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !8245, !tbaa !3860
  call void %63(%struct._object* %64), !dbg !8246
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  %65 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !8247
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !8247
  br label %do.cond.48, !dbg !8248

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !8249

do.end.49:                                        ; preds = %do.cond.48
  br label %if.end.50

if.end.50:                                        ; preds = %do.end.49, %if.then.8
  br label %do.body.51, !dbg !8251

do.body.51:                                       ; preds = %if.end.50
  %66 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !8252
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !8252
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !2680, metadata !3830), !dbg !8254
  %67 = load %struct._object*, %struct._object** %ssl_socket, align 8, !dbg !8255, !tbaa !3860
  store %struct._object* %67, %struct._object** %_py_decref_tmp52, align 8, !dbg !8254, !tbaa !3860
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !8256, !tbaa !3860
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !8258
  %69 = load i64, i64* %ob_refcnt53, align 8, !dbg !8259, !tbaa !4101
  %dec54 = add i64 %69, -1, !dbg !8259
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !8259, !tbaa !4101
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !8260
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !8261

if.then.56:                                       ; preds = %do.body.51
  br label %if.end.60, !dbg !8262

if.else.57:                                       ; preds = %do.body.51
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !8264, !tbaa !3860
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !8266
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !8266, !tbaa !4204
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !8267
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8, !dbg !8267, !tbaa !4206
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !8268, !tbaa !3860
  call void %72(%struct._object* %73), !dbg !8269
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  %74 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !8270
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !8270
  br label %do.cond.61, !dbg !8272

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !8273

do.end.62:                                        ; preds = %do.cond.61
  %75 = load %struct._object*, %struct._object** %result, align 8, !dbg !8275, !tbaa !3860
  %cmp63 = icmp eq %struct._object* %75, null, !dbg !8276
  br i1 %cmp63, label %if.then.64, label %if.else.66, !dbg !8277

if.then.64:                                       ; preds = %do.end.62
  %76 = load %struct.PySSLContext*, %struct.PySSLContext** %ssl_ctx, align 8, !dbg !8278, !tbaa !3860
  %set_hostname65 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %76, i32 0, i32 4, !dbg !8280
  %77 = load %struct._object*, %struct._object** %set_hostname65, align 8, !dbg !8280, !tbaa !4551
  call void @PyErr_WriteUnraisable(%struct._object* %77), !dbg !8281
  %78 = load i32*, i32** %al.addr, align 8, !dbg !8282, !tbaa !3860
  store i32 40, i32* %78, align 4, !dbg !8283, !tbaa !4372
  store i32 2, i32* %ret, align 4, !dbg !8284, !tbaa !4372
  br label %if.end.88, !dbg !8285

if.else.66:                                       ; preds = %do.end.62
  %79 = load %struct._object*, %struct._object** %result, align 8, !dbg !8286, !tbaa !3860
  %cmp67 = icmp ne %struct._object* %79, @_Py_NoneStruct, !dbg !8288
  br i1 %cmp67, label %if.then.68, label %if.else.73, !dbg !8289

if.then.68:                                       ; preds = %if.else.66
  %80 = load %struct._object*, %struct._object** %result, align 8, !dbg !8290, !tbaa !3860
  %call69 = call i64 @PyLong_AsLong(%struct._object* %80), !dbg !8292
  %conv = trunc i64 %call69 to i32, !dbg !8293
  %81 = load i32*, i32** %al.addr, align 8, !dbg !8294, !tbaa !3860
  store i32 %conv, i32* %81, align 4, !dbg !8295, !tbaa !4372
  %call70 = call %struct._object* @PyErr_Occurred(), !dbg !8296
  %tobool = icmp ne %struct._object* %call70, null, !dbg !8296
  br i1 %tobool, label %if.then.71, label %if.end.72, !dbg !8298

if.then.71:                                       ; preds = %if.then.68
  %82 = load %struct._object*, %struct._object** %result, align 8, !dbg !8299, !tbaa !3860
  call void @PyErr_WriteUnraisable(%struct._object* %82), !dbg !8301
  %83 = load i32*, i32** %al.addr, align 8, !dbg !8302, !tbaa !3860
  store i32 80, i32* %83, align 4, !dbg !8303, !tbaa !4372
  br label %if.end.72, !dbg !8304

if.end.72:                                        ; preds = %if.then.71, %if.then.68
  store i32 2, i32* %ret, align 4, !dbg !8305, !tbaa !4372
  br label %if.end.74, !dbg !8306

if.else.73:                                       ; preds = %if.else.66
  store i32 0, i32* %ret, align 4, !dbg !8307, !tbaa !4372
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.73, %if.end.72
  br label %do.body.75, !dbg !8309

do.body.75:                                       ; preds = %if.end.74
  %84 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !8310
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !8310
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !2682, metadata !3830), !dbg !8312
  %85 = load %struct._object*, %struct._object** %result, align 8, !dbg !8313, !tbaa !3860
  store %struct._object* %85, %struct._object** %_py_decref_tmp76, align 8, !dbg !8312, !tbaa !3860
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8314, !tbaa !3860
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !8316
  %87 = load i64, i64* %ob_refcnt77, align 8, !dbg !8317, !tbaa !4101
  %dec78 = add i64 %87, -1, !dbg !8317
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !8317, !tbaa !4101
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !8318
  br i1 %cmp79, label %if.then.81, label %if.else.82, !dbg !8319

if.then.81:                                       ; preds = %do.body.75
  br label %if.end.85, !dbg !8320

if.else.82:                                       ; preds = %do.body.75
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8322, !tbaa !3860
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !8324
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !8324, !tbaa !4204
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !8325
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !8325, !tbaa !4206
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8326, !tbaa !3860
  call void %90(%struct._object* %91), !dbg !8327
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  %92 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !8328
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !8328
  br label %do.cond.86, !dbg !8330

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !8331

do.end.87:                                        ; preds = %do.cond.86
  br label %if.end.88

if.end.88:                                        ; preds = %do.end.87, %if.then.64
  %93 = load i32, i32* %gstate, align 4, !dbg !8333, !tbaa !6928
  call void @PyGILState_Release(i32 %93), !dbg !8334
  %94 = load i32, i32* %ret, align 4, !dbg !8335, !tbaa !4372
  store i32 %94, i32* %retval, !dbg !8336
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8336

error:                                            ; preds = %do.end, %if.then.13, %if.then.5
  br label %do.body.89, !dbg !8337

do.body.89:                                       ; preds = %error
  %95 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !8338
  call void @llvm.lifetime.start(i64 8, i8* %95) #1, !dbg !8338
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp90, metadata !2686, metadata !3830), !dbg !8340
  %96 = load %struct._object*, %struct._object** %ssl_socket, align 8, !dbg !8341, !tbaa !3860
  store %struct._object* %96, %struct._object** %_py_decref_tmp90, align 8, !dbg !8340, !tbaa !3860
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !8342, !tbaa !3860
  %ob_refcnt91 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !8344
  %98 = load i64, i64* %ob_refcnt91, align 8, !dbg !8345, !tbaa !4101
  %dec92 = add i64 %98, -1, !dbg !8345
  store i64 %dec92, i64* %ob_refcnt91, align 8, !dbg !8345, !tbaa !4101
  %cmp93 = icmp ne i64 %dec92, 0, !dbg !8346
  br i1 %cmp93, label %if.then.95, label %if.else.96, !dbg !8347

if.then.95:                                       ; preds = %do.body.89
  br label %if.end.99, !dbg !8348

if.else.96:                                       ; preds = %do.body.89
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !8350, !tbaa !3860
  %ob_type97 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !8352
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type97, align 8, !dbg !8352, !tbaa !4204
  %tp_dealloc98 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !8353
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc98, align 8, !dbg !8353, !tbaa !4206
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !8354, !tbaa !3860
  call void %101(%struct._object* %102), !dbg !8355
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.96, %if.then.95
  %103 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !8356
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !8356
  br label %do.cond.100, !dbg !8357

do.cond.100:                                      ; preds = %if.end.99
  br label %do.end.101, !dbg !8358

do.end.101:                                       ; preds = %do.cond.100
  %104 = load i32*, i32** %al.addr, align 8, !dbg !8360, !tbaa !3860
  store i32 80, i32* %104, align 4, !dbg !8361, !tbaa !4372
  store i32 2, i32* %ret, align 4, !dbg !8362, !tbaa !4372
  %105 = load i32, i32* %gstate, align 4, !dbg !8363, !tbaa !6928
  call void @PyGILState_Release(i32 %105), !dbg !8364
  %106 = load i32, i32* %ret, align 4, !dbg !8365, !tbaa !4372
  store i32 %106, i32* %retval, !dbg !8366
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8366

cleanup:                                          ; preds = %do.end.101, %if.end.88, %if.then
  %107 = bitcast i32* %gstate to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 4, i8* %107) #1, !dbg !8367
  %108 = bitcast i8** %servername to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !8367
  %109 = bitcast %struct._object** %ssl_socket to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !8367
  %110 = bitcast %struct._object** %result to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !8367
  %111 = bitcast %struct._object** %servername_idna to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !8367
  %112 = bitcast %struct._object** %servername_o to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !8367
  %113 = bitcast %struct.PySSLSocket** %ssl to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !8367
  %114 = bitcast %struct.PySSLContext** %ssl_ctx to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !8367
  %115 = bitcast i32* %ret to i8*, !dbg !8367
  call void @llvm.lifetime.end(i64 4, i8* %115) #1, !dbg !8367
  %116 = load i32, i32* %retval, !dbg !8367
  ret i32 %116, !dbg !8367
}

declare i8* @SSL_get_servername(%struct.ssl_st*, i32) #3

declare i32 @PyGILState_Ensure() #3

declare void @PyGILState_Release(i32) #3

declare i8* @SSL_get_ex_data(%struct.ssl_st*, i32) #3

declare %struct._object* @PyWeakref_GetObject(%struct._object*) #3

declare %struct._object* @PyBytes_FromString(i8*) #3

declare void @PyErr_WriteUnraisable(%struct._object*) #3

declare %struct._object* @PyUnicode_FromEncodedObject(%struct._object*, i8*, i8*) #3

declare i64 @PyLong_AsLong(%struct._object*) #3

declare i32 @sk_num(%struct.stack_st*) #3

declare i8* @sk_value(%struct.stack_st*, i32) #3

declare i32 @X509_check_ca(%struct.x509_st*) #3

declare %struct._object* @PyList_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_certificate_to_der(%struct.x509_st* %certificate) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %certificate.addr = alloca %struct.x509_st*, align 8
  %bytes_buf = alloca i8*, align 8
  %len = alloca i32, align 4
  %retval1 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.x509_st* %certificate, %struct.x509_st** %certificate.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.x509_st** %certificate.addr, metadata !2737, metadata !3830), !dbg !8368
  %0 = bitcast i8** %bytes_buf to i8*, !dbg !8369
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8369
  call void @llvm.dbg.declare(metadata i8** %bytes_buf, metadata !2738, metadata !3830), !dbg !8370
  store i8* null, i8** %bytes_buf, align 8, !dbg !8370, !tbaa !3860
  %1 = bitcast i32* %len to i8*, !dbg !8371
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !8371
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2739, metadata !3830), !dbg !8372
  %2 = bitcast %struct._object** %retval1 to i8*, !dbg !8373
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8373
  call void @llvm.dbg.declare(metadata %struct._object** %retval1, metadata !2740, metadata !3830), !dbg !8374
  store i8* null, i8** %bytes_buf, align 8, !dbg !8375, !tbaa !3860
  %3 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8376, !tbaa !3860
  %call = call i32 @i2d_X509(%struct.x509_st* %3, i8** %bytes_buf), !dbg !8377
  store i32 %call, i32* %len, align 4, !dbg !8378, !tbaa !4372
  %4 = load i32, i32* %len, align 4, !dbg !8379, !tbaa !4372
  %cmp = icmp slt i32 %4, 0, !dbg !8381
  br i1 %cmp, label %if.then, label %if.end, !dbg !8382

if.then:                                          ; preds = %entry
  %call2 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1266), !dbg !8383
  store %struct._object* null, %struct._object** %retval, !dbg !8385
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8385

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %bytes_buf, align 8, !dbg !8386, !tbaa !3860
  %6 = load i32, i32* %len, align 4, !dbg !8387, !tbaa !4372
  %conv = sext i32 %6 to i64, !dbg !8387
  %call3 = call %struct._object* @PyBytes_FromStringAndSize(i8* %5, i64 %conv), !dbg !8388
  store %struct._object* %call3, %struct._object** %retval1, align 8, !dbg !8389, !tbaa !3860
  %7 = load i8*, i8** %bytes_buf, align 8, !dbg !8390, !tbaa !3860
  call void @CRYPTO_free(i8* %7), !dbg !8391
  %8 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8392, !tbaa !3860
  store %struct._object* %8, %struct._object** %retval, !dbg !8393
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8393

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast %struct._object** %retval1 to i8*, !dbg !8394
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !8394
  %10 = bitcast i32* %len to i8*, !dbg !8394
  call void @llvm.lifetime.end(i64 4, i8* %10) #1, !dbg !8394
  %11 = bitcast i8** %bytes_buf to i8*, !dbg !8394
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !8394
  %12 = load %struct._object*, %struct._object** %retval, !dbg !8394
  ret %struct._object* %12, !dbg !8394
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_decode_certificate(%struct.x509_st* %certificate) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %certificate.addr = alloca %struct.x509_st*, align 8
  %retval1 = alloca %struct._object*, align 8
  %biobuf = alloca %struct.bio_st*, align 8
  %peer = alloca %struct._object*, align 8
  %peer_alt_names = alloca %struct._object*, align 8
  %issuer = alloca %struct._object*, align 8
  %version = alloca %struct._object*, align 8
  %sn_obj = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %serialNumber = alloca %struct.asn1_string_st*, align 8
  %buf = alloca [2048 x i8], align 16
  %len = alloca i32, align 4
  %result = alloca i32, align 4
  %notBefore = alloca %struct.asn1_string_st*, align 8
  %notAfter = alloca %struct.asn1_string_st*, align 8
  %pnotBefore = alloca %struct._object*, align 8
  %pnotAfter = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  %_py_decref_tmp48 = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp82 = alloca %struct._object*, align 8
  %_py_decref_tmp116 = alloca %struct._object*, align 8
  %_py_decref_tmp130 = alloca %struct._object*, align 8
  %_py_decref_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp180 = alloca %struct._object*, align 8
  %_py_decref_tmp217 = alloca %struct._object*, align 8
  %_py_decref_tmp231 = alloca %struct._object*, align 8
  %_py_decref_tmp256 = alloca %struct._object*, align 8
  %_py_decref_tmp270 = alloca %struct._object*, align 8
  %_py_decref_tmp294 = alloca %struct._object*, align 8
  %_py_decref_tmp322 = alloca %struct._object*, align 8
  %_py_decref_tmp350 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp379 = alloca %struct._object*, align 8
  store %struct.x509_st* %certificate, %struct.x509_st** %certificate.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.x509_st** %certificate.addr, metadata !2743, metadata !3830), !dbg !8395
  %0 = bitcast %struct._object** %retval1 to i8*, !dbg !8396
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8396
  call void @llvm.dbg.declare(metadata %struct._object** %retval1, metadata !2744, metadata !3830), !dbg !8397
  store %struct._object* null, %struct._object** %retval1, align 8, !dbg !8397, !tbaa !3860
  %1 = bitcast %struct.bio_st** %biobuf to i8*, !dbg !8398
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8398
  call void @llvm.dbg.declare(metadata %struct.bio_st** %biobuf, metadata !2745, metadata !3830), !dbg !8399
  store %struct.bio_st* null, %struct.bio_st** %biobuf, align 8, !dbg !8399, !tbaa !3860
  %2 = bitcast %struct._object** %peer to i8*, !dbg !8400
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8400
  call void @llvm.dbg.declare(metadata %struct._object** %peer, metadata !2746, metadata !3830), !dbg !8401
  %3 = bitcast %struct._object** %peer_alt_names to i8*, !dbg !8402
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8402
  call void @llvm.dbg.declare(metadata %struct._object** %peer_alt_names, metadata !2747, metadata !3830), !dbg !8403
  store %struct._object* null, %struct._object** %peer_alt_names, align 8, !dbg !8403, !tbaa !3860
  %4 = bitcast %struct._object** %issuer to i8*, !dbg !8404
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8404
  call void @llvm.dbg.declare(metadata %struct._object** %issuer, metadata !2748, metadata !3830), !dbg !8405
  %5 = bitcast %struct._object** %version to i8*, !dbg !8406
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8406
  call void @llvm.dbg.declare(metadata %struct._object** %version, metadata !2749, metadata !3830), !dbg !8407
  %6 = bitcast %struct._object** %sn_obj to i8*, !dbg !8408
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8408
  call void @llvm.dbg.declare(metadata %struct._object** %sn_obj, metadata !2750, metadata !3830), !dbg !8409
  %7 = bitcast %struct._object** %obj to i8*, !dbg !8410
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !8410
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !2751, metadata !3830), !dbg !8411
  %8 = bitcast %struct.asn1_string_st** %serialNumber to i8*, !dbg !8412
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !8412
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %serialNumber, metadata !2752, metadata !3830), !dbg !8413
  %9 = bitcast [2048 x i8]* %buf to i8*, !dbg !8414
  call void @llvm.lifetime.start(i64 2048, i8* %9) #1, !dbg !8414
  call void @llvm.dbg.declare(metadata [2048 x i8]* %buf, metadata !2753, metadata !3830), !dbg !8415
  %10 = bitcast i32* %len to i8*, !dbg !8416
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !8416
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2757, metadata !3830), !dbg !8417
  %11 = bitcast i32* %result to i8*, !dbg !8416
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !8416
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2758, metadata !3830), !dbg !8418
  %12 = bitcast %struct.asn1_string_st** %notBefore to i8*, !dbg !8419
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !8419
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %notBefore, metadata !2759, metadata !3830), !dbg !8420
  %13 = bitcast %struct.asn1_string_st** %notAfter to i8*, !dbg !8419
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !8419
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %notAfter, metadata !2760, metadata !3830), !dbg !8421
  %14 = bitcast %struct._object** %pnotBefore to i8*, !dbg !8422
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !8422
  call void @llvm.dbg.declare(metadata %struct._object** %pnotBefore, metadata !2761, metadata !3830), !dbg !8423
  %15 = bitcast %struct._object** %pnotAfter to i8*, !dbg !8422
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !8422
  call void @llvm.dbg.declare(metadata %struct._object** %pnotAfter, metadata !2762, metadata !3830), !dbg !8424
  %call = call %struct._object* @PyDict_New(), !dbg !8425
  store %struct._object* %call, %struct._object** %retval1, align 8, !dbg !8426, !tbaa !3860
  %16 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8427, !tbaa !3860
  %cmp = icmp eq %struct._object* %16, null, !dbg !8429
  br i1 %cmp, label %if.then, label %if.end, !dbg !8430

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8431
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8431

if.end:                                           ; preds = %entry
  %17 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8432, !tbaa !3860
  %call2 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %17), !dbg !8433
  %call3 = call %struct._object* @_create_tuple_for_X509_NAME(%struct.X509_name_st* %call2), !dbg !8434
  store %struct._object* %call3, %struct._object** %peer, align 8, !dbg !8435, !tbaa !3860
  %18 = load %struct._object*, %struct._object** %peer, align 8, !dbg !8436, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %18, null, !dbg !8438
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !8439

if.then.5:                                        ; preds = %if.end
  br label %fail0, !dbg !8440

if.end.6:                                         ; preds = %if.end
  %19 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8441, !tbaa !3860
  %20 = load %struct._object*, %struct._object** %peer, align 8, !dbg !8442, !tbaa !3860
  %call7 = call i32 @PyDict_SetItemString(%struct._object* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.160, i32 0, i32 0), %struct._object* %20), !dbg !8443
  %cmp8 = icmp slt i32 %call7, 0, !dbg !8444
  br i1 %cmp8, label %if.then.9, label %if.end.13, !dbg !8445

if.then.9:                                        ; preds = %if.end.6
  br label %do.body, !dbg !8446

do.body:                                          ; preds = %if.then.9
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8447
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !8447
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2763, metadata !3830), !dbg !8449
  %22 = load %struct._object*, %struct._object** %peer, align 8, !dbg !8450, !tbaa !3860
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !8449, !tbaa !3860
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8451, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !8453
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !8454, !tbaa !4101
  %dec = add i64 %24, -1, !dbg !8454
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8454, !tbaa !4101
  %cmp10 = icmp ne i64 %dec, 0, !dbg !8455
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !8456

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !8457

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8459, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !8461
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8461, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !8462
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8462, !tbaa !4206
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8463, !tbaa !3860
  call void %27(%struct._object* %28), !dbg !8464
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8465
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !8465
  br label %do.cond, !dbg !8467

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8468

do.end:                                           ; preds = %do.cond
  br label %fail0, !dbg !8470

if.end.13:                                        ; preds = %if.end.6
  br label %do.body.14, !dbg !8471

do.body.14:                                       ; preds = %if.end.13
  %30 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8472
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !8472
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !2767, metadata !3830), !dbg !8474
  %31 = load %struct._object*, %struct._object** %peer, align 8, !dbg !8475, !tbaa !3860
  store %struct._object* %31, %struct._object** %_py_decref_tmp15, align 8, !dbg !8474, !tbaa !3860
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8476, !tbaa !3860
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !8478
  %33 = load i64, i64* %ob_refcnt16, align 8, !dbg !8479, !tbaa !4101
  %dec17 = add i64 %33, -1, !dbg !8479
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !8479, !tbaa !4101
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !8480
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !8481

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !8482

if.else.20:                                       ; preds = %do.body.14
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8484, !tbaa !3860
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !8486
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !8486, !tbaa !4204
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !8487
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !8487, !tbaa !4206
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8488, !tbaa !3860
  call void %36(%struct._object* %37), !dbg !8489
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %38 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8490
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !8490
  br label %do.cond.24, !dbg !8492

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !8493

do.end.25:                                        ; preds = %do.cond.24
  %39 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8495, !tbaa !3860
  %call26 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %39), !dbg !8496
  %call27 = call %struct._object* @_create_tuple_for_X509_NAME(%struct.X509_name_st* %call26), !dbg !8497
  store %struct._object* %call27, %struct._object** %issuer, align 8, !dbg !8498, !tbaa !3860
  %40 = load %struct._object*, %struct._object** %issuer, align 8, !dbg !8499, !tbaa !3860
  %cmp28 = icmp eq %struct._object* %40, null, !dbg !8501
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !8502

if.then.29:                                       ; preds = %do.end.25
  br label %fail0, !dbg !8503

if.end.30:                                        ; preds = %do.end.25
  %41 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8504, !tbaa !3860
  %42 = load %struct._object*, %struct._object** %issuer, align 8, !dbg !8505, !tbaa !3860
  %call31 = call i32 @PyDict_SetItemString(%struct._object* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i32 0, i32 0), %struct._object* %42), !dbg !8506
  %cmp32 = icmp slt i32 %call31, 0, !dbg !8507
  br i1 %cmp32, label %if.then.33, label %if.end.46, !dbg !8508

if.then.33:                                       ; preds = %if.end.30
  br label %do.body.34, !dbg !8509

do.body.34:                                       ; preds = %if.then.33
  %43 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !8510
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !8510
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp35, metadata !2769, metadata !3830), !dbg !8512
  %44 = load %struct._object*, %struct._object** %issuer, align 8, !dbg !8513, !tbaa !3860
  store %struct._object* %44, %struct._object** %_py_decref_tmp35, align 8, !dbg !8512, !tbaa !3860
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !8514, !tbaa !3860
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !8516
  %46 = load i64, i64* %ob_refcnt36, align 8, !dbg !8517, !tbaa !4101
  %dec37 = add i64 %46, -1, !dbg !8517
  store i64 %dec37, i64* %ob_refcnt36, align 8, !dbg !8517, !tbaa !4101
  %cmp38 = icmp ne i64 %dec37, 0, !dbg !8518
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !8519

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43, !dbg !8520

if.else.40:                                       ; preds = %do.body.34
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !8522, !tbaa !3860
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !8524
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !8524, !tbaa !4204
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !8525
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !8525, !tbaa !4206
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !8526, !tbaa !3860
  call void %49(%struct._object* %50), !dbg !8527
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  %51 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !8528
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !8528
  br label %do.cond.44, !dbg !8530

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !8531

do.end.45:                                        ; preds = %do.cond.44
  br label %fail0, !dbg !8533

if.end.46:                                        ; preds = %if.end.30
  br label %do.body.47, !dbg !8534

do.body.47:                                       ; preds = %if.end.46
  %52 = bitcast %struct._object** %_py_decref_tmp48 to i8*, !dbg !8535
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !8535
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp48, metadata !2773, metadata !3830), !dbg !8537
  %53 = load %struct._object*, %struct._object** %issuer, align 8, !dbg !8538, !tbaa !3860
  store %struct._object* %53, %struct._object** %_py_decref_tmp48, align 8, !dbg !8537, !tbaa !3860
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8, !dbg !8539, !tbaa !3860
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !8541
  %55 = load i64, i64* %ob_refcnt49, align 8, !dbg !8542, !tbaa !4101
  %dec50 = add i64 %55, -1, !dbg !8542
  store i64 %dec50, i64* %ob_refcnt49, align 8, !dbg !8542, !tbaa !4101
  %cmp51 = icmp ne i64 %dec50, 0, !dbg !8543
  br i1 %cmp51, label %if.then.52, label %if.else.53, !dbg !8544

if.then.52:                                       ; preds = %do.body.47
  br label %if.end.56, !dbg !8545

if.else.53:                                       ; preds = %do.body.47
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8, !dbg !8547, !tbaa !3860
  %ob_type54 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !8549
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type54, align 8, !dbg !8549, !tbaa !4204
  %tp_dealloc55 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !8550
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc55, align 8, !dbg !8550, !tbaa !4206
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8, !dbg !8551, !tbaa !3860
  call void %58(%struct._object* %59), !dbg !8552
  br label %if.end.56

if.end.56:                                        ; preds = %if.else.53, %if.then.52
  %60 = bitcast %struct._object** %_py_decref_tmp48 to i8*, !dbg !8553
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !8553
  br label %do.cond.57, !dbg !8554

do.cond.57:                                       ; preds = %if.end.56
  br label %do.end.58, !dbg !8555

do.end.58:                                        ; preds = %do.cond.57
  %61 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8557, !tbaa !3860
  %cert_info = getelementptr inbounds %struct.x509_st, %struct.x509_st* %61, i32 0, i32 0, !dbg !8558
  %62 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %cert_info, align 8, !dbg !8558, !tbaa !8559
  %version59 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %62, i32 0, i32 0, !dbg !8561
  %63 = load %struct.asn1_string_st*, %struct.asn1_string_st** %version59, align 8, !dbg !8561, !tbaa !8562
  %call60 = call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* %63), !dbg !8565
  %add = add i64 %call60, 1, !dbg !8566
  %call61 = call %struct._object* @PyLong_FromLong(i64 %add), !dbg !8567
  store %struct._object* %call61, %struct._object** %version, align 8, !dbg !8568, !tbaa !3860
  %64 = load %struct._object*, %struct._object** %version, align 8, !dbg !8569, !tbaa !3860
  %cmp62 = icmp eq %struct._object* %64, null, !dbg !8571
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !8572

if.then.63:                                       ; preds = %do.end.58
  br label %fail0, !dbg !8573

if.end.64:                                        ; preds = %do.end.58
  %65 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8574, !tbaa !3860
  %66 = load %struct._object*, %struct._object** %version, align 8, !dbg !8575, !tbaa !3860
  %call65 = call i32 @PyDict_SetItemString(%struct._object* %65, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.162, i32 0, i32 0), %struct._object* %66), !dbg !8576
  %cmp66 = icmp slt i32 %call65, 0, !dbg !8577
  br i1 %cmp66, label %if.then.67, label %if.end.80, !dbg !8578

if.then.67:                                       ; preds = %if.end.64
  br label %do.body.68, !dbg !8579

do.body.68:                                       ; preds = %if.then.67
  %67 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !8580
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !8580
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp69, metadata !2775, metadata !3830), !dbg !8582
  %68 = load %struct._object*, %struct._object** %version, align 8, !dbg !8583, !tbaa !3860
  store %struct._object* %68, %struct._object** %_py_decref_tmp69, align 8, !dbg !8582, !tbaa !3860
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !8584, !tbaa !3860
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !8586
  %70 = load i64, i64* %ob_refcnt70, align 8, !dbg !8587, !tbaa !4101
  %dec71 = add i64 %70, -1, !dbg !8587
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !8587, !tbaa !4101
  %cmp72 = icmp ne i64 %dec71, 0, !dbg !8588
  br i1 %cmp72, label %if.then.73, label %if.else.74, !dbg !8589

if.then.73:                                       ; preds = %do.body.68
  br label %if.end.77, !dbg !8590

if.else.74:                                       ; preds = %do.body.68
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !8592, !tbaa !3860
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !8594
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !8594, !tbaa !4204
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !8595
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !8595, !tbaa !4206
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !8596, !tbaa !3860
  call void %73(%struct._object* %74), !dbg !8597
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %75 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !8598
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !8598
  br label %do.cond.78, !dbg !8600

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !8601

do.end.79:                                        ; preds = %do.cond.78
  br label %fail0, !dbg !8603

if.end.80:                                        ; preds = %if.end.64
  br label %do.body.81, !dbg !8604

do.body.81:                                       ; preds = %if.end.80
  %76 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !8605
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !8605
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp82, metadata !2779, metadata !3830), !dbg !8607
  %77 = load %struct._object*, %struct._object** %version, align 8, !dbg !8608, !tbaa !3860
  store %struct._object* %77, %struct._object** %_py_decref_tmp82, align 8, !dbg !8607, !tbaa !3860
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !8609, !tbaa !3860
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !8611
  %79 = load i64, i64* %ob_refcnt83, align 8, !dbg !8612, !tbaa !4101
  %dec84 = add i64 %79, -1, !dbg !8612
  store i64 %dec84, i64* %ob_refcnt83, align 8, !dbg !8612, !tbaa !4101
  %cmp85 = icmp ne i64 %dec84, 0, !dbg !8613
  br i1 %cmp85, label %if.then.86, label %if.else.87, !dbg !8614

if.then.86:                                       ; preds = %do.body.81
  br label %if.end.90, !dbg !8615

if.else.87:                                       ; preds = %do.body.81
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !8617, !tbaa !3860
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !8619
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !8619, !tbaa !4204
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !8620
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !8620, !tbaa !4206
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !8621, !tbaa !3860
  call void %82(%struct._object* %83), !dbg !8622
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  %84 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !8623
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !8623
  br label %do.cond.91, !dbg !8624

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !8625

do.end.92:                                        ; preds = %do.cond.91
  %call93 = call %struct.bio_method_st* @BIO_s_mem(), !dbg !8627
  %call94 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call93), !dbg !8628
  store %struct.bio_st* %call94, %struct.bio_st** %biobuf, align 8, !dbg !8629, !tbaa !3860
  %85 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8630, !tbaa !3860
  %call95 = call i64 @BIO_ctrl(%struct.bio_st* %85, i32 1, i64 0, i8* null), !dbg !8631
  %conv = trunc i64 %call95 to i32, !dbg !8632
  %86 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8633, !tbaa !3860
  %call96 = call %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st* %86), !dbg !8634
  store %struct.asn1_string_st* %call96, %struct.asn1_string_st** %serialNumber, align 8, !dbg !8635, !tbaa !3860
  %87 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8636, !tbaa !3860
  %88 = load %struct.asn1_string_st*, %struct.asn1_string_st** %serialNumber, align 8, !dbg !8637, !tbaa !3860
  %call97 = call i32 @i2a_ASN1_INTEGER(%struct.bio_st* %87, %struct.asn1_string_st* %88), !dbg !8638
  %89 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8639, !tbaa !3860
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8640
  %call98 = call i32 @BIO_gets(%struct.bio_st* %89, i8* %arraydecay, i32 2047), !dbg !8641
  store i32 %call98, i32* %len, align 4, !dbg !8642, !tbaa !4372
  %90 = load i32, i32* %len, align 4, !dbg !8643, !tbaa !4372
  %cmp99 = icmp slt i32 %90, 0, !dbg !8645
  br i1 %cmp99, label %if.then.101, label %if.end.103, !dbg !8646

if.then.101:                                      ; preds = %do.end.92
  %call102 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1150), !dbg !8647
  br label %fail1, !dbg !8649

if.end.103:                                       ; preds = %do.end.92
  %arraydecay104 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8650
  %91 = load i32, i32* %len, align 4, !dbg !8651, !tbaa !4372
  %conv105 = sext i32 %91 to i64, !dbg !8651
  %call106 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %arraydecay104, i64 %conv105), !dbg !8652
  store %struct._object* %call106, %struct._object** %sn_obj, align 8, !dbg !8653, !tbaa !3860
  %92 = load %struct._object*, %struct._object** %sn_obj, align 8, !dbg !8654, !tbaa !3860
  %cmp107 = icmp eq %struct._object* %92, null, !dbg !8656
  br i1 %cmp107, label %if.then.109, label %if.end.110, !dbg !8657

if.then.109:                                      ; preds = %if.end.103
  br label %fail1, !dbg !8658

if.end.110:                                       ; preds = %if.end.103
  %93 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8659, !tbaa !3860
  %94 = load %struct._object*, %struct._object** %sn_obj, align 8, !dbg !8660, !tbaa !3860
  %call111 = call i32 @PyDict_SetItemString(%struct._object* %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.163, i32 0, i32 0), %struct._object* %94), !dbg !8661
  %cmp112 = icmp slt i32 %call111, 0, !dbg !8662
  br i1 %cmp112, label %if.then.114, label %if.end.128, !dbg !8663

if.then.114:                                      ; preds = %if.end.110
  br label %do.body.115, !dbg !8664

do.body.115:                                      ; preds = %if.then.114
  %95 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !8665
  call void @llvm.lifetime.start(i64 8, i8* %95) #1, !dbg !8665
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp116, metadata !2781, metadata !3830), !dbg !8667
  %96 = load %struct._object*, %struct._object** %sn_obj, align 8, !dbg !8668, !tbaa !3860
  store %struct._object* %96, %struct._object** %_py_decref_tmp116, align 8, !dbg !8667, !tbaa !3860
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !8669, !tbaa !3860
  %ob_refcnt117 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !8671
  %98 = load i64, i64* %ob_refcnt117, align 8, !dbg !8672, !tbaa !4101
  %dec118 = add i64 %98, -1, !dbg !8672
  store i64 %dec118, i64* %ob_refcnt117, align 8, !dbg !8672, !tbaa !4101
  %cmp119 = icmp ne i64 %dec118, 0, !dbg !8673
  br i1 %cmp119, label %if.then.121, label %if.else.122, !dbg !8674

if.then.121:                                      ; preds = %do.body.115
  br label %if.end.125, !dbg !8675

if.else.122:                                      ; preds = %do.body.115
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !8677, !tbaa !3860
  %ob_type123 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !8679
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type123, align 8, !dbg !8679, !tbaa !4204
  %tp_dealloc124 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !8680
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc124, align 8, !dbg !8680, !tbaa !4206
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !8681, !tbaa !3860
  call void %101(%struct._object* %102), !dbg !8682
  br label %if.end.125

if.end.125:                                       ; preds = %if.else.122, %if.then.121
  %103 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !8683
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !8683
  br label %do.cond.126, !dbg !8685

do.cond.126:                                      ; preds = %if.end.125
  br label %do.end.127, !dbg !8686

do.end.127:                                       ; preds = %do.cond.126
  br label %fail1, !dbg !8688

if.end.128:                                       ; preds = %if.end.110
  br label %do.body.129, !dbg !8689

do.body.129:                                      ; preds = %if.end.128
  %104 = bitcast %struct._object** %_py_decref_tmp130 to i8*, !dbg !8690
  call void @llvm.lifetime.start(i64 8, i8* %104) #1, !dbg !8690
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp130, metadata !2785, metadata !3830), !dbg !8692
  %105 = load %struct._object*, %struct._object** %sn_obj, align 8, !dbg !8693, !tbaa !3860
  store %struct._object* %105, %struct._object** %_py_decref_tmp130, align 8, !dbg !8692, !tbaa !3860
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8, !dbg !8694, !tbaa !3860
  %ob_refcnt131 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 0, !dbg !8696
  %107 = load i64, i64* %ob_refcnt131, align 8, !dbg !8697, !tbaa !4101
  %dec132 = add i64 %107, -1, !dbg !8697
  store i64 %dec132, i64* %ob_refcnt131, align 8, !dbg !8697, !tbaa !4101
  %cmp133 = icmp ne i64 %dec132, 0, !dbg !8698
  br i1 %cmp133, label %if.then.135, label %if.else.136, !dbg !8699

if.then.135:                                      ; preds = %do.body.129
  br label %if.end.139, !dbg !8700

if.else.136:                                      ; preds = %do.body.129
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8, !dbg !8702, !tbaa !3860
  %ob_type137 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 1, !dbg !8704
  %109 = load %struct._typeobject*, %struct._typeobject** %ob_type137, align 8, !dbg !8704, !tbaa !4204
  %tp_dealloc138 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %109, i32 0, i32 4, !dbg !8705
  %110 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc138, align 8, !dbg !8705, !tbaa !4206
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8, !dbg !8706, !tbaa !3860
  call void %110(%struct._object* %111), !dbg !8707
  br label %if.end.139

if.end.139:                                       ; preds = %if.else.136, %if.then.135
  %112 = bitcast %struct._object** %_py_decref_tmp130 to i8*, !dbg !8708
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !8708
  br label %do.cond.140, !dbg !8709

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !8710

do.end.141:                                       ; preds = %do.cond.140
  %113 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8712, !tbaa !3860
  %call142 = call i64 @BIO_ctrl(%struct.bio_st* %113, i32 1, i64 0, i8* null), !dbg !8713
  %conv143 = trunc i64 %call142 to i32, !dbg !8714
  %114 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8715, !tbaa !3860
  %cert_info144 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %114, i32 0, i32 0, !dbg !8716
  %115 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %cert_info144, align 8, !dbg !8716, !tbaa !8559
  %validity = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %115, i32 0, i32 4, !dbg !8717
  %116 = load %struct.X509_val_st*, %struct.X509_val_st** %validity, align 8, !dbg !8717, !tbaa !8718
  %notBefore145 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %116, i32 0, i32 0, !dbg !8719
  %117 = load %struct.asn1_string_st*, %struct.asn1_string_st** %notBefore145, align 8, !dbg !8719, !tbaa !8720
  store %struct.asn1_string_st* %117, %struct.asn1_string_st** %notBefore, align 8, !dbg !8722, !tbaa !3860
  %118 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8723, !tbaa !3860
  %119 = load %struct.asn1_string_st*, %struct.asn1_string_st** %notBefore, align 8, !dbg !8724, !tbaa !3860
  %call146 = call i32 @ASN1_TIME_print(%struct.bio_st* %118, %struct.asn1_string_st* %119), !dbg !8725
  %120 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8726, !tbaa !3860
  %arraydecay147 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8727
  %call148 = call i32 @BIO_gets(%struct.bio_st* %120, i8* %arraydecay147, i32 2047), !dbg !8728
  store i32 %call148, i32* %len, align 4, !dbg !8729, !tbaa !4372
  %121 = load i32, i32* %len, align 4, !dbg !8730, !tbaa !4372
  %cmp149 = icmp slt i32 %121, 0, !dbg !8732
  br i1 %cmp149, label %if.then.151, label %if.end.153, !dbg !8733

if.then.151:                                      ; preds = %do.end.141
  %call152 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1167), !dbg !8734
  br label %fail1, !dbg !8736

if.end.153:                                       ; preds = %do.end.141
  %arraydecay154 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8737
  %122 = load i32, i32* %len, align 4, !dbg !8738, !tbaa !4372
  %conv155 = sext i32 %122 to i64, !dbg !8738
  %call156 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %arraydecay154, i64 %conv155), !dbg !8739
  store %struct._object* %call156, %struct._object** %pnotBefore, align 8, !dbg !8740, !tbaa !3860
  %123 = load %struct._object*, %struct._object** %pnotBefore, align 8, !dbg !8741, !tbaa !3860
  %cmp157 = icmp eq %struct._object* %123, null, !dbg !8743
  br i1 %cmp157, label %if.then.159, label %if.end.160, !dbg !8744

if.then.159:                                      ; preds = %if.end.153
  br label %fail1, !dbg !8745

if.end.160:                                       ; preds = %if.end.153
  %124 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8746, !tbaa !3860
  %125 = load %struct._object*, %struct._object** %pnotBefore, align 8, !dbg !8747, !tbaa !3860
  %call161 = call i32 @PyDict_SetItemString(%struct._object* %124, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i32 0, i32 0), %struct._object* %125), !dbg !8748
  %cmp162 = icmp slt i32 %call161, 0, !dbg !8749
  br i1 %cmp162, label %if.then.164, label %if.end.178, !dbg !8750

if.then.164:                                      ; preds = %if.end.160
  br label %do.body.165, !dbg !8751

do.body.165:                                      ; preds = %if.then.164
  %126 = bitcast %struct._object** %_py_decref_tmp166 to i8*, !dbg !8752
  call void @llvm.lifetime.start(i64 8, i8* %126) #1, !dbg !8752
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp166, metadata !2787, metadata !3830), !dbg !8754
  %127 = load %struct._object*, %struct._object** %pnotBefore, align 8, !dbg !8755, !tbaa !3860
  store %struct._object* %127, %struct._object** %_py_decref_tmp166, align 8, !dbg !8754, !tbaa !3860
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !8756, !tbaa !3860
  %ob_refcnt167 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 0, !dbg !8758
  %129 = load i64, i64* %ob_refcnt167, align 8, !dbg !8759, !tbaa !4101
  %dec168 = add i64 %129, -1, !dbg !8759
  store i64 %dec168, i64* %ob_refcnt167, align 8, !dbg !8759, !tbaa !4101
  %cmp169 = icmp ne i64 %dec168, 0, !dbg !8760
  br i1 %cmp169, label %if.then.171, label %if.else.172, !dbg !8761

if.then.171:                                      ; preds = %do.body.165
  br label %if.end.175, !dbg !8762

if.else.172:                                      ; preds = %do.body.165
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !8764, !tbaa !3860
  %ob_type173 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 1, !dbg !8766
  %131 = load %struct._typeobject*, %struct._typeobject** %ob_type173, align 8, !dbg !8766, !tbaa !4204
  %tp_dealloc174 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %131, i32 0, i32 4, !dbg !8767
  %132 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc174, align 8, !dbg !8767, !tbaa !4206
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !8768, !tbaa !3860
  call void %132(%struct._object* %133), !dbg !8769
  br label %if.end.175

if.end.175:                                       ; preds = %if.else.172, %if.then.171
  %134 = bitcast %struct._object** %_py_decref_tmp166 to i8*, !dbg !8770
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !8770
  br label %do.cond.176, !dbg !8772

do.cond.176:                                      ; preds = %if.end.175
  br label %do.end.177, !dbg !8773

do.end.177:                                       ; preds = %do.cond.176
  br label %fail1, !dbg !8775

if.end.178:                                       ; preds = %if.end.160
  br label %do.body.179, !dbg !8776

do.body.179:                                      ; preds = %if.end.178
  %135 = bitcast %struct._object** %_py_decref_tmp180 to i8*, !dbg !8777
  call void @llvm.lifetime.start(i64 8, i8* %135) #1, !dbg !8777
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp180, metadata !2791, metadata !3830), !dbg !8779
  %136 = load %struct._object*, %struct._object** %pnotBefore, align 8, !dbg !8780, !tbaa !3860
  store %struct._object* %136, %struct._object** %_py_decref_tmp180, align 8, !dbg !8779, !tbaa !3860
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp180, align 8, !dbg !8781, !tbaa !3860
  %ob_refcnt181 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 0, !dbg !8783
  %138 = load i64, i64* %ob_refcnt181, align 8, !dbg !8784, !tbaa !4101
  %dec182 = add i64 %138, -1, !dbg !8784
  store i64 %dec182, i64* %ob_refcnt181, align 8, !dbg !8784, !tbaa !4101
  %cmp183 = icmp ne i64 %dec182, 0, !dbg !8785
  br i1 %cmp183, label %if.then.185, label %if.else.186, !dbg !8786

if.then.185:                                      ; preds = %do.body.179
  br label %if.end.189, !dbg !8787

if.else.186:                                      ; preds = %do.body.179
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp180, align 8, !dbg !8789, !tbaa !3860
  %ob_type187 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 1, !dbg !8791
  %140 = load %struct._typeobject*, %struct._typeobject** %ob_type187, align 8, !dbg !8791, !tbaa !4204
  %tp_dealloc188 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %140, i32 0, i32 4, !dbg !8792
  %141 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc188, align 8, !dbg !8792, !tbaa !4206
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp180, align 8, !dbg !8793, !tbaa !3860
  call void %141(%struct._object* %142), !dbg !8794
  br label %if.end.189

if.end.189:                                       ; preds = %if.else.186, %if.then.185
  %143 = bitcast %struct._object** %_py_decref_tmp180 to i8*, !dbg !8795
  call void @llvm.lifetime.end(i64 8, i8* %143) #1, !dbg !8795
  br label %do.cond.190, !dbg !8796

do.cond.190:                                      ; preds = %if.end.189
  br label %do.end.191, !dbg !8797

do.end.191:                                       ; preds = %do.cond.190
  %144 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8799, !tbaa !3860
  %call192 = call i64 @BIO_ctrl(%struct.bio_st* %144, i32 1, i64 0, i8* null), !dbg !8800
  %conv193 = trunc i64 %call192 to i32, !dbg !8801
  %145 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8802, !tbaa !3860
  %cert_info194 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %145, i32 0, i32 0, !dbg !8803
  %146 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %cert_info194, align 8, !dbg !8803, !tbaa !8559
  %validity195 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %146, i32 0, i32 4, !dbg !8804
  %147 = load %struct.X509_val_st*, %struct.X509_val_st** %validity195, align 8, !dbg !8804, !tbaa !8718
  %notAfter196 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %147, i32 0, i32 1, !dbg !8805
  %148 = load %struct.asn1_string_st*, %struct.asn1_string_st** %notAfter196, align 8, !dbg !8805, !tbaa !8806
  store %struct.asn1_string_st* %148, %struct.asn1_string_st** %notAfter, align 8, !dbg !8807, !tbaa !3860
  %149 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8808, !tbaa !3860
  %150 = load %struct.asn1_string_st*, %struct.asn1_string_st** %notAfter, align 8, !dbg !8809, !tbaa !3860
  %call197 = call i32 @ASN1_TIME_print(%struct.bio_st* %149, %struct.asn1_string_st* %150), !dbg !8810
  %151 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !8811, !tbaa !3860
  %arraydecay198 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8812
  %call199 = call i32 @BIO_gets(%struct.bio_st* %151, i8* %arraydecay198, i32 2047), !dbg !8813
  store i32 %call199, i32* %len, align 4, !dbg !8814, !tbaa !4372
  %152 = load i32, i32* %len, align 4, !dbg !8815, !tbaa !4372
  %cmp200 = icmp slt i32 %152, 0, !dbg !8817
  br i1 %cmp200, label %if.then.202, label %if.end.204, !dbg !8818

if.then.202:                                      ; preds = %do.end.191
  %call203 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1184), !dbg !8819
  br label %fail1, !dbg !8821

if.end.204:                                       ; preds = %do.end.191
  %arraydecay205 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8822
  %153 = load i32, i32* %len, align 4, !dbg !8823, !tbaa !4372
  %conv206 = sext i32 %153 to i64, !dbg !8823
  %call207 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %arraydecay205, i64 %conv206), !dbg !8824
  store %struct._object* %call207, %struct._object** %pnotAfter, align 8, !dbg !8825, !tbaa !3860
  %154 = load %struct._object*, %struct._object** %pnotAfter, align 8, !dbg !8826, !tbaa !3860
  %cmp208 = icmp eq %struct._object* %154, null, !dbg !8828
  br i1 %cmp208, label %if.then.210, label %if.end.211, !dbg !8829

if.then.210:                                      ; preds = %if.end.204
  br label %fail1, !dbg !8830

if.end.211:                                       ; preds = %if.end.204
  %155 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8831, !tbaa !3860
  %156 = load %struct._object*, %struct._object** %pnotAfter, align 8, !dbg !8832, !tbaa !3860
  %call212 = call i32 @PyDict_SetItemString(%struct._object* %155, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.165, i32 0, i32 0), %struct._object* %156), !dbg !8833
  %cmp213 = icmp slt i32 %call212, 0, !dbg !8834
  br i1 %cmp213, label %if.then.215, label %if.end.229, !dbg !8835

if.then.215:                                      ; preds = %if.end.211
  br label %do.body.216, !dbg !8836

do.body.216:                                      ; preds = %if.then.215
  %157 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !8837
  call void @llvm.lifetime.start(i64 8, i8* %157) #1, !dbg !8837
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp217, metadata !2793, metadata !3830), !dbg !8839
  %158 = load %struct._object*, %struct._object** %pnotAfter, align 8, !dbg !8840, !tbaa !3860
  store %struct._object* %158, %struct._object** %_py_decref_tmp217, align 8, !dbg !8839, !tbaa !3860
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !8841, !tbaa !3860
  %ob_refcnt218 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 0, !dbg !8843
  %160 = load i64, i64* %ob_refcnt218, align 8, !dbg !8844, !tbaa !4101
  %dec219 = add i64 %160, -1, !dbg !8844
  store i64 %dec219, i64* %ob_refcnt218, align 8, !dbg !8844, !tbaa !4101
  %cmp220 = icmp ne i64 %dec219, 0, !dbg !8845
  br i1 %cmp220, label %if.then.222, label %if.else.223, !dbg !8846

if.then.222:                                      ; preds = %do.body.216
  br label %if.end.226, !dbg !8847

if.else.223:                                      ; preds = %do.body.216
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !8849, !tbaa !3860
  %ob_type224 = getelementptr inbounds %struct._object, %struct._object* %161, i32 0, i32 1, !dbg !8851
  %162 = load %struct._typeobject*, %struct._typeobject** %ob_type224, align 8, !dbg !8851, !tbaa !4204
  %tp_dealloc225 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %162, i32 0, i32 4, !dbg !8852
  %163 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc225, align 8, !dbg !8852, !tbaa !4206
  %164 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !8853, !tbaa !3860
  call void %163(%struct._object* %164), !dbg !8854
  br label %if.end.226

if.end.226:                                       ; preds = %if.else.223, %if.then.222
  %165 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !8855
  call void @llvm.lifetime.end(i64 8, i8* %165) #1, !dbg !8855
  br label %do.cond.227, !dbg !8857

do.cond.227:                                      ; preds = %if.end.226
  br label %do.end.228, !dbg !8858

do.end.228:                                       ; preds = %do.cond.227
  br label %fail1, !dbg !8860

if.end.229:                                       ; preds = %if.end.211
  br label %do.body.230, !dbg !8861

do.body.230:                                      ; preds = %if.end.229
  %166 = bitcast %struct._object** %_py_decref_tmp231 to i8*, !dbg !8862
  call void @llvm.lifetime.start(i64 8, i8* %166) #1, !dbg !8862
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp231, metadata !2797, metadata !3830), !dbg !8864
  %167 = load %struct._object*, %struct._object** %pnotAfter, align 8, !dbg !8865, !tbaa !3860
  store %struct._object* %167, %struct._object** %_py_decref_tmp231, align 8, !dbg !8864, !tbaa !3860
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp231, align 8, !dbg !8866, !tbaa !3860
  %ob_refcnt232 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 0, !dbg !8868
  %169 = load i64, i64* %ob_refcnt232, align 8, !dbg !8869, !tbaa !4101
  %dec233 = add i64 %169, -1, !dbg !8869
  store i64 %dec233, i64* %ob_refcnt232, align 8, !dbg !8869, !tbaa !4101
  %cmp234 = icmp ne i64 %dec233, 0, !dbg !8870
  br i1 %cmp234, label %if.then.236, label %if.else.237, !dbg !8871

if.then.236:                                      ; preds = %do.body.230
  br label %if.end.240, !dbg !8872

if.else.237:                                      ; preds = %do.body.230
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp231, align 8, !dbg !8874, !tbaa !3860
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 1, !dbg !8876
  %171 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8, !dbg !8876, !tbaa !4204
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %171, i32 0, i32 4, !dbg !8877
  %172 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8, !dbg !8877, !tbaa !4206
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp231, align 8, !dbg !8878, !tbaa !3860
  call void %172(%struct._object* %173), !dbg !8879
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  %174 = bitcast %struct._object** %_py_decref_tmp231 to i8*, !dbg !8880
  call void @llvm.lifetime.end(i64 8, i8* %174) #1, !dbg !8880
  br label %do.cond.241, !dbg !8881

do.cond.241:                                      ; preds = %if.end.240
  br label %do.end.242, !dbg !8882

do.end.242:                                       ; preds = %do.cond.241
  %175 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8884, !tbaa !3860
  %call243 = call %struct._object* @_get_peer_alt_names(%struct.x509_st* %175), !dbg !8885
  store %struct._object* %call243, %struct._object** %peer_alt_names, align 8, !dbg !8886, !tbaa !3860
  %176 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !8887, !tbaa !3860
  %cmp244 = icmp eq %struct._object* %176, null, !dbg !8888
  br i1 %cmp244, label %if.then.246, label %if.else.247, !dbg !8889

if.then.246:                                      ; preds = %do.end.242
  br label %fail1, !dbg !8890

if.else.247:                                      ; preds = %do.end.242
  %177 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !8891, !tbaa !3860
  %cmp248 = icmp ne %struct._object* %177, @_Py_NoneStruct, !dbg !8892
  br i1 %cmp248, label %if.then.250, label %if.end.282, !dbg !8893

if.then.250:                                      ; preds = %if.else.247
  %178 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8894, !tbaa !3860
  %179 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !8895, !tbaa !3860
  %call251 = call i32 @PyDict_SetItemString(%struct._object* %178, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.166, i32 0, i32 0), %struct._object* %179), !dbg !8896
  %cmp252 = icmp slt i32 %call251, 0, !dbg !8897
  br i1 %cmp252, label %if.then.254, label %if.end.268, !dbg !8898

if.then.254:                                      ; preds = %if.then.250
  br label %do.body.255, !dbg !8899

do.body.255:                                      ; preds = %if.then.254
  %180 = bitcast %struct._object** %_py_decref_tmp256 to i8*, !dbg !8900
  call void @llvm.lifetime.start(i64 8, i8* %180) #1, !dbg !8900
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp256, metadata !2799, metadata !3830), !dbg !8902
  %181 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !8903, !tbaa !3860
  store %struct._object* %181, %struct._object** %_py_decref_tmp256, align 8, !dbg !8902, !tbaa !3860
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp256, align 8, !dbg !8904, !tbaa !3860
  %ob_refcnt257 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 0, !dbg !8906
  %183 = load i64, i64* %ob_refcnt257, align 8, !dbg !8907, !tbaa !4101
  %dec258 = add i64 %183, -1, !dbg !8907
  store i64 %dec258, i64* %ob_refcnt257, align 8, !dbg !8907, !tbaa !4101
  %cmp259 = icmp ne i64 %dec258, 0, !dbg !8908
  br i1 %cmp259, label %if.then.261, label %if.else.262, !dbg !8909

if.then.261:                                      ; preds = %do.body.255
  br label %if.end.265, !dbg !8910

if.else.262:                                      ; preds = %do.body.255
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp256, align 8, !dbg !8912, !tbaa !3860
  %ob_type263 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 1, !dbg !8914
  %185 = load %struct._typeobject*, %struct._typeobject** %ob_type263, align 8, !dbg !8914, !tbaa !4204
  %tp_dealloc264 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %185, i32 0, i32 4, !dbg !8915
  %186 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc264, align 8, !dbg !8915, !tbaa !4206
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp256, align 8, !dbg !8916, !tbaa !3860
  call void %186(%struct._object* %187), !dbg !8917
  br label %if.end.265

if.end.265:                                       ; preds = %if.else.262, %if.then.261
  %188 = bitcast %struct._object** %_py_decref_tmp256 to i8*, !dbg !8918
  call void @llvm.lifetime.end(i64 8, i8* %188) #1, !dbg !8918
  br label %do.cond.266, !dbg !8920

do.cond.266:                                      ; preds = %if.end.265
  br label %do.end.267, !dbg !8921

do.end.267:                                       ; preds = %do.cond.266
  br label %fail1, !dbg !8923

if.end.268:                                       ; preds = %if.then.250
  br label %do.body.269, !dbg !8924

do.body.269:                                      ; preds = %if.end.268
  %189 = bitcast %struct._object** %_py_decref_tmp270 to i8*, !dbg !8925
  call void @llvm.lifetime.start(i64 8, i8* %189) #1, !dbg !8925
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp270, metadata !2806, metadata !3830), !dbg !8927
  %190 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !8928, !tbaa !3860
  store %struct._object* %190, %struct._object** %_py_decref_tmp270, align 8, !dbg !8927, !tbaa !3860
  %191 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !8929, !tbaa !3860
  %ob_refcnt271 = getelementptr inbounds %struct._object, %struct._object* %191, i32 0, i32 0, !dbg !8931
  %192 = load i64, i64* %ob_refcnt271, align 8, !dbg !8932, !tbaa !4101
  %dec272 = add i64 %192, -1, !dbg !8932
  store i64 %dec272, i64* %ob_refcnt271, align 8, !dbg !8932, !tbaa !4101
  %cmp273 = icmp ne i64 %dec272, 0, !dbg !8933
  br i1 %cmp273, label %if.then.275, label %if.else.276, !dbg !8934

if.then.275:                                      ; preds = %do.body.269
  br label %if.end.279, !dbg !8935

if.else.276:                                      ; preds = %do.body.269
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !8937, !tbaa !3860
  %ob_type277 = getelementptr inbounds %struct._object, %struct._object* %193, i32 0, i32 1, !dbg !8939
  %194 = load %struct._typeobject*, %struct._typeobject** %ob_type277, align 8, !dbg !8939, !tbaa !4204
  %tp_dealloc278 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %194, i32 0, i32 4, !dbg !8940
  %195 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc278, align 8, !dbg !8940, !tbaa !4206
  %196 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !8941, !tbaa !3860
  call void %195(%struct._object* %196), !dbg !8942
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.276, %if.then.275
  %197 = bitcast %struct._object** %_py_decref_tmp270 to i8*, !dbg !8943
  call void @llvm.lifetime.end(i64 8, i8* %197) #1, !dbg !8943
  br label %do.cond.280, !dbg !8945

do.cond.280:                                      ; preds = %if.end.279
  br label %do.end.281, !dbg !8946

do.end.281:                                       ; preds = %do.cond.280
  br label %if.end.282, !dbg !8948

if.end.282:                                       ; preds = %do.end.281, %if.else.247
  br label %if.end.283

if.end.283:                                       ; preds = %if.end.282
  %198 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8949, !tbaa !3860
  %call284 = call %struct._object* @_get_aia_uri(%struct.x509_st* %198, i32 178), !dbg !8950
  store %struct._object* %call284, %struct._object** %obj, align 8, !dbg !8951, !tbaa !3860
  %199 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8952, !tbaa !3860
  %cmp285 = icmp eq %struct._object* %199, null, !dbg !8953
  br i1 %cmp285, label %if.then.287, label %if.else.288, !dbg !8954

if.then.287:                                      ; preds = %if.end.283
  br label %fail1, !dbg !8955

if.else.288:                                      ; preds = %if.end.283
  %200 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8957, !tbaa !3860
  %cmp289 = icmp ne %struct._object* %200, @_Py_NoneStruct, !dbg !8958
  br i1 %cmp289, label %if.then.291, label %if.end.310, !dbg !8959

if.then.291:                                      ; preds = %if.else.288
  %201 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !8960, !tbaa !3860
  %202 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8961, !tbaa !3860
  %call292 = call i32 @PyDict_SetItemString(%struct._object* %201, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i32 0, i32 0), %struct._object* %202), !dbg !8962
  store i32 %call292, i32* %result, align 4, !dbg !8963, !tbaa !4372
  br label %do.body.293, !dbg !8964

do.body.293:                                      ; preds = %if.then.291
  %203 = bitcast %struct._object** %_py_decref_tmp294 to i8*, !dbg !8965
  call void @llvm.lifetime.start(i64 8, i8* %203) #1, !dbg !8965
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp294, metadata !2808, metadata !3830), !dbg !8967
  %204 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8968, !tbaa !3860
  store %struct._object* %204, %struct._object** %_py_decref_tmp294, align 8, !dbg !8967, !tbaa !3860
  %205 = load %struct._object*, %struct._object** %_py_decref_tmp294, align 8, !dbg !8969, !tbaa !3860
  %ob_refcnt295 = getelementptr inbounds %struct._object, %struct._object* %205, i32 0, i32 0, !dbg !8971
  %206 = load i64, i64* %ob_refcnt295, align 8, !dbg !8972, !tbaa !4101
  %dec296 = add i64 %206, -1, !dbg !8972
  store i64 %dec296, i64* %ob_refcnt295, align 8, !dbg !8972, !tbaa !4101
  %cmp297 = icmp ne i64 %dec296, 0, !dbg !8973
  br i1 %cmp297, label %if.then.299, label %if.else.300, !dbg !8974

if.then.299:                                      ; preds = %do.body.293
  br label %if.end.303, !dbg !8975

if.else.300:                                      ; preds = %do.body.293
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp294, align 8, !dbg !8977, !tbaa !3860
  %ob_type301 = getelementptr inbounds %struct._object, %struct._object* %207, i32 0, i32 1, !dbg !8979
  %208 = load %struct._typeobject*, %struct._typeobject** %ob_type301, align 8, !dbg !8979, !tbaa !4204
  %tp_dealloc302 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %208, i32 0, i32 4, !dbg !8980
  %209 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc302, align 8, !dbg !8980, !tbaa !4206
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp294, align 8, !dbg !8981, !tbaa !3860
  call void %209(%struct._object* %210), !dbg !8982
  br label %if.end.303

if.end.303:                                       ; preds = %if.else.300, %if.then.299
  %211 = bitcast %struct._object** %_py_decref_tmp294 to i8*, !dbg !8983
  call void @llvm.lifetime.end(i64 8, i8* %211) #1, !dbg !8983
  br label %do.cond.304, !dbg !8985

do.cond.304:                                      ; preds = %if.end.303
  br label %do.end.305, !dbg !8986

do.end.305:                                       ; preds = %do.cond.304
  %212 = load i32, i32* %result, align 4, !dbg !8988, !tbaa !4372
  %cmp306 = icmp slt i32 %212, 0, !dbg !8990
  br i1 %cmp306, label %if.then.308, label %if.end.309, !dbg !8991

if.then.308:                                      ; preds = %do.end.305
  br label %fail1, !dbg !8992

if.end.309:                                       ; preds = %do.end.305
  br label %if.end.310, !dbg !8994

if.end.310:                                       ; preds = %if.end.309, %if.else.288
  br label %if.end.311

if.end.311:                                       ; preds = %if.end.310
  %213 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !8995, !tbaa !3860
  %call312 = call %struct._object* @_get_aia_uri(%struct.x509_st* %213, i32 179), !dbg !8996
  store %struct._object* %call312, %struct._object** %obj, align 8, !dbg !8997, !tbaa !3860
  %214 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8998, !tbaa !3860
  %cmp313 = icmp eq %struct._object* %214, null, !dbg !8999
  br i1 %cmp313, label %if.then.315, label %if.else.316, !dbg !9000

if.then.315:                                      ; preds = %if.end.311
  br label %fail1, !dbg !9001

if.else.316:                                      ; preds = %if.end.311
  %215 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9003, !tbaa !3860
  %cmp317 = icmp ne %struct._object* %215, @_Py_NoneStruct, !dbg !9004
  br i1 %cmp317, label %if.then.319, label %if.end.338, !dbg !9005

if.then.319:                                      ; preds = %if.else.316
  %216 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !9006, !tbaa !3860
  %217 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9007, !tbaa !3860
  %call320 = call i32 @PyDict_SetItemString(%struct._object* %216, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i32 0, i32 0), %struct._object* %217), !dbg !9008
  store i32 %call320, i32* %result, align 4, !dbg !9009, !tbaa !4372
  br label %do.body.321, !dbg !9010

do.body.321:                                      ; preds = %if.then.319
  %218 = bitcast %struct._object** %_py_decref_tmp322 to i8*, !dbg !9011
  call void @llvm.lifetime.start(i64 8, i8* %218) #1, !dbg !9011
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp322, metadata !2813, metadata !3830), !dbg !9013
  %219 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9014, !tbaa !3860
  store %struct._object* %219, %struct._object** %_py_decref_tmp322, align 8, !dbg !9013, !tbaa !3860
  %220 = load %struct._object*, %struct._object** %_py_decref_tmp322, align 8, !dbg !9015, !tbaa !3860
  %ob_refcnt323 = getelementptr inbounds %struct._object, %struct._object* %220, i32 0, i32 0, !dbg !9017
  %221 = load i64, i64* %ob_refcnt323, align 8, !dbg !9018, !tbaa !4101
  %dec324 = add i64 %221, -1, !dbg !9018
  store i64 %dec324, i64* %ob_refcnt323, align 8, !dbg !9018, !tbaa !4101
  %cmp325 = icmp ne i64 %dec324, 0, !dbg !9019
  br i1 %cmp325, label %if.then.327, label %if.else.328, !dbg !9020

if.then.327:                                      ; preds = %do.body.321
  br label %if.end.331, !dbg !9021

if.else.328:                                      ; preds = %do.body.321
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp322, align 8, !dbg !9023, !tbaa !3860
  %ob_type329 = getelementptr inbounds %struct._object, %struct._object* %222, i32 0, i32 1, !dbg !9025
  %223 = load %struct._typeobject*, %struct._typeobject** %ob_type329, align 8, !dbg !9025, !tbaa !4204
  %tp_dealloc330 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %223, i32 0, i32 4, !dbg !9026
  %224 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc330, align 8, !dbg !9026, !tbaa !4206
  %225 = load %struct._object*, %struct._object** %_py_decref_tmp322, align 8, !dbg !9027, !tbaa !3860
  call void %224(%struct._object* %225), !dbg !9028
  br label %if.end.331

if.end.331:                                       ; preds = %if.else.328, %if.then.327
  %226 = bitcast %struct._object** %_py_decref_tmp322 to i8*, !dbg !9029
  call void @llvm.lifetime.end(i64 8, i8* %226) #1, !dbg !9029
  br label %do.cond.332, !dbg !9031

do.cond.332:                                      ; preds = %if.end.331
  br label %do.end.333, !dbg !9032

do.end.333:                                       ; preds = %do.cond.332
  %227 = load i32, i32* %result, align 4, !dbg !9034, !tbaa !4372
  %cmp334 = icmp slt i32 %227, 0, !dbg !9036
  br i1 %cmp334, label %if.then.336, label %if.end.337, !dbg !9037

if.then.336:                                      ; preds = %do.end.333
  br label %fail1, !dbg !9038

if.end.337:                                       ; preds = %do.end.333
  br label %if.end.338, !dbg !9040

if.end.338:                                       ; preds = %if.end.337, %if.else.316
  br label %if.end.339

if.end.339:                                       ; preds = %if.end.338
  %228 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !9041, !tbaa !3860
  %call340 = call %struct._object* @_get_crl_dp(%struct.x509_st* %228), !dbg !9042
  store %struct._object* %call340, %struct._object** %obj, align 8, !dbg !9043, !tbaa !3860
  %229 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9044, !tbaa !3860
  %cmp341 = icmp eq %struct._object* %229, null, !dbg !9045
  br i1 %cmp341, label %if.then.343, label %if.else.344, !dbg !9046

if.then.343:                                      ; preds = %if.end.339
  br label %fail1, !dbg !9047

if.else.344:                                      ; preds = %if.end.339
  %230 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9049, !tbaa !3860
  %cmp345 = icmp ne %struct._object* %230, @_Py_NoneStruct, !dbg !9050
  br i1 %cmp345, label %if.then.347, label %if.end.366, !dbg !9051

if.then.347:                                      ; preds = %if.else.344
  %231 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !9052, !tbaa !3860
  %232 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9053, !tbaa !3860
  %call348 = call i32 @PyDict_SetItemString(%struct._object* %231, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.169, i32 0, i32 0), %struct._object* %232), !dbg !9054
  store i32 %call348, i32* %result, align 4, !dbg !9055, !tbaa !4372
  br label %do.body.349, !dbg !9056

do.body.349:                                      ; preds = %if.then.347
  %233 = bitcast %struct._object** %_py_decref_tmp350 to i8*, !dbg !9057
  call void @llvm.lifetime.start(i64 8, i8* %233) #1, !dbg !9057
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp350, metadata !2818, metadata !3830), !dbg !9059
  %234 = load %struct._object*, %struct._object** %obj, align 8, !dbg !9060, !tbaa !3860
  store %struct._object* %234, %struct._object** %_py_decref_tmp350, align 8, !dbg !9059, !tbaa !3860
  %235 = load %struct._object*, %struct._object** %_py_decref_tmp350, align 8, !dbg !9061, !tbaa !3860
  %ob_refcnt351 = getelementptr inbounds %struct._object, %struct._object* %235, i32 0, i32 0, !dbg !9063
  %236 = load i64, i64* %ob_refcnt351, align 8, !dbg !9064, !tbaa !4101
  %dec352 = add i64 %236, -1, !dbg !9064
  store i64 %dec352, i64* %ob_refcnt351, align 8, !dbg !9064, !tbaa !4101
  %cmp353 = icmp ne i64 %dec352, 0, !dbg !9065
  br i1 %cmp353, label %if.then.355, label %if.else.356, !dbg !9066

if.then.355:                                      ; preds = %do.body.349
  br label %if.end.359, !dbg !9067

if.else.356:                                      ; preds = %do.body.349
  %237 = load %struct._object*, %struct._object** %_py_decref_tmp350, align 8, !dbg !9069, !tbaa !3860
  %ob_type357 = getelementptr inbounds %struct._object, %struct._object* %237, i32 0, i32 1, !dbg !9071
  %238 = load %struct._typeobject*, %struct._typeobject** %ob_type357, align 8, !dbg !9071, !tbaa !4204
  %tp_dealloc358 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %238, i32 0, i32 4, !dbg !9072
  %239 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc358, align 8, !dbg !9072, !tbaa !4206
  %240 = load %struct._object*, %struct._object** %_py_decref_tmp350, align 8, !dbg !9073, !tbaa !3860
  call void %239(%struct._object* %240), !dbg !9074
  br label %if.end.359

if.end.359:                                       ; preds = %if.else.356, %if.then.355
  %241 = bitcast %struct._object** %_py_decref_tmp350 to i8*, !dbg !9075
  call void @llvm.lifetime.end(i64 8, i8* %241) #1, !dbg !9075
  br label %do.cond.360, !dbg !9077

do.cond.360:                                      ; preds = %if.end.359
  br label %do.end.361, !dbg !9078

do.end.361:                                       ; preds = %do.cond.360
  %242 = load i32, i32* %result, align 4, !dbg !9080, !tbaa !4372
  %cmp362 = icmp slt i32 %242, 0, !dbg !9082
  br i1 %cmp362, label %if.then.364, label %if.end.365, !dbg !9083

if.then.364:                                      ; preds = %do.end.361
  br label %fail1, !dbg !9084

if.end.365:                                       ; preds = %do.end.361
  br label %if.end.366, !dbg !9086

if.end.366:                                       ; preds = %if.end.365, %if.else.344
  br label %if.end.367

if.end.367:                                       ; preds = %if.end.366
  %243 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !9087, !tbaa !3860
  %call368 = call i32 @BIO_free(%struct.bio_st* %243), !dbg !9088
  %244 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !9089, !tbaa !3860
  store %struct._object* %244, %struct._object** %retval, !dbg !9090
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9090

fail1:                                            ; preds = %if.then.364, %if.then.343, %if.then.336, %if.then.315, %if.then.308, %if.then.287, %do.end.267, %if.then.246, %do.end.228, %if.then.210, %if.then.202, %do.end.177, %if.then.159, %if.then.151, %do.end.127, %if.then.109, %if.then.101
  %245 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !9091, !tbaa !3860
  %cmp369 = icmp ne %struct.bio_st* %245, null, !dbg !9093
  br i1 %cmp369, label %if.then.371, label %if.end.373, !dbg !9094

if.then.371:                                      ; preds = %fail1
  %246 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !9095, !tbaa !3860
  %call372 = call i32 @BIO_free(%struct.bio_st* %246), !dbg !9096
  br label %if.end.373, !dbg !9096

if.end.373:                                       ; preds = %if.then.371, %fail1
  br label %fail0, !dbg !9097

fail0:                                            ; preds = %if.end.373, %do.end.79, %if.then.63, %do.end.45, %if.then.29, %do.end, %if.then.5
  br label %do.body.374, !dbg !9099

do.body.374:                                      ; preds = %fail0
  %247 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9100
  call void @llvm.lifetime.start(i64 8, i8* %247) #1, !dbg !9100
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2823, metadata !3830), !dbg !9102
  %248 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !9103, !tbaa !3860
  store %struct._object* %248, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9102, !tbaa !3860
  %249 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9104, !tbaa !3860
  %cmp375 = icmp ne %struct._object* %249, null, !dbg !9105
  br i1 %cmp375, label %if.then.377, label %if.end.391, !dbg !9106

if.then.377:                                      ; preds = %do.body.374
  br label %do.body.378, !dbg !9107

do.body.378:                                      ; preds = %if.then.377
  %250 = bitcast %struct._object** %_py_decref_tmp379 to i8*, !dbg !9109
  call void @llvm.lifetime.start(i64 8, i8* %250) #1, !dbg !9109
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp379, metadata !2825, metadata !3830), !dbg !9111
  %251 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9112, !tbaa !3860
  store %struct._object* %251, %struct._object** %_py_decref_tmp379, align 8, !dbg !9111, !tbaa !3860
  %252 = load %struct._object*, %struct._object** %_py_decref_tmp379, align 8, !dbg !9113, !tbaa !3860
  %ob_refcnt380 = getelementptr inbounds %struct._object, %struct._object* %252, i32 0, i32 0, !dbg !9115
  %253 = load i64, i64* %ob_refcnt380, align 8, !dbg !9116, !tbaa !4101
  %dec381 = add i64 %253, -1, !dbg !9116
  store i64 %dec381, i64* %ob_refcnt380, align 8, !dbg !9116, !tbaa !4101
  %cmp382 = icmp ne i64 %dec381, 0, !dbg !9117
  br i1 %cmp382, label %if.then.384, label %if.else.385, !dbg !9118

if.then.384:                                      ; preds = %do.body.378
  br label %if.end.388, !dbg !9119

if.else.385:                                      ; preds = %do.body.378
  %254 = load %struct._object*, %struct._object** %_py_decref_tmp379, align 8, !dbg !9121, !tbaa !3860
  %ob_type386 = getelementptr inbounds %struct._object, %struct._object* %254, i32 0, i32 1, !dbg !9123
  %255 = load %struct._typeobject*, %struct._typeobject** %ob_type386, align 8, !dbg !9123, !tbaa !4204
  %tp_dealloc387 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %255, i32 0, i32 4, !dbg !9124
  %256 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc387, align 8, !dbg !9124, !tbaa !4206
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp379, align 8, !dbg !9125, !tbaa !3860
  call void %256(%struct._object* %257), !dbg !9126
  br label %if.end.388

if.end.388:                                       ; preds = %if.else.385, %if.then.384
  %258 = bitcast %struct._object** %_py_decref_tmp379 to i8*, !dbg !9127
  call void @llvm.lifetime.end(i64 8, i8* %258) #1, !dbg !9127
  br label %do.cond.389, !dbg !9129

do.cond.389:                                      ; preds = %if.end.388
  br label %do.end.390, !dbg !9130

do.end.390:                                       ; preds = %do.cond.389
  br label %if.end.391, !dbg !9132

if.end.391:                                       ; preds = %do.end.390, %do.body.374
  %259 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9134
  call void @llvm.lifetime.end(i64 8, i8* %259) #1, !dbg !9134
  br label %do.cond.392, !dbg !9137

do.cond.392:                                      ; preds = %if.end.391
  br label %do.end.393, !dbg !9138

do.end.393:                                       ; preds = %do.cond.392
  store %struct._object* null, %struct._object** %retval, !dbg !9140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9140

cleanup:                                          ; preds = %do.end.393, %if.end.367, %if.then
  %260 = bitcast %struct._object** %pnotAfter to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %260) #1, !dbg !9141
  %261 = bitcast %struct._object** %pnotBefore to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %261) #1, !dbg !9141
  %262 = bitcast %struct.asn1_string_st** %notAfter to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %262) #1, !dbg !9141
  %263 = bitcast %struct.asn1_string_st** %notBefore to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %263) #1, !dbg !9141
  %264 = bitcast i32* %result to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 4, i8* %264) #1, !dbg !9141
  %265 = bitcast i32* %len to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 4, i8* %265) #1, !dbg !9141
  %266 = bitcast [2048 x i8]* %buf to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 2048, i8* %266) #1, !dbg !9141
  %267 = bitcast %struct.asn1_string_st** %serialNumber to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %267) #1, !dbg !9141
  %268 = bitcast %struct._object** %obj to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %268) #1, !dbg !9141
  %269 = bitcast %struct._object** %sn_obj to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %269) #1, !dbg !9141
  %270 = bitcast %struct._object** %version to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %270) #1, !dbg !9141
  %271 = bitcast %struct._object** %issuer to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %271) #1, !dbg !9141
  %272 = bitcast %struct._object** %peer_alt_names to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %272) #1, !dbg !9141
  %273 = bitcast %struct._object** %peer to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %273) #1, !dbg !9141
  %274 = bitcast %struct.bio_st** %biobuf to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %274) #1, !dbg !9141
  %275 = bitcast %struct._object** %retval1 to i8*, !dbg !9141
  call void @llvm.lifetime.end(i64 8, i8* %275) #1, !dbg !9141
  %276 = load %struct._object*, %struct._object** %retval, !dbg !9141
  ret %struct._object* %276, !dbg !9141
}

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

declare i32 @i2d_X509(%struct.x509_st*, i8**) #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare void @CRYPTO_free(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_create_tuple_for_X509_NAME(%struct.X509_name_st* %xname) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %xname.addr = alloca %struct.X509_name_st*, align 8
  %dn = alloca %struct._object*, align 8
  %rdn = alloca %struct._object*, align 8
  %rdnt = alloca %struct._object*, align 8
  %attr = alloca %struct._object*, align 8
  %entry_count = alloca i32, align 4
  %entry1 = alloca %struct.X509_name_entry_st*, align 8
  %name = alloca %struct.asn1_object_st*, align 8
  %value = alloca %struct.asn1_string_st*, align 8
  %index_counter = alloca i32, align 4
  %rdn_level = alloca i32, align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %_py_decref_tmp103 = alloca %struct._object*, align 8
  %_py_decref_tmp118 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  %_py_xdecref_tmp151 = alloca %struct._object*, align 8
  %_py_decref_tmp155 = alloca %struct._object*, align 8
  store %struct.X509_name_st* %xname, %struct.X509_name_st** %xname.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.X509_name_st** %xname.addr, metadata !2832, metadata !3830), !dbg !9142
  %0 = bitcast %struct._object** %dn to i8*, !dbg !9143
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9143
  call void @llvm.dbg.declare(metadata %struct._object** %dn, metadata !2833, metadata !3830), !dbg !9144
  store %struct._object* null, %struct._object** %dn, align 8, !dbg !9144, !tbaa !3860
  %1 = bitcast %struct._object** %rdn to i8*, !dbg !9145
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9145
  call void @llvm.dbg.declare(metadata %struct._object** %rdn, metadata !2834, metadata !3830), !dbg !9146
  store %struct._object* null, %struct._object** %rdn, align 8, !dbg !9146, !tbaa !3860
  %2 = bitcast %struct._object** %rdnt to i8*, !dbg !9147
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9147
  call void @llvm.dbg.declare(metadata %struct._object** %rdnt, metadata !2835, metadata !3830), !dbg !9148
  %3 = bitcast %struct._object** %attr to i8*, !dbg !9149
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9149
  call void @llvm.dbg.declare(metadata %struct._object** %attr, metadata !2836, metadata !3830), !dbg !9150
  store %struct._object* null, %struct._object** %attr, align 8, !dbg !9150, !tbaa !3860
  %4 = bitcast i32* %entry_count to i8*, !dbg !9151
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !9151
  call void @llvm.dbg.declare(metadata i32* %entry_count, metadata !2837, metadata !3830), !dbg !9152
  %5 = load %struct.X509_name_st*, %struct.X509_name_st** %xname.addr, align 8, !dbg !9153, !tbaa !3860
  %call = call i32 @X509_NAME_entry_count(%struct.X509_name_st* %5), !dbg !9154
  store i32 %call, i32* %entry_count, align 4, !dbg !9152, !tbaa !4372
  %6 = bitcast %struct.X509_name_entry_st** %entry1 to i8*, !dbg !9155
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !9155
  call void @llvm.dbg.declare(metadata %struct.X509_name_entry_st** %entry1, metadata !2838, metadata !3830), !dbg !9156
  %7 = bitcast %struct.asn1_object_st** %name to i8*, !dbg !9157
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.asn1_object_st** %name, metadata !2847, metadata !3830), !dbg !9158
  %8 = bitcast %struct.asn1_string_st** %value to i8*, !dbg !9159
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !9159
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %value, metadata !2848, metadata !3830), !dbg !9160
  %9 = bitcast i32* %index_counter to i8*, !dbg !9161
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !9161
  call void @llvm.dbg.declare(metadata i32* %index_counter, metadata !2849, metadata !3830), !dbg !9162
  %10 = bitcast i32* %rdn_level to i8*, !dbg !9163
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !9163
  call void @llvm.dbg.declare(metadata i32* %rdn_level, metadata !2850, metadata !3830), !dbg !9164
  store i32 -1, i32* %rdn_level, align 4, !dbg !9164, !tbaa !4372
  %11 = bitcast i32* %retcode to i8*, !dbg !9165
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !9165
  call void @llvm.dbg.declare(metadata i32* %retcode, metadata !2851, metadata !3830), !dbg !9166
  %call2 = call %struct._object* @PyList_New(i64 0), !dbg !9167
  store %struct._object* %call2, %struct._object** %dn, align 8, !dbg !9168, !tbaa !3860
  %12 = load %struct._object*, %struct._object** %dn, align 8, !dbg !9169, !tbaa !3860
  %cmp = icmp eq %struct._object* %12, null, !dbg !9171
  br i1 %cmp, label %if.then, label %if.end, !dbg !9172

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9173
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9173

if.end:                                           ; preds = %entry
  %call3 = call %struct._object* @PyList_New(i64 0), !dbg !9174
  store %struct._object* %call3, %struct._object** %rdn, align 8, !dbg !9175, !tbaa !3860
  %13 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9176, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %13, null, !dbg !9178
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !9179

if.then.5:                                        ; preds = %if.end
  br label %fail0, !dbg !9180

if.end.6:                                         ; preds = %if.end
  store i32 0, i32* %index_counter, align 4, !dbg !9181, !tbaa !4372
  br label %for.cond, !dbg !9182

for.cond:                                         ; preds = %for.inc, %if.end.6
  %14 = load i32, i32* %index_counter, align 4, !dbg !9183, !tbaa !4372
  %15 = load i32, i32* %entry_count, align 4, !dbg !9184, !tbaa !4372
  %cmp7 = icmp slt i32 %14, %15, !dbg !9185
  br i1 %cmp7, label %for.body, label %for.end, !dbg !9186

for.body:                                         ; preds = %for.cond
  %16 = load %struct.X509_name_st*, %struct.X509_name_st** %xname.addr, align 8, !dbg !9187, !tbaa !3860
  %17 = load i32, i32* %index_counter, align 4, !dbg !9188, !tbaa !4372
  %call8 = call %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st* %16, i32 %17), !dbg !9189
  store %struct.X509_name_entry_st* %call8, %struct.X509_name_entry_st** %entry1, align 8, !dbg !9190, !tbaa !3860
  %18 = load i32, i32* %rdn_level, align 4, !dbg !9191, !tbaa !4372
  %cmp9 = icmp sge i32 %18, 0, !dbg !9192
  br i1 %cmp9, label %if.then.10, label %if.end.41, !dbg !9193

if.then.10:                                       ; preds = %for.body
  %19 = load i32, i32* %rdn_level, align 4, !dbg !9194, !tbaa !4372
  %20 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %entry1, align 8, !dbg !9195, !tbaa !3860
  %set = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %20, i32 0, i32 2, !dbg !9196
  %21 = load i32, i32* %set, align 4, !dbg !9196, !tbaa !9197
  %cmp11 = icmp ne i32 %19, %21, !dbg !9199
  br i1 %cmp11, label %if.then.12, label %if.end.40, !dbg !9200

if.then.12:                                       ; preds = %if.then.10
  %22 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9201, !tbaa !3860
  %call13 = call %struct._object* @PyList_AsTuple(%struct._object* %22), !dbg !9202
  store %struct._object* %call13, %struct._object** %rdnt, align 8, !dbg !9203, !tbaa !3860
  br label %do.body, !dbg !9204

do.body:                                          ; preds = %if.then.12
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9205
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !9205
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2852, metadata !3830), !dbg !9207
  %24 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9208, !tbaa !3860
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !9207, !tbaa !3860
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9209, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !9211
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !9212, !tbaa !4101
  %dec = add i64 %26, -1, !dbg !9212
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9212, !tbaa !4101
  %cmp14 = icmp ne i64 %dec, 0, !dbg !9213
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !9214

if.then.15:                                       ; preds = %do.body
  br label %if.end.16, !dbg !9215

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9217, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !9219
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9219, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !9220
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9220, !tbaa !4206
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9221, !tbaa !3860
  call void %29(%struct._object* %30), !dbg !9222
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9223
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !9223
  br label %do.cond, !dbg !9225

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !9226

do.end:                                           ; preds = %do.cond
  %32 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9228, !tbaa !3860
  %cmp17 = icmp eq %struct._object* %32, null, !dbg !9230
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !9231

if.then.18:                                       ; preds = %do.end
  br label %fail0, !dbg !9232

if.end.19:                                        ; preds = %do.end
  %33 = load %struct._object*, %struct._object** %dn, align 8, !dbg !9233, !tbaa !3860
  %34 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9234, !tbaa !3860
  %call20 = call i32 @PyList_Append(%struct._object* %33, %struct._object* %34), !dbg !9235
  store i32 %call20, i32* %retcode, align 4, !dbg !9236, !tbaa !4372
  br label %do.body.21, !dbg !9237

do.body.21:                                       ; preds = %if.end.19
  %35 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !9238
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !9238
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !2861, metadata !3830), !dbg !9240
  %36 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9241, !tbaa !3860
  store %struct._object* %36, %struct._object** %_py_decref_tmp22, align 8, !dbg !9240, !tbaa !3860
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !9242, !tbaa !3860
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !9244
  %38 = load i64, i64* %ob_refcnt23, align 8, !dbg !9245, !tbaa !4101
  %dec24 = add i64 %38, -1, !dbg !9245
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !9245, !tbaa !4101
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !9246
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !9247

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !9248

if.else.27:                                       ; preds = %do.body.21
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !9250, !tbaa !3860
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !9252
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !9252, !tbaa !4204
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !9253
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !9253, !tbaa !4206
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !9254, !tbaa !3860
  call void %41(%struct._object* %42), !dbg !9255
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %43 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !9256
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !9256
  br label %do.cond.31, !dbg !9257

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !9258

do.end.32:                                        ; preds = %do.cond.31
  %44 = load i32, i32* %retcode, align 4, !dbg !9260, !tbaa !4372
  %cmp33 = icmp slt i32 %44, 0, !dbg !9262
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !9263

if.then.34:                                       ; preds = %do.end.32
  br label %fail0, !dbg !9264

if.end.35:                                        ; preds = %do.end.32
  %call36 = call %struct._object* @PyList_New(i64 0), !dbg !9265
  store %struct._object* %call36, %struct._object** %rdn, align 8, !dbg !9266, !tbaa !3860
  %45 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9267, !tbaa !3860
  %cmp37 = icmp eq %struct._object* %45, null, !dbg !9269
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !9270

if.then.38:                                       ; preds = %if.end.35
  br label %fail0, !dbg !9271

if.end.39:                                        ; preds = %if.end.35
  br label %if.end.40, !dbg !9272

if.end.40:                                        ; preds = %if.end.39, %if.then.10
  br label %if.end.41, !dbg !9273

if.end.41:                                        ; preds = %if.end.40, %for.body
  %46 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %entry1, align 8, !dbg !9274, !tbaa !3860
  %set42 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %46, i32 0, i32 2, !dbg !9275
  %47 = load i32, i32* %set42, align 4, !dbg !9275, !tbaa !9197
  store i32 %47, i32* %rdn_level, align 4, !dbg !9276, !tbaa !4372
  %48 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %entry1, align 8, !dbg !9277, !tbaa !3860
  %call43 = call %struct.asn1_object_st* @X509_NAME_ENTRY_get_object(%struct.X509_name_entry_st* %48), !dbg !9278
  store %struct.asn1_object_st* %call43, %struct.asn1_object_st** %name, align 8, !dbg !9279, !tbaa !3860
  %49 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %entry1, align 8, !dbg !9280, !tbaa !3860
  %call44 = call %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st* %49), !dbg !9281
  store %struct.asn1_string_st* %call44, %struct.asn1_string_st** %value, align 8, !dbg !9282, !tbaa !3860
  %50 = load %struct.asn1_object_st*, %struct.asn1_object_st** %name, align 8, !dbg !9283, !tbaa !3860
  %51 = load %struct.asn1_string_st*, %struct.asn1_string_st** %value, align 8, !dbg !9284, !tbaa !3860
  %call45 = call %struct._object* @_create_tuple_for_attribute(%struct.asn1_object_st* %50, %struct.asn1_string_st* %51), !dbg !9285
  store %struct._object* %call45, %struct._object** %attr, align 8, !dbg !9286, !tbaa !3860
  %52 = load %struct._object*, %struct._object** %attr, align 8, !dbg !9287, !tbaa !3860
  %cmp46 = icmp eq %struct._object* %52, null, !dbg !9289
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !9290

if.then.47:                                       ; preds = %if.end.41
  br label %fail1, !dbg !9291

if.end.48:                                        ; preds = %if.end.41
  %53 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9292, !tbaa !3860
  %54 = load %struct._object*, %struct._object** %attr, align 8, !dbg !9293, !tbaa !3860
  %call49 = call i32 @PyList_Append(%struct._object* %53, %struct._object* %54), !dbg !9294
  store i32 %call49, i32* %retcode, align 4, !dbg !9295, !tbaa !4372
  br label %do.body.50, !dbg !9296

do.body.50:                                       ; preds = %if.end.48
  %55 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !9297
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !9297
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !2863, metadata !3830), !dbg !9299
  %56 = load %struct._object*, %struct._object** %attr, align 8, !dbg !9300, !tbaa !3860
  store %struct._object* %56, %struct._object** %_py_decref_tmp51, align 8, !dbg !9299, !tbaa !3860
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !9301, !tbaa !3860
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !9303
  %58 = load i64, i64* %ob_refcnt52, align 8, !dbg !9304, !tbaa !4101
  %dec53 = add i64 %58, -1, !dbg !9304
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !9304, !tbaa !4101
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !9305
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !9306

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !9307

if.else.56:                                       ; preds = %do.body.50
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !9309, !tbaa !3860
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !9311
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !9311, !tbaa !4204
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !9312
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !9312, !tbaa !4206
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !9313, !tbaa !3860
  call void %61(%struct._object* %62), !dbg !9314
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %63 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !9315
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !9315
  br label %do.cond.60, !dbg !9317

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !9318

do.end.61:                                        ; preds = %do.cond.60
  %64 = load i32, i32* %retcode, align 4, !dbg !9320, !tbaa !4372
  %cmp62 = icmp slt i32 %64, 0, !dbg !9322
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !9323

if.then.63:                                       ; preds = %do.end.61
  br label %fail1, !dbg !9324

if.end.64:                                        ; preds = %do.end.61
  br label %for.inc, !dbg !9325

for.inc:                                          ; preds = %if.end.64
  %65 = load i32, i32* %index_counter, align 4, !dbg !9326, !tbaa !4372
  %inc = add i32 %65, 1, !dbg !9326
  store i32 %inc, i32* %index_counter, align 4, !dbg !9326, !tbaa !4372
  br label %for.cond, !dbg !9327

for.end:                                          ; preds = %for.cond
  %66 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9328, !tbaa !3860
  %cmp65 = icmp ne %struct._object* %66, null, !dbg !9329
  br i1 %cmp65, label %if.then.66, label %if.end.115, !dbg !9330

if.then.66:                                       ; preds = %for.end
  %67 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9331, !tbaa !3860
  %68 = bitcast %struct._object* %67 to %struct.PyVarObject*, !dbg !9332
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %68, i32 0, i32 1, !dbg !9333
  %69 = load i64, i64* %ob_size, align 8, !dbg !9333, !tbaa !5652
  %cmp67 = icmp sgt i64 %69, 0, !dbg !9334
  br i1 %cmp67, label %if.then.68, label %if.else.101, !dbg !9335

if.then.68:                                       ; preds = %if.then.66
  %70 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9336, !tbaa !3860
  %call69 = call %struct._object* @PyList_AsTuple(%struct._object* %70), !dbg !9337
  store %struct._object* %call69, %struct._object** %rdnt, align 8, !dbg !9338, !tbaa !3860
  br label %do.body.70, !dbg !9339

do.body.70:                                       ; preds = %if.then.68
  %71 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !9340
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !9340
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp71, metadata !2865, metadata !3830), !dbg !9342
  %72 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9343, !tbaa !3860
  store %struct._object* %72, %struct._object** %_py_decref_tmp71, align 8, !dbg !9342, !tbaa !3860
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !9344, !tbaa !3860
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !9346
  %74 = load i64, i64* %ob_refcnt72, align 8, !dbg !9347, !tbaa !4101
  %dec73 = add i64 %74, -1, !dbg !9347
  store i64 %dec73, i64* %ob_refcnt72, align 8, !dbg !9347, !tbaa !4101
  %cmp74 = icmp ne i64 %dec73, 0, !dbg !9348
  br i1 %cmp74, label %if.then.75, label %if.else.76, !dbg !9349

if.then.75:                                       ; preds = %do.body.70
  br label %if.end.79, !dbg !9350

if.else.76:                                       ; preds = %do.body.70
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !9352, !tbaa !3860
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1, !dbg !9354
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !9354, !tbaa !4204
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4, !dbg !9355
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !9355, !tbaa !4206
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !9356, !tbaa !3860
  call void %77(%struct._object* %78), !dbg !9357
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %79 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !9358
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !9358
  br label %do.cond.80, !dbg !9360

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !9361

do.end.81:                                        ; preds = %do.cond.80
  %80 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9363, !tbaa !3860
  %cmp82 = icmp eq %struct._object* %80, null, !dbg !9365
  br i1 %cmp82, label %if.then.83, label %if.end.84, !dbg !9366

if.then.83:                                       ; preds = %do.end.81
  br label %fail0, !dbg !9367

if.end.84:                                        ; preds = %do.end.81
  %81 = load %struct._object*, %struct._object** %dn, align 8, !dbg !9368, !tbaa !3860
  %82 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9369, !tbaa !3860
  %call85 = call i32 @PyList_Append(%struct._object* %81, %struct._object* %82), !dbg !9370
  store i32 %call85, i32* %retcode, align 4, !dbg !9371, !tbaa !4372
  br label %do.body.86, !dbg !9372

do.body.86:                                       ; preds = %if.end.84
  %83 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !9373
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !9373
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp87, metadata !2871, metadata !3830), !dbg !9375
  %84 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9376, !tbaa !3860
  store %struct._object* %84, %struct._object** %_py_decref_tmp87, align 8, !dbg !9375, !tbaa !3860
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !9377, !tbaa !3860
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !9379
  %86 = load i64, i64* %ob_refcnt88, align 8, !dbg !9380, !tbaa !4101
  %dec89 = add i64 %86, -1, !dbg !9380
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !9380, !tbaa !4101
  %cmp90 = icmp ne i64 %dec89, 0, !dbg !9381
  br i1 %cmp90, label %if.then.91, label %if.else.92, !dbg !9382

if.then.91:                                       ; preds = %do.body.86
  br label %if.end.95, !dbg !9383

if.else.92:                                       ; preds = %do.body.86
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !9385, !tbaa !3860
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !9387
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !9387, !tbaa !4204
  %tp_dealloc94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !9388
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc94, align 8, !dbg !9388, !tbaa !4206
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !9389, !tbaa !3860
  call void %89(%struct._object* %90), !dbg !9390
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.92, %if.then.91
  %91 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !9391
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !9391
  br label %do.cond.96, !dbg !9392

do.cond.96:                                       ; preds = %if.end.95
  br label %do.end.97, !dbg !9393

do.end.97:                                        ; preds = %do.cond.96
  %92 = load i32, i32* %retcode, align 4, !dbg !9395, !tbaa !4372
  %cmp98 = icmp slt i32 %92, 0, !dbg !9397
  br i1 %cmp98, label %if.then.99, label %if.end.100, !dbg !9398

if.then.99:                                       ; preds = %do.end.97
  br label %fail0, !dbg !9399

if.end.100:                                       ; preds = %do.end.97
  br label %if.end.114, !dbg !9400

if.else.101:                                      ; preds = %if.then.66
  br label %do.body.102, !dbg !9401

do.body.102:                                      ; preds = %if.else.101
  %93 = bitcast %struct._object** %_py_decref_tmp103 to i8*, !dbg !9402
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !9402
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp103, metadata !2873, metadata !3830), !dbg !9404
  %94 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9405, !tbaa !3860
  store %struct._object* %94, %struct._object** %_py_decref_tmp103, align 8, !dbg !9404, !tbaa !3860
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !9406, !tbaa !3860
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !9408
  %96 = load i64, i64* %ob_refcnt104, align 8, !dbg !9409, !tbaa !4101
  %dec105 = add i64 %96, -1, !dbg !9409
  store i64 %dec105, i64* %ob_refcnt104, align 8, !dbg !9409, !tbaa !4101
  %cmp106 = icmp ne i64 %dec105, 0, !dbg !9410
  br i1 %cmp106, label %if.then.107, label %if.else.108, !dbg !9411

if.then.107:                                      ; preds = %do.body.102
  br label %if.end.111, !dbg !9412

if.else.108:                                      ; preds = %do.body.102
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !9414, !tbaa !3860
  %ob_type109 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !9416
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type109, align 8, !dbg !9416, !tbaa !4204
  %tp_dealloc110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !9417
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc110, align 8, !dbg !9417, !tbaa !4206
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !9418, !tbaa !3860
  call void %99(%struct._object* %100), !dbg !9419
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.108, %if.then.107
  %101 = bitcast %struct._object** %_py_decref_tmp103 to i8*, !dbg !9420
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !9420
  br label %do.cond.112, !dbg !9422

do.cond.112:                                      ; preds = %if.end.111
  br label %do.end.113, !dbg !9423

do.end.113:                                       ; preds = %do.cond.112
  br label %if.end.114

if.end.114:                                       ; preds = %do.end.113, %if.end.100
  br label %if.end.115, !dbg !9425

if.end.115:                                       ; preds = %if.end.114, %for.end
  %102 = load %struct._object*, %struct._object** %dn, align 8, !dbg !9426, !tbaa !3860
  %call116 = call %struct._object* @PyList_AsTuple(%struct._object* %102), !dbg !9427
  store %struct._object* %call116, %struct._object** %rdnt, align 8, !dbg !9428, !tbaa !3860
  br label %do.body.117, !dbg !9429

do.body.117:                                      ; preds = %if.end.115
  %103 = bitcast %struct._object** %_py_decref_tmp118 to i8*, !dbg !9430
  call void @llvm.lifetime.start(i64 8, i8* %103) #1, !dbg !9430
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp118, metadata !2876, metadata !3830), !dbg !9432
  %104 = load %struct._object*, %struct._object** %dn, align 8, !dbg !9433, !tbaa !3860
  store %struct._object* %104, %struct._object** %_py_decref_tmp118, align 8, !dbg !9432, !tbaa !3860
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp118, align 8, !dbg !9434, !tbaa !3860
  %ob_refcnt119 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 0, !dbg !9436
  %106 = load i64, i64* %ob_refcnt119, align 8, !dbg !9437, !tbaa !4101
  %dec120 = add i64 %106, -1, !dbg !9437
  store i64 %dec120, i64* %ob_refcnt119, align 8, !dbg !9437, !tbaa !4101
  %cmp121 = icmp ne i64 %dec120, 0, !dbg !9438
  br i1 %cmp121, label %if.then.122, label %if.else.123, !dbg !9439

if.then.122:                                      ; preds = %do.body.117
  br label %if.end.126, !dbg !9440

if.else.123:                                      ; preds = %do.body.117
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp118, align 8, !dbg !9442, !tbaa !3860
  %ob_type124 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !9444
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type124, align 8, !dbg !9444, !tbaa !4204
  %tp_dealloc125 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 4, !dbg !9445
  %109 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc125, align 8, !dbg !9445, !tbaa !4206
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp118, align 8, !dbg !9446, !tbaa !3860
  call void %109(%struct._object* %110), !dbg !9447
  br label %if.end.126

if.end.126:                                       ; preds = %if.else.123, %if.then.122
  %111 = bitcast %struct._object** %_py_decref_tmp118 to i8*, !dbg !9448
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !9448
  br label %do.cond.127, !dbg !9450

do.cond.127:                                      ; preds = %if.end.126
  br label %do.end.128, !dbg !9451

do.end.128:                                       ; preds = %do.cond.127
  %112 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9453, !tbaa !3860
  %cmp129 = icmp eq %struct._object* %112, null, !dbg !9455
  br i1 %cmp129, label %if.then.130, label %if.end.131, !dbg !9456

if.then.130:                                      ; preds = %do.end.128
  store %struct._object* null, %struct._object** %retval, !dbg !9457
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9457

if.end.131:                                       ; preds = %do.end.128
  %113 = load %struct._object*, %struct._object** %rdnt, align 8, !dbg !9458, !tbaa !3860
  store %struct._object* %113, %struct._object** %retval, !dbg !9459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9459

fail1:                                            ; preds = %if.then.63, %if.then.47
  br label %do.body.132, !dbg !9460

do.body.132:                                      ; preds = %fail1
  %114 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9461
  call void @llvm.lifetime.start(i64 8, i8* %114) #1, !dbg !9461
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2878, metadata !3830), !dbg !9463
  %115 = load %struct._object*, %struct._object** %rdn, align 8, !dbg !9464, !tbaa !3860
  store %struct._object* %115, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9463, !tbaa !3860
  %116 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9465, !tbaa !3860
  %cmp133 = icmp ne %struct._object* %116, null, !dbg !9466
  br i1 %cmp133, label %if.then.134, label %if.end.147, !dbg !9467

if.then.134:                                      ; preds = %do.body.132
  br label %do.body.135, !dbg !9468

do.body.135:                                      ; preds = %if.then.134
  %117 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !9470
  call void @llvm.lifetime.start(i64 8, i8* %117) #1, !dbg !9470
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp136, metadata !2880, metadata !3830), !dbg !9472
  %118 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9473, !tbaa !3860
  store %struct._object* %118, %struct._object** %_py_decref_tmp136, align 8, !dbg !9472, !tbaa !3860
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !9474, !tbaa !3860
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 0, !dbg !9476
  %120 = load i64, i64* %ob_refcnt137, align 8, !dbg !9477, !tbaa !4101
  %dec138 = add i64 %120, -1, !dbg !9477
  store i64 %dec138, i64* %ob_refcnt137, align 8, !dbg !9477, !tbaa !4101
  %cmp139 = icmp ne i64 %dec138, 0, !dbg !9478
  br i1 %cmp139, label %if.then.140, label %if.else.141, !dbg !9479

if.then.140:                                      ; preds = %do.body.135
  br label %if.end.144, !dbg !9480

if.else.141:                                      ; preds = %do.body.135
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !9482, !tbaa !3860
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 1, !dbg !9484
  %122 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8, !dbg !9484, !tbaa !4204
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %122, i32 0, i32 4, !dbg !9485
  %123 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8, !dbg !9485, !tbaa !4206
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !9486, !tbaa !3860
  call void %123(%struct._object* %124), !dbg !9487
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  %125 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !9488
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !9488
  br label %do.cond.145, !dbg !9490

do.cond.145:                                      ; preds = %if.end.144
  br label %do.end.146, !dbg !9491

do.end.146:                                       ; preds = %do.cond.145
  br label %if.end.147, !dbg !9493

if.end.147:                                       ; preds = %do.end.146, %do.body.132
  %126 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9495
  call void @llvm.lifetime.end(i64 8, i8* %126) #1, !dbg !9495
  br label %do.cond.148, !dbg !9498

do.cond.148:                                      ; preds = %if.end.147
  br label %do.end.149, !dbg !9499

do.end.149:                                       ; preds = %do.cond.148
  br label %fail0, !dbg !9501

fail0:                                            ; preds = %do.end.149, %if.then.99, %if.then.83, %if.then.38, %if.then.34, %if.then.18, %if.then.5
  br label %do.body.150, !dbg !9503

do.body.150:                                      ; preds = %fail0
  %127 = bitcast %struct._object** %_py_xdecref_tmp151 to i8*, !dbg !9504
  call void @llvm.lifetime.start(i64 8, i8* %127) #1, !dbg !9504
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp151, metadata !2883, metadata !3830), !dbg !9506
  %128 = load %struct._object*, %struct._object** %dn, align 8, !dbg !9507, !tbaa !3860
  store %struct._object* %128, %struct._object** %_py_xdecref_tmp151, align 8, !dbg !9506, !tbaa !3860
  %129 = load %struct._object*, %struct._object** %_py_xdecref_tmp151, align 8, !dbg !9508, !tbaa !3860
  %cmp152 = icmp ne %struct._object* %129, null, !dbg !9509
  br i1 %cmp152, label %if.then.153, label %if.end.166, !dbg !9510

if.then.153:                                      ; preds = %do.body.150
  br label %do.body.154, !dbg !9511

do.body.154:                                      ; preds = %if.then.153
  %130 = bitcast %struct._object** %_py_decref_tmp155 to i8*, !dbg !9513
  call void @llvm.lifetime.start(i64 8, i8* %130) #1, !dbg !9513
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp155, metadata !2885, metadata !3830), !dbg !9515
  %131 = load %struct._object*, %struct._object** %_py_xdecref_tmp151, align 8, !dbg !9516, !tbaa !3860
  store %struct._object* %131, %struct._object** %_py_decref_tmp155, align 8, !dbg !9515, !tbaa !3860
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8, !dbg !9517, !tbaa !3860
  %ob_refcnt156 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 0, !dbg !9519
  %133 = load i64, i64* %ob_refcnt156, align 8, !dbg !9520, !tbaa !4101
  %dec157 = add i64 %133, -1, !dbg !9520
  store i64 %dec157, i64* %ob_refcnt156, align 8, !dbg !9520, !tbaa !4101
  %cmp158 = icmp ne i64 %dec157, 0, !dbg !9521
  br i1 %cmp158, label %if.then.159, label %if.else.160, !dbg !9522

if.then.159:                                      ; preds = %do.body.154
  br label %if.end.163, !dbg !9523

if.else.160:                                      ; preds = %do.body.154
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8, !dbg !9525, !tbaa !3860
  %ob_type161 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 1, !dbg !9527
  %135 = load %struct._typeobject*, %struct._typeobject** %ob_type161, align 8, !dbg !9527, !tbaa !4204
  %tp_dealloc162 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %135, i32 0, i32 4, !dbg !9528
  %136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc162, align 8, !dbg !9528, !tbaa !4206
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8, !dbg !9529, !tbaa !3860
  call void %136(%struct._object* %137), !dbg !9530
  br label %if.end.163

if.end.163:                                       ; preds = %if.else.160, %if.then.159
  %138 = bitcast %struct._object** %_py_decref_tmp155 to i8*, !dbg !9531
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !9531
  br label %do.cond.164, !dbg !9533

do.cond.164:                                      ; preds = %if.end.163
  br label %do.end.165, !dbg !9534

do.end.165:                                       ; preds = %do.cond.164
  br label %if.end.166, !dbg !9536

if.end.166:                                       ; preds = %do.end.165, %do.body.150
  %139 = bitcast %struct._object** %_py_xdecref_tmp151 to i8*, !dbg !9538
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !9538
  br label %do.cond.167, !dbg !9539

do.cond.167:                                      ; preds = %if.end.166
  br label %do.end.168, !dbg !9540

do.end.168:                                       ; preds = %do.cond.167
  store %struct._object* null, %struct._object** %retval, !dbg !9542
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9542

cleanup:                                          ; preds = %do.end.168, %if.end.131, %if.then.130, %if.then
  %140 = bitcast i32* %retcode to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 4, i8* %140) #1, !dbg !9543
  %141 = bitcast i32* %rdn_level to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 4, i8* %141) #1, !dbg !9543
  %142 = bitcast i32* %index_counter to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 4, i8* %142) #1, !dbg !9543
  %143 = bitcast %struct.asn1_string_st** %value to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %143) #1, !dbg !9543
  %144 = bitcast %struct.asn1_object_st** %name to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %144) #1, !dbg !9543
  %145 = bitcast %struct.X509_name_entry_st** %entry1 to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %145) #1, !dbg !9543
  %146 = bitcast i32* %entry_count to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 4, i8* %146) #1, !dbg !9543
  %147 = bitcast %struct._object** %attr to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %147) #1, !dbg !9543
  %148 = bitcast %struct._object** %rdnt to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !9543
  %149 = bitcast %struct._object** %rdn to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %149) #1, !dbg !9543
  %150 = bitcast %struct._object** %dn to i8*, !dbg !9543
  call void @llvm.lifetime.end(i64 8, i8* %150) #1, !dbg !9543
  %151 = load %struct._object*, %struct._object** %retval, !dbg !9543
  ret %struct._object* %151, !dbg !9543
}

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) #3

declare %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st*) #3

declare i64 @ASN1_INTEGER_get(%struct.asn1_string_st*) #3

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) #3

declare %struct.bio_method_st* @BIO_s_mem() #3

declare %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st*) #3

declare i32 @i2a_ASN1_INTEGER(%struct.bio_st*, %struct.asn1_string_st*) #3

declare i32 @BIO_gets(%struct.bio_st*, i8*, i32) #3

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

declare i32 @ASN1_TIME_print(%struct.bio_st*, %struct.asn1_string_st*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_get_peer_alt_names(%struct.x509_st* %certificate) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %certificate.addr = alloca %struct.x509_st*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %peer_alt_names = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %t = alloca %struct._object*, align 8
  %ext = alloca %struct.X509_extension_st*, align 8
  %names = alloca %struct.stack_st_GENERAL_NAME*, align 8
  %name = alloca %struct.GENERAL_NAME_st*, align 8
  %method = alloca %struct.v3_ext_method*, align 8
  %biobuf = alloca %struct.bio_st*, align 8
  %buf = alloca [2048 x i8], align 16
  %vptr = alloca i8*, align 8
  %len = alloca i32, align 4
  %p = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %gntype = alloca i32, align 4
  %as = alloca %struct.asn1_string_st*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp83 = alloca %struct._object*, align 8
  %_py_decref_tmp106 = alloca %struct._object*, align 8
  %_py_decref_tmp156 = alloca %struct._object*, align 8
  %_py_decref_tmp181 = alloca %struct._object*, align 8
  %_py_decref_tmp202 = alloca %struct._object*, align 8
  %_py_decref_tmp216 = alloca %struct._object*, align 8
  %_py_decref_tmp235 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp261 = alloca %struct._object*, align 8
  store %struct.x509_st* %certificate, %struct.x509_st** %certificate.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.x509_st** %certificate.addr, metadata !2917, metadata !3830), !dbg !9544
  %0 = bitcast i32* %i to i8*, !dbg !9545
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9545
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2918, metadata !3830), !dbg !9546
  %1 = bitcast i32* %j to i8*, !dbg !9545
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !9545
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2919, metadata !3830), !dbg !9547
  %2 = bitcast %struct._object** %peer_alt_names to i8*, !dbg !9548
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9548
  call void @llvm.dbg.declare(metadata %struct._object** %peer_alt_names, metadata !2920, metadata !3830), !dbg !9549
  store %struct._object* @_Py_NoneStruct, %struct._object** %peer_alt_names, align 8, !dbg !9549, !tbaa !3860
  %3 = bitcast %struct._object** %v to i8*, !dbg !9550
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9550
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !2921, metadata !3830), !dbg !9551
  store %struct._object* null, %struct._object** %v, align 8, !dbg !9551, !tbaa !3860
  %4 = bitcast %struct._object** %t to i8*, !dbg !9550
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !9550
  call void @llvm.dbg.declare(metadata %struct._object** %t, metadata !2922, metadata !3830), !dbg !9552
  %5 = bitcast %struct.X509_extension_st** %ext to i8*, !dbg !9553
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !9553
  call void @llvm.dbg.declare(metadata %struct.X509_extension_st** %ext, metadata !2923, metadata !3830), !dbg !9554
  store %struct.X509_extension_st* null, %struct.X509_extension_st** %ext, align 8, !dbg !9554, !tbaa !3860
  %6 = bitcast %struct.stack_st_GENERAL_NAME** %names to i8*, !dbg !9555
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !9555
  call void @llvm.dbg.declare(metadata %struct.stack_st_GENERAL_NAME** %names, metadata !2931, metadata !3830), !dbg !9556
  store %struct.stack_st_GENERAL_NAME* null, %struct.stack_st_GENERAL_NAME** %names, align 8, !dbg !9556, !tbaa !3860
  %7 = bitcast %struct.GENERAL_NAME_st** %name to i8*, !dbg !9557
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !9557
  call void @llvm.dbg.declare(metadata %struct.GENERAL_NAME_st** %name, metadata !2932, metadata !3830), !dbg !9558
  %8 = bitcast %struct.v3_ext_method** %method to i8*, !dbg !9559
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !9559
  call void @llvm.dbg.declare(metadata %struct.v3_ext_method** %method, metadata !2933, metadata !3830), !dbg !9560
  %9 = bitcast %struct.bio_st** %biobuf to i8*, !dbg !9561
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !9561
  call void @llvm.dbg.declare(metadata %struct.bio_st** %biobuf, metadata !3046, metadata !3830), !dbg !9562
  store %struct.bio_st* null, %struct.bio_st** %biobuf, align 8, !dbg !9562, !tbaa !3860
  %10 = bitcast [2048 x i8]* %buf to i8*, !dbg !9563
  call void @llvm.lifetime.start(i64 2048, i8* %10) #1, !dbg !9563
  call void @llvm.dbg.declare(metadata [2048 x i8]* %buf, metadata !3047, metadata !3830), !dbg !9564
  %11 = bitcast i8** %vptr to i8*, !dbg !9565
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !9565
  call void @llvm.dbg.declare(metadata i8** %vptr, metadata !3048, metadata !3830), !dbg !9566
  %12 = bitcast i32* %len to i8*, !dbg !9567
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !9567
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3049, metadata !3830), !dbg !9568
  %13 = bitcast i8** %p to i8*, !dbg !9569
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !9569
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3050, metadata !3830), !dbg !9570
  %14 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !9571, !tbaa !3860
  %cmp = icmp eq %struct.x509_st* %14, null, !dbg !9573
  br i1 %cmp, label %if.then, label %if.end, !dbg !9574

if.then:                                          ; preds = %entry
  %15 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !9575, !tbaa !3860
  store %struct._object* %15, %struct._object** %retval, !dbg !9576
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !9576

if.end:                                           ; preds = %entry
  %call = call %struct.bio_method_st* @BIO_s_mem(), !dbg !9577
  %call1 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call), !dbg !9578
  store %struct.bio_st* %call1, %struct.bio_st** %biobuf, align 8, !dbg !9579, !tbaa !3860
  store i32 -1, i32* %i, align 4, !dbg !9580, !tbaa !4372
  br label %while.cond, !dbg !9581

while.cond:                                       ; preds = %for.end, %if.end
  %16 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !9582, !tbaa !3860
  %17 = load i32, i32* %i, align 4, !dbg !9583, !tbaa !4372
  %call2 = call i32 @X509_get_ext_by_NID(%struct.x509_st* %16, i32 85, i32 %17), !dbg !9584
  store i32 %call2, i32* %i, align 4, !dbg !9585, !tbaa !4372
  %cmp3 = icmp sge i32 %call2, 0, !dbg !9586
  br i1 %cmp3, label %while.body, label %while.end, !dbg !9581

while.body:                                       ; preds = %while.cond
  %18 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !9587, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %18, @_Py_NoneStruct, !dbg !9589
  br i1 %cmp4, label %if.then.5, label %if.end.10, !dbg !9590

if.then.5:                                        ; preds = %while.body
  %call6 = call %struct._object* @PyList_New(i64 0), !dbg !9591
  store %struct._object* %call6, %struct._object** %peer_alt_names, align 8, !dbg !9593, !tbaa !3860
  %19 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !9594, !tbaa !3860
  %cmp7 = icmp eq %struct._object* %19, null, !dbg !9596
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !9597

if.then.8:                                        ; preds = %if.then.5
  br label %fail, !dbg !9598

if.end.9:                                         ; preds = %if.then.5
  br label %if.end.10, !dbg !9599

if.end.10:                                        ; preds = %if.end.9, %while.body
  %20 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !9600, !tbaa !3860
  %21 = load i32, i32* %i, align 4, !dbg !9601, !tbaa !4372
  %call11 = call %struct.X509_extension_st* @X509_get_ext(%struct.x509_st* %20, i32 %21), !dbg !9602
  store %struct.X509_extension_st* %call11, %struct.X509_extension_st** %ext, align 8, !dbg !9603, !tbaa !3860
  %22 = load %struct.X509_extension_st*, %struct.X509_extension_st** %ext, align 8, !dbg !9604, !tbaa !3860
  %call12 = call %struct.v3_ext_method* @X509V3_EXT_get(%struct.X509_extension_st* %22), !dbg !9606
  store %struct.v3_ext_method* %call12, %struct.v3_ext_method** %method, align 8, !dbg !9607, !tbaa !3860
  %tobool = icmp ne %struct.v3_ext_method* %call12, null, !dbg !9607
  br i1 %tobool, label %if.end.14, label %if.then.13, !dbg !9608

if.then.13:                                       ; preds = %if.end.10
  %23 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !9609, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.171, i32 0, i32 0)), !dbg !9611
  br label %fail, !dbg !9612

if.end.14:                                        ; preds = %if.end.10
  %24 = load %struct.X509_extension_st*, %struct.X509_extension_st** %ext, align 8, !dbg !9613, !tbaa !3860
  %value = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %24, i32 0, i32 2, !dbg !9614
  %25 = load %struct.asn1_string_st*, %struct.asn1_string_st** %value, align 8, !dbg !9614, !tbaa !9615
  %data = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %25, i32 0, i32 2, !dbg !9617
  %26 = load i8*, i8** %data, align 8, !dbg !9617, !tbaa !9618
  store i8* %26, i8** %p, align 8, !dbg !9620, !tbaa !3860
  %27 = load %struct.v3_ext_method*, %struct.v3_ext_method** %method, align 8, !dbg !9621, !tbaa !3860
  %it = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %27, i32 0, i32 2, !dbg !9623
  %28 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %it, align 8, !dbg !9623, !tbaa !9624
  %tobool15 = icmp ne %struct.ASN1_ITEM_st* %28, null, !dbg !9621
  br i1 %tobool15, label %if.then.16, label %if.else, !dbg !9626

if.then.16:                                       ; preds = %if.end.14
  %29 = load %struct.X509_extension_st*, %struct.X509_extension_st** %ext, align 8, !dbg !9627, !tbaa !3860
  %value17 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %29, i32 0, i32 2, !dbg !9628
  %30 = load %struct.asn1_string_st*, %struct.asn1_string_st** %value17, align 8, !dbg !9628, !tbaa !9615
  %length = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %30, i32 0, i32 0, !dbg !9629
  %31 = load i32, i32* %length, align 4, !dbg !9629, !tbaa !9630
  %conv = sext i32 %31 to i64, !dbg !9627
  %32 = load %struct.v3_ext_method*, %struct.v3_ext_method** %method, align 8, !dbg !9631, !tbaa !3860
  %it18 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %32, i32 0, i32 2, !dbg !9632
  %33 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %it18, align 8, !dbg !9632, !tbaa !9624
  %call19 = call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** null, i8** %p, i64 %conv, %struct.ASN1_ITEM_st* %33), !dbg !9633
  %34 = bitcast %struct.ASN1_VALUE_st* %call19 to %struct.stack_st_GENERAL_NAME*, !dbg !9634
  store %struct.stack_st_GENERAL_NAME* %34, %struct.stack_st_GENERAL_NAME** %names, align 8, !dbg !9635, !tbaa !3860
  br label %if.end.24, !dbg !9636

if.else:                                          ; preds = %if.end.14
  %35 = load %struct.v3_ext_method*, %struct.v3_ext_method** %method, align 8, !dbg !9637, !tbaa !3860
  %d2i = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %35, i32 0, i32 5, !dbg !9638
  %36 = load i8* (i8*, i8**, i64)*, i8* (i8*, i8**, i64)** %d2i, align 8, !dbg !9638, !tbaa !9639
  %37 = load %struct.X509_extension_st*, %struct.X509_extension_st** %ext, align 8, !dbg !9640, !tbaa !3860
  %value20 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %37, i32 0, i32 2, !dbg !9641
  %38 = load %struct.asn1_string_st*, %struct.asn1_string_st** %value20, align 8, !dbg !9641, !tbaa !9615
  %length21 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %38, i32 0, i32 0, !dbg !9642
  %39 = load i32, i32* %length21, align 4, !dbg !9642, !tbaa !9630
  %conv22 = sext i32 %39 to i64, !dbg !9640
  %call23 = call i8* %36(i8* null, i8** %p, i64 %conv22), !dbg !9637
  %40 = bitcast i8* %call23 to %struct.stack_st_GENERAL_NAME*, !dbg !9643
  store %struct.stack_st_GENERAL_NAME* %40, %struct.stack_st_GENERAL_NAME** %names, align 8, !dbg !9644, !tbaa !3860
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.16
  store i32 0, i32* %j, align 4, !dbg !9645, !tbaa !4372
  br label %for.cond, !dbg !9646

for.cond:                                         ; preds = %for.inc, %if.end.24
  %41 = load i32, i32* %j, align 4, !dbg !9647, !tbaa !4372
  %42 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %names, align 8, !dbg !9650, !tbaa !3860
  %43 = bitcast %struct.stack_st_GENERAL_NAME* %42 to %struct.stack_st*, !dbg !9651
  %call25 = call i32 @sk_num(%struct.stack_st* %43), !dbg !9652
  %cmp26 = icmp slt i32 %41, %call25, !dbg !9653
  br i1 %cmp26, label %for.body, label %for.end, !dbg !9654

for.body:                                         ; preds = %for.cond
  %44 = bitcast i32* %gntype to i8*, !dbg !9655
  call void @llvm.lifetime.start(i64 4, i8* %44) #1, !dbg !9655
  call void @llvm.dbg.declare(metadata i32* %gntype, metadata !3051, metadata !3830), !dbg !9656
  %45 = bitcast %struct.asn1_string_st** %as to i8*, !dbg !9657
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !9657
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %as, metadata !3056, metadata !3830), !dbg !9658
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %as, align 8, !dbg !9658, !tbaa !3860
  %46 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %names, align 8, !dbg !9659, !tbaa !3860
  %47 = bitcast %struct.stack_st_GENERAL_NAME* %46 to %struct.stack_st*, !dbg !9660
  %48 = load i32, i32* %j, align 4, !dbg !9661, !tbaa !4372
  %call28 = call i8* @sk_value(%struct.stack_st* %47, i32 %48), !dbg !9662
  %49 = bitcast i8* %call28 to %struct.GENERAL_NAME_st*, !dbg !9663
  store %struct.GENERAL_NAME_st* %49, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9664, !tbaa !3860
  %50 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9665, !tbaa !3860
  %type = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %50, i32 0, i32 0, !dbg !9666
  %51 = load i32, i32* %type, align 4, !dbg !9666, !tbaa !9667
  store i32 %51, i32* %gntype, align 4, !dbg !9669, !tbaa !4372
  %52 = load i32, i32* %gntype, align 4, !dbg !9670, !tbaa !4372
  br label %NodeBlock.5

NodeBlock.5:                                      ; preds = %for.body
  %Pivot.6 = icmp slt i32 %52, 4
  br i1 %Pivot.6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.5
  %Pivot = icmp slt i32 %52, 6
  br i1 %Pivot, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %52, 6
  br i1 %SwitchLeaf4, label %sw.bb.64, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %52, 4
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.5
  %.off = add i32 %52, -1
  %SwitchLeaf = icmp ule i32 %.off, 1
  br i1 %SwitchLeaf, label %sw.bb.64, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.1
  %call29 = call %struct._object* @PyTuple_New(i64 2), !dbg !9671
  store %struct._object* %call29, %struct._object** %t, align 8, !dbg !9672, !tbaa !3860
  %53 = load %struct._object*, %struct._object** %t, align 8, !dbg !9673, !tbaa !3860
  %cmp30 = icmp eq %struct._object* %53, null, !dbg !9675
  br i1 %cmp30, label %if.then.32, label %if.end.33, !dbg !9676

if.then.32:                                       ; preds = %sw.bb
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9677

if.end.33:                                        ; preds = %sw.bb
  %call34 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i32 0, i32 0)), !dbg !9679
  store %struct._object* %call34, %struct._object** %v, align 8, !dbg !9680, !tbaa !3860
  %54 = load %struct._object*, %struct._object** %v, align 8, !dbg !9681, !tbaa !3860
  %cmp35 = icmp eq %struct._object* %54, null, !dbg !9682
  br i1 %cmp35, label %if.then.37, label %if.end.43, !dbg !9683

if.then.37:                                       ; preds = %if.end.33
  br label %do.body, !dbg !9684

do.body:                                          ; preds = %if.then.37
  %55 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9685
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !9685
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3057, metadata !3830), !dbg !9687
  %56 = load %struct._object*, %struct._object** %t, align 8, !dbg !9688, !tbaa !3860
  store %struct._object* %56, %struct._object** %_py_decref_tmp, align 8, !dbg !9687, !tbaa !3860
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9689, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !9691
  %58 = load i64, i64* %ob_refcnt, align 8, !dbg !9692, !tbaa !4101
  %dec = add i64 %58, -1, !dbg !9692
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9692, !tbaa !4101
  %cmp38 = icmp ne i64 %dec, 0, !dbg !9693
  br i1 %cmp38, label %if.then.40, label %if.else.41, !dbg !9694

if.then.40:                                       ; preds = %do.body
  br label %if.end.42, !dbg !9695

if.else.41:                                       ; preds = %do.body
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9697, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !9699
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9699, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !9700
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9700, !tbaa !4206
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9701, !tbaa !3860
  call void %61(%struct._object* %62), !dbg !9702
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.41, %if.then.40
  %63 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9703
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !9703
  br label %do.cond, !dbg !9705

do.cond:                                          ; preds = %if.end.42
  br label %do.end, !dbg !9706

do.end:                                           ; preds = %do.cond
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9708

if.end.43:                                        ; preds = %if.end.33
  %64 = load %struct._object*, %struct._object** %v, align 8, !dbg !9709, !tbaa !3860
  %65 = load %struct._object*, %struct._object** %t, align 8, !dbg !9710, !tbaa !3860
  %66 = bitcast %struct._object* %65 to %struct.PyTupleObject*, !dbg !9711
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %66, i32 0, i32 1, !dbg !9712
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !9713
  store %struct._object* %64, %struct._object** %arrayidx, align 8, !dbg !9714, !tbaa !3860
  %67 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9715, !tbaa !3860
  %d = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %67, i32 0, i32 1, !dbg !9716
  %dirn = bitcast %union.anon.7* %d to %struct.X509_name_st**, !dbg !9717
  %68 = load %struct.X509_name_st*, %struct.X509_name_st** %dirn, align 8, !dbg !9717, !tbaa !3860
  %call44 = call %struct._object* @_create_tuple_for_X509_NAME(%struct.X509_name_st* %68), !dbg !9718
  store %struct._object* %call44, %struct._object** %v, align 8, !dbg !9719, !tbaa !3860
  %69 = load %struct._object*, %struct._object** %v, align 8, !dbg !9720, !tbaa !3860
  %cmp45 = icmp eq %struct._object* %69, null, !dbg !9721
  br i1 %cmp45, label %if.then.47, label %if.end.61, !dbg !9722

if.then.47:                                       ; preds = %if.end.43
  br label %do.body.48, !dbg !9723

do.body.48:                                       ; preds = %if.then.47
  %70 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !9724
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !9724
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp49, metadata !3062, metadata !3830), !dbg !9726
  %71 = load %struct._object*, %struct._object** %t, align 8, !dbg !9727, !tbaa !3860
  store %struct._object* %71, %struct._object** %_py_decref_tmp49, align 8, !dbg !9726, !tbaa !3860
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !9728, !tbaa !3860
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !9730
  %73 = load i64, i64* %ob_refcnt50, align 8, !dbg !9731, !tbaa !4101
  %dec51 = add i64 %73, -1, !dbg !9731
  store i64 %dec51, i64* %ob_refcnt50, align 8, !dbg !9731, !tbaa !4101
  %cmp52 = icmp ne i64 %dec51, 0, !dbg !9732
  br i1 %cmp52, label %if.then.54, label %if.else.55, !dbg !9733

if.then.54:                                       ; preds = %do.body.48
  br label %if.end.58, !dbg !9734

if.else.55:                                       ; preds = %do.body.48
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !9736, !tbaa !3860
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !9738
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !9738, !tbaa !4204
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !9739
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !9739, !tbaa !4206
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !9740, !tbaa !3860
  call void %76(%struct._object* %77), !dbg !9741
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  %78 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !9742
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !9742
  br label %do.cond.59, !dbg !9744

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !9745

do.end.60:                                        ; preds = %do.cond.59
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9747

if.end.61:                                        ; preds = %if.end.43
  %79 = load %struct._object*, %struct._object** %v, align 8, !dbg !9748, !tbaa !3860
  %80 = load %struct._object*, %struct._object** %t, align 8, !dbg !9749, !tbaa !3860
  %81 = bitcast %struct._object* %80 to %struct.PyTupleObject*, !dbg !9750
  %ob_item62 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %81, i32 0, i32 1, !dbg !9751
  %arrayidx63 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item62, i32 0, i64 1, !dbg !9752
  store %struct._object* %79, %struct._object** %arrayidx63, align 8, !dbg !9753, !tbaa !3860
  br label %sw.epilog.196, !dbg !9754

sw.bb.64:                                         ; preds = %LeafBlock.3, %LeafBlock
  %call65 = call %struct._object* @PyTuple_New(i64 2), !dbg !9755
  store %struct._object* %call65, %struct._object** %t, align 8, !dbg !9756, !tbaa !3860
  %82 = load %struct._object*, %struct._object** %t, align 8, !dbg !9757, !tbaa !3860
  %cmp66 = icmp eq %struct._object* %82, null, !dbg !9759
  br i1 %cmp66, label %if.then.68, label %if.end.69, !dbg !9760

if.then.68:                                       ; preds = %sw.bb.64
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9761

if.end.69:                                        ; preds = %sw.bb.64
  %83 = load i32, i32* %gntype, align 4, !dbg !9762, !tbaa !4372
  br label %NodeBlock.16

NodeBlock.16:                                     ; preds = %if.end.69
  %Pivot.17 = icmp slt i32 %83, 2
  br i1 %Pivot.17, label %LeafBlock.8, label %NodeBlock.14

NodeBlock.14:                                     ; preds = %NodeBlock.16
  %Pivot.15 = icmp slt i32 %83, 6
  br i1 %Pivot.15, label %LeafBlock.10, label %LeafBlock.12

LeafBlock.12:                                     ; preds = %NodeBlock.14
  %SwitchLeaf13 = icmp eq i32 %83, 6
  br i1 %SwitchLeaf13, label %sw.bb.76, label %NewDefault.7

LeafBlock.10:                                     ; preds = %NodeBlock.14
  %SwitchLeaf11 = icmp eq i32 %83, 2
  br i1 %SwitchLeaf11, label %sw.bb.73, label %NewDefault.7

LeafBlock.8:                                      ; preds = %NodeBlock.16
  %SwitchLeaf9 = icmp eq i32 %83, 1
  br i1 %SwitchLeaf9, label %sw.bb.70, label %NewDefault.7

sw.bb.70:                                         ; preds = %LeafBlock.8
  %call71 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0)), !dbg !9763
  store %struct._object* %call71, %struct._object** %v, align 8, !dbg !9765, !tbaa !3860
  %84 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9766, !tbaa !3860
  %d72 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %84, i32 0, i32 1, !dbg !9767
  %rfc822Name = bitcast %union.anon.7* %d72 to %struct.asn1_string_st**, !dbg !9768
  %85 = load %struct.asn1_string_st*, %struct.asn1_string_st** %rfc822Name, align 8, !dbg !9768, !tbaa !3860
  store %struct.asn1_string_st* %85, %struct.asn1_string_st** %as, align 8, !dbg !9769, !tbaa !3860
  br label %sw.epilog, !dbg !9770

sw.bb.73:                                         ; preds = %LeafBlock.10
  %call74 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0)), !dbg !9771
  store %struct._object* %call74, %struct._object** %v, align 8, !dbg !9772, !tbaa !3860
  %86 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9773, !tbaa !3860
  %d75 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %86, i32 0, i32 1, !dbg !9774
  %dNSName = bitcast %union.anon.7* %d75 to %struct.asn1_string_st**, !dbg !9775
  %87 = load %struct.asn1_string_st*, %struct.asn1_string_st** %dNSName, align 8, !dbg !9775, !tbaa !3860
  store %struct.asn1_string_st* %87, %struct.asn1_string_st** %as, align 8, !dbg !9776, !tbaa !3860
  br label %sw.epilog, !dbg !9777

sw.bb.76:                                         ; preds = %LeafBlock.12
  %call77 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.175, i32 0, i32 0)), !dbg !9778
  store %struct._object* %call77, %struct._object** %v, align 8, !dbg !9779, !tbaa !3860
  %88 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9780, !tbaa !3860
  %d78 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %88, i32 0, i32 1, !dbg !9781
  %uniformResourceIdentifier = bitcast %union.anon.7* %d78 to %struct.asn1_string_st**, !dbg !9782
  %89 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uniformResourceIdentifier, align 8, !dbg !9782, !tbaa !3860
  store %struct.asn1_string_st* %89, %struct.asn1_string_st** %as, align 8, !dbg !9783, !tbaa !3860
  br label %sw.epilog, !dbg !9784

NewDefault.7:                                     ; preds = %LeafBlock.12, %LeafBlock.10, %LeafBlock.8
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault.7, %sw.bb.76, %sw.bb.73, %sw.bb.70
  %90 = load %struct._object*, %struct._object** %v, align 8, !dbg !9785, !tbaa !3860
  %cmp79 = icmp eq %struct._object* %90, null, !dbg !9786
  br i1 %cmp79, label %if.then.81, label %if.end.95, !dbg !9787

if.then.81:                                       ; preds = %sw.epilog
  br label %do.body.82, !dbg !9788

do.body.82:                                       ; preds = %if.then.81
  %91 = bitcast %struct._object** %_py_decref_tmp83 to i8*, !dbg !9789
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !9789
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp83, metadata !3066, metadata !3830), !dbg !9791
  %92 = load %struct._object*, %struct._object** %t, align 8, !dbg !9792, !tbaa !3860
  store %struct._object* %92, %struct._object** %_py_decref_tmp83, align 8, !dbg !9791, !tbaa !3860
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8, !dbg !9793, !tbaa !3860
  %ob_refcnt84 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !9795
  %94 = load i64, i64* %ob_refcnt84, align 8, !dbg !9796, !tbaa !4101
  %dec85 = add i64 %94, -1, !dbg !9796
  store i64 %dec85, i64* %ob_refcnt84, align 8, !dbg !9796, !tbaa !4101
  %cmp86 = icmp ne i64 %dec85, 0, !dbg !9797
  br i1 %cmp86, label %if.then.88, label %if.else.89, !dbg !9798

if.then.88:                                       ; preds = %do.body.82
  br label %if.end.92, !dbg !9799

if.else.89:                                       ; preds = %do.body.82
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8, !dbg !9801, !tbaa !3860
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !9803
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !9803, !tbaa !4204
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4, !dbg !9804
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !9804, !tbaa !4206
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8, !dbg !9805, !tbaa !3860
  call void %97(%struct._object* %98), !dbg !9806
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %99 = bitcast %struct._object** %_py_decref_tmp83 to i8*, !dbg !9807
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !9807
  br label %do.cond.93, !dbg !9809

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !9810

do.end.94:                                        ; preds = %do.cond.93
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9812

if.end.95:                                        ; preds = %sw.epilog
  %100 = load %struct._object*, %struct._object** %v, align 8, !dbg !9813, !tbaa !3860
  %101 = load %struct._object*, %struct._object** %t, align 8, !dbg !9814, !tbaa !3860
  %102 = bitcast %struct._object* %101 to %struct.PyTupleObject*, !dbg !9815
  %ob_item96 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %102, i32 0, i32 1, !dbg !9816
  %arrayidx97 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item96, i32 0, i64 0, !dbg !9817
  store %struct._object* %100, %struct._object** %arrayidx97, align 8, !dbg !9818, !tbaa !3860
  %103 = load %struct.asn1_string_st*, %struct.asn1_string_st** %as, align 8, !dbg !9819, !tbaa !3860
  %call98 = call i8* @ASN1_STRING_data(%struct.asn1_string_st* %103), !dbg !9820
  %104 = load %struct.asn1_string_st*, %struct.asn1_string_st** %as, align 8, !dbg !9821, !tbaa !3860
  %call99 = call i32 @ASN1_STRING_length(%struct.asn1_string_st* %104), !dbg !9822
  %conv100 = sext i32 %call99 to i64, !dbg !9822
  %call101 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %call98, i64 %conv100), !dbg !9823
  store %struct._object* %call101, %struct._object** %v, align 8, !dbg !9824, !tbaa !3860
  %105 = load %struct._object*, %struct._object** %v, align 8, !dbg !9825, !tbaa !3860
  %cmp102 = icmp eq %struct._object* %105, null, !dbg !9826
  br i1 %cmp102, label %if.then.104, label %if.end.118, !dbg !9827

if.then.104:                                      ; preds = %if.end.95
  br label %do.body.105, !dbg !9828

do.body.105:                                      ; preds = %if.then.104
  %106 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !9829
  call void @llvm.lifetime.start(i64 8, i8* %106) #1, !dbg !9829
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp106, metadata !3070, metadata !3830), !dbg !9831
  %107 = load %struct._object*, %struct._object** %t, align 8, !dbg !9832, !tbaa !3860
  store %struct._object* %107, %struct._object** %_py_decref_tmp106, align 8, !dbg !9831, !tbaa !3860
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !9833, !tbaa !3860
  %ob_refcnt107 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 0, !dbg !9835
  %109 = load i64, i64* %ob_refcnt107, align 8, !dbg !9836, !tbaa !4101
  %dec108 = add i64 %109, -1, !dbg !9836
  store i64 %dec108, i64* %ob_refcnt107, align 8, !dbg !9836, !tbaa !4101
  %cmp109 = icmp ne i64 %dec108, 0, !dbg !9837
  br i1 %cmp109, label %if.then.111, label %if.else.112, !dbg !9838

if.then.111:                                      ; preds = %do.body.105
  br label %if.end.115, !dbg !9839

if.else.112:                                      ; preds = %do.body.105
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !9841, !tbaa !3860
  %ob_type113 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 1, !dbg !9843
  %111 = load %struct._typeobject*, %struct._typeobject** %ob_type113, align 8, !dbg !9843, !tbaa !4204
  %tp_dealloc114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %111, i32 0, i32 4, !dbg !9844
  %112 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc114, align 8, !dbg !9844, !tbaa !4206
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !9845, !tbaa !3860
  call void %112(%struct._object* %113), !dbg !9846
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.112, %if.then.111
  %114 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !9847
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !9847
  br label %do.cond.116, !dbg !9849

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !9850

do.end.117:                                       ; preds = %do.cond.116
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9852

if.end.118:                                       ; preds = %if.end.95
  %115 = load %struct._object*, %struct._object** %v, align 8, !dbg !9853, !tbaa !3860
  %116 = load %struct._object*, %struct._object** %t, align 8, !dbg !9854, !tbaa !3860
  %117 = bitcast %struct._object* %116 to %struct.PyTupleObject*, !dbg !9855
  %ob_item119 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %117, i32 0, i32 1, !dbg !9856
  %arrayidx120 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item119, i32 0, i64 1, !dbg !9857
  store %struct._object* %115, %struct._object** %arrayidx120, align 8, !dbg !9858, !tbaa !3860
  br label %sw.epilog.196, !dbg !9859

NewDefault:                                       ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %118 = load i32, i32* %gntype, align 4, !dbg !9860, !tbaa !4372
  br label %NodeBlock.32

NodeBlock.32:                                     ; preds = %sw.default
  %Pivot.33 = icmp slt i32 %118, 5
  br i1 %Pivot.33, label %NodeBlock.23, label %NodeBlock.30

NodeBlock.30:                                     ; preds = %NodeBlock.32
  %Pivot.31 = icmp slt i32 %118, 7
  br i1 %Pivot.31, label %LeafBlock.25, label %LeafBlock.27

LeafBlock.27:                                     ; preds = %NodeBlock.30
  %.off.28 = add i32 %118, -7
  %SwitchLeaf29 = icmp ule i32 %.off.28, 1
  br i1 %SwitchLeaf29, label %sw.bb.121, label %NewDefault.18

LeafBlock.25:                                     ; preds = %NodeBlock.30
  %SwitchLeaf26 = icmp eq i32 %118, 5
  br i1 %SwitchLeaf26, label %sw.bb.121, label %NewDefault.18

NodeBlock.23:                                     ; preds = %NodeBlock.32
  %Pivot.24 = icmp slt i32 %118, 3
  br i1 %Pivot.24, label %LeafBlock.19, label %LeafBlock.21

LeafBlock.21:                                     ; preds = %NodeBlock.23
  %SwitchLeaf22 = icmp eq i32 %118, 3
  br i1 %SwitchLeaf22, label %sw.bb.121, label %NewDefault.18

LeafBlock.19:                                     ; preds = %NodeBlock.23
  %SwitchLeaf20 = icmp eq i32 %118, 0
  br i1 %SwitchLeaf20, label %sw.bb.121, label %NewDefault.18

sw.bb.121:                                        ; preds = %LeafBlock.27, %LeafBlock.25, %LeafBlock.21, %LeafBlock.19
  br label %sw.epilog.128, !dbg !9861

NewDefault.18:                                    ; preds = %LeafBlock.27, %LeafBlock.25, %LeafBlock.21, %LeafBlock.19
  br label %sw.default.122

sw.default.122:                                   ; preds = %NewDefault.18
  %119 = load %struct._object*, %struct._object** @PyExc_RuntimeWarning, align 8, !dbg !9863, !tbaa !3860
  %120 = load i32, i32* %gntype, align 4, !dbg !9865, !tbaa !4372
  %call123 = call i32 (%struct._object*, i64, i8*, ...) @PyErr_WarnFormat(%struct._object* %119, i64 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i32 %120), !dbg !9866
  %cmp124 = icmp eq i32 %call123, -1, !dbg !9867
  br i1 %cmp124, label %if.then.126, label %if.end.127, !dbg !9868

if.then.126:                                      ; preds = %sw.default.122
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9869

if.end.127:                                       ; preds = %sw.default.122
  br label %sw.epilog.128, !dbg !9871

sw.epilog.128:                                    ; preds = %if.end.127, %sw.bb.121
  %121 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !9872, !tbaa !3860
  %call129 = call i64 @BIO_ctrl(%struct.bio_st* %121, i32 1, i64 0, i8* null), !dbg !9873
  %conv130 = trunc i64 %call129 to i32, !dbg !9874
  %122 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !9875, !tbaa !3860
  %123 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %name, align 8, !dbg !9876, !tbaa !3860
  %call131 = call i32 @GENERAL_NAME_print(%struct.bio_st* %122, %struct.GENERAL_NAME_st* %123), !dbg !9877
  %124 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !9878, !tbaa !3860
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !9879
  %call132 = call i32 @BIO_gets(%struct.bio_st* %124, i8* %arraydecay, i32 2047), !dbg !9880
  store i32 %call132, i32* %len, align 4, !dbg !9881, !tbaa !4372
  %125 = load i32, i32* %len, align 4, !dbg !9882, !tbaa !4372
  %cmp133 = icmp slt i32 %125, 0, !dbg !9884
  br i1 %cmp133, label %if.then.135, label %if.end.137, !dbg !9885

if.then.135:                                      ; preds = %sw.epilog.128
  %call136 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 915), !dbg !9886
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9888

if.end.137:                                       ; preds = %sw.epilog.128
  %arraydecay138 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !9889
  %call139 = call i8* @strchr(i8* %arraydecay138, i32 58) #1, !dbg !9890
  store i8* %call139, i8** %vptr, align 8, !dbg !9891, !tbaa !3860
  %126 = load i8*, i8** %vptr, align 8, !dbg !9892, !tbaa !3860
  %cmp140 = icmp eq i8* %126, null, !dbg !9894
  br i1 %cmp140, label %if.then.142, label %if.end.143, !dbg !9895

if.then.142:                                      ; preds = %if.end.137
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9896

if.end.143:                                       ; preds = %if.end.137
  %call144 = call %struct._object* @PyTuple_New(i64 2), !dbg !9897
  store %struct._object* %call144, %struct._object** %t, align 8, !dbg !9898, !tbaa !3860
  %127 = load %struct._object*, %struct._object** %t, align 8, !dbg !9899, !tbaa !3860
  %cmp145 = icmp eq %struct._object* %127, null, !dbg !9901
  br i1 %cmp145, label %if.then.147, label %if.end.148, !dbg !9902

if.then.147:                                      ; preds = %if.end.143
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9903

if.end.148:                                       ; preds = %if.end.143
  %arraydecay149 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !9904
  %128 = load i8*, i8** %vptr, align 8, !dbg !9905, !tbaa !3860
  %arraydecay150 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !9906
  %sub.ptr.lhs.cast = ptrtoint i8* %128 to i64, !dbg !9907
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay150 to i64, !dbg !9907
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9907
  %call151 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %arraydecay149, i64 %sub.ptr.sub), !dbg !9908
  store %struct._object* %call151, %struct._object** %v, align 8, !dbg !9909, !tbaa !3860
  %129 = load %struct._object*, %struct._object** %v, align 8, !dbg !9910, !tbaa !3860
  %cmp152 = icmp eq %struct._object* %129, null, !dbg !9911
  br i1 %cmp152, label %if.then.154, label %if.end.168, !dbg !9912

if.then.154:                                      ; preds = %if.end.148
  br label %do.body.155, !dbg !9913

do.body.155:                                      ; preds = %if.then.154
  %130 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !9914
  call void @llvm.lifetime.start(i64 8, i8* %130) #1, !dbg !9914
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp156, metadata !3074, metadata !3830), !dbg !9916
  %131 = load %struct._object*, %struct._object** %t, align 8, !dbg !9917, !tbaa !3860
  store %struct._object* %131, %struct._object** %_py_decref_tmp156, align 8, !dbg !9916, !tbaa !3860
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9918, !tbaa !3860
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 0, !dbg !9920
  %133 = load i64, i64* %ob_refcnt157, align 8, !dbg !9921, !tbaa !4101
  %dec158 = add i64 %133, -1, !dbg !9921
  store i64 %dec158, i64* %ob_refcnt157, align 8, !dbg !9921, !tbaa !4101
  %cmp159 = icmp ne i64 %dec158, 0, !dbg !9922
  br i1 %cmp159, label %if.then.161, label %if.else.162, !dbg !9923

if.then.161:                                      ; preds = %do.body.155
  br label %if.end.165, !dbg !9924

if.else.162:                                      ; preds = %do.body.155
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9926, !tbaa !3860
  %ob_type163 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 1, !dbg !9928
  %135 = load %struct._typeobject*, %struct._typeobject** %ob_type163, align 8, !dbg !9928, !tbaa !4204
  %tp_dealloc164 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %135, i32 0, i32 4, !dbg !9929
  %136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164, align 8, !dbg !9929, !tbaa !4206
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9930, !tbaa !3860
  call void %136(%struct._object* %137), !dbg !9931
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.161
  %138 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !9932
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !9932
  br label %do.cond.166, !dbg !9934

do.cond.166:                                      ; preds = %if.end.165
  br label %do.end.167, !dbg !9935

do.end.167:                                       ; preds = %do.cond.166
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9937

if.end.168:                                       ; preds = %if.end.148
  %139 = load %struct._object*, %struct._object** %v, align 8, !dbg !9938, !tbaa !3860
  %140 = load %struct._object*, %struct._object** %t, align 8, !dbg !9939, !tbaa !3860
  %141 = bitcast %struct._object* %140 to %struct.PyTupleObject*, !dbg !9940
  %ob_item169 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %141, i32 0, i32 1, !dbg !9941
  %arrayidx170 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item169, i32 0, i64 0, !dbg !9942
  store %struct._object* %139, %struct._object** %arrayidx170, align 8, !dbg !9943, !tbaa !3860
  %142 = load i8*, i8** %vptr, align 8, !dbg !9944, !tbaa !3860
  %add.ptr = getelementptr i8, i8* %142, i64 1, !dbg !9945
  %143 = load i32, i32* %len, align 4, !dbg !9946, !tbaa !4372
  %conv171 = sext i32 %143 to i64, !dbg !9946
  %144 = load i8*, i8** %vptr, align 8, !dbg !9947, !tbaa !3860
  %arraydecay172 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !9948
  %sub.ptr.lhs.cast173 = ptrtoint i8* %144 to i64, !dbg !9949
  %sub.ptr.rhs.cast174 = ptrtoint i8* %arraydecay172 to i64, !dbg !9949
  %sub.ptr.sub175 = sub i64 %sub.ptr.lhs.cast173, %sub.ptr.rhs.cast174, !dbg !9949
  %add = add i64 %sub.ptr.sub175, 1, !dbg !9950
  %sub = sub i64 %conv171, %add, !dbg !9951
  %call176 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %add.ptr, i64 %sub), !dbg !9952
  store %struct._object* %call176, %struct._object** %v, align 8, !dbg !9953, !tbaa !3860
  %145 = load %struct._object*, %struct._object** %v, align 8, !dbg !9954, !tbaa !3860
  %cmp177 = icmp eq %struct._object* %145, null, !dbg !9955
  br i1 %cmp177, label %if.then.179, label %if.end.193, !dbg !9956

if.then.179:                                      ; preds = %if.end.168
  br label %do.body.180, !dbg !9957

do.body.180:                                      ; preds = %if.then.179
  %146 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !9958
  call void @llvm.lifetime.start(i64 8, i8* %146) #1, !dbg !9958
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp181, metadata !3078, metadata !3830), !dbg !9960
  %147 = load %struct._object*, %struct._object** %t, align 8, !dbg !9961, !tbaa !3860
  store %struct._object* %147, %struct._object** %_py_decref_tmp181, align 8, !dbg !9960, !tbaa !3860
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !9962, !tbaa !3860
  %ob_refcnt182 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 0, !dbg !9964
  %149 = load i64, i64* %ob_refcnt182, align 8, !dbg !9965, !tbaa !4101
  %dec183 = add i64 %149, -1, !dbg !9965
  store i64 %dec183, i64* %ob_refcnt182, align 8, !dbg !9965, !tbaa !4101
  %cmp184 = icmp ne i64 %dec183, 0, !dbg !9966
  br i1 %cmp184, label %if.then.186, label %if.else.187, !dbg !9967

if.then.186:                                      ; preds = %do.body.180
  br label %if.end.190, !dbg !9968

if.else.187:                                      ; preds = %do.body.180
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !9970, !tbaa !3860
  %ob_type188 = getelementptr inbounds %struct._object, %struct._object* %150, i32 0, i32 1, !dbg !9972
  %151 = load %struct._typeobject*, %struct._typeobject** %ob_type188, align 8, !dbg !9972, !tbaa !4204
  %tp_dealloc189 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %151, i32 0, i32 4, !dbg !9973
  %152 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc189, align 8, !dbg !9973, !tbaa !4206
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !9974, !tbaa !3860
  call void %152(%struct._object* %153), !dbg !9975
  br label %if.end.190

if.end.190:                                       ; preds = %if.else.187, %if.then.186
  %154 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !9976
  call void @llvm.lifetime.end(i64 8, i8* %154) #1, !dbg !9976
  br label %do.cond.191, !dbg !9978

do.cond.191:                                      ; preds = %if.end.190
  br label %do.end.192, !dbg !9979

do.end.192:                                       ; preds = %do.cond.191
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9981

if.end.193:                                       ; preds = %if.end.168
  %155 = load %struct._object*, %struct._object** %v, align 8, !dbg !9982, !tbaa !3860
  %156 = load %struct._object*, %struct._object** %t, align 8, !dbg !9983, !tbaa !3860
  %157 = bitcast %struct._object* %156 to %struct.PyTupleObject*, !dbg !9984
  %ob_item194 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %157, i32 0, i32 1, !dbg !9985
  %arrayidx195 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item194, i32 0, i64 1, !dbg !9986
  store %struct._object* %155, %struct._object** %arrayidx195, align 8, !dbg !9987, !tbaa !3860
  br label %sw.epilog.196, !dbg !9988

sw.epilog.196:                                    ; preds = %if.end.193, %if.end.118, %if.end.61
  %158 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !9989, !tbaa !3860
  %159 = load %struct._object*, %struct._object** %t, align 8, !dbg !9990, !tbaa !3860
  %call197 = call i32 @PyList_Append(%struct._object* %158, %struct._object* %159), !dbg !9991
  %cmp198 = icmp slt i32 %call197, 0, !dbg !9992
  br i1 %cmp198, label %if.then.200, label %if.end.214, !dbg !9993

if.then.200:                                      ; preds = %sw.epilog.196
  br label %do.body.201, !dbg !9994

do.body.201:                                      ; preds = %if.then.200
  %160 = bitcast %struct._object** %_py_decref_tmp202 to i8*, !dbg !9995
  call void @llvm.lifetime.start(i64 8, i8* %160) #1, !dbg !9995
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp202, metadata !3082, metadata !3830), !dbg !9997
  %161 = load %struct._object*, %struct._object** %t, align 8, !dbg !9998, !tbaa !3860
  store %struct._object* %161, %struct._object** %_py_decref_tmp202, align 8, !dbg !9997, !tbaa !3860
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp202, align 8, !dbg !9999, !tbaa !3860
  %ob_refcnt203 = getelementptr inbounds %struct._object, %struct._object* %162, i32 0, i32 0, !dbg !10001
  %163 = load i64, i64* %ob_refcnt203, align 8, !dbg !10002, !tbaa !4101
  %dec204 = add i64 %163, -1, !dbg !10002
  store i64 %dec204, i64* %ob_refcnt203, align 8, !dbg !10002, !tbaa !4101
  %cmp205 = icmp ne i64 %dec204, 0, !dbg !10003
  br i1 %cmp205, label %if.then.207, label %if.else.208, !dbg !10004

if.then.207:                                      ; preds = %do.body.201
  br label %if.end.211, !dbg !10005

if.else.208:                                      ; preds = %do.body.201
  %164 = load %struct._object*, %struct._object** %_py_decref_tmp202, align 8, !dbg !10007, !tbaa !3860
  %ob_type209 = getelementptr inbounds %struct._object, %struct._object* %164, i32 0, i32 1, !dbg !10009
  %165 = load %struct._typeobject*, %struct._typeobject** %ob_type209, align 8, !dbg !10009, !tbaa !4204
  %tp_dealloc210 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %165, i32 0, i32 4, !dbg !10010
  %166 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc210, align 8, !dbg !10010, !tbaa !4206
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp202, align 8, !dbg !10011, !tbaa !3860
  call void %166(%struct._object* %167), !dbg !10012
  br label %if.end.211

if.end.211:                                       ; preds = %if.else.208, %if.then.207
  %168 = bitcast %struct._object** %_py_decref_tmp202 to i8*, !dbg !10013
  call void @llvm.lifetime.end(i64 8, i8* %168) #1, !dbg !10013
  br label %do.cond.212, !dbg !10015

do.cond.212:                                      ; preds = %if.end.211
  br label %do.end.213, !dbg !10016

do.end.213:                                       ; preds = %do.cond.212
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10018

if.end.214:                                       ; preds = %sw.epilog.196
  br label %do.body.215, !dbg !10019

do.body.215:                                      ; preds = %if.end.214
  %169 = bitcast %struct._object** %_py_decref_tmp216 to i8*, !dbg !10020
  call void @llvm.lifetime.start(i64 8, i8* %169) #1, !dbg !10020
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp216, metadata !3086, metadata !3830), !dbg !10022
  %170 = load %struct._object*, %struct._object** %t, align 8, !dbg !10023, !tbaa !3860
  store %struct._object* %170, %struct._object** %_py_decref_tmp216, align 8, !dbg !10022, !tbaa !3860
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !10024, !tbaa !3860
  %ob_refcnt217 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0, !dbg !10026
  %172 = load i64, i64* %ob_refcnt217, align 8, !dbg !10027, !tbaa !4101
  %dec218 = add i64 %172, -1, !dbg !10027
  store i64 %dec218, i64* %ob_refcnt217, align 8, !dbg !10027, !tbaa !4101
  %cmp219 = icmp ne i64 %dec218, 0, !dbg !10028
  br i1 %cmp219, label %if.then.221, label %if.else.222, !dbg !10029

if.then.221:                                      ; preds = %do.body.215
  br label %if.end.225, !dbg !10030

if.else.222:                                      ; preds = %do.body.215
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !10032, !tbaa !3860
  %ob_type223 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1, !dbg !10034
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type223, align 8, !dbg !10034, !tbaa !4204
  %tp_dealloc224 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4, !dbg !10035
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc224, align 8, !dbg !10035, !tbaa !4206
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !10036, !tbaa !3860
  call void %175(%struct._object* %176), !dbg !10037
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.222, %if.then.221
  %177 = bitcast %struct._object** %_py_decref_tmp216 to i8*, !dbg !10038
  call void @llvm.lifetime.end(i64 8, i8* %177) #1, !dbg !10038
  br label %do.cond.226, !dbg !10040

do.cond.226:                                      ; preds = %if.end.225
  br label %do.end.227, !dbg !10041

do.end.227:                                       ; preds = %do.cond.226
  store i32 0, i32* %cleanup.dest.slot, !dbg !10043
  br label %cleanup, !dbg !10043

cleanup:                                          ; preds = %do.end.227, %do.end.213, %do.end.192, %do.end.167, %if.then.147, %if.then.142, %if.then.135, %if.then.126, %do.end.117, %do.end.94, %if.then.68, %do.end.60, %do.end, %if.then.32
  %178 = bitcast %struct.asn1_string_st** %as to i8*, !dbg !10044
  call void @llvm.lifetime.end(i64 8, i8* %178) #1, !dbg !10044
  %179 = bitcast i32* %gntype to i8*, !dbg !10044
  call void @llvm.lifetime.end(i64 4, i8* %179) #1, !dbg !10044
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.39

NodeBlock.39:                                     ; preds = %cleanup
  %Pivot.40 = icmp slt i32 %cleanup.dest, 4
  br i1 %Pivot.40, label %LeafBlock.35, label %LeafBlock.37

LeafBlock.37:                                     ; preds = %NodeBlock.39
  %SwitchLeaf38 = icmp eq i32 %cleanup.dest, 4
  br i1 %SwitchLeaf38, label %fail, label %NewDefault.34

LeafBlock.35:                                     ; preds = %NodeBlock.39
  %SwitchLeaf36 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf36, label %cleanup.cont, label %NewDefault.34

cleanup.cont:                                     ; preds = %LeafBlock.35
  br label %for.inc, !dbg !10045

for.inc:                                          ; preds = %cleanup.cont
  %180 = load i32, i32* %j, align 4, !dbg !10046, !tbaa !4372
  %inc = add i32 %180, 1, !dbg !10046
  store i32 %inc, i32* %j, align 4, !dbg !10046, !tbaa !4372
  br label %for.cond, !dbg !10047

for.end:                                          ; preds = %for.cond
  %181 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %names, align 8, !dbg !10048, !tbaa !3860
  %182 = bitcast %struct.stack_st_GENERAL_NAME* %181 to %struct.stack_st*, !dbg !10049
  call void @sk_pop_free(%struct.stack_st* %182, void (i8*)* bitcast (void (%struct.GENERAL_NAME_st*)* @GENERAL_NAME_free to void (i8*)*)), !dbg !10050
  br label %while.cond, !dbg !9581

while.end:                                        ; preds = %while.cond
  %183 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !10051, !tbaa !3860
  %call229 = call i32 @BIO_free(%struct.bio_st* %183), !dbg !10052
  %184 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !10053, !tbaa !3860
  %cmp230 = icmp ne %struct._object* %184, @_Py_NoneStruct, !dbg !10054
  br i1 %cmp230, label %if.then.232, label %if.else.247, !dbg !10055

if.then.232:                                      ; preds = %while.end
  %185 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !10056, !tbaa !3860
  %call233 = call %struct._object* @PyList_AsTuple(%struct._object* %185), !dbg !10057
  store %struct._object* %call233, %struct._object** %v, align 8, !dbg !10058, !tbaa !3860
  br label %do.body.234, !dbg !10059

do.body.234:                                      ; preds = %if.then.232
  %186 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !10060
  call void @llvm.lifetime.start(i64 8, i8* %186) #1, !dbg !10060
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp235, metadata !3088, metadata !3830), !dbg !10062
  %187 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !10063, !tbaa !3860
  store %struct._object* %187, %struct._object** %_py_decref_tmp235, align 8, !dbg !10062, !tbaa !3860
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !10064, !tbaa !3860
  %ob_refcnt236 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 0, !dbg !10066
  %189 = load i64, i64* %ob_refcnt236, align 8, !dbg !10067, !tbaa !4101
  %dec237 = add i64 %189, -1, !dbg !10067
  store i64 %dec237, i64* %ob_refcnt236, align 8, !dbg !10067, !tbaa !4101
  %cmp238 = icmp ne i64 %dec237, 0, !dbg !10068
  br i1 %cmp238, label %if.then.240, label %if.else.241, !dbg !10069

if.then.240:                                      ; preds = %do.body.234
  br label %if.end.244, !dbg !10070

if.else.241:                                      ; preds = %do.body.234
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !10072, !tbaa !3860
  %ob_type242 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 1, !dbg !10074
  %191 = load %struct._typeobject*, %struct._typeobject** %ob_type242, align 8, !dbg !10074, !tbaa !4204
  %tp_dealloc243 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %191, i32 0, i32 4, !dbg !10075
  %192 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc243, align 8, !dbg !10075, !tbaa !4206
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !10076, !tbaa !3860
  call void %192(%struct._object* %193), !dbg !10077
  br label %if.end.244

if.end.244:                                       ; preds = %if.else.241, %if.then.240
  %194 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !10078
  call void @llvm.lifetime.end(i64 8, i8* %194) #1, !dbg !10078
  br label %do.cond.245, !dbg !10080

do.cond.245:                                      ; preds = %if.end.244
  br label %do.end.246, !dbg !10081

do.end.246:                                       ; preds = %do.cond.245
  %195 = load %struct._object*, %struct._object** %v, align 8, !dbg !10083, !tbaa !3860
  store %struct._object* %195, %struct._object** %retval, !dbg !10084
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !10084

if.else.247:                                      ; preds = %while.end
  %196 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !10085, !tbaa !3860
  store %struct._object* %196, %struct._object** %retval, !dbg !10087
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !10087

fail:                                             ; preds = %LeafBlock.37, %if.then.13, %if.then.8
  %197 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !10088, !tbaa !3860
  %cmp248 = icmp ne %struct.bio_st* %197, null, !dbg !10090
  br i1 %cmp248, label %if.then.250, label %if.end.252, !dbg !10091

if.then.250:                                      ; preds = %fail
  %198 = load %struct.bio_st*, %struct.bio_st** %biobuf, align 8, !dbg !10092, !tbaa !3860
  %call251 = call i32 @BIO_free(%struct.bio_st* %198), !dbg !10093
  br label %if.end.252, !dbg !10093

if.end.252:                                       ; preds = %if.then.250, %fail
  %199 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !10094, !tbaa !3860
  %cmp253 = icmp ne %struct._object* %199, @_Py_NoneStruct, !dbg !10095
  br i1 %cmp253, label %if.then.255, label %if.end.276, !dbg !10096

if.then.255:                                      ; preds = %if.end.252
  br label %do.body.256, !dbg !10097

do.body.256:                                      ; preds = %if.then.255
  %200 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10098
  call void @llvm.lifetime.start(i64 8, i8* %200) #1, !dbg !10098
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !3092, metadata !3830), !dbg !10100
  %201 = load %struct._object*, %struct._object** %peer_alt_names, align 8, !dbg !10101, !tbaa !3860
  store %struct._object* %201, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10100, !tbaa !3860
  %202 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10102, !tbaa !3860
  %cmp257 = icmp ne %struct._object* %202, null, !dbg !10103
  br i1 %cmp257, label %if.then.259, label %if.end.273, !dbg !10104

if.then.259:                                      ; preds = %do.body.256
  br label %do.body.260, !dbg !10105

do.body.260:                                      ; preds = %if.then.259
  %203 = bitcast %struct._object** %_py_decref_tmp261 to i8*, !dbg !10107
  call void @llvm.lifetime.start(i64 8, i8* %203) #1, !dbg !10107
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp261, metadata !3096, metadata !3830), !dbg !10109
  %204 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10110, !tbaa !3860
  store %struct._object* %204, %struct._object** %_py_decref_tmp261, align 8, !dbg !10109, !tbaa !3860
  %205 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !10111, !tbaa !3860
  %ob_refcnt262 = getelementptr inbounds %struct._object, %struct._object* %205, i32 0, i32 0, !dbg !10113
  %206 = load i64, i64* %ob_refcnt262, align 8, !dbg !10114, !tbaa !4101
  %dec263 = add i64 %206, -1, !dbg !10114
  store i64 %dec263, i64* %ob_refcnt262, align 8, !dbg !10114, !tbaa !4101
  %cmp264 = icmp ne i64 %dec263, 0, !dbg !10115
  br i1 %cmp264, label %if.then.266, label %if.else.267, !dbg !10116

if.then.266:                                      ; preds = %do.body.260
  br label %if.end.270, !dbg !10117

if.else.267:                                      ; preds = %do.body.260
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !10119, !tbaa !3860
  %ob_type268 = getelementptr inbounds %struct._object, %struct._object* %207, i32 0, i32 1, !dbg !10121
  %208 = load %struct._typeobject*, %struct._typeobject** %ob_type268, align 8, !dbg !10121, !tbaa !4204
  %tp_dealloc269 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %208, i32 0, i32 4, !dbg !10122
  %209 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc269, align 8, !dbg !10122, !tbaa !4206
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !10123, !tbaa !3860
  call void %209(%struct._object* %210), !dbg !10124
  br label %if.end.270

if.end.270:                                       ; preds = %if.else.267, %if.then.266
  %211 = bitcast %struct._object** %_py_decref_tmp261 to i8*, !dbg !10125
  call void @llvm.lifetime.end(i64 8, i8* %211) #1, !dbg !10125
  br label %do.cond.271, !dbg !10127

do.cond.271:                                      ; preds = %if.end.270
  br label %do.end.272, !dbg !10128

do.end.272:                                       ; preds = %do.cond.271
  br label %if.end.273, !dbg !10130

if.end.273:                                       ; preds = %do.end.272, %do.body.256
  %212 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10132
  call void @llvm.lifetime.end(i64 8, i8* %212) #1, !dbg !10132
  br label %do.cond.274, !dbg !10135

do.cond.274:                                      ; preds = %if.end.273
  br label %do.end.275, !dbg !10136

do.end.275:                                       ; preds = %do.cond.274
  br label %if.end.276, !dbg !10138

if.end.276:                                       ; preds = %do.end.275, %if.end.252
  store %struct._object* null, %struct._object** %retval, !dbg !10139
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.277, !dbg !10139

NewDefault.34:                                    ; preds = %LeafBlock.37, %LeafBlock.35
  br label %cleanup.277

cleanup.277:                                      ; preds = %NewDefault.34, %if.end.276, %if.else.247, %do.end.246, %if.then
  %213 = bitcast i8** %p to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %213) #1, !dbg !10140
  %214 = bitcast i32* %len to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 4, i8* %214) #1, !dbg !10140
  %215 = bitcast i8** %vptr to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %215) #1, !dbg !10140
  %216 = bitcast [2048 x i8]* %buf to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 2048, i8* %216) #1, !dbg !10140
  %217 = bitcast %struct.bio_st** %biobuf to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %217) #1, !dbg !10140
  %218 = bitcast %struct.v3_ext_method** %method to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %218) #1, !dbg !10140
  %219 = bitcast %struct.GENERAL_NAME_st** %name to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %219) #1, !dbg !10140
  %220 = bitcast %struct.stack_st_GENERAL_NAME** %names to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %220) #1, !dbg !10140
  %221 = bitcast %struct.X509_extension_st** %ext to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %221) #1, !dbg !10140
  %222 = bitcast %struct._object** %t to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %222) #1, !dbg !10140
  %223 = bitcast %struct._object** %v to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %223) #1, !dbg !10140
  %224 = bitcast %struct._object** %peer_alt_names to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %224) #1, !dbg !10140
  %225 = bitcast i32* %j to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 4, i8* %225) #1, !dbg !10140
  %226 = bitcast i32* %i to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 4, i8* %226) #1, !dbg !10140
  %227 = load %struct._object*, %struct._object** %retval, !dbg !10140
  ret %struct._object* %227, !dbg !10140
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_get_aia_uri(%struct.x509_st* %certificate, i32 %nid) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %certificate.addr = alloca %struct.x509_st*, align 8
  %nid.addr = alloca i32, align 4
  %lst = alloca %struct._object*, align 8
  %ostr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %info = alloca %struct.stack_st_ACCESS_DESCRIPTION*, align 8
  %cleanup.dest.slot = alloca i32
  %ad = alloca %struct.ACCESS_DESCRIPTION_st*, align 8
  %uri = alloca %struct.asn1_string_st*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %tup = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp70 = alloca %struct._object*, align 8
  store %struct.x509_st* %certificate, %struct.x509_st** %certificate.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.x509_st** %certificate.addr, metadata !3103, metadata !3830), !dbg !10141
  store i32 %nid, i32* %nid.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !3104, metadata !3830), !dbg !10142
  %0 = bitcast %struct._object** %lst to i8*, !dbg !10143
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10143
  call void @llvm.dbg.declare(metadata %struct._object** %lst, metadata !3105, metadata !3830), !dbg !10144
  store %struct._object* null, %struct._object** %lst, align 8, !dbg !10144, !tbaa !3860
  %1 = bitcast %struct._object** %ostr to i8*, !dbg !10143
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10143
  call void @llvm.dbg.declare(metadata %struct._object** %ostr, metadata !3106, metadata !3830), !dbg !10145
  store %struct._object* null, %struct._object** %ostr, align 8, !dbg !10145, !tbaa !3860
  %2 = bitcast i32* %i to i8*, !dbg !10146
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !10146
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3107, metadata !3830), !dbg !10147
  %3 = bitcast i32* %result to i8*, !dbg !10146
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !10146
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3108, metadata !3830), !dbg !10148
  %4 = bitcast %struct.stack_st_ACCESS_DESCRIPTION** %info to i8*, !dbg !10149
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10149
  call void @llvm.dbg.declare(metadata %struct.stack_st_ACCESS_DESCRIPTION** %info, metadata !3109, metadata !3830), !dbg !10150
  %5 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !10151, !tbaa !3860
  %call = call i8* @X509_get_ext_d2i(%struct.x509_st* %5, i32 177, i32* null, i32* null), !dbg !10152
  %6 = bitcast i8* %call to %struct.stack_st_ACCESS_DESCRIPTION*, !dbg !10152
  store %struct.stack_st_ACCESS_DESCRIPTION* %6, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10153, !tbaa !3860
  %7 = load %struct.stack_st_ACCESS_DESCRIPTION*, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10154, !tbaa !3860
  %cmp = icmp eq %struct.stack_st_ACCESS_DESCRIPTION* %7, null, !dbg !10156
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10157

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.stack_st_ACCESS_DESCRIPTION*, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10158, !tbaa !3860
  %9 = bitcast %struct.stack_st_ACCESS_DESCRIPTION* %8 to %struct.stack_st*, !dbg !10160
  %call1 = call i32 @sk_num(%struct.stack_st* %9), !dbg !10161
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10162
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10163

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.85, !dbg !10164

if.end:                                           ; preds = %lor.lhs.false
  %call3 = call %struct._object* @PyList_New(i64 0), !dbg !10166
  store %struct._object* %call3, %struct._object** %lst, align 8, !dbg !10168, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %call3, null, !dbg !10169
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !10170

if.then.5:                                        ; preds = %if.end
  br label %fail, !dbg !10171

if.end.6:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !10173, !tbaa !4372
  br label %for.cond, !dbg !10174

for.cond:                                         ; preds = %for.inc, %if.end.6
  %10 = load i32, i32* %i, align 4, !dbg !10175, !tbaa !4372
  %11 = load %struct.stack_st_ACCESS_DESCRIPTION*, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10178, !tbaa !3860
  %12 = bitcast %struct.stack_st_ACCESS_DESCRIPTION* %11 to %struct.stack_st*, !dbg !10179
  %call7 = call i32 @sk_num(%struct.stack_st* %12), !dbg !10180
  %cmp8 = icmp slt i32 %10, %call7, !dbg !10181
  br i1 %cmp8, label %for.body, label %for.end, !dbg !10182

for.body:                                         ; preds = %for.cond
  %13 = bitcast %struct.ACCESS_DESCRIPTION_st** %ad to i8*, !dbg !10183
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !10183
  call void @llvm.dbg.declare(metadata %struct.ACCESS_DESCRIPTION_st** %ad, metadata !3115, metadata !3830), !dbg !10184
  %14 = load %struct.stack_st_ACCESS_DESCRIPTION*, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10185, !tbaa !3860
  %15 = bitcast %struct.stack_st_ACCESS_DESCRIPTION* %14 to %struct.stack_st*, !dbg !10186
  %16 = load i32, i32* %i, align 4, !dbg !10187, !tbaa !4372
  %call9 = call i8* @sk_value(%struct.stack_st* %15, i32 %16), !dbg !10188
  %17 = bitcast i8* %call9 to %struct.ACCESS_DESCRIPTION_st*, !dbg !10189
  store %struct.ACCESS_DESCRIPTION_st* %17, %struct.ACCESS_DESCRIPTION_st** %ad, align 8, !dbg !10184, !tbaa !3860
  %18 = bitcast %struct.asn1_string_st** %uri to i8*, !dbg !10190
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !10190
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %uri, metadata !3119, metadata !3830), !dbg !10191
  %19 = load %struct.ACCESS_DESCRIPTION_st*, %struct.ACCESS_DESCRIPTION_st** %ad, align 8, !dbg !10192, !tbaa !3860
  %method = getelementptr inbounds %struct.ACCESS_DESCRIPTION_st, %struct.ACCESS_DESCRIPTION_st* %19, i32 0, i32 0, !dbg !10194
  %20 = load %struct.asn1_object_st*, %struct.asn1_object_st** %method, align 8, !dbg !10194, !tbaa !10195
  %call10 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %20), !dbg !10197
  %21 = load i32, i32* %nid.addr, align 4, !dbg !10198, !tbaa !4372
  %cmp11 = icmp ne i32 %call10, %21, !dbg !10199
  br i1 %cmp11, label %if.then.14, label %lor.lhs.false.12, !dbg !10200

lor.lhs.false.12:                                 ; preds = %for.body
  %22 = load %struct.ACCESS_DESCRIPTION_st*, %struct.ACCESS_DESCRIPTION_st** %ad, align 8, !dbg !10201, !tbaa !3860
  %location = getelementptr inbounds %struct.ACCESS_DESCRIPTION_st, %struct.ACCESS_DESCRIPTION_st* %22, i32 0, i32 1, !dbg !10202
  %23 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %location, align 8, !dbg !10202, !tbaa !10203
  %type = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %23, i32 0, i32 0, !dbg !10204
  %24 = load i32, i32* %type, align 4, !dbg !10204, !tbaa !9667
  %cmp13 = icmp ne i32 %24, 6, !dbg !10205
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !10206

if.then.14:                                       ; preds = %lor.lhs.false.12, %for.body
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10207

if.end.15:                                        ; preds = %lor.lhs.false.12
  %25 = load %struct.ACCESS_DESCRIPTION_st*, %struct.ACCESS_DESCRIPTION_st** %ad, align 8, !dbg !10209, !tbaa !3860
  %location16 = getelementptr inbounds %struct.ACCESS_DESCRIPTION_st, %struct.ACCESS_DESCRIPTION_st* %25, i32 0, i32 1, !dbg !10210
  %26 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %location16, align 8, !dbg !10210, !tbaa !10203
  %d = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %26, i32 0, i32 1, !dbg !10211
  %uniformResourceIdentifier = bitcast %union.anon.7* %d to %struct.asn1_string_st**, !dbg !10212
  %27 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uniformResourceIdentifier, align 8, !dbg !10212, !tbaa !3860
  store %struct.asn1_string_st* %27, %struct.asn1_string_st** %uri, align 8, !dbg !10213, !tbaa !3860
  %28 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uri, align 8, !dbg !10214, !tbaa !3860
  %data = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %28, i32 0, i32 2, !dbg !10215
  %29 = load i8*, i8** %data, align 8, !dbg !10215, !tbaa !9618
  %30 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uri, align 8, !dbg !10216, !tbaa !3860
  %length = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %30, i32 0, i32 0, !dbg !10217
  %31 = load i32, i32* %length, align 4, !dbg !10217, !tbaa !9630
  %conv = sext i32 %31 to i64, !dbg !10216
  %call17 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %29, i64 %conv), !dbg !10218
  store %struct._object* %call17, %struct._object** %ostr, align 8, !dbg !10219, !tbaa !3860
  %32 = load %struct._object*, %struct._object** %ostr, align 8, !dbg !10220, !tbaa !3860
  %cmp18 = icmp eq %struct._object* %32, null, !dbg !10222
  br i1 %cmp18, label %if.then.20, label %if.end.21, !dbg !10223

if.then.20:                                       ; preds = %if.end.15
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10224

if.end.21:                                        ; preds = %if.end.15
  %33 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10226, !tbaa !3860
  %34 = load %struct._object*, %struct._object** %ostr, align 8, !dbg !10227, !tbaa !3860
  %call22 = call i32 @PyList_Append(%struct._object* %33, %struct._object* %34), !dbg !10228
  store i32 %call22, i32* %result, align 4, !dbg !10229, !tbaa !4372
  br label %do.body, !dbg !10230

do.body:                                          ; preds = %if.end.21
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10231
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !10231
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3120, metadata !3830), !dbg !10233
  %36 = load %struct._object*, %struct._object** %ostr, align 8, !dbg !10234, !tbaa !3860
  store %struct._object* %36, %struct._object** %_py_decref_tmp, align 8, !dbg !10233, !tbaa !3860
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10235, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !10237
  %38 = load i64, i64* %ob_refcnt, align 8, !dbg !10238, !tbaa !4101
  %dec = add i64 %38, -1, !dbg !10238
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10238, !tbaa !4101
  %cmp23 = icmp ne i64 %dec, 0, !dbg !10239
  br i1 %cmp23, label %if.then.25, label %if.else, !dbg !10240

if.then.25:                                       ; preds = %do.body
  br label %if.end.26, !dbg !10241

if.else:                                          ; preds = %do.body
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10243, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !10245
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10245, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !10246
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10246, !tbaa !4206
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10247, !tbaa !3860
  call void %41(%struct._object* %42), !dbg !10248
  br label %if.end.26

if.end.26:                                        ; preds = %if.else, %if.then.25
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10249
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !10249
  br label %do.cond, !dbg !10251

do.cond:                                          ; preds = %if.end.26
  br label %do.end, !dbg !10252

do.end:                                           ; preds = %do.cond
  %44 = load i32, i32* %result, align 4, !dbg !10254, !tbaa !4372
  %cmp27 = icmp slt i32 %44, 0, !dbg !10256
  br i1 %cmp27, label %if.then.29, label %if.end.30, !dbg !10257

if.then.29:                                       ; preds = %do.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10258

if.end.30:                                        ; preds = %do.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !10260
  br label %cleanup, !dbg !10260

cleanup:                                          ; preds = %if.end.30, %if.then.29, %if.then.20, %if.then.14
  %45 = bitcast %struct.asn1_string_st** %uri to i8*, !dbg !10261
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !10261
  %46 = bitcast %struct.ACCESS_DESCRIPTION_st** %ad to i8*, !dbg !10261
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !10261
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.5

NodeBlock.5:                                      ; preds = %cleanup
  %Pivot.6 = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot.6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.5
  %Pivot = icmp slt i32 %cleanup.dest, 5
  br i1 %Pivot, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %cleanup.dest, 5
  br i1 %SwitchLeaf4, label %for.inc, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %fail, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.5
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !10262

for.inc:                                          ; preds = %LeafBlock.3, %cleanup.cont
  %47 = load i32, i32* %i, align 4, !dbg !10263, !tbaa !4372
  %inc = add i32 %47, 1, !dbg !10263
  store i32 %inc, i32* %i, align 4, !dbg !10263, !tbaa !4372
  br label %for.cond, !dbg !10264

for.end:                                          ; preds = %for.cond
  %48 = load %struct.stack_st_ACCESS_DESCRIPTION*, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10265, !tbaa !3860
  call void @AUTHORITY_INFO_ACCESS_free(%struct.stack_st_ACCESS_DESCRIPTION* %48), !dbg !10266
  %49 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10267, !tbaa !3860
  %call32 = call i64 @PyList_Size(%struct._object* %49), !dbg !10268
  %cmp33 = icmp eq i64 %call32, 0, !dbg !10269
  br i1 %cmp33, label %if.then.35, label %if.else.49, !dbg !10270

if.then.35:                                       ; preds = %for.end
  br label %do.body.36, !dbg !10271

do.body.36:                                       ; preds = %if.then.35
  %50 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !10272
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !10272
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !3122, metadata !3830), !dbg !10274
  %51 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10275, !tbaa !3860
  store %struct._object* %51, %struct._object** %_py_decref_tmp37, align 8, !dbg !10274, !tbaa !3860
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !10276, !tbaa !3860
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !10278
  %53 = load i64, i64* %ob_refcnt38, align 8, !dbg !10279, !tbaa !4101
  %dec39 = add i64 %53, -1, !dbg !10279
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !10279, !tbaa !4101
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !10280
  br i1 %cmp40, label %if.then.42, label %if.else.43, !dbg !10281

if.then.42:                                       ; preds = %do.body.36
  br label %if.end.46, !dbg !10282

if.else.43:                                       ; preds = %do.body.36
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !10284, !tbaa !3860
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !10286
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !10286, !tbaa !4204
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !10287
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !10287, !tbaa !4206
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !10288, !tbaa !3860
  call void %56(%struct._object* %57), !dbg !10289
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  %58 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !10290
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !10290
  br label %do.cond.47, !dbg !10292

do.cond.47:                                       ; preds = %if.end.46
  br label %do.end.48, !dbg !10293

do.end.48:                                        ; preds = %do.cond.47
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10295
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.85, !dbg !10295

if.else.49:                                       ; preds = %for.end
  %59 = bitcast %struct._object** %tup to i8*, !dbg !10296
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !10296
  call void @llvm.dbg.declare(metadata %struct._object** %tup, metadata !3126, metadata !3830), !dbg !10297
  %60 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10298, !tbaa !3860
  %call50 = call %struct._object* @PyList_AsTuple(%struct._object* %60), !dbg !10299
  store %struct._object* %call50, %struct._object** %tup, align 8, !dbg !10300, !tbaa !3860
  br label %do.body.51, !dbg !10301

do.body.51:                                       ; preds = %if.else.49
  %61 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !10302
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !10302
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !3128, metadata !3830), !dbg !10304
  %62 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10305, !tbaa !3860
  store %struct._object* %62, %struct._object** %_py_decref_tmp52, align 8, !dbg !10304, !tbaa !3860
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !10306, !tbaa !3860
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !10308
  %64 = load i64, i64* %ob_refcnt53, align 8, !dbg !10309, !tbaa !4101
  %dec54 = add i64 %64, -1, !dbg !10309
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !10309, !tbaa !4101
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !10310
  br i1 %cmp55, label %if.then.57, label %if.else.58, !dbg !10311

if.then.57:                                       ; preds = %do.body.51
  br label %if.end.61, !dbg !10312

if.else.58:                                       ; preds = %do.body.51
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !10314, !tbaa !3860
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !10316
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !10316, !tbaa !4204
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !10317
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !10317, !tbaa !4206
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !10318, !tbaa !3860
  call void %67(%struct._object* %68), !dbg !10319
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.then.57
  %69 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !10320
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !10320
  br label %do.cond.62, !dbg !10322

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !10323

do.end.63:                                        ; preds = %do.cond.62
  %70 = load %struct._object*, %struct._object** %tup, align 8, !dbg !10325, !tbaa !3860
  store %struct._object* %70, %struct._object** %retval, !dbg !10326
  store i32 1, i32* %cleanup.dest.slot
  %71 = bitcast %struct._object** %tup to i8*, !dbg !10327
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !10327
  br label %cleanup.85

fail:                                             ; preds = %LeafBlock.1, %if.then.5
  %72 = load %struct.stack_st_ACCESS_DESCRIPTION*, %struct.stack_st_ACCESS_DESCRIPTION** %info, align 8, !dbg !10328, !tbaa !3860
  call void @AUTHORITY_INFO_ACCESS_free(%struct.stack_st_ACCESS_DESCRIPTION* %72), !dbg !10329
  br label %do.body.65, !dbg !10330

do.body.65:                                       ; preds = %fail
  %73 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10331
  call void @llvm.lifetime.start(i64 8, i8* %73) #1, !dbg !10331
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !3130, metadata !3830), !dbg !10333
  %74 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10334, !tbaa !3860
  store %struct._object* %74, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10333, !tbaa !3860
  %75 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10335, !tbaa !3860
  %cmp66 = icmp ne %struct._object* %75, null, !dbg !10336
  br i1 %cmp66, label %if.then.68, label %if.end.82, !dbg !10337

if.then.68:                                       ; preds = %do.body.65
  br label %do.body.69, !dbg !10338

do.body.69:                                       ; preds = %if.then.68
  %76 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !10340
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !10340
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp70, metadata !3132, metadata !3830), !dbg !10342
  %77 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10343, !tbaa !3860
  store %struct._object* %77, %struct._object** %_py_decref_tmp70, align 8, !dbg !10342, !tbaa !3860
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !10344, !tbaa !3860
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !10346
  %79 = load i64, i64* %ob_refcnt71, align 8, !dbg !10347, !tbaa !4101
  %dec72 = add i64 %79, -1, !dbg !10347
  store i64 %dec72, i64* %ob_refcnt71, align 8, !dbg !10347, !tbaa !4101
  %cmp73 = icmp ne i64 %dec72, 0, !dbg !10348
  br i1 %cmp73, label %if.then.75, label %if.else.76, !dbg !10349

if.then.75:                                       ; preds = %do.body.69
  br label %if.end.79, !dbg !10350

if.else.76:                                       ; preds = %do.body.69
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !10352, !tbaa !3860
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !10354
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !10354, !tbaa !4204
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !10355
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !10355, !tbaa !4206
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !10356, !tbaa !3860
  call void %82(%struct._object* %83), !dbg !10357
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %84 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !10358
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !10358
  br label %do.cond.80, !dbg !10360

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !10361

do.end.81:                                        ; preds = %do.cond.80
  br label %if.end.82, !dbg !10363

if.end.82:                                        ; preds = %do.end.81, %do.body.65
  %85 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10365
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !10365
  br label %do.cond.83, !dbg !10368

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !10369

do.end.84:                                        ; preds = %do.cond.83
  store %struct._object* null, %struct._object** %retval, !dbg !10371
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.85, !dbg !10371

NewDefault:                                       ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %cleanup.85

cleanup.85:                                       ; preds = %NewDefault, %do.end.84, %do.end.63, %do.end.48, %if.then
  %86 = bitcast %struct.stack_st_ACCESS_DESCRIPTION** %info to i8*, !dbg !10372
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !10372
  %87 = bitcast i32* %result to i8*, !dbg !10372
  call void @llvm.lifetime.end(i64 4, i8* %87) #1, !dbg !10372
  %88 = bitcast i32* %i to i8*, !dbg !10372
  call void @llvm.lifetime.end(i64 4, i8* %88) #1, !dbg !10372
  %89 = bitcast %struct._object** %ostr to i8*, !dbg !10372
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !10372
  %90 = bitcast %struct._object** %lst to i8*, !dbg !10372
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !10372
  %91 = load %struct._object*, %struct._object** %retval, !dbg !10372
  ret %struct._object* %91, !dbg !10372
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_get_crl_dp(%struct.x509_st* %certificate) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %certificate.addr = alloca %struct.x509_st*, align 8
  %dps = alloca %struct.stack_st_DIST_POINT*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %result = alloca i32, align 4
  %lst = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %dp = alloca %struct.DIST_POINT_st*, align 8
  %gns = alloca %struct.stack_st_GENERAL_NAME*, align 8
  %gn = alloca %struct.GENERAL_NAME_st*, align 8
  %uri = alloca %struct.asn1_string_st*, align 8
  %ouri = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %_py_decref_tmp70 = alloca %struct._object*, align 8
  %tup = alloca %struct._object*, align 8
  %_py_decref_tmp85 = alloca %struct._object*, align 8
  store %struct.x509_st* %certificate, %struct.x509_st** %certificate.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.x509_st** %certificate.addr, metadata !3137, metadata !3830), !dbg !10373
  %0 = bitcast %struct.stack_st_DIST_POINT** %dps to i8*, !dbg !10374
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10374
  call void @llvm.dbg.declare(metadata %struct.stack_st_DIST_POINT** %dps, metadata !3138, metadata !3830), !dbg !10375
  %1 = bitcast i32* %i to i8*, !dbg !10376
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !10376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3139, metadata !3830), !dbg !10377
  %2 = bitcast i32* %j to i8*, !dbg !10376
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !10376
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3140, metadata !3830), !dbg !10378
  %3 = bitcast i32* %result to i8*, !dbg !10376
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !10376
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3141, metadata !3830), !dbg !10379
  %4 = bitcast %struct._object** %lst to i8*, !dbg !10380
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10380
  call void @llvm.dbg.declare(metadata %struct._object** %lst, metadata !3142, metadata !3830), !dbg !10381
  %5 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !10382, !tbaa !3860
  %call = call i32 @X509_check_ca(%struct.x509_st* %5), !dbg !10383
  %6 = load %struct.x509_st*, %struct.x509_st** %certificate.addr, align 8, !dbg !10384, !tbaa !3860
  %crldp = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i32 0, i32 16, !dbg !10385
  %7 = load %struct.stack_st_DIST_POINT*, %struct.stack_st_DIST_POINT** %crldp, align 8, !dbg !10385, !tbaa !10386
  store %struct.stack_st_DIST_POINT* %7, %struct.stack_st_DIST_POINT** %dps, align 8, !dbg !10387, !tbaa !3860
  %8 = load %struct.stack_st_DIST_POINT*, %struct.stack_st_DIST_POINT** %dps, align 8, !dbg !10388, !tbaa !3860
  %cmp = icmp eq %struct.stack_st_DIST_POINT* %8, null, !dbg !10390
  br i1 %cmp, label %if.then, label %if.end, !dbg !10391

if.then:                                          ; preds = %entry
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10392
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !10392

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyList_New(i64 0), !dbg !10394
  store %struct._object* %call1, %struct._object** %lst, align 8, !dbg !10396, !tbaa !3860
  %cmp2 = icmp eq %struct._object* %call1, null, !dbg !10397
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !10398

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !10399
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !10399

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !10401, !tbaa !4372
  br label %for.cond, !dbg !10402

for.cond:                                         ; preds = %for.inc.62, %if.end.4
  %9 = load i32, i32* %i, align 4, !dbg !10403, !tbaa !4372
  %10 = load %struct.stack_st_DIST_POINT*, %struct.stack_st_DIST_POINT** %dps, align 8, !dbg !10406, !tbaa !3860
  %11 = bitcast %struct.stack_st_DIST_POINT* %10 to %struct.stack_st*, !dbg !10407
  %call5 = call i32 @sk_num(%struct.stack_st* %11), !dbg !10408
  %cmp6 = icmp slt i32 %9, %call5, !dbg !10409
  br i1 %cmp6, label %for.body, label %for.end.64, !dbg !10410

for.body:                                         ; preds = %for.cond
  %12 = bitcast %struct.DIST_POINT_st** %dp to i8*, !dbg !10411
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !10411
  call void @llvm.dbg.declare(metadata %struct.DIST_POINT_st** %dp, metadata !3143, metadata !3830), !dbg !10412
  %13 = bitcast %struct.stack_st_GENERAL_NAME** %gns to i8*, !dbg !10413
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !10413
  call void @llvm.dbg.declare(metadata %struct.stack_st_GENERAL_NAME** %gns, metadata !3147, metadata !3830), !dbg !10414
  %14 = load %struct.stack_st_DIST_POINT*, %struct.stack_st_DIST_POINT** %dps, align 8, !dbg !10415, !tbaa !3860
  %15 = bitcast %struct.stack_st_DIST_POINT* %14 to %struct.stack_st*, !dbg !10416
  %16 = load i32, i32* %i, align 4, !dbg !10417, !tbaa !4372
  %call7 = call i8* @sk_value(%struct.stack_st* %15, i32 %16), !dbg !10418
  %17 = bitcast i8* %call7 to %struct.DIST_POINT_st*, !dbg !10419
  store %struct.DIST_POINT_st* %17, %struct.DIST_POINT_st** %dp, align 8, !dbg !10420, !tbaa !3860
  %18 = load %struct.DIST_POINT_st*, %struct.DIST_POINT_st** %dp, align 8, !dbg !10421, !tbaa !3860
  %distpoint = getelementptr inbounds %struct.DIST_POINT_st, %struct.DIST_POINT_st* %18, i32 0, i32 0, !dbg !10422
  %19 = load %struct.DIST_POINT_NAME_st*, %struct.DIST_POINT_NAME_st** %distpoint, align 8, !dbg !10422, !tbaa !10423
  %name = getelementptr inbounds %struct.DIST_POINT_NAME_st, %struct.DIST_POINT_NAME_st* %19, i32 0, i32 1, !dbg !10425
  %fullname = bitcast %union.anon.4* %name to %struct.stack_st_GENERAL_NAME**, !dbg !10426
  %20 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %fullname, align 8, !dbg !10426, !tbaa !3860
  store %struct.stack_st_GENERAL_NAME* %20, %struct.stack_st_GENERAL_NAME** %gns, align 8, !dbg !10427, !tbaa !3860
  store i32 0, i32* %j, align 4, !dbg !10428, !tbaa !4372
  br label %for.cond.8, !dbg !10429

for.cond.8:                                       ; preds = %for.inc, %for.body
  %21 = load i32, i32* %j, align 4, !dbg !10430, !tbaa !4372
  %22 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %gns, align 8, !dbg !10433, !tbaa !3860
  %23 = bitcast %struct.stack_st_GENERAL_NAME* %22 to %struct.stack_st*, !dbg !10434
  %call9 = call i32 @sk_num(%struct.stack_st* %23), !dbg !10435
  %cmp10 = icmp slt i32 %21, %call9, !dbg !10436
  br i1 %cmp10, label %for.body.11, label %for.end, !dbg !10437

for.body.11:                                      ; preds = %for.cond.8
  %24 = bitcast %struct.GENERAL_NAME_st** %gn to i8*, !dbg !10438
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !10438
  call void @llvm.dbg.declare(metadata %struct.GENERAL_NAME_st** %gn, metadata !3148, metadata !3830), !dbg !10439
  %25 = bitcast %struct.asn1_string_st** %uri to i8*, !dbg !10440
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !10440
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %uri, metadata !3152, metadata !3830), !dbg !10441
  %26 = bitcast %struct._object** %ouri to i8*, !dbg !10442
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !10442
  call void @llvm.dbg.declare(metadata %struct._object** %ouri, metadata !3153, metadata !3830), !dbg !10443
  %27 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %gns, align 8, !dbg !10444, !tbaa !3860
  %28 = bitcast %struct.stack_st_GENERAL_NAME* %27 to %struct.stack_st*, !dbg !10445
  %29 = load i32, i32* %j, align 4, !dbg !10446, !tbaa !4372
  %call12 = call i8* @sk_value(%struct.stack_st* %28, i32 %29), !dbg !10447
  %30 = bitcast i8* %call12 to %struct.GENERAL_NAME_st*, !dbg !10448
  store %struct.GENERAL_NAME_st* %30, %struct.GENERAL_NAME_st** %gn, align 8, !dbg !10449, !tbaa !3860
  %31 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %gn, align 8, !dbg !10450, !tbaa !3860
  %type = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %31, i32 0, i32 0, !dbg !10452
  %32 = load i32, i32* %type, align 4, !dbg !10452, !tbaa !9667
  %cmp13 = icmp ne i32 %32, 6, !dbg !10453
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !10454

if.then.14:                                       ; preds = %for.body.11
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10455

if.end.15:                                        ; preds = %for.body.11
  %33 = load %struct.GENERAL_NAME_st*, %struct.GENERAL_NAME_st** %gn, align 8, !dbg !10457, !tbaa !3860
  %d = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %33, i32 0, i32 1, !dbg !10458
  %uniformResourceIdentifier = bitcast %union.anon.7* %d to %struct.asn1_string_st**, !dbg !10459
  %34 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uniformResourceIdentifier, align 8, !dbg !10459, !tbaa !3860
  store %struct.asn1_string_st* %34, %struct.asn1_string_st** %uri, align 8, !dbg !10460, !tbaa !3860
  %35 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uri, align 8, !dbg !10461, !tbaa !3860
  %data = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %35, i32 0, i32 2, !dbg !10462
  %36 = load i8*, i8** %data, align 8, !dbg !10462, !tbaa !9618
  %37 = load %struct.asn1_string_st*, %struct.asn1_string_st** %uri, align 8, !dbg !10463, !tbaa !3860
  %length = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %37, i32 0, i32 0, !dbg !10464
  %38 = load i32, i32* %length, align 4, !dbg !10464, !tbaa !9630
  %conv = sext i32 %38 to i64, !dbg !10463
  %call16 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %36, i64 %conv), !dbg !10465
  store %struct._object* %call16, %struct._object** %ouri, align 8, !dbg !10466, !tbaa !3860
  %39 = load %struct._object*, %struct._object** %ouri, align 8, !dbg !10467, !tbaa !3860
  %cmp17 = icmp eq %struct._object* %39, null, !dbg !10468
  br i1 %cmp17, label %if.then.19, label %if.end.24, !dbg !10469

if.then.19:                                       ; preds = %if.end.15
  br label %do.body, !dbg !10470

do.body:                                          ; preds = %if.then.19
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10471
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !10471
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3154, metadata !3830), !dbg !10473
  %41 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10474, !tbaa !3860
  store %struct._object* %41, %struct._object** %_py_decref_tmp, align 8, !dbg !10473, !tbaa !3860
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10475, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !10477
  %43 = load i64, i64* %ob_refcnt, align 8, !dbg !10478, !tbaa !4101
  %dec = add i64 %43, -1, !dbg !10478
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10478, !tbaa !4101
  %cmp20 = icmp ne i64 %dec, 0, !dbg !10479
  br i1 %cmp20, label %if.then.22, label %if.else, !dbg !10480

if.then.22:                                       ; preds = %do.body
  br label %if.end.23, !dbg !10481

if.else:                                          ; preds = %do.body
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10483, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !10485
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10485, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !10486
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10486, !tbaa !4206
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10487, !tbaa !3860
  call void %46(%struct._object* %47), !dbg !10488
  br label %if.end.23

if.end.23:                                        ; preds = %if.else, %if.then.22
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10489
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !10489
  br label %do.cond, !dbg !10491

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !10492

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !10494
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10494

if.end.24:                                        ; preds = %if.end.15
  %49 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10495, !tbaa !3860
  %50 = load %struct._object*, %struct._object** %ouri, align 8, !dbg !10496, !tbaa !3860
  %call25 = call i32 @PyList_Append(%struct._object* %49, %struct._object* %50), !dbg !10497
  store i32 %call25, i32* %result, align 4, !dbg !10498, !tbaa !4372
  br label %do.body.26, !dbg !10499

do.body.26:                                       ; preds = %if.end.24
  %51 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !10500
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !10500
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp27, metadata !3158, metadata !3830), !dbg !10502
  %52 = load %struct._object*, %struct._object** %ouri, align 8, !dbg !10503, !tbaa !3860
  store %struct._object* %52, %struct._object** %_py_decref_tmp27, align 8, !dbg !10502, !tbaa !3860
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !10504, !tbaa !3860
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !10506
  %54 = load i64, i64* %ob_refcnt28, align 8, !dbg !10507, !tbaa !4101
  %dec29 = add i64 %54, -1, !dbg !10507
  store i64 %dec29, i64* %ob_refcnt28, align 8, !dbg !10507, !tbaa !4101
  %cmp30 = icmp ne i64 %dec29, 0, !dbg !10508
  br i1 %cmp30, label %if.then.32, label %if.else.33, !dbg !10509

if.then.32:                                       ; preds = %do.body.26
  br label %if.end.36, !dbg !10510

if.else.33:                                       ; preds = %do.body.26
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !10512, !tbaa !3860
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !10514
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !10514, !tbaa !4204
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !10515
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !10515, !tbaa !4206
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !10516, !tbaa !3860
  call void %57(%struct._object* %58), !dbg !10517
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %59 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !10518
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !10518
  br label %do.cond.37, !dbg !10520

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !10521

do.end.38:                                        ; preds = %do.cond.37
  %60 = load i32, i32* %result, align 4, !dbg !10523, !tbaa !4372
  %cmp39 = icmp slt i32 %60, 0, !dbg !10524
  br i1 %cmp39, label %if.then.41, label %if.end.55, !dbg !10525

if.then.41:                                       ; preds = %do.end.38
  br label %do.body.42, !dbg !10526

do.body.42:                                       ; preds = %if.then.41
  %61 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !10527
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !10527
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !3160, metadata !3830), !dbg !10529
  %62 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10530, !tbaa !3860
  store %struct._object* %62, %struct._object** %_py_decref_tmp43, align 8, !dbg !10529, !tbaa !3860
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !10531, !tbaa !3860
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !10533
  %64 = load i64, i64* %ob_refcnt44, align 8, !dbg !10534, !tbaa !4101
  %dec45 = add i64 %64, -1, !dbg !10534
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !10534, !tbaa !4101
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !10535
  br i1 %cmp46, label %if.then.48, label %if.else.49, !dbg !10536

if.then.48:                                       ; preds = %do.body.42
  br label %if.end.52, !dbg !10537

if.else.49:                                       ; preds = %do.body.42
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !10539, !tbaa !3860
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !10541
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !10541, !tbaa !4204
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !10542
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8, !dbg !10542, !tbaa !4206
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !10543, !tbaa !3860
  call void %67(%struct._object* %68), !dbg !10544
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  %69 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !10545
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !10545
  br label %do.cond.53, !dbg !10547

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !10548

do.end.54:                                        ; preds = %do.cond.53
  store %struct._object* null, %struct._object** %retval, !dbg !10550
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10550

if.end.55:                                        ; preds = %do.end.38
  store i32 0, i32* %cleanup.dest.slot, !dbg !10551
  br label %cleanup, !dbg !10551

cleanup:                                          ; preds = %if.end.55, %do.end.54, %do.end, %if.then.14
  %70 = bitcast %struct._object** %ouri to i8*, !dbg !10552
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !10552
  %71 = bitcast %struct.asn1_string_st** %uri to i8*, !dbg !10552
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !10552
  %72 = bitcast %struct.GENERAL_NAME_st** %gn to i8*, !dbg !10552
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !10552
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 7
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 7
  br i1 %SwitchLeaf2, label %for.inc, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !10553

for.inc:                                          ; preds = %LeafBlock.1, %cleanup.cont
  %73 = load i32, i32* %j, align 4, !dbg !10554, !tbaa !4372
  %inc = add i32 %73, 1, !dbg !10554
  store i32 %inc, i32* %j, align 4, !dbg !10554, !tbaa !4372
  br label %for.cond.8, !dbg !10555

for.end:                                          ; preds = %for.cond.8
  store i32 0, i32* %cleanup.dest.slot, !dbg !10556
  br label %cleanup.58, !dbg !10556

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.58

cleanup.58:                                       ; preds = %NewDefault, %for.end
  %74 = bitcast %struct.stack_st_GENERAL_NAME** %gns to i8*, !dbg !10557
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !10557
  %75 = bitcast %struct.DIST_POINT_st** %dp to i8*, !dbg !10557
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !10557
  %cleanup.dest.60 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.4

LeafBlock.4:                                      ; preds = %cleanup.58
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.60, 0
  br i1 %SwitchLeaf5, label %cleanup.cont.61, label %NewDefault.3

cleanup.cont.61:                                  ; preds = %LeafBlock.4
  br label %for.inc.62, !dbg !10558

for.inc.62:                                       ; preds = %cleanup.cont.61
  %76 = load i32, i32* %i, align 4, !dbg !10559, !tbaa !4372
  %inc63 = add i32 %76, 1, !dbg !10559
  store i32 %inc63, i32* %i, align 4, !dbg !10559, !tbaa !4372
  br label %for.cond, !dbg !10560

for.end.64:                                       ; preds = %for.cond
  %77 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10561, !tbaa !3860
  %call65 = call i64 @PyList_Size(%struct._object* %77), !dbg !10562
  %cmp66 = icmp eq i64 %call65, 0, !dbg !10563
  br i1 %cmp66, label %if.then.68, label %if.else.82, !dbg !10564

if.then.68:                                       ; preds = %for.end.64
  br label %do.body.69, !dbg !10565

do.body.69:                                       ; preds = %if.then.68
  %78 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !10566
  call void @llvm.lifetime.start(i64 8, i8* %78) #1, !dbg !10566
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp70, metadata !3164, metadata !3830), !dbg !10568
  %79 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10569, !tbaa !3860
  store %struct._object* %79, %struct._object** %_py_decref_tmp70, align 8, !dbg !10568, !tbaa !3860
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !10570, !tbaa !3860
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !10572
  %81 = load i64, i64* %ob_refcnt71, align 8, !dbg !10573, !tbaa !4101
  %dec72 = add i64 %81, -1, !dbg !10573
  store i64 %dec72, i64* %ob_refcnt71, align 8, !dbg !10573, !tbaa !4101
  %cmp73 = icmp ne i64 %dec72, 0, !dbg !10574
  br i1 %cmp73, label %if.then.75, label %if.else.76, !dbg !10575

if.then.75:                                       ; preds = %do.body.69
  br label %if.end.79, !dbg !10576

if.else.76:                                       ; preds = %do.body.69
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !10578, !tbaa !3860
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !10580
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !10580, !tbaa !4204
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !10581
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !10581, !tbaa !4206
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !10582, !tbaa !3860
  call void %84(%struct._object* %85), !dbg !10583
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %86 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !10584
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !10584
  br label %do.cond.80, !dbg !10586

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !10587

do.end.81:                                        ; preds = %do.cond.80
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10589
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !10589

if.else.82:                                       ; preds = %for.end.64
  %87 = bitcast %struct._object** %tup to i8*, !dbg !10590
  call void @llvm.lifetime.start(i64 8, i8* %87) #1, !dbg !10590
  call void @llvm.dbg.declare(metadata %struct._object** %tup, metadata !3168, metadata !3830), !dbg !10591
  %88 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10592, !tbaa !3860
  %call83 = call %struct._object* @PyList_AsTuple(%struct._object* %88), !dbg !10593
  store %struct._object* %call83, %struct._object** %tup, align 8, !dbg !10594, !tbaa !3860
  br label %do.body.84, !dbg !10595

do.body.84:                                       ; preds = %if.else.82
  %89 = bitcast %struct._object** %_py_decref_tmp85 to i8*, !dbg !10596
  call void @llvm.lifetime.start(i64 8, i8* %89) #1, !dbg !10596
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp85, metadata !3170, metadata !3830), !dbg !10598
  %90 = load %struct._object*, %struct._object** %lst, align 8, !dbg !10599, !tbaa !3860
  store %struct._object* %90, %struct._object** %_py_decref_tmp85, align 8, !dbg !10598, !tbaa !3860
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !10600, !tbaa !3860
  %ob_refcnt86 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !10602
  %92 = load i64, i64* %ob_refcnt86, align 8, !dbg !10603, !tbaa !4101
  %dec87 = add i64 %92, -1, !dbg !10603
  store i64 %dec87, i64* %ob_refcnt86, align 8, !dbg !10603, !tbaa !4101
  %cmp88 = icmp ne i64 %dec87, 0, !dbg !10604
  br i1 %cmp88, label %if.then.90, label %if.else.91, !dbg !10605

if.then.90:                                       ; preds = %do.body.84
  br label %if.end.94, !dbg !10606

if.else.91:                                       ; preds = %do.body.84
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !10608, !tbaa !3860
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !10610
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8, !dbg !10610, !tbaa !4204
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !10611
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8, !dbg !10611, !tbaa !4206
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !10612, !tbaa !3860
  call void %95(%struct._object* %96), !dbg !10613
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  %97 = bitcast %struct._object** %_py_decref_tmp85 to i8*, !dbg !10614
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !10614
  br label %do.cond.95, !dbg !10616

do.cond.95:                                       ; preds = %if.end.94
  br label %do.end.96, !dbg !10617

do.end.96:                                        ; preds = %do.cond.95
  %98 = load %struct._object*, %struct._object** %tup, align 8, !dbg !10619, !tbaa !3860
  store %struct._object* %98, %struct._object** %retval, !dbg !10620
  store i32 1, i32* %cleanup.dest.slot
  %99 = bitcast %struct._object** %tup to i8*, !dbg !10621
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !10621
  br label %cleanup.98

NewDefault.3:                                     ; preds = %LeafBlock.4
  br label %cleanup.98

cleanup.98:                                       ; preds = %NewDefault.3, %do.end.96, %do.end.81, %if.then.3, %if.then
  %100 = bitcast %struct._object** %lst to i8*, !dbg !10622
  call void @llvm.lifetime.end(i64 8, i8* %100) #1, !dbg !10622
  %101 = bitcast i32* %result to i8*, !dbg !10622
  call void @llvm.lifetime.end(i64 4, i8* %101) #1, !dbg !10622
  %102 = bitcast i32* %j to i8*, !dbg !10622
  call void @llvm.lifetime.end(i64 4, i8* %102) #1, !dbg !10622
  %103 = bitcast i32* %i to i8*, !dbg !10622
  call void @llvm.lifetime.end(i64 4, i8* %103) #1, !dbg !10622
  %104 = bitcast %struct.stack_st_DIST_POINT** %dps to i8*, !dbg !10622
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !10622
  %105 = load %struct._object*, %struct._object** %retval, !dbg !10622
  ret %struct._object* %105, !dbg !10622
}

declare i32 @X509_NAME_entry_count(%struct.X509_name_st*) #3

declare %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st*, i32) #3

declare %struct._object* @PyList_AsTuple(%struct._object*) #3

declare %struct.asn1_object_st* @X509_NAME_ENTRY_get_object(%struct.X509_name_entry_st*) #3

declare %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_create_tuple_for_attribute(%struct.asn1_object_st* %name, %struct.asn1_string_st* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %name.addr = alloca %struct.asn1_object_st*, align 8
  %value.addr = alloca %struct.asn1_string_st*, align 8
  %namebuf = alloca [256 x i8], align 16
  %buflen = alloca i32, align 4
  %name_obj = alloca %struct._object*, align 8
  %value_obj = alloca %struct._object*, align 8
  %attr = alloca %struct._object*, align 8
  %valuebuf = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.asn1_object_st* %name, %struct.asn1_object_st** %name.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.asn1_object_st** %name.addr, metadata !2892, metadata !3830), !dbg !10623
  store %struct.asn1_string_st* %value, %struct.asn1_string_st** %value.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.asn1_string_st** %value.addr, metadata !2893, metadata !3830), !dbg !10624
  %0 = bitcast [256 x i8]* %namebuf to i8*, !dbg !10625
  call void @llvm.lifetime.start(i64 256, i8* %0) #1, !dbg !10625
  call void @llvm.dbg.declare(metadata [256 x i8]* %namebuf, metadata !2894, metadata !3830), !dbg !10626
  %1 = bitcast i32* %buflen to i8*, !dbg !10627
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !10627
  call void @llvm.dbg.declare(metadata i32* %buflen, metadata !2896, metadata !3830), !dbg !10628
  %2 = bitcast %struct._object** %name_obj to i8*, !dbg !10629
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10629
  call void @llvm.dbg.declare(metadata %struct._object** %name_obj, metadata !2897, metadata !3830), !dbg !10630
  %3 = bitcast %struct._object** %value_obj to i8*, !dbg !10631
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10631
  call void @llvm.dbg.declare(metadata %struct._object** %value_obj, metadata !2898, metadata !3830), !dbg !10632
  %4 = bitcast %struct._object** %attr to i8*, !dbg !10633
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10633
  call void @llvm.dbg.declare(metadata %struct._object** %attr, metadata !2899, metadata !3830), !dbg !10634
  %5 = bitcast i8** %valuebuf to i8*, !dbg !10635
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10635
  call void @llvm.dbg.declare(metadata i8** %valuebuf, metadata !2900, metadata !3830), !dbg !10636
  store i8* null, i8** %valuebuf, align 8, !dbg !10636, !tbaa !3860
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %namebuf, i32 0, i32 0, !dbg !10637
  %6 = load %struct.asn1_object_st*, %struct.asn1_object_st** %name.addr, align 8, !dbg !10638, !tbaa !3860
  %call = call i32 @OBJ_obj2txt(i8* %arraydecay, i32 256, %struct.asn1_object_st* %6, i32 0), !dbg !10639
  store i32 %call, i32* %buflen, align 4, !dbg !10640, !tbaa !4372
  %7 = load i32, i32* %buflen, align 4, !dbg !10641, !tbaa !4372
  %cmp = icmp slt i32 %7, 0, !dbg !10643
  br i1 %cmp, label %if.then, label %if.end, !dbg !10644

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 627), !dbg !10645
  br label %fail, !dbg !10647

if.end:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [256 x i8], [256 x i8]* %namebuf, i32 0, i32 0, !dbg !10648
  %8 = load i32, i32* %buflen, align 4, !dbg !10649, !tbaa !4372
  %conv = sext i32 %8 to i64, !dbg !10649
  %call3 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %arraydecay2, i64 %conv), !dbg !10650
  store %struct._object* %call3, %struct._object** %name_obj, align 8, !dbg !10651, !tbaa !3860
  %9 = load %struct._object*, %struct._object** %name_obj, align 8, !dbg !10652, !tbaa !3860
  %cmp4 = icmp eq %struct._object* %9, null, !dbg !10654
  br i1 %cmp4, label %if.then.6, label %if.end.7, !dbg !10655

if.then.6:                                        ; preds = %if.end
  br label %fail, !dbg !10656

if.end.7:                                         ; preds = %if.end
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %value.addr, align 8, !dbg !10657, !tbaa !3860
  %call8 = call i32 @ASN1_STRING_to_UTF8(i8** %valuebuf, %struct.asn1_string_st* %10), !dbg !10658
  store i32 %call8, i32* %buflen, align 4, !dbg !10659, !tbaa !4372
  %11 = load i32, i32* %buflen, align 4, !dbg !10660, !tbaa !4372
  %cmp9 = icmp slt i32 %11, 0, !dbg !10661
  br i1 %cmp9, label %if.then.11, label %if.end.17, !dbg !10662

if.then.11:                                       ; preds = %if.end.7
  %call12 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 636), !dbg !10663
  br label %do.body, !dbg !10664

do.body:                                          ; preds = %if.then.11
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10665
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !10665
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2901, metadata !3830), !dbg !10667
  %13 = load %struct._object*, %struct._object** %name_obj, align 8, !dbg !10668, !tbaa !3860
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !10667, !tbaa !3860
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10669, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !10671
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !10672, !tbaa !4101
  %dec = add i64 %15, -1, !dbg !10672
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10672, !tbaa !4101
  %cmp13 = icmp ne i64 %dec, 0, !dbg !10673
  br i1 %cmp13, label %if.then.15, label %if.else, !dbg !10674

if.then.15:                                       ; preds = %do.body
  br label %if.end.16, !dbg !10675

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10677, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !10679
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10679, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !10680
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10680, !tbaa !4206
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10681, !tbaa !3860
  call void %18(%struct._object* %19), !dbg !10682
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10683
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !10683
  br label %do.cond, !dbg !10685

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !10686

do.end:                                           ; preds = %do.cond
  br label %fail, !dbg !10688

if.end.17:                                        ; preds = %if.end.7
  %21 = load i8*, i8** %valuebuf, align 8, !dbg !10689, !tbaa !3860
  %22 = load i32, i32* %buflen, align 4, !dbg !10690, !tbaa !4372
  %conv18 = sext i32 %22 to i64, !dbg !10690
  %call19 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %21, i64 %conv18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0)), !dbg !10691
  store %struct._object* %call19, %struct._object** %value_obj, align 8, !dbg !10692, !tbaa !3860
  %23 = load i8*, i8** %valuebuf, align 8, !dbg !10693, !tbaa !3860
  call void @CRYPTO_free(i8* %23), !dbg !10694
  %24 = load %struct._object*, %struct._object** %value_obj, align 8, !dbg !10695, !tbaa !3860
  %cmp20 = icmp eq %struct._object* %24, null, !dbg !10696
  br i1 %cmp20, label %if.then.22, label %if.end.36, !dbg !10697

if.then.22:                                       ; preds = %if.end.17
  br label %do.body.23, !dbg !10698

do.body.23:                                       ; preds = %if.then.22
  %25 = bitcast %struct._object** %_py_decref_tmp24 to i8*, !dbg !10699
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !10699
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp24, metadata !2905, metadata !3830), !dbg !10701
  %26 = load %struct._object*, %struct._object** %name_obj, align 8, !dbg !10702, !tbaa !3860
  store %struct._object* %26, %struct._object** %_py_decref_tmp24, align 8, !dbg !10701, !tbaa !3860
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !10703, !tbaa !3860
  %ob_refcnt25 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !10705
  %28 = load i64, i64* %ob_refcnt25, align 8, !dbg !10706, !tbaa !4101
  %dec26 = add i64 %28, -1, !dbg !10706
  store i64 %dec26, i64* %ob_refcnt25, align 8, !dbg !10706, !tbaa !4101
  %cmp27 = icmp ne i64 %dec26, 0, !dbg !10707
  br i1 %cmp27, label %if.then.29, label %if.else.30, !dbg !10708

if.then.29:                                       ; preds = %do.body.23
  br label %if.end.33, !dbg !10709

if.else.30:                                       ; preds = %do.body.23
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !10711, !tbaa !3860
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !10713
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !10713, !tbaa !4204
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !10714
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !10714, !tbaa !4206
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !10715, !tbaa !3860
  call void %31(%struct._object* %32), !dbg !10716
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  %33 = bitcast %struct._object** %_py_decref_tmp24 to i8*, !dbg !10717
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !10717
  br label %do.cond.34, !dbg !10719

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !10720

do.end.35:                                        ; preds = %do.cond.34
  br label %fail, !dbg !10722

if.end.36:                                        ; preds = %if.end.17
  %call37 = call %struct._object* @PyTuple_New(i64 2), !dbg !10723
  store %struct._object* %call37, %struct._object** %attr, align 8, !dbg !10724, !tbaa !3860
  %34 = load %struct._object*, %struct._object** %attr, align 8, !dbg !10725, !tbaa !3860
  %cmp38 = icmp eq %struct._object* %34, null, !dbg !10726
  br i1 %cmp38, label %if.then.40, label %if.end.67, !dbg !10727

if.then.40:                                       ; preds = %if.end.36
  br label %do.body.41, !dbg !10728

do.body.41:                                       ; preds = %if.then.40
  %35 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !10729
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !10729
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !2909, metadata !3830), !dbg !10731
  %36 = load %struct._object*, %struct._object** %name_obj, align 8, !dbg !10732, !tbaa !3860
  store %struct._object* %36, %struct._object** %_py_decref_tmp42, align 8, !dbg !10731, !tbaa !3860
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10733, !tbaa !3860
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !10735
  %38 = load i64, i64* %ob_refcnt43, align 8, !dbg !10736, !tbaa !4101
  %dec44 = add i64 %38, -1, !dbg !10736
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !10736, !tbaa !4101
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !10737
  br i1 %cmp45, label %if.then.47, label %if.else.48, !dbg !10738

if.then.47:                                       ; preds = %do.body.41
  br label %if.end.51, !dbg !10739

if.else.48:                                       ; preds = %do.body.41
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10741, !tbaa !3860
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !10743
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !10743, !tbaa !4204
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !10744
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8, !dbg !10744, !tbaa !4206
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10745, !tbaa !3860
  call void %41(%struct._object* %42), !dbg !10746
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  %43 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !10747
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !10747
  br label %do.cond.52, !dbg !10749

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !10750

do.end.53:                                        ; preds = %do.cond.52
  br label %do.body.54, !dbg !10752

do.body.54:                                       ; preds = %do.end.53
  %44 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !10753
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !10753
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !2913, metadata !3830), !dbg !10755
  %45 = load %struct._object*, %struct._object** %value_obj, align 8, !dbg !10756, !tbaa !3860
  store %struct._object* %45, %struct._object** %_py_decref_tmp55, align 8, !dbg !10755, !tbaa !3860
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !10757, !tbaa !3860
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !10759
  %47 = load i64, i64* %ob_refcnt56, align 8, !dbg !10760, !tbaa !4101
  %dec57 = add i64 %47, -1, !dbg !10760
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !10760, !tbaa !4101
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !10761
  br i1 %cmp58, label %if.then.60, label %if.else.61, !dbg !10762

if.then.60:                                       ; preds = %do.body.54
  br label %if.end.64, !dbg !10763

if.else.61:                                       ; preds = %do.body.54
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !10765, !tbaa !3860
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !10767
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !10767, !tbaa !4204
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !10768
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !10768, !tbaa !4206
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !10769, !tbaa !3860
  call void %50(%struct._object* %51), !dbg !10770
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %52 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !10771
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !10771
  br label %do.cond.65, !dbg !10772

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !10773

do.end.66:                                        ; preds = %do.cond.65
  br label %fail, !dbg !10775

if.end.67:                                        ; preds = %if.end.36
  %53 = load %struct._object*, %struct._object** %name_obj, align 8, !dbg !10776, !tbaa !3860
  %54 = load %struct._object*, %struct._object** %attr, align 8, !dbg !10777, !tbaa !3860
  %55 = bitcast %struct._object* %54 to %struct.PyTupleObject*, !dbg !10778
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %55, i32 0, i32 1, !dbg !10779
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !10780
  store %struct._object* %53, %struct._object** %arrayidx, align 8, !dbg !10781, !tbaa !3860
  %56 = load %struct._object*, %struct._object** %value_obj, align 8, !dbg !10782, !tbaa !3860
  %57 = load %struct._object*, %struct._object** %attr, align 8, !dbg !10783, !tbaa !3860
  %58 = bitcast %struct._object* %57 to %struct.PyTupleObject*, !dbg !10784
  %ob_item68 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %58, i32 0, i32 1, !dbg !10785
  %arrayidx69 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item68, i32 0, i64 1, !dbg !10786
  store %struct._object* %56, %struct._object** %arrayidx69, align 8, !dbg !10787, !tbaa !3860
  %59 = load %struct._object*, %struct._object** %attr, align 8, !dbg !10788, !tbaa !3860
  store %struct._object* %59, %struct._object** %retval, !dbg !10789
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10789

fail:                                             ; preds = %do.end.66, %do.end.35, %do.end, %if.then.6, %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !10790
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10790

cleanup:                                          ; preds = %fail, %if.end.67
  %60 = bitcast i8** %valuebuf to i8*, !dbg !10791
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !10791
  %61 = bitcast %struct._object** %attr to i8*, !dbg !10791
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !10791
  %62 = bitcast %struct._object** %value_obj to i8*, !dbg !10791
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !10791
  %63 = bitcast %struct._object** %name_obj to i8*, !dbg !10791
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !10791
  %64 = bitcast i32* %buflen to i8*, !dbg !10791
  call void @llvm.lifetime.end(i64 4, i8* %64) #1, !dbg !10791
  %65 = bitcast [256 x i8]* %namebuf to i8*, !dbg !10791
  call void @llvm.lifetime.end(i64 256, i8* %65) #1, !dbg !10791
  %66 = load %struct._object*, %struct._object** %retval, !dbg !10791
  ret %struct._object* %66, !dbg !10791
}

declare i32 @OBJ_obj2txt(i8*, i32, %struct.asn1_object_st*, i32) #3

declare i32 @ASN1_STRING_to_UTF8(i8**, %struct.asn1_string_st*) #3

declare %struct._object* @PyUnicode_DecodeUTF8(i8*, i64, i8*) #3

declare %struct._object* @PyTuple_New(i64) #3

declare i32 @X509_get_ext_by_NID(%struct.x509_st*, i32, i32) #3

declare %struct.X509_extension_st* @X509_get_ext(%struct.x509_st*, i32) #3

declare %struct.v3_ext_method* @X509V3_EXT_get(%struct.X509_extension_st*) #3

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) #3

declare i8* @ASN1_STRING_data(%struct.asn1_string_st*) #3

declare i32 @ASN1_STRING_length(%struct.asn1_string_st*) #3

declare i32 @PyErr_WarnFormat(%struct._object*, i64, i8*, ...) #3

declare i32 @GENERAL_NAME_print(%struct.bio_st*, %struct.GENERAL_NAME_st*) #3

; Function Attrs: nounwind
declare i8* @strchr(i8*, i32) #5

declare void @sk_pop_free(%struct.stack_st*, void (i8*)*) #3

declare void @GENERAL_NAME_free(%struct.GENERAL_NAME_st*) #3

declare i8* @X509_get_ext_d2i(%struct.x509_st*, i32, i32*, i32*) #3

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) #3

declare void @AUTHORITY_INFO_ACCESS_free(%struct.stack_st_ACCESS_DESCRIPTION*) #3

declare i64 @PyList_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_check_hostname(%struct.PySSLContext* %self, i8* %c) #0 {
entry:
  %self.addr = alloca %struct.PySSLContext*, align 8
  %c.addr = alloca i8*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3176, metadata !3830), !dbg !10792
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3177, metadata !3830), !dbg !10793
  %0 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10794, !tbaa !3860
  %check_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %0, i32 0, i32 5, !dbg !10795
  %1 = load i32, i32* %check_hostname, align 4, !dbg !10795, !tbaa !4773
  %conv = sext i32 %1 to i64, !dbg !10794
  %call = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !10796
  ret %struct._object* %call, !dbg !10797
}

; Function Attrs: nounwind uwtable
define internal i32 @set_check_hostname(%struct.PySSLContext* %self, %struct._object* %arg, i8* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLContext*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %c.addr = alloca i8*, align 8
  %check_hostname = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3182, metadata !3830), !dbg !10798
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !3183, metadata !3830), !dbg !10799
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3184, metadata !3830), !dbg !10800
  %0 = bitcast i32* %check_hostname to i8*, !dbg !10801
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !10801
  call void @llvm.dbg.declare(metadata i32* %check_hostname, metadata !3185, metadata !3830), !dbg !10802
  %1 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !10803, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_Parse(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.181, i32 0, i32 0), i32* %check_hostname), !dbg !10805
  %tobool = icmp ne i32 %call, 0, !dbg !10805
  br i1 %tobool, label %if.end, label %if.then, !dbg !10806

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !10807
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10807

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %check_hostname, align 4, !dbg !10808, !tbaa !4372
  %tobool1 = icmp ne i32 %2, 0, !dbg !10808
  br i1 %tobool1, label %land.lhs.true, label %if.end.4, !dbg !10810

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10811, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %3, i32 0, i32 1, !dbg !10812
  %4 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !10812, !tbaa !4529
  %call2 = call i32 @SSL_CTX_get_verify_mode(%struct.ssl_ctx_st* %4), !dbg !10813
  %cmp = icmp eq i32 %call2, 0, !dbg !10814
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !10815

if.then.3:                                        ; preds = %land.lhs.true
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10816, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.182, i32 0, i32 0)), !dbg !10818
  store i32 -1, i32* %retval, !dbg !10819
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10819

if.end.4:                                         ; preds = %land.lhs.true, %if.end
  %6 = load i32, i32* %check_hostname, align 4, !dbg !10820, !tbaa !4372
  %7 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10821, !tbaa !3860
  %check_hostname5 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %7, i32 0, i32 5, !dbg !10822
  store i32 %6, i32* %check_hostname5, align 4, !dbg !10823, !tbaa !4773
  store i32 0, i32* %retval, !dbg !10824
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10824

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %8 = bitcast i32* %check_hostname to i8*, !dbg !10825
  call void @llvm.lifetime.end(i64 4, i8* %8) #1, !dbg !10825
  %9 = load i32, i32* %retval, !dbg !10825
  ret i32 %9, !dbg !10825
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_options(%struct.PySSLContext* %self, i8* %c) #0 {
entry:
  %self.addr = alloca %struct.PySSLContext*, align 8
  %c.addr = alloca i8*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3188, metadata !3830), !dbg !10826
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3189, metadata !3830), !dbg !10827
  %0 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10828, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %0, i32 0, i32 1, !dbg !10829
  %1 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !10829, !tbaa !4529
  %call = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %1, i32 32, i64 0, i8* null), !dbg !10830
  %call1 = call %struct._object* @PyLong_FromLong(i64 %call), !dbg !10831
  ret %struct._object* %call1, !dbg !10832
}

; Function Attrs: nounwind uwtable
define internal i32 @set_options(%struct.PySSLContext* %self, %struct._object* %arg, i8* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLContext*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %c.addr = alloca i8*, align 8
  %new_opts = alloca i64, align 8
  %opts = alloca i64, align 8
  %set = alloca i64, align 8
  %clear = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3192, metadata !3830), !dbg !10833
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !3193, metadata !3830), !dbg !10834
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3194, metadata !3830), !dbg !10835
  %0 = bitcast i64* %new_opts to i8*, !dbg !10836
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10836
  call void @llvm.dbg.declare(metadata i64* %new_opts, metadata !3195, metadata !3830), !dbg !10837
  %1 = bitcast i64* %opts to i8*, !dbg !10836
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10836
  call void @llvm.dbg.declare(metadata i64* %opts, metadata !3196, metadata !3830), !dbg !10838
  %2 = bitcast i64* %set to i8*, !dbg !10836
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10836
  call void @llvm.dbg.declare(metadata i64* %set, metadata !3197, metadata !3830), !dbg !10839
  %3 = bitcast i64* %clear to i8*, !dbg !10836
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10836
  call void @llvm.dbg.declare(metadata i64* %clear, metadata !3198, metadata !3830), !dbg !10840
  %4 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !10841, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_Parse(%struct._object* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.183, i32 0, i32 0), i64* %new_opts), !dbg !10843
  %tobool = icmp ne i32 %call, 0, !dbg !10843
  br i1 %tobool, label %if.end, label %if.then, !dbg !10844

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !10845
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10845

if.end:                                           ; preds = %entry
  %5 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10846, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %5, i32 0, i32 1, !dbg !10847
  %6 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !10847, !tbaa !4529
  %call1 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %6, i32 32, i64 0, i8* null), !dbg !10848
  store i64 %call1, i64* %opts, align 8, !dbg !10849, !tbaa !4354
  %7 = load i64, i64* %opts, align 8, !dbg !10850, !tbaa !4354
  %8 = load i64, i64* %new_opts, align 8, !dbg !10851, !tbaa !4354
  %neg = xor i64 %8, -1, !dbg !10852
  %and = and i64 %7, %neg, !dbg !10853
  store i64 %and, i64* %clear, align 8, !dbg !10854, !tbaa !4354
  %9 = load i64, i64* %opts, align 8, !dbg !10855, !tbaa !4354
  %neg2 = xor i64 %9, -1, !dbg !10856
  %10 = load i64, i64* %new_opts, align 8, !dbg !10857, !tbaa !4354
  %and3 = and i64 %neg2, %10, !dbg !10858
  store i64 %and3, i64* %set, align 8, !dbg !10859, !tbaa !4354
  %11 = load i64, i64* %clear, align 8, !dbg !10860, !tbaa !4354
  %tobool4 = icmp ne i64 %11, 0, !dbg !10860
  br i1 %tobool4, label %if.then.5, label %if.end.8, !dbg !10862

if.then.5:                                        ; preds = %if.end
  %12 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10863, !tbaa !3860
  %ctx6 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %12, i32 0, i32 1, !dbg !10865
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx6, align 8, !dbg !10865, !tbaa !4529
  %14 = load i64, i64* %clear, align 8, !dbg !10866, !tbaa !4354
  %call7 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %13, i32 77, i64 %14, i8* null), !dbg !10867
  br label %if.end.8, !dbg !10868

if.end.8:                                         ; preds = %if.then.5, %if.end
  %15 = load i64, i64* %set, align 8, !dbg !10869, !tbaa !4354
  %tobool9 = icmp ne i64 %15, 0, !dbg !10869
  br i1 %tobool9, label %if.then.10, label %if.end.13, !dbg !10871

if.then.10:                                       ; preds = %if.end.8
  %16 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10872, !tbaa !3860
  %ctx11 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %16, i32 0, i32 1, !dbg !10873
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx11, align 8, !dbg !10873, !tbaa !4529
  %18 = load i64, i64* %set, align 8, !dbg !10874, !tbaa !4354
  %call12 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %17, i32 32, i64 %18, i8* null), !dbg !10875
  br label %if.end.13, !dbg !10875

if.end.13:                                        ; preds = %if.then.10, %if.end.8
  store i32 0, i32* %retval, !dbg !10876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10876

cleanup:                                          ; preds = %if.end.13, %if.then
  %19 = bitcast i64* %clear to i8*, !dbg !10877
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !10877
  %20 = bitcast i64* %set to i8*, !dbg !10877
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !10877
  %21 = bitcast i64* %opts to i8*, !dbg !10877
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !10877
  %22 = bitcast i64* %new_opts to i8*, !dbg !10877
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !10877
  %23 = load i32, i32* %retval, !dbg !10877
  ret i32 %23, !dbg !10877
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_verify_flags(%struct.PySSLContext* %self, i8* %c) #0 {
entry:
  %self.addr = alloca %struct.PySSLContext*, align 8
  %c.addr = alloca i8*, align 8
  %store = alloca %struct.x509_store_st*, align 8
  %flags = alloca i64, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3201, metadata !3830), !dbg !10878
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3202, metadata !3830), !dbg !10879
  %0 = bitcast %struct.x509_store_st** %store to i8*, !dbg !10880
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10880
  call void @llvm.dbg.declare(metadata %struct.x509_store_st** %store, metadata !3203, metadata !3830), !dbg !10881
  %1 = bitcast i64* %flags to i8*, !dbg !10882
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10882
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3204, metadata !3830), !dbg !10883
  %2 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10884, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %2, i32 0, i32 1, !dbg !10885
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !10885, !tbaa !4529
  %call = call %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* %3), !dbg !10886
  store %struct.x509_store_st* %call, %struct.x509_store_st** %store, align 8, !dbg !10887, !tbaa !3860
  %4 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !10888, !tbaa !3860
  %param = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %4, i32 0, i32 3, !dbg !10889
  %5 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %param, align 8, !dbg !10889, !tbaa !10890
  %call1 = call i64 @X509_VERIFY_PARAM_get_flags(%struct.X509_VERIFY_PARAM_st* %5), !dbg !10891
  store i64 %call1, i64* %flags, align 8, !dbg !10892, !tbaa !4354
  %6 = load i64, i64* %flags, align 8, !dbg !10893, !tbaa !4354
  %call2 = call %struct._object* @PyLong_FromUnsignedLong(i64 %6), !dbg !10894
  %7 = bitcast i64* %flags to i8*, !dbg !10895
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !10895
  %8 = bitcast %struct.x509_store_st** %store to i8*, !dbg !10895
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !10895
  ret %struct._object* %call2, !dbg !10896
}

; Function Attrs: nounwind uwtable
define internal i32 @set_verify_flags(%struct.PySSLContext* %self, %struct._object* %arg, i8* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLContext*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %c.addr = alloca i8*, align 8
  %store = alloca %struct.x509_store_st*, align 8
  %new_flags = alloca i64, align 8
  %flags = alloca i64, align 8
  %set = alloca i64, align 8
  %clear = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3207, metadata !3830), !dbg !10897
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !3208, metadata !3830), !dbg !10898
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3209, metadata !3830), !dbg !10899
  %0 = bitcast %struct.x509_store_st** %store to i8*, !dbg !10900
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10900
  call void @llvm.dbg.declare(metadata %struct.x509_store_st** %store, metadata !3210, metadata !3830), !dbg !10901
  %1 = bitcast i64* %new_flags to i8*, !dbg !10902
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10902
  call void @llvm.dbg.declare(metadata i64* %new_flags, metadata !3211, metadata !3830), !dbg !10903
  %2 = bitcast i64* %flags to i8*, !dbg !10902
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10902
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3212, metadata !3830), !dbg !10904
  %3 = bitcast i64* %set to i8*, !dbg !10902
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10902
  call void @llvm.dbg.declare(metadata i64* %set, metadata !3213, metadata !3830), !dbg !10905
  %4 = bitcast i64* %clear to i8*, !dbg !10902
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10902
  call void @llvm.dbg.declare(metadata i64* %clear, metadata !3214, metadata !3830), !dbg !10906
  %5 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !10907, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_Parse(%struct._object* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.184, i32 0, i32 0), i64* %new_flags), !dbg !10909
  %tobool = icmp ne i32 %call, 0, !dbg !10909
  br i1 %tobool, label %if.end, label %if.then, !dbg !10910

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !10911
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10911

if.end:                                           ; preds = %entry
  %6 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10912, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %6, i32 0, i32 1, !dbg !10913
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !10913, !tbaa !4529
  %call1 = call %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* %7), !dbg !10914
  store %struct.x509_store_st* %call1, %struct.x509_store_st** %store, align 8, !dbg !10915, !tbaa !3860
  %8 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !10916, !tbaa !3860
  %param = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %8, i32 0, i32 3, !dbg !10917
  %9 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %param, align 8, !dbg !10917, !tbaa !10890
  %call2 = call i64 @X509_VERIFY_PARAM_get_flags(%struct.X509_VERIFY_PARAM_st* %9), !dbg !10918
  store i64 %call2, i64* %flags, align 8, !dbg !10919, !tbaa !4354
  %10 = load i64, i64* %flags, align 8, !dbg !10920, !tbaa !4354
  %11 = load i64, i64* %new_flags, align 8, !dbg !10921, !tbaa !4354
  %neg = xor i64 %11, -1, !dbg !10922
  %and = and i64 %10, %neg, !dbg !10923
  store i64 %and, i64* %clear, align 8, !dbg !10924, !tbaa !4354
  %12 = load i64, i64* %flags, align 8, !dbg !10925, !tbaa !4354
  %neg3 = xor i64 %12, -1, !dbg !10926
  %13 = load i64, i64* %new_flags, align 8, !dbg !10927, !tbaa !4354
  %and4 = and i64 %neg3, %13, !dbg !10928
  store i64 %and4, i64* %set, align 8, !dbg !10929, !tbaa !4354
  %14 = load i64, i64* %clear, align 8, !dbg !10930, !tbaa !4354
  %tobool5 = icmp ne i64 %14, 0, !dbg !10930
  br i1 %tobool5, label %if.then.6, label %if.end.13, !dbg !10932

if.then.6:                                        ; preds = %if.end
  %15 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !10933, !tbaa !3860
  %param7 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %15, i32 0, i32 3, !dbg !10936
  %16 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %param7, align 8, !dbg !10936, !tbaa !10890
  %17 = load i64, i64* %clear, align 8, !dbg !10937, !tbaa !4354
  %call8 = call i32 @X509_VERIFY_PARAM_clear_flags(%struct.X509_VERIFY_PARAM_st* %16, i64 %17), !dbg !10938
  %tobool9 = icmp ne i32 %call8, 0, !dbg !10938
  br i1 %tobool9, label %if.end.12, label %if.then.10, !dbg !10939

if.then.10:                                       ; preds = %if.then.6
  %call11 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2289), !dbg !10940
  store i32 -1, i32* %retval, !dbg !10942
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10942

if.end.12:                                        ; preds = %if.then.6
  br label %if.end.13, !dbg !10943

if.end.13:                                        ; preds = %if.end.12, %if.end
  %18 = load i64, i64* %set, align 8, !dbg !10944, !tbaa !4354
  %tobool14 = icmp ne i64 %18, 0, !dbg !10944
  br i1 %tobool14, label %if.then.15, label %if.end.22, !dbg !10946

if.then.15:                                       ; preds = %if.end.13
  %19 = load %struct.x509_store_st*, %struct.x509_store_st** %store, align 8, !dbg !10947, !tbaa !3860
  %param16 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %19, i32 0, i32 3, !dbg !10950
  %20 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %param16, align 8, !dbg !10950, !tbaa !10890
  %21 = load i64, i64* %set, align 8, !dbg !10951, !tbaa !4354
  %call17 = call i32 @X509_VERIFY_PARAM_set_flags(%struct.X509_VERIFY_PARAM_st* %20, i64 %21), !dbg !10952
  %tobool18 = icmp ne i32 %call17, 0, !dbg !10952
  br i1 %tobool18, label %if.end.21, label %if.then.19, !dbg !10953

if.then.19:                                       ; preds = %if.then.15
  %call20 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 2295), !dbg !10954
  store i32 -1, i32* %retval, !dbg !10956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10956

if.end.21:                                        ; preds = %if.then.15
  br label %if.end.22, !dbg !10957

if.end.22:                                        ; preds = %if.end.21, %if.end.13
  store i32 0, i32* %retval, !dbg !10958
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10958

cleanup:                                          ; preds = %if.end.22, %if.then.19, %if.then.10, %if.then
  %22 = bitcast i64* %clear to i8*, !dbg !10959
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !10959
  %23 = bitcast i64* %set to i8*, !dbg !10959
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !10959
  %24 = bitcast i64* %flags to i8*, !dbg !10959
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !10959
  %25 = bitcast i64* %new_flags to i8*, !dbg !10959
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !10959
  %26 = bitcast %struct.x509_store_st** %store to i8*, !dbg !10959
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !10959
  %27 = load i32, i32* %retval, !dbg !10959
  ret i32 %27, !dbg !10959
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_verify_mode(%struct.PySSLContext* %self, i8* %c) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLContext*, align 8
  %c.addr = alloca i8*, align 8
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3217, metadata !3830), !dbg !10960
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3218, metadata !3830), !dbg !10961
  %0 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !10962, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %0, i32 0, i32 1, !dbg !10963
  %1 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !10963, !tbaa !4529
  %call = call i32 @SSL_CTX_get_verify_mode(%struct.ssl_ctx_st* %1), !dbg !10964
  br label %NodeBlock.5

NodeBlock.5:                                      ; preds = %entry
  %Pivot.6 = icmp slt i32 %call, 1
  br i1 %Pivot.6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.5
  %Pivot = icmp slt i32 %call, 3
  br i1 %Pivot, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %call, 3
  br i1 %SwitchLeaf4, label %sw.bb.4, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %call, 1
  br i1 %SwitchLeaf2, label %sw.bb.2, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.5
  %SwitchLeaf = icmp eq i32 %call, 0
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %call1 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !10965
  store %struct._object* %call1, %struct._object** %retval, !dbg !10967
  br label %return, !dbg !10967

sw.bb.2:                                          ; preds = %LeafBlock.1
  %call3 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !10968
  store %struct._object* %call3, %struct._object** %retval, !dbg !10969
  br label %return, !dbg !10969

sw.bb.4:                                          ; preds = %LeafBlock.3
  %call5 = call %struct._object* @PyLong_FromLong(i64 2), !dbg !10970
  store %struct._object* %call5, %struct._object** %retval, !dbg !10971
  br label %return, !dbg !10971

NewDefault:                                       ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault
  %2 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !10972, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.185, i32 0, i32 0)), !dbg !10973
  store %struct._object* null, %struct._object** %retval, !dbg !10974
  br label %return, !dbg !10974

return:                                           ; preds = %sw.epilog, %sw.bb.4, %sw.bb.2, %sw.bb
  %3 = load %struct._object*, %struct._object** %retval, !dbg !10975
  ret %struct._object* %3, !dbg !10975
}

; Function Attrs: nounwind uwtable
define internal i32 @set_verify_mode(%struct.PySSLContext* %self, %struct._object* %arg, i8* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLContext*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %c.addr = alloca i8*, align 8
  %n = alloca i32, align 4
  %mode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLContext* %self, %struct.PySSLContext** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLContext** %self.addr, metadata !3221, metadata !3830), !dbg !10976
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !3222, metadata !3830), !dbg !10977
  store i8* %c, i8** %c.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !3223, metadata !3830), !dbg !10978
  %0 = bitcast i32* %n to i8*, !dbg !10979
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !10979
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3224, metadata !3830), !dbg !10980
  %1 = bitcast i32* %mode to i8*, !dbg !10979
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !10979
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !3225, metadata !3830), !dbg !10981
  %2 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !10982, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_Parse(%struct._object* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.186, i32 0, i32 0), i32* %n), !dbg !10984
  %tobool = icmp ne i32 %call, 0, !dbg !10984
  br i1 %tobool, label %if.end, label %if.then, !dbg !10985

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !10986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10986

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %n, align 4, !dbg !10987, !tbaa !4372
  %cmp = icmp eq i32 %3, 0, !dbg !10989
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !10990

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %mode, align 4, !dbg !10991, !tbaa !4372
  br label %if.end.10, !dbg !10992

if.else:                                          ; preds = %if.end
  %4 = load i32, i32* %n, align 4, !dbg !10993, !tbaa !4372
  %cmp2 = icmp eq i32 %4, 1, !dbg !10995
  br i1 %cmp2, label %if.then.3, label %if.else.4, !dbg !10996

if.then.3:                                        ; preds = %if.else
  store i32 1, i32* %mode, align 4, !dbg !10997, !tbaa !4372
  br label %if.end.9, !dbg !10998

if.else.4:                                        ; preds = %if.else
  %5 = load i32, i32* %n, align 4, !dbg !10999, !tbaa !4372
  %cmp5 = icmp eq i32 %5, 2, !dbg !11001
  br i1 %cmp5, label %if.then.6, label %if.else.7, !dbg !11002

if.then.6:                                        ; preds = %if.else.4
  store i32 3, i32* %mode, align 4, !dbg !11003, !tbaa !4372
  br label %if.end.8, !dbg !11004

if.else.7:                                        ; preds = %if.else.4
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11005, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.187, i32 0, i32 0)), !dbg !11007
  store i32 -1, i32* %retval, !dbg !11008
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11008

if.end.8:                                         ; preds = %if.then.6
  br label %if.end.9

if.end.9:                                         ; preds = %if.end.8, %if.then.3
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.1
  %7 = load i32, i32* %mode, align 4, !dbg !11009, !tbaa !4372
  %cmp11 = icmp eq i32 %7, 0, !dbg !11011
  br i1 %cmp11, label %land.lhs.true, label %if.end.14, !dbg !11012

land.lhs.true:                                    ; preds = %if.end.10
  %8 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !11013, !tbaa !3860
  %check_hostname = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %8, i32 0, i32 5, !dbg !11015
  %9 = load i32, i32* %check_hostname, align 4, !dbg !11015, !tbaa !4773
  %tobool12 = icmp ne i32 %9, 0, !dbg !11016
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !11017

if.then.13:                                       ; preds = %land.lhs.true
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11018, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.188, i32 0, i32 0)), !dbg !11020
  store i32 -1, i32* %retval, !dbg !11021
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11021

if.end.14:                                        ; preds = %land.lhs.true, %if.end.10
  %11 = load %struct.PySSLContext*, %struct.PySSLContext** %self.addr, align 8, !dbg !11022, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %11, i32 0, i32 1, !dbg !11023
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !11023, !tbaa !4529
  %13 = load i32, i32* %mode, align 4, !dbg !11024, !tbaa !4372
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* %12, i32 %13, i32 (i32, %struct.x509_store_ctx_st*)* null), !dbg !11025
  store i32 0, i32* %retval, !dbg !11026
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11026

cleanup:                                          ; preds = %if.end.14, %if.then.13, %if.else.7, %if.then
  %14 = bitcast i32* %mode to i8*, !dbg !11027
  call void @llvm.lifetime.end(i64 4, i8* %14) #1, !dbg !11027
  %15 = bitcast i32* %n to i8*, !dbg !11027
  call void @llvm.lifetime.end(i64 4, i8* %15) #1, !dbg !11027
  %16 = load i32, i32* %retval, !dbg !11027
  ret i32 %16, !dbg !11027
}

declare %struct._object* @PyBool_FromLong(i64) #3

declare i32 @PyArg_Parse(%struct._object*, i8*, ...) #3

declare i32 @SSL_CTX_get_verify_mode(%struct.ssl_ctx_st*) #3

declare i64 @X509_VERIFY_PARAM_get_flags(%struct.X509_VERIFY_PARAM_st*) #3

declare i32 @X509_VERIFY_PARAM_clear_flags(%struct.X509_VERIFY_PARAM_st*, i64) #3

declare i32 @X509_VERIFY_PARAM_set_flags(%struct.X509_VERIFY_PARAM_st*, i64) #3

declare void @SSL_CTX_set_verify(%struct.ssl_ctx_st*, i32, i32 (i32, %struct.x509_store_ctx_st*)*) #3

declare %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st*) #3

declare %struct.ssl_method_st* @TLSv1_method() #3

declare %struct.ssl_method_st* @TLSv1_1_method() #3

declare %struct.ssl_method_st* @TLSv1_2_method() #3

declare %struct.ssl_method_st* @SSLv3_method() #3

declare %struct.ssl_method_st* @SSLv2_method() #3

declare %struct.ssl_method_st* @SSLv23_method() #3

declare i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @PySSL_dealloc(%struct.PySSLSocket* %self) #0 {
entry:
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3244, metadata !3830), !dbg !11028
  %0 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11029, !tbaa !3860
  %peer_cert = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %0, i32 0, i32 4, !dbg !11031
  %1 = load %struct.x509_st*, %struct.x509_st** %peer_cert, align 8, !dbg !11031, !tbaa !6950
  %tobool = icmp ne %struct.x509_st* %1, null, !dbg !11029
  br i1 %tobool, label %if.then, label %if.end, !dbg !11032

if.then:                                          ; preds = %entry
  %2 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11033, !tbaa !3860
  %peer_cert1 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %2, i32 0, i32 4, !dbg !11034
  %3 = load %struct.x509_st*, %struct.x509_st** %peer_cert1, align 8, !dbg !11034, !tbaa !6950
  call void @X509_free(%struct.x509_st* %3), !dbg !11035
  br label %if.end, !dbg !11035

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11036, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %4, i32 0, i32 2, !dbg !11038
  %5 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !11038, !tbaa !6955
  %tobool2 = icmp ne %struct.ssl_st* %5, null, !dbg !11036
  br i1 %tobool2, label %if.then.3, label %if.end.5, !dbg !11039

if.then.3:                                        ; preds = %if.end
  %6 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11040, !tbaa !3860
  %ssl4 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %6, i32 0, i32 2, !dbg !11041
  %7 = load %struct.ssl_st*, %struct.ssl_st** %ssl4, align 8, !dbg !11041, !tbaa !6955
  call void @SSL_free(%struct.ssl_st* %7), !dbg !11042
  br label %if.end.5, !dbg !11042

if.end.5:                                         ; preds = %if.then.3, %if.end
  br label %do.body, !dbg !11043

do.body:                                          ; preds = %if.end.5
  %8 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11044
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !11044
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !3245, metadata !3830), !dbg !11046
  %9 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11047, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %9, i32 0, i32 1, !dbg !11048
  %10 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !11048, !tbaa !6959
  store %struct._object* %10, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11046, !tbaa !3860
  %11 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11049, !tbaa !3860
  %cmp = icmp ne %struct._object* %11, null, !dbg !11050
  br i1 %cmp, label %if.then.6, label %if.end.11, !dbg !11051

if.then.6:                                        ; preds = %do.body
  br label %do.body.7, !dbg !11052

do.body.7:                                        ; preds = %if.then.6
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11054
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !11054
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3247, metadata !3830), !dbg !11056
  %13 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11057, !tbaa !3860
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !11056, !tbaa !3860
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11058, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !11060
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !11061, !tbaa !4101
  %dec = add i64 %15, -1, !dbg !11061
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11061, !tbaa !4101
  %cmp8 = icmp ne i64 %dec, 0, !dbg !11062
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !11063

if.then.9:                                        ; preds = %do.body.7
  br label %if.end.10, !dbg !11064

if.else:                                          ; preds = %do.body.7
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11066, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !11068
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11068, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !11069
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11069, !tbaa !4206
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11070, !tbaa !3860
  call void %18(%struct._object* %19), !dbg !11071
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11072
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !11072
  br label %do.cond, !dbg !11074

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !11075

do.end:                                           ; preds = %do.cond
  br label %if.end.11, !dbg !11077

if.end.11:                                        ; preds = %do.end, %do.body
  %21 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11079
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !11079
  br label %do.end.13, !dbg !11082

do.end.13:                                        ; preds = %if.end.11
  br label %do.body.14, !dbg !11083

do.body.14:                                       ; preds = %do.end.13
  %22 = bitcast %struct._object** %_py_xdecref_tmp15 to i8*, !dbg !11084
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !11084
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp15, metadata !3250, metadata !3830), !dbg !11086
  %23 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11087, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %23, i32 0, i32 3, !dbg !11088
  %24 = load %struct.PySSLContext*, %struct.PySSLContext** %ctx, align 8, !dbg !11088, !tbaa !6964
  %25 = bitcast %struct.PySSLContext* %24 to %struct._object*, !dbg !11089
  store %struct._object* %25, %struct._object** %_py_xdecref_tmp15, align 8, !dbg !11086, !tbaa !3860
  %26 = load %struct._object*, %struct._object** %_py_xdecref_tmp15, align 8, !dbg !11090, !tbaa !3860
  %cmp16 = icmp ne %struct._object* %26, null, !dbg !11091
  br i1 %cmp16, label %if.then.17, label %if.end.30, !dbg !11092

if.then.17:                                       ; preds = %do.body.14
  br label %do.body.18, !dbg !11093

do.body.18:                                       ; preds = %if.then.17
  %27 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !11095
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !11095
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp19, metadata !3252, metadata !3830), !dbg !11097
  %28 = load %struct._object*, %struct._object** %_py_xdecref_tmp15, align 8, !dbg !11098, !tbaa !3860
  store %struct._object* %28, %struct._object** %_py_decref_tmp19, align 8, !dbg !11097, !tbaa !3860
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !11099, !tbaa !3860
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !11101
  %30 = load i64, i64* %ob_refcnt20, align 8, !dbg !11102, !tbaa !4101
  %dec21 = add i64 %30, -1, !dbg !11102
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !11102, !tbaa !4101
  %cmp22 = icmp ne i64 %dec21, 0, !dbg !11103
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !11104

if.then.23:                                       ; preds = %do.body.18
  br label %if.end.27, !dbg !11105

if.else.24:                                       ; preds = %do.body.18
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !11107, !tbaa !3860
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !11109
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !11109, !tbaa !4204
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !11110
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !11110, !tbaa !4206
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !11111, !tbaa !3860
  call void %33(%struct._object* %34), !dbg !11112
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %35 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !11113
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !11113
  br label %do.cond.28, !dbg !11115

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !11116

do.end.29:                                        ; preds = %do.cond.28
  br label %if.end.30, !dbg !11118

if.end.30:                                        ; preds = %do.end.29, %do.body.14
  %36 = bitcast %struct._object** %_py_xdecref_tmp15 to i8*, !dbg !11120
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !11120
  br label %do.end.32, !dbg !11121

do.end.32:                                        ; preds = %if.end.30
  %37 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11122, !tbaa !3860
  %38 = bitcast %struct.PySSLSocket* %37 to i8*, !dbg !11122
  call void @PyObject_Free(i8* %38), !dbg !11123
  ret void, !dbg !11124
}

declare void @SSL_free(%struct.ssl_st*) #3

declare void @PyObject_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_SSLdo_handshake(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %ret = alloca i32, align 4
  %err = alloca i32, align 4
  %sockstate = alloca i32, align 4
  %nonblocking = alloca i32, align 4
  %sock = alloca %struct.PySocketSockObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_save84 = alloca %struct._ts*, align 8
  %_py_decref_tmp105 = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3259, metadata !3830), !dbg !11125
  %0 = bitcast i32* %ret to i8*, !dbg !11126
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !11126
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3260, metadata !3830), !dbg !11127
  %1 = bitcast i32* %err to i8*, !dbg !11128
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !11128
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3261, metadata !3830), !dbg !11129
  %2 = bitcast i32* %sockstate to i8*, !dbg !11130
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !11130
  call void @llvm.dbg.declare(metadata i32* %sockstate, metadata !3262, metadata !3830), !dbg !11131
  %3 = bitcast i32* %nonblocking to i8*, !dbg !11130
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !11130
  call void @llvm.dbg.declare(metadata i32* %nonblocking, metadata !3263, metadata !3830), !dbg !11132
  %4 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !11133
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !11133
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %sock, metadata !3264, metadata !3830), !dbg !11134
  %5 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11135, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %5, i32 0, i32 1, !dbg !11136
  %6 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !11136, !tbaa !6959
  %call = call %struct._object* @PyWeakref_GetObject(%struct._object* %6), !dbg !11137
  %7 = bitcast %struct._object* %call to %struct.PySocketSockObject*, !dbg !11138
  store %struct.PySocketSockObject* %7, %struct.PySocketSockObject** %sock, align 8, !dbg !11134, !tbaa !3860
  %8 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11139, !tbaa !3860
  %9 = bitcast %struct.PySocketSockObject* %8 to %struct._object*, !dbg !11141
  %cmp = icmp eq %struct._object* %9, @_Py_NoneStruct, !dbg !11142
  br i1 %cmp, label %if.then, label %if.end, !dbg !11143

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @_setSSLError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.205, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 554), !dbg !11144
  store %struct._object* null, %struct._object** %retval, !dbg !11146
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11146

if.end:                                           ; preds = %entry
  %10 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11147, !tbaa !3860
  %11 = bitcast %struct.PySocketSockObject* %10 to %struct._object*, !dbg !11148
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !11149
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !11150, !tbaa !4101
  %inc = add i64 %12, 1, !dbg !11150
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11150, !tbaa !4101
  %13 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11151, !tbaa !3860
  %sock_timeout = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %13, i32 0, i32 6, !dbg !11152
  %14 = load double, double* %sock_timeout, align 8, !dbg !11152, !tbaa !7052
  %cmp2 = fcmp oge double %14, 0.000000e+00, !dbg !11153
  %conv = zext i1 %cmp2 to i32, !dbg !11153
  store i32 %conv, i32* %nonblocking, align 4, !dbg !11154, !tbaa !4372
  %15 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11155, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %15, i32 0, i32 2, !dbg !11156
  %16 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !11156, !tbaa !6955
  %call3 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %16), !dbg !11157
  %17 = load i32, i32* %nonblocking, align 4, !dbg !11158, !tbaa !4372
  %conv4 = sext i32 %17 to i64, !dbg !11159
  %call5 = call i64 @BIO_ctrl(%struct.bio_st* %call3, i32 102, i64 %conv4, i8* null), !dbg !11160
  %18 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11161, !tbaa !3860
  %ssl6 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %18, i32 0, i32 2, !dbg !11162
  %19 = load %struct.ssl_st*, %struct.ssl_st** %ssl6, align 8, !dbg !11162, !tbaa !6955
  %call7 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %19), !dbg !11163
  %20 = load i32, i32* %nonblocking, align 4, !dbg !11164, !tbaa !4372
  %conv8 = sext i32 %20 to i64, !dbg !11165
  %call9 = call i64 @BIO_ctrl(%struct.bio_st* %call7, i32 102, i64 %conv8, i8* null), !dbg !11166
  br label %do.body, !dbg !11167

do.body:                                          ; preds = %lor.end, %if.end
  %21 = bitcast %struct._ts** %_save to i8*, !dbg !11168
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !11168
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3265, metadata !3830), !dbg !11169
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !11169, !tbaa !3860
  br label %do.body.10, !dbg !11170

do.body.10:                                       ; preds = %do.body
  %22 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11171, !tbaa !4372
  %cmp11 = icmp ugt i32 %22, 0, !dbg !11175
  br i1 %cmp11, label %if.then.13, label %if.end.15, !dbg !11176

if.then.13:                                       ; preds = %do.body.10
  %call14 = call %struct._ts* @PyEval_SaveThread(), !dbg !11177
  store %struct._ts* %call14, %struct._ts** %_save, align 8, !dbg !11180, !tbaa !3860
  br label %if.end.15, !dbg !11181

if.end.15:                                        ; preds = %if.then.13, %do.body.10
  br label %do.cond, !dbg !11182

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !11185

do.end:                                           ; preds = %do.cond
  %23 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11187, !tbaa !3860
  %ssl16 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %23, i32 0, i32 2, !dbg !11188
  %24 = load %struct.ssl_st*, %struct.ssl_st** %ssl16, align 8, !dbg !11188, !tbaa !6955
  %call17 = call i32 @SSL_do_handshake(%struct.ssl_st* %24), !dbg !11189
  store i32 %call17, i32* %ret, align 4, !dbg !11190, !tbaa !4372
  %25 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11191, !tbaa !3860
  %ssl18 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %25, i32 0, i32 2, !dbg !11192
  %26 = load %struct.ssl_st*, %struct.ssl_st** %ssl18, align 8, !dbg !11192, !tbaa !6955
  %27 = load i32, i32* %ret, align 4, !dbg !11193, !tbaa !4372
  %call19 = call i32 @SSL_get_error(%struct.ssl_st* %26, i32 %27), !dbg !11194
  store i32 %call19, i32* %err, align 4, !dbg !11195, !tbaa !4372
  br label %do.body.20, !dbg !11196

do.body.20:                                       ; preds = %do.end
  %28 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11197, !tbaa !4372
  %cmp21 = icmp ugt i32 %28, 0, !dbg !11201
  br i1 %cmp21, label %if.then.23, label %if.end.24, !dbg !11202

if.then.23:                                       ; preds = %do.body.20
  %29 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !11203, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %29), !dbg !11206
  br label %if.end.24, !dbg !11207

if.end.24:                                        ; preds = %if.then.23, %do.body.20
  br label %do.cond.25, !dbg !11208

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !11211

do.end.26:                                        ; preds = %do.cond.25
  %30 = bitcast %struct._ts** %_save to i8*, !dbg !11213
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !11213
  %call27 = call i32 @PyErr_CheckSignals(), !dbg !11215
  %tobool = icmp ne i32 %call27, 0, !dbg !11215
  br i1 %tobool, label %if.then.28, label %if.end.29, !dbg !11217

if.then.28:                                       ; preds = %do.end.26
  br label %error, !dbg !11218

if.end.29:                                        ; preds = %do.end.26
  %31 = load i32, i32* %err, align 4, !dbg !11219, !tbaa !4372
  %cmp30 = icmp eq i32 %31, 2, !dbg !11221
  br i1 %cmp30, label %if.then.32, label %if.else, !dbg !11222

if.then.32:                                       ; preds = %if.end.29
  %32 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11223, !tbaa !3860
  %call33 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %32, i32 0), !dbg !11225
  store i32 %call33, i32* %sockstate, align 4, !dbg !11226, !tbaa !4372
  br label %if.end.40, !dbg !11227

if.else:                                          ; preds = %if.end.29
  %33 = load i32, i32* %err, align 4, !dbg !11228, !tbaa !4372
  %cmp34 = icmp eq i32 %33, 3, !dbg !11230
  br i1 %cmp34, label %if.then.36, label %if.else.38, !dbg !11231

if.then.36:                                       ; preds = %if.else
  %34 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11232, !tbaa !3860
  %call37 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %34, i32 1), !dbg !11234
  store i32 %call37, i32* %sockstate, align 4, !dbg !11235, !tbaa !4372
  br label %if.end.39, !dbg !11236

if.else.38:                                       ; preds = %if.else
  store i32 5, i32* %sockstate, align 4, !dbg !11237, !tbaa !4372
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.38, %if.then.36
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39, %if.then.32
  %35 = load i32, i32* %sockstate, align 4, !dbg !11239, !tbaa !4372
  %cmp41 = icmp eq i32 %35, 2, !dbg !11241
  br i1 %cmp41, label %if.then.43, label %if.else.44, !dbg !11242

if.then.43:                                       ; preds = %if.end.40
  %36 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !11243, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.206, i32 0, i32 0)), !dbg !11246
  br label %error, !dbg !11247

if.else.44:                                       ; preds = %if.end.40
  %37 = load i32, i32* %sockstate, align 4, !dbg !11248, !tbaa !4372
  %cmp45 = icmp eq i32 %37, 3, !dbg !11250
  br i1 %cmp45, label %if.then.47, label %if.else.48, !dbg !11251

if.then.47:                                       ; preds = %if.else.44
  %38 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !11252, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %38, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.207, i32 0, i32 0)), !dbg !11254
  br label %error, !dbg !11255

if.else.48:                                       ; preds = %if.else.44
  %39 = load i32, i32* %sockstate, align 4, !dbg !11256, !tbaa !4372
  %cmp49 = icmp eq i32 %39, 4, !dbg !11258
  br i1 %cmp49, label %if.then.51, label %if.else.52, !dbg !11259

if.then.51:                                       ; preds = %if.else.48
  %40 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !11260, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %40, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.208, i32 0, i32 0)), !dbg !11262
  br label %error, !dbg !11263

if.else.52:                                       ; preds = %if.else.48
  %41 = load i32, i32* %sockstate, align 4, !dbg !11264, !tbaa !4372
  %cmp53 = icmp eq i32 %41, 0, !dbg !11266
  br i1 %cmp53, label %if.then.55, label %if.end.56, !dbg !11267

if.then.55:                                       ; preds = %if.else.52
  br label %do.end.65, !dbg !11268

if.end.56:                                        ; preds = %if.else.52
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58
  br label %do.cond.60, !dbg !11270

do.cond.60:                                       ; preds = %if.end.59
  %42 = load i32, i32* %err, align 4, !dbg !11271, !tbaa !4372
  %cmp61 = icmp eq i32 %42, 2, !dbg !11273
  br i1 %cmp61, label %lor.end, label %lor.rhs, !dbg !11274

lor.rhs:                                          ; preds = %do.cond.60
  %43 = load i32, i32* %err, align 4, !dbg !11275, !tbaa !4372
  %cmp63 = icmp eq i32 %43, 3, !dbg !11277
  br label %lor.end, !dbg !11274

lor.end:                                          ; preds = %lor.rhs, %do.cond.60
  %44 = phi i1 [ true, %do.cond.60 ], [ %cmp63, %lor.rhs ]
  br i1 %44, label %do.body, label %do.end.65, !dbg !11278

do.end.65:                                        ; preds = %lor.end, %if.then.55
  br label %do.body.66, !dbg !11281

do.body.66:                                       ; preds = %do.end.65
  %45 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11282
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !11282
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3268, metadata !3830), !dbg !11284
  %46 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11285, !tbaa !3860
  %47 = bitcast %struct.PySocketSockObject* %46 to %struct._object*, !dbg !11286
  store %struct._object* %47, %struct._object** %_py_decref_tmp, align 8, !dbg !11284, !tbaa !3860
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11287, !tbaa !3860
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !11289
  %49 = load i64, i64* %ob_refcnt67, align 8, !dbg !11290, !tbaa !4101
  %dec = add i64 %49, -1, !dbg !11290
  store i64 %dec, i64* %ob_refcnt67, align 8, !dbg !11290, !tbaa !4101
  %cmp68 = icmp ne i64 %dec, 0, !dbg !11291
  br i1 %cmp68, label %if.then.70, label %if.else.71, !dbg !11292

if.then.70:                                       ; preds = %do.body.66
  br label %if.end.72, !dbg !11293

if.else.71:                                       ; preds = %do.body.66
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11295, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !11297
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11297, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4, !dbg !11298
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11298, !tbaa !4206
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11299, !tbaa !3860
  call void %52(%struct._object* %53), !dbg !11300
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.71, %if.then.70
  %54 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11301
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !11301
  br label %do.cond.73, !dbg !11303

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !11304

do.end.74:                                        ; preds = %do.cond.73
  %55 = load i32, i32* %ret, align 4, !dbg !11306, !tbaa !4372
  %cmp75 = icmp slt i32 %55, 1, !dbg !11308
  br i1 %cmp75, label %if.then.77, label %if.end.79, !dbg !11309

if.then.77:                                       ; preds = %do.end.74
  %56 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11310, !tbaa !3860
  %57 = load i32, i32* %ret, align 4, !dbg !11311, !tbaa !4372
  %call78 = call %struct._object* @PySSL_SetError(%struct.PySSLSocket* %56, i32 %57, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 598), !dbg !11312
  store %struct._object* %call78, %struct._object** %retval, !dbg !11313
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11313

if.end.79:                                        ; preds = %do.end.74
  %58 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11314, !tbaa !3860
  %peer_cert = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %58, i32 0, i32 4, !dbg !11316
  %59 = load %struct.x509_st*, %struct.x509_st** %peer_cert, align 8, !dbg !11316, !tbaa !6950
  %tobool80 = icmp ne %struct.x509_st* %59, null, !dbg !11314
  br i1 %tobool80, label %if.then.81, label %if.end.83, !dbg !11317

if.then.81:                                       ; preds = %if.end.79
  %60 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11318, !tbaa !3860
  %peer_cert82 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %60, i32 0, i32 4, !dbg !11319
  %61 = load %struct.x509_st*, %struct.x509_st** %peer_cert82, align 8, !dbg !11319, !tbaa !6950
  call void @X509_free(%struct.x509_st* %61), !dbg !11320
  br label %if.end.83, !dbg !11320

if.end.83:                                        ; preds = %if.then.81, %if.end.79
  %62 = bitcast %struct._ts** %_save84 to i8*, !dbg !11321
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !11321
  call void @llvm.dbg.declare(metadata %struct._ts** %_save84, metadata !3270, metadata !3830), !dbg !11322
  store %struct._ts* null, %struct._ts** %_save84, align 8, !dbg !11322, !tbaa !3860
  br label %do.body.85, !dbg !11323

do.body.85:                                       ; preds = %if.end.83
  %63 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11324, !tbaa !4372
  %cmp86 = icmp ugt i32 %63, 0, !dbg !11328
  br i1 %cmp86, label %if.then.88, label %if.end.90, !dbg !11329

if.then.88:                                       ; preds = %do.body.85
  %call89 = call %struct._ts* @PyEval_SaveThread(), !dbg !11330
  store %struct._ts* %call89, %struct._ts** %_save84, align 8, !dbg !11333, !tbaa !3860
  br label %if.end.90, !dbg !11334

if.end.90:                                        ; preds = %if.then.88, %do.body.85
  br label %do.cond.91, !dbg !11335

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !11338

do.end.92:                                        ; preds = %do.cond.91
  %64 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11340, !tbaa !3860
  %ssl93 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %64, i32 0, i32 2, !dbg !11341
  %65 = load %struct.ssl_st*, %struct.ssl_st** %ssl93, align 8, !dbg !11341, !tbaa !6955
  %call94 = call %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st* %65), !dbg !11342
  %66 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11343, !tbaa !3860
  %peer_cert95 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %66, i32 0, i32 4, !dbg !11344
  store %struct.x509_st* %call94, %struct.x509_st** %peer_cert95, align 8, !dbg !11345, !tbaa !6950
  br label %do.body.96, !dbg !11346

do.body.96:                                       ; preds = %do.end.92
  %67 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11347, !tbaa !4372
  %cmp97 = icmp ugt i32 %67, 0, !dbg !11351
  br i1 %cmp97, label %if.then.99, label %if.end.100, !dbg !11352

if.then.99:                                       ; preds = %do.body.96
  %68 = load %struct._ts*, %struct._ts** %_save84, align 8, !dbg !11353, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %68), !dbg !11356
  br label %if.end.100, !dbg !11357

if.end.100:                                       ; preds = %if.then.99, %do.body.96
  br label %do.cond.101, !dbg !11358

do.cond.101:                                      ; preds = %if.end.100
  br label %do.end.102, !dbg !11361

do.end.102:                                       ; preds = %do.cond.101
  %69 = bitcast %struct._ts** %_save84 to i8*, !dbg !11363
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !11363
  %70 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11365, !tbaa !3860
  %handshake_done = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %70, i32 0, i32 6, !dbg !11366
  store i8 1, i8* %handshake_done, align 1, !dbg !11367, !tbaa !6972
  %71 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11368, !tbaa !4101
  %inc103 = add i64 %71, 1, !dbg !11368
  store i64 %inc103, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11368, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !11369
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11369

error:                                            ; preds = %if.then.51, %if.then.47, %if.then.43, %if.then.28
  br label %do.body.104, !dbg !11370

do.body.104:                                      ; preds = %error
  %72 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !11371
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !11371
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp105, metadata !3272, metadata !3830), !dbg !11373
  %73 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11374, !tbaa !3860
  %74 = bitcast %struct.PySocketSockObject* %73 to %struct._object*, !dbg !11375
  store %struct._object* %74, %struct._object** %_py_decref_tmp105, align 8, !dbg !11373, !tbaa !3860
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !11376, !tbaa !3860
  %ob_refcnt106 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !11378
  %76 = load i64, i64* %ob_refcnt106, align 8, !dbg !11379, !tbaa !4101
  %dec107 = add i64 %76, -1, !dbg !11379
  store i64 %dec107, i64* %ob_refcnt106, align 8, !dbg !11379, !tbaa !4101
  %cmp108 = icmp ne i64 %dec107, 0, !dbg !11380
  br i1 %cmp108, label %if.then.110, label %if.else.111, !dbg !11381

if.then.110:                                      ; preds = %do.body.104
  br label %if.end.114, !dbg !11382

if.else.111:                                      ; preds = %do.body.104
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !11384, !tbaa !3860
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !11386
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !11386, !tbaa !4204
  %tp_dealloc113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4, !dbg !11387
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc113, align 8, !dbg !11387, !tbaa !4206
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !11388, !tbaa !3860
  call void %79(%struct._object* %80), !dbg !11389
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.111, %if.then.110
  %81 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !11390
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !11390
  br label %do.cond.115, !dbg !11391

do.cond.115:                                      ; preds = %if.end.114
  br label %do.end.116, !dbg !11392

do.end.116:                                       ; preds = %do.cond.115
  store %struct._object* null, %struct._object** %retval, !dbg !11394
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11394

cleanup:                                          ; preds = %do.end.116, %do.end.102, %if.then.77, %if.then
  %82 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !11395
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !11395
  %83 = bitcast i32* %nonblocking to i8*, !dbg !11395
  call void @llvm.lifetime.end(i64 4, i8* %83) #1, !dbg !11395
  %84 = bitcast i32* %sockstate to i8*, !dbg !11395
  call void @llvm.lifetime.end(i64 4, i8* %84) #1, !dbg !11395
  %85 = bitcast i32* %err to i8*, !dbg !11395
  call void @llvm.lifetime.end(i64 4, i8* %85) #1, !dbg !11395
  %86 = bitcast i32* %ret to i8*, !dbg !11395
  call void @llvm.lifetime.end(i64 4, i8* %86) #1, !dbg !11395
  %87 = load %struct._object*, %struct._object** %retval, !dbg !11395
  ret %struct._object* %87, !dbg !11395
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_SSLwrite(%struct.PySSLSocket* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %len = alloca i32, align 4
  %sockstate = alloca i32, align 4
  %err = alloca i32, align 4
  %nonblocking = alloca i32, align 4
  %sock = alloca %struct.PySocketSockObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_save = alloca %struct._ts*, align 8
  %_py_decref_tmp97 = alloca %struct._object*, align 8
  %_py_decref_tmp117 = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3331, metadata !3830), !dbg !11396
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3332, metadata !3830), !dbg !11397
  %0 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !11398
  call void @llvm.lifetime.start(i64 80, i8* %0) #1, !dbg !11398
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !3333, metadata !3830), !dbg !11399
  %1 = bitcast i32* %len to i8*, !dbg !11400
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !11400
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3334, metadata !3830), !dbg !11401
  %2 = bitcast i32* %sockstate to i8*, !dbg !11402
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !11402
  call void @llvm.dbg.declare(metadata i32* %sockstate, metadata !3335, metadata !3830), !dbg !11403
  %3 = bitcast i32* %err to i8*, !dbg !11404
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !11404
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3336, metadata !3830), !dbg !11405
  %4 = bitcast i32* %nonblocking to i8*, !dbg !11406
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !11406
  call void @llvm.dbg.declare(metadata i32* %nonblocking, metadata !3337, metadata !3830), !dbg !11407
  %5 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !11408
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !11408
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %sock, metadata !3338, metadata !3830), !dbg !11409
  %6 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11410, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %6, i32 0, i32 1, !dbg !11411
  %7 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !11411, !tbaa !6959
  %call = call %struct._object* @PyWeakref_GetObject(%struct._object* %7), !dbg !11412
  %8 = bitcast %struct._object* %call to %struct.PySocketSockObject*, !dbg !11413
  store %struct.PySocketSockObject* %8, %struct.PySocketSockObject** %sock, align 8, !dbg !11409, !tbaa !3860
  %9 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11414, !tbaa !3860
  %10 = bitcast %struct.PySocketSockObject* %9 to %struct._object*, !dbg !11416
  %cmp = icmp eq %struct._object* %10, @_Py_NoneStruct, !dbg !11417
  br i1 %cmp, label %if.then, label %if.end, !dbg !11418

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @_setSSLError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.205, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1568), !dbg !11419
  store %struct._object* null, %struct._object** %retval, !dbg !11421
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11421

if.end:                                           ; preds = %entry
  %11 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11422, !tbaa !3860
  %12 = bitcast %struct.PySocketSockObject* %11 to %struct._object*, !dbg !11423
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !11424
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !11425, !tbaa !4101
  %inc = add i64 %13, 1, !dbg !11425
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11425, !tbaa !4101
  %14 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11426, !tbaa !3860
  %call2 = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.218, i32 0, i32 0), %struct.bufferinfo* %buf), !dbg !11427
  %tobool = icmp ne i32 %call2, 0, !dbg !11427
  br i1 %tobool, label %if.end.8, label %if.then.3, !dbg !11428

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !11429

do.body:                                          ; preds = %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11430
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !11430
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3339, metadata !3830), !dbg !11432
  %16 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11433, !tbaa !3860
  %17 = bitcast %struct.PySocketSockObject* %16 to %struct._object*, !dbg !11434
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !11432, !tbaa !3860
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11435, !tbaa !3860
  %ob_refcnt4 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !11437
  %19 = load i64, i64* %ob_refcnt4, align 8, !dbg !11438, !tbaa !4101
  %dec = add i64 %19, -1, !dbg !11438
  store i64 %dec, i64* %ob_refcnt4, align 8, !dbg !11438, !tbaa !4101
  %cmp5 = icmp ne i64 %dec, 0, !dbg !11439
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !11440

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !11441

if.else:                                          ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11443, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !11445
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11445, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !11446
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11446, !tbaa !4206
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11447, !tbaa !3860
  call void %22(%struct._object* %23), !dbg !11448
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11449
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !11449
  br label %do.cond, !dbg !11451

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !11452

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !11454
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11454

if.end.8:                                         ; preds = %if.end
  %len9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !11455
  %25 = load i64, i64* %len9, align 8, !dbg !11455, !tbaa !4897
  %cmp10 = icmp sgt i64 %25, 2147483647, !dbg !11457
  br i1 %cmp10, label %if.then.11, label %if.end.13, !dbg !11458

if.then.11:                                       ; preds = %if.end.8
  %26 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !11459, !tbaa !3860
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %26, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.219, i32 0, i32 0), i32 2147483647), !dbg !11461
  br label %error, !dbg !11462

if.end.13:                                        ; preds = %if.end.8
  %27 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11463, !tbaa !3860
  %sock_timeout = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %27, i32 0, i32 6, !dbg !11464
  %28 = load double, double* %sock_timeout, align 8, !dbg !11464, !tbaa !7052
  %cmp14 = fcmp oge double %28, 0.000000e+00, !dbg !11465
  %conv = zext i1 %cmp14 to i32, !dbg !11465
  store i32 %conv, i32* %nonblocking, align 4, !dbg !11466, !tbaa !4372
  %29 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11467, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %29, i32 0, i32 2, !dbg !11468
  %30 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !11468, !tbaa !6955
  %call15 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %30), !dbg !11469
  %31 = load i32, i32* %nonblocking, align 4, !dbg !11470, !tbaa !4372
  %conv16 = sext i32 %31 to i64, !dbg !11471
  %call17 = call i64 @BIO_ctrl(%struct.bio_st* %call15, i32 102, i64 %conv16, i8* null), !dbg !11472
  %32 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11473, !tbaa !3860
  %ssl18 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %32, i32 0, i32 2, !dbg !11474
  %33 = load %struct.ssl_st*, %struct.ssl_st** %ssl18, align 8, !dbg !11474, !tbaa !6955
  %call19 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %33), !dbg !11475
  %34 = load i32, i32* %nonblocking, align 4, !dbg !11476, !tbaa !4372
  %conv20 = sext i32 %34 to i64, !dbg !11477
  %call21 = call i64 @BIO_ctrl(%struct.bio_st* %call19, i32 102, i64 %conv20, i8* null), !dbg !11478
  %35 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11479, !tbaa !3860
  %call22 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %35, i32 1), !dbg !11480
  store i32 %call22, i32* %sockstate, align 4, !dbg !11481, !tbaa !4372
  %36 = load i32, i32* %sockstate, align 4, !dbg !11482, !tbaa !4372
  %cmp23 = icmp eq i32 %36, 2, !dbg !11484
  br i1 %cmp23, label %if.then.25, label %if.else.26, !dbg !11485

if.then.25:                                       ; preds = %if.end.13
  %37 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !11486, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %37, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.220, i32 0, i32 0)), !dbg !11488
  br label %error, !dbg !11489

if.else.26:                                       ; preds = %if.end.13
  %38 = load i32, i32* %sockstate, align 4, !dbg !11490, !tbaa !4372
  %cmp27 = icmp eq i32 %38, 3, !dbg !11492
  br i1 %cmp27, label %if.then.29, label %if.else.30, !dbg !11493

if.then.29:                                       ; preds = %if.else.26
  %39 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !11494, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %39, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.221, i32 0, i32 0)), !dbg !11496
  br label %error, !dbg !11497

if.else.30:                                       ; preds = %if.else.26
  %40 = load i32, i32* %sockstate, align 4, !dbg !11498, !tbaa !4372
  %cmp31 = icmp eq i32 %40, 4, !dbg !11500
  br i1 %cmp31, label %if.then.33, label %if.end.34, !dbg !11501

if.then.33:                                       ; preds = %if.else.30
  %41 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !11502, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %41, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.222, i32 0, i32 0)), !dbg !11504
  br label %error, !dbg !11505

if.end.34:                                        ; preds = %if.else.30
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35
  br label %do.body.37, !dbg !11506

do.body.37:                                       ; preds = %lor.end, %if.end.36
  %42 = bitcast %struct._ts** %_save to i8*, !dbg !11507
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !11507
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3343, metadata !3830), !dbg !11508
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !11508, !tbaa !3860
  br label %do.body.38, !dbg !11509

do.body.38:                                       ; preds = %do.body.37
  %43 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11510, !tbaa !4372
  %cmp39 = icmp ugt i32 %43, 0, !dbg !11514
  br i1 %cmp39, label %if.then.41, label %if.end.43, !dbg !11515

if.then.41:                                       ; preds = %do.body.38
  %call42 = call %struct._ts* @PyEval_SaveThread(), !dbg !11516
  store %struct._ts* %call42, %struct._ts** %_save, align 8, !dbg !11519, !tbaa !3860
  br label %if.end.43, !dbg !11520

if.end.43:                                        ; preds = %if.then.41, %do.body.38
  br label %do.cond.44, !dbg !11521

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !11524

do.end.45:                                        ; preds = %do.cond.44
  %44 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11526, !tbaa !3860
  %ssl46 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %44, i32 0, i32 2, !dbg !11527
  %45 = load %struct.ssl_st*, %struct.ssl_st** %ssl46, align 8, !dbg !11527, !tbaa !6955
  %buf47 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !11528
  %46 = load i8*, i8** %buf47, align 8, !dbg !11528, !tbaa !4915
  %len48 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !11529
  %47 = load i64, i64* %len48, align 8, !dbg !11529, !tbaa !4897
  %conv49 = trunc i64 %47 to i32, !dbg !11530
  %call50 = call i32 @SSL_write(%struct.ssl_st* %45, i8* %46, i32 %conv49), !dbg !11531
  store i32 %call50, i32* %len, align 4, !dbg !11532, !tbaa !4372
  %48 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11533, !tbaa !3860
  %ssl51 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %48, i32 0, i32 2, !dbg !11534
  %49 = load %struct.ssl_st*, %struct.ssl_st** %ssl51, align 8, !dbg !11534, !tbaa !6955
  %50 = load i32, i32* %len, align 4, !dbg !11535, !tbaa !4372
  %call52 = call i32 @SSL_get_error(%struct.ssl_st* %49, i32 %50), !dbg !11536
  store i32 %call52, i32* %err, align 4, !dbg !11537, !tbaa !4372
  br label %do.body.53, !dbg !11538

do.body.53:                                       ; preds = %do.end.45
  %51 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11539, !tbaa !4372
  %cmp54 = icmp ugt i32 %51, 0, !dbg !11543
  br i1 %cmp54, label %if.then.56, label %if.end.57, !dbg !11544

if.then.56:                                       ; preds = %do.body.53
  %52 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !11545, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %52), !dbg !11548
  br label %if.end.57, !dbg !11549

if.end.57:                                        ; preds = %if.then.56, %do.body.53
  br label %do.cond.58, !dbg !11550

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !11553

do.end.59:                                        ; preds = %do.cond.58
  %53 = bitcast %struct._ts** %_save to i8*, !dbg !11555
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !11555
  %call60 = call i32 @PyErr_CheckSignals(), !dbg !11557
  %tobool61 = icmp ne i32 %call60, 0, !dbg !11557
  br i1 %tobool61, label %if.then.62, label %if.end.63, !dbg !11559

if.then.62:                                       ; preds = %do.end.59
  br label %error, !dbg !11560

if.end.63:                                        ; preds = %do.end.59
  %54 = load i32, i32* %err, align 4, !dbg !11562, !tbaa !4372
  %cmp64 = icmp eq i32 %54, 2, !dbg !11564
  br i1 %cmp64, label %if.then.66, label %if.else.68, !dbg !11565

if.then.66:                                       ; preds = %if.end.63
  %55 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11566, !tbaa !3860
  %call67 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %55, i32 0), !dbg !11568
  store i32 %call67, i32* %sockstate, align 4, !dbg !11569, !tbaa !4372
  br label %if.end.75, !dbg !11570

if.else.68:                                       ; preds = %if.end.63
  %56 = load i32, i32* %err, align 4, !dbg !11571, !tbaa !4372
  %cmp69 = icmp eq i32 %56, 3, !dbg !11573
  br i1 %cmp69, label %if.then.71, label %if.else.73, !dbg !11574

if.then.71:                                       ; preds = %if.else.68
  %57 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11575, !tbaa !3860
  %call72 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %57, i32 1), !dbg !11577
  store i32 %call72, i32* %sockstate, align 4, !dbg !11578, !tbaa !4372
  br label %if.end.74, !dbg !11579

if.else.73:                                       ; preds = %if.else.68
  store i32 5, i32* %sockstate, align 4, !dbg !11580, !tbaa !4372
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.73, %if.then.71
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %if.then.66
  %58 = load i32, i32* %sockstate, align 4, !dbg !11582, !tbaa !4372
  %cmp76 = icmp eq i32 %58, 2, !dbg !11584
  br i1 %cmp76, label %if.then.78, label %if.else.79, !dbg !11585

if.then.78:                                       ; preds = %if.end.75
  %59 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !11586, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %59, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.220, i32 0, i32 0)), !dbg !11588
  br label %error, !dbg !11589

if.else.79:                                       ; preds = %if.end.75
  %60 = load i32, i32* %sockstate, align 4, !dbg !11590, !tbaa !4372
  %cmp80 = icmp eq i32 %60, 3, !dbg !11592
  br i1 %cmp80, label %if.then.82, label %if.else.83, !dbg !11593

if.then.82:                                       ; preds = %if.else.79
  %61 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !11594, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %61, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.221, i32 0, i32 0)), !dbg !11596
  br label %error, !dbg !11597

if.else.83:                                       ; preds = %if.else.79
  %62 = load i32, i32* %sockstate, align 4, !dbg !11598, !tbaa !4372
  %cmp84 = icmp eq i32 %62, 0, !dbg !11600
  br i1 %cmp84, label %if.then.86, label %if.end.87, !dbg !11601

if.then.86:                                       ; preds = %if.else.83
  br label %do.end.95, !dbg !11602

if.end.87:                                        ; preds = %if.else.83
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88
  br label %do.cond.90, !dbg !11604

do.cond.90:                                       ; preds = %if.end.89
  %63 = load i32, i32* %err, align 4, !dbg !11605, !tbaa !4372
  %cmp91 = icmp eq i32 %63, 2, !dbg !11607
  br i1 %cmp91, label %lor.end, label %lor.rhs, !dbg !11608

lor.rhs:                                          ; preds = %do.cond.90
  %64 = load i32, i32* %err, align 4, !dbg !11609, !tbaa !4372
  %cmp93 = icmp eq i32 %64, 3, !dbg !11611
  br label %lor.end, !dbg !11608

lor.end:                                          ; preds = %lor.rhs, %do.cond.90
  %65 = phi i1 [ true, %do.cond.90 ], [ %cmp93, %lor.rhs ]
  br i1 %65, label %do.body.37, label %do.end.95, !dbg !11612

do.end.95:                                        ; preds = %lor.end, %if.then.86
  br label %do.body.96, !dbg !11615

do.body.96:                                       ; preds = %do.end.95
  %66 = bitcast %struct._object** %_py_decref_tmp97 to i8*, !dbg !11616
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !11616
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp97, metadata !3346, metadata !3830), !dbg !11618
  %67 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11619, !tbaa !3860
  %68 = bitcast %struct.PySocketSockObject* %67 to %struct._object*, !dbg !11620
  store %struct._object* %68, %struct._object** %_py_decref_tmp97, align 8, !dbg !11618, !tbaa !3860
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8, !dbg !11621, !tbaa !3860
  %ob_refcnt98 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !11623
  %70 = load i64, i64* %ob_refcnt98, align 8, !dbg !11624, !tbaa !4101
  %dec99 = add i64 %70, -1, !dbg !11624
  store i64 %dec99, i64* %ob_refcnt98, align 8, !dbg !11624, !tbaa !4101
  %cmp100 = icmp ne i64 %dec99, 0, !dbg !11625
  br i1 %cmp100, label %if.then.102, label %if.else.103, !dbg !11626

if.then.102:                                      ; preds = %do.body.96
  br label %if.end.106, !dbg !11627

if.else.103:                                      ; preds = %do.body.96
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8, !dbg !11629, !tbaa !3860
  %ob_type104 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !11631
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type104, align 8, !dbg !11631, !tbaa !4204
  %tp_dealloc105 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !11632
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc105, align 8, !dbg !11632, !tbaa !4206
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8, !dbg !11633, !tbaa !3860
  call void %73(%struct._object* %74), !dbg !11634
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.103, %if.then.102
  %75 = bitcast %struct._object** %_py_decref_tmp97 to i8*, !dbg !11635
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !11635
  br label %do.cond.107, !dbg !11637

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !11638

do.end.108:                                       ; preds = %do.cond.107
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !11640
  %76 = load i32, i32* %len, align 4, !dbg !11641, !tbaa !4372
  %cmp109 = icmp sgt i32 %76, 0, !dbg !11643
  br i1 %cmp109, label %if.then.111, label %if.else.114, !dbg !11644

if.then.111:                                      ; preds = %do.end.108
  %77 = load i32, i32* %len, align 4, !dbg !11645, !tbaa !4372
  %conv112 = sext i32 %77 to i64, !dbg !11645
  %call113 = call %struct._object* @PyLong_FromLong(i64 %conv112), !dbg !11646
  store %struct._object* %call113, %struct._object** %retval, !dbg !11647
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11647

if.else.114:                                      ; preds = %do.end.108
  %78 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11648, !tbaa !3860
  %79 = load i32, i32* %len, align 4, !dbg !11649, !tbaa !4372
  %call115 = call %struct._object* @PySSL_SetError(%struct.PySSLSocket* %78, i32 %79, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1636), !dbg !11650
  store %struct._object* %call115, %struct._object** %retval, !dbg !11651
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11651

error:                                            ; preds = %if.then.82, %if.then.78, %if.then.62, %if.then.33, %if.then.29, %if.then.25, %if.then.11
  br label %do.body.116, !dbg !11652

do.body.116:                                      ; preds = %error
  %80 = bitcast %struct._object** %_py_decref_tmp117 to i8*, !dbg !11653
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !11653
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp117, metadata !3348, metadata !3830), !dbg !11655
  %81 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11656, !tbaa !3860
  %82 = bitcast %struct.PySocketSockObject* %81 to %struct._object*, !dbg !11657
  store %struct._object* %82, %struct._object** %_py_decref_tmp117, align 8, !dbg !11655, !tbaa !3860
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8, !dbg !11658, !tbaa !3860
  %ob_refcnt118 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !11660
  %84 = load i64, i64* %ob_refcnt118, align 8, !dbg !11661, !tbaa !4101
  %dec119 = add i64 %84, -1, !dbg !11661
  store i64 %dec119, i64* %ob_refcnt118, align 8, !dbg !11661, !tbaa !4101
  %cmp120 = icmp ne i64 %dec119, 0, !dbg !11662
  br i1 %cmp120, label %if.then.122, label %if.else.123, !dbg !11663

if.then.122:                                      ; preds = %do.body.116
  br label %if.end.126, !dbg !11664

if.else.123:                                      ; preds = %do.body.116
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8, !dbg !11666, !tbaa !3860
  %ob_type124 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !11668
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type124, align 8, !dbg !11668, !tbaa !4204
  %tp_dealloc125 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !11669
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc125, align 8, !dbg !11669, !tbaa !4206
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8, !dbg !11670, !tbaa !3860
  call void %87(%struct._object* %88), !dbg !11671
  br label %if.end.126

if.end.126:                                       ; preds = %if.else.123, %if.then.122
  %89 = bitcast %struct._object** %_py_decref_tmp117 to i8*, !dbg !11672
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !11672
  br label %do.cond.127, !dbg !11673

do.cond.127:                                      ; preds = %if.end.126
  br label %do.end.128, !dbg !11674

do.end.128:                                       ; preds = %do.cond.127
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !11676
  store %struct._object* null, %struct._object** %retval, !dbg !11677
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11677

cleanup:                                          ; preds = %do.end.128, %if.else.114, %if.then.111, %do.end, %if.then
  %90 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !11678
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !11678
  %91 = bitcast i32* %nonblocking to i8*, !dbg !11678
  call void @llvm.lifetime.end(i64 4, i8* %91) #1, !dbg !11678
  %92 = bitcast i32* %err to i8*, !dbg !11678
  call void @llvm.lifetime.end(i64 4, i8* %92) #1, !dbg !11678
  %93 = bitcast i32* %sockstate to i8*, !dbg !11678
  call void @llvm.lifetime.end(i64 4, i8* %93) #1, !dbg !11678
  %94 = bitcast i32* %len to i8*, !dbg !11678
  call void @llvm.lifetime.end(i64 4, i8* %94) #1, !dbg !11678
  %95 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !11678
  call void @llvm.lifetime.end(i64 80, i8* %95) #1, !dbg !11678
  %96 = load %struct._object*, %struct._object** %retval, !dbg !11678
  ret %struct._object* %96, !dbg !11678
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_SSLread(%struct.PySSLSocket* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %args.addr = alloca %struct._object*, align 8
  %dest = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %mem = alloca i8*, align 8
  %len = alloca i32, align 4
  %count = alloca i32, align 4
  %buf_passed = alloca i32, align 4
  %sockstate = alloca i32, align 4
  %err = alloca i32, align 4
  %nonblocking = alloca i32, align 4
  %sock = alloca %struct.PySocketSockObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  %_save76 = alloca %struct._ts*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp159 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp178 = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3352, metadata !3830), !dbg !11679
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3353, metadata !3830), !dbg !11680
  %0 = bitcast %struct._object** %dest to i8*, !dbg !11681
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11681
  call void @llvm.dbg.declare(metadata %struct._object** %dest, metadata !3354, metadata !3830), !dbg !11682
  store %struct._object* null, %struct._object** %dest, align 8, !dbg !11682, !tbaa !3860
  %1 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !11683
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !11683
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !3355, metadata !3830), !dbg !11684
  %2 = bitcast i8** %mem to i8*, !dbg !11685
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11685
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !3356, metadata !3830), !dbg !11686
  %3 = bitcast i32* %len to i8*, !dbg !11687
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !11687
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3357, metadata !3830), !dbg !11688
  %4 = bitcast i32* %count to i8*, !dbg !11687
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !11687
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3358, metadata !3830), !dbg !11689
  %5 = bitcast i32* %buf_passed to i8*, !dbg !11690
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !11690
  call void @llvm.dbg.declare(metadata i32* %buf_passed, metadata !3359, metadata !3830), !dbg !11691
  store i32 0, i32* %buf_passed, align 4, !dbg !11691, !tbaa !4372
  %6 = bitcast i32* %sockstate to i8*, !dbg !11692
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !11692
  call void @llvm.dbg.declare(metadata i32* %sockstate, metadata !3360, metadata !3830), !dbg !11693
  %7 = bitcast i32* %err to i8*, !dbg !11694
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !11694
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3361, metadata !3830), !dbg !11695
  %8 = bitcast i32* %nonblocking to i8*, !dbg !11696
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !11696
  call void @llvm.dbg.declare(metadata i32* %nonblocking, metadata !3362, metadata !3830), !dbg !11697
  %9 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !11698
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !11698
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %sock, metadata !3363, metadata !3830), !dbg !11699
  %10 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11700, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %10, i32 0, i32 1, !dbg !11701
  %11 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !11701, !tbaa !6959
  %call = call %struct._object* @PyWeakref_GetObject(%struct._object* %11), !dbg !11702
  %12 = bitcast %struct._object* %call to %struct.PySocketSockObject*, !dbg !11703
  store %struct.PySocketSockObject* %12, %struct.PySocketSockObject** %sock, align 8, !dbg !11699, !tbaa !3860
  %13 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11704, !tbaa !3860
  %14 = bitcast %struct.PySocketSockObject* %13 to %struct._object*, !dbg !11706
  %cmp = icmp eq %struct._object* %14, @_Py_NoneStruct, !dbg !11707
  br i1 %cmp, label %if.then, label %if.end, !dbg !11708

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @_setSSLError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.205, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1684), !dbg !11709
  store %struct._object* null, %struct._object** %retval, !dbg !11711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11711

if.end:                                           ; preds = %entry
  %15 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11712, !tbaa !3860
  %16 = bitcast %struct.PySocketSockObject* %15 to %struct._object*, !dbg !11713
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !11714
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !11715, !tbaa !4101
  %inc = add i64 %17, 1, !dbg !11715
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11715, !tbaa !4101
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 1, !dbg !11716
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !11717, !tbaa !11718
  %buf2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !11719
  store i8* null, i8** %buf2, align 8, !dbg !11720, !tbaa !4915
  %18 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11721, !tbaa !3860
  %call3 = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i32 0, i32 0), i32* %len, %struct.bufferinfo* %buf), !dbg !11723
  %tobool = icmp ne i32 %call3, 0, !dbg !11723
  br i1 %tobool, label %if.end.5, label %if.then.4, !dbg !11724

if.then.4:                                        ; preds = %if.end
  br label %error, !dbg !11725

if.end.5:                                         ; preds = %if.end
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !11726
  %19 = load i8*, i8** %buf6, align 8, !dbg !11726, !tbaa !4915
  %cmp7 = icmp eq i8* %19, null, !dbg !11728
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !11729

land.lhs.true:                                    ; preds = %if.end.5
  %obj8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 1, !dbg !11730
  %20 = load %struct._object*, %struct._object** %obj8, align 8, !dbg !11730, !tbaa !11718
  %cmp9 = icmp eq %struct._object* %20, null, !dbg !11732
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !11733

if.then.10:                                       ; preds = %land.lhs.true
  %21 = load i32, i32* %len, align 4, !dbg !11734, !tbaa !4372
  %conv = sext i32 %21 to i64, !dbg !11734
  %call11 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %conv), !dbg !11736
  store %struct._object* %call11, %struct._object** %dest, align 8, !dbg !11737, !tbaa !3860
  %22 = load %struct._object*, %struct._object** %dest, align 8, !dbg !11738, !tbaa !3860
  %cmp12 = icmp eq %struct._object* %22, null, !dbg !11740
  br i1 %cmp12, label %if.then.14, label %if.end.15, !dbg !11741

if.then.14:                                       ; preds = %if.then.10
  br label %error, !dbg !11742

if.end.15:                                        ; preds = %if.then.10
  %23 = load %struct._object*, %struct._object** %dest, align 8, !dbg !11743, !tbaa !3860
  %24 = bitcast %struct._object* %23 to %struct.PyBytesObject*, !dbg !11744
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %24, i32 0, i32 2, !dbg !11745
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !11746
  store i8* %arraydecay, i8** %mem, align 8, !dbg !11747, !tbaa !3860
  br label %if.end.33, !dbg !11748

if.else:                                          ; preds = %land.lhs.true, %if.end.5
  store i32 1, i32* %buf_passed, align 4, !dbg !11749, !tbaa !4372
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !11751
  %25 = load i8*, i8** %buf16, align 8, !dbg !11751, !tbaa !4915
  store i8* %25, i8** %mem, align 8, !dbg !11752, !tbaa !3860
  %26 = load i32, i32* %len, align 4, !dbg !11753, !tbaa !4372
  %cmp17 = icmp sle i32 %26, 0, !dbg !11755
  br i1 %cmp17, label %if.then.23, label %lor.lhs.false, !dbg !11756

lor.lhs.false:                                    ; preds = %if.else
  %27 = load i32, i32* %len, align 4, !dbg !11757, !tbaa !4372
  %conv19 = sext i32 %27 to i64, !dbg !11757
  %len20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !11759
  %28 = load i64, i64* %len20, align 8, !dbg !11759, !tbaa !4897
  %cmp21 = icmp sgt i64 %conv19, %28, !dbg !11760
  br i1 %cmp21, label %if.then.23, label %if.end.32, !dbg !11761

if.then.23:                                       ; preds = %lor.lhs.false, %if.else
  %len24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !11762
  %29 = load i64, i64* %len24, align 8, !dbg !11762, !tbaa !4897
  %conv25 = trunc i64 %29 to i32, !dbg !11764
  store i32 %conv25, i32* %len, align 4, !dbg !11765, !tbaa !4372
  %len26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !11766
  %30 = load i64, i64* %len26, align 8, !dbg !11766, !tbaa !4897
  %31 = load i32, i32* %len, align 4, !dbg !11768, !tbaa !4372
  %conv27 = sext i32 %31 to i64, !dbg !11768
  %cmp28 = icmp ne i64 %30, %conv27, !dbg !11769
  br i1 %cmp28, label %if.then.30, label %if.end.31, !dbg !11770

if.then.30:                                       ; preds = %if.then.23
  %32 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !11771, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.224, i32 0, i32 0)), !dbg !11773
  br label %error, !dbg !11774

if.end.31:                                        ; preds = %if.then.23
  br label %if.end.32, !dbg !11775

if.end.32:                                        ; preds = %if.end.31, %lor.lhs.false
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.end.15
  %33 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11776, !tbaa !3860
  %sock_timeout = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %33, i32 0, i32 6, !dbg !11777
  %34 = load double, double* %sock_timeout, align 8, !dbg !11777, !tbaa !7052
  %cmp34 = fcmp oge double %34, 0.000000e+00, !dbg !11778
  %conv35 = zext i1 %cmp34 to i32, !dbg !11778
  store i32 %conv35, i32* %nonblocking, align 4, !dbg !11779, !tbaa !4372
  %35 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11780, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %35, i32 0, i32 2, !dbg !11781
  %36 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !11781, !tbaa !6955
  %call36 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %36), !dbg !11782
  %37 = load i32, i32* %nonblocking, align 4, !dbg !11783, !tbaa !4372
  %conv37 = sext i32 %37 to i64, !dbg !11784
  %call38 = call i64 @BIO_ctrl(%struct.bio_st* %call36, i32 102, i64 %conv37, i8* null), !dbg !11785
  %38 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11786, !tbaa !3860
  %ssl39 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %38, i32 0, i32 2, !dbg !11787
  %39 = load %struct.ssl_st*, %struct.ssl_st** %ssl39, align 8, !dbg !11787, !tbaa !6955
  %call40 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %39), !dbg !11788
  %40 = load i32, i32* %nonblocking, align 4, !dbg !11789, !tbaa !4372
  %conv41 = sext i32 %40 to i64, !dbg !11790
  %call42 = call i64 @BIO_ctrl(%struct.bio_st* %call40, i32 102, i64 %conv41, i8* null), !dbg !11791
  %41 = bitcast %struct._ts** %_save to i8*, !dbg !11792
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !11792
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3364, metadata !3830), !dbg !11793
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !11793, !tbaa !3860
  br label %do.body, !dbg !11794

do.body:                                          ; preds = %if.end.33
  %42 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11795, !tbaa !4372
  %cmp43 = icmp ugt i32 %42, 0, !dbg !11799
  br i1 %cmp43, label %if.then.45, label %if.end.47, !dbg !11800

if.then.45:                                       ; preds = %do.body
  %call46 = call %struct._ts* @PyEval_SaveThread(), !dbg !11801
  store %struct._ts* %call46, %struct._ts** %_save, align 8, !dbg !11804, !tbaa !3860
  br label %if.end.47, !dbg !11805

if.end.47:                                        ; preds = %if.then.45, %do.body
  br label %do.cond, !dbg !11806

do.cond:                                          ; preds = %if.end.47
  br label %do.end, !dbg !11809

do.end:                                           ; preds = %do.cond
  %43 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11811, !tbaa !3860
  %ssl48 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %43, i32 0, i32 2, !dbg !11812
  %44 = load %struct.ssl_st*, %struct.ssl_st** %ssl48, align 8, !dbg !11812, !tbaa !6955
  %call49 = call i32 @SSL_pending(%struct.ssl_st* %44), !dbg !11813
  store i32 %call49, i32* %count, align 4, !dbg !11814, !tbaa !4372
  br label %do.body.50, !dbg !11815

do.body.50:                                       ; preds = %do.end
  %45 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11816, !tbaa !4372
  %cmp51 = icmp ugt i32 %45, 0, !dbg !11820
  br i1 %cmp51, label %if.then.53, label %if.end.54, !dbg !11821

if.then.53:                                       ; preds = %do.body.50
  %46 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !11822, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %46), !dbg !11825
  br label %if.end.54, !dbg !11826

if.end.54:                                        ; preds = %if.then.53, %do.body.50
  br label %do.cond.55, !dbg !11827

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !11830

do.end.56:                                        ; preds = %do.cond.55
  %47 = bitcast %struct._ts** %_save to i8*, !dbg !11832
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !11832
  %48 = load i32, i32* %count, align 4, !dbg !11834, !tbaa !4372
  %tobool57 = icmp ne i32 %48, 0, !dbg !11834
  br i1 %tobool57, label %if.end.74, label %if.then.58, !dbg !11836

if.then.58:                                       ; preds = %do.end.56
  %49 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11837, !tbaa !3860
  %call59 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %49, i32 0), !dbg !11839
  store i32 %call59, i32* %sockstate, align 4, !dbg !11840, !tbaa !4372
  %50 = load i32, i32* %sockstate, align 4, !dbg !11841, !tbaa !4372
  %cmp60 = icmp eq i32 %50, 2, !dbg !11843
  br i1 %cmp60, label %if.then.62, label %if.else.63, !dbg !11844

if.then.62:                                       ; preds = %if.then.58
  %51 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !11845, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %51, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0)), !dbg !11847
  br label %error, !dbg !11848

if.else.63:                                       ; preds = %if.then.58
  %52 = load i32, i32* %sockstate, align 4, !dbg !11849, !tbaa !4372
  %cmp64 = icmp eq i32 %52, 4, !dbg !11851
  br i1 %cmp64, label %if.then.66, label %if.else.67, !dbg !11852

if.then.66:                                       ; preds = %if.else.63
  %53 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !11853, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %53, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.222, i32 0, i32 0)), !dbg !11855
  br label %error, !dbg !11856

if.else.67:                                       ; preds = %if.else.63
  %54 = load i32, i32* %sockstate, align 4, !dbg !11857, !tbaa !4372
  %cmp68 = icmp eq i32 %54, 3, !dbg !11859
  br i1 %cmp68, label %if.then.70, label %if.end.71, !dbg !11860

if.then.70:                                       ; preds = %if.else.67
  store i32 0, i32* %count, align 4, !dbg !11861, !tbaa !4372
  br label %done, !dbg !11863

if.end.71:                                        ; preds = %if.else.67
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72
  br label %if.end.74, !dbg !11864

if.end.74:                                        ; preds = %if.end.73, %do.end.56
  br label %do.body.75, !dbg !11865

do.body.75:                                       ; preds = %lor.end, %if.end.74
  %55 = bitcast %struct._ts** %_save76 to i8*, !dbg !11866
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !11866
  call void @llvm.dbg.declare(metadata %struct._ts** %_save76, metadata !3366, metadata !3830), !dbg !11867
  store %struct._ts* null, %struct._ts** %_save76, align 8, !dbg !11867, !tbaa !3860
  br label %do.body.77, !dbg !11868

do.body.77:                                       ; preds = %do.body.75
  %56 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11869, !tbaa !4372
  %cmp78 = icmp ugt i32 %56, 0, !dbg !11873
  br i1 %cmp78, label %if.then.80, label %if.end.82, !dbg !11874

if.then.80:                                       ; preds = %do.body.77
  %call81 = call %struct._ts* @PyEval_SaveThread(), !dbg !11875
  store %struct._ts* %call81, %struct._ts** %_save76, align 8, !dbg !11878, !tbaa !3860
  br label %if.end.82, !dbg !11879

if.end.82:                                        ; preds = %if.then.80, %do.body.77
  br label %do.cond.83, !dbg !11880

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !11883

do.end.84:                                        ; preds = %do.cond.83
  %57 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11885, !tbaa !3860
  %ssl85 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %57, i32 0, i32 2, !dbg !11886
  %58 = load %struct.ssl_st*, %struct.ssl_st** %ssl85, align 8, !dbg !11886, !tbaa !6955
  %59 = load i8*, i8** %mem, align 8, !dbg !11887, !tbaa !3860
  %60 = load i32, i32* %len, align 4, !dbg !11888, !tbaa !4372
  %call86 = call i32 @SSL_read(%struct.ssl_st* %58, i8* %59, i32 %60), !dbg !11889
  store i32 %call86, i32* %count, align 4, !dbg !11890, !tbaa !4372
  %61 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11891, !tbaa !3860
  %ssl87 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %61, i32 0, i32 2, !dbg !11892
  %62 = load %struct.ssl_st*, %struct.ssl_st** %ssl87, align 8, !dbg !11892, !tbaa !6955
  %63 = load i32, i32* %count, align 4, !dbg !11893, !tbaa !4372
  %call88 = call i32 @SSL_get_error(%struct.ssl_st* %62, i32 %63), !dbg !11894
  store i32 %call88, i32* %err, align 4, !dbg !11895, !tbaa !4372
  br label %do.body.89, !dbg !11896

do.body.89:                                       ; preds = %do.end.84
  %64 = load i32, i32* @_ssl_locks_count, align 4, !dbg !11897, !tbaa !4372
  %cmp90 = icmp ugt i32 %64, 0, !dbg !11901
  br i1 %cmp90, label %if.then.92, label %if.end.93, !dbg !11902

if.then.92:                                       ; preds = %do.body.89
  %65 = load %struct._ts*, %struct._ts** %_save76, align 8, !dbg !11903, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %65), !dbg !11906
  br label %if.end.93, !dbg !11907

if.end.93:                                        ; preds = %if.then.92, %do.body.89
  br label %do.cond.94, !dbg !11908

do.cond.94:                                       ; preds = %if.end.93
  br label %do.end.95, !dbg !11911

do.end.95:                                        ; preds = %do.cond.94
  %66 = bitcast %struct._ts** %_save76 to i8*, !dbg !11913
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !11913
  %call96 = call i32 @PyErr_CheckSignals(), !dbg !11915
  %tobool97 = icmp ne i32 %call96, 0, !dbg !11915
  br i1 %tobool97, label %if.then.98, label %if.end.99, !dbg !11917

if.then.98:                                       ; preds = %do.end.95
  br label %error, !dbg !11918

if.end.99:                                        ; preds = %do.end.95
  %67 = load i32, i32* %err, align 4, !dbg !11919, !tbaa !4372
  %cmp100 = icmp eq i32 %67, 2, !dbg !11921
  br i1 %cmp100, label %if.then.102, label %if.else.104, !dbg !11922

if.then.102:                                      ; preds = %if.end.99
  %68 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11923, !tbaa !3860
  %call103 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %68, i32 0), !dbg !11925
  store i32 %call103, i32* %sockstate, align 4, !dbg !11926, !tbaa !4372
  br label %if.end.121, !dbg !11927

if.else.104:                                      ; preds = %if.end.99
  %69 = load i32, i32* %err, align 4, !dbg !11928, !tbaa !4372
  %cmp105 = icmp eq i32 %69, 3, !dbg !11930
  br i1 %cmp105, label %if.then.107, label %if.else.109, !dbg !11931

if.then.107:                                      ; preds = %if.else.104
  %70 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11932, !tbaa !3860
  %call108 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %70, i32 1), !dbg !11934
  store i32 %call108, i32* %sockstate, align 4, !dbg !11935, !tbaa !4372
  br label %if.end.120, !dbg !11936

if.else.109:                                      ; preds = %if.else.104
  %71 = load i32, i32* %err, align 4, !dbg !11937, !tbaa !4372
  %cmp110 = icmp eq i32 %71, 6, !dbg !11939
  br i1 %cmp110, label %land.lhs.true.112, label %if.else.118, !dbg !11940

land.lhs.true.112:                                ; preds = %if.else.109
  %72 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11941, !tbaa !3860
  %ssl113 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %72, i32 0, i32 2, !dbg !11942
  %73 = load %struct.ssl_st*, %struct.ssl_st** %ssl113, align 8, !dbg !11942, !tbaa !6955
  %call114 = call i32 @SSL_get_shutdown(%struct.ssl_st* %73), !dbg !11943
  %cmp115 = icmp eq i32 %call114, 2, !dbg !11944
  br i1 %cmp115, label %if.then.117, label %if.else.118, !dbg !11945

if.then.117:                                      ; preds = %land.lhs.true.112
  store i32 0, i32* %count, align 4, !dbg !11946, !tbaa !4372
  br label %done, !dbg !11948

if.else.118:                                      ; preds = %land.lhs.true.112, %if.else.109
  store i32 5, i32* %sockstate, align 4, !dbg !11949, !tbaa !4372
  br label %if.end.119

if.end.119:                                       ; preds = %if.else.118
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %if.then.107
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.120, %if.then.102
  %74 = load i32, i32* %sockstate, align 4, !dbg !11951, !tbaa !4372
  %cmp122 = icmp eq i32 %74, 2, !dbg !11953
  br i1 %cmp122, label %if.then.124, label %if.else.125, !dbg !11954

if.then.124:                                      ; preds = %if.end.121
  %75 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !11955, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %75, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0)), !dbg !11957
  br label %error, !dbg !11958

if.else.125:                                      ; preds = %if.end.121
  %76 = load i32, i32* %sockstate, align 4, !dbg !11959, !tbaa !4372
  %cmp126 = icmp eq i32 %76, 0, !dbg !11961
  br i1 %cmp126, label %if.then.128, label %if.end.129, !dbg !11962

if.then.128:                                      ; preds = %if.else.125
  br label %do.end.136, !dbg !11963

if.end.129:                                       ; preds = %if.else.125
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129
  br label %do.cond.131, !dbg !11965

do.cond.131:                                      ; preds = %if.end.130
  %77 = load i32, i32* %err, align 4, !dbg !11966, !tbaa !4372
  %cmp132 = icmp eq i32 %77, 2, !dbg !11968
  br i1 %cmp132, label %lor.end, label %lor.rhs, !dbg !11969

lor.rhs:                                          ; preds = %do.cond.131
  %78 = load i32, i32* %err, align 4, !dbg !11970, !tbaa !4372
  %cmp134 = icmp eq i32 %78, 3, !dbg !11972
  br label %lor.end, !dbg !11969

lor.end:                                          ; preds = %lor.rhs, %do.cond.131
  %79 = phi i1 [ true, %do.cond.131 ], [ %cmp134, %lor.rhs ]
  br i1 %79, label %do.body.75, label %do.end.136, !dbg !11973

do.end.136:                                       ; preds = %lor.end, %if.then.128
  %80 = load i32, i32* %count, align 4, !dbg !11976, !tbaa !4372
  %cmp137 = icmp sle i32 %80, 0, !dbg !11978
  br i1 %cmp137, label %if.then.139, label %if.end.141, !dbg !11979

if.then.139:                                      ; preds = %do.end.136
  %81 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !11980, !tbaa !3860
  %82 = load i32, i32* %count, align 4, !dbg !11982, !tbaa !4372
  %call140 = call %struct._object* @PySSL_SetError(%struct.PySSLSocket* %81, i32 %82, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1767), !dbg !11983
  br label %error, !dbg !11984

if.end.141:                                       ; preds = %do.end.136
  br label %done, !dbg !11985

done:                                             ; preds = %if.end.141, %if.then.117, %if.then.70
  br label %do.body.142, !dbg !11987

do.body.142:                                      ; preds = %done
  %83 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11988
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !11988
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3369, metadata !3830), !dbg !11990
  %84 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !11991, !tbaa !3860
  %85 = bitcast %struct.PySocketSockObject* %84 to %struct._object*, !dbg !11992
  store %struct._object* %85, %struct._object** %_py_decref_tmp, align 8, !dbg !11990, !tbaa !3860
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11993, !tbaa !3860
  %ob_refcnt143 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !11995
  %87 = load i64, i64* %ob_refcnt143, align 8, !dbg !11996, !tbaa !4101
  %dec = add i64 %87, -1, !dbg !11996
  store i64 %dec, i64* %ob_refcnt143, align 8, !dbg !11996, !tbaa !4101
  %cmp144 = icmp ne i64 %dec, 0, !dbg !11997
  br i1 %cmp144, label %if.then.146, label %if.else.147, !dbg !11998

if.then.146:                                      ; preds = %do.body.142
  br label %if.end.148, !dbg !11999

if.else.147:                                      ; preds = %do.body.142
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12001, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !12003
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12003, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !12004
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12004, !tbaa !4206
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12005, !tbaa !3860
  call void %90(%struct._object* %91), !dbg !12006
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.147, %if.then.146
  %92 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12007
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !12007
  br label %do.cond.149, !dbg !12009

do.cond.149:                                      ; preds = %if.end.148
  br label %do.end.150, !dbg !12010

do.end.150:                                       ; preds = %do.cond.149
  %93 = load i32, i32* %buf_passed, align 4, !dbg !12012, !tbaa !4372
  %tobool151 = icmp ne i32 %93, 0, !dbg !12012
  br i1 %tobool151, label %if.else.155, label %if.then.152, !dbg !12014

if.then.152:                                      ; preds = %do.end.150
  %94 = load i32, i32* %count, align 4, !dbg !12015, !tbaa !4372
  %conv153 = sext i32 %94 to i64, !dbg !12015
  %call154 = call i32 @_PyBytes_Resize(%struct._object** %dest, i64 %conv153), !dbg !12017
  %95 = load %struct._object*, %struct._object** %dest, align 8, !dbg !12018, !tbaa !3860
  store %struct._object* %95, %struct._object** %retval, !dbg !12019
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12019

if.else.155:                                      ; preds = %do.end.150
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !12020
  %96 = load i32, i32* %count, align 4, !dbg !12022, !tbaa !4372
  %conv156 = sext i32 %96 to i64, !dbg !12022
  %call157 = call %struct._object* @PyLong_FromLong(i64 %conv156), !dbg !12023
  store %struct._object* %call157, %struct._object** %retval, !dbg !12024
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12024

error:                                            ; preds = %if.then.139, %if.then.124, %if.then.98, %if.then.66, %if.then.62, %if.then.30, %if.then.14, %if.then.4
  br label %do.body.158, !dbg !12025

do.body.158:                                      ; preds = %error
  %97 = bitcast %struct._object** %_py_decref_tmp159 to i8*, !dbg !12026
  call void @llvm.lifetime.start(i64 8, i8* %97) #1, !dbg !12026
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp159, metadata !3371, metadata !3830), !dbg !12028
  %98 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12029, !tbaa !3860
  %99 = bitcast %struct.PySocketSockObject* %98 to %struct._object*, !dbg !12030
  store %struct._object* %99, %struct._object** %_py_decref_tmp159, align 8, !dbg !12028, !tbaa !3860
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp159, align 8, !dbg !12031, !tbaa !3860
  %ob_refcnt160 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 0, !dbg !12033
  %101 = load i64, i64* %ob_refcnt160, align 8, !dbg !12034, !tbaa !4101
  %dec161 = add i64 %101, -1, !dbg !12034
  store i64 %dec161, i64* %ob_refcnt160, align 8, !dbg !12034, !tbaa !4101
  %cmp162 = icmp ne i64 %dec161, 0, !dbg !12035
  br i1 %cmp162, label %if.then.164, label %if.else.165, !dbg !12036

if.then.164:                                      ; preds = %do.body.158
  br label %if.end.168, !dbg !12037

if.else.165:                                      ; preds = %do.body.158
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp159, align 8, !dbg !12039, !tbaa !3860
  %ob_type166 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 1, !dbg !12041
  %103 = load %struct._typeobject*, %struct._typeobject** %ob_type166, align 8, !dbg !12041, !tbaa !4204
  %tp_dealloc167 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %103, i32 0, i32 4, !dbg !12042
  %104 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc167, align 8, !dbg !12042, !tbaa !4206
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp159, align 8, !dbg !12043, !tbaa !3860
  call void %104(%struct._object* %105), !dbg !12044
  br label %if.end.168

if.end.168:                                       ; preds = %if.else.165, %if.then.164
  %106 = bitcast %struct._object** %_py_decref_tmp159 to i8*, !dbg !12045
  call void @llvm.lifetime.end(i64 8, i8* %106) #1, !dbg !12045
  br label %do.cond.169, !dbg !12046

do.cond.169:                                      ; preds = %if.end.168
  br label %do.end.170, !dbg !12047

do.end.170:                                       ; preds = %do.cond.169
  %107 = load i32, i32* %buf_passed, align 4, !dbg !12049, !tbaa !4372
  %tobool171 = icmp ne i32 %107, 0, !dbg !12049
  br i1 %tobool171, label %if.else.193, label %if.then.172, !dbg !12050

if.then.172:                                      ; preds = %do.end.170
  br label %do.body.173, !dbg !12051

do.body.173:                                      ; preds = %if.then.172
  %108 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12052
  call void @llvm.lifetime.start(i64 8, i8* %108) #1, !dbg !12052
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !3373, metadata !3830), !dbg !12054
  %109 = load %struct._object*, %struct._object** %dest, align 8, !dbg !12055, !tbaa !3860
  store %struct._object* %109, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12054, !tbaa !3860
  %110 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12056, !tbaa !3860
  %cmp174 = icmp ne %struct._object* %110, null, !dbg !12057
  br i1 %cmp174, label %if.then.176, label %if.end.190, !dbg !12058

if.then.176:                                      ; preds = %do.body.173
  br label %do.body.177, !dbg !12059

do.body.177:                                      ; preds = %if.then.176
  %111 = bitcast %struct._object** %_py_decref_tmp178 to i8*, !dbg !12061
  call void @llvm.lifetime.start(i64 8, i8* %111) #1, !dbg !12061
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp178, metadata !3376, metadata !3830), !dbg !12063
  %112 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12064, !tbaa !3860
  store %struct._object* %112, %struct._object** %_py_decref_tmp178, align 8, !dbg !12063, !tbaa !3860
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp178, align 8, !dbg !12065, !tbaa !3860
  %ob_refcnt179 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !12067
  %114 = load i64, i64* %ob_refcnt179, align 8, !dbg !12068, !tbaa !4101
  %dec180 = add i64 %114, -1, !dbg !12068
  store i64 %dec180, i64* %ob_refcnt179, align 8, !dbg !12068, !tbaa !4101
  %cmp181 = icmp ne i64 %dec180, 0, !dbg !12069
  br i1 %cmp181, label %if.then.183, label %if.else.184, !dbg !12070

if.then.183:                                      ; preds = %do.body.177
  br label %if.end.187, !dbg !12071

if.else.184:                                      ; preds = %do.body.177
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp178, align 8, !dbg !12073, !tbaa !3860
  %ob_type185 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !12075
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type185, align 8, !dbg !12075, !tbaa !4204
  %tp_dealloc186 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !12076
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc186, align 8, !dbg !12076, !tbaa !4206
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp178, align 8, !dbg !12077, !tbaa !3860
  call void %117(%struct._object* %118), !dbg !12078
  br label %if.end.187

if.end.187:                                       ; preds = %if.else.184, %if.then.183
  %119 = bitcast %struct._object** %_py_decref_tmp178 to i8*, !dbg !12079
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !12079
  br label %do.cond.188, !dbg !12081

do.cond.188:                                      ; preds = %if.end.187
  br label %do.end.189, !dbg !12082

do.end.189:                                       ; preds = %do.cond.188
  br label %if.end.190, !dbg !12084

if.end.190:                                       ; preds = %do.end.189, %do.body.173
  %120 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12086
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !12086
  br label %do.cond.191, !dbg !12089

do.cond.191:                                      ; preds = %if.end.190
  br label %do.end.192, !dbg !12090

do.end.192:                                       ; preds = %do.cond.191
  br label %if.end.194, !dbg !12092

if.else.193:                                      ; preds = %do.end.170
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !12094
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.193, %do.end.192
  store %struct._object* null, %struct._object** %retval, !dbg !12095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12095

cleanup:                                          ; preds = %if.end.194, %if.else.155, %if.then.152, %if.then
  %121 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !12096
  %122 = bitcast i32* %nonblocking to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 4, i8* %122) #1, !dbg !12096
  %123 = bitcast i32* %err to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 4, i8* %123) #1, !dbg !12096
  %124 = bitcast i32* %sockstate to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 4, i8* %124) #1, !dbg !12096
  %125 = bitcast i32* %buf_passed to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 4, i8* %125) #1, !dbg !12096
  %126 = bitcast i32* %count to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 4, i8* %126) #1, !dbg !12096
  %127 = bitcast i32* %len to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 4, i8* %127) #1, !dbg !12096
  %128 = bitcast i8** %mem to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !12096
  %129 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 80, i8* %129) #1, !dbg !12096
  %130 = bitcast %struct._object** %dest to i8*, !dbg !12096
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !12096
  %131 = load %struct._object*, %struct._object** %retval, !dbg !12096
  ret %struct._object* %131, !dbg !12096
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_SSLpending(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %count = alloca i32, align 4
  %_save = alloca %struct._ts*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3381, metadata !3830), !dbg !12097
  %0 = bitcast i32* %count to i8*, !dbg !12098
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !12098
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3382, metadata !3830), !dbg !12099
  store i32 0, i32* %count, align 4, !dbg !12099, !tbaa !4372
  %1 = bitcast %struct._ts** %_save to i8*, !dbg !12100
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12100
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3383, metadata !3830), !dbg !12101
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !12101, !tbaa !3860
  br label %do.body, !dbg !12102

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @_ssl_locks_count, align 4, !dbg !12103, !tbaa !4372
  %cmp = icmp ugt i32 %2, 0, !dbg !12107
  br i1 %cmp, label %if.then, label %if.end, !dbg !12108

if.then:                                          ; preds = %do.body
  %call = call %struct._ts* @PyEval_SaveThread(), !dbg !12109
  store %struct._ts* %call, %struct._ts** %_save, align 8, !dbg !12112, !tbaa !3860
  br label %if.end, !dbg !12113

if.end:                                           ; preds = %if.then, %do.body
  br label %do.cond, !dbg !12114

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12117

do.end:                                           ; preds = %do.cond
  %3 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12119, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %3, i32 0, i32 2, !dbg !12120
  %4 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12120, !tbaa !6955
  %call1 = call i32 @SSL_pending(%struct.ssl_st* %4), !dbg !12121
  store i32 %call1, i32* %count, align 4, !dbg !12122, !tbaa !4372
  br label %do.body.2, !dbg !12123

do.body.2:                                        ; preds = %do.end
  %5 = load i32, i32* @_ssl_locks_count, align 4, !dbg !12124, !tbaa !4372
  %cmp3 = icmp ugt i32 %5, 0, !dbg !12128
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !12129

if.then.4:                                        ; preds = %do.body.2
  %6 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !12130, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %6), !dbg !12133
  br label %if.end.5, !dbg !12134

if.end.5:                                         ; preds = %if.then.4, %do.body.2
  br label %do.cond.6, !dbg !12135

do.cond.6:                                        ; preds = %if.end.5
  br label %do.end.7, !dbg !12138

do.end.7:                                         ; preds = %do.cond.6
  %7 = bitcast %struct._ts** %_save to i8*, !dbg !12140
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !12140
  %8 = load i32, i32* %count, align 4, !dbg !12142, !tbaa !4372
  %cmp8 = icmp slt i32 %8, 0, !dbg !12144
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !12145

if.then.9:                                        ; preds = %do.end.7
  %9 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12146, !tbaa !3860
  %10 = load i32, i32* %count, align 4, !dbg !12147, !tbaa !4372
  %call10 = call %struct._object* @PySSL_SetError(%struct.PySSLSocket* %9, i32 %10, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1658), !dbg !12148
  store %struct._object* %call10, %struct._object** %retval, !dbg !12149
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12149

if.else:                                          ; preds = %do.end.7
  %11 = load i32, i32* %count, align 4, !dbg !12150, !tbaa !4372
  %conv = sext i32 %11 to i64, !dbg !12150
  %call11 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !12151
  store %struct._object* %call11, %struct._object** %retval, !dbg !12152
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12152

cleanup:                                          ; preds = %if.else, %if.then.9
  %12 = bitcast i32* %count to i8*, !dbg !12153
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !12153
  %13 = load %struct._object*, %struct._object** %retval, !dbg !12153
  ret %struct._object* %13, !dbg !12153
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_peercert(%struct.PySSLSocket* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %args.addr = alloca %struct._object*, align 8
  %verification = alloca i32, align 4
  %binary_mode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3387, metadata !3830), !dbg !12154
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3388, metadata !3830), !dbg !12155
  %0 = bitcast i32* %verification to i8*, !dbg !12156
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !12156
  call void @llvm.dbg.declare(metadata i32* %verification, metadata !3389, metadata !3830), !dbg !12157
  %1 = bitcast i32* %binary_mode to i8*, !dbg !12158
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !12158
  call void @llvm.dbg.declare(metadata i32* %binary_mode, metadata !3390, metadata !3830), !dbg !12159
  store i32 0, i32* %binary_mode, align 4, !dbg !12159, !tbaa !4372
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12160, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.226, i32 0, i32 0), i32* %binary_mode), !dbg !12162
  %tobool = icmp ne i32 %call, 0, !dbg !12162
  br i1 %tobool, label %if.end, label %if.then, !dbg !12163

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12164

if.end:                                           ; preds = %entry
  %3 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12165, !tbaa !3860
  %handshake_done = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %3, i32 0, i32 6, !dbg !12167
  %4 = load i8, i8* %handshake_done, align 1, !dbg !12167, !tbaa !6972
  %tobool1 = icmp ne i8 %4, 0, !dbg !12165
  br i1 %tobool1, label %if.end.3, label %if.then.2, !dbg !12168

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12169, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.227, i32 0, i32 0)), !dbg !12171
  store %struct._object* null, %struct._object** %retval, !dbg !12172
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12172

if.end.3:                                         ; preds = %if.end
  %6 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12173, !tbaa !3860
  %peer_cert = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %6, i32 0, i32 4, !dbg !12175
  %7 = load %struct.x509_st*, %struct.x509_st** %peer_cert, align 8, !dbg !12175, !tbaa !6950
  %tobool4 = icmp ne %struct.x509_st* %7, null, !dbg !12173
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !12176

if.then.5:                                        ; preds = %if.end.3
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12177, !tbaa !4101
  %inc = add i64 %8, 1, !dbg !12177
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12177, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12178
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12178

if.end.6:                                         ; preds = %if.end.3
  %9 = load i32, i32* %binary_mode, align 4, !dbg !12179, !tbaa !4372
  %tobool7 = icmp ne i32 %9, 0, !dbg !12179
  br i1 %tobool7, label %if.then.8, label %if.else, !dbg !12181

if.then.8:                                        ; preds = %if.end.6
  %10 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12182, !tbaa !3860
  %peer_cert9 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %10, i32 0, i32 4, !dbg !12184
  %11 = load %struct.x509_st*, %struct.x509_st** %peer_cert9, align 8, !dbg !12184, !tbaa !6950
  %call10 = call %struct._object* @_certificate_to_der(%struct.x509_st* %11), !dbg !12185
  store %struct._object* %call10, %struct._object** %retval, !dbg !12186
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12186

if.else:                                          ; preds = %if.end.6
  %12 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12187, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %12, i32 0, i32 2, !dbg !12189
  %13 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12189, !tbaa !6955
  %call11 = call %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st* %13), !dbg !12190
  %call12 = call i32 @SSL_CTX_get_verify_mode(%struct.ssl_ctx_st* %call11), !dbg !12191
  store i32 %call12, i32* %verification, align 4, !dbg !12192, !tbaa !4372
  %14 = load i32, i32* %verification, align 4, !dbg !12193, !tbaa !4372
  %and = and i32 %14, 1, !dbg !12195
  %cmp = icmp eq i32 %and, 0, !dbg !12196
  br i1 %cmp, label %if.then.13, label %if.else.15, !dbg !12197

if.then.13:                                       ; preds = %if.else
  %call14 = call %struct._object* @PyDict_New(), !dbg !12198
  store %struct._object* %call14, %struct._object** %retval, !dbg !12199
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12199

if.else.15:                                       ; preds = %if.else
  %15 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12200, !tbaa !3860
  %peer_cert16 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %15, i32 0, i32 4, !dbg !12201
  %16 = load %struct.x509_st*, %struct.x509_st** %peer_cert16, align 8, !dbg !12201, !tbaa !6950
  %call17 = call %struct._object* @_decode_certificate(%struct.x509_st* %16), !dbg !12202
  store %struct._object* %call17, %struct._object** %retval, !dbg !12203
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12203

cleanup:                                          ; preds = %if.else.15, %if.then.13, %if.then.8, %if.then.5, %if.then.2, %if.then
  %17 = bitcast i32* %binary_mode to i8*, !dbg !12204
  call void @llvm.lifetime.end(i64 4, i8* %17) #1, !dbg !12204
  %18 = bitcast i32* %verification to i8*, !dbg !12204
  call void @llvm.lifetime.end(i64 4, i8* %18) #1, !dbg !12204
  %19 = load %struct._object*, %struct._object** %retval, !dbg !12204
  ret %struct._object* %19, !dbg !12204
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_cipher(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %retval1 = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %current = alloca %struct.ssl_cipher_st*, align 8
  %cipher_name = alloca i8*, align 8
  %cipher_protocol = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3393, metadata !3830), !dbg !12205
  %0 = bitcast %struct._object** %retval1 to i8*, !dbg !12206
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12206
  call void @llvm.dbg.declare(metadata %struct._object** %retval1, metadata !3394, metadata !3830), !dbg !12207
  %1 = bitcast %struct._object** %v to i8*, !dbg !12206
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12206
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !3395, metadata !3830), !dbg !12208
  %2 = bitcast %struct.ssl_cipher_st** %current to i8*, !dbg !12209
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12209
  call void @llvm.dbg.declare(metadata %struct.ssl_cipher_st** %current, metadata !3396, metadata !3830), !dbg !12210
  %3 = bitcast i8** %cipher_name to i8*, !dbg !12211
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12211
  call void @llvm.dbg.declare(metadata i8** %cipher_name, metadata !3397, metadata !3830), !dbg !12212
  %4 = bitcast i8** %cipher_protocol to i8*, !dbg !12213
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12213
  call void @llvm.dbg.declare(metadata i8** %cipher_protocol, metadata !3398, metadata !3830), !dbg !12214
  %5 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12215, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %5, i32 0, i32 2, !dbg !12217
  %6 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12217, !tbaa !6955
  %cmp = icmp eq %struct.ssl_st* %6, null, !dbg !12218
  br i1 %cmp, label %if.then, label %if.end, !dbg !12219

if.then:                                          ; preds = %entry
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12220, !tbaa !4101
  %inc = add i64 %7, 1, !dbg !12220
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12220, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12221

if.end:                                           ; preds = %entry
  %8 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12222, !tbaa !3860
  %ssl2 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %8, i32 0, i32 2, !dbg !12223
  %9 = load %struct.ssl_st*, %struct.ssl_st** %ssl2, align 8, !dbg !12223, !tbaa !6955
  %call = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* %9), !dbg !12224
  store %struct.ssl_cipher_st* %call, %struct.ssl_cipher_st** %current, align 8, !dbg !12225, !tbaa !3860
  %10 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %current, align 8, !dbg !12226, !tbaa !3860
  %cmp3 = icmp eq %struct.ssl_cipher_st* %10, null, !dbg !12228
  br i1 %cmp3, label %if.then.4, label %if.end.6, !dbg !12229

if.then.4:                                        ; preds = %if.end
  %11 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12230, !tbaa !4101
  %inc5 = add i64 %11, 1, !dbg !12230
  store i64 %inc5, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12230, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12231
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12231

if.end.6:                                         ; preds = %if.end
  %call7 = call %struct._object* @PyTuple_New(i64 3), !dbg !12232
  store %struct._object* %call7, %struct._object** %retval1, align 8, !dbg !12233, !tbaa !3860
  %12 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12234, !tbaa !3860
  %cmp8 = icmp eq %struct._object* %12, null, !dbg !12236
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !12237

if.then.9:                                        ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval, !dbg !12238
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12238

if.end.10:                                        ; preds = %if.end.6
  %13 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %current, align 8, !dbg !12239, !tbaa !3860
  %call11 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* %13), !dbg !12240
  store i8* %call11, i8** %cipher_name, align 8, !dbg !12241, !tbaa !3860
  %14 = load i8*, i8** %cipher_name, align 8, !dbg !12242, !tbaa !3860
  %cmp12 = icmp eq i8* %14, null, !dbg !12244
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !12245

if.then.13:                                       ; preds = %if.end.10
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12246, !tbaa !4101
  %inc14 = add i64 %15, 1, !dbg !12246
  store i64 %inc14, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12246, !tbaa !4101
  %16 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12248, !tbaa !3860
  %17 = bitcast %struct._object* %16 to %struct.PyTupleObject*, !dbg !12249
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %17, i32 0, i32 1, !dbg !12250
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !12251
  store %struct._object* @_Py_NoneStruct, %struct._object** %arrayidx, align 8, !dbg !12252, !tbaa !3860
  br label %if.end.21, !dbg !12253

if.else:                                          ; preds = %if.end.10
  %18 = load i8*, i8** %cipher_name, align 8, !dbg !12254, !tbaa !3860
  %call15 = call %struct._object* @PyUnicode_FromString(i8* %18), !dbg !12256
  store %struct._object* %call15, %struct._object** %v, align 8, !dbg !12257, !tbaa !3860
  %19 = load %struct._object*, %struct._object** %v, align 8, !dbg !12258, !tbaa !3860
  %cmp16 = icmp eq %struct._object* %19, null, !dbg !12260
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !12261

if.then.17:                                       ; preds = %if.else
  br label %fail0, !dbg !12262

if.end.18:                                        ; preds = %if.else
  %20 = load %struct._object*, %struct._object** %v, align 8, !dbg !12263, !tbaa !3860
  %21 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12264, !tbaa !3860
  %22 = bitcast %struct._object* %21 to %struct.PyTupleObject*, !dbg !12265
  %ob_item19 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %22, i32 0, i32 1, !dbg !12266
  %arrayidx20 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item19, i32 0, i64 0, !dbg !12267
  store %struct._object* %20, %struct._object** %arrayidx20, align 8, !dbg !12268, !tbaa !3860
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.18, %if.then.13
  %23 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %current, align 8, !dbg !12269, !tbaa !3860
  %call22 = call i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st* %23), !dbg !12270
  store i8* %call22, i8** %cipher_protocol, align 8, !dbg !12271, !tbaa !3860
  %24 = load i8*, i8** %cipher_protocol, align 8, !dbg !12272, !tbaa !3860
  %cmp23 = icmp eq i8* %24, null, !dbg !12274
  br i1 %cmp23, label %if.then.24, label %if.else.28, !dbg !12275

if.then.24:                                       ; preds = %if.end.21
  %25 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12276, !tbaa !4101
  %inc25 = add i64 %25, 1, !dbg !12276
  store i64 %inc25, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12276, !tbaa !4101
  %26 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12278, !tbaa !3860
  %27 = bitcast %struct._object* %26 to %struct.PyTupleObject*, !dbg !12279
  %ob_item26 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %27, i32 0, i32 1, !dbg !12280
  %arrayidx27 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item26, i32 0, i64 1, !dbg !12281
  store %struct._object* @_Py_NoneStruct, %struct._object** %arrayidx27, align 8, !dbg !12282, !tbaa !3860
  br label %if.end.35, !dbg !12283

if.else.28:                                       ; preds = %if.end.21
  %28 = load i8*, i8** %cipher_protocol, align 8, !dbg !12284, !tbaa !3860
  %call29 = call %struct._object* @PyUnicode_FromString(i8* %28), !dbg !12286
  store %struct._object* %call29, %struct._object** %v, align 8, !dbg !12287, !tbaa !3860
  %29 = load %struct._object*, %struct._object** %v, align 8, !dbg !12288, !tbaa !3860
  %cmp30 = icmp eq %struct._object* %29, null, !dbg !12290
  br i1 %cmp30, label %if.then.31, label %if.end.32, !dbg !12291

if.then.31:                                       ; preds = %if.else.28
  br label %fail0, !dbg !12292

if.end.32:                                        ; preds = %if.else.28
  %30 = load %struct._object*, %struct._object** %v, align 8, !dbg !12293, !tbaa !3860
  %31 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12294, !tbaa !3860
  %32 = bitcast %struct._object* %31 to %struct.PyTupleObject*, !dbg !12295
  %ob_item33 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %32, i32 0, i32 1, !dbg !12296
  %arrayidx34 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item33, i32 0, i64 1, !dbg !12297
  store %struct._object* %30, %struct._object** %arrayidx34, align 8, !dbg !12298, !tbaa !3860
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.32, %if.then.24
  %33 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %current, align 8, !dbg !12299, !tbaa !3860
  %call36 = call i32 @SSL_CIPHER_get_bits(%struct.ssl_cipher_st* %33, i32* null), !dbg !12300
  %conv = sext i32 %call36 to i64, !dbg !12300
  %call37 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !12301
  store %struct._object* %call37, %struct._object** %v, align 8, !dbg !12302, !tbaa !3860
  %34 = load %struct._object*, %struct._object** %v, align 8, !dbg !12303, !tbaa !3860
  %cmp38 = icmp eq %struct._object* %34, null, !dbg !12305
  br i1 %cmp38, label %if.then.40, label %if.end.41, !dbg !12306

if.then.40:                                       ; preds = %if.end.35
  br label %fail0, !dbg !12307

if.end.41:                                        ; preds = %if.end.35
  %35 = load %struct._object*, %struct._object** %v, align 8, !dbg !12308, !tbaa !3860
  %36 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12309, !tbaa !3860
  %37 = bitcast %struct._object* %36 to %struct.PyTupleObject*, !dbg !12310
  %ob_item42 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %37, i32 0, i32 1, !dbg !12311
  %arrayidx43 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item42, i32 0, i64 2, !dbg !12312
  store %struct._object* %35, %struct._object** %arrayidx43, align 8, !dbg !12313, !tbaa !3860
  %38 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12314, !tbaa !3860
  store %struct._object* %38, %struct._object** %retval, !dbg !12315
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12315

fail0:                                            ; preds = %if.then.40, %if.then.31, %if.then.17
  br label %do.body, !dbg !12316

do.body:                                          ; preds = %fail0
  %39 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12317
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !12317
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3399, metadata !3830), !dbg !12319
  %40 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12320, !tbaa !3860
  store %struct._object* %40, %struct._object** %_py_decref_tmp, align 8, !dbg !12319, !tbaa !3860
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12321, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !12323
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !12324, !tbaa !4101
  %dec = add i64 %42, -1, !dbg !12324
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12324, !tbaa !4101
  %cmp44 = icmp ne i64 %dec, 0, !dbg !12325
  br i1 %cmp44, label %if.then.46, label %if.else.47, !dbg !12326

if.then.46:                                       ; preds = %do.body
  br label %if.end.48, !dbg !12327

if.else.47:                                       ; preds = %do.body
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12329, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !12331
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12331, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !12332
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12332, !tbaa !4206
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12333, !tbaa !3860
  call void %45(%struct._object* %46), !dbg !12334
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.47, %if.then.46
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12335
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !12335
  br label %do.cond, !dbg !12337

do.cond:                                          ; preds = %if.end.48
  br label %do.end, !dbg !12338

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12340
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12340

cleanup:                                          ; preds = %do.end, %if.end.41, %if.then.9, %if.then.4, %if.then
  %48 = bitcast i8** %cipher_protocol to i8*, !dbg !12341
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !12341
  %49 = bitcast i8** %cipher_name to i8*, !dbg !12341
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !12341
  %50 = bitcast %struct.ssl_cipher_st** %current to i8*, !dbg !12341
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !12341
  %51 = bitcast %struct._object** %v to i8*, !dbg !12341
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !12341
  %52 = bitcast %struct._object** %retval1 to i8*, !dbg !12341
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !12341
  %53 = load %struct._object*, %struct._object** %retval, !dbg !12341
  ret %struct._object* %53, !dbg !12341
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_selected_npn_protocol(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %out = alloca i8*, align 8
  %outlen = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3403, metadata !3830), !dbg !12342
  %0 = bitcast i8** %out to i8*, !dbg !12343
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12343
  call void @llvm.dbg.declare(metadata i8** %out, metadata !3404, metadata !3830), !dbg !12344
  %1 = bitcast i32* %outlen to i8*, !dbg !12345
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !12345
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !3405, metadata !3830), !dbg !12346
  %2 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12347, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %2, i32 0, i32 2, !dbg !12348
  %3 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12348, !tbaa !6955
  call void @SSL_get0_next_proto_negotiated(%struct.ssl_st* %3, i8** %out, i32* %outlen), !dbg !12349
  %4 = load i8*, i8** %out, align 8, !dbg !12350, !tbaa !3860
  %cmp = icmp eq i8* %4, null, !dbg !12352
  br i1 %cmp, label %if.then, label %if.end, !dbg !12353

if.then:                                          ; preds = %entry
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12354, !tbaa !4101
  %inc = add i64 %5, 1, !dbg !12354
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12354, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12355
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12355

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %out, align 8, !dbg !12356, !tbaa !3860
  %7 = load i32, i32* %outlen, align 4, !dbg !12357, !tbaa !4372
  %conv = zext i32 %7 to i64, !dbg !12357
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* %6, i64 %conv), !dbg !12358
  store %struct._object* %call, %struct._object** %retval, !dbg !12359
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12359

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast i32* %outlen to i8*, !dbg !12360
  call void @llvm.lifetime.end(i64 4, i8* %8) #1, !dbg !12360
  %9 = bitcast i8** %out to i8*, !dbg !12360
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !12360
  %10 = load %struct._object*, %struct._object** %retval, !dbg !12360
  ret %struct._object* %10, !dbg !12360
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_compression(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %comp_method = alloca %struct.comp_method_st*, align 8
  %short_name = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3408, metadata !3830), !dbg !12361
  %0 = bitcast %struct.comp_method_st** %comp_method to i8*, !dbg !12362
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12362
  call void @llvm.dbg.declare(metadata %struct.comp_method_st** %comp_method, metadata !3409, metadata !3830), !dbg !12363
  %1 = bitcast i8** %short_name to i8*, !dbg !12364
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12364
  call void @llvm.dbg.declare(metadata i8** %short_name, metadata !3412, metadata !3830), !dbg !12365
  %2 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12366, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %2, i32 0, i32 2, !dbg !12368
  %3 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12368, !tbaa !6955
  %cmp = icmp eq %struct.ssl_st* %3, null, !dbg !12369
  br i1 %cmp, label %if.then, label %if.end, !dbg !12370

if.then:                                          ; preds = %entry
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12371, !tbaa !4101
  %inc = add i64 %4, 1, !dbg !12371
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12371, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12372
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12372

if.end:                                           ; preds = %entry
  %5 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12373, !tbaa !3860
  %ssl1 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %5, i32 0, i32 2, !dbg !12374
  %6 = load %struct.ssl_st*, %struct.ssl_st** %ssl1, align 8, !dbg !12374, !tbaa !6955
  %call = call %struct.comp_method_st* @SSL_get_current_compression(%struct.ssl_st* %6), !dbg !12375
  store %struct.comp_method_st* %call, %struct.comp_method_st** %comp_method, align 8, !dbg !12376, !tbaa !3860
  %7 = load %struct.comp_method_st*, %struct.comp_method_st** %comp_method, align 8, !dbg !12377, !tbaa !3860
  %cmp2 = icmp eq %struct.comp_method_st* %7, null, !dbg !12379
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false, !dbg !12380

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.comp_method_st*, %struct.comp_method_st** %comp_method, align 8, !dbg !12381, !tbaa !3860
  %type = getelementptr inbounds %struct.comp_method_st, %struct.comp_method_st* %8, i32 0, i32 0, !dbg !12383
  %9 = load i32, i32* %type, align 4, !dbg !12383, !tbaa !12384
  %cmp3 = icmp eq i32 %9, 0, !dbg !12386
  br i1 %cmp3, label %if.then.4, label %if.end.6, !dbg !12387

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12388, !tbaa !4101
  %inc5 = add i64 %10, 1, !dbg !12388
  store i64 %inc5, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12388, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12389
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12389

if.end.6:                                         ; preds = %lor.lhs.false
  %11 = load %struct.comp_method_st*, %struct.comp_method_st** %comp_method, align 8, !dbg !12390, !tbaa !3860
  %type7 = getelementptr inbounds %struct.comp_method_st, %struct.comp_method_st* %11, i32 0, i32 0, !dbg !12391
  %12 = load i32, i32* %type7, align 4, !dbg !12391, !tbaa !12384
  %call8 = call i8* @OBJ_nid2sn(i32 %12), !dbg !12392
  store i8* %call8, i8** %short_name, align 8, !dbg !12393, !tbaa !3860
  %13 = load i8*, i8** %short_name, align 8, !dbg !12394, !tbaa !3860
  %cmp9 = icmp eq i8* %13, null, !dbg !12396
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !12397

if.then.10:                                       ; preds = %if.end.6
  %14 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12398, !tbaa !4101
  %inc11 = add i64 %14, 1, !dbg !12398
  store i64 %inc11, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12398, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12399
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12399

if.end.12:                                        ; preds = %if.end.6
  %15 = load i8*, i8** %short_name, align 8, !dbg !12400, !tbaa !3860
  %call13 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %15), !dbg !12401
  store %struct._object* %call13, %struct._object** %retval, !dbg !12402
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12402

cleanup:                                          ; preds = %if.end.12, %if.then.10, %if.then.4, %if.then
  %16 = bitcast i8** %short_name to i8*, !dbg !12403
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !12403
  %17 = bitcast %struct.comp_method_st** %comp_method to i8*, !dbg !12403
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !12403
  %18 = load %struct._object*, %struct._object** %retval, !dbg !12403
  ret %struct._object* %18, !dbg !12403
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_SSLshutdown(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %err = alloca i32, align 4
  %ssl_err = alloca i32, align 4
  %sockstate = alloca i32, align 4
  %nonblocking = alloca i32, align 4
  %zeros = alloca i32, align 4
  %sock = alloca %struct.PySocketSockObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp89 = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3415, metadata !3830), !dbg !12404
  %0 = bitcast i32* %err to i8*, !dbg !12405
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3416, metadata !3830), !dbg !12406
  %1 = bitcast i32* %ssl_err to i8*, !dbg !12405
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %ssl_err, metadata !3417, metadata !3830), !dbg !12407
  %2 = bitcast i32* %sockstate to i8*, !dbg !12405
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %sockstate, metadata !3418, metadata !3830), !dbg !12408
  %3 = bitcast i32* %nonblocking to i8*, !dbg !12405
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %nonblocking, metadata !3419, metadata !3830), !dbg !12409
  %4 = bitcast i32* %zeros to i8*, !dbg !12410
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !12410
  call void @llvm.dbg.declare(metadata i32* %zeros, metadata !3420, metadata !3830), !dbg !12411
  store i32 0, i32* %zeros, align 4, !dbg !12411, !tbaa !4372
  %5 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !12412
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !12412
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %sock, metadata !3421, metadata !3830), !dbg !12413
  %6 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12414, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %6, i32 0, i32 1, !dbg !12415
  %7 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !12415, !tbaa !6959
  %call = call %struct._object* @PyWeakref_GetObject(%struct._object* %7), !dbg !12416
  %8 = bitcast %struct._object* %call to %struct.PySocketSockObject*, !dbg !12417
  store %struct.PySocketSockObject* %8, %struct.PySocketSockObject** %sock, align 8, !dbg !12413, !tbaa !3860
  %9 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12418, !tbaa !3860
  %10 = bitcast %struct.PySocketSockObject* %9 to %struct._object*, !dbg !12420
  %cmp = icmp eq %struct._object* %10, @_Py_NoneStruct, !dbg !12421
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12422

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12423, !tbaa !3860
  %sock_fd = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %11, i32 0, i32 1, !dbg !12425
  %12 = load i32, i32* %sock_fd, align 4, !dbg !12425, !tbaa !7031
  %cmp1 = icmp slt i32 %12, 0, !dbg !12426
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12427

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = call %struct._object* @_setSSLError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.205, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1806), !dbg !12428
  store %struct._object* null, %struct._object** %retval, !dbg !12430
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12430

if.end:                                           ; preds = %lor.lhs.false
  %13 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12431, !tbaa !3860
  %14 = bitcast %struct.PySocketSockObject* %13 to %struct._object*, !dbg !12432
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !12433
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !12434, !tbaa !4101
  %inc = add i64 %15, 1, !dbg !12434
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12434, !tbaa !4101
  %16 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12435, !tbaa !3860
  %sock_timeout = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %16, i32 0, i32 6, !dbg !12436
  %17 = load double, double* %sock_timeout, align 8, !dbg !12436, !tbaa !7052
  %cmp3 = fcmp oge double %17, 0.000000e+00, !dbg !12437
  %conv = zext i1 %cmp3 to i32, !dbg !12437
  store i32 %conv, i32* %nonblocking, align 4, !dbg !12438, !tbaa !4372
  %18 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12439, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %18, i32 0, i32 2, !dbg !12440
  %19 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12440, !tbaa !6955
  %call4 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %19), !dbg !12441
  %20 = load i32, i32* %nonblocking, align 4, !dbg !12442, !tbaa !4372
  %conv5 = sext i32 %20 to i64, !dbg !12443
  %call6 = call i64 @BIO_ctrl(%struct.bio_st* %call4, i32 102, i64 %conv5, i8* null), !dbg !12444
  %21 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12445, !tbaa !3860
  %ssl7 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %21, i32 0, i32 2, !dbg !12446
  %22 = load %struct.ssl_st*, %struct.ssl_st** %ssl7, align 8, !dbg !12446, !tbaa !6955
  %call8 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %22), !dbg !12447
  %23 = load i32, i32* %nonblocking, align 4, !dbg !12448, !tbaa !4372
  %conv9 = sext i32 %23 to i64, !dbg !12449
  %call10 = call i64 @BIO_ctrl(%struct.bio_st* %call8, i32 102, i64 %conv9, i8* null), !dbg !12450
  br label %while.cond, !dbg !12451

while.cond:                                       ; preds = %if.end.73, %if.end.39, %if.end
  br label %while.body, !dbg !12452

while.body:                                       ; preds = %while.cond
  %24 = bitcast %struct._ts** %_save to i8*, !dbg !12455
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !12455
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3422, metadata !3830), !dbg !12456
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !12456, !tbaa !3860
  br label %do.body, !dbg !12457

do.body:                                          ; preds = %while.body
  %25 = load i32, i32* @_ssl_locks_count, align 4, !dbg !12458, !tbaa !4372
  %cmp11 = icmp ugt i32 %25, 0, !dbg !12462
  br i1 %cmp11, label %if.then.13, label %if.end.15, !dbg !12463

if.then.13:                                       ; preds = %do.body
  %call14 = call %struct._ts* @PyEval_SaveThread(), !dbg !12464
  store %struct._ts* %call14, %struct._ts** %_save, align 8, !dbg !12467, !tbaa !3860
  br label %if.end.15, !dbg !12468

if.end.15:                                        ; preds = %if.then.13, %do.body
  br label %do.cond, !dbg !12469

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !12472

do.end:                                           ; preds = %do.cond
  %26 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12474, !tbaa !3860
  %shutdown_seen_zero = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %26, i32 0, i32 5, !dbg !12476
  %27 = load i8, i8* %shutdown_seen_zero, align 1, !dbg !12476, !tbaa !6968
  %tobool = icmp ne i8 %27, 0, !dbg !12474
  br i1 %tobool, label %if.then.16, label %if.end.18, !dbg !12477

if.then.16:                                       ; preds = %do.end
  %28 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12478, !tbaa !3860
  %ssl17 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %28, i32 0, i32 2, !dbg !12479
  %29 = load %struct.ssl_st*, %struct.ssl_st** %ssl17, align 8, !dbg !12479, !tbaa !6955
  call void @SSL_set_read_ahead(%struct.ssl_st* %29, i32 0), !dbg !12480
  br label %if.end.18, !dbg !12480

if.end.18:                                        ; preds = %if.then.16, %do.end
  %30 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12481, !tbaa !3860
  %ssl19 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %30, i32 0, i32 2, !dbg !12482
  %31 = load %struct.ssl_st*, %struct.ssl_st** %ssl19, align 8, !dbg !12482, !tbaa !6955
  %call20 = call i32 @SSL_shutdown(%struct.ssl_st* %31), !dbg !12483
  store i32 %call20, i32* %err, align 4, !dbg !12484, !tbaa !4372
  br label %do.body.21, !dbg !12485

do.body.21:                                       ; preds = %if.end.18
  %32 = load i32, i32* @_ssl_locks_count, align 4, !dbg !12486, !tbaa !4372
  %cmp22 = icmp ugt i32 %32, 0, !dbg !12490
  br i1 %cmp22, label %if.then.24, label %if.end.25, !dbg !12491

if.then.24:                                       ; preds = %do.body.21
  %33 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !12492, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %33), !dbg !12495
  br label %if.end.25, !dbg !12496

if.end.25:                                        ; preds = %if.then.24, %do.body.21
  br label %do.cond.26, !dbg !12497

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !12500

do.end.27:                                        ; preds = %do.cond.26
  %34 = bitcast %struct._ts** %_save to i8*, !dbg !12502
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !12502
  %35 = load i32, i32* %err, align 4, !dbg !12504, !tbaa !4372
  %cmp28 = icmp sgt i32 %35, 0, !dbg !12506
  br i1 %cmp28, label %if.then.30, label %if.end.31, !dbg !12507

if.then.30:                                       ; preds = %do.end.27
  br label %while.end, !dbg !12508

if.end.31:                                        ; preds = %do.end.27
  %36 = load i32, i32* %err, align 4, !dbg !12509, !tbaa !4372
  %cmp32 = icmp eq i32 %36, 0, !dbg !12511
  br i1 %cmp32, label %if.then.34, label %if.end.41, !dbg !12512

if.then.34:                                       ; preds = %if.end.31
  %37 = load i32, i32* %zeros, align 4, !dbg !12513, !tbaa !4372
  %inc35 = add i32 %37, 1, !dbg !12513
  store i32 %inc35, i32* %zeros, align 4, !dbg !12513, !tbaa !4372
  %cmp36 = icmp sgt i32 %inc35, 1, !dbg !12516
  br i1 %cmp36, label %if.then.38, label %if.end.39, !dbg !12517

if.then.38:                                       ; preds = %if.then.34
  br label %while.end, !dbg !12518

if.end.39:                                        ; preds = %if.then.34
  %38 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12519, !tbaa !3860
  %shutdown_seen_zero40 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %38, i32 0, i32 5, !dbg !12520
  store i8 1, i8* %shutdown_seen_zero40, align 1, !dbg !12521, !tbaa !6968
  br label %while.cond, !dbg !12522

if.end.41:                                        ; preds = %if.end.31
  %39 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12523, !tbaa !3860
  %ssl42 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %39, i32 0, i32 2, !dbg !12524
  %40 = load %struct.ssl_st*, %struct.ssl_st** %ssl42, align 8, !dbg !12524, !tbaa !6955
  %41 = load i32, i32* %err, align 4, !dbg !12525, !tbaa !4372
  %call43 = call i32 @SSL_get_error(%struct.ssl_st* %40, i32 %41), !dbg !12526
  store i32 %call43, i32* %ssl_err, align 4, !dbg !12527, !tbaa !4372
  %42 = load i32, i32* %ssl_err, align 4, !dbg !12528, !tbaa !4372
  %cmp44 = icmp eq i32 %42, 2, !dbg !12530
  br i1 %cmp44, label %if.then.46, label %if.else, !dbg !12531

if.then.46:                                       ; preds = %if.end.41
  %43 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12532, !tbaa !3860
  %call47 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %43, i32 0), !dbg !12533
  store i32 %call47, i32* %sockstate, align 4, !dbg !12534, !tbaa !4372
  br label %if.end.54, !dbg !12535

if.else:                                          ; preds = %if.end.41
  %44 = load i32, i32* %ssl_err, align 4, !dbg !12536, !tbaa !4372
  %cmp48 = icmp eq i32 %44, 3, !dbg !12538
  br i1 %cmp48, label %if.then.50, label %if.else.52, !dbg !12539

if.then.50:                                       ; preds = %if.else
  %45 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12540, !tbaa !3860
  %call51 = call i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %45, i32 1), !dbg !12541
  store i32 %call51, i32* %sockstate, align 4, !dbg !12542, !tbaa !4372
  br label %if.end.53, !dbg !12543

if.else.52:                                       ; preds = %if.else
  br label %while.end, !dbg !12544

if.end.53:                                        ; preds = %if.then.50
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %if.then.46
  %46 = load i32, i32* %sockstate, align 4, !dbg !12545, !tbaa !4372
  %cmp55 = icmp eq i32 %46, 2, !dbg !12547
  br i1 %cmp55, label %if.then.57, label %if.else.63, !dbg !12548

if.then.57:                                       ; preds = %if.end.54
  %47 = load i32, i32* %ssl_err, align 4, !dbg !12549, !tbaa !4372
  %cmp58 = icmp eq i32 %47, 2, !dbg !12552
  br i1 %cmp58, label %if.then.60, label %if.else.61, !dbg !12553

if.then.60:                                       ; preds = %if.then.57
  %48 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !12554, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %48, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0)), !dbg !12555
  br label %if.end.62, !dbg !12555

if.else.61:                                       ; preds = %if.then.57
  %49 = load %struct._object*, %struct._object** getelementptr inbounds (%struct.PySocketModule_APIObject, %struct.PySocketModule_APIObject* @PySocketModule, i32 0, i32 2), align 8, !dbg !12556, !tbaa !11245
  call void @PyErr_SetString(%struct._object* %49, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.220, i32 0, i32 0)), !dbg !12557
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.61, %if.then.60
  br label %error, !dbg !12558

if.else.63:                                       ; preds = %if.end.54
  %50 = load i32, i32* %sockstate, align 4, !dbg !12559, !tbaa !4372
  %cmp64 = icmp eq i32 %50, 4, !dbg !12561
  br i1 %cmp64, label %if.then.66, label %if.else.67, !dbg !12562

if.then.66:                                       ; preds = %if.else.63
  %51 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !12563, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %51, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.222, i32 0, i32 0)), !dbg !12565
  br label %error, !dbg !12566

if.else.67:                                       ; preds = %if.else.63
  %52 = load i32, i32* %sockstate, align 4, !dbg !12567, !tbaa !4372
  %cmp68 = icmp ne i32 %52, 5, !dbg !12569
  br i1 %cmp68, label %if.then.70, label %if.end.71, !dbg !12570

if.then.70:                                       ; preds = %if.else.67
  br label %while.end, !dbg !12571

if.end.71:                                        ; preds = %if.else.67
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72
  br label %while.cond, !dbg !12451

while.end:                                        ; preds = %if.then.70, %if.else.52, %if.then.38, %if.then.30
  %53 = load i32, i32* %err, align 4, !dbg !12572, !tbaa !4372
  %cmp74 = icmp slt i32 %53, 0, !dbg !12573
  br i1 %cmp74, label %if.then.76, label %if.else.87, !dbg !12574

if.then.76:                                       ; preds = %while.end
  br label %do.body.77, !dbg !12575

do.body.77:                                       ; preds = %if.then.76
  %54 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12576
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !12576
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3425, metadata !3830), !dbg !12578
  %55 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12579, !tbaa !3860
  %56 = bitcast %struct.PySocketSockObject* %55 to %struct._object*, !dbg !12580
  store %struct._object* %56, %struct._object** %_py_decref_tmp, align 8, !dbg !12578, !tbaa !3860
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12581, !tbaa !3860
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !12583
  %58 = load i64, i64* %ob_refcnt78, align 8, !dbg !12584, !tbaa !4101
  %dec = add i64 %58, -1, !dbg !12584
  store i64 %dec, i64* %ob_refcnt78, align 8, !dbg !12584, !tbaa !4101
  %cmp79 = icmp ne i64 %dec, 0, !dbg !12585
  br i1 %cmp79, label %if.then.81, label %if.else.82, !dbg !12586

if.then.81:                                       ; preds = %do.body.77
  br label %if.end.83, !dbg !12587

if.else.82:                                       ; preds = %do.body.77
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12589, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !12591
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12591, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !12592
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12592, !tbaa !4206
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12593, !tbaa !3860
  call void %61(%struct._object* %62), !dbg !12594
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.82, %if.then.81
  %63 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12595
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !12595
  br label %do.cond.84, !dbg !12597

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !12598

do.end.85:                                        ; preds = %do.cond.84
  %64 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12600, !tbaa !3860
  %65 = load i32, i32* %err, align 4, !dbg !12601, !tbaa !4372
  %call86 = call %struct._object* @PySSL_SetError(%struct.PySSLSocket* %64, i32 %65, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 1873), !dbg !12602
  store %struct._object* %call86, %struct._object** %retval, !dbg !12603
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12603

if.else.87:                                       ; preds = %while.end
  %66 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12604, !tbaa !3860
  %67 = bitcast %struct.PySocketSockObject* %66 to %struct._object*, !dbg !12605
  store %struct._object* %67, %struct._object** %retval, !dbg !12606
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12606

error:                                            ; preds = %if.then.66, %if.end.62
  br label %do.body.88, !dbg !12607

do.body.88:                                       ; preds = %error
  %68 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !12608
  call void @llvm.lifetime.start(i64 8, i8* %68) #1, !dbg !12608
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp89, metadata !3429, metadata !3830), !dbg !12610
  %69 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %sock, align 8, !dbg !12611, !tbaa !3860
  %70 = bitcast %struct.PySocketSockObject* %69 to %struct._object*, !dbg !12612
  store %struct._object* %70, %struct._object** %_py_decref_tmp89, align 8, !dbg !12610, !tbaa !3860
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !12613, !tbaa !3860
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !12615
  %72 = load i64, i64* %ob_refcnt90, align 8, !dbg !12616, !tbaa !4101
  %dec91 = add i64 %72, -1, !dbg !12616
  store i64 %dec91, i64* %ob_refcnt90, align 8, !dbg !12616, !tbaa !4101
  %cmp92 = icmp ne i64 %dec91, 0, !dbg !12617
  br i1 %cmp92, label %if.then.94, label %if.else.95, !dbg !12618

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98, !dbg !12619

if.else.95:                                       ; preds = %do.body.88
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !12621, !tbaa !3860
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !12623
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8, !dbg !12623, !tbaa !4204
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !12624
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8, !dbg !12624, !tbaa !4206
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !12625, !tbaa !3860
  call void %75(%struct._object* %76), !dbg !12626
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  %77 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !12627
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !12627
  br label %do.cond.99, !dbg !12629

do.cond.99:                                       ; preds = %if.end.98
  br label %do.end.100, !dbg !12630

do.end.100:                                       ; preds = %do.cond.99
  store %struct._object* null, %struct._object** %retval, !dbg !12632
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12632

cleanup:                                          ; preds = %do.end.100, %if.else.87, %do.end.85, %if.then
  %78 = bitcast %struct.PySocketSockObject** %sock to i8*, !dbg !12633
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !12633
  %79 = bitcast i32* %zeros to i8*, !dbg !12633
  call void @llvm.lifetime.end(i64 4, i8* %79) #1, !dbg !12633
  %80 = bitcast i32* %nonblocking to i8*, !dbg !12633
  call void @llvm.lifetime.end(i64 4, i8* %80) #1, !dbg !12633
  %81 = bitcast i32* %sockstate to i8*, !dbg !12633
  call void @llvm.lifetime.end(i64 4, i8* %81) #1, !dbg !12633
  %82 = bitcast i32* %ssl_err to i8*, !dbg !12633
  call void @llvm.lifetime.end(i64 4, i8* %82) #1, !dbg !12633
  %83 = bitcast i32* %err to i8*, !dbg !12633
  call void @llvm.lifetime.end(i64 4, i8* %83) #1, !dbg !12633
  %84 = load %struct._object*, %struct._object** %retval, !dbg !12633
  ret %struct._object* %84, !dbg !12633
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_tls_unique_cb(%struct.PySSLSocket* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %retval1 = alloca %struct._object*, align 8
  %buf = alloca [128 x i8], align 16
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3433, metadata !3830), !dbg !12634
  %0 = bitcast %struct._object** %retval1 to i8*, !dbg !12635
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12635
  call void @llvm.dbg.declare(metadata %struct._object** %retval1, metadata !3434, metadata !3830), !dbg !12636
  store %struct._object* null, %struct._object** %retval1, align 8, !dbg !12636, !tbaa !3860
  %1 = bitcast [128 x i8]* %buf to i8*, !dbg !12637
  call void @llvm.lifetime.start(i64 128, i8* %1) #1, !dbg !12637
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !3435, metadata !3830), !dbg !12638
  %2 = bitcast i64* %len to i8*, !dbg !12639
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12639
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3437, metadata !3830), !dbg !12640
  %3 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12641, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %3, i32 0, i32 2, !dbg !12643
  %4 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12643, !tbaa !6955
  %call = call i64 @SSL_ctrl(%struct.ssl_st* %4, i32 8, i64 0, i8* null), !dbg !12644
  %5 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12645, !tbaa !3860
  %socket_type = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %5, i32 0, i32 7, !dbg !12646
  %6 = load i32, i32* %socket_type, align 4, !dbg !12646, !tbaa !7116
  %tobool = icmp ne i32 %6, 0, !dbg !12647
  %lnot = xor i1 %tobool, true, !dbg !12647
  %lnot.ext = zext i1 %lnot to i32, !dbg !12647
  %conv = sext i32 %lnot.ext to i64, !dbg !12647
  %xor = xor i64 %call, %conv, !dbg !12648
  %tobool2 = icmp ne i64 %xor, 0, !dbg !12648
  br i1 %tobool2, label %if.then, label %if.else, !dbg !12649

if.then:                                          ; preds = %entry
  %7 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12650, !tbaa !3860
  %ssl3 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %7, i32 0, i32 2, !dbg !12652
  %8 = load %struct.ssl_st*, %struct.ssl_st** %ssl3, align 8, !dbg !12652, !tbaa !6955
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !12653
  %call4 = call i64 @SSL_get_finished(%struct.ssl_st* %8, i8* %arraydecay, i64 128), !dbg !12654
  store i64 %call4, i64* %len, align 8, !dbg !12655, !tbaa !4354
  br label %if.end, !dbg !12656

if.else:                                          ; preds = %entry
  %9 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12657, !tbaa !3860
  %ssl5 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %9, i32 0, i32 2, !dbg !12659
  %10 = load %struct.ssl_st*, %struct.ssl_st** %ssl5, align 8, !dbg !12659, !tbaa !6955
  %arraydecay6 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !12660
  %call7 = call i64 @SSL_get_peer_finished(%struct.ssl_st* %10, i8* %arraydecay6, i64 128), !dbg !12661
  store i64 %call7, i64* %len, align 8, !dbg !12662, !tbaa !4354
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i64, i64* %len, align 8, !dbg !12663, !tbaa !4354
  %cmp = icmp eq i64 %11, 0, !dbg !12665
  br i1 %cmp, label %if.then.9, label %if.end.10, !dbg !12666

if.then.9:                                        ; preds = %if.end
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12667, !tbaa !4101
  %inc = add i64 %12, 1, !dbg !12667
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12667, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12668
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12668

if.end.10:                                        ; preds = %if.end
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !12669
  %13 = load i64, i64* %len, align 8, !dbg !12670, !tbaa !4354
  %call12 = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay11, i64 %13), !dbg !12671
  store %struct._object* %call12, %struct._object** %retval1, align 8, !dbg !12672, !tbaa !3860
  %14 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !12673, !tbaa !3860
  store %struct._object* %14, %struct._object** %retval, !dbg !12674
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12674

cleanup:                                          ; preds = %if.end.10, %if.then.9
  %15 = bitcast i64* %len to i8*, !dbg !12675
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12675
  %16 = bitcast [128 x i8]* %buf to i8*, !dbg !12675
  call void @llvm.lifetime.end(i64 128, i8* %16) #1, !dbg !12675
  %17 = bitcast %struct._object** %retval1 to i8*, !dbg !12675
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !12675
  %18 = load %struct._object*, %struct._object** %retval, !dbg !12675
  ret %struct._object* %18, !dbg !12675
}

declare i32 @SSL_do_handshake(%struct.ssl_st*) #3

declare i32 @SSL_get_error(%struct.ssl_st*, i32) #3

declare i32 @PyErr_CheckSignals() #3

; Function Attrs: nounwind uwtable
define internal i32 @check_socket_and_wait_for_timeout(%struct.PySocketSockObject* %s, i32 %writing) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.PySocketSockObject*, align 8
  %writing.addr = alloca i32, align 4
  %fds = alloca %struct.fd_set, align 8
  %tv = alloca %struct.timeval, align 8
  %rc = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %pollfd = alloca %struct.pollfd, align 4
  %timeout = alloca i32, align 4
  %_save = alloca %struct._ts*, align 8
  %_save23 = alloca %struct._ts*, align 8
  store %struct.PySocketSockObject* %s, %struct.PySocketSockObject** %s.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %s.addr, metadata !3278, metadata !3830), !dbg !12676
  store i32 %writing, i32* %writing.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %writing.addr, metadata !3279, metadata !3830), !dbg !12677
  %0 = bitcast %struct.fd_set* %fds to i8*, !dbg !12678
  call void @llvm.lifetime.start(i64 128, i8* %0) #1, !dbg !12678
  call void @llvm.dbg.declare(metadata %struct.fd_set* %fds, metadata !3280, metadata !3830), !dbg !12679
  %1 = bitcast %struct.timeval* %tv to i8*, !dbg !12680
  call void @llvm.lifetime.start(i64 16, i8* %1) #1, !dbg !12680
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !3288, metadata !3830), !dbg !12681
  %2 = bitcast i32* %rc to i8*, !dbg !12682
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !12682
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !3289, metadata !3830), !dbg !12683
  %3 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s.addr, align 8, !dbg !12684, !tbaa !3860
  %sock_timeout = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %3, i32 0, i32 6, !dbg !12686
  %4 = load double, double* %sock_timeout, align 8, !dbg !12686, !tbaa !7052
  %cmp = fcmp olt double %4, 0.000000e+00, !dbg !12687
  br i1 %cmp, label %if.then, label %if.else, !dbg !12688

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !12689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12689

if.else:                                          ; preds = %entry
  %5 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s.addr, align 8, !dbg !12690, !tbaa !3860
  %sock_timeout1 = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %5, i32 0, i32 6, !dbg !12692
  %6 = load double, double* %sock_timeout1, align 8, !dbg !12692, !tbaa !7052
  %cmp2 = fcmp oeq double %6, 0.000000e+00, !dbg !12693
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !12694

if.then.3:                                        ; preds = %if.else
  store i32 0, i32* %retval, !dbg !12695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12695

if.end:                                           ; preds = %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end
  %7 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s.addr, align 8, !dbg !12696, !tbaa !3860
  %sock_fd = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %7, i32 0, i32 1, !dbg !12698
  %8 = load i32, i32* %sock_fd, align 4, !dbg !12698, !tbaa !7031
  %cmp5 = icmp slt i32 %8, 0, !dbg !12699
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12700

if.then.6:                                        ; preds = %if.end.4
  store i32 3, i32* %retval, !dbg !12701
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12701

if.end.7:                                         ; preds = %if.end.4
  %9 = bitcast %struct.pollfd* %pollfd to i8*, !dbg !12702
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !12702
  call void @llvm.dbg.declare(metadata %struct.pollfd* %pollfd, metadata !3290, metadata !3830), !dbg !12703
  %10 = bitcast i32* %timeout to i8*, !dbg !12704
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !12704
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !3299, metadata !3830), !dbg !12705
  %11 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s.addr, align 8, !dbg !12706, !tbaa !3860
  %sock_fd8 = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %11, i32 0, i32 1, !dbg !12707
  %12 = load i32, i32* %sock_fd8, align 4, !dbg !12707, !tbaa !7031
  %fd = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pollfd, i32 0, i32 0, !dbg !12708
  store i32 %12, i32* %fd, align 4, !dbg !12709, !tbaa !12710
  %13 = load i32, i32* %writing.addr, align 4, !dbg !12713, !tbaa !4372
  %tobool = icmp ne i32 %13, 0, !dbg !12713
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !12713
  %conv = trunc i32 %cond to i16, !dbg !12713
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pollfd, i32 0, i32 1, !dbg !12714
  store i16 %conv, i16* %events, align 2, !dbg !12715, !tbaa !12716
  %14 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s.addr, align 8, !dbg !12717, !tbaa !3860
  %sock_timeout9 = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %14, i32 0, i32 6, !dbg !12718
  %15 = load double, double* %sock_timeout9, align 8, !dbg !12718, !tbaa !7052
  %mul = fmul double %15, 1.000000e+03, !dbg !12719
  %add = fadd double %mul, 5.000000e-01, !dbg !12720
  %conv10 = fptosi double %add to i32, !dbg !12721
  store i32 %conv10, i32* %timeout, align 4, !dbg !12722, !tbaa !4372
  %16 = bitcast %struct._ts** %_save to i8*, !dbg !12723
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !12723
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !3300, metadata !3830), !dbg !12724
  store %struct._ts* null, %struct._ts** %_save, align 8, !dbg !12724, !tbaa !3860
  br label %do.body, !dbg !12725

do.body:                                          ; preds = %if.end.7
  %17 = load i32, i32* @_ssl_locks_count, align 4, !dbg !12726, !tbaa !4372
  %cmp11 = icmp ugt i32 %17, 0, !dbg !12730
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !12731

if.then.13:                                       ; preds = %do.body
  %call = call %struct._ts* @PyEval_SaveThread(), !dbg !12732
  store %struct._ts* %call, %struct._ts** %_save, align 8, !dbg !12735, !tbaa !3860
  br label %if.end.14, !dbg !12736

if.end.14:                                        ; preds = %if.then.13, %do.body
  br label %do.cond, !dbg !12737

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !12740

do.end:                                           ; preds = %do.cond
  %18 = load i32, i32* %timeout, align 4, !dbg !12742, !tbaa !4372
  %call15 = call i32 @poll(%struct.pollfd* %pollfd, i64 1, i32 %18), !dbg !12743
  store i32 %call15, i32* %rc, align 4, !dbg !12744, !tbaa !4372
  br label %do.body.16, !dbg !12745

do.body.16:                                       ; preds = %do.end
  %19 = load i32, i32* @_ssl_locks_count, align 4, !dbg !12746, !tbaa !4372
  %cmp17 = icmp ugt i32 %19, 0, !dbg !12750
  br i1 %cmp17, label %if.then.19, label %if.end.20, !dbg !12751

if.then.19:                                       ; preds = %do.body.16
  %20 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !12752, !tbaa !3860
  call void @PyEval_RestoreThread(%struct._ts* %20), !dbg !12755
  br label %if.end.20, !dbg !12756

if.end.20:                                        ; preds = %if.then.19, %do.body.16
  br label %do.cond.21, !dbg !12757

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !12760

do.end.22:                                        ; preds = %do.cond.21
  %21 = bitcast %struct._ts** %_save to i8*, !dbg !12762
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !12762
  store i32 6, i32* %cleanup.dest.slot
  %22 = bitcast i32* %timeout to i8*, !dbg !12764
  call void @llvm.lifetime.end(i64 4, i8* %22) #1, !dbg !12764
  %23 = bitcast %struct.pollfd* %pollfd to i8*, !dbg !12764
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !12764
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %do.end.22
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 6
  br i1 %SwitchLeaf, label %normal_return, label %NewDefault

normal_return:                                    ; preds = %LeafBlock
  %24 = load i32, i32* %rc, align 4, !dbg !12765, !tbaa !4372
  %cmp24 = icmp eq i32 %24, 0, !dbg !12766
  %cond26 = select i1 %cmp24, i32 2, i32 5, !dbg !12765
  store i32 %cond26, i32* %retval, !dbg !12767
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12767

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup

cleanup:                                          ; preds = %NewDefault, %normal_return, %if.then.6, %if.then.3, %if.then
  %25 = bitcast i32* %rc to i8*, !dbg !12768
  call void @llvm.lifetime.end(i64 4, i8* %25) #1, !dbg !12768
  %26 = bitcast %struct.timeval* %tv to i8*, !dbg !12768
  call void @llvm.lifetime.end(i64 16, i8* %26) #1, !dbg !12768
  %27 = bitcast %struct.fd_set* %fds to i8*, !dbg !12768
  call void @llvm.lifetime.end(i64 128, i8* %27) #1, !dbg !12768
  %28 = load i32, i32* %retval, !dbg !12768
  ret i32 %28, !dbg !12768
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_SetError(%struct.PySSLSocket* %obj, i32 %ret, i8* %filename, i32 %lineno) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %obj.addr = alloca %struct.PySSLSocket*, align 8
  %ret.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %lineno.addr = alloca i32, align 4
  %type = alloca %struct._object*, align 8
  %errstr = alloca i8*, align 8
  %err = alloca i32, align 4
  %p = alloca i32, align 4
  %e = alloca i64, align 8
  %s = alloca %struct.PySocketSockObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PySSLSocket* %obj, %struct.PySSLSocket** %obj.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %obj.addr, metadata !3306, metadata !3830), !dbg !12769
  store i32 %ret, i32* %ret.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %ret.addr, metadata !3307, metadata !3830), !dbg !12770
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !3308, metadata !3830), !dbg !12771
  store i32 %lineno, i32* %lineno.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %lineno.addr, metadata !3309, metadata !3830), !dbg !12772
  %0 = bitcast %struct._object** %type to i8*, !dbg !12773
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12773
  call void @llvm.dbg.declare(metadata %struct._object** %type, metadata !3310, metadata !3830), !dbg !12774
  %1 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !12775, !tbaa !3860
  store %struct._object* %1, %struct._object** %type, align 8, !dbg !12774, !tbaa !3860
  %2 = bitcast i8** %errstr to i8*, !dbg !12776
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12776
  call void @llvm.dbg.declare(metadata i8** %errstr, metadata !3311, metadata !3830), !dbg !12777
  store i8* null, i8** %errstr, align 8, !dbg !12777, !tbaa !3860
  %3 = bitcast i32* %err to i8*, !dbg !12778
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !12778
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3312, metadata !3830), !dbg !12779
  %4 = bitcast i32* %p to i8*, !dbg !12780
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !12780
  call void @llvm.dbg.declare(metadata i32* %p, metadata !3313, metadata !3830), !dbg !12781
  store i32 0, i32* %p, align 4, !dbg !12781, !tbaa !6928
  %5 = bitcast i64* %e to i8*, !dbg !12782
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !12782
  call void @llvm.dbg.declare(metadata i64* %e, metadata !3314, metadata !3830), !dbg !12783
  store i64 0, i64* %e, align 8, !dbg !12783, !tbaa !4354
  %call = call i64 @ERR_peek_last_error(), !dbg !12784
  store i64 %call, i64* %e, align 8, !dbg !12785, !tbaa !4354
  %6 = load %struct.PySSLSocket*, %struct.PySSLSocket** %obj.addr, align 8, !dbg !12786, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %6, i32 0, i32 2, !dbg !12787
  %7 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12787, !tbaa !6955
  %cmp = icmp ne %struct.ssl_st* %7, null, !dbg !12788
  br i1 %cmp, label %if.then, label %if.end.30, !dbg !12789

if.then:                                          ; preds = %entry
  %8 = load %struct.PySSLSocket*, %struct.PySSLSocket** %obj.addr, align 8, !dbg !12790, !tbaa !3860
  %ssl1 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %8, i32 0, i32 2, !dbg !12791
  %9 = load %struct.ssl_st*, %struct.ssl_st** %ssl1, align 8, !dbg !12791, !tbaa !6955
  %10 = load i32, i32* %ret.addr, align 4, !dbg !12792, !tbaa !4372
  %call2 = call i32 @SSL_get_error(%struct.ssl_st* %9, i32 %10), !dbg !12793
  store i32 %call2, i32* %err, align 4, !dbg !12794, !tbaa !4372
  %11 = load i32, i32* %err, align 4, !dbg !12795, !tbaa !4372
  br label %NodeBlock.11

NodeBlock.11:                                     ; preds = %if.then
  %Pivot.12 = icmp slt i32 %11, 4
  br i1 %Pivot.12, label %NodeBlock.1, label %NodeBlock.9

NodeBlock.9:                                      ; preds = %NodeBlock.11
  %Pivot.10 = icmp slt i32 %11, 6
  br i1 %Pivot.10, label %NodeBlock.3, label %NodeBlock.7

NodeBlock.7:                                      ; preds = %NodeBlock.9
  %Pivot.8 = icmp slt i32 %11, 7
  br i1 %Pivot.8, label %sw.bb, label %LeafBlock.5

LeafBlock.5:                                      ; preds = %NodeBlock.7
  %SwitchLeaf6 = icmp eq i32 %11, 7
  br i1 %SwitchLeaf6, label %sw.bb.6, label %NewDefault

NodeBlock.3:                                      ; preds = %NodeBlock.9
  %Pivot.4 = icmp slt i32 %11, 5
  br i1 %Pivot.4, label %sw.bb.5, label %sw.bb.7

NodeBlock.1:                                      ; preds = %NodeBlock.11
  %Pivot.2 = icmp slt i32 %11, 2
  br i1 %Pivot.2, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.1
  %Pivot = icmp slt i32 %11, 3
  br i1 %Pivot, label %sw.bb.3, label %sw.bb.4

LeafBlock:                                        ; preds = %NodeBlock.1
  %SwitchLeaf = icmp eq i32 %11, 1
  br i1 %SwitchLeaf, label %sw.bb.26, label %NewDefault

sw.bb:                                            ; preds = %NodeBlock.7
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.209, i32 0, i32 0), i8** %errstr, align 8, !dbg !12796, !tbaa !3860
  %12 = load %struct._object*, %struct._object** @PySSLZeroReturnErrorObject, align 8, !dbg !12797, !tbaa !3860
  store %struct._object* %12, %struct._object** %type, align 8, !dbg !12798, !tbaa !3860
  store i32 6, i32* %p, align 4, !dbg !12799, !tbaa !6928
  br label %sw.epilog, !dbg !12800

sw.bb.3:                                          ; preds = %NodeBlock
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.210, i32 0, i32 0), i8** %errstr, align 8, !dbg !12801, !tbaa !3860
  %13 = load %struct._object*, %struct._object** @PySSLWantReadErrorObject, align 8, !dbg !12802, !tbaa !3860
  store %struct._object* %13, %struct._object** %type, align 8, !dbg !12803, !tbaa !3860
  store i32 2, i32* %p, align 4, !dbg !12804, !tbaa !6928
  br label %sw.epilog, !dbg !12805

sw.bb.4:                                          ; preds = %NodeBlock
  store i32 3, i32* %p, align 4, !dbg !12806, !tbaa !6928
  %14 = load %struct._object*, %struct._object** @PySSLWantWriteErrorObject, align 8, !dbg !12807, !tbaa !3860
  store %struct._object* %14, %struct._object** %type, align 8, !dbg !12808, !tbaa !3860
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.211, i32 0, i32 0), i8** %errstr, align 8, !dbg !12809, !tbaa !3860
  br label %sw.epilog, !dbg !12810

sw.bb.5:                                          ; preds = %NodeBlock.3
  store i32 4, i32* %p, align 4, !dbg !12811, !tbaa !6928
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.212, i32 0, i32 0), i8** %errstr, align 8, !dbg !12812, !tbaa !3860
  br label %sw.epilog, !dbg !12813

sw.bb.6:                                          ; preds = %LeafBlock.5
  store i32 7, i32* %p, align 4, !dbg !12814, !tbaa !6928
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.213, i32 0, i32 0), i8** %errstr, align 8, !dbg !12815, !tbaa !3860
  br label %sw.epilog, !dbg !12816

sw.bb.7:                                          ; preds = %NodeBlock.3
  %15 = load i64, i64* %e, align 8, !dbg !12817, !tbaa !4354
  %cmp8 = icmp eq i64 %15, 0, !dbg !12818
  br i1 %cmp8, label %if.then.9, label %if.else.24, !dbg !12819

if.then.9:                                        ; preds = %sw.bb.7
  %16 = bitcast %struct.PySocketSockObject** %s to i8*, !dbg !12820
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !12820
  call void @llvm.dbg.declare(metadata %struct.PySocketSockObject** %s, metadata !3315, metadata !3830), !dbg !12821
  %17 = load %struct.PySSLSocket*, %struct.PySSLSocket** %obj.addr, align 8, !dbg !12822, !tbaa !3860
  %Socket = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %17, i32 0, i32 1, !dbg !12823
  %18 = load %struct._object*, %struct._object** %Socket, align 8, !dbg !12823, !tbaa !6959
  %call10 = call %struct._object* @PyWeakref_GetObject(%struct._object* %18), !dbg !12824
  %19 = bitcast %struct._object* %call10 to %struct.PySocketSockObject*, !dbg !12825
  store %struct.PySocketSockObject* %19, %struct.PySocketSockObject** %s, align 8, !dbg !12821, !tbaa !3860
  %20 = load i32, i32* %ret.addr, align 4, !dbg !12826, !tbaa !4372
  %cmp11 = icmp eq i32 %20, 0, !dbg !12827
  br i1 %cmp11, label %if.then.13, label %lor.lhs.false, !dbg !12828

lor.lhs.false:                                    ; preds = %if.then.9
  %21 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s, align 8, !dbg !12829, !tbaa !3860
  %22 = bitcast %struct.PySocketSockObject* %21 to %struct._object*, !dbg !12831
  %cmp12 = icmp eq %struct._object* %22, @_Py_NoneStruct, !dbg !12832
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !12833

if.then.13:                                       ; preds = %lor.lhs.false, %if.then.9
  store i32 8, i32* %p, align 4, !dbg !12834, !tbaa !6928
  %23 = load %struct._object*, %struct._object** @PySSLEOFErrorObject, align 8, !dbg !12836, !tbaa !3860
  store %struct._object* %23, %struct._object** %type, align 8, !dbg !12837, !tbaa !3860
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.214, i32 0, i32 0), i8** %errstr, align 8, !dbg !12838, !tbaa !3860
  br label %if.end.23, !dbg !12839

if.else:                                          ; preds = %lor.lhs.false
  %24 = load i32, i32* %ret.addr, align 4, !dbg !12840, !tbaa !4372
  %cmp14 = icmp eq i32 %24, -1, !dbg !12841
  br i1 %cmp14, label %if.then.15, label %if.else.21, !dbg !12842

if.then.15:                                       ; preds = %if.else
  %25 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s, align 8, !dbg !12843, !tbaa !3860
  %26 = bitcast %struct.PySocketSockObject* %25 to %struct._object*, !dbg !12844
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !12845
  %27 = load i64, i64* %ob_refcnt, align 8, !dbg !12846, !tbaa !4101
  %inc = add i64 %27, 1, !dbg !12846
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12846, !tbaa !4101
  call void @ERR_clear_error(), !dbg !12847
  %28 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s, align 8, !dbg !12848, !tbaa !3860
  %errorhandler = getelementptr inbounds %struct.PySocketSockObject, %struct.PySocketSockObject* %28, i32 0, i32 5, !dbg !12849
  %29 = load %struct._object* ()*, %struct._object* ()** %errorhandler, align 8, !dbg !12849, !tbaa !12850
  %call16 = call %struct._object* %29(), !dbg !12848
  br label %do.body, !dbg !12851

do.body:                                          ; preds = %if.then.15
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12852
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !12852
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3322, metadata !3830), !dbg !12854
  %31 = load %struct.PySocketSockObject*, %struct.PySocketSockObject** %s, align 8, !dbg !12855, !tbaa !3860
  %32 = bitcast %struct.PySocketSockObject* %31 to %struct._object*, !dbg !12856
  store %struct._object* %32, %struct._object** %_py_decref_tmp, align 8, !dbg !12854, !tbaa !3860
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12857, !tbaa !3860
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !12859
  %34 = load i64, i64* %ob_refcnt17, align 8, !dbg !12860, !tbaa !4101
  %dec = add i64 %34, -1, !dbg !12860
  store i64 %dec, i64* %ob_refcnt17, align 8, !dbg !12860, !tbaa !4101
  %cmp18 = icmp ne i64 %dec, 0, !dbg !12861
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !12862

if.then.19:                                       ; preds = %do.body
  br label %if.end, !dbg !12863

if.else.20:                                       ; preds = %do.body
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12865, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !12867
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12867, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !12868
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12868, !tbaa !4206
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12869, !tbaa !3860
  call void %37(%struct._object* %38), !dbg !12870
  br label %if.end

if.end:                                           ; preds = %if.else.20, %if.then.19
  %39 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12871
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !12871
  br label %do.cond, !dbg !12873

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12874

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12876

if.else.21:                                       ; preds = %if.else
  store i32 5, i32* %p, align 4, !dbg !12877, !tbaa !6928
  %40 = load %struct._object*, %struct._object** @PySSLSyscallErrorObject, align 8, !dbg !12879, !tbaa !3860
  store %struct._object* %40, %struct._object** %type, align 8, !dbg !12880, !tbaa !3860
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.215, i32 0, i32 0), i8** %errstr, align 8, !dbg !12881, !tbaa !3860
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.13
  store i32 0, i32* %cleanup.dest.slot, !dbg !12882
  br label %cleanup, !dbg !12882

cleanup:                                          ; preds = %if.end.23, %do.end
  %41 = bitcast %struct.PySocketSockObject** %s to i8*, !dbg !12883
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !12883
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.14

LeafBlock.14:                                     ; preds = %cleanup
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf15, label %cleanup.cont, label %NewDefault.13

cleanup.cont:                                     ; preds = %LeafBlock.14
  br label %if.end.25, !dbg !12885

if.else.24:                                       ; preds = %sw.bb.7
  store i32 5, i32* %p, align 4, !dbg !12886, !tbaa !6928
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.24, %cleanup.cont
  br label %sw.epilog, !dbg !12888

sw.bb.26:                                         ; preds = %LeafBlock
  store i32 1, i32* %p, align 4, !dbg !12889, !tbaa !6928
  %42 = load i64, i64* %e, align 8, !dbg !12891, !tbaa !4354
  %cmp27 = icmp eq i64 %42, 0, !dbg !12893
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !12894

if.then.28:                                       ; preds = %sw.bb.26
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.216, i32 0, i32 0), i8** %errstr, align 8, !dbg !12895, !tbaa !3860
  br label %if.end.29, !dbg !12896

if.end.29:                                        ; preds = %if.then.28, %sw.bb.26
  br label %sw.epilog, !dbg !12897

NewDefault:                                       ; preds = %LeafBlock.5, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  store i32 10, i32* %p, align 4, !dbg !12898, !tbaa !6928
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.217, i32 0, i32 0), i8** %errstr, align 8, !dbg !12899, !tbaa !3860
  br label %sw.epilog, !dbg !12900

sw.epilog:                                        ; preds = %sw.default, %if.end.29, %if.end.25, %sw.bb.6, %sw.bb.5, %sw.bb.4, %sw.bb.3, %sw.bb
  br label %if.end.30, !dbg !12901

if.end.30:                                        ; preds = %sw.epilog, %entry
  %43 = load %struct._object*, %struct._object** %type, align 8, !dbg !12902, !tbaa !3860
  %44 = load i32, i32* %p, align 4, !dbg !12903, !tbaa !6928
  %45 = load i8*, i8** %errstr, align 8, !dbg !12904, !tbaa !3860
  %46 = load i32, i32* %lineno.addr, align 4, !dbg !12905, !tbaa !4372
  %47 = load i64, i64* %e, align 8, !dbg !12906, !tbaa !4354
  call void @fill_and_set_sslerror(%struct._object* %43, i32 %44, i8* %45, i32 %46, i64 %47), !dbg !12907
  call void @ERR_clear_error(), !dbg !12908
  store %struct._object* null, %struct._object** %retval, !dbg !12909
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.31, !dbg !12909

NewDefault.13:                                    ; preds = %LeafBlock.14
  br label %cleanup.31

cleanup.31:                                       ; preds = %NewDefault.13, %if.end.30
  %48 = bitcast i64* %e to i8*, !dbg !12910
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !12910
  %49 = bitcast i32* %p to i8*, !dbg !12910
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !12910
  %50 = bitcast i32* %err to i8*, !dbg !12910
  call void @llvm.lifetime.end(i64 4, i8* %50) #1, !dbg !12910
  %51 = bitcast i8** %errstr to i8*, !dbg !12910
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !12910
  %52 = bitcast %struct._object** %type to i8*, !dbg !12910
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !12910
  %53 = load %struct._object*, %struct._object** %retval, !dbg !12910
  ret %struct._object* %53, !dbg !12910
}

declare %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st*) #3

declare i32 @poll(%struct.pollfd*, i64, i32) #3

declare i32 @SSL_write(%struct.ssl_st*, i8*, i32) #3

declare i32 @SSL_pending(%struct.ssl_st*) #3

declare i32 @SSL_read(%struct.ssl_st*, i8*, i32) #3

declare i32 @SSL_get_shutdown(%struct.ssl_st*) #3

declare i32 @_PyBytes_Resize(%struct._object**, i64) #3

declare %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st*) #3

declare %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st*) #3

declare i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st*) #3

declare i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st*) #3

declare i32 @SSL_CIPHER_get_bits(%struct.ssl_cipher_st*, i32*) #3

declare void @SSL_get0_next_proto_negotiated(%struct.ssl_st*, i8**, i32*) #3

declare %struct.comp_method_st* @SSL_get_current_compression(%struct.ssl_st*) #3

declare i8* @OBJ_nid2sn(i32) #3

declare %struct._object* @PyUnicode_DecodeFSDefault(i8*) #3

declare void @SSL_set_read_ahead(%struct.ssl_st*, i32) #3

declare i32 @SSL_shutdown(%struct.ssl_st*) #3

declare i64 @SSL_get_finished(%struct.ssl_st*, i8*, i64) #3

declare i64 @SSL_get_peer_finished(%struct.ssl_st*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct.PySSLContext* @PySSL_get_context(%struct.PySSLSocket* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %closure.addr = alloca i8*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3442, metadata !3830), !dbg !12911
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !3443, metadata !3830), !dbg !12912
  %0 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12913, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %0, i32 0, i32 3, !dbg !12914
  %1 = load %struct.PySSLContext*, %struct.PySSLContext** %ctx, align 8, !dbg !12914, !tbaa !6964
  %2 = bitcast %struct.PySSLContext* %1 to %struct._object*, !dbg !12915
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0, !dbg !12916
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !12917, !tbaa !4101
  %inc = add i64 %3, 1, !dbg !12917
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12917, !tbaa !4101
  %4 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12918, !tbaa !3860
  %ctx1 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %4, i32 0, i32 3, !dbg !12919
  %5 = load %struct.PySSLContext*, %struct.PySSLContext** %ctx1, align 8, !dbg !12919, !tbaa !6964
  ret %struct.PySSLContext* %5, !dbg !12920
}

; Function Attrs: nounwind uwtable
define internal i32 @PySSL_set_context(%struct.PySSLSocket* %self, %struct._object* %value, i8* %closure) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySSLSocket*, align 8
  %value.addr = alloca %struct._object*, align 8
  %closure.addr = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySSLSocket* %self, %struct.PySSLSocket** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PySSLSocket** %self.addr, metadata !3448, metadata !3830), !dbg !12921
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !3449, metadata !3830), !dbg !12922
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !3450, metadata !3830), !dbg !12923
  %0 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !12924, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !12925
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12925, !tbaa !4204
  %cmp = icmp eq %struct._typeobject* %1, @PySSLContext_Type, !dbg !12926
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12927

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !12928, !tbaa !3860
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !12930
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !12930, !tbaa !4204
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %3, %struct._typeobject* @PySSLContext_Type), !dbg !12931
  %tobool = icmp ne i32 %call, 0, !dbg !12931
  br i1 %tobool, label %if.then, label %if.else.10, !dbg !12932

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !12933, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !12934
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !12935, !tbaa !4101
  %inc = add i64 %5, 1, !dbg !12935
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12935, !tbaa !4101
  br label %do.body, !dbg !12936

do.body:                                          ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12937
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !12937
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3451, metadata !3830), !dbg !12939
  %7 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12940, !tbaa !3860
  %ctx = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %7, i32 0, i32 3, !dbg !12941
  %8 = load %struct.PySSLContext*, %struct.PySSLContext** %ctx, align 8, !dbg !12941, !tbaa !6964
  %9 = bitcast %struct.PySSLContext* %8 to %struct._object*, !dbg !12942
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !12939, !tbaa !3860
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12943, !tbaa !3860
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !12945
  %11 = load i64, i64* %ob_refcnt2, align 8, !dbg !12946, !tbaa !4101
  %dec = add i64 %11, -1, !dbg !12946
  store i64 %dec, i64* %ob_refcnt2, align 8, !dbg !12946, !tbaa !4101
  %cmp3 = icmp ne i64 %dec, 0, !dbg !12947
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !12948

if.then.4:                                        ; preds = %do.body
  br label %if.end, !dbg !12949

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12951, !tbaa !3860
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !12953
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !12953, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !12954
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12954, !tbaa !4206
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12955, !tbaa !3860
  call void %14(%struct._object* %15), !dbg !12956
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12957
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !12957
  br label %do.end, !dbg !12959

do.end:                                           ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !12960, !tbaa !3860
  %18 = bitcast %struct._object* %17 to %struct.PySSLContext*, !dbg !12961
  %19 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12962, !tbaa !3860
  %ctx6 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %19, i32 0, i32 3, !dbg !12963
  store %struct.PySSLContext* %18, %struct.PySSLContext** %ctx6, align 8, !dbg !12964, !tbaa !6964
  %20 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12965, !tbaa !3860
  %ssl = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %20, i32 0, i32 2, !dbg !12966
  %21 = load %struct.ssl_st*, %struct.ssl_st** %ssl, align 8, !dbg !12966, !tbaa !6955
  %22 = load %struct.PySSLSocket*, %struct.PySSLSocket** %self.addr, align 8, !dbg !12967, !tbaa !3860
  %ctx7 = getelementptr inbounds %struct.PySSLSocket, %struct.PySSLSocket* %22, i32 0, i32 3, !dbg !12968
  %23 = load %struct.PySSLContext*, %struct.PySSLContext** %ctx7, align 8, !dbg !12968, !tbaa !6964
  %ctx8 = getelementptr inbounds %struct.PySSLContext, %struct.PySSLContext* %23, i32 0, i32 1, !dbg !12969
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx8, align 8, !dbg !12969, !tbaa !4529
  %call9 = call %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st* %21, %struct.ssl_ctx_st* %24), !dbg !12970
  br label %if.end.11, !dbg !12971

if.else.10:                                       ; preds = %lor.lhs.false
  %25 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12972, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.229, i32 0, i32 0)), !dbg !12974
  store i32 -1, i32* %retval, !dbg !12975
  br label %return, !dbg !12975

if.end.11:                                        ; preds = %do.end
  store i32 0, i32* %retval, !dbg !12976
  br label %return, !dbg !12976

return:                                           ; preds = %if.end.11, %if.else.10
  %26 = load i32, i32* %retval, !dbg !12977
  ret i32 %26, !dbg !12977
}

declare %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st*, %struct.ssl_ctx_st*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_test_decode_certificate(%struct._object* %mod, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %mod.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %retval1 = alloca %struct._object*, align 8
  %filename = alloca %struct._object*, align 8
  %x = alloca %struct.x509_st*, align 8
  %cert = alloca %struct.bio_st*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %mod, %struct._object** %mod.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %mod.addr, metadata !3457, metadata !3830), !dbg !12978
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3458, metadata !3830), !dbg !12979
  %0 = bitcast %struct._object** %retval1 to i8*, !dbg !12980
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12980
  call void @llvm.dbg.declare(metadata %struct._object** %retval1, metadata !3459, metadata !3830), !dbg !12981
  store %struct._object* null, %struct._object** %retval1, align 8, !dbg !12981, !tbaa !3860
  %1 = bitcast %struct._object** %filename to i8*, !dbg !12982
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12982
  call void @llvm.dbg.declare(metadata %struct._object** %filename, metadata !3460, metadata !3830), !dbg !12983
  %2 = bitcast %struct.x509_st** %x to i8*, !dbg !12984
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12984
  call void @llvm.dbg.declare(metadata %struct.x509_st** %x, metadata !3461, metadata !3830), !dbg !12985
  store %struct.x509_st* null, %struct.x509_st** %x, align 8, !dbg !12985, !tbaa !3860
  %3 = bitcast %struct.bio_st** %cert to i8*, !dbg !12986
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12986
  call void @llvm.dbg.declare(metadata %struct.bio_st** %cert, metadata !3462, metadata !3830), !dbg !12987
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12988, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.240, i32 0, i32 0), i32 (%struct._object*, i8*)* @PyUnicode_FSConverter, %struct._object** %filename), !dbg !12990
  %tobool = icmp ne i32 %call, 0, !dbg !12990
  br i1 %tobool, label %if.end, label %if.then, !dbg !12991

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12992
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12992

if.end:                                           ; preds = %entry
  %call2 = call %struct.bio_method_st* @BIO_s_file(), !dbg !12993
  %call3 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call2), !dbg !12995
  store %struct.bio_st* %call3, %struct.bio_st** %cert, align 8, !dbg !12996, !tbaa !3860
  %cmp = icmp eq %struct.bio_st* %call3, null, !dbg !12997
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !12998

if.then.4:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !12999, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.241, i32 0, i32 0)), !dbg !13001
  br label %fail0, !dbg !13002

if.end.5:                                         ; preds = %if.end
  %6 = load %struct.bio_st*, %struct.bio_st** %cert, align 8, !dbg !13003, !tbaa !3860
  %7 = load %struct._object*, %struct._object** %filename, align 8, !dbg !13005, !tbaa !3860
  %call6 = call i8* @PyBytes_AsString(%struct._object* %7), !dbg !13006
  %call7 = call i64 @BIO_ctrl(%struct.bio_st* %6, i32 108, i64 3, i8* %call6), !dbg !13007
  %cmp8 = icmp sle i64 %call7, 0, !dbg !13008
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !13009

if.then.9:                                        ; preds = %if.end.5
  %8 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !13010, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.242, i32 0, i32 0)), !dbg !13012
  br label %fail0, !dbg !13013

if.end.10:                                        ; preds = %if.end.5
  %9 = load %struct.bio_st*, %struct.bio_st** %cert, align 8, !dbg !13014, !tbaa !3860
  %call11 = call %struct.x509_st* @PEM_read_bio_X509_AUX(%struct.bio_st* %9, %struct.x509_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null), !dbg !13015
  store %struct.x509_st* %call11, %struct.x509_st** %x, align 8, !dbg !13016, !tbaa !3860
  %10 = load %struct.x509_st*, %struct.x509_st** %x, align 8, !dbg !13017, !tbaa !3860
  %cmp12 = icmp eq %struct.x509_st* %10, null, !dbg !13019
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !13020

if.then.13:                                       ; preds = %if.end.10
  %11 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !13021, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.243, i32 0, i32 0)), !dbg !13023
  br label %fail0, !dbg !13024

if.end.14:                                        ; preds = %if.end.10
  %12 = load %struct.x509_st*, %struct.x509_st** %x, align 8, !dbg !13025, !tbaa !3860
  %call15 = call %struct._object* @_decode_certificate(%struct.x509_st* %12), !dbg !13026
  store %struct._object* %call15, %struct._object** %retval1, align 8, !dbg !13027, !tbaa !3860
  %13 = load %struct.x509_st*, %struct.x509_st** %x, align 8, !dbg !13028, !tbaa !3860
  call void @X509_free(%struct.x509_st* %13), !dbg !13029
  br label %fail0, !dbg !13029

fail0:                                            ; preds = %if.end.14, %if.then.13, %if.then.9, %if.then.4
  br label %do.body, !dbg !13030

do.body:                                          ; preds = %fail0
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13031
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !13031
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3463, metadata !3830), !dbg !13033
  %15 = load %struct._object*, %struct._object** %filename, align 8, !dbg !13034, !tbaa !3860
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !13033, !tbaa !3860
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13035, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !13037
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !13038, !tbaa !4101
  %dec = add i64 %17, -1, !dbg !13038
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13038, !tbaa !4101
  %cmp16 = icmp ne i64 %dec, 0, !dbg !13039
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !13040

if.then.17:                                       ; preds = %do.body
  br label %if.end.18, !dbg !13041

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13043, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !13045
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13045, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !13046
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13046, !tbaa !4206
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13047, !tbaa !3860
  call void %20(%struct._object* %21), !dbg !13048
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.17
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13049
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !13049
  br label %do.cond, !dbg !13051

do.cond:                                          ; preds = %if.end.18
  br label %do.end, !dbg !13052

do.end:                                           ; preds = %do.cond
  %23 = load %struct.bio_st*, %struct.bio_st** %cert, align 8, !dbg !13054, !tbaa !3860
  %cmp19 = icmp ne %struct.bio_st* %23, null, !dbg !13056
  br i1 %cmp19, label %if.then.20, label %if.end.22, !dbg !13057

if.then.20:                                       ; preds = %do.end
  %24 = load %struct.bio_st*, %struct.bio_st** %cert, align 8, !dbg !13058, !tbaa !3860
  %call21 = call i32 @BIO_free(%struct.bio_st* %24), !dbg !13060
  br label %if.end.22, !dbg !13060

if.end.22:                                        ; preds = %if.then.20, %do.end
  %25 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !13061, !tbaa !3860
  store %struct._object* %25, %struct._object** %retval, !dbg !13062
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13062

cleanup:                                          ; preds = %if.end.22, %if.then
  %26 = bitcast %struct.bio_st** %cert to i8*, !dbg !13063
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !13063
  %27 = bitcast %struct.x509_st** %x to i8*, !dbg !13063
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !13063
  %28 = bitcast %struct._object** %filename to i8*, !dbg !13063
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !13063
  %29 = bitcast %struct._object** %retval1 to i8*, !dbg !13063
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !13063
  %30 = load %struct._object*, %struct._object** %retval, !dbg !13063
  ret %struct._object* %30, !dbg !13063
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_RAND_add(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buf = alloca i8*, align 8
  %len = alloca i32, align 4
  %entropy = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3467, metadata !3830), !dbg !13064
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3468, metadata !3830), !dbg !13065
  %0 = bitcast i8** %buf to i8*, !dbg !13066
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13066
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3469, metadata !3830), !dbg !13067
  %1 = bitcast i32* %len to i8*, !dbg !13068
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !13068
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3470, metadata !3830), !dbg !13069
  %2 = bitcast double* %entropy to i8*, !dbg !13070
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13070
  call void @llvm.dbg.declare(metadata double* %entropy, metadata !3471, metadata !3830), !dbg !13071
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13072, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.244, i32 0, i32 0), i8** %buf, i32* %len, double* %entropy), !dbg !13074
  %tobool = icmp ne i32 %call, 0, !dbg !13074
  br i1 %tobool, label %if.end, label %if.then, !dbg !13075

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13076
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13076

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buf, align 8, !dbg !13077, !tbaa !3860
  %5 = load i32, i32* %len, align 4, !dbg !13078, !tbaa !4372
  %6 = load double, double* %entropy, align 8, !dbg !13079, !tbaa !13080
  call void @RAND_add(i8* %4, i32 %5, double %6), !dbg !13081
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13082, !tbaa !4101
  %inc = add i64 %7, 1, !dbg !13082
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13082, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !13083
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13083

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast double* %entropy to i8*, !dbg !13084
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !13084
  %9 = bitcast i32* %len to i8*, !dbg !13084
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !13084
  %10 = bitcast i8** %buf to i8*, !dbg !13084
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !13084
  %11 = load %struct._object*, %struct._object** %retval, !dbg !13084
  ret %struct._object* %11, !dbg !13084
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_RAND_bytes(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3474, metadata !3830), !dbg !13085
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3475, metadata !3830), !dbg !13086
  %0 = bitcast i32* %len to i8*, !dbg !13087
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !13087
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3476, metadata !3830), !dbg !13088
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13089, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.245, i32 0, i32 0), i32* %len), !dbg !13091
  %tobool = icmp ne i32 %call, 0, !dbg !13091
  br i1 %tobool, label %if.end, label %if.then, !dbg !13092

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13093
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13093

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %len, align 4, !dbg !13094, !tbaa !4372
  %call1 = call %struct._object* @PySSL_RAND(i32 %2, i32 0), !dbg !13095
  store %struct._object* %call1, %struct._object** %retval, !dbg !13096
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13096

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i32* %len to i8*, !dbg !13097
  call void @llvm.lifetime.end(i64 4, i8* %3) #1, !dbg !13097
  %4 = load %struct._object*, %struct._object** %retval, !dbg !13097
  ret %struct._object* %4, !dbg !13097
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_RAND_pseudo_bytes(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3496, metadata !3830), !dbg !13098
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3497, metadata !3830), !dbg !13099
  %0 = bitcast i32* %len to i8*, !dbg !13100
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !13100
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3498, metadata !3830), !dbg !13101
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13102, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.249, i32 0, i32 0), i32* %len), !dbg !13104
  %tobool = icmp ne i32 %call, 0, !dbg !13104
  br i1 %tobool, label %if.end, label %if.then, !dbg !13105

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13106
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13106

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %len, align 4, !dbg !13107, !tbaa !4372
  %call1 = call %struct._object* @PySSL_RAND(i32 %2, i32 1), !dbg !13108
  store %struct._object* %call1, %struct._object** %retval, !dbg !13109
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13109

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i32* %len to i8*, !dbg !13110
  call void @llvm.lifetime.end(i64 4, i8* %3) #1, !dbg !13110
  %4 = load %struct._object*, %struct._object** %retval, !dbg !13110
  ret %struct._object* %4, !dbg !13110
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_RAND_egd(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %path = alloca %struct._object*, align 8
  %bytes = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3501, metadata !3830), !dbg !13111
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3502, metadata !3830), !dbg !13112
  %0 = bitcast %struct._object** %path to i8*, !dbg !13113
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13113
  call void @llvm.dbg.declare(metadata %struct._object** %path, metadata !3503, metadata !3830), !dbg !13114
  %1 = bitcast i32* %bytes to i8*, !dbg !13115
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !13115
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !3504, metadata !3830), !dbg !13116
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13117, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.250, i32 0, i32 0), i32 (%struct._object*, i8*)* @PyUnicode_FSConverter, %struct._object** %path), !dbg !13119
  %tobool = icmp ne i32 %call, 0, !dbg !13119
  br i1 %tobool, label %if.end, label %if.then, !dbg !13120

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13121
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13121

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %path, align 8, !dbg !13122, !tbaa !3860
  %call1 = call i8* @PyBytes_AsString(%struct._object* %3), !dbg !13123
  %call2 = call i32 @RAND_egd(i8* %call1), !dbg !13124
  store i32 %call2, i32* %bytes, align 4, !dbg !13125, !tbaa !4372
  br label %do.body, !dbg !13126

do.body:                                          ; preds = %if.end
  %4 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13127
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13127
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3505, metadata !3830), !dbg !13129
  %5 = load %struct._object*, %struct._object** %path, align 8, !dbg !13130, !tbaa !3860
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8, !dbg !13129, !tbaa !3860
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13131, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !13133
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !13134, !tbaa !4101
  %dec = add i64 %7, -1, !dbg !13134
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13134, !tbaa !4101
  %cmp = icmp ne i64 %dec, 0, !dbg !13135
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !13136

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !13137

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13139, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !13141
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13141, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4, !dbg !13142
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13142, !tbaa !4206
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13143, !tbaa !3860
  call void %10(%struct._object* %11), !dbg !13144
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13145
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !13145
  br label %do.cond, !dbg !13147

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !13148

do.end:                                           ; preds = %do.cond
  %13 = load i32, i32* %bytes, align 4, !dbg !13150, !tbaa !4372
  %cmp5 = icmp eq i32 %13, -1, !dbg !13152
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !13153

if.then.6:                                        ; preds = %do.end
  %14 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !13154, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.251, i32 0, i32 0)), !dbg !13156
  store %struct._object* null, %struct._object** %retval, !dbg !13157
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13157

if.end.7:                                         ; preds = %do.end
  %15 = load i32, i32* %bytes, align 4, !dbg !13158, !tbaa !4372
  %conv = sext i32 %15 to i64, !dbg !13158
  %call8 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !13159
  store %struct._object* %call8, %struct._object** %retval, !dbg !13160
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13160

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then
  %16 = bitcast i32* %bytes to i8*, !dbg !13161
  call void @llvm.lifetime.end(i64 4, i8* %16) #1, !dbg !13161
  %17 = bitcast %struct._object** %path to i8*, !dbg !13161
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !13161
  %18 = load %struct._object*, %struct._object** %retval, !dbg !13161
  ret %struct._object* %18, !dbg !13161
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_RAND_status(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3509, metadata !3830), !dbg !13162
  %call = call i32 @RAND_status(), !dbg !13163
  %conv = sext i32 %call to i64, !dbg !13163
  %call1 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !13164
  ret %struct._object* %call1, !dbg !13165
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_get_default_verify_paths(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %ofile_env = alloca %struct._object*, align 8
  %ofile = alloca %struct._object*, align 8
  %odir_env = alloca %struct._object*, align 8
  %odir = alloca %struct._object*, align 8
  %tmp = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %tmp9 = alloca i8*, align 8
  %tmp31 = alloca i8*, align 8
  %tmp53 = alloca i8*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_xdecref_tmp110 = alloca %struct._object*, align 8
  %_py_decref_tmp115 = alloca %struct._object*, align 8
  %_py_xdecref_tmp131 = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3512, metadata !3830), !dbg !13166
  %0 = bitcast %struct._object** %ofile_env to i8*, !dbg !13167
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13167
  call void @llvm.dbg.declare(metadata %struct._object** %ofile_env, metadata !3513, metadata !3830), !dbg !13168
  store %struct._object* null, %struct._object** %ofile_env, align 8, !dbg !13168, !tbaa !3860
  %1 = bitcast %struct._object** %ofile to i8*, !dbg !13169
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13169
  call void @llvm.dbg.declare(metadata %struct._object** %ofile, metadata !3514, metadata !3830), !dbg !13170
  store %struct._object* null, %struct._object** %ofile, align 8, !dbg !13170, !tbaa !3860
  %2 = bitcast %struct._object** %odir_env to i8*, !dbg !13171
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13171
  call void @llvm.dbg.declare(metadata %struct._object** %odir_env, metadata !3515, metadata !3830), !dbg !13172
  store %struct._object* null, %struct._object** %odir_env, align 8, !dbg !13172, !tbaa !3860
  %3 = bitcast %struct._object** %odir to i8*, !dbg !13173
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !13173
  call void @llvm.dbg.declare(metadata %struct._object** %odir, metadata !3516, metadata !3830), !dbg !13174
  store %struct._object* null, %struct._object** %odir, align 8, !dbg !13174, !tbaa !3860
  %4 = bitcast i8** %tmp to i8*, !dbg !13175
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13175
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !3517, metadata !3830), !dbg !13176
  %call = call i8* @X509_get_default_cert_file_env(), !dbg !13177
  store i8* %call, i8** %tmp, align 8, !dbg !13176, !tbaa !3860
  store %struct._object* null, %struct._object** %ofile_env, align 8, !dbg !13178, !tbaa !3860
  %5 = load i8*, i8** %tmp, align 8, !dbg !13179, !tbaa !3860
  %tobool = icmp ne i8* %5, null, !dbg !13179
  br i1 %tobool, label %if.else, label %if.then, !dbg !13181

if.then:                                          ; preds = %entry
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13182, !tbaa !4101
  %inc = add i64 %6, 1, !dbg !13182
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13182, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %ofile_env, align 8, !dbg !13185, !tbaa !3860
  br label %if.end.4, !dbg !13186

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %tmp, align 8, !dbg !13187, !tbaa !3860
  %call1 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %7), !dbg !13190
  store %struct._object* %call1, %struct._object** %ofile_env, align 8, !dbg !13191, !tbaa !3860
  %cmp = icmp eq %struct._object* %call1, null, !dbg !13192
  br i1 %cmp, label %if.then.2, label %if.end, !dbg !13193

if.then.2:                                        ; preds = %if.else
  %8 = load i8*, i8** %tmp, align 8, !dbg !13194, !tbaa !3860
  %call3 = call %struct._object* @PyBytes_FromString(i8* %8), !dbg !13197
  store %struct._object* %call3, %struct._object** %ofile_env, align 8, !dbg !13198, !tbaa !3860
  br label %if.end, !dbg !13199

if.end:                                           ; preds = %if.then.2, %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  %9 = load %struct._object*, %struct._object** %ofile_env, align 8, !dbg !13200, !tbaa !3860
  %tobool5 = icmp ne %struct._object* %9, null, !dbg !13200
  br i1 %tobool5, label %if.end.7, label %if.then.6, !dbg !13203

if.then.6:                                        ; preds = %if.end.4
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13204

if.end.7:                                         ; preds = %if.end.4
  store i32 0, i32* %cleanup.dest.slot, !dbg !13205
  br label %cleanup, !dbg !13205

cleanup:                                          ; preds = %if.end.7, %if.then.6
  %10 = bitcast i8** %tmp to i8*, !dbg !13207
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !13207
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %error, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %while.cond, !dbg !13210

while.cond:                                       ; preds = %while.body, %cleanup.cont
  br i1 false, label %while.body, label %while.end, !dbg !13211

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !13214

while.end:                                        ; preds = %while.cond
  %11 = bitcast i8** %tmp9 to i8*, !dbg !13216
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !13216
  call void @llvm.dbg.declare(metadata i8** %tmp9, metadata !3519, metadata !3830), !dbg !13217
  %call10 = call i8* @X509_get_default_cert_file(), !dbg !13218
  store i8* %call10, i8** %tmp9, align 8, !dbg !13217, !tbaa !3860
  store %struct._object* null, %struct._object** %ofile, align 8, !dbg !13219, !tbaa !3860
  %12 = load i8*, i8** %tmp9, align 8, !dbg !13220, !tbaa !3860
  %tobool11 = icmp ne i8* %12, null, !dbg !13220
  br i1 %tobool11, label %if.else.14, label %if.then.12, !dbg !13222

if.then.12:                                       ; preds = %while.end
  %13 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13223, !tbaa !4101
  %inc13 = add i64 %13, 1, !dbg !13223
  store i64 %inc13, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13223, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %ofile, align 8, !dbg !13226, !tbaa !3860
  br label %if.end.20, !dbg !13227

if.else.14:                                       ; preds = %while.end
  %14 = load i8*, i8** %tmp9, align 8, !dbg !13228, !tbaa !3860
  %call15 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %14), !dbg !13231
  store %struct._object* %call15, %struct._object** %ofile, align 8, !dbg !13232, !tbaa !3860
  %cmp16 = icmp eq %struct._object* %call15, null, !dbg !13233
  br i1 %cmp16, label %if.then.17, label %if.end.19, !dbg !13234

if.then.17:                                       ; preds = %if.else.14
  %15 = load i8*, i8** %tmp9, align 8, !dbg !13235, !tbaa !3860
  %call18 = call %struct._object* @PyBytes_FromString(i8* %15), !dbg !13238
  store %struct._object* %call18, %struct._object** %ofile, align 8, !dbg !13239, !tbaa !3860
  br label %if.end.19, !dbg !13240

if.end.19:                                        ; preds = %if.then.17, %if.else.14
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %if.then.12
  %16 = load %struct._object*, %struct._object** %ofile, align 8, !dbg !13241, !tbaa !3860
  %tobool21 = icmp ne %struct._object* %16, null, !dbg !13241
  br i1 %tobool21, label %if.end.23, label %if.then.22, !dbg !13244

if.then.22:                                       ; preds = %if.end.20
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.24, !dbg !13245

if.end.23:                                        ; preds = %if.end.20
  store i32 0, i32* %cleanup.dest.slot, !dbg !13246
  br label %cleanup.24, !dbg !13246

cleanup.24:                                       ; preds = %if.end.23, %if.then.22
  %17 = bitcast i8** %tmp9 to i8*, !dbg !13247
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !13247
  %cleanup.dest.25 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.8

NodeBlock.8:                                      ; preds = %cleanup.24
  %Pivot.9 = icmp slt i32 %cleanup.dest.25, 2
  br i1 %Pivot.9, label %LeafBlock.4, label %LeafBlock.6

LeafBlock.6:                                      ; preds = %NodeBlock.8
  %SwitchLeaf7 = icmp eq i32 %cleanup.dest.25, 2
  br i1 %SwitchLeaf7, label %error, label %NewDefault.3

LeafBlock.4:                                      ; preds = %NodeBlock.8
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.25, 0
  br i1 %SwitchLeaf5, label %cleanup.cont.26, label %NewDefault.3

cleanup.cont.26:                                  ; preds = %LeafBlock.4
  br label %while.cond.27, !dbg !13248

while.cond.27:                                    ; preds = %while.body.28, %cleanup.cont.26
  br i1 false, label %while.body.28, label %while.end.29, !dbg !13249

while.body.28:                                    ; preds = %while.cond.27
  br label %while.cond.27, !dbg !13250

while.end.29:                                     ; preds = %while.cond.27
  %18 = bitcast i8** %tmp31 to i8*, !dbg !13251
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !13251
  call void @llvm.dbg.declare(metadata i8** %tmp31, metadata !3521, metadata !3830), !dbg !13252
  %call32 = call i8* @X509_get_default_cert_dir_env(), !dbg !13253
  store i8* %call32, i8** %tmp31, align 8, !dbg !13252, !tbaa !3860
  store %struct._object* null, %struct._object** %odir_env, align 8, !dbg !13254, !tbaa !3860
  %19 = load i8*, i8** %tmp31, align 8, !dbg !13255, !tbaa !3860
  %tobool33 = icmp ne i8* %19, null, !dbg !13255
  br i1 %tobool33, label %if.else.36, label %if.then.34, !dbg !13257

if.then.34:                                       ; preds = %while.end.29
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13258, !tbaa !4101
  %inc35 = add i64 %20, 1, !dbg !13258
  store i64 %inc35, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13258, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %odir_env, align 8, !dbg !13261, !tbaa !3860
  br label %if.end.42, !dbg !13262

if.else.36:                                       ; preds = %while.end.29
  %21 = load i8*, i8** %tmp31, align 8, !dbg !13263, !tbaa !3860
  %call37 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %21), !dbg !13266
  store %struct._object* %call37, %struct._object** %odir_env, align 8, !dbg !13267, !tbaa !3860
  %cmp38 = icmp eq %struct._object* %call37, null, !dbg !13268
  br i1 %cmp38, label %if.then.39, label %if.end.41, !dbg !13269

if.then.39:                                       ; preds = %if.else.36
  %22 = load i8*, i8** %tmp31, align 8, !dbg !13270, !tbaa !3860
  %call40 = call %struct._object* @PyBytes_FromString(i8* %22), !dbg !13273
  store %struct._object* %call40, %struct._object** %odir_env, align 8, !dbg !13274, !tbaa !3860
  br label %if.end.41, !dbg !13275

if.end.41:                                        ; preds = %if.then.39, %if.else.36
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.then.34
  %23 = load %struct._object*, %struct._object** %odir_env, align 8, !dbg !13276, !tbaa !3860
  %tobool43 = icmp ne %struct._object* %23, null, !dbg !13276
  br i1 %tobool43, label %if.end.45, label %if.then.44, !dbg !13279

if.then.44:                                       ; preds = %if.end.42
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.46, !dbg !13280

if.end.45:                                        ; preds = %if.end.42
  store i32 0, i32* %cleanup.dest.slot, !dbg !13281
  br label %cleanup.46, !dbg !13281

cleanup.46:                                       ; preds = %if.end.45, %if.then.44
  %24 = bitcast i8** %tmp31 to i8*, !dbg !13282
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !13282
  %cleanup.dest.47 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.15

NodeBlock.15:                                     ; preds = %cleanup.46
  %Pivot.16 = icmp slt i32 %cleanup.dest.47, 2
  br i1 %Pivot.16, label %LeafBlock.11, label %LeafBlock.13

LeafBlock.13:                                     ; preds = %NodeBlock.15
  %SwitchLeaf14 = icmp eq i32 %cleanup.dest.47, 2
  br i1 %SwitchLeaf14, label %error, label %NewDefault.10

LeafBlock.11:                                     ; preds = %NodeBlock.15
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.47, 0
  br i1 %SwitchLeaf12, label %cleanup.cont.48, label %NewDefault.10

cleanup.cont.48:                                  ; preds = %LeafBlock.11
  br label %while.cond.49, !dbg !13283

while.cond.49:                                    ; preds = %while.body.50, %cleanup.cont.48
  br i1 false, label %while.body.50, label %while.end.51, !dbg !13284

while.body.50:                                    ; preds = %while.cond.49
  br label %while.cond.49, !dbg !13285

while.end.51:                                     ; preds = %while.cond.49
  %25 = bitcast i8** %tmp53 to i8*, !dbg !13286
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !13286
  call void @llvm.dbg.declare(metadata i8** %tmp53, metadata !3523, metadata !3830), !dbg !13287
  %call54 = call i8* @X509_get_default_cert_dir(), !dbg !13288
  store i8* %call54, i8** %tmp53, align 8, !dbg !13287, !tbaa !3860
  store %struct._object* null, %struct._object** %odir, align 8, !dbg !13289, !tbaa !3860
  %26 = load i8*, i8** %tmp53, align 8, !dbg !13290, !tbaa !3860
  %tobool55 = icmp ne i8* %26, null, !dbg !13290
  br i1 %tobool55, label %if.else.58, label %if.then.56, !dbg !13292

if.then.56:                                       ; preds = %while.end.51
  %27 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13293, !tbaa !4101
  %inc57 = add i64 %27, 1, !dbg !13293
  store i64 %inc57, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13293, !tbaa !4101
  store %struct._object* @_Py_NoneStruct, %struct._object** %odir, align 8, !dbg !13296, !tbaa !3860
  br label %if.end.64, !dbg !13297

if.else.58:                                       ; preds = %while.end.51
  %28 = load i8*, i8** %tmp53, align 8, !dbg !13298, !tbaa !3860
  %call59 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %28), !dbg !13301
  store %struct._object* %call59, %struct._object** %odir, align 8, !dbg !13302, !tbaa !3860
  %cmp60 = icmp eq %struct._object* %call59, null, !dbg !13303
  br i1 %cmp60, label %if.then.61, label %if.end.63, !dbg !13304

if.then.61:                                       ; preds = %if.else.58
  %29 = load i8*, i8** %tmp53, align 8, !dbg !13305, !tbaa !3860
  %call62 = call %struct._object* @PyBytes_FromString(i8* %29), !dbg !13308
  store %struct._object* %call62, %struct._object** %odir, align 8, !dbg !13309, !tbaa !3860
  br label %if.end.63, !dbg !13310

if.end.63:                                        ; preds = %if.then.61, %if.else.58
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %if.then.56
  %30 = load %struct._object*, %struct._object** %odir, align 8, !dbg !13311, !tbaa !3860
  %tobool65 = icmp ne %struct._object* %30, null, !dbg !13311
  br i1 %tobool65, label %if.end.67, label %if.then.66, !dbg !13314

if.then.66:                                       ; preds = %if.end.64
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.68, !dbg !13315

if.end.67:                                        ; preds = %if.end.64
  store i32 0, i32* %cleanup.dest.slot, !dbg !13316
  br label %cleanup.68, !dbg !13316

cleanup.68:                                       ; preds = %if.end.67, %if.then.66
  %31 = bitcast i8** %tmp53 to i8*, !dbg !13317
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !13317
  %cleanup.dest.69 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.22

NodeBlock.22:                                     ; preds = %cleanup.68
  %Pivot.23 = icmp slt i32 %cleanup.dest.69, 2
  br i1 %Pivot.23, label %LeafBlock.18, label %LeafBlock.20

LeafBlock.20:                                     ; preds = %NodeBlock.22
  %SwitchLeaf21 = icmp eq i32 %cleanup.dest.69, 2
  br i1 %SwitchLeaf21, label %error, label %NewDefault.17

LeafBlock.18:                                     ; preds = %NodeBlock.22
  %SwitchLeaf19 = icmp eq i32 %cleanup.dest.69, 0
  br i1 %SwitchLeaf19, label %cleanup.cont.70, label %NewDefault.17

cleanup.cont.70:                                  ; preds = %LeafBlock.18
  br label %while.cond.71, !dbg !13318

while.cond.71:                                    ; preds = %while.body.72, %cleanup.cont.70
  br i1 false, label %while.body.72, label %while.end.73, !dbg !13319

while.body.72:                                    ; preds = %while.cond.71
  br label %while.cond.71, !dbg !13320

while.end.73:                                     ; preds = %while.cond.71
  %32 = load %struct._object*, %struct._object** %ofile_env, align 8, !dbg !13321, !tbaa !3860
  %33 = load %struct._object*, %struct._object** %ofile, align 8, !dbg !13322, !tbaa !3860
  %34 = load %struct._object*, %struct._object** %odir_env, align 8, !dbg !13323, !tbaa !3860
  %35 = load %struct._object*, %struct._object** %odir, align 8, !dbg !13324, !tbaa !3860
  %call74 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.252, i32 0, i32 0), %struct._object* %32, %struct._object* %33, %struct._object* %34, %struct._object* %35), !dbg !13325
  store %struct._object* %call74, %struct._object** %retval, !dbg !13326
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !13326

error:                                            ; preds = %LeafBlock.20, %LeafBlock.13, %LeafBlock.6, %LeafBlock.1
  br label %do.body, !dbg !13327

do.body:                                          ; preds = %error
  %36 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13328
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !13328
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !3525, metadata !3830), !dbg !13330
  %37 = load %struct._object*, %struct._object** %ofile_env, align 8, !dbg !13331, !tbaa !3860
  store %struct._object* %37, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13330, !tbaa !3860
  %38 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13332, !tbaa !3860
  %cmp76 = icmp ne %struct._object* %38, null, !dbg !13333
  br i1 %cmp76, label %if.then.77, label %if.end.84, !dbg !13334

if.then.77:                                       ; preds = %do.body
  br label %do.body.78, !dbg !13335

do.body.78:                                       ; preds = %if.then.77
  %39 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13337
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !13337
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3527, metadata !3830), !dbg !13339
  %40 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13340, !tbaa !3860
  store %struct._object* %40, %struct._object** %_py_decref_tmp, align 8, !dbg !13339, !tbaa !3860
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13341, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !13343
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !13344, !tbaa !4101
  %dec = add i64 %42, -1, !dbg !13344
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13344, !tbaa !4101
  %cmp80 = icmp ne i64 %dec, 0, !dbg !13345
  br i1 %cmp80, label %if.then.81, label %if.else.82, !dbg !13346

if.then.81:                                       ; preds = %do.body.78
  br label %if.end.83, !dbg !13347

if.else.82:                                       ; preds = %do.body.78
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13349, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !13351
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13351, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !13352
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13352, !tbaa !4206
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13353, !tbaa !3860
  call void %45(%struct._object* %46), !dbg !13354
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.82, %if.then.81
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13355
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !13355
  br label %do.cond, !dbg !13357

do.cond:                                          ; preds = %if.end.83
  br label %do.end, !dbg !13358

do.end:                                           ; preds = %do.cond
  br label %if.end.84, !dbg !13360

if.end.84:                                        ; preds = %do.end, %do.body
  %48 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13362
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !13362
  br label %do.cond.85, !dbg !13365

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !13366

do.end.86:                                        ; preds = %do.cond.85
  br label %do.body.87, !dbg !13368

do.body.87:                                       ; preds = %do.end.86
  %49 = bitcast %struct._object** %_py_xdecref_tmp89 to i8*, !dbg !13369
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !13369
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp89, metadata !3530, metadata !3830), !dbg !13371
  %50 = load %struct._object*, %struct._object** %ofile, align 8, !dbg !13372, !tbaa !3860
  store %struct._object* %50, %struct._object** %_py_xdecref_tmp89, align 8, !dbg !13371, !tbaa !3860
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp89, align 8, !dbg !13373, !tbaa !3860
  %cmp90 = icmp ne %struct._object* %51, null, !dbg !13374
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !13375

if.then.91:                                       ; preds = %do.body.87
  br label %do.body.92, !dbg !13376

do.body.92:                                       ; preds = %if.then.91
  %52 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !13378
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !13378
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !3532, metadata !3830), !dbg !13380
  %53 = load %struct._object*, %struct._object** %_py_xdecref_tmp89, align 8, !dbg !13381, !tbaa !3860
  store %struct._object* %53, %struct._object** %_py_decref_tmp94, align 8, !dbg !13380, !tbaa !3860
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !13382, !tbaa !3860
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !13384
  %55 = load i64, i64* %ob_refcnt95, align 8, !dbg !13385, !tbaa !4101
  %dec96 = add i64 %55, -1, !dbg !13385
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !13385, !tbaa !4101
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !13386
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !13387

if.then.98:                                       ; preds = %do.body.92
  br label %if.end.102, !dbg !13388

if.else.99:                                       ; preds = %do.body.92
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !13390, !tbaa !3860
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !13392
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !13392, !tbaa !4204
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !13393
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !13393, !tbaa !4206
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !13394, !tbaa !3860
  call void %58(%struct._object* %59), !dbg !13395
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %60 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !13396
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !13396
  br label %do.cond.103, !dbg !13398

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !13399

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !13401

if.end.105:                                       ; preds = %do.end.104, %do.body.87
  %61 = bitcast %struct._object** %_py_xdecref_tmp89 to i8*, !dbg !13403
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !13403
  br label %do.cond.106, !dbg !13404

do.cond.106:                                      ; preds = %if.end.105
  br label %do.end.107, !dbg !13405

do.end.107:                                       ; preds = %do.cond.106
  br label %do.body.108, !dbg !13407

do.body.108:                                      ; preds = %do.end.107
  %62 = bitcast %struct._object** %_py_xdecref_tmp110 to i8*, !dbg !13408
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !13408
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp110, metadata !3535, metadata !3830), !dbg !13410
  %63 = load %struct._object*, %struct._object** %odir_env, align 8, !dbg !13411, !tbaa !3860
  store %struct._object* %63, %struct._object** %_py_xdecref_tmp110, align 8, !dbg !13410, !tbaa !3860
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp110, align 8, !dbg !13412, !tbaa !3860
  %cmp111 = icmp ne %struct._object* %64, null, !dbg !13413
  br i1 %cmp111, label %if.then.112, label %if.end.126, !dbg !13414

if.then.112:                                      ; preds = %do.body.108
  br label %do.body.113, !dbg !13415

do.body.113:                                      ; preds = %if.then.112
  %65 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !13417
  call void @llvm.lifetime.start(i64 8, i8* %65) #1, !dbg !13417
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp115, metadata !3537, metadata !3830), !dbg !13419
  %66 = load %struct._object*, %struct._object** %_py_xdecref_tmp110, align 8, !dbg !13420, !tbaa !3860
  store %struct._object* %66, %struct._object** %_py_decref_tmp115, align 8, !dbg !13419, !tbaa !3860
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !13421, !tbaa !3860
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0, !dbg !13423
  %68 = load i64, i64* %ob_refcnt116, align 8, !dbg !13424, !tbaa !4101
  %dec117 = add i64 %68, -1, !dbg !13424
  store i64 %dec117, i64* %ob_refcnt116, align 8, !dbg !13424, !tbaa !4101
  %cmp118 = icmp ne i64 %dec117, 0, !dbg !13425
  br i1 %cmp118, label %if.then.119, label %if.else.120, !dbg !13426

if.then.119:                                      ; preds = %do.body.113
  br label %if.end.123, !dbg !13427

if.else.120:                                      ; preds = %do.body.113
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !13429, !tbaa !3860
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !13431
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8, !dbg !13431, !tbaa !4204
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4, !dbg !13432
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8, !dbg !13432, !tbaa !4206
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !13433, !tbaa !3860
  call void %71(%struct._object* %72), !dbg !13434
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  %73 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !13435
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !13435
  br label %do.cond.124, !dbg !13437

do.cond.124:                                      ; preds = %if.end.123
  br label %do.end.125, !dbg !13438

do.end.125:                                       ; preds = %do.cond.124
  br label %if.end.126, !dbg !13440

if.end.126:                                       ; preds = %do.end.125, %do.body.108
  %74 = bitcast %struct._object** %_py_xdecref_tmp110 to i8*, !dbg !13442
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !13442
  br label %do.cond.127, !dbg !13443

do.cond.127:                                      ; preds = %if.end.126
  br label %do.end.128, !dbg !13444

do.end.128:                                       ; preds = %do.cond.127
  br label %do.body.129, !dbg !13446

do.body.129:                                      ; preds = %do.end.128
  %75 = bitcast %struct._object** %_py_xdecref_tmp131 to i8*, !dbg !13447
  call void @llvm.lifetime.start(i64 8, i8* %75) #1, !dbg !13447
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp131, metadata !3540, metadata !3830), !dbg !13449
  %76 = load %struct._object*, %struct._object** %odir, align 8, !dbg !13450, !tbaa !3860
  store %struct._object* %76, %struct._object** %_py_xdecref_tmp131, align 8, !dbg !13449, !tbaa !3860
  %77 = load %struct._object*, %struct._object** %_py_xdecref_tmp131, align 8, !dbg !13451, !tbaa !3860
  %cmp132 = icmp ne %struct._object* %77, null, !dbg !13452
  br i1 %cmp132, label %if.then.133, label %if.end.147, !dbg !13453

if.then.133:                                      ; preds = %do.body.129
  br label %do.body.134, !dbg !13454

do.body.134:                                      ; preds = %if.then.133
  %78 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !13456
  call void @llvm.lifetime.start(i64 8, i8* %78) #1, !dbg !13456
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp136, metadata !3542, metadata !3830), !dbg !13458
  %79 = load %struct._object*, %struct._object** %_py_xdecref_tmp131, align 8, !dbg !13459, !tbaa !3860
  store %struct._object* %79, %struct._object** %_py_decref_tmp136, align 8, !dbg !13458, !tbaa !3860
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !13460, !tbaa !3860
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !13462
  %81 = load i64, i64* %ob_refcnt137, align 8, !dbg !13463, !tbaa !4101
  %dec138 = add i64 %81, -1, !dbg !13463
  store i64 %dec138, i64* %ob_refcnt137, align 8, !dbg !13463, !tbaa !4101
  %cmp139 = icmp ne i64 %dec138, 0, !dbg !13464
  br i1 %cmp139, label %if.then.140, label %if.else.141, !dbg !13465

if.then.140:                                      ; preds = %do.body.134
  br label %if.end.144, !dbg !13466

if.else.141:                                      ; preds = %do.body.134
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !13468, !tbaa !3860
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !13470
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8, !dbg !13470, !tbaa !4204
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !13471
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8, !dbg !13471, !tbaa !4206
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !13472, !tbaa !3860
  call void %84(%struct._object* %85), !dbg !13473
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  %86 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !13474
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !13474
  br label %do.cond.145, !dbg !13476

do.cond.145:                                      ; preds = %if.end.144
  br label %do.end.146, !dbg !13477

do.end.146:                                       ; preds = %do.cond.145
  br label %if.end.147, !dbg !13479

if.end.147:                                       ; preds = %do.end.146, %do.body.129
  %87 = bitcast %struct._object** %_py_xdecref_tmp131 to i8*, !dbg !13481
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !13481
  br label %do.cond.148, !dbg !13482

do.cond.148:                                      ; preds = %if.end.147
  br label %do.end.149, !dbg !13483

do.end.149:                                       ; preds = %do.cond.148
  store %struct._object* null, %struct._object** %retval, !dbg !13485
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !13485

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.150

NewDefault.3:                                     ; preds = %LeafBlock.6, %LeafBlock.4
  br label %cleanup.150

NewDefault.10:                                    ; preds = %LeafBlock.13, %LeafBlock.11
  br label %cleanup.150

NewDefault.17:                                    ; preds = %LeafBlock.20, %LeafBlock.18
  br label %cleanup.150

cleanup.150:                                      ; preds = %NewDefault.17, %NewDefault.10, %NewDefault.3, %NewDefault, %do.end.149, %while.end.73
  %88 = bitcast %struct._object** %odir to i8*, !dbg !13486
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !13486
  %89 = bitcast %struct._object** %odir_env to i8*, !dbg !13486
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !13486
  %90 = bitcast %struct._object** %ofile to i8*, !dbg !13486
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !13486
  %91 = bitcast %struct._object** %ofile_env to i8*, !dbg !13486
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !13486
  %92 = load %struct._object*, %struct._object** %retval, !dbg !13486
  ret %struct._object* %92, !dbg !13486
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_txt2obj(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [3 x i8*], align 16
  %result = alloca %struct._object*, align 8
  %txt = alloca i8*, align 8
  %name = alloca i32, align 4
  %obj = alloca %struct.asn1_object_st*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3547, metadata !3830), !dbg !13487
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3548, metadata !3830), !dbg !13488
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !3549, metadata !3830), !dbg !13489
  %0 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !13490
  call void @llvm.lifetime.start(i64 24, i8* %0) #1, !dbg !13490
  call void @llvm.dbg.declare(metadata [3 x i8*]* %kwlist, metadata !3550, metadata !3830), !dbg !13491
  %1 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !13491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @PySSL_txt2obj.kwlist to i8*), i64 24, i32 16, i1 false), !dbg !13491
  %2 = bitcast %struct._object** %result to i8*, !dbg !13492
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13492
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !3554, metadata !3830), !dbg !13493
  store %struct._object* null, %struct._object** %result, align 8, !dbg !13493, !tbaa !3860
  %3 = bitcast i8** %txt to i8*, !dbg !13494
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !13494
  call void @llvm.dbg.declare(metadata i8** %txt, metadata !3555, metadata !3830), !dbg !13495
  %4 = bitcast i32* %name to i8*, !dbg !13496
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !13496
  call void @llvm.dbg.declare(metadata i32* %name, metadata !3556, metadata !3830), !dbg !13497
  store i32 0, i32* %name, align 4, !dbg !13497, !tbaa !4372
  %5 = bitcast %struct.asn1_object_st** %obj to i8*, !dbg !13498
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !13498
  call void @llvm.dbg.declare(metadata %struct.asn1_object_st** %obj, metadata !3557, metadata !3830), !dbg !13499
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13500, !tbaa !3860
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !13502, !tbaa !3860
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %kwlist, i32 0, i32 0, !dbg !13503
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.255, i32 0, i32 0), i8** %arraydecay, i8** %txt, i32* %name), !dbg !13504
  %tobool = icmp ne i32 %call, 0, !dbg !13504
  br i1 %tobool, label %if.end, label %if.then, !dbg !13505

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13506
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13506

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %txt, align 8, !dbg !13508, !tbaa !3860
  %9 = load i32, i32* %name, align 4, !dbg !13509, !tbaa !4372
  %tobool1 = icmp ne i32 %9, 0, !dbg !13509
  %cond = select i1 %tobool1, i32 0, i32 1, !dbg !13509
  %call2 = call %struct.asn1_object_st* @OBJ_txt2obj(i8* %8, i32 %cond), !dbg !13510
  store %struct.asn1_object_st* %call2, %struct.asn1_object_st** %obj, align 8, !dbg !13511, !tbaa !3860
  %10 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj, align 8, !dbg !13512, !tbaa !3860
  %cmp = icmp eq %struct.asn1_object_st* %10, null, !dbg !13514
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !13515

if.then.3:                                        ; preds = %if.end
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13516, !tbaa !3860
  %12 = load i8*, i8** %txt, align 8, !dbg !13518, !tbaa !3860
  %call4 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.256, i32 0, i32 0), i8* %12), !dbg !13519
  store %struct._object* null, %struct._object** %retval, !dbg !13520
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13520

if.end.5:                                         ; preds = %if.end
  %13 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj, align 8, !dbg !13521, !tbaa !3860
  %call6 = call %struct._object* @asn1obj2py(%struct.asn1_object_st* %13), !dbg !13522
  store %struct._object* %call6, %struct._object** %result, align 8, !dbg !13523, !tbaa !3860
  %14 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj, align 8, !dbg !13524, !tbaa !3860
  call void @ASN1_OBJECT_free(%struct.asn1_object_st* %14), !dbg !13525
  %15 = load %struct._object*, %struct._object** %result, align 8, !dbg !13526, !tbaa !3860
  store %struct._object* %15, %struct._object** %retval, !dbg !13527
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13527

cleanup:                                          ; preds = %if.end.5, %if.then.3, %if.then
  %16 = bitcast %struct.asn1_object_st** %obj to i8*, !dbg !13528
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !13528
  %17 = bitcast i32* %name to i8*, !dbg !13528
  call void @llvm.lifetime.end(i64 4, i8* %17) #1, !dbg !13528
  %18 = bitcast i8** %txt to i8*, !dbg !13528
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !13528
  %19 = bitcast %struct._object** %result to i8*, !dbg !13528
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !13528
  %20 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !13528
  call void @llvm.lifetime.end(i64 24, i8* %20) #1, !dbg !13528
  %21 = load %struct._object*, %struct._object** %retval, !dbg !13528
  ret %struct._object* %21, !dbg !13528
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_nid2obj(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %nid = alloca i32, align 4
  %obj = alloca %struct.asn1_object_st*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !3573, metadata !3830), !dbg !13529
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !3574, metadata !3830), !dbg !13530
  %0 = bitcast %struct._object** %result to i8*, !dbg !13531
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13531
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !3575, metadata !3830), !dbg !13532
  store %struct._object* null, %struct._object** %result, align 8, !dbg !13532, !tbaa !3860
  %1 = bitcast i32* %nid to i8*, !dbg !13533
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !13533
  call void @llvm.dbg.declare(metadata i32* %nid, metadata !3576, metadata !3830), !dbg !13534
  %2 = bitcast %struct.asn1_object_st** %obj to i8*, !dbg !13535
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13535
  call void @llvm.dbg.declare(metadata %struct.asn1_object_st** %obj, metadata !3577, metadata !3830), !dbg !13536
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13537, !tbaa !3860
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.260, i32 0, i32 0), i32* %nid), !dbg !13539
  %tobool = icmp ne i32 %call, 0, !dbg !13539
  br i1 %tobool, label %if.end, label %if.then, !dbg !13540

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13541

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %nid, align 4, !dbg !13543, !tbaa !4372
  %cmp = icmp slt i32 %4, 0, !dbg !13545
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !13546

if.then.1:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13547, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.261, i32 0, i32 0)), !dbg !13549
  store %struct._object* null, %struct._object** %retval, !dbg !13550
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13550

if.end.2:                                         ; preds = %if.end
  %6 = load i32, i32* %nid, align 4, !dbg !13551, !tbaa !4372
  %call3 = call %struct.asn1_object_st* @OBJ_nid2obj(i32 %6), !dbg !13552
  store %struct.asn1_object_st* %call3, %struct.asn1_object_st** %obj, align 8, !dbg !13553, !tbaa !3860
  %7 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj, align 8, !dbg !13554, !tbaa !3860
  %cmp4 = icmp eq %struct.asn1_object_st* %7, null, !dbg !13556
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !13557

if.then.5:                                        ; preds = %if.end.2
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13558, !tbaa !3860
  %9 = load i32, i32* %nid, align 4, !dbg !13560, !tbaa !4372
  %call6 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.262, i32 0, i32 0), i32 %9), !dbg !13561
  store %struct._object* null, %struct._object** %retval, !dbg !13562
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13562

if.end.7:                                         ; preds = %if.end.2
  %10 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj, align 8, !dbg !13563, !tbaa !3860
  %call8 = call %struct._object* @asn1obj2py(%struct.asn1_object_st* %10), !dbg !13564
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !13565, !tbaa !3860
  %11 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj, align 8, !dbg !13566, !tbaa !3860
  call void @ASN1_OBJECT_free(%struct.asn1_object_st* %11), !dbg !13567
  %12 = load %struct._object*, %struct._object** %result, align 8, !dbg !13568, !tbaa !3860
  store %struct._object* %12, %struct._object** %retval, !dbg !13569
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13569

cleanup:                                          ; preds = %if.end.7, %if.then.5, %if.then.1, %if.then
  %13 = bitcast %struct.asn1_object_st** %obj to i8*, !dbg !13570
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !13570
  %14 = bitcast i32* %nid to i8*, !dbg !13570
  call void @llvm.lifetime.end(i64 4, i8* %14) #1, !dbg !13570
  %15 = bitcast %struct._object** %result to i8*, !dbg !13570
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !13570
  %16 = load %struct._object*, %struct._object** %retval, !dbg !13570
  ret %struct._object* %16, !dbg !13570
}

declare %struct.bio_method_st* @BIO_s_file() #3

declare i8* @PyBytes_AsString(%struct._object*) #3

declare %struct.x509_st* @PEM_read_bio_X509_AUX(%struct.bio_st*, %struct.x509_st**, i32 (i8*, i32, i32, i8*)*, i8*) #3

declare void @RAND_add(i8*, i32, double) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @PySSL_RAND(i32 %len, i32 %pseudo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %len.addr = alloca i32, align 4
  %pseudo.addr = alloca i32, align 4
  %ok = alloca i32, align 4
  %bytes = alloca %struct._object*, align 8
  %err = alloca i64, align 8
  %errstr = alloca i8*, align 8
  %v = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  store i32 %len, i32* %len.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3481, metadata !3830), !dbg !13571
  store i32 %pseudo, i32* %pseudo.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %pseudo.addr, metadata !3482, metadata !3830), !dbg !13572
  %0 = bitcast i32* %ok to i8*, !dbg !13573
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !13573
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !3483, metadata !3830), !dbg !13574
  %1 = bitcast %struct._object** %bytes to i8*, !dbg !13575
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13575
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !3484, metadata !3830), !dbg !13576
  %2 = bitcast i64* %err to i8*, !dbg !13577
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13577
  call void @llvm.dbg.declare(metadata i64* %err, metadata !3485, metadata !3830), !dbg !13578
  %3 = bitcast i8** %errstr to i8*, !dbg !13579
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !13579
  call void @llvm.dbg.declare(metadata i8** %errstr, metadata !3486, metadata !3830), !dbg !13580
  %4 = bitcast %struct._object** %v to i8*, !dbg !13581
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13581
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !3487, metadata !3830), !dbg !13582
  %5 = load i32, i32* %len.addr, align 4, !dbg !13583, !tbaa !4372
  %cmp = icmp slt i32 %5, 0, !dbg !13585
  br i1 %cmp, label %if.then, label %if.end, !dbg !13586

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13587, !tbaa !3860
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.246, i32 0, i32 0)), !dbg !13589
  store %struct._object* null, %struct._object** %retval, !dbg !13590
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13590

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %len.addr, align 4, !dbg !13591, !tbaa !4372
  %conv = sext i32 %7 to i64, !dbg !13591
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %conv), !dbg !13592
  store %struct._object* %call, %struct._object** %bytes, align 8, !dbg !13593, !tbaa !3860
  %8 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !13594, !tbaa !3860
  %cmp1 = icmp eq %struct._object* %8, null, !dbg !13596
  br i1 %cmp1, label %if.then.3, label %if.end.4, !dbg !13597

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !13598
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13598

if.end.4:                                         ; preds = %if.end
  %9 = load i32, i32* %pseudo.addr, align 4, !dbg !13599, !tbaa !4372
  %tobool = icmp ne i32 %9, 0, !dbg !13599
  br i1 %tobool, label %if.then.5, label %if.else, !dbg !13601

if.then.5:                                        ; preds = %if.end.4
  %10 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !13602, !tbaa !3860
  %11 = bitcast %struct._object* %10 to %struct.PyBytesObject*, !dbg !13604
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %11, i32 0, i32 2, !dbg !13605
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !13606
  %12 = load i32, i32* %len.addr, align 4, !dbg !13607, !tbaa !4372
  %call6 = call i32 @RAND_pseudo_bytes(i8* %arraydecay, i32 %12), !dbg !13608
  store i32 %call6, i32* %ok, align 4, !dbg !13609, !tbaa !4372
  %13 = load i32, i32* %ok, align 4, !dbg !13610, !tbaa !4372
  %cmp7 = icmp eq i32 %13, 0, !dbg !13612
  br i1 %cmp7, label %if.then.11, label %lor.lhs.false, !dbg !13613

lor.lhs.false:                                    ; preds = %if.then.5
  %14 = load i32, i32* %ok, align 4, !dbg !13614, !tbaa !4372
  %cmp9 = icmp eq i32 %14, 1, !dbg !13616
  br i1 %cmp9, label %if.then.11, label %if.end.15, !dbg !13617

if.then.11:                                       ; preds = %lor.lhs.false, %if.then.5
  %15 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !13618, !tbaa !3860
  %16 = load i32, i32* %ok, align 4, !dbg !13619, !tbaa !4372
  %cmp12 = icmp eq i32 %16, 1, !dbg !13620
  %cond = select i1 %cmp12, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !13619
  %call14 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), %struct._object* %15, %struct._object* %cond), !dbg !13621
  store %struct._object* %call14, %struct._object** %retval, !dbg !13622
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13622

if.end.15:                                        ; preds = %lor.lhs.false
  br label %if.end.23, !dbg !13623

if.else:                                          ; preds = %if.end.4
  %17 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !13624, !tbaa !3860
  %18 = bitcast %struct._object* %17 to %struct.PyBytesObject*, !dbg !13626
  %ob_sval16 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %18, i32 0, i32 2, !dbg !13627
  %arraydecay17 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval16, i32 0, i32 0, !dbg !13628
  %19 = load i32, i32* %len.addr, align 4, !dbg !13629, !tbaa !4372
  %call18 = call i32 @RAND_bytes(i8* %arraydecay17, i32 %19), !dbg !13630
  store i32 %call18, i32* %ok, align 4, !dbg !13631, !tbaa !4372
  %20 = load i32, i32* %ok, align 4, !dbg !13632, !tbaa !4372
  %cmp19 = icmp eq i32 %20, 1, !dbg !13634
  br i1 %cmp19, label %if.then.21, label %if.end.22, !dbg !13635

if.then.21:                                       ; preds = %if.else
  %21 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !13636, !tbaa !3860
  store %struct._object* %21, %struct._object** %retval, !dbg !13637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13637

if.end.22:                                        ; preds = %if.else
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.15
  br label %do.body, !dbg !13638

do.body:                                          ; preds = %if.end.23
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13639
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !13639
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !3488, metadata !3830), !dbg !13641
  %23 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !13642, !tbaa !3860
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !13641, !tbaa !3860
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13643, !tbaa !3860
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !13645
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !13646, !tbaa !4101
  %dec = add i64 %25, -1, !dbg !13646
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13646, !tbaa !4101
  %cmp24 = icmp ne i64 %dec, 0, !dbg !13647
  br i1 %cmp24, label %if.then.26, label %if.else.27, !dbg !13648

if.then.26:                                       ; preds = %do.body
  br label %if.end.28, !dbg !13649

if.else.27:                                       ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13651, !tbaa !3860
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !13653
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13653, !tbaa !4204
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !13654
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13654, !tbaa !4206
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13655, !tbaa !3860
  call void %28(%struct._object* %29), !dbg !13656
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.27, %if.then.26
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13657
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !13657
  br label %do.cond, !dbg !13659

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !13660

do.end:                                           ; preds = %do.cond
  %call29 = call i64 @ERR_get_error(), !dbg !13662
  store i64 %call29, i64* %err, align 8, !dbg !13663, !tbaa !4354
  %31 = load i64, i64* %err, align 8, !dbg !13664, !tbaa !4354
  %call30 = call i8* @ERR_reason_error_string(i64 %31), !dbg !13665
  store i8* %call30, i8** %errstr, align 8, !dbg !13666, !tbaa !3860
  %32 = load i64, i64* %err, align 8, !dbg !13667, !tbaa !4354
  %33 = load i8*, i8** %errstr, align 8, !dbg !13668, !tbaa !3860
  %call31 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.248, i32 0, i32 0), i64 %32, i8* %33), !dbg !13669
  store %struct._object* %call31, %struct._object** %v, align 8, !dbg !13670, !tbaa !3860
  %34 = load %struct._object*, %struct._object** %v, align 8, !dbg !13671, !tbaa !3860
  %cmp32 = icmp ne %struct._object* %34, null, !dbg !13672
  br i1 %cmp32, label %if.then.34, label %if.end.48, !dbg !13673

if.then.34:                                       ; preds = %do.end
  %35 = load %struct._object*, %struct._object** @PySSLErrorObject, align 8, !dbg !13674, !tbaa !3860
  %36 = load %struct._object*, %struct._object** %v, align 8, !dbg !13675, !tbaa !3860
  call void @PyErr_SetObject(%struct._object* %35, %struct._object* %36), !dbg !13676
  br label %do.body.35, !dbg !13677

do.body.35:                                       ; preds = %if.then.34
  %37 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !13678
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !13678
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !3490, metadata !3830), !dbg !13680
  %38 = load %struct._object*, %struct._object** %v, align 8, !dbg !13681, !tbaa !3860
  store %struct._object* %38, %struct._object** %_py_decref_tmp36, align 8, !dbg !13680, !tbaa !3860
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !13682, !tbaa !3860
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !13684
  %40 = load i64, i64* %ob_refcnt37, align 8, !dbg !13685, !tbaa !4101
  %dec38 = add i64 %40, -1, !dbg !13685
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !13685, !tbaa !4101
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !13686
  br i1 %cmp39, label %if.then.41, label %if.else.42, !dbg !13687

if.then.41:                                       ; preds = %do.body.35
  br label %if.end.45, !dbg !13688

if.else.42:                                       ; preds = %do.body.35
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !13690, !tbaa !3860
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !13692
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !13692, !tbaa !4204
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !13693
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !13693, !tbaa !4206
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !13694, !tbaa !3860
  call void %43(%struct._object* %44), !dbg !13695
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %45 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !13696
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !13696
  br label %do.cond.46, !dbg !13698

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !13699

do.end.47:                                        ; preds = %do.cond.46
  br label %if.end.48, !dbg !13701

if.end.48:                                        ; preds = %do.end.47, %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !13702
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13702

cleanup:                                          ; preds = %if.end.48, %if.then.21, %if.then.11, %if.then.3, %if.then
  %46 = bitcast %struct._object** %v to i8*, !dbg !13703
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !13703
  %47 = bitcast i8** %errstr to i8*, !dbg !13703
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !13703
  %48 = bitcast i64* %err to i8*, !dbg !13703
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !13703
  %49 = bitcast %struct._object** %bytes to i8*, !dbg !13703
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !13703
  %50 = bitcast i32* %ok to i8*, !dbg !13703
  call void @llvm.lifetime.end(i64 4, i8* %50) #1, !dbg !13703
  %51 = load %struct._object*, %struct._object** %retval, !dbg !13703
  ret %struct._object* %51, !dbg !13703
}

declare i32 @RAND_pseudo_bytes(i8*, i32) #3

declare i32 @RAND_bytes(i8*, i32) #3

declare i64 @ERR_get_error() #3

declare i32 @RAND_egd(i8*) #3

declare i32 @RAND_status() #3

declare i8* @X509_get_default_cert_file_env() #3

declare i8* @X509_get_default_cert_file() #3

declare i8* @X509_get_default_cert_dir_env() #3

declare i8* @X509_get_default_cert_dir() #3

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @asn1obj2py(%struct.asn1_object_st* %obj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %obj.addr = alloca %struct.asn1_object_st*, align 8
  %nid = alloca i32, align 4
  %ln = alloca i8*, align 8
  %sn = alloca i8*, align 8
  %buf = alloca [100 x i8], align 16
  %buflen = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.asn1_object_st* %obj, %struct.asn1_object_st** %obj.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.asn1_object_st** %obj.addr, metadata !3562, metadata !3830), !dbg !13704
  %0 = bitcast i32* %nid to i8*, !dbg !13705
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !13705
  call void @llvm.dbg.declare(metadata i32* %nid, metadata !3563, metadata !3830), !dbg !13706
  %1 = bitcast i8** %ln to i8*, !dbg !13707
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13707
  call void @llvm.dbg.declare(metadata i8** %ln, metadata !3564, metadata !3830), !dbg !13708
  %2 = bitcast i8** %sn to i8*, !dbg !13707
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13707
  call void @llvm.dbg.declare(metadata i8** %sn, metadata !3565, metadata !3830), !dbg !13709
  %3 = bitcast [100 x i8]* %buf to i8*, !dbg !13710
  call void @llvm.lifetime.start(i64 100, i8* %3) #1, !dbg !13710
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf, metadata !3566, metadata !3830), !dbg !13711
  %4 = bitcast i32* %buflen to i8*, !dbg !13712
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !13712
  call void @llvm.dbg.declare(metadata i32* %buflen, metadata !3570, metadata !3830), !dbg !13713
  %5 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj.addr, align 8, !dbg !13714, !tbaa !3860
  %call = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %5), !dbg !13715
  store i32 %call, i32* %nid, align 4, !dbg !13716, !tbaa !4372
  %6 = load i32, i32* %nid, align 4, !dbg !13717, !tbaa !4372
  %cmp = icmp eq i32 %6, 0, !dbg !13719
  br i1 %cmp, label %if.then, label %if.end, !dbg !13720

if.then:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13721, !tbaa !3860
  %call1 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.257, i32 0, i32 0)), !dbg !13723
  store %struct._object* null, %struct._object** %retval, !dbg !13724
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13724

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %nid, align 4, !dbg !13725, !tbaa !4372
  %call2 = call i8* @OBJ_nid2sn(i32 %8), !dbg !13726
  store i8* %call2, i8** %sn, align 8, !dbg !13727, !tbaa !3860
  %9 = load i32, i32* %nid, align 4, !dbg !13728, !tbaa !4372
  %call3 = call i8* @OBJ_nid2ln(i32 %9), !dbg !13729
  store i8* %call3, i8** %ln, align 8, !dbg !13730, !tbaa !3860
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !13731
  %10 = load %struct.asn1_object_st*, %struct.asn1_object_st** %obj.addr, align 8, !dbg !13732, !tbaa !3860
  %call4 = call i32 @OBJ_obj2txt(i8* %arraydecay, i32 100, %struct.asn1_object_st* %10, i32 1), !dbg !13733
  store i32 %call4, i32* %buflen, align 4, !dbg !13734, !tbaa !4372
  %11 = load i32, i32* %buflen, align 4, !dbg !13735, !tbaa !4372
  %cmp5 = icmp slt i32 %11, 0, !dbg !13737
  br i1 %cmp5, label %if.then.6, label %if.end.8, !dbg !13738

if.then.6:                                        ; preds = %if.end
  %call7 = call %struct._object* @_setSSLError(i8* null, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.116, i32 0, i32 0), i32 3423), !dbg !13739
  store %struct._object* null, %struct._object** %retval, !dbg !13741
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13741

if.end.8:                                         ; preds = %if.end
  %12 = load i32, i32* %buflen, align 4, !dbg !13742, !tbaa !4372
  %tobool = icmp ne i32 %12, 0, !dbg !13742
  br i1 %tobool, label %if.then.9, label %if.else, !dbg !13744

if.then.9:                                        ; preds = %if.end.8
  %13 = load i32, i32* %nid, align 4, !dbg !13745, !tbaa !4372
  %14 = load i8*, i8** %sn, align 8, !dbg !13747, !tbaa !3860
  %15 = load i8*, i8** %ln, align 8, !dbg !13748, !tbaa !3860
  %arraydecay10 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !13749
  %16 = load i32, i32* %buflen, align 4, !dbg !13750, !tbaa !4372
  %call11 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.258, i32 0, i32 0), i32 %13, i8* %14, i8* %15, i8* %arraydecay10, i32 %16), !dbg !13751
  store %struct._object* %call11, %struct._object** %retval, !dbg !13752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13752

if.else:                                          ; preds = %if.end.8
  %17 = load i32, i32* %nid, align 4, !dbg !13753, !tbaa !4372
  %18 = load i8*, i8** %sn, align 8, !dbg !13755, !tbaa !3860
  %19 = load i8*, i8** %ln, align 8, !dbg !13756, !tbaa !3860
  %call12 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.259, i32 0, i32 0), i32 %17, i8* %18, i8* %19, %struct._object* @_Py_NoneStruct), !dbg !13757
  store %struct._object* %call12, %struct._object** %retval, !dbg !13758
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13758

cleanup:                                          ; preds = %if.else, %if.then.9, %if.then.6, %if.then
  %20 = bitcast i32* %buflen to i8*, !dbg !13759
  call void @llvm.lifetime.end(i64 4, i8* %20) #1, !dbg !13759
  %21 = bitcast [100 x i8]* %buf to i8*, !dbg !13759
  call void @llvm.lifetime.end(i64 100, i8* %21) #1, !dbg !13759
  %22 = bitcast i8** %sn to i8*, !dbg !13759
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !13759
  %23 = bitcast i8** %ln to i8*, !dbg !13759
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !13759
  %24 = bitcast i32* %nid to i8*, !dbg !13759
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !13759
  %25 = load %struct._object*, %struct._object** %retval, !dbg !13759
  ret %struct._object* %25, !dbg !13759
}

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) #3

declare i8* @OBJ_nid2ln(i32) #3

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) #3

declare i32 @CRYPTO_num_locks() #3

declare i8* @PyThread_allocate_lock() #3

declare void @PyThread_free_lock(i8*) #3

declare void @CRYPTO_set_locking_callback(void (i32, i32, i8*, i32)*) #3

; Function Attrs: nounwind uwtable
define internal void @_ssl_thread_locking_function(i32 %mode, i32 %n, i8* %file, i32 %line) #0 {
entry:
  %mode.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3593, metadata !3830), !dbg !13760
  store i32 %n, i32* %n.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3594, metadata !3830), !dbg !13761
  store i8* %file, i8** %file.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3595, metadata !3830), !dbg !13762
  store i32 %line, i32* %line.addr, align 4, !tbaa !4372
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !3596, metadata !3830), !dbg !13763
  %0 = load i8**, i8*** @_ssl_locks, align 8, !dbg !13764, !tbaa !3860
  %cmp = icmp eq i8** %0, null, !dbg !13766
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13767

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !13768, !tbaa !4372
  %cmp1 = icmp slt i32 %1, 0, !dbg !13769
  br i1 %cmp1, label %if.then, label %lor.lhs.false.2, !dbg !13770

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %2 = load i32, i32* %n.addr, align 4, !dbg !13771, !tbaa !4372
  %3 = load i32, i32* @_ssl_locks_count, align 4, !dbg !13773, !tbaa !4372
  %cmp3 = icmp uge i32 %2, %3, !dbg !13774
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13775

if.then:                                          ; preds = %lor.lhs.false.2, %lor.lhs.false, %entry
  br label %if.end.7, !dbg !13776

if.end:                                           ; preds = %lor.lhs.false.2
  %4 = load i32, i32* %mode.addr, align 4, !dbg !13777, !tbaa !4372
  %and = and i32 %4, 1, !dbg !13779
  %tobool = icmp ne i32 %and, 0, !dbg !13779
  br i1 %tobool, label %if.then.4, label %if.else, !dbg !13780

if.then.4:                                        ; preds = %if.end
  %5 = load i32, i32* %n.addr, align 4, !dbg !13781, !tbaa !4372
  %idxprom = sext i32 %5 to i64, !dbg !13783
  %6 = load i8**, i8*** @_ssl_locks, align 8, !dbg !13783, !tbaa !3860
  %arrayidx = getelementptr i8*, i8** %6, i64 %idxprom, !dbg !13783
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !13783, !tbaa !3860
  %call = call i32 @PyThread_acquire_lock(i8* %7, i32 1), !dbg !13784
  br label %if.end.7, !dbg !13785

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %n.addr, align 4, !dbg !13786, !tbaa !4372
  %idxprom5 = sext i32 %8 to i64, !dbg !13788
  %9 = load i8**, i8*** @_ssl_locks, align 8, !dbg !13788, !tbaa !3860
  %arrayidx6 = getelementptr i8*, i8** %9, i64 %idxprom5, !dbg !13788
  %10 = load i8*, i8** %arrayidx6, align 8, !dbg !13788, !tbaa !3860
  call void @PyThread_release_lock(i8* %10), !dbg !13789
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.4, %if.then
  ret void, !dbg !13790
}

declare i32 @CRYPTO_THREADID_set_callback(void (%struct.crypto_threadid_st*)*) #3

; Function Attrs: nounwind uwtable
define internal void @_ssl_threadid_callback(%struct.crypto_threadid_st* %id) #0 {
entry:
  %id.addr = alloca %struct.crypto_threadid_st*, align 8
  store %struct.crypto_threadid_st* %id, %struct.crypto_threadid_st** %id.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.crypto_threadid_st** %id.addr, metadata !3607, metadata !3830), !dbg !13791
  %0 = load %struct.crypto_threadid_st*, %struct.crypto_threadid_st** %id.addr, align 8, !dbg !13792, !tbaa !3860
  %call = call i64 @PyThread_get_thread_ident(), !dbg !13793
  call void @CRYPTO_THREADID_set_numeric(%struct.crypto_threadid_st* %0, i64 %call), !dbg !13794
  ret void, !dbg !13795
}

declare i32 @PyThread_acquire_lock(i8*, i32) #3

declare void @PyThread_release_lock(i8*) #3

declare void @CRYPTO_THREADID_set_numeric(%struct.crypto_threadid_st*, i64) #3

declare i64 @PyThread_get_thread_ident() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @SSLError_str(%struct.PyOSErrorObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !3860
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !3629, metadata !3830), !dbg !13796
  %0 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !13797, !tbaa !3860
  %strerror = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %0, i32 0, i32 8, !dbg !13799
  %1 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !13799, !tbaa !13800
  %cmp = icmp ne %struct._object* %1, null, !dbg !13802
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13803

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !13804, !tbaa !3860
  %strerror1 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %2, i32 0, i32 8, !dbg !13806
  %3 = load %struct._object*, %struct._object** %strerror1, align 8, !dbg !13806, !tbaa !13800
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !13807
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13807, !tbaa !4204
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !13808
  %5 = load i64, i64* %tp_flags, align 8, !dbg !13808, !tbaa !7236
  %and = and i64 %5, 268435456, !dbg !13809
  %cmp2 = icmp ne i64 %and, 0, !dbg !13810
  br i1 %cmp2, label %if.then, label %if.else, !dbg !13811

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !13812, !tbaa !3860
  %strerror3 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %6, i32 0, i32 8, !dbg !13814
  %7 = load %struct._object*, %struct._object** %strerror3, align 8, !dbg !13814, !tbaa !13800
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !13815
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !13816, !tbaa !4101
  %inc = add i64 %8, 1, !dbg !13816
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !13816, !tbaa !4101
  %9 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !13817, !tbaa !3860
  %strerror4 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %9, i32 0, i32 8, !dbg !13818
  %10 = load %struct._object*, %struct._object** %strerror4, align 8, !dbg !13818, !tbaa !13800
  store %struct._object* %10, %struct._object** %retval, !dbg !13819
  br label %return, !dbg !13819

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !13820, !tbaa !3860
  %args = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %11, i32 0, i32 2, !dbg !13821
  %12 = load %struct._object*, %struct._object** %args, align 8, !dbg !13821, !tbaa !13822
  %call = call %struct._object* @PyObject_Str(%struct._object* %12), !dbg !13823
  store %struct._object* %call, %struct._object** %retval, !dbg !13824
  br label %return, !dbg !13824

return:                                           ; preds = %if.else, %if.then
  %13 = load %struct._object*, %struct._object** %retval, !dbg !13825
  ret %struct._object* %13, !dbg !13825
}

declare %struct._object* @PyObject_Str(%struct._object*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3825, !3826, !3827}
!llvm.ident = !{!3828}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !47, subprograms: !2281, globals: !3640)
!1 = !DIFile(filename: "_ssl.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3, !17, !22, !30, !34, !39}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "py_ssl_error", file: !4, line: 109, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_ssl.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16}
!6 = !DIEnumerator(name: "PY_SSL_ERROR_NONE", value: 0)
!7 = !DIEnumerator(name: "PY_SSL_ERROR_SSL", value: 1)
!8 = !DIEnumerator(name: "PY_SSL_ERROR_WANT_READ", value: 2)
!9 = !DIEnumerator(name: "PY_SSL_ERROR_WANT_WRITE", value: 3)
!10 = !DIEnumerator(name: "PY_SSL_ERROR_WANT_X509_LOOKUP", value: 4)
!11 = !DIEnumerator(name: "PY_SSL_ERROR_SYSCALL", value: 5)
!12 = !DIEnumerator(name: "PY_SSL_ERROR_ZERO_RETURN", value: 6)
!13 = !DIEnumerator(name: "PY_SSL_ERROR_WANT_CONNECT", value: 7)
!14 = !DIEnumerator(name: "PY_SSL_ERROR_EOF", value: 8)
!15 = !DIEnumerator(name: "PY_SSL_ERROR_NO_SOCKET", value: 9)
!16 = !DIEnumerator(name: "PY_SSL_ERROR_INVALID_ERROR_CODE", value: 10)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "py_ssl_cert_requirements", file: !4, line: 130, size: 32, align: 32, elements: !18)
!18 = !{!19, !20, !21}
!19 = !DIEnumerator(name: "PY_SSL_CERT_NONE", value: 0)
!20 = !DIEnumerator(name: "PY_SSL_CERT_OPTIONAL", value: 1)
!21 = !DIEnumerator(name: "PY_SSL_CERT_REQUIRED", value: 2)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "py_ssl_version", file: !4, line: 136, size: 32, align: 32, elements: !23)
!23 = !{!24, !25, !26, !27, !28, !29}
!24 = !DIEnumerator(name: "PY_SSL_VERSION_SSL2", value: 0)
!25 = !DIEnumerator(name: "PY_SSL_VERSION_SSL3", value: 1)
!26 = !DIEnumerator(name: "PY_SSL_VERSION_SSL23", value: 2)
!27 = !DIEnumerator(name: "PY_SSL_VERSION_TLS1", value: 3)
!28 = !DIEnumerator(name: "PY_SSL_VERSION_TLS1_1", value: 4)
!29 = !DIEnumerator(name: "PY_SSL_VERSION_TLS1_2", value: 5)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "py_ssl_server_or_client", file: !4, line: 125, size: 32, align: 32, elements: !31)
!31 = !{!32, !33}
!32 = !DIEnumerator(name: "PY_SSL_CLIENT", value: 0)
!33 = !DIEnumerator(name: "PY_SSL_SERVER", value: 1)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 190, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "./Include/pystate.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "PyGILState_LOCKED", value: 0)
!38 = !DIEnumerator(name: "PyGILState_UNLOCKED", value: 1)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 242, size: 32, align: 32, elements: !40)
!40 = !{!41, !42, !43, !44, !45, !46}
!41 = !DIEnumerator(name: "SOCKET_IS_NONBLOCKING", value: 0)
!42 = !DIEnumerator(name: "SOCKET_IS_BLOCKING", value: 1)
!43 = !DIEnumerator(name: "SOCKET_HAS_TIMED_OUT", value: 2)
!44 = !DIEnumerator(name: "SOCKET_HAS_BEEN_CLOSED", value: 3)
!45 = !DIEnumerator(name: "SOCKET_TOO_LARGE_FOR_SELECT", value: 4)
!46 = !DIEnumerator(name: "SOCKET_OPERATION_OK", value: 5)
!47 = !{!48, !49, !387, !96, !88, !2092, !443, !2106, !2114, !2115, !55, !2125, !140, !1601, !2191, !2192, !73, !2204, !988, !2212, !374, !2247, !2253, !567, !2261, !2278, !385}
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !51, line: 109, baseType: !52)
!51 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !51, line: 105, size: 128, align: 64, elements: !53)
!53 = !{!54, !62}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !52, file: !51, line: 107, baseType: !55, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !56, line: 177, baseType: !57)
!56 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !58, line: 102, baseType: !59)
!58 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !60, line: 181, baseType: !61)
!60 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!61 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !52, file: !51, line: 108, baseType: !63, size: 64, align: 64, offset: 64)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !51, line: 334, size: 3200, align: 64, elements: !65)
!65 = !{!66, !72, !76, !77, !78, !83, !146, !151, !156, !157, !162, !214, !245, !257, !263, !264, !265, !267, !269, !300, !301, !302, !311, !312, !317, !318, !320, !322, !332, !335, !353, !354, !355, !357, !359, !360, !362, !367, !372, !377, !378, !379, !380, !381, !382, !383, !384, !386}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !64, file: !51, line: 335, baseType: !67, size: 192, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !51, line: 114, baseType: !68)
!68 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 111, size: 192, align: 64, elements: !69)
!69 = !{!70, !71}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !68, file: !51, line: 112, baseType: !50, size: 128, align: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !68, file: !51, line: 113, baseType: !55, size: 64, align: 64, offset: 128)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !64, file: !51, line: 336, baseType: !73, size: 64, align: 64, offset: 192)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !75)
!75 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !64, file: !51, line: 337, baseType: !55, size: 64, align: 64, offset: 256)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !64, file: !51, line: 337, baseType: !55, size: 64, align: 64, offset: 320)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !64, file: !51, line: 341, baseType: !79, size: 64, align: 64, offset: 384)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !51, line: 308, baseType: !80)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!81 = !DISubroutineType(types: !82)
!82 = !{null, !49}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !64, file: !51, line: 342, baseType: !84, size: 64, align: 64, offset: 448)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !51, line: 314, baseType: !85)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64, align: 64)
!86 = !DISubroutineType(types: !87)
!87 = !{!88, !49, !89, !88}
!88 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64, align: 64)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !58, line: 48, baseType: !91)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !92, line: 246, size: 1728, align: 64, elements: !93)
!92 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!93 = !{!94, !95, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !115, !116, !117, !118, !120, !122, !124, !128, !131, !133, !134, !135, !136, !137, !141, !142}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !91, file: !92, line: 247, baseType: !88, size: 32, align: 32)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !91, file: !92, line: 252, baseType: !96, size: 64, align: 64, offset: 64)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64, align: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !91, file: !92, line: 253, baseType: !96, size: 64, align: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !91, file: !92, line: 254, baseType: !96, size: 64, align: 64, offset: 192)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !91, file: !92, line: 255, baseType: !96, size: 64, align: 64, offset: 256)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !91, file: !92, line: 256, baseType: !96, size: 64, align: 64, offset: 320)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !91, file: !92, line: 257, baseType: !96, size: 64, align: 64, offset: 384)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !91, file: !92, line: 258, baseType: !96, size: 64, align: 64, offset: 448)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !91, file: !92, line: 259, baseType: !96, size: 64, align: 64, offset: 512)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !91, file: !92, line: 261, baseType: !96, size: 64, align: 64, offset: 576)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !91, file: !92, line: 262, baseType: !96, size: 64, align: 64, offset: 640)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !91, file: !92, line: 263, baseType: !96, size: 64, align: 64, offset: 704)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !91, file: !92, line: 265, baseType: !108, size: 64, align: 64, offset: 768)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64, align: 64)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !92, line: 161, size: 192, align: 64, elements: !110)
!110 = !{!111, !112, !114}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !109, file: !92, line: 162, baseType: !108, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !109, file: !92, line: 163, baseType: !113, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !109, file: !92, line: 167, baseType: !88, size: 32, align: 32, offset: 128)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !91, file: !92, line: 267, baseType: !113, size: 64, align: 64, offset: 832)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !91, file: !92, line: 269, baseType: !88, size: 32, align: 32, offset: 896)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !91, file: !92, line: 273, baseType: !88, size: 32, align: 32, offset: 928)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !91, file: !92, line: 275, baseType: !119, size: 64, align: 64, offset: 960)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !60, line: 140, baseType: !61)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !91, file: !92, line: 279, baseType: !121, size: 16, align: 16, offset: 1024)
!121 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !91, file: !92, line: 280, baseType: !123, size: 8, align: 8, offset: 1040)
!123 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !91, file: !92, line: 281, baseType: !125, size: 8, align: 8, offset: 1048)
!125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 8, align: 8, elements: !126)
!126 = !{!127}
!127 = !DISubrange(count: 1)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !91, file: !92, line: 285, baseType: !129, size: 64, align: 64, offset: 1088)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64, align: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !92, line: 155, baseType: null)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !91, file: !92, line: 294, baseType: !132, size: 64, align: 64, offset: 1152)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !60, line: 141, baseType: !61)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !91, file: !92, line: 303, baseType: !48, size: 64, align: 64, offset: 1216)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !91, file: !92, line: 304, baseType: !48, size: 64, align: 64, offset: 1280)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !91, file: !92, line: 305, baseType: !48, size: 64, align: 64, offset: 1344)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !91, file: !92, line: 306, baseType: !48, size: 64, align: 64, offset: 1408)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !91, file: !92, line: 307, baseType: !138, size: 64, align: 64, offset: 1472)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !139, line: 62, baseType: !140)
!139 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!140 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !91, file: !92, line: 309, baseType: !88, size: 32, align: 32, offset: 1536)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !91, file: !92, line: 311, baseType: !143, size: 160, align: 8, offset: 1568)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 160, align: 8, elements: !144)
!144 = !{!145}
!145 = !DISubrange(count: 20)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !64, file: !51, line: 343, baseType: !147, size: 64, align: 64, offset: 512)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !51, line: 316, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64, align: 64)
!149 = !DISubroutineType(types: !150)
!150 = !{!49, !49, !96}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !64, file: !51, line: 344, baseType: !152, size: 64, align: 64, offset: 576)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !51, line: 318, baseType: !153)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = !DISubroutineType(types: !155)
!155 = !{!88, !49, !96, !49}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !64, file: !51, line: 345, baseType: !48, size: 64, align: 64, offset: 640)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !64, file: !51, line: 346, baseType: !158, size: 64, align: 64, offset: 704)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !51, line: 320, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64, align: 64)
!160 = !DISubroutineType(types: !161)
!161 = !{!49, !49}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !64, file: !51, line: 350, baseType: !163, size: 64, align: 64, offset: 768)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !51, line: 278, baseType: !165)
!165 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 236, size: 2176, align: 64, elements: !166)
!166 = !{!167, !172, !173, !174, !175, !176, !181, !183, !184, !185, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !165, file: !51, line: 241, baseType: !168, size: 64, align: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !51, line: 166, baseType: !169)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64, align: 64)
!170 = !DISubroutineType(types: !171)
!171 = !{!49, !49, !49}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !165, file: !51, line: 242, baseType: !168, size: 64, align: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !165, file: !51, line: 243, baseType: !168, size: 64, align: 64, offset: 128)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !165, file: !51, line: 244, baseType: !168, size: 64, align: 64, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !165, file: !51, line: 245, baseType: !168, size: 64, align: 64, offset: 256)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !165, file: !51, line: 246, baseType: !177, size: 64, align: 64, offset: 320)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !51, line: 167, baseType: !178)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!49, !49, !49, !49}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !165, file: !51, line: 247, baseType: !182, size: 64, align: 64, offset: 384)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !51, line: 165, baseType: !159)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !165, file: !51, line: 248, baseType: !182, size: 64, align: 64, offset: 448)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !165, file: !51, line: 249, baseType: !182, size: 64, align: 64, offset: 512)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !165, file: !51, line: 250, baseType: !186, size: 64, align: 64, offset: 576)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !51, line: 168, baseType: !187)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64, align: 64)
!188 = !DISubroutineType(types: !189)
!189 = !{!88, !49}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !165, file: !51, line: 251, baseType: !182, size: 64, align: 64, offset: 640)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !165, file: !51, line: 252, baseType: !168, size: 64, align: 64, offset: 704)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !165, file: !51, line: 253, baseType: !168, size: 64, align: 64, offset: 768)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !165, file: !51, line: 254, baseType: !168, size: 64, align: 64, offset: 832)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !165, file: !51, line: 255, baseType: !168, size: 64, align: 64, offset: 896)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !165, file: !51, line: 256, baseType: !168, size: 64, align: 64, offset: 960)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !165, file: !51, line: 257, baseType: !182, size: 64, align: 64, offset: 1024)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !165, file: !51, line: 258, baseType: !48, size: 64, align: 64, offset: 1088)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !165, file: !51, line: 259, baseType: !182, size: 64, align: 64, offset: 1152)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !165, file: !51, line: 261, baseType: !168, size: 64, align: 64, offset: 1216)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !165, file: !51, line: 262, baseType: !168, size: 64, align: 64, offset: 1280)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !165, file: !51, line: 263, baseType: !168, size: 64, align: 64, offset: 1344)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !165, file: !51, line: 264, baseType: !168, size: 64, align: 64, offset: 1408)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !165, file: !51, line: 265, baseType: !177, size: 64, align: 64, offset: 1472)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !165, file: !51, line: 266, baseType: !168, size: 64, align: 64, offset: 1536)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !165, file: !51, line: 267, baseType: !168, size: 64, align: 64, offset: 1600)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !165, file: !51, line: 268, baseType: !168, size: 64, align: 64, offset: 1664)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !165, file: !51, line: 269, baseType: !168, size: 64, align: 64, offset: 1728)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !165, file: !51, line: 270, baseType: !168, size: 64, align: 64, offset: 1792)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !165, file: !51, line: 272, baseType: !168, size: 64, align: 64, offset: 1856)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !165, file: !51, line: 273, baseType: !168, size: 64, align: 64, offset: 1920)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !165, file: !51, line: 274, baseType: !168, size: 64, align: 64, offset: 1984)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !165, file: !51, line: 275, baseType: !168, size: 64, align: 64, offset: 2048)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !165, file: !51, line: 277, baseType: !182, size: 64, align: 64, offset: 2112)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !64, file: !51, line: 351, baseType: !215, size: 64, align: 64, offset: 832)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !51, line: 292, baseType: !217)
!217 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 280, size: 640, align: 64, elements: !218)
!218 = !{!219, !224, !225, !230, !231, !232, !237, !238, !243, !244}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !217, file: !51, line: 281, baseType: !220, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !51, line: 169, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, align: 64)
!222 = !DISubroutineType(types: !223)
!223 = !{!55, !49}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !217, file: !51, line: 282, baseType: !168, size: 64, align: 64, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !217, file: !51, line: 283, baseType: !226, size: 64, align: 64, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !51, line: 170, baseType: !227)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!49, !49, !55}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !217, file: !51, line: 284, baseType: !226, size: 64, align: 64, offset: 192)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !217, file: !51, line: 285, baseType: !48, size: 64, align: 64, offset: 256)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !217, file: !51, line: 286, baseType: !233, size: 64, align: 64, offset: 320)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !51, line: 172, baseType: !234)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{!88, !49, !55, !49}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !217, file: !51, line: 287, baseType: !48, size: 64, align: 64, offset: 384)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !217, file: !51, line: 288, baseType: !239, size: 64, align: 64, offset: 448)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !51, line: 231, baseType: !240)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64, align: 64)
!241 = !DISubroutineType(types: !242)
!242 = !{!88, !49, !49}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !217, file: !51, line: 290, baseType: !168, size: 64, align: 64, offset: 512)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !217, file: !51, line: 291, baseType: !226, size: 64, align: 64, offset: 576)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !64, file: !51, line: 352, baseType: !246, size: 64, align: 64, offset: 896)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !51, line: 298, baseType: !248)
!248 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 294, size: 192, align: 64, elements: !249)
!249 = !{!250, !251, !252}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !248, file: !51, line: 295, baseType: !220, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !248, file: !51, line: 296, baseType: !168, size: 64, align: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !248, file: !51, line: 297, baseType: !253, size: 64, align: 64, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !51, line: 174, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64, align: 64)
!255 = !DISubroutineType(types: !256)
!256 = !{!88, !49, !49, !49}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !64, file: !51, line: 356, baseType: !258, size: 64, align: 64, offset: 960)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !51, line: 321, baseType: !259)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64, align: 64)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !49}
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !56, line: 186, baseType: !55)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !64, file: !51, line: 357, baseType: !177, size: 64, align: 64, offset: 1024)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !64, file: !51, line: 358, baseType: !158, size: 64, align: 64, offset: 1088)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !64, file: !51, line: 359, baseType: !266, size: 64, align: 64, offset: 1152)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !51, line: 317, baseType: !169)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !64, file: !51, line: 360, baseType: !268, size: 64, align: 64, offset: 1216)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !51, line: 319, baseType: !254)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !64, file: !51, line: 363, baseType: !270, size: 64, align: 64, offset: 1280)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !51, line: 304, baseType: !272)
!272 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 301, size: 128, align: 64, elements: !273)
!273 = !{!274, !295}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !272, file: !51, line: 302, baseType: !275, size: 64, align: 64)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !51, line: 193, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DISubroutineType(types: !278)
!278 = !{!88, !49, !279, !88}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64, align: 64)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !51, line: 191, baseType: !281)
!281 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !51, line: 178, size: 640, align: 64, elements: !282)
!282 = !{!283, !284, !285, !286, !287, !288, !289, !290, !292, !293, !294}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !281, file: !51, line: 179, baseType: !48, size: 64, align: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !281, file: !51, line: 180, baseType: !49, size: 64, align: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !281, file: !51, line: 181, baseType: !55, size: 64, align: 64, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !281, file: !51, line: 182, baseType: !55, size: 64, align: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !281, file: !51, line: 184, baseType: !88, size: 32, align: 32, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !281, file: !51, line: 185, baseType: !88, size: 32, align: 32, offset: 288)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !281, file: !51, line: 186, baseType: !96, size: 64, align: 64, offset: 320)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !281, file: !51, line: 187, baseType: !291, size: 64, align: 64, offset: 384)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !281, file: !51, line: 188, baseType: !291, size: 64, align: 64, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !281, file: !51, line: 189, baseType: !291, size: 64, align: 64, offset: 512)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !281, file: !51, line: 190, baseType: !48, size: 64, align: 64, offset: 576)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !272, file: !51, line: 303, baseType: !296, size: 64, align: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !51, line: 194, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, align: 64)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !49, !279}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !64, file: !51, line: 366, baseType: !140, size: 64, align: 64, offset: 1344)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !64, file: !51, line: 368, baseType: !73, size: 64, align: 64, offset: 1408)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !64, file: !51, line: 372, baseType: !303, size: 64, align: 64, offset: 1472)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !51, line: 233, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!88, !49, !307, !48}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !51, line: 232, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64, align: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{!88, !49, !48}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !64, file: !51, line: 375, baseType: !186, size: 64, align: 64, offset: 1536)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !64, file: !51, line: 379, baseType: !313, size: 64, align: 64, offset: 1600)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !51, line: 322, baseType: !314)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64, align: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{!49, !49, !49, !88}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !64, file: !51, line: 382, baseType: !55, size: 64, align: 64, offset: 1664)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !64, file: !51, line: 385, baseType: !319, size: 64, align: 64, offset: 1728)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !51, line: 323, baseType: !159)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !64, file: !51, line: 386, baseType: !321, size: 64, align: 64, offset: 1792)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !51, line: 324, baseType: !159)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !64, file: !51, line: 389, baseType: !323, size: 64, align: 64, offset: 1856)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64, align: 64)
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !325, line: 40, size: 256, align: 64, elements: !326)
!325 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!326 = !{!327, !328, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !324, file: !325, line: 41, baseType: !73, size: 64, align: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !324, file: !325, line: 42, baseType: !329, size: 64, align: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !325, line: 18, baseType: !169)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !324, file: !325, line: 43, baseType: !88, size: 32, align: 32, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !324, file: !325, line: 45, baseType: !73, size: 64, align: 64, offset: 192)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !64, file: !51, line: 390, baseType: !333, size: 64, align: 64, offset: 1920)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64, align: 64)
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !51, line: 390, flags: DIFlagFwdDecl)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !64, file: !51, line: 391, baseType: !336, size: 64, align: 64, offset: 1984)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64, align: 64)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !338, line: 11, size: 320, align: 64, elements: !339)
!338 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!339 = !{!340, !341, !346, !351, !352}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !337, file: !338, line: 12, baseType: !96, size: 64, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !337, file: !338, line: 13, baseType: !342, size: 64, align: 64, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !338, line: 8, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{!49, !49, !48}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !337, file: !338, line: 14, baseType: !347, size: 64, align: 64, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !338, line: 9, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64, align: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!88, !49, !49, !48}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !337, file: !338, line: 15, baseType: !96, size: 64, align: 64, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !337, file: !338, line: 16, baseType: !48, size: 64, align: 64, offset: 256)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !64, file: !51, line: 392, baseType: !63, size: 64, align: 64, offset: 2048)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !64, file: !51, line: 393, baseType: !49, size: 64, align: 64, offset: 2112)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !64, file: !51, line: 394, baseType: !356, size: 64, align: 64, offset: 2176)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !51, line: 325, baseType: !178)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !64, file: !51, line: 395, baseType: !358, size: 64, align: 64, offset: 2240)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !51, line: 326, baseType: !254)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !64, file: !51, line: 396, baseType: !55, size: 64, align: 64, offset: 2304)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !64, file: !51, line: 397, baseType: !361, size: 64, align: 64, offset: 2368)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !51, line: 327, baseType: !254)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !64, file: !51, line: 398, baseType: !363, size: 64, align: 64, offset: 2432)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !51, line: 329, baseType: !364)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64, align: 64)
!365 = !DISubroutineType(types: !366)
!366 = !{!49, !63, !55}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !64, file: !51, line: 399, baseType: !368, size: 64, align: 64, offset: 2496)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !51, line: 328, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DISubroutineType(types: !371)
!371 = !{!49, !63, !49, !49}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !64, file: !51, line: 400, baseType: !373, size: 64, align: 64, offset: 2560)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !51, line: 307, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{null, !48}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !64, file: !51, line: 401, baseType: !186, size: 64, align: 64, offset: 2624)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !64, file: !51, line: 402, baseType: !49, size: 64, align: 64, offset: 2688)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !64, file: !51, line: 403, baseType: !49, size: 64, align: 64, offset: 2752)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !64, file: !51, line: 404, baseType: !49, size: 64, align: 64, offset: 2816)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !64, file: !51, line: 405, baseType: !49, size: 64, align: 64, offset: 2880)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !64, file: !51, line: 406, baseType: !49, size: 64, align: 64, offset: 2944)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !64, file: !51, line: 407, baseType: !79, size: 64, align: 64, offset: 3008)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !64, file: !51, line: 410, baseType: !385, size: 32, align: 32, offset: 3072)
!385 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !64, file: !51, line: 412, baseType: !79, size: 64, align: 64, offset: 3136)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySSLSocket", file: !4, line: 227, baseType: !389)
!389 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 218, size: 448, align: 64, elements: !390)
!390 = !{!391, !392, !393, !2091, !2102, !2103, !2104, !2105}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !389, file: !4, line: 219, baseType: !50, size: 128, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "Socket", scope: !389, file: !4, line: 220, baseType: !49, size: 64, align: 64, offset: 128)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !389, file: !4, line: 221, baseType: !394, size: 64, align: 64, offset: 192)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL", file: !396, line: 172, baseType: !397)
!396 = !DIFile(filename: "/usr/include/openssl/ossl_typ.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_st", file: !398, line: 1065, size: 5504, align: 64, elements: !399)
!398 = !DIFile(filename: "/usr/include/openssl/ssl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!399 = !{!400, !401, !402, !1608, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1738, !1890, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2034, !2035, !2036, !2037, !2038, !2039, !2042, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2062, !2067, !2068, !2075, !2076, !2077, !2078, !2079, !2080, !2087, !2088, !2089, !2090}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !397, file: !398, line: 1070, baseType: !88, size: 32, align: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !397, file: !398, line: 1071, baseType: !88, size: 32, align: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !397, file: !398, line: 1073, baseType: !403, size: 64, align: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_METHOD", file: !398, line: 366, baseType: !406)
!406 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_method_st", file: !398, line: 409, size: 1856, align: 64, elements: !407)
!407 = !{!408, !409, !413, !417, !418, !419, !420, !424, !425, !431, !432, !433, !434, !439, !445, !449, !450, !454, !1563, !1567, !1571, !1575, !1579, !1583, !1589, !1593, !1596, !1597, !1604}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !406, file: !398, line: 411, baseType: !88, size: 32, align: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_new", scope: !406, file: !398, line: 412, baseType: !410, size: 64, align: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64, align: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{!88, !394}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_clear", scope: !406, file: !398, line: 413, baseType: !414, size: 64, align: 64, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{null, !394}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_free", scope: !406, file: !398, line: 414, baseType: !414, size: 64, align: 64, offset: 192)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_accept", scope: !406, file: !398, line: 415, baseType: !410, size: 64, align: 64, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_connect", scope: !406, file: !398, line: 416, baseType: !410, size: 64, align: 64, offset: 320)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_read", scope: !406, file: !398, line: 417, baseType: !421, size: 64, align: 64, offset: 384)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64, align: 64)
!422 = !DISubroutineType(types: !423)
!423 = !{!88, !394, !48, !88}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_peek", scope: !406, file: !398, line: 418, baseType: !421, size: 64, align: 64, offset: 448)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_write", scope: !406, file: !398, line: 419, baseType: !426, size: 64, align: 64, offset: 512)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64, align: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!88, !394, !429, !88}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64, align: 64)
!430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_shutdown", scope: !406, file: !398, line: 420, baseType: !410, size: 64, align: 64, offset: 576)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_renegotiate", scope: !406, file: !398, line: 421, baseType: !410, size: 64, align: 64, offset: 640)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_renegotiate_check", scope: !406, file: !398, line: 422, baseType: !410, size: 64, align: 64, offset: 704)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_get_message", scope: !406, file: !398, line: 423, baseType: !435, size: 64, align: 64, offset: 768)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64, align: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{!61, !394, !88, !88, !88, !61, !438}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64, align: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_read_bytes", scope: !406, file: !398, line: 425, baseType: !440, size: 64, align: 64, offset: 832)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64, align: 64)
!441 = !DISubroutineType(types: !442)
!442 = !{!88, !394, !88, !443, !88, !88}
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_write_bytes", scope: !406, file: !398, line: 427, baseType: !446, size: 64, align: 64, offset: 896)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{!88, !394, !88, !429, !88}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_dispatch_alert", scope: !406, file: !398, line: 428, baseType: !410, size: 64, align: 64, offset: 960)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_ctrl", scope: !406, file: !398, line: 429, baseType: !451, size: 64, align: 64, offset: 1024)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64, align: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{!61, !394, !88, !61, !48}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_ctx_ctrl", scope: !406, file: !398, line: 430, baseType: !455, size: 64, align: 64, offset: 1088)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64, align: 64)
!456 = !DISubroutineType(types: !457)
!457 = !{!61, !458, !88, !61, !48}
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CTX", file: !396, line: 173, baseType: !460)
!460 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_ctx_st", file: !398, line: 732, size: 4864, align: 64, elements: !461)
!461 = !{!462, !463, !481, !482, !1201, !1206, !1207, !1277, !1278, !1279, !1280, !1287, !1292, !1296, !1310, !1311, !1315, !1316, !1322, !1323, !1328, !1332, !1336, !1337, !1397, !1398, !1399, !1400, !1405, !1411, !1416, !1417, !1418, !1419, !1422, !1423, !1427, !1428, !1429, !1430, !1431, !1432, !1437, !1438, !1439, !1440, !1441, !1445, !1446, !1450, !1451, !1452, !1522, !1526, !1527, !1531, !1532, !1533, !1537, !1541, !1542, !1545, !1546, !1551, !1552, !1557, !1558}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !460, file: !398, line: 734, baseType: !403, size: 64, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list", scope: !460, file: !398, line: 736, baseType: !464, size: 64, align: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64, align: 64)
!465 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SSL_CIPHER", file: !398, line: 370, size: 256, align: 64, elements: !466)
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !465, file: !398, line: 370, baseType: !468, size: 256, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_STACK", file: !469, line: 74, baseType: !470)
!469 = !DIFile(filename: "/usr/include/openssl/stack.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!470 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st", file: !469, line: 66, size: 256, align: 64, elements: !471)
!471 = !{!472, !473, !475, !476, !477}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !470, file: !469, line: 68, baseType: !88, size: 32, align: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !470, file: !469, line: 69, baseType: !474, size: 64, align: 64, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64, align: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "sorted", scope: !470, file: !469, line: 70, baseType: !88, size: 32, align: 32, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "num_alloc", scope: !470, file: !469, line: 72, baseType: !88, size: 32, align: 32, offset: 160)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !470, file: !469, line: 73, baseType: !478, size: 64, align: 64, offset: 192)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64, align: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!88, !429, !429}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list_by_id", scope: !460, file: !398, line: 738, baseType: !464, size: 64, align: 64, offset: 128)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "cert_store", scope: !460, file: !398, line: 740, baseType: !483, size: 64, align: 64, offset: 192)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64, align: 64)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_store_st", file: !485, line: 183, size: 1152, align: 64, elements: !486)
!485 = !DIFile(filename: "/usr/include/openssl/x509_vfy.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!486 = !{!487, !488, !493, !498, !519, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !484, file: !485, line: 186, baseType: !88, size: 32, align: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "objs", scope: !484, file: !485, line: 187, baseType: !489, size: 64, align: 64, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64, align: 64)
!490 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_OBJECT", file: !485, line: 138, size: 256, align: 64, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !490, file: !485, line: 138, baseType: !468, size: 256, align: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "get_cert_methods", scope: !484, file: !485, line: 190, baseType: !494, size: 64, align: 64, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64, align: 64)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_LOOKUP", file: !485, line: 137, size: 256, align: 64, elements: !496)
!496 = !{!497}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !495, file: !485, line: 137, baseType: !468, size: 256, align: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !484, file: !485, line: 192, baseType: !499, size: 64, align: 64, offset: 192)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_VERIFY_PARAM", file: !485, line: 176, baseType: !501)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_VERIFY_PARAM_st", file: !485, line: 166, size: 448, align: 64, elements: !502)
!502 = !{!503, !504, !508, !509, !510, !511, !512, !513}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !501, file: !485, line: 168, baseType: !96, size: 64, align: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "check_time", scope: !501, file: !485, line: 169, baseType: !505, size: 64, align: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !506, line: 75, baseType: !507)
!506 = !DIFile(filename: "/usr/include/time.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !60, line: 148, baseType: !61)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "inh_flags", scope: !501, file: !485, line: 170, baseType: !140, size: 64, align: 64, offset: 128)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !501, file: !485, line: 171, baseType: !140, size: 64, align: 64, offset: 192)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !501, file: !485, line: 172, baseType: !88, size: 32, align: 32, offset: 256)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "trust", scope: !501, file: !485, line: 173, baseType: !88, size: 32, align: 32, offset: 288)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !501, file: !485, line: 174, baseType: !88, size: 32, align: 32, offset: 320)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "policies", scope: !501, file: !485, line: 175, baseType: !514, size: 64, align: 64, offset: 384)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64, align: 64)
!515 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_ASN1_OBJECT", file: !516, line: 791, size: 256, align: 64, elements: !517)
!516 = !DIFile(filename: "/usr/include/openssl/asn1.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !515, file: !516, line: 791, baseType: !468, size: 256, align: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !484, file: !485, line: 195, baseType: !520, size: 64, align: 64, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64, align: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{!88, !523}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_STORE_CTX", file: !396, line: 156, baseType: !525)
!525 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_store_ctx_st", file: !485, line: 230, size: 1984, align: 64, elements: !526)
!526 = !{!527, !530, !531, !1060, !1065, !1070, !1071, !1072, !1073, !1077, !1082, !1086, !1087, !1154, !1158, !1162, !1163, !1167, !1171, !1172, !1173, !1174, !1175, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !525, file: !485, line: 232, baseType: !528, size: 64, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64, align: 64)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_STORE", file: !396, line: 155, baseType: !484)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "current_method", scope: !525, file: !485, line: 233, baseType: !88, size: 32, align: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !525, file: !485, line: 236, baseType: !532, size: 64, align: 64, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64, align: 64)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509", file: !396, line: 148, baseType: !534)
!534 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_st", file: !535, line: 279, size: 1600, align: 64, elements: !536)
!535 = !DIFile(filename: "/usr/include/openssl/x509.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!536 = !{!537, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !994, !998, !1003, !1005, !1016, !1021, !1044, !1046}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "cert_info", scope: !534, file: !535, line: 281, baseType: !538, size: 64, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64, align: 64)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CINF", file: !535, line: 262, baseType: !540)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_cinf_st", file: !535, line: 249, size: 832, align: 64, elements: !541)
!541 = !{!542, !551, !552, !632, !654, !663, !664, !953, !954, !955, !960}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !540, file: !535, line: 251, baseType: !543, size: 64, align: 64)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64, align: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_INTEGER", file: !396, line: 79, baseType: !545)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "asn1_string_st", file: !516, line: 238, size: 192, align: 64, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !545, file: !516, line: 240, baseType: !88, size: 32, align: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !545, file: !516, line: 241, baseType: !88, size: 32, align: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !545, file: !516, line: 242, baseType: !443, size: 64, align: 64, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !545, file: !516, line: 247, baseType: !61, size: 64, align: 64, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "serialNumber", scope: !540, file: !535, line: 252, baseType: !543, size: 64, align: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !540, file: !535, line: 253, baseType: !553, size: 64, align: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64, align: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_ALGOR", file: !396, line: 149, baseType: !555)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_algor_st", file: !535, line: 144, size: 128, align: 64, elements: !556)
!556 = !{!557, !570}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm", scope: !555, file: !535, line: 146, baseType: !558, size: 64, align: 64)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64, align: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_OBJECT", file: !516, line: 218, baseType: !560)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "asn1_object_st", file: !516, line: 211, size: 320, align: 64, elements: !561)
!561 = !{!562, !563, !564, !565, !566, !569}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "sn", scope: !560, file: !516, line: 213, baseType: !73, size: 64, align: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "ln", scope: !560, file: !516, line: 213, baseType: !73, size: 64, align: 64, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !560, file: !516, line: 214, baseType: !88, size: 32, align: 32, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !560, file: !516, line: 215, baseType: !88, size: 32, align: 32, offset: 160)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !560, file: !516, line: 216, baseType: !567, size: 64, align: 64, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64, align: 64)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !560, file: !516, line: 217, baseType: !88, size: 32, align: 32, offset: 256)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "parameter", scope: !555, file: !535, line: 147, baseType: !571, size: 64, align: 64, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64, align: 64)
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_TYPE", file: !516, line: 549, baseType: !573)
!573 = !DICompositeType(tag: DW_TAG_structure_type, name: "asn1_type_st", file: !516, line: 521, size: 128, align: 64, elements: !574)
!574 = !{!575, !576}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !573, file: !516, line: 523, baseType: !88, size: 32, align: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !573, file: !516, line: 548, baseType: !577, size: 64, align: 64, offset: 64)
!577 = !DICompositeType(tag: DW_TAG_union_type, scope: !573, file: !516, line: 524, size: 64, align: 64, elements: !578)
!578 = !{!579, !580, !582, !585, !586, !587, !590, !593, !596, !599, !602, !605, !608, !611, !614, !617, !620, !623, !626, !627, !628}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !577, file: !516, line: 525, baseType: !96, size: 64, align: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "boolean", scope: !577, file: !516, line: 526, baseType: !581, size: 32, align: 32)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_BOOLEAN", file: !396, line: 95, baseType: !88)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "asn1_string", scope: !577, file: !516, line: 527, baseType: !583, size: 64, align: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64, align: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_STRING", file: !396, line: 94, baseType: !545)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !577, file: !516, line: 528, baseType: !558, size: 64, align: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !577, file: !516, line: 529, baseType: !543, size: 64, align: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "enumerated", scope: !577, file: !516, line: 530, baseType: !588, size: 64, align: 64)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64, align: 64)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_ENUMERATED", file: !396, line: 80, baseType: !545)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "bit_string", scope: !577, file: !516, line: 531, baseType: !591, size: 64, align: 64)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64, align: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_BIT_STRING", file: !396, line: 81, baseType: !545)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "octet_string", scope: !577, file: !516, line: 532, baseType: !594, size: 64, align: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64, align: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_OCTET_STRING", file: !396, line: 82, baseType: !545)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "printablestring", scope: !577, file: !516, line: 533, baseType: !597, size: 64, align: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64, align: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_PRINTABLESTRING", file: !396, line: 83, baseType: !545)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "t61string", scope: !577, file: !516, line: 534, baseType: !600, size: 64, align: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64, align: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_T61STRING", file: !396, line: 84, baseType: !545)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ia5string", scope: !577, file: !516, line: 535, baseType: !603, size: 64, align: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64, align: 64)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_IA5STRING", file: !396, line: 85, baseType: !545)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "generalstring", scope: !577, file: !516, line: 536, baseType: !606, size: 64, align: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64, align: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_GENERALSTRING", file: !396, line: 86, baseType: !545)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "bmpstring", scope: !577, file: !516, line: 537, baseType: !609, size: 64, align: 64)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64, align: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_BMPSTRING", file: !396, line: 88, baseType: !545)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "universalstring", scope: !577, file: !516, line: 538, baseType: !612, size: 64, align: 64)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64, align: 64)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_UNIVERSALSTRING", file: !396, line: 87, baseType: !545)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "utctime", scope: !577, file: !516, line: 539, baseType: !615, size: 64, align: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64, align: 64)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_UTCTIME", file: !396, line: 89, baseType: !545)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "generalizedtime", scope: !577, file: !516, line: 540, baseType: !618, size: 64, align: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64, align: 64)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_GENERALIZEDTIME", file: !396, line: 91, baseType: !545)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "visiblestring", scope: !577, file: !516, line: 541, baseType: !621, size: 64, align: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64, align: 64)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_VISIBLESTRING", file: !396, line: 92, baseType: !545)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "utf8string", scope: !577, file: !516, line: 542, baseType: !624, size: 64, align: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64, align: 64)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_UTF8STRING", file: !396, line: 93, baseType: !545)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !577, file: !516, line: 545, baseType: !583, size: 64, align: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !577, file: !516, line: 546, baseType: !583, size: 64, align: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "asn1_value", scope: !577, file: !516, line: 547, baseType: !629, size: 64, align: 64)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64, align: 64)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_VALUE", file: !516, line: 298, baseType: !631)
!631 = !DICompositeType(tag: DW_TAG_structure_type, name: "ASN1_VALUE_st", file: !516, line: 298, flags: DIFlagFwdDecl)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "issuer", scope: !540, file: !535, line: 254, baseType: !633, size: 64, align: 64, offset: 192)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64, align: 64)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_NAME", file: !396, line: 153, baseType: !635)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_name_st", file: !535, line: 185, size: 320, align: 64, elements: !636)
!636 = !{!637, !642, !643, !652, !653}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !635, file: !535, line: 187, baseType: !638, size: 64, align: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64, align: 64)
!639 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_NAME_ENTRY", file: !535, line: 181, size: 256, align: 64, elements: !640)
!640 = !{!641}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !639, file: !535, line: 181, baseType: !468, size: 256, align: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !635, file: !535, line: 188, baseType: !88, size: 32, align: 32, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !635, file: !535, line: 190, baseType: !644, size: 64, align: 64, offset: 128)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64, align: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "BUF_MEM", file: !396, line: 121, baseType: !646)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "buf_mem_st", file: !647, line: 77, size: 192, align: 64, elements: !648)
!647 = !DIFile(filename: "/usr/include/openssl/buffer.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!648 = !{!649, !650, !651}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !646, file: !647, line: 79, baseType: !138, size: 64, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !646, file: !647, line: 80, baseType: !96, size: 64, align: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !646, file: !647, line: 81, baseType: !138, size: 64, align: 64, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "canon_enc", scope: !635, file: !535, line: 195, baseType: !443, size: 64, align: 64, offset: 192)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "canon_enclen", scope: !635, file: !535, line: 196, baseType: !88, size: 32, align: 32, offset: 256)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "validity", scope: !540, file: !535, line: 255, baseType: !655, size: 64, align: 64, offset: 256)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64, align: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_VAL", file: !535, line: 158, baseType: !657)
!657 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_val_st", file: !535, line: 154, size: 128, align: 64, elements: !658)
!658 = !{!659, !662}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "notBefore", scope: !657, file: !535, line: 156, baseType: !660, size: 64, align: 64)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64, align: 64)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_TIME", file: !396, line: 90, baseType: !545)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "notAfter", scope: !657, file: !535, line: 157, baseType: !660, size: 64, align: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "subject", scope: !540, file: !535, line: 256, baseType: !633, size: 64, align: 64, offset: 320)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !540, file: !535, line: 257, baseType: !665, size: 64, align: 64, offset: 384)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64, align: 64)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_PUBKEY", file: !396, line: 154, baseType: !667)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_pubkey_st", file: !535, line: 160, size: 192, align: 64, elements: !668)
!668 = !{!669, !670, !671}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "algor", scope: !667, file: !535, line: 162, baseType: !553, size: 64, align: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "public_key", scope: !667, file: !535, line: 163, baseType: !591, size: 64, align: 64, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "pkey", scope: !667, file: !535, line: 164, baseType: !672, size: 64, align: 64, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64, align: 64)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_PKEY", file: !396, line: 127, baseType: !674)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_pkey_st", file: !675, line: 132, size: 448, align: 64, elements: !676)
!675 = !DIFile(filename: "/usr/include/openssl/evp.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!676 = !{!677, !678, !679, !680, !685, !689, !947, !948}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !674, file: !675, line: 134, baseType: !88, size: 32, align: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "save_type", scope: !674, file: !675, line: 135, baseType: !88, size: 32, align: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !674, file: !675, line: 136, baseType: !88, size: 32, align: 32, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "ameth", scope: !674, file: !675, line: 137, baseType: !681, size: 64, align: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64, align: 64)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_PKEY_ASN1_METHOD", file: !396, line: 129, baseType: !684)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_pkey_asn1_method_st", file: !396, line: 129, flags: DIFlagFwdDecl)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !674, file: !675, line: 138, baseType: !686, size: 64, align: 64, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64, align: 64)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENGINE", file: !396, line: 171, baseType: !688)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "engine_st", file: !396, line: 171, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "pkey", scope: !674, file: !675, line: 153, baseType: !690, size: 64, align: 64, offset: 256)
!690 = !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 139, size: 64, align: 64, elements: !691)
!691 = !{!692, !693, !823, !891, !944}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !690, file: !675, line: 140, baseType: !96, size: 64, align: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "rsa", scope: !690, file: !675, line: 142, baseType: !694, size: 64, align: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64, align: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "rsa_st", file: !696, line: 129, size: 1344, align: 64, elements: !697)
!696 = !DIFile(filename: "/usr/include/openssl/rsa.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!697 = !{!698, !699, !700, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !812, !813, !814, !815, !816, !817, !818, !822}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !695, file: !696, line: 133, baseType: !88, size: 32, align: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !695, file: !696, line: 134, baseType: !61, size: 64, align: 64, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "meth", scope: !695, file: !696, line: 135, baseType: !701, size: 64, align: 64, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64, align: 64)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "RSA_METHOD", file: !396, line: 141, baseType: !704)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "rsa_meth_st", file: !696, line: 85, size: 896, align: 64, elements: !705)
!705 = !{!706, !707, !713, !714, !715, !716, !736, !753, !757, !758, !759, !760, !767, !771}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !704, file: !696, line: 87, baseType: !73, size: 64, align: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_pub_enc", scope: !704, file: !696, line: 88, baseType: !708, size: 64, align: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64, align: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!88, !88, !567, !443, !711, !88}
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64, align: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "RSA", file: !396, line: 140, baseType: !695)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_pub_dec", scope: !704, file: !696, line: 91, baseType: !708, size: 64, align: 64, offset: 128)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_priv_enc", scope: !704, file: !696, line: 94, baseType: !708, size: 64, align: 64, offset: 192)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_priv_dec", scope: !704, file: !696, line: 97, baseType: !708, size: 64, align: 64, offset: 256)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_mod_exp", scope: !704, file: !696, line: 100, baseType: !717, size: 64, align: 64, offset: 320)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64, align: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!88, !720, !731, !711, !733}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64, align: 64)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIGNUM", file: !396, line: 114, baseType: !722)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "bignum_st", file: !723, line: 319, size: 192, align: 64, elements: !724)
!723 = !DIFile(filename: "/usr/include/openssl/bn.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!724 = !{!725, !727, !728, !729, !730}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !722, file: !723, line: 321, baseType: !726, size: 64, align: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64, align: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !722, file: !723, line: 322, baseType: !88, size: 32, align: 32, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "dmax", scope: !722, file: !723, line: 324, baseType: !88, size: 32, align: 32, offset: 96)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !722, file: !723, line: 325, baseType: !88, size: 32, align: 32, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !722, file: !723, line: 326, baseType: !88, size: 32, align: 32, offset: 160)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64, align: 64)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !721)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64, align: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "BN_CTX", file: !396, line: 115, baseType: !735)
!735 = !DICompositeType(tag: DW_TAG_structure_type, name: "bignum_ctx", file: !396, line: 115, flags: DIFlagFwdDecl)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "bn_mod_exp", scope: !704, file: !696, line: 101, baseType: !737, size: 64, align: 64, offset: 384)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64, align: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!88, !720, !731, !731, !731, !733, !740}
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64, align: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "BN_MONT_CTX", file: !396, line: 117, baseType: !742)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "bn_mont_ctx_st", file: !723, line: 330, size: 832, align: 64, elements: !743)
!743 = !{!744, !745, !746, !747, !748, !752}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !742, file: !723, line: 332, baseType: !88, size: 32, align: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "RR", scope: !742, file: !723, line: 333, baseType: !721, size: 192, align: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "N", scope: !742, file: !723, line: 334, baseType: !721, size: 192, align: 64, offset: 256)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "Ni", scope: !742, file: !723, line: 335, baseType: !721, size: 192, align: 64, offset: 448)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "n0", scope: !742, file: !723, line: 337, baseType: !749, size: 128, align: 64, offset: 640)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, align: 64, elements: !750)
!750 = !{!751}
!751 = !DISubrange(count: 2)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !742, file: !723, line: 339, baseType: !88, size: 32, align: 32, offset: 768)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !704, file: !696, line: 104, baseType: !754, size: 64, align: 64, offset: 448)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64, align: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!88, !711}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !704, file: !696, line: 105, baseType: !754, size: 64, align: 64, offset: 512)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !704, file: !696, line: 106, baseType: !88, size: 32, align: 32, offset: 576)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "app_data", scope: !704, file: !696, line: 107, baseType: !96, size: 64, align: 64, offset: 640)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_sign", scope: !704, file: !696, line: 115, baseType: !761, size: 64, align: 64, offset: 704)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64, align: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!88, !88, !567, !385, !443, !764, !765}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64, align: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64, align: 64)
!766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_verify", scope: !704, file: !696, line: 118, baseType: !768, size: 64, align: 64, offset: 768)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64, align: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!88, !88, !567, !385, !567, !385, !765}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_keygen", scope: !704, file: !696, line: 126, baseType: !772, size: 64, align: 64, offset: 832)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64, align: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!88, !711, !88, !720, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64, align: 64)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "BN_GENCB", file: !396, line: 119, baseType: !777)
!777 = !DICompositeType(tag: DW_TAG_structure_type, name: "bn_gencb_st", file: !723, line: 355, size: 192, align: 64, elements: !778)
!778 = !{!779, !780, !781}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !777, file: !723, line: 357, baseType: !385, size: 32, align: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !777, file: !723, line: 358, baseType: !48, size: 64, align: 64, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !777, file: !723, line: 365, baseType: !782, size: 64, align: 64, offset: 128)
!782 = !DICompositeType(tag: DW_TAG_union_type, scope: !777, file: !723, line: 359, size: 64, align: 64, elements: !783)
!783 = !{!784, !788}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "cb_1", scope: !782, file: !723, line: 362, baseType: !785, size: 64, align: 64)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64, align: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{null, !88, !88, !48}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "cb_2", scope: !782, file: !723, line: 364, baseType: !789, size: 64, align: 64)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64, align: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!88, !88, !88, !775}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !695, file: !696, line: 137, baseType: !686, size: 64, align: 64, offset: 192)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !695, file: !696, line: 138, baseType: !720, size: 64, align: 64, offset: 256)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !695, file: !696, line: 139, baseType: !720, size: 64, align: 64, offset: 320)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !695, file: !696, line: 140, baseType: !720, size: 64, align: 64, offset: 384)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !695, file: !696, line: 141, baseType: !720, size: 64, align: 64, offset: 448)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !695, file: !696, line: 142, baseType: !720, size: 64, align: 64, offset: 512)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "dmp1", scope: !695, file: !696, line: 143, baseType: !720, size: 64, align: 64, offset: 576)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "dmq1", scope: !695, file: !696, line: 144, baseType: !720, size: 64, align: 64, offset: 640)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "iqmp", scope: !695, file: !696, line: 145, baseType: !720, size: 64, align: 64, offset: 704)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !695, file: !696, line: 147, baseType: !802, size: 128, align: 64, offset: 768)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYPTO_EX_DATA", file: !396, line: 189, baseType: !803)
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_ex_data_st", file: !804, line: 285, size: 128, align: 64, elements: !805)
!804 = !DIFile(filename: "/usr/include/openssl/crypto.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!805 = !{!806, !811}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !803, file: !804, line: 287, baseType: !807, size: 64, align: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64, align: 64)
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_void", file: !804, line: 290, size: 256, align: 64, elements: !809)
!809 = !{!810}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !808, file: !804, line: 290, baseType: !468, size: 256, align: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !803, file: !804, line: 288, baseType: !88, size: 32, align: 32, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !695, file: !696, line: 148, baseType: !88, size: 32, align: 32, offset: 896)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !695, file: !696, line: 149, baseType: !88, size: 32, align: 32, offset: 928)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "_method_mod_n", scope: !695, file: !696, line: 152, baseType: !740, size: 64, align: 64, offset: 960)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_method_mod_p", scope: !695, file: !696, line: 153, baseType: !740, size: 64, align: 64, offset: 1024)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "_method_mod_q", scope: !695, file: !696, line: 154, baseType: !740, size: 64, align: 64, offset: 1088)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "bignum_data", scope: !695, file: !696, line: 158, baseType: !96, size: 64, align: 64, offset: 1152)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "blinding", scope: !695, file: !696, line: 159, baseType: !819, size: 64, align: 64, offset: 1216)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64, align: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "BN_BLINDING", file: !396, line: 116, baseType: !821)
!821 = !DICompositeType(tag: DW_TAG_structure_type, name: "bn_blinding_st", file: !396, line: 116, flags: DIFlagFwdDecl)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "mt_blinding", scope: !695, file: !696, line: 160, baseType: !819, size: 64, align: 64, offset: 1280)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "dsa", scope: !690, file: !675, line: 145, baseType: !824, size: 64, align: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64, align: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "dsa_st", file: !826, line: 159, size: 1088, align: 64, elements: !827)
!826 = !DIFile(filename: "/usr/include/openssl/dsa.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!827 = !{!828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !890}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !825, file: !826, line: 163, baseType: !88, size: 32, align: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !825, file: !826, line: 164, baseType: !61, size: 64, align: 64, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "write_params", scope: !825, file: !826, line: 165, baseType: !88, size: 32, align: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !825, file: !826, line: 166, baseType: !720, size: 64, align: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !825, file: !826, line: 167, baseType: !720, size: 64, align: 64, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !825, file: !826, line: 168, baseType: !720, size: 64, align: 64, offset: 320)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "pub_key", scope: !825, file: !826, line: 170, baseType: !720, size: 64, align: 64, offset: 384)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "priv_key", scope: !825, file: !826, line: 171, baseType: !720, size: 64, align: 64, offset: 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "kinv", scope: !825, file: !826, line: 173, baseType: !720, size: 64, align: 64, offset: 512)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !825, file: !826, line: 174, baseType: !720, size: 64, align: 64, offset: 576)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !825, file: !826, line: 176, baseType: !88, size: 32, align: 32, offset: 640)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "method_mont_p", scope: !825, file: !826, line: 178, baseType: !740, size: 64, align: 64, offset: 704)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !825, file: !826, line: 179, baseType: !88, size: 32, align: 32, offset: 768)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !825, file: !826, line: 180, baseType: !802, size: 128, align: 64, offset: 832)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "meth", scope: !825, file: !826, line: 181, baseType: !843, size: 64, align: 64, offset: 960)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64, align: 64)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "DSA_METHOD", file: !396, line: 138, baseType: !846)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "dsa_method", file: !826, line: 132, size: 768, align: 64, elements: !847)
!847 = !{!848, !849, !861, !866, !870, !874, !878, !882, !883, !884, !885, !889}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !846, file: !826, line: 134, baseType: !73, size: 64, align: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "dsa_do_sign", scope: !846, file: !826, line: 135, baseType: !850, size: 64, align: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64, align: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!853, !567, !88, !859}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "DSA_SIG", file: !826, line: 130, baseType: !855)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "DSA_SIG_st", file: !826, line: 126, size: 128, align: 64, elements: !856)
!856 = !{!857, !858}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !855, file: !826, line: 128, baseType: !720, size: 64, align: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !855, file: !826, line: 129, baseType: !720, size: 64, align: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64, align: 64)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "DSA", file: !396, line: 137, baseType: !825)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "dsa_sign_setup", scope: !846, file: !826, line: 136, baseType: !862, size: 64, align: 64, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64, align: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!88, !859, !733, !865, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64, align: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "dsa_do_verify", scope: !846, file: !826, line: 138, baseType: !867, size: 64, align: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64, align: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!88, !567, !88, !853, !859}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "dsa_mod_exp", scope: !846, file: !826, line: 140, baseType: !871, size: 64, align: 64, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64, align: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{!88, !859, !720, !720, !720, !720, !720, !720, !733, !740}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "bn_mod_exp", scope: !846, file: !826, line: 143, baseType: !875, size: 64, align: 64, offset: 320)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64, align: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{!88, !859, !720, !720, !731, !731, !733, !740}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !846, file: !826, line: 146, baseType: !879, size: 64, align: 64, offset: 384)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64, align: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!88, !859}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !846, file: !826, line: 147, baseType: !879, size: 64, align: 64, offset: 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !846, file: !826, line: 148, baseType: !88, size: 32, align: 32, offset: 512)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "app_data", scope: !846, file: !826, line: 149, baseType: !96, size: 64, align: 64, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "dsa_paramgen", scope: !846, file: !826, line: 151, baseType: !886, size: 64, align: 64, offset: 640)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64, align: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!88, !859, !88, !567, !88, !438, !726, !775}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "dsa_keygen", scope: !846, file: !826, line: 156, baseType: !879, size: 64, align: 64, offset: 704)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !825, file: !826, line: 183, baseType: !686, size: 64, align: 64, offset: 1024)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dh", scope: !690, file: !675, line: 148, baseType: !892, size: 64, align: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64, align: 64)
!893 = !DICompositeType(tag: DW_TAG_structure_type, name: "dh_st", file: !894, line: 133, size: 1152, align: 64, elements: !895)
!894 = !DIFile(filename: "/usr/include/openssl/dh.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!895 = !{!896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !943}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !893, file: !894, line: 137, baseType: !88, size: 32, align: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !893, file: !894, line: 138, baseType: !88, size: 32, align: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !893, file: !894, line: 139, baseType: !720, size: 64, align: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !893, file: !894, line: 140, baseType: !720, size: 64, align: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !893, file: !894, line: 141, baseType: !61, size: 64, align: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "pub_key", scope: !893, file: !894, line: 142, baseType: !720, size: 64, align: 64, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "priv_key", scope: !893, file: !894, line: 143, baseType: !720, size: 64, align: 64, offset: 320)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !893, file: !894, line: 145, baseType: !88, size: 32, align: 32, offset: 384)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "method_mont_p", scope: !893, file: !894, line: 146, baseType: !740, size: 64, align: 64, offset: 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !893, file: !894, line: 148, baseType: !720, size: 64, align: 64, offset: 512)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !893, file: !894, line: 149, baseType: !720, size: 64, align: 64, offset: 576)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !893, file: !894, line: 150, baseType: !443, size: 64, align: 64, offset: 640)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "seedlen", scope: !893, file: !894, line: 151, baseType: !88, size: 32, align: 32, offset: 704)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !893, file: !894, line: 152, baseType: !720, size: 64, align: 64, offset: 768)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !893, file: !894, line: 154, baseType: !88, size: 32, align: 32, offset: 832)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !893, file: !894, line: 155, baseType: !802, size: 128, align: 64, offset: 896)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "meth", scope: !893, file: !894, line: 156, baseType: !913, size: 64, align: 64, offset: 1024)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64, align: 64)
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "DH_METHOD", file: !396, line: 135, baseType: !916)
!916 = !DICompositeType(tag: DW_TAG_structure_type, name: "dh_method", file: !894, line: 115, size: 576, align: 64, elements: !917)
!917 = !{!918, !919, !925, !929, !935, !936, !937, !938, !939}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !916, file: !894, line: 117, baseType: !73, size: 64, align: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "generate_key", scope: !916, file: !894, line: 119, baseType: !920, size: 64, align: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!88, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "DH", file: !396, line: 134, baseType: !893)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "compute_key", scope: !916, file: !894, line: 120, baseType: !926, size: 64, align: 64, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64, align: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!88, !443, !731, !923}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "bn_mod_exp", scope: !916, file: !894, line: 121, baseType: !930, size: 64, align: 64, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{!88, !933, !720, !731, !731, !731, !733, !740}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64, align: 64)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !916, file: !894, line: 125, baseType: !920, size: 64, align: 64, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !916, file: !894, line: 126, baseType: !920, size: 64, align: 64, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !916, file: !894, line: 127, baseType: !88, size: 32, align: 32, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "app_data", scope: !916, file: !894, line: 128, baseType: !96, size: 64, align: 64, offset: 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "generate_params", scope: !916, file: !894, line: 130, baseType: !940, size: 64, align: 64, offset: 512)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!88, !923, !88, !88, !775}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !893, file: !894, line: 157, baseType: !686, size: 64, align: 64, offset: 1088)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !690, file: !675, line: 151, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "ec_key_st", file: !675, line: 151, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "save_parameters", scope: !674, file: !675, line: 154, baseType: !88, size: 32, align: 32, offset: 320)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !674, file: !675, line: 155, baseType: !949, size: 64, align: 64, offset: 384)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_ATTRIBUTE", file: !535, line: 227, size: 256, align: 64, elements: !951)
!951 = !{!952}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !950, file: !535, line: 227, baseType: !468, size: 256, align: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "issuerUID", scope: !540, file: !535, line: 258, baseType: !591, size: 64, align: 64, offset: 448)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "subjectUID", scope: !540, file: !535, line: 259, baseType: !591, size: 64, align: 64, offset: 512)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !540, file: !535, line: 260, baseType: !956, size: 64, align: 64, offset: 576)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_EXTENSION", file: !535, line: 212, size: 256, align: 64, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !957, file: !535, line: 212, baseType: !468, size: 256, align: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !540, file: !535, line: 261, baseType: !961, size: 192, align: 64, offset: 640)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_ENCODING", file: !516, line: 260, baseType: !962)
!962 = !DICompositeType(tag: DW_TAG_structure_type, name: "ASN1_ENCODING_st", file: !516, line: 255, size: 192, align: 64, elements: !963)
!963 = !{!964, !965, !966}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !962, file: !516, line: 257, baseType: !443, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !962, file: !516, line: 258, baseType: !61, size: 64, align: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !962, file: !516, line: 259, baseType: !88, size: 32, align: 32, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "sig_alg", scope: !534, file: !535, line: 282, baseType: !553, size: 64, align: 64, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !534, file: !535, line: 283, baseType: !591, size: 64, align: 64, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !534, file: !535, line: 284, baseType: !88, size: 32, align: 32, offset: 192)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !534, file: !535, line: 285, baseType: !88, size: 32, align: 32, offset: 224)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !534, file: !535, line: 286, baseType: !96, size: 64, align: 64, offset: 256)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !534, file: !535, line: 287, baseType: !802, size: 128, align: 64, offset: 320)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ex_pathlen", scope: !534, file: !535, line: 289, baseType: !61, size: 64, align: 64, offset: 448)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ex_pcpathlen", scope: !534, file: !535, line: 290, baseType: !61, size: 64, align: 64, offset: 512)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ex_flags", scope: !534, file: !535, line: 291, baseType: !140, size: 64, align: 64, offset: 576)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ex_kusage", scope: !534, file: !535, line: 292, baseType: !140, size: 64, align: 64, offset: 640)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ex_xkusage", scope: !534, file: !535, line: 293, baseType: !140, size: 64, align: 64, offset: 704)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ex_nscert", scope: !534, file: !535, line: 294, baseType: !140, size: 64, align: 64, offset: 768)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "skid", scope: !534, file: !535, line: 295, baseType: !594, size: 64, align: 64, offset: 832)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "akid", scope: !534, file: !535, line: 296, baseType: !981, size: 64, align: 64, offset: 896)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "AUTHORITY_KEYID", file: !396, line: 180, baseType: !983)
!983 = !DICompositeType(tag: DW_TAG_structure_type, name: "AUTHORITY_KEYID_st", file: !984, line: 260, size: 192, align: 64, elements: !985)
!984 = !DIFile(filename: "/usr/include/openssl/x509v3.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!985 = !{!986, !987, !993}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "keyid", scope: !983, file: !984, line: 261, baseType: !594, size: 64, align: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "issuer", scope: !983, file: !984, line: 262, baseType: !988, size: 64, align: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "GENERAL_NAMES", file: !984, line: 207, baseType: !990)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_GENERAL_NAME", file: !984, line: 218, size: 256, align: 64, elements: !991)
!991 = !{!992}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !990, file: !984, line: 218, baseType: !468, size: 256, align: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !983, file: !984, line: 263, baseType: !543, size: 64, align: 64, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "policy_cache", scope: !534, file: !535, line: 297, baseType: !995, size: 64, align: 64, offset: 960)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_POLICY_CACHE", file: !396, line: 178, baseType: !997)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_POLICY_CACHE_st", file: !396, line: 178, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "crldp", scope: !534, file: !535, line: 298, baseType: !999, size: 64, align: 64, offset: 1024)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_DIST_POINT", file: !984, line: 257, size: 256, align: 64, elements: !1001)
!1001 = !{!1002}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1000, file: !984, line: 257, baseType: !468, size: 256, align: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "altname", scope: !534, file: !535, line: 299, baseType: !1004, size: 64, align: 64, offset: 1088)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64, align: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !534, file: !535, line: 300, baseType: !1006, size: 64, align: 64, offset: 1152)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "NAME_CONSTRAINTS", file: !396, line: 183, baseType: !1008)
!1008 = !DICompositeType(tag: DW_TAG_structure_type, name: "NAME_CONSTRAINTS_st", file: !984, line: 330, size: 128, align: 64, elements: !1009)
!1009 = !{!1010, !1015}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "permittedSubtrees", scope: !1008, file: !984, line: 331, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_GENERAL_SUBTREE", file: !984, line: 328, size: 256, align: 64, elements: !1013)
!1013 = !{!1014}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1012, file: !984, line: 328, baseType: !468, size: 256, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "excludedSubtrees", scope: !1008, file: !984, line: 332, baseType: !1011, size: 64, align: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rfc3779_addr", scope: !534, file: !535, line: 302, baseType: !1017, size: 64, align: 64, offset: 1216)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_IPAddressFamily", file: !984, line: 786, size: 256, align: 64, elements: !1019)
!1019 = !{!1020}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1018, file: !984, line: 786, baseType: !468, size: 256, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rfc3779_asid", scope: !534, file: !535, line: 303, baseType: !1022, size: 64, align: 64, offset: 1280)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DICompositeType(tag: DW_TAG_structure_type, name: "ASIdentifiers_st", file: !984, line: 741, size: 128, align: 64, elements: !1024)
!1024 = !{!1025, !1043}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "asnum", scope: !1023, file: !984, line: 742, baseType: !1026, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASIdentifierChoice", file: !984, line: 739, baseType: !1028)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "ASIdentifierChoice_st", file: !984, line: 733, size: 128, align: 64, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1028, file: !984, line: 734, baseType: !88, size: 32, align: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1028, file: !984, line: 738, baseType: !1032, size: 64, align: 64, offset: 64)
!1032 = !DICompositeType(tag: DW_TAG_union_type, scope: !1028, file: !984, line: 735, size: 64, align: 64, elements: !1033)
!1033 = !{!1034, !1037}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "inherit", scope: !1032, file: !984, line: 736, baseType: !1035, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_NULL", file: !396, line: 96, baseType: !88)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "asIdsOrRanges", scope: !1032, file: !984, line: 737, baseType: !1038, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASIdOrRanges", file: !984, line: 727, baseType: !1040)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_ASIdOrRange", file: !984, line: 728, size: 256, align: 64, elements: !1041)
!1041 = !{!1042}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1040, file: !984, line: 728, baseType: !468, size: 256, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1023, file: !984, line: 742, baseType: !1026, size: 64, align: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "sha1_hash", scope: !534, file: !535, line: 306, baseType: !1045, size: 160, align: 8, offset: 1344)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 160, align: 8, elements: !144)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !534, file: !535, line: 308, baseType: !1047, size: 64, align: 64, offset: 1536)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CERT_AUX", file: !535, line: 277, baseType: !1049)
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_cert_aux_st", file: !535, line: 270, size: 320, align: 64, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "trust", scope: !1049, file: !535, line: 272, baseType: !514, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !1049, file: !535, line: 273, baseType: !514, size: 64, align: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1049, file: !535, line: 274, baseType: !624, size: 64, align: 64, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "keyid", scope: !1049, file: !535, line: 275, baseType: !594, size: 64, align: 64, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1049, file: !535, line: 276, baseType: !1056, size: 64, align: 64, offset: 256)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_ALGOR", file: !516, line: 166, size: 256, align: 64, elements: !1058)
!1058 = !{!1059}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1057, file: !516, line: 166, baseType: !468, size: 256, align: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !525, file: !485, line: 237, baseType: !1061, size: 64, align: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64, align: 64)
!1062 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509", file: !535, line: 311, size: 256, align: 64, elements: !1063)
!1063 = !{!1064}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1062, file: !535, line: 311, baseType: !468, size: 256, align: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "crls", scope: !525, file: !485, line: 238, baseType: !1066, size: 64, align: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_CRL", file: !535, line: 486, size: 256, align: 64, elements: !1068)
!1068 = !{!1069}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1067, file: !535, line: 486, baseType: !468, size: 256, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !525, file: !485, line: 240, baseType: !499, size: 64, align: 64, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "other_ctx", scope: !525, file: !485, line: 241, baseType: !48, size: 64, align: 64, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !525, file: !485, line: 244, baseType: !520, size: 64, align: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "verify_cb", scope: !525, file: !485, line: 245, baseType: !1074, size: 64, align: 64, offset: 512)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!88, !88, !523}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "get_issuer", scope: !525, file: !485, line: 246, baseType: !1078, size: 64, align: 64, offset: 576)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!88, !1081, !523, !532}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "check_issued", scope: !525, file: !485, line: 247, baseType: !1083, size: 64, align: 64, offset: 640)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!88, !523, !532, !532}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "check_revocation", scope: !525, file: !485, line: 248, baseType: !520, size: 64, align: 64, offset: 704)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_crl", scope: !525, file: !485, line: 249, baseType: !1088, size: 64, align: 64, offset: 768)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!88, !523, !1091, !532}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CRL", file: !396, line: 150, baseType: !1094)
!1094 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_crl_st", file: !535, line: 461, size: 960, align: 64, elements: !1095)
!1095 = !{!1096, !1113, !1114, !1115, !1116, !1117, !1118, !1140, !1141, !1142, !1143, !1144, !1145, !1148, !1153}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "crl", scope: !1094, file: !535, line: 464, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CRL_INFO", file: !535, line: 459, baseType: !1099)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_crl_info_st", file: !535, line: 449, size: 640, align: 64, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1105, !1106, !1111, !1112}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1099, file: !535, line: 451, baseType: !543, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "sig_alg", scope: !1099, file: !535, line: 452, baseType: !553, size: 64, align: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "issuer", scope: !1099, file: !535, line: 453, baseType: !633, size: 64, align: 64, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "lastUpdate", scope: !1099, file: !535, line: 454, baseType: !660, size: 64, align: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "nextUpdate", scope: !1099, file: !535, line: 455, baseType: !660, size: 64, align: 64, offset: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "revoked", scope: !1099, file: !535, line: 456, baseType: !1107, size: 64, align: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_REVOKED", file: !535, line: 446, size: 256, align: 64, elements: !1109)
!1109 = !{!1110}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1108, file: !535, line: 446, baseType: !468, size: 256, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1099, file: !535, line: 457, baseType: !956, size: 64, align: 64, offset: 384)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !1099, file: !535, line: 458, baseType: !961, size: 192, align: 64, offset: 448)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "sig_alg", scope: !1094, file: !535, line: 465, baseType: !553, size: 64, align: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1094, file: !535, line: 466, baseType: !591, size: 64, align: 64, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !1094, file: !535, line: 467, baseType: !88, size: 32, align: 32, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1094, file: !535, line: 468, baseType: !88, size: 32, align: 32, offset: 224)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "akid", scope: !1094, file: !535, line: 470, baseType: !981, size: 64, align: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "idp", scope: !1094, file: !535, line: 471, baseType: !1119, size: 64, align: 64, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISSUING_DIST_POINT", file: !396, line: 182, baseType: !1121)
!1121 = !DICompositeType(tag: DW_TAG_structure_type, name: "ISSUING_DIST_POINT_st", file: !984, line: 356, size: 256, align: 64, elements: !1122)
!1122 = !{!1123, !1135, !1136, !1137, !1138, !1139}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "distpoint", scope: !1121, file: !984, line: 358, baseType: !1124, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIST_POINT_NAME", file: !984, line: 232, baseType: !1126)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "DIST_POINT_NAME_st", file: !984, line: 224, size: 192, align: 64, elements: !1127)
!1127 = !{!1128, !1129, !1134}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1126, file: !984, line: 225, baseType: !88, size: 32, align: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1126, file: !984, line: 229, baseType: !1130, size: 64, align: 64, offset: 64)
!1130 = !DICompositeType(tag: DW_TAG_union_type, scope: !1126, file: !984, line: 226, size: 64, align: 64, elements: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "fullname", scope: !1130, file: !984, line: 227, baseType: !988, size: 64, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "relativename", scope: !1130, file: !984, line: 228, baseType: !638, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "dpname", scope: !1126, file: !984, line: 231, baseType: !633, size: 64, align: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "onlyuser", scope: !1121, file: !984, line: 359, baseType: !88, size: 32, align: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "onlyCA", scope: !1121, file: !984, line: 360, baseType: !88, size: 32, align: 32, offset: 96)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "onlysomereasons", scope: !1121, file: !984, line: 361, baseType: !591, size: 64, align: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "indirectCRL", scope: !1121, file: !984, line: 362, baseType: !88, size: 32, align: 32, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "onlyattr", scope: !1121, file: !984, line: 363, baseType: !88, size: 32, align: 32, offset: 224)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "idp_flags", scope: !1094, file: !535, line: 473, baseType: !88, size: 32, align: 32, offset: 384)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "idp_reasons", scope: !1094, file: !535, line: 474, baseType: !88, size: 32, align: 32, offset: 416)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "crl_number", scope: !1094, file: !535, line: 476, baseType: !543, size: 64, align: 64, offset: 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "base_crl_number", scope: !1094, file: !535, line: 477, baseType: !543, size: 64, align: 64, offset: 512)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "sha1_hash", scope: !1094, file: !535, line: 479, baseType: !1045, size: 160, align: 8, offset: 576)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "issuers", scope: !1094, file: !535, line: 481, baseType: !1146, size: 64, align: 64, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_GENERAL_NAMES", file: !535, line: 481, flags: DIFlagFwdDecl)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "meth", scope: !1094, file: !535, line: 482, baseType: !1149, size: 64, align: 64, offset: 832)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CRL_METHOD", file: !396, line: 151, baseType: !1152)
!1152 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_crl_method_st", file: !396, line: 151, flags: DIFlagFwdDecl)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "meth_data", scope: !1094, file: !535, line: 483, baseType: !48, size: 64, align: 64, offset: 896)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "check_crl", scope: !525, file: !485, line: 250, baseType: !1155, size: 64, align: 64, offset: 832)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!88, !523, !1092}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "cert_crl", scope: !525, file: !485, line: 251, baseType: !1159, size: 64, align: 64, offset: 896)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!88, !523, !1092, !532}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "check_policy", scope: !525, file: !485, line: 252, baseType: !520, size: 64, align: 64, offset: 960)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_certs", scope: !525, file: !485, line: 253, baseType: !1164, size: 64, align: 64, offset: 1024)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!1061, !523, !633}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_crls", scope: !525, file: !485, line: 254, baseType: !1168, size: 64, align: 64, offset: 1088)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64, align: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1066, !523, !633}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !525, file: !485, line: 255, baseType: !520, size: 64, align: 64, offset: 1152)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !525, file: !485, line: 258, baseType: !88, size: 32, align: 32, offset: 1216)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "last_untrusted", scope: !525, file: !485, line: 259, baseType: !88, size: 32, align: 32, offset: 1248)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !525, file: !485, line: 260, baseType: !1061, size: 64, align: 64, offset: 1280)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !525, file: !485, line: 261, baseType: !1176, size: 64, align: 64, offset: 1344)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_POLICY_TREE", file: !396, line: 177, baseType: !1178)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_POLICY_TREE_st", file: !396, line: 177, flags: DIFlagFwdDecl)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_policy", scope: !525, file: !485, line: 263, baseType: !88, size: 32, align: 32, offset: 1408)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "error_depth", scope: !525, file: !485, line: 266, baseType: !88, size: 32, align: 32, offset: 1440)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !525, file: !485, line: 267, baseType: !88, size: 32, align: 32, offset: 1472)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "current_cert", scope: !525, file: !485, line: 268, baseType: !532, size: 64, align: 64, offset: 1536)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "current_issuer", scope: !525, file: !485, line: 269, baseType: !532, size: 64, align: 64, offset: 1600)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "current_crl", scope: !525, file: !485, line: 270, baseType: !1092, size: 64, align: 64, offset: 1664)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "current_crl_score", scope: !525, file: !485, line: 272, baseType: !88, size: 32, align: 32, offset: 1728)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "current_reasons", scope: !525, file: !485, line: 273, baseType: !385, size: 32, align: 32, offset: 1760)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !525, file: !485, line: 275, baseType: !523, size: 64, align: 64, offset: 1792)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !525, file: !485, line: 277, baseType: !802, size: 128, align: 64, offset: 1856)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "verify_cb", scope: !484, file: !485, line: 196, baseType: !1074, size: 64, align: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "get_issuer", scope: !484, file: !485, line: 197, baseType: !1078, size: 64, align: 64, offset: 384)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "check_issued", scope: !484, file: !485, line: 198, baseType: !1083, size: 64, align: 64, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "check_revocation", scope: !484, file: !485, line: 199, baseType: !520, size: 64, align: 64, offset: 512)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "get_crl", scope: !484, file: !485, line: 200, baseType: !1088, size: 64, align: 64, offset: 576)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "check_crl", scope: !484, file: !485, line: 201, baseType: !1155, size: 64, align: 64, offset: 640)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cert_crl", scope: !484, file: !485, line: 202, baseType: !1159, size: 64, align: 64, offset: 704)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_certs", scope: !484, file: !485, line: 203, baseType: !1164, size: 64, align: 64, offset: 768)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_crls", scope: !484, file: !485, line: 204, baseType: !1168, size: 64, align: 64, offset: 832)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !484, file: !485, line: 205, baseType: !520, size: 64, align: 64, offset: 896)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !484, file: !485, line: 207, baseType: !802, size: 128, align: 64, offset: 960)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !484, file: !485, line: 208, baseType: !88, size: 32, align: 32, offset: 1088)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "sessions", scope: !460, file: !398, line: 741, baseType: !1202, size: 64, align: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64, align: 64)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "lhash_st_SSL_SESSION", file: !398, line: 730, size: 32, align: 32, elements: !1204)
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !1203, file: !398, line: 730, baseType: !88, size: 32, align: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "session_cache_size", scope: !460, file: !398, line: 744, baseType: !140, size: 64, align: 64, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "session_cache_head", scope: !460, file: !398, line: 745, baseType: !1208, size: 64, align: 64, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_session_st", file: !398, line: 469, size: 4800, align: 64, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1217, !1218, !1222, !1223, !1227, !1228, !1229, !1230, !1234, !1235, !1236, !1237, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_version", scope: !1209, file: !398, line: 471, baseType: !88, size: 32, align: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "key_arg_length", scope: !1209, file: !398, line: 475, baseType: !385, size: 32, align: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "key_arg", scope: !1209, file: !398, line: 476, baseType: !1214, size: 64, align: 8, offset: 64)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 64, align: 8, elements: !1215)
!1215 = !{!1216}
!1216 = !DISubrange(count: 8)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "master_key_length", scope: !1209, file: !398, line: 477, baseType: !88, size: 32, align: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "master_key", scope: !1209, file: !398, line: 478, baseType: !1219, size: 384, align: 8, offset: 160)
!1219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 384, align: 8, elements: !1220)
!1220 = !{!1221}
!1221 = !DISubrange(count: 48)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "session_id_length", scope: !1209, file: !398, line: 480, baseType: !385, size: 32, align: 32, offset: 544)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "session_id", scope: !1209, file: !398, line: 481, baseType: !1224, size: 256, align: 8, offset: 576)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 256, align: 8, elements: !1225)
!1225 = !{!1226}
!1226 = !DISubrange(count: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sid_ctx_length", scope: !1209, file: !398, line: 485, baseType: !385, size: 32, align: 32, offset: 832)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sid_ctx", scope: !1209, file: !398, line: 486, baseType: !1224, size: 256, align: 8, offset: 864)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "krb5_client_princ_len", scope: !1209, file: !398, line: 489, baseType: !385, size: 32, align: 32, offset: 1120)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "krb5_client_princ", scope: !1209, file: !398, line: 490, baseType: !1231, size: 2048, align: 8, offset: 1152)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 2048, align: 8, elements: !1232)
!1232 = !{!1233}
!1233 = !DISubrange(count: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "psk_identity_hint", scope: !1209, file: !398, line: 493, baseType: !96, size: 64, align: 64, offset: 3200)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "psk_identity", scope: !1209, file: !398, line: 494, baseType: !96, size: 64, align: 64, offset: 3264)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "not_resumable", scope: !1209, file: !398, line: 499, baseType: !88, size: 32, align: 32, offset: 3328)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sess_cert", scope: !1209, file: !398, line: 502, baseType: !1238, size: 64, align: 64, offset: 3392)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64, align: 64)
!1239 = !DICompositeType(tag: DW_TAG_structure_type, name: "sess_cert_st", file: !398, line: 502, flags: DIFlagFwdDecl)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !1209, file: !398, line: 508, baseType: !532, size: 64, align: 64, offset: 3456)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "verify_result", scope: !1209, file: !398, line: 511, baseType: !61, size: 64, align: 64, offset: 3520)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !1209, file: !398, line: 513, baseType: !88, size: 32, align: 32, offset: 3584)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1209, file: !398, line: 514, baseType: !61, size: 64, align: 64, offset: 3648)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1209, file: !398, line: 515, baseType: !61, size: 64, align: 64, offset: 3712)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "compress_meth", scope: !1209, file: !398, line: 517, baseType: !385, size: 32, align: 32, offset: 3776)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "cipher", scope: !1209, file: !398, line: 519, baseType: !1247, size: 64, align: 64, offset: 3840)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CIPHER", file: !398, line: 367, baseType: !1250)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_cipher_st", file: !398, line: 388, size: 704, align: 64, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1250, file: !398, line: 390, baseType: !88, size: 32, align: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1250, file: !398, line: 391, baseType: !73, size: 64, align: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1250, file: !398, line: 392, baseType: !140, size: 64, align: 64, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_mkey", scope: !1250, file: !398, line: 395, baseType: !140, size: 64, align: 64, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_auth", scope: !1250, file: !398, line: 396, baseType: !140, size: 64, align: 64, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_enc", scope: !1250, file: !398, line: 397, baseType: !140, size: 64, align: 64, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_mac", scope: !1250, file: !398, line: 398, baseType: !140, size: 64, align: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_ssl", scope: !1250, file: !398, line: 399, baseType: !140, size: 64, align: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "algo_strength", scope: !1250, file: !398, line: 401, baseType: !140, size: 64, align: 64, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm2", scope: !1250, file: !398, line: 402, baseType: !140, size: 64, align: 64, offset: 576)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "strength_bits", scope: !1250, file: !398, line: 403, baseType: !88, size: 32, align: 32, offset: 640)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "alg_bits", scope: !1250, file: !398, line: 404, baseType: !88, size: 32, align: 32, offset: 672)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_id", scope: !1209, file: !398, line: 520, baseType: !140, size: 64, align: 64, offset: 3904)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ciphers", scope: !1209, file: !398, line: 524, baseType: !464, size: 64, align: 64, offset: 3968)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !1209, file: !398, line: 526, baseType: !802, size: 128, align: 64, offset: 4032)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1209, file: !398, line: 530, baseType: !1208, size: 64, align: 64, offset: 4160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1209, file: !398, line: 530, baseType: !1208, size: 64, align: 64, offset: 4224)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_hostname", scope: !1209, file: !398, line: 532, baseType: !96, size: 64, align: 64, offset: 4288)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ecpointformatlist_length", scope: !1209, file: !398, line: 534, baseType: !138, size: 64, align: 64, offset: 4352)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ecpointformatlist", scope: !1209, file: !398, line: 535, baseType: !443, size: 64, align: 64, offset: 4416)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ellipticcurvelist_length", scope: !1209, file: !398, line: 536, baseType: !138, size: 64, align: 64, offset: 4480)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ellipticcurvelist", scope: !1209, file: !398, line: 537, baseType: !443, size: 64, align: 64, offset: 4544)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_tick", scope: !1209, file: !398, line: 540, baseType: !443, size: 64, align: 64, offset: 4608)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ticklen", scope: !1209, file: !398, line: 541, baseType: !138, size: 64, align: 64, offset: 4672)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_tick_lifetime_hint", scope: !1209, file: !398, line: 542, baseType: !61, size: 64, align: 64, offset: 4736)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "session_cache_tail", scope: !460, file: !398, line: 746, baseType: !1208, size: 64, align: 64, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "session_cache_mode", scope: !460, file: !398, line: 753, baseType: !88, size: 32, align: 32, offset: 512)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "session_timeout", scope: !460, file: !398, line: 758, baseType: !61, size: 64, align: 64, offset: 576)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "new_session_cb", scope: !460, file: !398, line: 768, baseType: !1281, size: 64, align: 64, offset: 640)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64, align: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!88, !1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_SESSION", file: !398, line: 368, baseType: !1209)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "remove_session_cb", scope: !460, file: !398, line: 769, baseType: !1288, size: 64, align: 64, offset: 704)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64, align: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{null, !1291, !1285}
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64, align: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "get_session_cb", scope: !460, file: !398, line: 770, baseType: !1293, size: 64, align: 64, offset: 768)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64, align: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1285, !1284, !443, !88, !438}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !460, file: !398, line: 791, baseType: !1297, size: 352, align: 32, offset: 832)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, scope: !460, file: !398, line: 773, size: 352, align: 32, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sess_connect", scope: !1297, file: !398, line: 775, baseType: !88, size: 32, align: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "sess_connect_renegotiate", scope: !1297, file: !398, line: 776, baseType: !88, size: 32, align: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "sess_connect_good", scope: !1297, file: !398, line: 777, baseType: !88, size: 32, align: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "sess_accept", scope: !1297, file: !398, line: 778, baseType: !88, size: 32, align: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "sess_accept_renegotiate", scope: !1297, file: !398, line: 779, baseType: !88, size: 32, align: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sess_accept_good", scope: !1297, file: !398, line: 780, baseType: !88, size: 32, align: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sess_miss", scope: !1297, file: !398, line: 781, baseType: !88, size: 32, align: 32, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "sess_timeout", scope: !1297, file: !398, line: 782, baseType: !88, size: 32, align: 32, offset: 224)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "sess_cache_full", scope: !1297, file: !398, line: 783, baseType: !88, size: 32, align: 32, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "sess_hit", scope: !1297, file: !398, line: 784, baseType: !88, size: 32, align: 32, offset: 288)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "sess_cb_hit", scope: !1297, file: !398, line: 785, baseType: !88, size: 32, align: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !460, file: !398, line: 793, baseType: !88, size: 32, align: 32, offset: 1184)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "app_verify_callback", scope: !460, file: !398, line: 796, baseType: !1312, size: 64, align: 64, offset: 1216)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!88, !523, !48}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "app_verify_arg", scope: !460, file: !398, line: 797, baseType: !48, size: 64, align: 64, offset: 1280)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "default_passwd_callback", scope: !460, file: !398, line: 802, baseType: !1317, size: 64, align: 64, offset: 1344)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "pem_password_cb", file: !1319, line: 400, baseType: !1320)
!1319 = !DIFile(filename: "/usr/include/openssl/pem.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!88, !96, !88, !88, !48}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "default_passwd_callback_userdata", scope: !460, file: !398, line: 805, baseType: !48, size: 64, align: 64, offset: 1408)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "client_cert_cb", scope: !460, file: !398, line: 808, baseType: !1324, size: 64, align: 64, offset: 1472)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!88, !394, !1081, !1327}
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "app_gen_cookie_cb", scope: !460, file: !398, line: 811, baseType: !1329, size: 64, align: 64, offset: 1536)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!88, !394, !443, !764}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "app_verify_cookie_cb", scope: !460, file: !398, line: 815, baseType: !1333, size: 64, align: 64, offset: 1600)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64, align: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!88, !394, !443, !385}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !460, file: !398, line: 818, baseType: !802, size: 128, align: 64, offset: 1664)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "rsa_md5", scope: !460, file: !398, line: 820, baseType: !1338, size: 64, align: 64, offset: 1792)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64, align: 64)
!1339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_MD", file: !396, line: 125, baseType: !1341)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "env_md_st", file: !675, line: 164, size: 960, align: 64, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1367, !1368, !1372, !1378, !1379, !1383, !1387, !1391, !1392, !1393}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1341, file: !675, line: 166, baseType: !88, size: 32, align: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_type", scope: !1341, file: !675, line: 167, baseType: !88, size: 32, align: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "md_size", scope: !1341, file: !675, line: 168, baseType: !88, size: 32, align: 32, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1341, file: !675, line: 169, baseType: !140, size: 64, align: 64, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1341, file: !675, line: 170, baseType: !1348, size: 64, align: 64, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64, align: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!88, !1351}
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64, align: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_MD_CTX", file: !396, line: 126, baseType: !1353)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "env_md_ctx_st", file: !675, line: 269, size: 384, align: 64, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359, !1363}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !1353, file: !675, line: 271, baseType: !1338, size: 64, align: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1353, file: !675, line: 272, baseType: !686, size: 64, align: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1353, file: !675, line: 273, baseType: !140, size: 64, align: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "md_data", scope: !1353, file: !675, line: 274, baseType: !48, size: 64, align: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pctx", scope: !1353, file: !675, line: 276, baseType: !1360, size: 64, align: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64, align: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_PKEY_CTX", file: !396, line: 132, baseType: !1362)
!1362 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_pkey_ctx_st", file: !396, line: 132, flags: DIFlagFwdDecl)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1353, file: !675, line: 278, baseType: !1364, size: 64, align: 64, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64, align: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!88, !1351, !429, !138}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1341, file: !675, line: 171, baseType: !1364, size: 64, align: 64, offset: 256)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1341, file: !675, line: 172, baseType: !1369, size: 64, align: 64, offset: 320)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64, align: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!88, !1351, !443}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !1341, file: !675, line: 173, baseType: !1373, size: 64, align: 64, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!88, !1351, !1376}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64, align: 64)
!1377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1341, file: !675, line: 174, baseType: !1348, size: 64, align: 64, offset: 448)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1341, file: !675, line: 177, baseType: !1380, size: 64, align: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64, align: 64)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!88, !88, !567, !385, !443, !764, !48}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !1341, file: !675, line: 179, baseType: !1384, size: 64, align: 64, offset: 576)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!88, !88, !567, !385, !567, !385, !48}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "required_pkey_type", scope: !1341, file: !675, line: 182, baseType: !1388, size: 160, align: 32, offset: 640)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 160, align: 32, elements: !1389)
!1389 = !{!1390}
!1390 = !DISubrange(count: 5)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1341, file: !675, line: 183, baseType: !88, size: 32, align: 32, offset: 800)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size", scope: !1341, file: !675, line: 184, baseType: !88, size: 32, align: 32, offset: 832)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "md_ctrl", scope: !1341, file: !675, line: 186, baseType: !1394, size: 64, align: 64, offset: 896)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64, align: 64)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!88, !1351, !88, !88, !48}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "md5", scope: !460, file: !398, line: 821, baseType: !1338, size: 64, align: 64, offset: 1856)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "sha1", scope: !460, file: !398, line: 822, baseType: !1338, size: 64, align: 64, offset: 1920)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "extra_certs", scope: !460, file: !398, line: 824, baseType: !1061, size: 64, align: 64, offset: 1984)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "comp_methods", scope: !460, file: !398, line: 825, baseType: !1401, size: 64, align: 64, offset: 2048)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64, align: 64)
!1402 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SSL_COMP", file: !398, line: 729, size: 256, align: 64, elements: !1403)
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1402, file: !398, line: 729, baseType: !468, size: 256, align: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "info_callback", scope: !460, file: !398, line: 830, baseType: !1406, size: 64, align: 64, offset: 2112)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{null, !1409, !88, !88}
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64, align: 64)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "client_CA", scope: !460, file: !398, line: 833, baseType: !1412, size: 64, align: 64, offset: 2176)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64, align: 64)
!1413 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_NAME", file: !535, line: 199, size: 256, align: 64, elements: !1414)
!1414 = !{!1415}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1413, file: !535, line: 199, baseType: !468, size: 256, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !460, file: !398, line: 838, baseType: !140, size: 64, align: 64, offset: 2240)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !460, file: !398, line: 839, baseType: !140, size: 64, align: 64, offset: 2304)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "max_cert_list", scope: !460, file: !398, line: 840, baseType: !61, size: 64, align: 64, offset: 2368)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !460, file: !398, line: 842, baseType: !1420, size: 64, align: 64, offset: 2432)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64, align: 64)
!1421 = !DICompositeType(tag: DW_TAG_structure_type, name: "cert_st", file: !398, line: 842, flags: DIFlagFwdDecl)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "read_ahead", scope: !460, file: !398, line: 843, baseType: !88, size: 32, align: 32, offset: 2496)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "msg_callback", scope: !460, file: !398, line: 846, baseType: !1424, size: 64, align: 64, offset: 2560)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64, align: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{null, !88, !88, !88, !429, !138, !394, !48}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "msg_callback_arg", scope: !460, file: !398, line: 847, baseType: !48, size: 64, align: 64, offset: 2624)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "verify_mode", scope: !460, file: !398, line: 849, baseType: !88, size: 32, align: 32, offset: 2688)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "sid_ctx_length", scope: !460, file: !398, line: 850, baseType: !385, size: 32, align: 32, offset: 2720)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "sid_ctx", scope: !460, file: !398, line: 851, baseType: !1224, size: 256, align: 8, offset: 2752)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "default_verify_callback", scope: !460, file: !398, line: 852, baseType: !1074, size: 64, align: 64, offset: 3008)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "generate_session_id", scope: !460, file: !398, line: 855, baseType: !1433, size: 64, align: 64, offset: 3072)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "GEN_SESSION_CB", file: !398, line: 711, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64, align: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!88, !1409, !443, !764}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !460, file: !398, line: 857, baseType: !499, size: 64, align: 64, offset: 3136)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "quiet_shutdown", scope: !460, file: !398, line: 864, baseType: !88, size: 32, align: 32, offset: 3200)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_fragment", scope: !460, file: !398, line: 870, baseType: !385, size: 32, align: 32, offset: 3232)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "client_cert_engine", scope: !460, file: !398, line: 875, baseType: !686, size: 64, align: 64, offset: 3264)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_servername_callback", scope: !460, file: !398, line: 880, baseType: !1442, size: 64, align: 64, offset: 3328)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!88, !394, !438, !48}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_servername_arg", scope: !460, file: !398, line: 881, baseType: !48, size: 64, align: 64, offset: 3392)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_tick_key_name", scope: !460, file: !398, line: 883, baseType: !1447, size: 128, align: 8, offset: 3456)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 128, align: 8, elements: !1448)
!1448 = !{!1449}
!1449 = !DISubrange(count: 16)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_tick_hmac_key", scope: !460, file: !398, line: 884, baseType: !1447, size: 128, align: 8, offset: 3584)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_tick_aes_key", scope: !460, file: !398, line: 885, baseType: !1447, size: 128, align: 8, offset: 3712)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ticket_key_cb", scope: !460, file: !398, line: 887, baseType: !1453, size: 64, align: 64, offset: 3840)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64, align: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!88, !394, !443, !443, !1456, !1508, !88}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_CIPHER_CTX", file: !396, line: 124, baseType: !1458)
!1458 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_cipher_ctx_st", file: !675, line: 423, size: 1344, align: 64, elements: !1459)
!1459 = !{!1460, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "cipher", scope: !1458, file: !675, line: 425, baseType: !1461, size: 64, align: 64)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_CIPHER", file: !396, line: 123, baseType: !1464)
!1464 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_cipher_st", file: !675, line: 307, size: 704, align: 64, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470, !1471, !1475, !1479, !1483, !1484, !1488, !1489, !1493}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1464, file: !675, line: 309, baseType: !88, size: 32, align: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1464, file: !675, line: 310, baseType: !88, size: 32, align: 32, offset: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !1464, file: !675, line: 311, baseType: !88, size: 32, align: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "iv_len", scope: !1464, file: !675, line: 312, baseType: !88, size: 32, align: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1464, file: !675, line: 313, baseType: !140, size: 64, align: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1464, file: !675, line: 314, baseType: !1472, size: 64, align: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!88, !1456, !567, !567, !88}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "do_cipher", scope: !1464, file: !675, line: 316, baseType: !1476, size: 64, align: 64, offset: 256)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64, align: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!88, !1456, !443, !567, !138}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1464, file: !675, line: 318, baseType: !1480, size: 64, align: 64, offset: 320)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64, align: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!88, !1456}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size", scope: !1464, file: !675, line: 319, baseType: !88, size: 32, align: 32, offset: 384)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "set_asn1_parameters", scope: !1464, file: !675, line: 320, baseType: !1485, size: 64, align: 64, offset: 448)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!88, !1456, !571}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "get_asn1_parameters", scope: !1464, file: !675, line: 321, baseType: !1485, size: 64, align: 64, offset: 512)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1464, file: !675, line: 322, baseType: !1490, size: 64, align: 64, offset: 576)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!88, !1456, !88, !88, !48}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "app_data", scope: !1464, file: !675, line: 323, baseType: !48, size: 64, align: 64, offset: 640)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1458, file: !675, line: 426, baseType: !686, size: 64, align: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "encrypt", scope: !1458, file: !675, line: 427, baseType: !88, size: 32, align: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1458, file: !675, line: 428, baseType: !88, size: 32, align: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "oiv", scope: !1458, file: !675, line: 430, baseType: !1447, size: 128, align: 8, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !1458, file: !675, line: 431, baseType: !1447, size: 128, align: 8, offset: 320)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1458, file: !675, line: 432, baseType: !1224, size: 256, align: 8, offset: 448)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1458, file: !675, line: 433, baseType: !88, size: 32, align: 32, offset: 704)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "app_data", scope: !1458, file: !675, line: 435, baseType: !48, size: 64, align: 64, offset: 768)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !1458, file: !675, line: 436, baseType: !88, size: 32, align: 32, offset: 832)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1458, file: !675, line: 437, baseType: !140, size: 64, align: 64, offset: 896)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_data", scope: !1458, file: !675, line: 438, baseType: !48, size: 64, align: 64, offset: 960)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "final_used", scope: !1458, file: !675, line: 439, baseType: !88, size: 32, align: 32, offset: 1024)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "block_mask", scope: !1458, file: !675, line: 440, baseType: !88, size: 32, align: 32, offset: 1056)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1458, file: !675, line: 441, baseType: !1224, size: 256, align: 8, offset: 1088)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64, align: 64)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "HMAC_CTX", file: !1510, line: 83, baseType: !1511)
!1510 = !DIFile(filename: "/usr/include/openssl/hmac.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1511 = !DICompositeType(tag: DW_TAG_structure_type, name: "hmac_ctx_st", file: !1510, line: 75, size: 2304, align: 64, elements: !1512)
!1512 = !{!1513, !1514, !1515, !1516, !1517, !1518}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "md", scope: !1511, file: !1510, line: 77, baseType: !1338, size: 64, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "md_ctx", scope: !1511, file: !1510, line: 78, baseType: !1352, size: 384, align: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctx", scope: !1511, file: !1510, line: 79, baseType: !1352, size: 384, align: 64, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "o_ctx", scope: !1511, file: !1510, line: 80, baseType: !1352, size: 384, align: 64, offset: 832)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "key_length", scope: !1511, file: !1510, line: 81, baseType: !385, size: 32, align: 32, offset: 1216)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1511, file: !1510, line: 82, baseType: !1519, size: 1024, align: 8, offset: 1248)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 1024, align: 8, elements: !1520)
!1520 = !{!1521}
!1521 = !DISubrange(count: 128)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_status_cb", scope: !460, file: !398, line: 894, baseType: !1523, size: 64, align: 64, offset: 3904)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64, align: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!88, !394, !48}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_status_arg", scope: !460, file: !398, line: 895, baseType: !48, size: 64, align: 64, offset: 3968)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_opaque_prf_input_callback", scope: !460, file: !398, line: 898, baseType: !1528, size: 64, align: 64, offset: 4032)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!88, !394, !48, !138, !48}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_opaque_prf_input_callback_arg", scope: !460, file: !398, line: 899, baseType: !48, size: 64, align: 64, offset: 4096)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "psk_identity_hint", scope: !460, file: !398, line: 903, baseType: !96, size: 64, align: 64, offset: 4160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "psk_client_callback", scope: !460, file: !398, line: 904, baseType: !1534, size: 64, align: 64, offset: 4224)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!385, !394, !73, !96, !385, !443, !385}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "psk_server_callback", scope: !460, file: !398, line: 907, baseType: !1538, size: 64, align: 64, offset: 4288)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!385, !394, !73, !443, !385}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "freelist_max_len", scope: !460, file: !398, line: 913, baseType: !385, size: 32, align: 32, offset: 4352)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "wbuf_freelist", scope: !460, file: !398, line: 914, baseType: !1543, size: 64, align: 64, offset: 4416)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64, align: 64)
!1544 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl3_buf_freelist_st", file: !398, line: 914, flags: DIFlagFwdDecl)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_freelist", scope: !460, file: !398, line: 915, baseType: !1543, size: 64, align: 64, offset: 4480)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "next_protos_advertised_cb", scope: !460, file: !398, line: 926, baseType: !1547, size: 64, align: 64, offset: 4544)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!88, !394, !1550, !764, !48}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64, align: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "next_protos_advertised_cb_arg", scope: !460, file: !398, line: 928, baseType: !48, size: 64, align: 64, offset: 4608)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "next_proto_select_cb", scope: !460, file: !398, line: 931, baseType: !1553, size: 64, align: 64, offset: 4672)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!88, !394, !1556, !443, !567, !385, !48}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "next_proto_select_cb_arg", scope: !460, file: !398, line: 936, baseType: !48, size: 64, align: 64, offset: 4736)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "srtp_profiles", scope: !460, file: !398, line: 939, baseType: !1559, size: 64, align: 64, offset: 4800)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SRTP_PROTECTION_PROFILE", file: !398, line: 379, size: 256, align: 64, elements: !1561)
!1561 = !{!1562}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1560, file: !398, line: 379, baseType: !468, size: 256, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "get_cipher_by_char", scope: !406, file: !398, line: 431, baseType: !1564, size: 64, align: 64, offset: 1152)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64, align: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1247, !567}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "put_cipher_by_char", scope: !406, file: !398, line: 432, baseType: !1568, size: 64, align: 64, offset: 1216)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64, align: 64)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!88, !1247, !443}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_pending", scope: !406, file: !398, line: 433, baseType: !1572, size: 64, align: 64, offset: 1280)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64, align: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!88, !1409}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "num_ciphers", scope: !406, file: !398, line: 434, baseType: !1576, size: 64, align: 64, offset: 1344)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!88}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "get_cipher", scope: !406, file: !398, line: 435, baseType: !1580, size: 64, align: 64, offset: 1408)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64, align: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!1247, !385}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "get_ssl_method", scope: !406, file: !398, line: 436, baseType: !1584, size: 64, align: 64, offset: 1472)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64, align: 64)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!1587, !88}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !406)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "get_timeout", scope: !406, file: !398, line: 437, baseType: !1590, size: 64, align: 64, offset: 1536)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!61}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ssl3_enc", scope: !406, file: !398, line: 438, baseType: !1594, size: 64, align: 64, offset: 1600)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl3_enc_method", file: !398, line: 438, flags: DIFlagFwdDecl)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_version", scope: !406, file: !398, line: 439, baseType: !1576, size: 64, align: 64, offset: 1664)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_callback_ctrl", scope: !406, file: !398, line: 440, baseType: !1598, size: 64, align: 64, offset: 1728)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!61, !394, !88, !1601}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{null}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_ctx_callback_ctrl", scope: !406, file: !398, line: 441, baseType: !1605, size: 64, align: 64, offset: 1792)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!61, !458, !88, !1601}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "rbio", scope: !397, file: !398, line: 1080, baseType: !1609, size: 64, align: 64, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64, align: 64)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIO", file: !1611, line: 231, baseType: !1612)
!1611 = !DIFile(filename: "/usr/include/openssl/bio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_st", file: !1611, line: 310, size: 896, align: 64, elements: !1613)
!1613 = !{!1614, !1652, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !1612, file: !1611, line: 312, baseType: !1615, size: 64, align: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64, align: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIO_METHOD", file: !1611, line: 308, baseType: !1617)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_method_st", file: !1611, line: 296, size: 640, align: 64, elements: !1618)
!1618 = !{!1619, !1620, !1621, !1625, !1629, !1633, !1634, !1638, !1642, !1643}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1617, file: !1611, line: 298, baseType: !88, size: 32, align: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1617, file: !1611, line: 299, baseType: !73, size: 64, align: 64, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "bwrite", scope: !1617, file: !1611, line: 300, baseType: !1622, size: 64, align: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64, align: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!88, !1609, !73, !88}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "bread", scope: !1617, file: !1611, line: 301, baseType: !1626, size: 64, align: 64, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!88, !1609, !96, !88}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "bputs", scope: !1617, file: !1611, line: 302, baseType: !1630, size: 64, align: 64, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!88, !1609, !73}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bgets", scope: !1617, file: !1611, line: 303, baseType: !1626, size: 64, align: 64, offset: 320)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1617, file: !1611, line: 304, baseType: !1635, size: 64, align: 64, offset: 384)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!61, !1609, !88, !61, !48}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1617, file: !1611, line: 305, baseType: !1639, size: 64, align: 64, offset: 448)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!88, !1609}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !1617, file: !1611, line: 306, baseType: !1639, size: 64, align: 64, offset: 512)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "callback_ctrl", scope: !1617, file: !1611, line: 307, baseType: !1644, size: 64, align: 64, offset: 576)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!61, !1609, !88, !1647}
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_info_cb", file: !1611, line: 294, baseType: !1649)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{null, !1651, !88, !73, !88, !61, !61}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1612, file: !1611, line: 314, baseType: !1653, size: 64, align: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{!61, !1651, !88, !73, !88, !61, !61}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "cb_arg", scope: !1612, file: !1611, line: 315, baseType: !96, size: 64, align: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1612, file: !1611, line: 317, baseType: !88, size: 32, align: 32, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1612, file: !1611, line: 318, baseType: !88, size: 32, align: 32, offset: 224)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1612, file: !1611, line: 319, baseType: !88, size: 32, align: 32, offset: 256)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "retry_reason", scope: !1612, file: !1611, line: 320, baseType: !88, size: 32, align: 32, offset: 288)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1612, file: !1611, line: 321, baseType: !88, size: 32, align: 32, offset: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1612, file: !1611, line: 322, baseType: !48, size: 64, align: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "next_bio", scope: !1612, file: !1611, line: 323, baseType: !1651, size: 64, align: 64, offset: 448)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bio", scope: !1612, file: !1611, line: 324, baseType: !1651, size: 64, align: 64, offset: 512)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !1612, file: !1611, line: 325, baseType: !88, size: 32, align: 32, offset: 576)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "num_read", scope: !1612, file: !1611, line: 326, baseType: !140, size: 64, align: 64, offset: 640)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "num_write", scope: !1612, file: !1611, line: 327, baseType: !140, size: 64, align: 64, offset: 704)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !1612, file: !1611, line: 329, baseType: !802, size: 128, align: 64, offset: 768)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wbio", scope: !397, file: !398, line: 1081, baseType: !1609, size: 64, align: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "bbio", scope: !397, file: !398, line: 1082, baseType: !1609, size: 64, align: 64, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rwstate", scope: !397, file: !398, line: 1093, baseType: !88, size: 32, align: 32, offset: 320)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "in_handshake", scope: !397, file: !398, line: 1096, baseType: !88, size: 32, align: 32, offset: 352)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_func", scope: !397, file: !398, line: 1097, baseType: !410, size: 64, align: 64, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "server", scope: !397, file: !398, line: 1107, baseType: !88, size: 32, align: 32, offset: 448)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "new_session", scope: !397, file: !398, line: 1109, baseType: !88, size: 32, align: 32, offset: 480)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "quiet_shutdown", scope: !397, file: !398, line: 1113, baseType: !88, size: 32, align: 32, offset: 512)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !397, file: !398, line: 1114, baseType: !88, size: 32, align: 32, offset: 544)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !397, file: !398, line: 1116, baseType: !88, size: 32, align: 32, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "rstate", scope: !397, file: !398, line: 1117, baseType: !88, size: 32, align: 32, offset: 608)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "init_buf", scope: !397, file: !398, line: 1119, baseType: !644, size: 64, align: 64, offset: 640)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "init_msg", scope: !397, file: !398, line: 1120, baseType: !48, size: 64, align: 64, offset: 704)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "init_num", scope: !397, file: !398, line: 1121, baseType: !88, size: 32, align: 32, offset: 768)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "init_off", scope: !397, file: !398, line: 1122, baseType: !88, size: 32, align: 32, offset: 800)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !397, file: !398, line: 1125, baseType: !443, size: 64, align: 64, offset: 832)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "packet_length", scope: !397, file: !398, line: 1126, baseType: !385, size: 32, align: 32, offset: 896)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !397, file: !398, line: 1128, baseType: !1687, size: 64, align: 64, offset: 960)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl2_state_st", file: !1689, line: 160, size: 2752, align: 64, elements: !1690)
!1689 = !DIFile(filename: "/usr/include/openssl/ssl2.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "three_byte_header", scope: !1688, file: !1689, line: 162, baseType: !88, size: 32, align: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "clear_text", scope: !1688, file: !1689, line: 163, baseType: !88, size: 32, align: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "escape", scope: !1688, file: !1689, line: 164, baseType: !88, size: 32, align: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ssl2_rollback", scope: !1688, file: !1689, line: 165, baseType: !88, size: 32, align: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "wnum", scope: !1688, file: !1689, line: 169, baseType: !385, size: 32, align: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_tot", scope: !1688, file: !1689, line: 170, baseType: !88, size: 32, align: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_buf", scope: !1688, file: !1689, line: 171, baseType: !567, size: 64, align: 64, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_off", scope: !1688, file: !1689, line: 173, baseType: !88, size: 32, align: 32, offset: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_len", scope: !1688, file: !1689, line: 174, baseType: !88, size: 32, align: 32, offset: 288)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_ret", scope: !1688, file: !1689, line: 175, baseType: !88, size: 32, align: 32, offset: 320)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_left", scope: !1688, file: !1689, line: 178, baseType: !88, size: 32, align: 32, offset: 352)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_offs", scope: !1688, file: !1689, line: 179, baseType: !88, size: 32, align: 32, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf", scope: !1688, file: !1689, line: 180, baseType: !443, size: 64, align: 64, offset: 448)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "wbuf", scope: !1688, file: !1689, line: 181, baseType: !443, size: 64, align: 64, offset: 512)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1688, file: !1689, line: 183, baseType: !443, size: 64, align: 64, offset: 576)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1688, file: !1689, line: 186, baseType: !385, size: 32, align: 32, offset: 640)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "rlength", scope: !1688, file: !1689, line: 187, baseType: !385, size: 32, align: 32, offset: 672)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ract_data_length", scope: !1688, file: !1689, line: 188, baseType: !88, size: 32, align: 32, offset: 704)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "wlength", scope: !1688, file: !1689, line: 189, baseType: !385, size: 32, align: 32, offset: 736)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "wact_data_length", scope: !1688, file: !1689, line: 190, baseType: !88, size: 32, align: 32, offset: 768)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ract_data", scope: !1688, file: !1689, line: 191, baseType: !443, size: 64, align: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "wact_data", scope: !1688, file: !1689, line: 192, baseType: !443, size: 64, align: 64, offset: 896)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mac_data", scope: !1688, file: !1689, line: 193, baseType: !443, size: 64, align: 64, offset: 960)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "read_key", scope: !1688, file: !1689, line: 195, baseType: !443, size: 64, align: 64, offset: 1024)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "write_key", scope: !1688, file: !1689, line: 196, baseType: !443, size: 64, align: 64, offset: 1088)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "challenge_length", scope: !1688, file: !1689, line: 199, baseType: !385, size: 32, align: 32, offset: 1152)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "challenge", scope: !1688, file: !1689, line: 200, baseType: !1224, size: 256, align: 8, offset: 1184)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "conn_id_length", scope: !1688, file: !1689, line: 201, baseType: !385, size: 32, align: 32, offset: 1440)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "conn_id", scope: !1688, file: !1689, line: 202, baseType: !1447, size: 128, align: 8, offset: 1472)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "key_material_length", scope: !1688, file: !1689, line: 203, baseType: !385, size: 32, align: 32, offset: 1600)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "key_material", scope: !1688, file: !1689, line: 204, baseType: !1219, size: 384, align: 8, offset: 1632)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "read_sequence", scope: !1688, file: !1689, line: 206, baseType: !140, size: 64, align: 64, offset: 2048)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "write_sequence", scope: !1688, file: !1689, line: 207, baseType: !140, size: 64, align: 64, offset: 2112)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1688, file: !1689, line: 221, baseType: !1725, size: 576, align: 32, offset: 2176)
!1725 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1688, file: !1689, line: 209, size: 576, align: 32, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "conn_id_length", scope: !1725, file: !1689, line: 210, baseType: !385, size: 32, align: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cert_type", scope: !1725, file: !1689, line: 211, baseType: !385, size: 32, align: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "cert_length", scope: !1725, file: !1689, line: 212, baseType: !385, size: 32, align: 32, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "csl", scope: !1725, file: !1689, line: 213, baseType: !385, size: 32, align: 32, offset: 96)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "clear", scope: !1725, file: !1689, line: 214, baseType: !385, size: 32, align: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !1725, file: !1689, line: 215, baseType: !385, size: 32, align: 32, offset: 160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ccl", scope: !1725, file: !1689, line: 216, baseType: !1224, size: 256, align: 8, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_spec_length", scope: !1725, file: !1689, line: 217, baseType: !385, size: 32, align: 32, offset: 448)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "session_id_length", scope: !1725, file: !1689, line: 218, baseType: !385, size: 32, align: 32, offset: 480)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "clen", scope: !1725, file: !1689, line: 219, baseType: !385, size: 32, align: 32, offset: 512)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rlen", scope: !1725, file: !1689, line: 220, baseType: !385, size: 32, align: 32, offset: 544)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !397, file: !398, line: 1129, baseType: !1739, size: 64, align: 64, offset: 1024)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64, align: 64)
!1740 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl3_state_st", file: !1741, line: 411, size: 9600, align: 64, elements: !1742)
!1741 = !DIFile(filename: "/usr/include/openssl/ssl3.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1767, !1768, !1780, !1781, !1783, !1784, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1884, !1885, !1886, !1887, !1888, !1889}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1740, file: !1741, line: 413, baseType: !61, size: 64, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "delay_buf_pop_ret", scope: !1740, file: !1741, line: 414, baseType: !88, size: 32, align: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "read_sequence", scope: !1740, file: !1741, line: 416, baseType: !1214, size: 64, align: 8, offset: 96)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "read_mac_secret_size", scope: !1740, file: !1741, line: 417, baseType: !88, size: 32, align: 32, offset: 160)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "read_mac_secret", scope: !1740, file: !1741, line: 418, baseType: !1748, size: 512, align: 8, offset: 192)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 512, align: 8, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "write_sequence", scope: !1740, file: !1741, line: 419, baseType: !1214, size: 64, align: 8, offset: 704)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "write_mac_secret_size", scope: !1740, file: !1741, line: 420, baseType: !88, size: 32, align: 32, offset: 768)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "write_mac_secret", scope: !1740, file: !1741, line: 421, baseType: !1748, size: 512, align: 8, offset: 800)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "server_random", scope: !1740, file: !1741, line: 423, baseType: !1224, size: 256, align: 8, offset: 1312)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "client_random", scope: !1740, file: !1741, line: 424, baseType: !1224, size: 256, align: 8, offset: 1568)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "need_empty_fragments", scope: !1740, file: !1741, line: 427, baseType: !88, size: 32, align: 32, offset: 1824)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "empty_fragment_done", scope: !1740, file: !1741, line: 428, baseType: !88, size: 32, align: 32, offset: 1856)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "init_extra", scope: !1740, file: !1741, line: 431, baseType: !88, size: 32, align: 32, offset: 1888)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf", scope: !1740, file: !1741, line: 433, baseType: !1760, size: 192, align: 64, offset: 1920)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL3_BUFFER", file: !1741, line: 372, baseType: !1761)
!1761 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl3_buffer_st", file: !1741, line: 365, size: 192, align: 64, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1761, file: !1741, line: 367, baseType: !443, size: 64, align: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1761, file: !1741, line: 369, baseType: !138, size: 64, align: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1761, file: !1741, line: 370, baseType: !88, size: 32, align: 32, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1761, file: !1741, line: 371, baseType: !88, size: 32, align: 32, offset: 160)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "wbuf", scope: !1740, file: !1741, line: 434, baseType: !1760, size: 192, align: 64, offset: 2112)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "rrec", scope: !1740, file: !1741, line: 436, baseType: !1769, size: 448, align: 64, offset: 2304)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL3_RECORD", file: !1741, line: 363, baseType: !1770)
!1770 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl3_record_st", file: !1741, line: 353, size: 448, align: 64, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1770, file: !1741, line: 355, baseType: !88, size: 32, align: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1770, file: !1741, line: 356, baseType: !385, size: 32, align: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1770, file: !1741, line: 357, baseType: !385, size: 32, align: 32, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1770, file: !1741, line: 358, baseType: !443, size: 64, align: 64, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !1770, file: !1741, line: 359, baseType: !443, size: 64, align: 64, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1770, file: !1741, line: 360, baseType: !443, size: 64, align: 64, offset: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "epoch", scope: !1770, file: !1741, line: 361, baseType: !140, size: 64, align: 64, offset: 320)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "seq_num", scope: !1770, file: !1741, line: 362, baseType: !1214, size: 64, align: 8, offset: 384)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "wrec", scope: !1740, file: !1741, line: 437, baseType: !1769, size: 448, align: 64, offset: 2752)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "alert_fragment", scope: !1740, file: !1741, line: 441, baseType: !1782, size: 16, align: 8, offset: 3200)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 16, align: 8, elements: !750)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "alert_fragment_len", scope: !1740, file: !1741, line: 442, baseType: !385, size: 32, align: 32, offset: 3232)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_fragment", scope: !1740, file: !1741, line: 443, baseType: !1785, size: 32, align: 8, offset: 3264)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 32, align: 8, elements: !1786)
!1786 = !{!1787}
!1787 = !DISubrange(count: 4)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_fragment_len", scope: !1740, file: !1741, line: 444, baseType: !385, size: 32, align: 32, offset: 3296)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "wnum", scope: !1740, file: !1741, line: 447, baseType: !385, size: 32, align: 32, offset: 3328)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_tot", scope: !1740, file: !1741, line: 448, baseType: !88, size: 32, align: 32, offset: 3360)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_type", scope: !1740, file: !1741, line: 449, baseType: !88, size: 32, align: 32, offset: 3392)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_ret", scope: !1740, file: !1741, line: 450, baseType: !88, size: 32, align: 32, offset: 3424)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "wpend_buf", scope: !1740, file: !1741, line: 451, baseType: !567, size: 64, align: 64, offset: 3456)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_buffer", scope: !1740, file: !1741, line: 454, baseType: !1609, size: 64, align: 64, offset: 3520)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_dgst", scope: !1740, file: !1741, line: 458, baseType: !1796, size: 64, align: 64, offset: 3584)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "change_cipher_spec", scope: !1740, file: !1741, line: 461, baseType: !88, size: 32, align: 32, offset: 3648)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "warn_alert", scope: !1740, file: !1741, line: 463, baseType: !88, size: 32, align: 32, offset: 3680)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_alert", scope: !1740, file: !1741, line: 464, baseType: !88, size: 32, align: 32, offset: 3712)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "alert_dispatch", scope: !1740, file: !1741, line: 467, baseType: !88, size: 32, align: 32, offset: 3744)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "send_alert", scope: !1740, file: !1741, line: 468, baseType: !1782, size: 16, align: 8, offset: 3776)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "renegotiate", scope: !1740, file: !1741, line: 472, baseType: !88, size: 32, align: 32, offset: 3808)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "total_renegotiations", scope: !1740, file: !1741, line: 473, baseType: !88, size: 32, align: 32, offset: 3840)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "num_renegotiations", scope: !1740, file: !1741, line: 474, baseType: !88, size: 32, align: 32, offset: 3872)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "in_read_app_data", scope: !1740, file: !1741, line: 476, baseType: !88, size: 32, align: 32, offset: 3904)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "client_opaque_prf_input", scope: !1740, file: !1741, line: 481, baseType: !48, size: 64, align: 64, offset: 3968)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "client_opaque_prf_input_len", scope: !1740, file: !1741, line: 482, baseType: !138, size: 64, align: 64, offset: 4032)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "server_opaque_prf_input", scope: !1740, file: !1741, line: 483, baseType: !48, size: 64, align: 64, offset: 4096)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "server_opaque_prf_input_len", scope: !1740, file: !1741, line: 484, baseType: !138, size: 64, align: 64, offset: 4160)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1740, file: !1741, line: 535, baseType: !1811, size: 4224, align: 64, offset: 4224)
!1811 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1740, file: !1741, line: 486, size: 4224, align: 64, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1826, !1827, !1828, !1829, !1830, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1883}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "cert_verify_md", scope: !1811, file: !1741, line: 488, baseType: !1519, size: 1024, align: 8)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "finish_md", scope: !1811, file: !1741, line: 491, baseType: !1519, size: 1024, align: 8, offset: 1024)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "finish_md_len", scope: !1811, file: !1741, line: 492, baseType: !88, size: 32, align: 32, offset: 2048)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "peer_finish_md", scope: !1811, file: !1741, line: 493, baseType: !1519, size: 1024, align: 8, offset: 2080)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "peer_finish_md_len", scope: !1811, file: !1741, line: 494, baseType: !88, size: 32, align: 32, offset: 3104)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1811, file: !1741, line: 496, baseType: !140, size: 64, align: 64, offset: 3136)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !1811, file: !1741, line: 497, baseType: !88, size: 32, align: 32, offset: 3200)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "new_cipher", scope: !1811, file: !1741, line: 500, baseType: !1247, size: 64, align: 64, offset: 3264)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dh", scope: !1811, file: !1741, line: 502, baseType: !923, size: 64, align: 64, offset: 3328)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ecdh", scope: !1811, file: !1741, line: 506, baseType: !1823, size: 64, align: 64, offset: 3392)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64, align: 64)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "EC_KEY", file: !1825, line: 626, baseType: !946)
!1825 = !DIFile(filename: "/usr/include/openssl/ec.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "next_state", scope: !1811, file: !1741, line: 510, baseType: !88, size: 32, align: 32, offset: 3456)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_message", scope: !1811, file: !1741, line: 512, baseType: !88, size: 32, align: 32, offset: 3488)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "cert_req", scope: !1811, file: !1741, line: 515, baseType: !88, size: 32, align: 32, offset: 3520)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "ctype_num", scope: !1811, file: !1741, line: 516, baseType: !88, size: 32, align: 32, offset: 3552)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ctype", scope: !1811, file: !1741, line: 517, baseType: !1831, size: 72, align: 8, offset: 3584)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 72, align: 8, elements: !1832)
!1832 = !{!1833}
!1833 = !DISubrange(count: 9)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "ca_names", scope: !1811, file: !1741, line: 518, baseType: !1412, size: 64, align: 64, offset: 3712)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "use_rsa_tmp", scope: !1811, file: !1741, line: 520, baseType: !88, size: 32, align: 32, offset: 3776)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "key_block_length", scope: !1811, file: !1741, line: 522, baseType: !88, size: 32, align: 32, offset: 3808)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "key_block", scope: !1811, file: !1741, line: 523, baseType: !443, size: 64, align: 64, offset: 3840)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "new_sym_enc", scope: !1811, file: !1741, line: 525, baseType: !1461, size: 64, align: 64, offset: 3904)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "new_hash", scope: !1811, file: !1741, line: 526, baseType: !1338, size: 64, align: 64, offset: 3968)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "new_mac_pkey_type", scope: !1811, file: !1741, line: 527, baseType: !88, size: 32, align: 32, offset: 4032)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "new_mac_secret_size", scope: !1811, file: !1741, line: 528, baseType: !88, size: 32, align: 32, offset: 4064)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "new_compression", scope: !1811, file: !1741, line: 530, baseType: !1843, size: 64, align: 64, offset: 4096)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64, align: 64)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_COMP", file: !398, line: 714, baseType: !1846)
!1846 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_comp_st", file: !398, line: 718, size: 192, align: 64, elements: !1847)
!1847 = !{!1848, !1849, !1850}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1846, file: !398, line: 720, baseType: !88, size: 32, align: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1846, file: !398, line: 721, baseType: !73, size: 64, align: 64, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !1846, file: !398, line: 723, baseType: !1851, size: 64, align: 64, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "COMP_METHOD", file: !1853, line: 28, baseType: !1854)
!1853 = !DIFile(filename: "/usr/include/openssl/comp.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "comp_method_st", file: !1853, line: 13, size: 512, align: 64, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1872, !1876, !1880, !1881, !1882}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1854, file: !1853, line: 15, baseType: !88, size: 32, align: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1854, file: !1853, line: 16, baseType: !73, size: 64, align: 64, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1854, file: !1853, line: 17, baseType: !1859, size: 64, align: 64, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64, align: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!88, !1862}
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64, align: 64)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "COMP_CTX", file: !1853, line: 11, baseType: !1864)
!1864 = !DICompositeType(tag: DW_TAG_structure_type, name: "comp_ctx_st", file: !1853, line: 30, size: 448, align: 64, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "meth", scope: !1864, file: !1853, line: 32, baseType: !1851, size: 64, align: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "compress_in", scope: !1864, file: !1853, line: 33, baseType: !140, size: 64, align: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "compress_out", scope: !1864, file: !1853, line: 34, baseType: !140, size: 64, align: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "expand_in", scope: !1864, file: !1853, line: 35, baseType: !140, size: 64, align: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "expand_out", scope: !1864, file: !1853, line: 36, baseType: !140, size: 64, align: 64, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !1864, file: !1853, line: 38, baseType: !802, size: 128, align: 64, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !1854, file: !1853, line: 18, baseType: !1873, size: 64, align: 64, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64, align: 64)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{null, !1862}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1854, file: !1853, line: 19, baseType: !1877, size: 64, align: 64, offset: 256)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64, align: 64)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!88, !1862, !443, !385, !443, !385}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "expand", scope: !1854, file: !1853, line: 22, baseType: !1877, size: 64, align: 64, offset: 320)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1854, file: !1853, line: 26, baseType: !1590, size: 64, align: 64, offset: 384)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "callback_ctrl", scope: !1854, file: !1853, line: 27, baseType: !1590, size: 64, align: 64, offset: 448)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "cert_request", scope: !1811, file: !1741, line: 534, baseType: !88, size: 32, align: 32, offset: 4160)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "previous_client_finished", scope: !1740, file: !1741, line: 538, baseType: !1748, size: 512, align: 8, offset: 8448)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "previous_client_finished_len", scope: !1740, file: !1741, line: 539, baseType: !444, size: 8, align: 8, offset: 8960)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "previous_server_finished", scope: !1740, file: !1741, line: 540, baseType: !1748, size: 512, align: 8, offset: 8968)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "previous_server_finished_len", scope: !1740, file: !1741, line: 541, baseType: !444, size: 8, align: 8, offset: 9480)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "send_connection_binding", scope: !1740, file: !1741, line: 542, baseType: !88, size: 32, align: 32, offset: 9504)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "next_proto_neg_seen", scope: !1740, file: !1741, line: 546, baseType: !88, size: 32, align: 32, offset: 9536)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "d1", scope: !397, file: !398, line: 1130, baseType: !1891, size: 64, align: 64, offset: 1088)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64, align: 64)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "dtls1_state_st", file: !1893, line: 184, size: 7168, align: 64, elements: !1894)
!1893 = !DIFile(filename: "/usr/include/openssl/dtls1.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1907, !1908, !1909, !1910, !1911, !1912, !1922, !1923, !1924, !1925, !1926, !1927, !1944, !1945, !1951, !1958, !1959, !1960, !1961, !1965, !1966, !1967, !1968}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "send_cookie", scope: !1892, file: !1893, line: 186, baseType: !385, size: 32, align: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !1892, file: !1893, line: 187, baseType: !1231, size: 2048, align: 8, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "rcvd_cookie", scope: !1892, file: !1893, line: 188, baseType: !1231, size: 2048, align: 8, offset: 2080)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !1892, file: !1893, line: 189, baseType: !385, size: 32, align: 32, offset: 4128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "r_epoch", scope: !1892, file: !1893, line: 196, baseType: !121, size: 16, align: 16, offset: 4160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "w_epoch", scope: !1892, file: !1893, line: 197, baseType: !121, size: 16, align: 16, offset: 4176)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap", scope: !1892, file: !1893, line: 200, baseType: !1902, size: 128, align: 64, offset: 4224)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "DTLS1_BITMAP", file: !1893, line: 127, baseType: !1903)
!1903 = !DICompositeType(tag: DW_TAG_structure_type, name: "dtls1_bitmap_st", file: !1893, line: 120, size: 128, align: 64, elements: !1904)
!1904 = !{!1905, !1906}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1903, file: !1893, line: 122, baseType: !140, size: 64, align: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "max_seq_num", scope: !1903, file: !1893, line: 124, baseType: !1214, size: 64, align: 8, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "next_bitmap", scope: !1892, file: !1893, line: 203, baseType: !1902, size: 128, align: 64, offset: 4352)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_write_seq", scope: !1892, file: !1893, line: 206, baseType: !121, size: 16, align: 16, offset: 4480)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "next_handshake_write_seq", scope: !1892, file: !1893, line: 207, baseType: !121, size: 16, align: 16, offset: 4496)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_read_seq", scope: !1892, file: !1893, line: 209, baseType: !121, size: 16, align: 16, offset: 4512)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "last_write_sequence", scope: !1892, file: !1893, line: 212, baseType: !1214, size: 64, align: 8, offset: 4528)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "unprocessed_rcds", scope: !1892, file: !1893, line: 215, baseType: !1913, size: 128, align: 64, offset: 4608)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "record_pqueue", file: !1893, line: 175, baseType: !1914)
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "record_pqueue_st", file: !1893, line: 171, size: 128, align: 64, elements: !1915)
!1915 = !{!1916, !1917}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "epoch", scope: !1914, file: !1893, line: 173, baseType: !121, size: 16, align: 16)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1914, file: !1893, line: 174, baseType: !1918, size: 64, align: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "pqueue", file: !1919, line: 67, baseType: !1920)
!1919 = !DIFile(filename: "/usr/include/openssl/pqueue.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64, align: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "_pqueue", file: !1919, line: 67, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "processed_rcds", scope: !1892, file: !1893, line: 216, baseType: !1913, size: 128, align: 64, offset: 4736)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "buffered_messages", scope: !1892, file: !1893, line: 219, baseType: !1918, size: 64, align: 64, offset: 4864)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "sent_messages", scope: !1892, file: !1893, line: 222, baseType: !1918, size: 64, align: 64, offset: 4928)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "buffered_app_data", scope: !1892, file: !1893, line: 229, baseType: !1913, size: 128, align: 64, offset: 4992)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !1892, file: !1893, line: 231, baseType: !385, size: 32, align: 32, offset: 5120)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "w_msg_hdr", scope: !1892, file: !1893, line: 233, baseType: !1928, size: 704, align: 64, offset: 5184)
!1928 = !DICompositeType(tag: DW_TAG_structure_type, name: "hm_header_st", file: !1893, line: 142, size: 704, align: 64, elements: !1929)
!1929 = !{!1930, !1931, !1932, !1933, !1934, !1935, !1936}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1928, file: !1893, line: 144, baseType: !444, size: 8, align: 8)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !1928, file: !1893, line: 145, baseType: !140, size: 64, align: 64, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1928, file: !1893, line: 146, baseType: !121, size: 16, align: 16, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !1928, file: !1893, line: 147, baseType: !140, size: 64, align: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "frag_len", scope: !1928, file: !1893, line: 148, baseType: !140, size: 64, align: 64, offset: 256)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "is_ccs", scope: !1928, file: !1893, line: 149, baseType: !385, size: 32, align: 32, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "saved_retransmit_state", scope: !1928, file: !1893, line: 150, baseType: !1937, size: 320, align: 64, offset: 384)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "dtls1_retransmit_state", file: !1893, line: 129, size: 320, align: 64, elements: !1938)
!1938 = !{!1939, !1940, !1941, !1942, !1943}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "enc_write_ctx", scope: !1937, file: !1893, line: 131, baseType: !1456, size: 64, align: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "write_hash", scope: !1937, file: !1893, line: 132, baseType: !1351, size: 64, align: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1937, file: !1893, line: 134, baseType: !1862, size: 64, align: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !1937, file: !1893, line: 138, baseType: !1285, size: 64, align: 64, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "epoch", scope: !1937, file: !1893, line: 139, baseType: !121, size: 16, align: 16, offset: 256)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "r_msg_hdr", scope: !1892, file: !1893, line: 234, baseType: !1928, size: 704, align: 64, offset: 5888)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1892, file: !1893, line: 236, baseType: !1946, size: 96, align: 32, offset: 6592)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "dtls1_timeout_st", file: !1893, line: 159, size: 96, align: 32, elements: !1947)
!1947 = !{!1948, !1949, !1950}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "read_timeouts", scope: !1946, file: !1893, line: 162, baseType: !385, size: 32, align: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "write_timeouts", scope: !1946, file: !1893, line: 165, baseType: !385, size: 32, align: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "num_alerts", scope: !1946, file: !1893, line: 168, baseType: !385, size: 32, align: 32, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "next_timeout", scope: !1892, file: !1893, line: 239, baseType: !1952, size: 128, align: 64, offset: 6720)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1953, line: 30, size: 128, align: 64, elements: !1954)
!1953 = !DIFile(filename: "/usr/include/bits/time.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1954 = !{!1955, !1956}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1952, file: !1953, line: 32, baseType: !507, size: 64, align: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1952, file: !1953, line: 33, baseType: !1957, size: 64, align: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !60, line: 150, baseType: !61)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_duration", scope: !1892, file: !1893, line: 242, baseType: !121, size: 16, align: 16, offset: 6848)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "alert_fragment", scope: !1892, file: !1893, line: 246, baseType: !1782, size: 16, align: 8, offset: 6864)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "alert_fragment_len", scope: !1892, file: !1893, line: 247, baseType: !385, size: 32, align: 32, offset: 6880)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_fragment", scope: !1892, file: !1893, line: 248, baseType: !1962, size: 96, align: 8, offset: 6912)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 96, align: 8, elements: !1963)
!1963 = !{!1964}
!1964 = !DISubrange(count: 12)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_fragment_len", scope: !1892, file: !1893, line: 249, baseType: !385, size: 32, align: 32, offset: 7008)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "retransmitting", scope: !1892, file: !1893, line: 251, baseType: !385, size: 32, align: 32, offset: 7040)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "change_cipher_spec_ok", scope: !1892, file: !1893, line: 252, baseType: !385, size: 32, align: 32, offset: 7072)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !1892, file: !1893, line: 255, baseType: !385, size: 32, align: 32, offset: 7104)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "read_ahead", scope: !397, file: !398, line: 1132, baseType: !88, size: 32, align: 32, offset: 1152)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "msg_callback", scope: !397, file: !398, line: 1136, baseType: !1424, size: 64, align: 64, offset: 1216)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "msg_callback_arg", scope: !397, file: !398, line: 1137, baseType: !48, size: 64, align: 64, offset: 1280)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !397, file: !398, line: 1139, baseType: !88, size: 32, align: 32, offset: 1344)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !397, file: !398, line: 1141, baseType: !499, size: 64, align: 64, offset: 1408)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list", scope: !397, file: !398, line: 1149, baseType: !464, size: 64, align: 64, offset: 1472)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list_by_id", scope: !397, file: !398, line: 1150, baseType: !464, size: 64, align: 64, offset: 1536)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "mac_flags", scope: !397, file: !398, line: 1154, baseType: !88, size: 32, align: 32, offset: 1600)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "enc_read_ctx", scope: !397, file: !398, line: 1155, baseType: !1456, size: 64, align: 64, offset: 1664)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "read_hash", scope: !397, file: !398, line: 1156, baseType: !1351, size: 64, align: 64, offset: 1728)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "expand", scope: !397, file: !398, line: 1158, baseType: !1862, size: 64, align: 64, offset: 1792)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "enc_write_ctx", scope: !397, file: !398, line: 1163, baseType: !1456, size: 64, align: 64, offset: 1856)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "write_hash", scope: !397, file: !398, line: 1164, baseType: !1351, size: 64, align: 64, offset: 1920)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !397, file: !398, line: 1166, baseType: !1862, size: 64, align: 64, offset: 1984)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !397, file: !398, line: 1175, baseType: !1420, size: 64, align: 64, offset: 2048)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "sid_ctx_length", scope: !397, file: !398, line: 1179, baseType: !385, size: 32, align: 32, offset: 2112)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sid_ctx", scope: !397, file: !398, line: 1180, baseType: !1224, size: 256, align: 8, offset: 2144)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !397, file: !398, line: 1183, baseType: !1285, size: 64, align: 64, offset: 2432)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "generate_session_id", scope: !397, file: !398, line: 1186, baseType: !1433, size: 64, align: 64, offset: 2496)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "verify_mode", scope: !397, file: !398, line: 1189, baseType: !88, size: 32, align: 32, offset: 2560)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "verify_callback", scope: !397, file: !398, line: 1191, baseType: !1074, size: 64, align: 64, offset: 2624)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "info_callback", scope: !397, file: !398, line: 1193, baseType: !1406, size: 64, align: 64, offset: 2688)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !397, file: !398, line: 1195, baseType: !88, size: 32, align: 32, offset: 2752)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !397, file: !398, line: 1196, baseType: !88, size: 32, align: 32, offset: 2784)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "kssl_ctx", scope: !397, file: !398, line: 1199, baseType: !1994, size: 64, align: 64, offset: 2816)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64, align: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "KSSL_CTX", file: !1996, line: 141, baseType: !1997)
!1996 = !DIFile(filename: "/usr/include/openssl/kssl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "kssl_ctx_st", file: !1996, line: 130, size: 448, align: 64, elements: !1998)
!1998 = !{!1999, !2000, !2001, !2002, !2003, !2004, !2010, !2011}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "service_name", scope: !1997, file: !1996, line: 133, baseType: !96, size: 64, align: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "service_host", scope: !1997, file: !1996, line: 134, baseType: !96, size: 64, align: 64, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "client_princ", scope: !1997, file: !1996, line: 135, baseType: !96, size: 64, align: 64, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "keytab_file", scope: !1997, file: !1996, line: 136, baseType: !96, size: 64, align: 64, offset: 192)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "cred_cache", scope: !1997, file: !1996, line: 137, baseType: !96, size: 64, align: 64, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "enctype", scope: !1997, file: !1996, line: 138, baseType: !2005, size: 32, align: 32, offset: 320)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "krb5_enctype", file: !2006, line: 185, baseType: !2007)
!2006 = !DIFile(filename: "/usr/include/krb5/krb5.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "krb5_int32", file: !2006, line: 145, baseType: !2008)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !2009, line: 196, baseType: !88)
!2009 = !DIFile(filename: "/usr/include/sys/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1997, file: !1996, line: 139, baseType: !88, size: 32, align: 32, offset: 352)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1997, file: !1996, line: 140, baseType: !2012, size: 64, align: 64, offset: 384)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64, align: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "krb5_octet", file: !2006, line: 142, baseType: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !2015, line: 48, baseType: !444)
!2015 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "psk_client_callback", scope: !397, file: !398, line: 1203, baseType: !1534, size: 64, align: 64, offset: 2880)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "psk_server_callback", scope: !397, file: !398, line: 1206, baseType: !1538, size: 64, align: 64, offset: 2944)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !397, file: !398, line: 1210, baseType: !458, size: 64, align: 64, offset: 3008)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !397, file: !398, line: 1213, baseType: !88, size: 32, align: 32, offset: 3072)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "verify_result", scope: !397, file: !398, line: 1216, baseType: !61, size: 64, align: 64, offset: 3136)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ex_data", scope: !397, file: !398, line: 1217, baseType: !802, size: 128, align: 64, offset: 3200)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "client_CA", scope: !397, file: !398, line: 1220, baseType: !1412, size: 64, align: 64, offset: 3328)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !397, file: !398, line: 1222, baseType: !88, size: 32, align: 32, offset: 3392)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !397, file: !398, line: 1223, baseType: !140, size: 64, align: 64, offset: 3456)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !397, file: !398, line: 1224, baseType: !140, size: 64, align: 64, offset: 3520)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "max_cert_list", scope: !397, file: !398, line: 1225, baseType: !61, size: 64, align: 64, offset: 3584)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "first_packet", scope: !397, file: !398, line: 1226, baseType: !88, size: 32, align: 32, offset: 3648)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "client_version", scope: !397, file: !398, line: 1227, baseType: !88, size: 32, align: 32, offset: 3680)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_fragment", scope: !397, file: !398, line: 1229, baseType: !385, size: 32, align: 32, offset: 3712)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_debug_cb", scope: !397, file: !398, line: 1232, baseType: !2031, size: 64, align: 64, offset: 3776)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64, align: 64)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !394, !88, !88, !443, !88, !48}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_debug_arg", scope: !397, file: !398, line: 1235, baseType: !48, size: 64, align: 64, offset: 3840)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_hostname", scope: !397, file: !398, line: 1236, baseType: !96, size: 64, align: 64, offset: 3904)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "servername_done", scope: !397, file: !398, line: 1237, baseType: !88, size: 32, align: 32, offset: 3968)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_status_type", scope: !397, file: !398, line: 1244, baseType: !88, size: 32, align: 32, offset: 4000)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_status_expected", scope: !397, file: !398, line: 1246, baseType: !88, size: 32, align: 32, offset: 4032)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ocsp_ids", scope: !397, file: !398, line: 1248, baseType: !2040, size: 64, align: 64, offset: 4096)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64, align: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_OCSP_RESPID", file: !398, line: 1248, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ocsp_exts", scope: !397, file: !398, line: 1249, baseType: !2043, size: 64, align: 64, offset: 4160)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64, align: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_EXTENSIONS", file: !535, line: 210, baseType: !957)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ocsp_resp", scope: !397, file: !398, line: 1251, baseType: !443, size: 64, align: 64, offset: 4224)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ocsp_resplen", scope: !397, file: !398, line: 1252, baseType: !88, size: 32, align: 32, offset: 4288)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ticket_expected", scope: !397, file: !398, line: 1255, baseType: !88, size: 32, align: 32, offset: 4320)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ecpointformatlist_length", scope: !397, file: !398, line: 1257, baseType: !138, size: 64, align: 64, offset: 4352)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ecpointformatlist", scope: !397, file: !398, line: 1258, baseType: !443, size: 64, align: 64, offset: 4416)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ellipticcurvelist_length", scope: !397, file: !398, line: 1259, baseType: !138, size: 64, align: 64, offset: 4480)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_ellipticcurvelist", scope: !397, file: !398, line: 1260, baseType: !443, size: 64, align: 64, offset: 4544)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_opaque_prf_input", scope: !397, file: !398, line: 1264, baseType: !48, size: 64, align: 64, offset: 4608)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_opaque_prf_input_len", scope: !397, file: !398, line: 1265, baseType: !138, size: 64, align: 64, offset: 4672)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_session_ticket", scope: !397, file: !398, line: 1268, baseType: !2055, size: 64, align: 64, offset: 4736)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "TLS_SESSION_TICKET_EXT", file: !398, line: 365, baseType: !2057)
!2057 = !DICompositeType(tag: DW_TAG_structure_type, name: "tls_session_ticket_ext_st", file: !2058, line: 729, size: 128, align: 64, elements: !2059)
!2058 = !DIFile(filename: "/usr/include/openssl/tls1.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2057, file: !2058, line: 731, baseType: !121, size: 16, align: 16)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2057, file: !2058, line: 732, baseType: !48, size: 64, align: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "tls_session_ticket_ext_cb", scope: !397, file: !398, line: 1271, baseType: !2063, size: 64, align: 64, offset: 4800)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "tls_session_ticket_ext_cb_fn", file: !398, line: 381, baseType: !2064)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64, align: 64)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!88, !394, !567, !88, !48}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "tls_session_ticket_ext_cb_arg", scope: !397, file: !398, line: 1272, baseType: !48, size: 64, align: 64, offset: 4864)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "tls_session_secret_cb", scope: !397, file: !398, line: 1275, baseType: !2069, size: 64, align: 64, offset: 4928)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "tls_session_secret_cb_fn", file: !398, line: 382, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64, align: 64)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!88, !394, !48, !438, !464, !2073, !48}
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64, align: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "tls_session_secret_cb_arg", scope: !397, file: !398, line: 1276, baseType: !48, size: 64, align: 64, offset: 4992)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ctx", scope: !397, file: !398, line: 1278, baseType: !458, size: 64, align: 64, offset: 5056)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "next_proto_negotiated", scope: !397, file: !398, line: 1288, baseType: !443, size: 64, align: 64, offset: 5120)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "next_proto_negotiated_len", scope: !397, file: !398, line: 1289, baseType: !444, size: 8, align: 8, offset: 5184)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "srtp_profiles", scope: !397, file: !398, line: 1294, baseType: !1559, size: 64, align: 64, offset: 5248)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "srtp_profile", scope: !397, file: !398, line: 1295, baseType: !2081, size: 64, align: 64, offset: 5312)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64, align: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRTP_PROTECTION_PROFILE", file: !398, line: 377, baseType: !2083)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "srtp_protection_profile_st", file: !398, line: 373, size: 128, align: 64, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2083, file: !398, line: 375, baseType: !73, size: 64, align: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2083, file: !398, line: 376, baseType: !140, size: 64, align: 64, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_heartbeat", scope: !397, file: !398, line: 1297, baseType: !385, size: 32, align: 32, offset: 5376)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_hb_pending", scope: !397, file: !398, line: 1302, baseType: !385, size: 32, align: 32, offset: 5408)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "tlsext_hb_seq", scope: !397, file: !398, line: 1303, baseType: !385, size: 32, align: 32, offset: 5440)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "renegotiate", scope: !397, file: !398, line: 1308, baseType: !88, size: 32, align: 32, offset: 5472)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !389, file: !4, line: 222, baseType: !2092, size: 64, align: 64, offset: 256)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64, align: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySSLContext", file: !4, line: 216, baseType: !2094)
!2094 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 205, size: 448, align: 64, elements: !2095)
!2095 = !{!2096, !2097, !2098, !2099, !2100, !2101}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2094, file: !4, line: 206, baseType: !50, size: 128, align: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2094, file: !4, line: 207, baseType: !458, size: 64, align: 64, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "npn_protocols", scope: !2094, file: !4, line: 209, baseType: !96, size: 64, align: 64, offset: 192)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "npn_protocols_len", scope: !2094, file: !4, line: 210, baseType: !88, size: 32, align: 32, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "set_hostname", scope: !2094, file: !4, line: 213, baseType: !49, size: 64, align: 64, offset: 320)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "check_hostname", scope: !2094, file: !4, line: 215, baseType: !88, size: 32, align: 32, offset: 384)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "peer_cert", scope: !389, file: !4, line: 223, baseType: !532, size: 64, align: 64, offset: 320)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_seen_zero", scope: !389, file: !4, line: 224, baseType: !75, size: 8, align: 8, offset: 384)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "handshake_done", scope: !389, file: !4, line: 225, baseType: !75, size: 8, align: 8, offset: 392)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "socket_type", scope: !389, file: !4, line: 226, baseType: !30, size: 32, align: 32, offset: 416)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, align: 64)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !2108, line: 41, baseType: !2109)
!2108 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2109 = !DICompositeType(tag: DW_TAG_structure_type, file: !2108, line: 31, size: 320, align: 64, elements: !2110)
!2110 = !{!2111, !2112, !2113}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2109, file: !2108, line: 32, baseType: !67, size: 192, align: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !2109, file: !2108, line: 33, baseType: !262, size: 64, align: 64, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !2109, file: !2108, line: 34, baseType: !125, size: 8, align: 8, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64, align: 64)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64, align: 64)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyByteArrayObject", file: !2117, line: 30, baseType: !2118)
!2117 = !DIFile(filename: "./Include/bytearrayobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2118 = !DICompositeType(tag: DW_TAG_structure_type, file: !2117, line: 23, size: 448, align: 64, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2118, file: !2117, line: 24, baseType: !67, size: 192, align: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ob_alloc", scope: !2118, file: !2117, line: 25, baseType: !55, size: 64, align: 64, offset: 192)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ob_bytes", scope: !2118, file: !2117, line: 26, baseType: !96, size: 64, align: 64, offset: 256)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "ob_start", scope: !2118, file: !2117, line: 27, baseType: !96, size: 64, align: 64, offset: 320)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ob_exports", scope: !2118, file: !2117, line: 29, baseType: !88, size: 32, align: 32, offset: 384)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64, align: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PySSLPasswordInfo", file: !4, line: 2362, baseType: !2127)
!2127 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 2356, size: 256, align: 64, elements: !2128)
!2128 = !{!2129, !2187, !2188, !2189, !2190}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2127, file: !4, line: 2357, baseType: !2130, size: 64, align: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64, align: 64)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !35, line: 139, baseType: !2132)
!2132 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !35, line: 69, size: 1536, align: 64, elements: !2133)
!2133 = !{!2134, !2136, !2137, !2157, !2160, !2161, !2162, !2163, !2164, !2165, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2132, file: !35, line: 72, baseType: !2135, size: 64, align: 64)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64, align: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2132, file: !35, line: 73, baseType: !2135, size: 64, align: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !2132, file: !35, line: 74, baseType: !2138, size: 64, align: 64, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64, align: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !35, line: 44, baseType: !2140)
!2140 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !35, line: 19, size: 832, align: 64, elements: !2141)
!2141 = !{!2142, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2140, file: !35, line: 21, baseType: !2143, size: 64, align: 64)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64, align: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "tstate_head", scope: !2140, file: !35, line: 22, baseType: !2135, size: 64, align: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !2140, file: !35, line: 24, baseType: !49, size: 64, align: 64, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "modules_by_index", scope: !2140, file: !35, line: 25, baseType: !49, size: 64, align: 64, offset: 192)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sysdict", scope: !2140, file: !35, line: 26, baseType: !49, size: 64, align: 64, offset: 256)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "builtins", scope: !2140, file: !35, line: 27, baseType: !49, size: 64, align: 64, offset: 320)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "importlib", scope: !2140, file: !35, line: 28, baseType: !49, size: 64, align: 64, offset: 384)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_path", scope: !2140, file: !35, line: 30, baseType: !49, size: 64, align: 64, offset: 448)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_cache", scope: !2140, file: !35, line: 31, baseType: !49, size: 64, align: 64, offset: 512)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "codec_error_registry", scope: !2140, file: !35, line: 32, baseType: !49, size: 64, align: 64, offset: 576)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "codecs_initialized", scope: !2140, file: !35, line: 33, baseType: !88, size: 32, align: 32, offset: 640)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "fscodec_initialized", scope: !2140, file: !35, line: 34, baseType: !88, size: 32, align: 32, offset: 672)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "dlopenflags", scope: !2140, file: !35, line: 37, baseType: !88, size: 32, align: 32, offset: 704)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "builtins_copy", scope: !2140, file: !35, line: 43, baseType: !49, size: 64, align: 64, offset: 768)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2132, file: !35, line: 76, baseType: !2158, size: 64, align: 64, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64, align: 64)
!2159 = !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !35, line: 50, flags: DIFlagFwdDecl)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_depth", scope: !2132, file: !35, line: 77, baseType: !88, size: 32, align: 32, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "overflowed", scope: !2132, file: !35, line: 78, baseType: !75, size: 8, align: 8, offset: 288)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_critical", scope: !2132, file: !35, line: 80, baseType: !75, size: 8, align: 8, offset: 296)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !2132, file: !35, line: 85, baseType: !88, size: 32, align: 32, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !2132, file: !35, line: 86, baseType: !88, size: 32, align: 32, offset: 352)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !2132, file: !35, line: 88, baseType: !2166, size: 64, align: 64, offset: 384)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !35, line: 54, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64, align: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!88, !49, !2158, !88, !49}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !2132, file: !35, line: 89, baseType: !2166, size: 64, align: 64, offset: 448)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !2132, file: !35, line: 90, baseType: !49, size: 64, align: 64, offset: 512)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !2132, file: !35, line: 91, baseType: !49, size: 64, align: 64, offset: 576)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !2132, file: !35, line: 93, baseType: !49, size: 64, align: 64, offset: 640)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !2132, file: !35, line: 94, baseType: !49, size: 64, align: 64, offset: 704)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !2132, file: !35, line: 95, baseType: !49, size: 64, align: 64, offset: 768)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "exc_type", scope: !2132, file: !35, line: 97, baseType: !49, size: 64, align: 64, offset: 832)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !2132, file: !35, line: 98, baseType: !49, size: 64, align: 64, offset: 896)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "exc_traceback", scope: !2132, file: !35, line: 99, baseType: !49, size: 64, align: 64, offset: 960)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !2132, file: !35, line: 101, baseType: !49, size: 64, align: 64, offset: 1024)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !2132, file: !35, line: 103, baseType: !88, size: 32, align: 32, offset: 1088)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !2132, file: !35, line: 105, baseType: !49, size: 64, align: 64, offset: 1152)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !2132, file: !35, line: 106, baseType: !61, size: 64, align: 64, offset: 1216)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !2132, file: !35, line: 108, baseType: !88, size: 32, align: 32, offset: 1280)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !2132, file: !35, line: 109, baseType: !49, size: 64, align: 64, offset: 1344)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !2132, file: !35, line: 134, baseType: !374, size: 64, align: 64, offset: 1408)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !2132, file: !35, line: 135, baseType: !48, size: 64, align: 64, offset: 1472)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "callable", scope: !2127, file: !4, line: 2358, baseType: !49, size: 64, align: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "password", scope: !2127, file: !4, line: 2359, baseType: !96, size: 64, align: 64, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2127, file: !4, line: 2360, baseType: !88, size: 32, align: 32, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2127, file: !4, line: 2361, baseType: !88, size: 32, align: 32, offset: 224)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64, align: 64)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64, align: 64)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_OBJECT", file: !485, line: 133, baseType: !2194)
!2194 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_object_st", file: !485, line: 123, size: 128, align: 64, elements: !2195)
!2195 = !{!2196, !2197}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2194, file: !485, line: 126, baseType: !88, size: 32, align: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2194, file: !485, line: 132, baseType: !2198, size: 64, align: 64, offset: 64)
!2198 = !DICompositeType(tag: DW_TAG_union_type, scope: !2194, file: !485, line: 127, size: 64, align: 64, elements: !2199)
!2199 = !{!2200, !2201, !2202, !2203}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2198, file: !485, line: 128, baseType: !96, size: 64, align: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "x509", scope: !2198, file: !485, line: 129, baseType: !532, size: 64, align: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "crl", scope: !2198, file: !485, line: 130, baseType: !1092, size: 64, align: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "pkey", scope: !2198, file: !485, line: 131, baseType: !672, size: 64, align: 64)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64, align: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !2206, line: 33, baseType: !2207)
!2206 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2207 = !DICompositeType(tag: DW_TAG_structure_type, file: !2206, line: 25, size: 256, align: 64, elements: !2208)
!2208 = !{!2209, !2210}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2207, file: !2206, line: 26, baseType: !67, size: 192, align: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !2207, file: !2206, line: 27, baseType: !2211, size: 64, align: 64, offset: 192)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 64, align: 64, elements: !126)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64, align: 64)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "GENERAL_NAME", file: !984, line: 205, baseType: !2214)
!2214 = !DICompositeType(tag: DW_TAG_structure_type, name: "GENERAL_NAME_st", file: !984, line: 173, size: 128, align: 64, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2214, file: !984, line: 185, baseType: !88, size: 32, align: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2214, file: !984, line: 204, baseType: !2218, size: 64, align: 64, offset: 64)
!2218 = !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !984, line: 186, size: 64, align: 64, elements: !2219)
!2219 = !{!2220, !2221, !2228, !2229, !2230, !2231, !2232, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2218, file: !984, line: 187, baseType: !96, size: 64, align: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "otherName", scope: !2218, file: !984, line: 188, baseType: !2222, size: 64, align: 64)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64, align: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "OTHERNAME", file: !984, line: 166, baseType: !2224)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "otherName_st", file: !984, line: 163, size: 128, align: 64, elements: !2225)
!2225 = !{!2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !2224, file: !984, line: 164, baseType: !558, size: 64, align: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2224, file: !984, line: 165, baseType: !571, size: 64, align: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "rfc822Name", scope: !2218, file: !984, line: 189, baseType: !603, size: 64, align: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "dNSName", scope: !2218, file: !984, line: 190, baseType: !603, size: 64, align: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "x400Address", scope: !2218, file: !984, line: 191, baseType: !571, size: 64, align: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "directoryName", scope: !2218, file: !984, line: 192, baseType: !633, size: 64, align: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ediPartyName", scope: !2218, file: !984, line: 193, baseType: !2233, size: 64, align: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64, align: 64)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "EDIPARTYNAME", file: !984, line: 171, baseType: !2235)
!2235 = !DICompositeType(tag: DW_TAG_structure_type, name: "EDIPartyName_st", file: !984, line: 168, size: 128, align: 64, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "nameAssigner", scope: !2235, file: !984, line: 169, baseType: !583, size: 64, align: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "partyName", scope: !2235, file: !984, line: 170, baseType: !583, size: 64, align: 64, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "uniformResourceIdentifier", scope: !2218, file: !984, line: 194, baseType: !603, size: 64, align: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "iPAddress", scope: !2218, file: !984, line: 195, baseType: !594, size: 64, align: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "registeredID", scope: !2218, file: !984, line: 196, baseType: !558, size: 64, align: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2218, file: !984, line: 199, baseType: !594, size: 64, align: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dirn", scope: !2218, file: !984, line: 200, baseType: !633, size: 64, align: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ia5", scope: !2218, file: !984, line: 201, baseType: !603, size: 64, align: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "rid", scope: !2218, file: !984, line: 202, baseType: !558, size: 64, align: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2218, file: !984, line: 203, baseType: !571, size: 64, align: 64)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64, align: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "ACCESS_DESCRIPTION", file: !984, line: 212, baseType: !2249)
!2249 = !DICompositeType(tag: DW_TAG_structure_type, name: "ACCESS_DESCRIPTION_st", file: !984, line: 209, size: 128, align: 64, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !2249, file: !984, line: 210, baseType: !558, size: 64, align: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !2249, file: !984, line: 211, baseType: !2212, size: 64, align: 64, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64, align: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIST_POINT", file: !396, line: 181, baseType: !2255)
!2255 = !DICompositeType(tag: DW_TAG_structure_type, name: "DIST_POINT_st", file: !984, line: 248, size: 256, align: 64, elements: !2256)
!2256 = !{!2257, !2258, !2259, !2260}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "distpoint", scope: !2255, file: !984, line: 249, baseType: !1124, size: 64, align: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "reasons", scope: !2255, file: !984, line: 250, baseType: !591, size: 64, align: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "CRLissuer", scope: !2255, file: !984, line: 251, baseType: !988, size: 64, align: 64, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dp_reasons", scope: !2255, file: !984, line: 252, baseType: !88, size: 32, align: 32, offset: 192)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64, align: 64)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySocketSockObject", file: !2263, line: 172, baseType: !2264)
!2263 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/socketmodule.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2264 = !DICompositeType(tag: DW_TAG_structure_type, file: !2263, line: 161, size: 384, align: 64, elements: !2265)
!2265 = !{!2266, !2267, !2269, !2270, !2271, !2272, !2276}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2264, file: !2263, line: 162, baseType: !50, size: 128, align: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "sock_fd", scope: !2264, file: !2263, line: 163, baseType: !2268, size: 32, align: 32, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "SOCKET_T", file: !2263, line: 114, baseType: !88)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "sock_family", scope: !2264, file: !2263, line: 164, baseType: !88, size: 32, align: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "sock_type", scope: !2264, file: !2263, line: 165, baseType: !88, size: 32, align: 32, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "sock_proto", scope: !2264, file: !2263, line: 166, baseType: !88, size: 32, align: 32, offset: 224)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "errorhandler", scope: !2264, file: !2263, line: 167, baseType: !2273, size: 64, align: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64, align: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!49}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sock_timeout", scope: !2264, file: !2263, line: 170, baseType: !2277, size: 64, align: 64, offset: 320)
!2277 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64, align: 64)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThread_type_lock", file: !2280, line: 5, baseType: !48)
!2280 = !DIFile(filename: "./Include/pythread.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2281 = !{!2282, !2330, !2335, !2346, !2357, !2371, !2390, !2398, !2403, !2410, !2421, !2458, !2478, !2499, !2507, !2537, !2545, !2582, !2598, !2631, !2635, !2644, !2655, !2688, !2700, !2733, !2741, !2828, !2888, !2915, !3099, !3135, !3172, !3178, !3186, !3190, !3199, !3205, !3215, !3219, !3226, !3240, !3255, !3274, !3302, !3327, !3350, !3379, !3385, !3391, !3401, !3406, !3413, !3431, !3438, !3444, !3455, !3465, !3472, !3477, !3494, !3499, !3507, !3510, !3545, !3558, !3571, !3578, !3589, !3597, !3608, !3630}
!2282 = !DISubprogram(name: "PyInit__ssl", scope: !4, file: !4, line: 3899, type: !2274, isLocal: false, isDefinition: true, scopeLine: 3900, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__ssl, variables: !2283)
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2303, !2310, !2316, !2318, !2319, !2321, !2323, !2325, !2326, !2328}
!2284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !2282, file: !4, line: 3901, type: !49)
!2285 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !2282, file: !4, line: 3901, type: !49)
!2286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2282, file: !4, line: 3901, type: !49)
!2287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "libver", scope: !2282, file: !4, line: 3902, type: !140)
!2288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "major", scope: !2282, file: !4, line: 3903, type: !385)
!2289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minor", scope: !2282, file: !4, line: 3903, type: !385)
!2290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fix", scope: !2282, file: !4, line: 3903, type: !385)
!2291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "patch", scope: !2282, file: !4, line: 3903, type: !385)
!2292 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2282, file: !4, line: 3903, type: !385)
!2293 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "socket_api", scope: !2282, file: !4, line: 3904, type: !2294)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64, align: 64)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySocketModule_APIObject", file: !2263, line: 229, baseType: !2296)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, file: !2263, line: 225, size: 192, align: 64, elements: !2297)
!2297 = !{!2298, !2301, !2302}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "Sock_Type", scope: !2296, file: !2263, line: 226, baseType: !2299, size: 64, align: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64, align: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !51, line: 422, baseType: !64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2296, file: !2263, line: 227, baseType: !49, size: 64, align: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_error", scope: !2296, file: !2263, line: 228, baseType: !49, size: 64, align: 64, offset: 128)
!2303 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errcode", scope: !2282, file: !4, line: 3905, type: !2304)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64, align: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "py_ssl_error_code", file: !4, line: 79, size: 128, align: 64, elements: !2306)
!2306 = !{!2307, !2308, !2309}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "mnemonic", scope: !2305, file: !4, line: 80, baseType: !73, size: 64, align: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2305, file: !4, line: 81, baseType: !88, size: 32, align: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !2305, file: !4, line: 81, baseType: !88, size: 32, align: 32, offset: 96)
!2310 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "libcode", scope: !2282, file: !4, line: 3906, type: !2311)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64, align: 64)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "py_ssl_library_code", file: !4, line: 83, size: 128, align: 64, elements: !2313)
!2313 = !{!2314, !2315}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2312, file: !4, line: 84, baseType: !73, size: 64, align: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2312, file: !4, line: 85, baseType: !88, size: 32, align: 32, offset: 64)
!2316 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mnemo", scope: !2317, file: !4, line: 4140, type: !49)
!2317 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4139, column: 45)
!2318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2317, file: !4, line: 4140, type: !49)
!2319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2320, file: !4, line: 4149, type: !49)
!2320 = distinct !DILexicalBlock(scope: !2317, file: !4, line: 4149, column: 12)
!2321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2322, file: !4, line: 4150, type: !49)
!2322 = distinct !DILexicalBlock(scope: !2317, file: !4, line: 4150, column: 12)
!2323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mnemo", scope: !2324, file: !4, line: 4163, type: !49)
!2324 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4162, column: 44)
!2325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2324, file: !4, line: 4163, type: !49)
!2326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2327, file: !4, line: 4170, type: !49)
!2327 = distinct !DILexicalBlock(scope: !2324, file: !4, line: 4170, column: 12)
!2328 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2329, file: !4, line: 4171, type: !49)
!2329 = distinct !DILexicalBlock(scope: !2324, file: !4, line: 4171, column: 12)
!2330 = !DISubprogram(name: "context_dealloc", scope: !4, file: !4, line: 2104, type: !2331, isLocal: true, isDefinition: true, scopeLine: 2105, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PySSLContext*)* @context_dealloc, variables: !2333)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{null, !2092}
!2333 = !{!2334}
!2334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2330, file: !4, line: 2104, type: !2092)
!2335 = !DISubprogram(name: "context_traverse", scope: !4, file: !4, line: 2086, type: !2336, isLocal: true, isDefinition: true, scopeLine: 2087, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*, i32 (%struct._object*, i8*)*, i8*)* @context_traverse, variables: !2338)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!88, !2092, !307, !48}
!2338 = !{!2339, !2340, !2341, !2342}
!2339 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2335, file: !4, line: 2086, type: !2092)
!2340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2335, file: !4, line: 2086, type: !307)
!2341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2335, file: !4, line: 2086, type: !48)
!2342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2343, file: !4, line: 2089, type: !88)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !4, line: 2089, column: 34)
!2344 = distinct !DILexicalBlock(scope: !2345, file: !4, line: 2089, column: 14)
!2345 = distinct !DILexicalBlock(scope: !2335, file: !4, line: 2089, column: 8)
!2346 = !DISubprogram(name: "context_clear", scope: !4, file: !4, line: 2095, type: !2347, isLocal: true, isDefinition: true, scopeLine: 2096, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*)* @context_clear, variables: !2349)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!88, !2092}
!2349 = !{!2350, !2351, !2353}
!2350 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2346, file: !4, line: 2095, type: !2092)
!2351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2352, file: !4, line: 2098, type: !49)
!2352 = distinct !DILexicalBlock(scope: !2346, file: !4, line: 2098, column: 8)
!2353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2354, file: !4, line: 2098, type: !49)
!2354 = distinct !DILexicalBlock(scope: !2355, file: !4, line: 2098, column: 131)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !4, line: 2098, column: 91)
!2356 = distinct !DILexicalBlock(scope: !2352, file: !4, line: 2098, column: 68)
!2357 = !DISubprogram(name: "context_wrap_socket", scope: !4, file: !4, line: 2787, type: !2358, isLocal: true, isDefinition: true, scopeLine: 2788, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @context_wrap_socket, variables: !2360)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!49, !2092, !49, !49}
!2360 = !{!2361, !2362, !2363, !2364, !2366, !2367, !2368, !2369, !2370}
!2361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2357, file: !4, line: 2787, type: !2092)
!2362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2357, file: !4, line: 2787, type: !49)
!2363 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2357, file: !4, line: 2787, type: !49)
!2364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !2357, file: !4, line: 2789, type: !2365)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 256, align: 64, elements: !1786)
!2366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sock", scope: !2357, file: !4, line: 2790, type: !2261)
!2367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "server_side", scope: !2357, file: !4, line: 2791, type: !88)
!2368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hostname", scope: !2357, file: !4, line: 2792, type: !96)
!2369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hostname_obj", scope: !2357, file: !4, line: 2793, type: !49)
!2370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2357, file: !4, line: 2793, type: !49)
!2371 = !DISubprogram(name: "newPySSLSocket", scope: !4, file: !4, line: 478, type: !2372, isLocal: true, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: true, function: %struct.PySSLSocket* (%struct.PySSLContext*, %struct.PySocketSockObject*, i32, i8*)* @newPySSLSocket, variables: !2374)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!387, !2092, !2261, !30, !96}
!2374 = !{!2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2384, !2386}
!2375 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sslctx", arg: 1, scope: !2371, file: !4, line: 478, type: !2092)
!2376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sock", arg: 2, scope: !2371, file: !4, line: 478, type: !2261)
!2377 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "socket_type", arg: 3, scope: !2371, file: !4, line: 479, type: !30)
!2378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "server_hostname", arg: 4, scope: !2371, file: !4, line: 480, type: !96)
!2379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2371, file: !4, line: 482, type: !387)
!2380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2371, file: !4, line: 483, type: !458)
!2381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !2371, file: !4, line: 484, type: !61)
!2382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2383, file: !4, line: 502, type: !2130)
!2383 = distinct !DILexicalBlock(scope: !2371, file: !4, line: 502, column: 5)
!2384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2385, file: !4, line: 526, type: !2130)
!2385 = distinct !DILexicalBlock(scope: !2371, file: !4, line: 526, column: 5)
!2386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2387, file: !4, line: 536, type: !49)
!2387 = distinct !DILexicalBlock(scope: !2388, file: !4, line: 536, column: 12)
!2388 = distinct !DILexicalBlock(scope: !2389, file: !4, line: 535, column: 37)
!2389 = distinct !DILexicalBlock(scope: !2371, file: !4, line: 535, column: 9)
!2390 = !DISubprogram(name: "set_ciphers", scope: !4, file: !4, line: 2115, type: !2391, isLocal: true, isDefinition: true, scopeLine: 2116, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @set_ciphers, variables: !2393)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!49, !2092, !49}
!2393 = !{!2394, !2395, !2396, !2397}
!2394 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2390, file: !4, line: 2115, type: !2092)
!2395 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2390, file: !4, line: 2115, type: !49)
!2396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !2390, file: !4, line: 2117, type: !88)
!2397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cipherlist", scope: !2390, file: !4, line: 2118, type: !73)
!2398 = !DISubprogram(name: "_set_npn_protocols", scope: !4, file: !4, line: 2182, type: !2391, isLocal: true, isDefinition: true, scopeLine: 2183, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @_set_npn_protocols, variables: !2399)
!2399 = !{!2400, !2401, !2402}
!2400 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2398, file: !4, line: 2182, type: !2092)
!2401 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2398, file: !4, line: 2182, type: !49)
!2402 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "protos", scope: !2398, file: !4, line: 2185, type: !280)
!2403 = !DISubprogram(name: "_advertiseNPN_cb", scope: !4, file: !4, line: 2138, type: !1548, isLocal: true, isDefinition: true, scopeLine: 2141, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ssl_st*, i8**, i32*, i8*)* @_advertiseNPN_cb, variables: !2404)
!2404 = !{!2405, !2406, !2407, !2408, !2409}
!2405 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !2403, file: !4, line: 2138, type: !394)
!2406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !2403, file: !4, line: 2139, type: !1550)
!2407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !2403, file: !4, line: 2139, type: !764)
!2408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 4, scope: !2403, file: !4, line: 2140, type: !48)
!2409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssl_ctx", scope: !2403, file: !4, line: 2142, type: !2092)
!2410 = !DISubprogram(name: "_selectNPN_cb", scope: !4, file: !4, line: 2156, type: !1554, isLocal: true, isDefinition: true, scopeLine: 2160, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* @_selectNPN_cb, variables: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420}
!2412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !2410, file: !4, line: 2156, type: !394)
!2413 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "out", arg: 2, scope: !2410, file: !4, line: 2157, type: !1556)
!2414 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "outlen", arg: 3, scope: !2410, file: !4, line: 2157, type: !443)
!2415 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "server", arg: 4, scope: !2410, file: !4, line: 2158, type: !567)
!2416 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "server_len", arg: 5, scope: !2410, file: !4, line: 2158, type: !385)
!2417 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 6, scope: !2410, file: !4, line: 2159, type: !48)
!2418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssl_ctx", scope: !2410, file: !4, line: 2161, type: !2092)
!2419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "client", scope: !2410, file: !4, line: 2163, type: !443)
!2420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "client_len", scope: !2410, file: !4, line: 2164, type: !88)
!2421 = !DISubprogram(name: "load_cert_chain", scope: !4, file: !4, line: 2459, type: !2358, isLocal: true, isDefinition: true, scopeLine: 2460, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @load_cert_chain, variables: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2438, !2442, !2444, !2448, !2450, !2453, !2455}
!2423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2421, file: !4, line: 2459, type: !2092)
!2424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2421, file: !4, line: 2459, type: !49)
!2425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2421, file: !4, line: 2459, type: !49)
!2426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !2421, file: !4, line: 2461, type: !2365)
!2427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "certfile", scope: !2421, file: !4, line: 2462, type: !49)
!2428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keyfile", scope: !2421, file: !4, line: 2462, type: !49)
!2429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "password", scope: !2421, file: !4, line: 2462, type: !49)
!2430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "certfile_bytes", scope: !2421, file: !4, line: 2463, type: !49)
!2431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keyfile_bytes", scope: !2421, file: !4, line: 2463, type: !49)
!2432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "orig_passwd_cb", scope: !2421, file: !4, line: 2464, type: !1317)
!2433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "orig_passwd_userdata", scope: !2421, file: !4, line: 2465, type: !48)
!2434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pw_info", scope: !2421, file: !4, line: 2466, type: !2126)
!2435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2421, file: !4, line: 2467, type: !88)
!2436 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2437, file: !4, line: 2520, type: !49)
!2437 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2520, column: 8)
!2438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2439, file: !4, line: 2520, type: !49)
!2439 = distinct !DILexicalBlock(scope: !2440, file: !4, line: 2520, column: 121)
!2440 = distinct !DILexicalBlock(scope: !2441, file: !4, line: 2520, column: 86)
!2441 = distinct !DILexicalBlock(scope: !2437, file: !4, line: 2520, column: 63)
!2442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2443, file: !4, line: 2521, type: !49)
!2443 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2521, column: 8)
!2444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2445, file: !4, line: 2521, type: !49)
!2445 = distinct !DILexicalBlock(scope: !2446, file: !4, line: 2521, column: 123)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !4, line: 2521, column: 87)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !4, line: 2521, column: 64)
!2448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2449, file: !4, line: 2552, type: !49)
!2449 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2552, column: 8)
!2450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2451, file: !4, line: 2552, type: !49)
!2451 = distinct !DILexicalBlock(scope: !2452, file: !4, line: 2552, column: 105)
!2452 = distinct !DILexicalBlock(scope: !2449, file: !4, line: 2552, column: 71)
!2453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2454, file: !4, line: 2553, type: !49)
!2454 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2553, column: 8)
!2455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2456, file: !4, line: 2553, type: !49)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !4, line: 2553, column: 106)
!2457 = distinct !DILexicalBlock(scope: !2454, file: !4, line: 2553, column: 72)
!2458 = !DISubprogram(name: "_pwinfo_set", scope: !4, file: !4, line: 2365, type: !2459, isLocal: true, isDefinition: true, scopeLine: 2367, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._PySSLPasswordInfo*, %struct._object*, i8*)* @_pwinfo_set, variables: !2461)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!88, !2125, !49, !73}
!2461 = !{!2462, !2463, !2464, !2465, !2466, !2467, !2468, !2470, !2473, !2475}
!2462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pw_info", arg: 1, scope: !2458, file: !4, line: 2365, type: !2125)
!2463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "password", arg: 2, scope: !2458, file: !4, line: 2365, type: !49)
!2464 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bad_type_error", arg: 3, scope: !2458, file: !4, line: 2366, type: !73)
!2465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "password_bytes", scope: !2458, file: !4, line: 2372, type: !49)
!2466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !2458, file: !4, line: 2373, type: !73)
!2467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2458, file: !4, line: 2374, type: !55)
!2468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2469, file: !4, line: 2410, type: !49)
!2469 = distinct !DILexicalBlock(scope: !2458, file: !4, line: 2410, column: 8)
!2470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2471, file: !4, line: 2410, type: !49)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !4, line: 2410, column: 106)
!2472 = distinct !DILexicalBlock(scope: !2469, file: !4, line: 2410, column: 72)
!2473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2474, file: !4, line: 2414, type: !49)
!2474 = distinct !DILexicalBlock(scope: !2458, file: !4, line: 2414, column: 8)
!2475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2476, file: !4, line: 2414, type: !49)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !4, line: 2414, column: 106)
!2477 = distinct !DILexicalBlock(scope: !2474, file: !4, line: 2414, column: 72)
!2478 = !DISubprogram(name: "_password_callback", scope: !4, file: !4, line: 2419, type: !1320, isLocal: true, isDefinition: true, scopeLine: 2420, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32, i32, i8*)* @_password_callback, variables: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485, !2486, !2490, !2494, !2496}
!2480 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !2478, file: !4, line: 2419, type: !96)
!2481 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !2478, file: !4, line: 2419, type: !88)
!2482 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rwflag", arg: 3, scope: !2478, file: !4, line: 2419, type: !88)
!2483 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "userdata", arg: 4, scope: !2478, file: !4, line: 2419, type: !48)
!2484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pw_info", scope: !2478, file: !4, line: 2421, type: !2125)
!2485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fn_ret", scope: !2478, file: !4, line: 2422, type: !49)
!2486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2487, file: !4, line: 2438, type: !49)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !4, line: 2438, column: 12)
!2488 = distinct !DILexicalBlock(scope: !2489, file: !4, line: 2426, column: 28)
!2489 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 2426, column: 9)
!2490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2491, file: !4, line: 2438, type: !49)
!2491 = distinct !DILexicalBlock(scope: !2492, file: !4, line: 2438, column: 111)
!2492 = distinct !DILexicalBlock(scope: !2493, file: !4, line: 2438, column: 83)
!2493 = distinct !DILexicalBlock(scope: !2487, file: !4, line: 2438, column: 60)
!2494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2495, file: !4, line: 2452, type: !49)
!2495 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 2452, column: 8)
!2496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2497, file: !4, line: 2452, type: !49)
!2497 = distinct !DILexicalBlock(scope: !2498, file: !4, line: 2452, column: 98)
!2498 = distinct !DILexicalBlock(scope: !2495, file: !4, line: 2452, column: 64)
!2499 = !DISubprogram(name: "_setSSLError", scope: !4, file: !4, line: 462, type: !2500, isLocal: true, isDefinition: true, scopeLine: 462, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i32, i8*, i32)* @_setSSLError, variables: !2502)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!49, !96, !88, !96, !88}
!2502 = !{!2503, !2504, !2505, !2506}
!2503 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errstr", arg: 1, scope: !2499, file: !4, line: 462, type: !96)
!2504 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errcode", arg: 2, scope: !2499, file: !4, line: 462, type: !88)
!2505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 3, scope: !2499, file: !4, line: 462, type: !96)
!2506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lineno", arg: 4, scope: !2499, file: !4, line: 462, type: !88)
!2507 = !DISubprogram(name: "fill_and_set_sslerror", scope: !4, file: !4, line: 309, type: !2508, isLocal: true, isDefinition: true, scopeLine: 311, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*, i32, i8*, i32, i64)* @fill_and_set_sslerror, variables: !2510)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !49, !88, !73, !88, !140}
!2510 = !{!2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2525, !2526, !2528, !2530, !2532, !2534}
!2511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2507, file: !4, line: 309, type: !49)
!2512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ssl_errno", arg: 2, scope: !2507, file: !4, line: 309, type: !88)
!2513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errstr", arg: 3, scope: !2507, file: !4, line: 309, type: !73)
!2514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lineno", arg: 4, scope: !2507, file: !4, line: 310, type: !88)
!2515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errcode", arg: 5, scope: !2507, file: !4, line: 310, type: !140)
!2516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err_value", scope: !2507, file: !4, line: 312, type: !49)
!2517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_obj", scope: !2507, file: !4, line: 312, type: !49)
!2518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lib_obj", scope: !2507, file: !4, line: 312, type: !49)
!2519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "init_value", scope: !2507, file: !4, line: 313, type: !49)
!2520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg", scope: !2507, file: !4, line: 313, type: !49)
!2521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2507, file: !4, line: 313, type: !49)
!2522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lib", scope: !2523, file: !4, line: 318, type: !88)
!2523 = distinct !DILexicalBlock(scope: !2524, file: !4, line: 317, column: 23)
!2524 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 317, column: 9)
!2525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason", scope: !2523, file: !4, line: 318, type: !88)
!2526 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2527, file: !4, line: 326, type: !49)
!2527 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 326, column: 12)
!2528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2529, file: !4, line: 335, type: !49)
!2529 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 335, column: 12)
!2530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2531, file: !4, line: 361, type: !49)
!2531 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 361, column: 8)
!2532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2533, file: !4, line: 375, type: !49)
!2533 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 375, column: 8)
!2534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2535, file: !4, line: 375, type: !49)
!2535 = distinct !DILexicalBlock(scope: !2536, file: !4, line: 375, column: 101)
!2536 = distinct !DILexicalBlock(scope: !2533, file: !4, line: 375, column: 67)
!2537 = !DISubprogram(name: "load_dh_params", scope: !4, file: !4, line: 2754, type: !2391, isLocal: true, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @load_dh_params, variables: !2538)
!2538 = !{!2539, !2540, !2541, !2542, !2543}
!2539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2537, file: !4, line: 2754, type: !2092)
!2540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filepath", arg: 2, scope: !2537, file: !4, line: 2754, type: !49)
!2541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "f", scope: !2537, file: !4, line: 2756, type: !89)
!2542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dh", scope: !2537, file: !4, line: 2757, type: !923)
!2543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2544, file: !4, line: 2766, type: !2130)
!2544 = distinct !DILexicalBlock(scope: !2537, file: !4, line: 2766, column: 5)
!2545 = !DISubprogram(name: "load_verify_locations", scope: !4, file: !4, line: 2643, type: !2358, isLocal: true, isDefinition: true, scopeLine: 2644, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @load_verify_locations, variables: !2546)
!2546 = !{!2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2563, !2564, !2568, !2572, !2574, !2577, !2579}
!2547 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2545, file: !4, line: 2643, type: !2092)
!2548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2545, file: !4, line: 2643, type: !49)
!2549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2545, file: !4, line: 2643, type: !49)
!2550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !2545, file: !4, line: 2645, type: !2365)
!2551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cafile", scope: !2545, file: !4, line: 2646, type: !49)
!2552 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "capath", scope: !2545, file: !4, line: 2646, type: !49)
!2553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cadata", scope: !2545, file: !4, line: 2646, type: !49)
!2554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cafile_bytes", scope: !2545, file: !4, line: 2647, type: !49)
!2555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "capath_bytes", scope: !2545, file: !4, line: 2647, type: !49)
!2556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cafile_buf", scope: !2545, file: !4, line: 2648, type: !73)
!2557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "capath_buf", scope: !2545, file: !4, line: 2648, type: !73)
!2558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2545, file: !4, line: 2649, type: !88)
!2559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !2545, file: !4, line: 2649, type: !88)
!2560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2561, file: !4, line: 2682, type: !280)
!2561 = distinct !DILexicalBlock(scope: !2562, file: !4, line: 2681, column: 17)
!2562 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2681, column: 9)
!2563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cadata_ascii", scope: !2561, file: !4, line: 2683, type: !49)
!2564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2565, file: !4, line: 2711, type: !49)
!2565 = distinct !DILexicalBlock(scope: !2566, file: !4, line: 2711, column: 16)
!2566 = distinct !DILexicalBlock(scope: !2567, file: !4, line: 2698, column: 16)
!2567 = distinct !DILexicalBlock(scope: !2561, file: !4, line: 2685, column: 13)
!2568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2569, file: !4, line: 2724, type: !2130)
!2569 = distinct !DILexicalBlock(scope: !2570, file: !4, line: 2724, column: 9)
!2570 = distinct !DILexicalBlock(scope: !2571, file: !4, line: 2719, column: 27)
!2571 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2719, column: 9)
!2572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2573, file: !4, line: 2744, type: !49)
!2573 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2744, column: 8)
!2574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2575, file: !4, line: 2744, type: !49)
!2575 = distinct !DILexicalBlock(scope: !2576, file: !4, line: 2744, column: 104)
!2576 = distinct !DILexicalBlock(scope: !2573, file: !4, line: 2744, column: 70)
!2577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2578, file: !4, line: 2745, type: !49)
!2578 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2745, column: 8)
!2579 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2580, file: !4, line: 2745, type: !49)
!2580 = distinct !DILexicalBlock(scope: !2581, file: !4, line: 2745, column: 104)
!2581 = distinct !DILexicalBlock(scope: !2578, file: !4, line: 2745, column: 70)
!2582 = !DISubprogram(name: "_add_ca_certs", scope: !4, file: !4, line: 2560, type: !2583, isLocal: true, isDefinition: true, scopeLine: 2562, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*, i8*, i64, i32)* @_add_ca_certs, variables: !2585)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!88, !2092, !48, !55, !88}
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2597}
!2586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2582, file: !4, line: 2560, type: !2092)
!2587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !2582, file: !4, line: 2560, type: !48)
!2588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !2582, file: !4, line: 2560, type: !55)
!2589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filetype", arg: 4, scope: !2582, file: !4, line: 2561, type: !88)
!2590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "biobuf", scope: !2582, file: !4, line: 2563, type: !1609)
!2591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "store", scope: !2582, file: !4, line: 2564, type: !528)
!2592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !2582, file: !4, line: 2565, type: !88)
!2593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !2582, file: !4, line: 2565, type: !88)
!2594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "loaded", scope: !2582, file: !4, line: 2565, type: !88)
!2595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cert", scope: !2596, file: !4, line: 2589, type: !532)
!2596 = distinct !DILexicalBlock(scope: !2582, file: !4, line: 2588, column: 15)
!2597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2596, file: !4, line: 2590, type: !88)
!2598 = !DISubprogram(name: "session_stats", scope: !4, file: !4, line: 2823, type: !2391, isLocal: true, isDefinition: true, scopeLine: 2824, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @session_stats, variables: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2604, !2605, !2607, !2609, !2611, !2613, !2615, !2617, !2619, !2621, !2623, !2625, !2627, !2629}
!2600 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2598, file: !4, line: 2823, type: !2092)
!2601 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2598, file: !4, line: 2823, type: !49)
!2602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2598, file: !4, line: 2825, type: !88)
!2603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2598, file: !4, line: 2826, type: !49)
!2604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stats", scope: !2598, file: !4, line: 2826, type: !49)
!2605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2606, file: !4, line: 2839, type: !49)
!2606 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2839, column: 161)
!2607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2608, file: !4, line: 2840, type: !49)
!2608 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2840, column: 162)
!2609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2610, file: !4, line: 2841, type: !49)
!2610 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2841, column: 167)
!2611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2612, file: !4, line: 2842, type: !49)
!2612 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2842, column: 174)
!2613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2614, file: !4, line: 2843, type: !49)
!2614 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2843, column: 161)
!2615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2616, file: !4, line: 2844, type: !49)
!2616 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2844, column: 166)
!2617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2618, file: !4, line: 2845, type: !49)
!2618 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2845, column: 173)
!2619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2620, file: !4, line: 2846, type: !49)
!2620 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2846, column: 161)
!2621 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2622, file: !4, line: 2847, type: !49)
!2622 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2847, column: 159)
!2623 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2624, file: !4, line: 2848, type: !49)
!2624 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2848, column: 161)
!2625 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2626, file: !4, line: 2849, type: !49)
!2626 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2849, column: 163)
!2627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2628, file: !4, line: 2850, type: !49)
!2628 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2850, column: 165)
!2629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2630, file: !4, line: 2857, type: !49)
!2630 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2857, column: 8)
!2631 = !DISubprogram(name: "set_default_verify_paths", scope: !4, file: !4, line: 2862, type: !2391, isLocal: true, isDefinition: true, scopeLine: 2863, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @set_default_verify_paths, variables: !2632)
!2632 = !{!2633, !2634}
!2633 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2631, file: !4, line: 2862, type: !2092)
!2634 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2631, file: !4, line: 2862, type: !49)
!2635 = !DISubprogram(name: "set_ecdh_curve", scope: !4, file: !4, line: 2873, type: !2391, isLocal: true, isDefinition: true, scopeLine: 2874, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @set_ecdh_curve, variables: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642}
!2637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2635, file: !4, line: 2873, type: !2092)
!2638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !2635, file: !4, line: 2873, type: !49)
!2639 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name_bytes", scope: !2635, file: !4, line: 2875, type: !49)
!2640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nid", scope: !2635, file: !4, line: 2876, type: !88)
!2641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2635, file: !4, line: 2877, type: !1823)
!2642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2643, file: !4, line: 2883, type: !49)
!2643 = distinct !DILexicalBlock(scope: !2635, file: !4, line: 2883, column: 8)
!2644 = !DISubprogram(name: "set_servername_callback", scope: !4, file: !4, line: 3004, type: !2391, isLocal: true, isDefinition: true, scopeLine: 3005, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*)* @set_servername_callback, variables: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2651}
!2646 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2644, file: !4, line: 3004, type: !2092)
!2647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2644, file: !4, line: 3004, type: !49)
!2648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cb", scope: !2644, file: !4, line: 3007, type: !49)
!2649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2650, file: !4, line: 3012, type: !49)
!2650 = distinct !DILexicalBlock(scope: !2644, file: !4, line: 3012, column: 8)
!2651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2652, file: !4, line: 3012, type: !49)
!2652 = distinct !DILexicalBlock(scope: !2653, file: !4, line: 3012, column: 131)
!2653 = distinct !DILexicalBlock(scope: !2654, file: !4, line: 3012, column: 91)
!2654 = distinct !DILexicalBlock(scope: !2650, file: !4, line: 3012, column: 68)
!2655 = !DISubprogram(name: "_servername_callback", scope: !4, file: !4, line: 2902, type: !1443, isLocal: true, isDefinition: true, scopeLine: 2903, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ssl_st*, i32*, i8*)* @_servername_callback, variables: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2670, !2676, !2678, !2680, !2682, !2686}
!2657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !2655, file: !4, line: 2902, type: !394)
!2658 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "al", arg: 2, scope: !2655, file: !4, line: 2902, type: !438)
!2659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 3, scope: !2655, file: !4, line: 2902, type: !48)
!2660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !2655, file: !4, line: 2904, type: !88)
!2661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssl_ctx", scope: !2655, file: !4, line: 2905, type: !2092)
!2662 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssl", scope: !2655, file: !4, line: 2906, type: !387)
!2663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "servername_o", scope: !2655, file: !4, line: 2907, type: !49)
!2664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "servername_idna", scope: !2655, file: !4, line: 2908, type: !49)
!2665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2655, file: !4, line: 2909, type: !49)
!2666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssl_socket", scope: !2655, file: !4, line: 2911, type: !49)
!2667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "servername", scope: !2655, file: !4, line: 2912, type: !73)
!2668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gstate", scope: !2655, file: !4, line: 2914, type: !2669)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGILState_STATE", file: !35, line: 191, baseType: !34)
!2670 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2671, file: !4, line: 2947, type: !49)
!2671 = distinct !DILexicalBlock(scope: !2672, file: !4, line: 2947, column: 16)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !4, line: 2945, column: 44)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !4, line: 2945, column: 13)
!2674 = distinct !DILexicalBlock(scope: !2675, file: !4, line: 2938, column: 10)
!2675 = distinct !DILexicalBlock(scope: !2655, file: !4, line: 2934, column: 9)
!2676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2677, file: !4, line: 2950, type: !49)
!2677 = distinct !DILexicalBlock(scope: !2674, file: !4, line: 2950, column: 12)
!2678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2679, file: !4, line: 2953, type: !49)
!2679 = distinct !DILexicalBlock(scope: !2674, file: !4, line: 2953, column: 12)
!2680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2681, file: !4, line: 2955, type: !49)
!2681 = distinct !DILexicalBlock(scope: !2655, file: !4, line: 2955, column: 8)
!2682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2683, file: !4, line: 2974, type: !49)
!2683 = distinct !DILexicalBlock(scope: !2684, file: !4, line: 2974, column: 12)
!2684 = distinct !DILexicalBlock(scope: !2685, file: !4, line: 2962, column: 10)
!2685 = distinct !DILexicalBlock(scope: !2655, file: !4, line: 2957, column: 9)
!2686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2687, file: !4, line: 2983, type: !49)
!2687 = distinct !DILexicalBlock(scope: !2655, file: !4, line: 2983, column: 8)
!2688 = !DISubprogram(name: "cert_store_stats", scope: !4, file: !4, line: 3048, type: !2689, isLocal: true, isDefinition: true, scopeLine: 3049, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*)* @cert_store_stats, variables: !2691)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!49, !2092}
!2691 = !{!2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2688, file: !4, line: 3048, type: !2092)
!2693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "store", scope: !2688, file: !4, line: 3050, type: !528)
!2694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !2688, file: !4, line: 3051, type: !2192)
!2695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x509", scope: !2688, file: !4, line: 3052, type: !88)
!2696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "crl", scope: !2688, file: !4, line: 3052, type: !88)
!2697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pkey", scope: !2688, file: !4, line: 3052, type: !88)
!2698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ca", scope: !2688, file: !4, line: 3052, type: !88)
!2699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2688, file: !4, line: 3052, type: !88)
!2700 = !DISubprogram(name: "get_ca_certs", scope: !4, file: !4, line: 3090, type: !2358, isLocal: true, isDefinition: true, scopeLine: 3091, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, %struct._object*, %struct._object*)* @get_ca_certs, variables: !2701)
!2701 = !{!2702, !2703, !2704, !2705, !2707, !2708, !2709, !2710, !2711, !2712, !2716, !2717, !2719, !2723, !2725, !2728, !2730}
!2702 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2700, file: !4, line: 3090, type: !2092)
!2703 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2700, file: !4, line: 3090, type: !49)
!2704 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2700, file: !4, line: 3090, type: !49)
!2705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !2700, file: !4, line: 3092, type: !2706)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, align: 64, elements: !750)
!2707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "store", scope: !2700, file: !4, line: 3093, type: !528)
!2708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ci", scope: !2700, file: !4, line: 3094, type: !49)
!2709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rlist", scope: !2700, file: !4, line: 3094, type: !49)
!2710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2700, file: !4, line: 3095, type: !88)
!2711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "binary_mode", scope: !2700, file: !4, line: 3096, type: !88)
!2712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !2713, file: !4, line: 3109, type: !2192)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !4, line: 3108, column: 101)
!2714 = distinct !DILexicalBlock(scope: !2715, file: !4, line: 3108, column: 5)
!2715 = distinct !DILexicalBlock(scope: !2700, file: !4, line: 3108, column: 5)
!2716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cert", scope: !2713, file: !4, line: 3110, type: !532)
!2717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2718, file: !4, line: 3133, type: !49)
!2718 = distinct !DILexicalBlock(scope: !2713, file: !4, line: 3133, column: 12)
!2719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2720, file: !4, line: 3133, type: !49)
!2720 = distinct !DILexicalBlock(scope: !2721, file: !4, line: 3133, column: 103)
!2721 = distinct !DILexicalBlock(scope: !2722, file: !4, line: 3133, column: 79)
!2722 = distinct !DILexicalBlock(scope: !2718, file: !4, line: 3133, column: 56)
!2723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2724, file: !4, line: 3138, type: !49)
!2724 = distinct !DILexicalBlock(scope: !2700, file: !4, line: 3138, column: 8)
!2725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2726, file: !4, line: 3138, type: !49)
!2726 = distinct !DILexicalBlock(scope: !2727, file: !4, line: 3138, column: 94)
!2727 = distinct !DILexicalBlock(scope: !2724, file: !4, line: 3138, column: 60)
!2728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2729, file: !4, line: 3139, type: !49)
!2729 = distinct !DILexicalBlock(scope: !2700, file: !4, line: 3139, column: 8)
!2730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2731, file: !4, line: 3139, type: !49)
!2731 = distinct !DILexicalBlock(scope: !2732, file: !4, line: 3139, column: 97)
!2732 = distinct !DILexicalBlock(scope: !2729, file: !4, line: 3139, column: 63)
!2733 = !DISubprogram(name: "_certificate_to_der", scope: !4, file: !4, line: 1257, type: !2734, isLocal: true, isDefinition: true, scopeLine: 1258, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.x509_st*)* @_certificate_to_der, variables: !2736)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!49, !532}
!2736 = !{!2737, !2738, !2739, !2740}
!2737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "certificate", arg: 1, scope: !2733, file: !4, line: 1257, type: !532)
!2738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes_buf", scope: !2733, file: !4, line: 1259, type: !443)
!2739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2733, file: !4, line: 1260, type: !88)
!2740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !2733, file: !4, line: 1261, type: !49)
!2741 = !DISubprogram(name: "_decode_certificate", scope: !4, file: !4, line: 1092, type: !2734, isLocal: true, isDefinition: true, scopeLine: 1092, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.x509_st*)* @_decode_certificate, variables: !2742)
!2742 = !{!2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2767, !2769, !2773, !2775, !2779, !2781, !2785, !2787, !2791, !2793, !2797, !2799, !2806, !2808, !2813, !2818, !2823, !2825}
!2743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "certificate", arg: 1, scope: !2741, file: !4, line: 1092, type: !532)
!2744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !2741, file: !4, line: 1094, type: !49)
!2745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "biobuf", scope: !2741, file: !4, line: 1095, type: !1609)
!2746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "peer", scope: !2741, file: !4, line: 1096, type: !49)
!2747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "peer_alt_names", scope: !2741, file: !4, line: 1097, type: !49)
!2748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "issuer", scope: !2741, file: !4, line: 1098, type: !49)
!2749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "version", scope: !2741, file: !4, line: 1099, type: !49)
!2750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sn_obj", scope: !2741, file: !4, line: 1100, type: !49)
!2751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !2741, file: !4, line: 1101, type: !49)
!2752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "serialNumber", scope: !2741, file: !4, line: 1102, type: !543)
!2753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2741, file: !4, line: 1103, type: !2754)
!2754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 16384, align: 8, elements: !2755)
!2755 = !{!2756}
!2756 = !DISubrange(count: 2048)
!2757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2741, file: !4, line: 1104, type: !88)
!2758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2741, file: !4, line: 1104, type: !88)
!2759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "notBefore", scope: !2741, file: !4, line: 1105, type: !660)
!2760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "notAfter", scope: !2741, file: !4, line: 1105, type: !660)
!2761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pnotBefore", scope: !2741, file: !4, line: 1106, type: !49)
!2762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pnotAfter", scope: !2741, file: !4, line: 1106, type: !49)
!2763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2764, file: !4, line: 1117, type: !49)
!2764 = distinct !DILexicalBlock(scope: !2765, file: !4, line: 1117, column: 12)
!2765 = distinct !DILexicalBlock(scope: !2766, file: !4, line: 1116, column: 75)
!2766 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1116, column: 9)
!2767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2768, file: !4, line: 1120, type: !49)
!2768 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1120, column: 8)
!2769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2770, file: !4, line: 1127, type: !49)
!2770 = distinct !DILexicalBlock(scope: !2771, file: !4, line: 1127, column: 12)
!2771 = distinct !DILexicalBlock(scope: !2772, file: !4, line: 1126, column: 75)
!2772 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1126, column: 9)
!2773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2774, file: !4, line: 1130, type: !49)
!2774 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1130, column: 8)
!2775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2776, file: !4, line: 1136, type: !49)
!2776 = distinct !DILexicalBlock(scope: !2777, file: !4, line: 1136, column: 12)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !4, line: 1135, column: 63)
!2778 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1135, column: 9)
!2779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2780, file: !4, line: 1139, type: !49)
!2780 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1139, column: 8)
!2781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2782, file: !4, line: 1157, type: !49)
!2782 = distinct !DILexicalBlock(scope: !2783, file: !4, line: 1157, column: 12)
!2783 = distinct !DILexicalBlock(scope: !2784, file: !4, line: 1156, column: 67)
!2784 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1156, column: 9)
!2785 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2786, file: !4, line: 1160, type: !49)
!2786 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1160, column: 8)
!2787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2788, file: !4, line: 1174, type: !49)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !4, line: 1174, column: 12)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !4, line: 1173, column: 68)
!2790 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1173, column: 9)
!2791 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2792, file: !4, line: 1177, type: !49)
!2792 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1177, column: 8)
!2793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2794, file: !4, line: 1191, type: !49)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !4, line: 1191, column: 12)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !4, line: 1190, column: 66)
!2796 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1190, column: 9)
!2797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2798, file: !4, line: 1194, type: !49)
!2798 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1194, column: 8)
!2799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2800, file: !4, line: 1204, type: !49)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !4, line: 1204, column: 16)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !4, line: 1203, column: 55)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !4, line: 1202, column: 13)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !4, line: 1201, column: 51)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !4, line: 1201, column: 14)
!2805 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1199, column: 9)
!2806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2807, file: !4, line: 1207, type: !49)
!2807 = distinct !DILexicalBlock(scope: !2803, file: !4, line: 1207, column: 12)
!2808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2809, file: !4, line: 1216, type: !49)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !4, line: 1216, column: 12)
!2810 = distinct !DILexicalBlock(scope: !2811, file: !4, line: 1214, column: 42)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !4, line: 1214, column: 16)
!2812 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1212, column: 9)
!2813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2814, file: !4, line: 1227, type: !49)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !4, line: 1227, column: 12)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !4, line: 1225, column: 42)
!2816 = distinct !DILexicalBlock(scope: !2817, file: !4, line: 1225, column: 16)
!2817 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1223, column: 9)
!2818 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2819, file: !4, line: 1239, type: !49)
!2819 = distinct !DILexicalBlock(scope: !2820, file: !4, line: 1239, column: 12)
!2820 = distinct !DILexicalBlock(scope: !2821, file: !4, line: 1237, column: 42)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !4, line: 1237, column: 16)
!2822 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1235, column: 9)
!2823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2824, file: !4, line: 1252, type: !49)
!2824 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1252, column: 8)
!2825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2826, file: !4, line: 1252, type: !49)
!2826 = distinct !DILexicalBlock(scope: !2827, file: !4, line: 1252, column: 98)
!2827 = distinct !DILexicalBlock(scope: !2824, file: !4, line: 1252, column: 64)
!2828 = !DISubprogram(name: "_create_tuple_for_X509_NAME", scope: !4, file: !4, line: 662, type: !2829, isLocal: true, isDefinition: true, scopeLine: 663, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.X509_name_st*)* @_create_tuple_for_X509_NAME, variables: !2831)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!49, !633}
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2847, !2848, !2849, !2850, !2851, !2852, !2861, !2863, !2865, !2871, !2873, !2876, !2878, !2880, !2883, !2885}
!2832 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "xname", arg: 1, scope: !2828, file: !4, line: 662, type: !633)
!2833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dn", scope: !2828, file: !4, line: 664, type: !49)
!2834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rdn", scope: !2828, file: !4, line: 665, type: !49)
!2835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rdnt", scope: !2828, file: !4, line: 666, type: !49)
!2836 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attr", scope: !2828, file: !4, line: 667, type: !49)
!2837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry_count", scope: !2828, file: !4, line: 668, type: !88)
!2838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry", scope: !2828, file: !4, line: 669, type: !2839)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64, align: 64)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_NAME_ENTRY", file: !535, line: 179, baseType: !2841)
!2841 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_name_entry_st", file: !535, line: 173, size: 192, align: 64, elements: !2842)
!2842 = !{!2843, !2844, !2845, !2846}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2841, file: !535, line: 175, baseType: !558, size: 64, align: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2841, file: !535, line: 176, baseType: !583, size: 64, align: 64, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2841, file: !535, line: 177, baseType: !88, size: 32, align: 32, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2841, file: !535, line: 178, baseType: !88, size: 32, align: 32, offset: 160)
!2847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2828, file: !4, line: 670, type: !558)
!2848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2828, file: !4, line: 671, type: !583)
!2849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index_counter", scope: !2828, file: !4, line: 672, type: !88)
!2850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rdn_level", scope: !2828, file: !4, line: 673, type: !88)
!2851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retcode", scope: !2828, file: !4, line: 674, type: !88)
!2852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2853, file: !4, line: 696, type: !49)
!2853 = distinct !DILexicalBlock(scope: !2854, file: !4, line: 696, column: 20)
!2854 = distinct !DILexicalBlock(scope: !2855, file: !4, line: 692, column: 42)
!2855 = distinct !DILexicalBlock(scope: !2856, file: !4, line: 692, column: 17)
!2856 = distinct !DILexicalBlock(scope: !2857, file: !4, line: 691, column: 29)
!2857 = distinct !DILexicalBlock(scope: !2858, file: !4, line: 691, column: 13)
!2858 = distinct !DILexicalBlock(scope: !2859, file: !4, line: 687, column: 5)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !4, line: 684, column: 5)
!2860 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 684, column: 5)
!2861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2862, file: !4, line: 700, type: !49)
!2862 = distinct !DILexicalBlock(scope: !2854, file: !4, line: 700, column: 20)
!2863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2864, file: !4, line: 724, type: !49)
!2864 = distinct !DILexicalBlock(scope: !2858, file: !4, line: 724, column: 12)
!2865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2866, file: !4, line: 732, type: !49)
!2866 = distinct !DILexicalBlock(scope: !2867, file: !4, line: 732, column: 16)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !4, line: 730, column: 51)
!2868 = distinct !DILexicalBlock(scope: !2869, file: !4, line: 730, column: 13)
!2869 = distinct !DILexicalBlock(scope: !2870, file: !4, line: 729, column: 28)
!2870 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 729, column: 9)
!2871 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2872, file: !4, line: 736, type: !49)
!2872 = distinct !DILexicalBlock(scope: !2867, file: !4, line: 736, column: 16)
!2873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2874, file: !4, line: 741, type: !49)
!2874 = distinct !DILexicalBlock(scope: !2875, file: !4, line: 741, column: 16)
!2875 = distinct !DILexicalBlock(scope: !2868, file: !4, line: 740, column: 14)
!2876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2877, file: !4, line: 747, type: !49)
!2877 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 747, column: 8)
!2878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2879, file: !4, line: 753, type: !49)
!2879 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 753, column: 8)
!2880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2881, file: !4, line: 753, type: !49)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !4, line: 753, column: 95)
!2882 = distinct !DILexicalBlock(scope: !2879, file: !4, line: 753, column: 61)
!2883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2884, file: !4, line: 756, type: !49)
!2884 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 756, column: 8)
!2885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2886, file: !4, line: 756, type: !49)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !4, line: 756, column: 94)
!2887 = distinct !DILexicalBlock(scope: !2884, file: !4, line: 756, column: 60)
!2888 = !DISubprogram(name: "_create_tuple_for_attribute", scope: !4, file: !4, line: 616, type: !2889, isLocal: true, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.asn1_object_st*, %struct.asn1_string_st*)* @_create_tuple_for_attribute, variables: !2891)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!49, !558, !583}
!2891 = !{!2892, !2893, !2894, !2896, !2897, !2898, !2899, !2900, !2901, !2905, !2909, !2913}
!2892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 1, scope: !2888, file: !4, line: 616, type: !558)
!2893 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !2888, file: !4, line: 616, type: !583)
!2894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "namebuf", scope: !2888, file: !4, line: 618, type: !2895)
!2895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 2048, align: 8, elements: !1232)
!2896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buflen", scope: !2888, file: !4, line: 619, type: !88)
!2897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name_obj", scope: !2888, file: !4, line: 620, type: !49)
!2898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value_obj", scope: !2888, file: !4, line: 621, type: !49)
!2899 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attr", scope: !2888, file: !4, line: 622, type: !49)
!2900 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "valuebuf", scope: !2888, file: !4, line: 623, type: !443)
!2901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2902, file: !4, line: 637, type: !49)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !4, line: 637, column: 12)
!2903 = distinct !DILexicalBlock(scope: !2904, file: !4, line: 635, column: 21)
!2904 = distinct !DILexicalBlock(scope: !2888, file: !4, line: 635, column: 9)
!2905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2906, file: !4, line: 644, type: !49)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !4, line: 644, column: 12)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !4, line: 643, column: 34)
!2908 = distinct !DILexicalBlock(scope: !2888, file: !4, line: 643, column: 9)
!2909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2910, file: !4, line: 649, type: !49)
!2910 = distinct !DILexicalBlock(scope: !2911, file: !4, line: 649, column: 12)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !4, line: 648, column: 29)
!2912 = distinct !DILexicalBlock(scope: !2888, file: !4, line: 648, column: 9)
!2913 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2914, file: !4, line: 650, type: !49)
!2914 = distinct !DILexicalBlock(scope: !2911, file: !4, line: 650, column: 12)
!2915 = !DISubprogram(name: "_get_peer_alt_names", scope: !4, file: !4, line: 761, type: !2734, isLocal: true, isDefinition: true, scopeLine: 761, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.x509_st*)* @_get_peer_alt_names, variables: !2916)
!2916 = !{!2917, !2918, !2919, !2920, !2921, !2922, !2923, !2931, !2932, !2933, !3046, !3047, !3048, !3049, !3050, !3051, !3056, !3057, !3062, !3066, !3070, !3074, !3078, !3082, !3086, !3088, !3092, !3096}
!2917 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "certificate", arg: 1, scope: !2915, file: !4, line: 761, type: !532)
!2918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2915, file: !4, line: 769, type: !88)
!2919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !2915, file: !4, line: 769, type: !88)
!2920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "peer_alt_names", scope: !2915, file: !4, line: 770, type: !49)
!2921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !2915, file: !4, line: 771, type: !49)
!2922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !2915, file: !4, line: 771, type: !49)
!2923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ext", scope: !2915, file: !4, line: 772, type: !2924)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64, align: 64)
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_EXTENSION", file: !535, line: 208, baseType: !2926)
!2926 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_extension_st", file: !535, line: 203, size: 192, align: 64, elements: !2927)
!2927 = !{!2928, !2929, !2930}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2926, file: !535, line: 205, baseType: !558, size: 64, align: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "critical", scope: !2926, file: !535, line: 206, baseType: !581, size: 32, align: 32, offset: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2926, file: !535, line: 207, baseType: !594, size: 64, align: 64, offset: 128)
!2931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "names", scope: !2915, file: !4, line: 773, type: !988)
!2932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2915, file: !4, line: 774, type: !2212)
!2933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "method", scope: !2915, file: !4, line: 775, type: !2934)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64, align: 64)
!2935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2936)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_METHOD", file: !984, line: 141, baseType: !2937)
!2937 = !DICompositeType(tag: DW_TAG_structure_type, name: "v3_ext_method", file: !984, line: 95, size: 832, align: 64, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2947, !2952, !2954, !2959, !2964, !2971, !3028, !3033, !3038, !3043, !3045}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ext_nid", scope: !2937, file: !984, line: 96, baseType: !88, size: 32, align: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !2937, file: !984, line: 97, baseType: !88, size: 32, align: 32, offset: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2937, file: !984, line: 99, baseType: !2942, size: 64, align: 64, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64, align: 64)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_ITEM_EXP", file: !516, line: 402, baseType: !2944)
!2944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2945)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_ITEM", file: !396, line: 99, baseType: !2946)
!2946 = !DICompositeType(tag: DW_TAG_structure_type, name: "ASN1_ITEM_st", file: !396, line: 99, flags: DIFlagFwdDecl)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ext_new", scope: !2937, file: !984, line: 101, baseType: !2948, size: 64, align: 64, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_NEW", file: !984, line: 75, baseType: !2949)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64, align: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!48}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ext_free", scope: !2937, file: !984, line: 102, baseType: !2953, size: 64, align: 64, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_FREE", file: !984, line: 76, baseType: !374)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "d2i", scope: !2937, file: !984, line: 103, baseType: !2955, size: 64, align: 64, offset: 256)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_D2I", file: !984, line: 77, baseType: !2956)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64, align: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!48, !48, !1550, !61}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "i2d", scope: !2937, file: !984, line: 104, baseType: !2960, size: 64, align: 64, offset: 320)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_I2D", file: !984, line: 78, baseType: !2961)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64, align: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!88, !48, !1556}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "i2s", scope: !2937, file: !984, line: 107, baseType: !2965, size: 64, align: 64, offset: 384)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_I2S", file: !984, line: 85, baseType: !2966)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64, align: 64)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!96, !2969, !48}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64, align: 64)
!2970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2937)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "s2i", scope: !2937, file: !984, line: 108, baseType: !2972, size: 64, align: 64, offset: 448)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_S2I", file: !984, line: 86, baseType: !2973)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64, align: 64)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!48, !2969, !2976, !73}
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64, align: 64)
!2977 = !DICompositeType(tag: DW_TAG_structure_type, name: "v3_ext_ctx", file: !984, line: 129, size: 448, align: 64, elements: !2978)
!2978 = !{!2979, !2980, !2981, !2982, !3000, !3001, !3027}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2977, file: !984, line: 131, baseType: !88, size: 32, align: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "issuer_cert", scope: !2977, file: !984, line: 132, baseType: !532, size: 64, align: 64, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "subject_cert", scope: !2977, file: !984, line: 133, baseType: !532, size: 64, align: 64, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "subject_req", scope: !2977, file: !984, line: 134, baseType: !2983, size: 64, align: 64, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64, align: 64)
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_REQ", file: !535, line: 247, baseType: !2985)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_req_st", file: !535, line: 241, size: 256, align: 64, elements: !2986)
!2986 = !{!2987, !2997, !2998, !2999}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "req_info", scope: !2985, file: !535, line: 243, baseType: !2988, size: 64, align: 64)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64, align: 64)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_REQ_INFO", file: !535, line: 239, baseType: !2990)
!2990 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_req_info_st", file: !535, line: 231, size: 448, align: 64, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !2990, file: !535, line: 233, baseType: !961, size: 192, align: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2990, file: !535, line: 234, baseType: !543, size: 64, align: 64, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "subject", scope: !2990, file: !535, line: 235, baseType: !633, size: 64, align: 64, offset: 256)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "pubkey", scope: !2990, file: !535, line: 236, baseType: !665, size: 64, align: 64, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2990, file: !535, line: 238, baseType: !949, size: 64, align: 64, offset: 384)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "sig_alg", scope: !2985, file: !535, line: 244, baseType: !553, size: 64, align: 64, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !2985, file: !535, line: 245, baseType: !591, size: 64, align: 64, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !2985, file: !535, line: 246, baseType: !88, size: 32, align: 32, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "crl", scope: !2977, file: !984, line: 135, baseType: !1092, size: 64, align: 64, offset: 256)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "db_meth", scope: !2977, file: !984, line: 136, baseType: !3002, size: 64, align: 64, offset: 320)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64, align: 64)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_CONF_METHOD", file: !984, line: 126, baseType: !3004)
!3004 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509V3_CONF_METHOD_st", file: !984, line: 121, size: 256, align: 64, elements: !3005)
!3005 = !{!3006, !3010, !3019, !3023}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "get_string", scope: !3004, file: !984, line: 122, baseType: !3007, size: 64, align: 64)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64, align: 64)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!96, !48, !96, !96}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "get_section", scope: !3004, file: !984, line: 123, baseType: !3011, size: 64, align: 64, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64, align: 64)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!3014, !48, !96}
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64, align: 64)
!3015 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_CONF_VALUE", file: !3016, line: 81, size: 256, align: 64, elements: !3017)
!3016 = !DIFile(filename: "/usr/include/openssl/conf.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!3017 = !{!3018}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !3015, file: !3016, line: 81, baseType: !468, size: 256, align: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "free_string", scope: !3004, file: !984, line: 124, baseType: !3020, size: 64, align: 64, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64, align: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{null, !48, !96}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "free_section", scope: !3004, file: !984, line: 125, baseType: !3024, size: 64, align: 64, offset: 192)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64, align: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{null, !48, !3014}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !2977, file: !984, line: 137, baseType: !48, size: 64, align: 64, offset: 384)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "i2v", scope: !2937, file: !984, line: 111, baseType: !3029, size: 64, align: 64, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_I2V", file: !984, line: 80, baseType: !3030)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64, align: 64)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!3014, !2969, !48, !3014}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "v2i", scope: !2937, file: !984, line: 112, baseType: !3034, size: 64, align: 64, offset: 576)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_V2I", file: !984, line: 82, baseType: !3035)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64, align: 64)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!48, !2969, !2976, !3014}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "i2r", scope: !2937, file: !984, line: 115, baseType: !3039, size: 64, align: 64, offset: 640)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_I2R", file: !984, line: 88, baseType: !3040)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64, align: 64)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!88, !2969, !48, !1609, !88}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "r2i", scope: !2937, file: !984, line: 116, baseType: !3044, size: 64, align: 64, offset: 704)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509V3_EXT_R2I", file: !984, line: 90, baseType: !2973)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "usr_data", scope: !2937, file: !984, line: 118, baseType: !48, size: 64, align: 64, offset: 768)
!3046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "biobuf", scope: !2915, file: !4, line: 776, type: !1609)
!3047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2915, file: !4, line: 777, type: !2754)
!3048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vptr", scope: !2915, file: !4, line: 778, type: !96)
!3049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2915, file: !4, line: 779, type: !88)
!3050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !2915, file: !4, line: 782, type: !567)
!3051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gntype", scope: !3052, file: !4, line: 827, type: !88)
!3052 = distinct !DILexicalBlock(scope: !3053, file: !4, line: 825, column: 99)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !4, line: 825, column: 9)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !4, line: 825, column: 9)
!3055 = distinct !DILexicalBlock(scope: !2915, file: !4, line: 795, column: 48)
!3056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "as", scope: !3052, file: !4, line: 828, type: !583)
!3057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3058, file: !4, line: 844, type: !49)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !4, line: 844, column: 24)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !4, line: 843, column: 38)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 843, column: 21)
!3061 = distinct !DILexicalBlock(scope: !3052, file: !4, line: 832, column: 29)
!3062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3063, file: !4, line: 851, type: !49)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !4, line: 851, column: 24)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !4, line: 850, column: 38)
!3065 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 850, column: 21)
!3066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3067, file: !4, line: 880, type: !49)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !4, line: 880, column: 24)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !4, line: 879, column: 38)
!3069 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 879, column: 21)
!3070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3071, file: !4, line: 887, type: !49)
!3071 = distinct !DILexicalBlock(scope: !3072, file: !4, line: 887, column: 24)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !4, line: 886, column: 38)
!3073 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 886, column: 21)
!3074 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3075, file: !4, line: 926, type: !49)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !4, line: 926, column: 24)
!3076 = distinct !DILexicalBlock(scope: !3077, file: !4, line: 925, column: 38)
!3077 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 925, column: 21)
!3078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3079, file: !4, line: 933, type: !49)
!3079 = distinct !DILexicalBlock(scope: !3080, file: !4, line: 933, column: 24)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !4, line: 932, column: 38)
!3081 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 932, column: 21)
!3082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3083, file: !4, line: 943, type: !49)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !4, line: 943, column: 20)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !4, line: 942, column: 55)
!3085 = distinct !DILexicalBlock(scope: !3052, file: !4, line: 942, column: 17)
!3086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3087, file: !4, line: 946, type: !49)
!3087 = distinct !DILexicalBlock(scope: !3052, file: !4, line: 946, column: 16)
!3088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3089, file: !4, line: 953, type: !49)
!3089 = distinct !DILexicalBlock(scope: !3090, file: !4, line: 953, column: 12)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !4, line: 951, column: 46)
!3091 = distinct !DILexicalBlock(scope: !2915, file: !4, line: 951, column: 9)
!3092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3093, file: !4, line: 965, type: !49)
!3093 = distinct !DILexicalBlock(scope: !3094, file: !4, line: 965, column: 12)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !4, line: 964, column: 46)
!3095 = distinct !DILexicalBlock(scope: !2915, file: !4, line: 964, column: 9)
!3096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3097, file: !4, line: 965, type: !49)
!3097 = distinct !DILexicalBlock(scope: !3098, file: !4, line: 965, column: 110)
!3098 = distinct !DILexicalBlock(scope: !3093, file: !4, line: 965, column: 76)
!3099 = !DISubprogram(name: "_get_aia_uri", scope: !4, file: !4, line: 972, type: !3100, isLocal: true, isDefinition: true, scopeLine: 972, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.x509_st*, i32)* @_get_aia_uri, variables: !3102)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!49, !532, !88}
!3102 = !{!3103, !3104, !3105, !3106, !3107, !3108, !3109, !3115, !3119, !3120, !3122, !3126, !3128, !3130, !3132}
!3103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "certificate", arg: 1, scope: !3099, file: !4, line: 972, type: !532)
!3104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nid", arg: 2, scope: !3099, file: !4, line: 972, type: !88)
!3105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lst", scope: !3099, file: !4, line: 973, type: !49)
!3106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ostr", scope: !3099, file: !4, line: 973, type: !49)
!3107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3099, file: !4, line: 974, type: !88)
!3108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3099, file: !4, line: 974, type: !88)
!3109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !3099, file: !4, line: 975, type: !3110)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64, align: 64)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "AUTHORITY_INFO_ACCESS", file: !984, line: 214, baseType: !3112)
!3112 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_ACCESS_DESCRIPTION", file: !984, line: 221, size: 256, align: 64, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !3112, file: !984, line: 221, baseType: !468, size: 256, align: 64)
!3115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ad", scope: !3116, file: !4, line: 987, type: !2247)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !4, line: 986, column: 101)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !4, line: 986, column: 5)
!3118 = distinct !DILexicalBlock(scope: !3099, file: !4, line: 986, column: 5)
!3119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uri", scope: !3116, file: !4, line: 988, type: !603)
!3120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3121, file: !4, line: 1001, type: !49)
!3121 = distinct !DILexicalBlock(scope: !3116, file: !4, line: 1001, column: 12)
!3122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3123, file: !4, line: 1010, type: !49)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !4, line: 1010, column: 12)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !4, line: 1009, column: 32)
!3125 = distinct !DILexicalBlock(scope: !3099, file: !4, line: 1009, column: 9)
!3126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tup", scope: !3127, file: !4, line: 1013, type: !49)
!3127 = distinct !DILexicalBlock(scope: !3125, file: !4, line: 1012, column: 12)
!3128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3129, file: !4, line: 1015, type: !49)
!3129 = distinct !DILexicalBlock(scope: !3127, file: !4, line: 1015, column: 12)
!3130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3131, file: !4, line: 1021, type: !49)
!3131 = distinct !DILexicalBlock(scope: !3099, file: !4, line: 1021, column: 8)
!3132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3133, file: !4, line: 1021, type: !49)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !4, line: 1021, column: 95)
!3134 = distinct !DILexicalBlock(scope: !3131, file: !4, line: 1021, column: 61)
!3135 = !DISubprogram(name: "_get_crl_dp", scope: !4, file: !4, line: 1026, type: !2734, isLocal: true, isDefinition: true, scopeLine: 1026, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.x509_st*)* @_get_crl_dp, variables: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3147, !3148, !3152, !3153, !3154, !3158, !3160, !3164, !3168, !3170}
!3137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "certificate", arg: 1, scope: !3135, file: !4, line: 1026, type: !532)
!3138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dps", scope: !3135, file: !4, line: 1027, type: !999)
!3139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3135, file: !4, line: 1028, type: !88)
!3140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !3135, file: !4, line: 1028, type: !88)
!3141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3135, file: !4, line: 1028, type: !88)
!3142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lst", scope: !3135, file: !4, line: 1029, type: !49)
!3143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dp", scope: !3144, file: !4, line: 1049, type: !2253)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !4, line: 1048, column: 90)
!3145 = distinct !DILexicalBlock(scope: !3146, file: !4, line: 1048, column: 5)
!3146 = distinct !DILexicalBlock(scope: !3135, file: !4, line: 1048, column: 5)
!3147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gns", scope: !3144, file: !4, line: 1050, type: !1004)
!3148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gn", scope: !3149, file: !4, line: 1056, type: !2212)
!3149 = distinct !DILexicalBlock(scope: !3150, file: !4, line: 1055, column: 96)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !4, line: 1055, column: 9)
!3151 = distinct !DILexicalBlock(scope: !3144, file: !4, line: 1055, column: 9)
!3152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uri", scope: !3149, file: !4, line: 1057, type: !603)
!3153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ouri", scope: !3149, file: !4, line: 1058, type: !49)
!3154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3155, file: !4, line: 1068, type: !49)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !4, line: 1068, column: 20)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !4, line: 1067, column: 37)
!3157 = distinct !DILexicalBlock(scope: !3149, file: !4, line: 1067, column: 17)
!3158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3159, file: !4, line: 1072, type: !49)
!3159 = distinct !DILexicalBlock(scope: !3149, file: !4, line: 1072, column: 16)
!3160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3161, file: !4, line: 1074, type: !49)
!3161 = distinct !DILexicalBlock(scope: !3162, file: !4, line: 1074, column: 20)
!3162 = distinct !DILexicalBlock(scope: !3163, file: !4, line: 1073, column: 29)
!3163 = distinct !DILexicalBlock(scope: !3149, file: !4, line: 1073, column: 17)
!3164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3165, file: !4, line: 1081, type: !49)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !4, line: 1081, column: 12)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !4, line: 1080, column: 32)
!3167 = distinct !DILexicalBlock(scope: !3135, file: !4, line: 1080, column: 9)
!3168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tup", scope: !3169, file: !4, line: 1084, type: !49)
!3169 = distinct !DILexicalBlock(scope: !3167, file: !4, line: 1083, column: 12)
!3170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3171, file: !4, line: 1086, type: !49)
!3171 = distinct !DILexicalBlock(scope: !3169, file: !4, line: 1086, column: 12)
!3172 = !DISubprogram(name: "get_check_hostname", scope: !4, file: !4, line: 2333, type: !3173, isLocal: true, isDefinition: true, scopeLine: 2334, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, i8*)* @get_check_hostname, variables: !3175)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{!49, !2092, !48}
!3175 = !{!3176, !3177}
!3176 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3172, file: !4, line: 2333, type: !2092)
!3177 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !3172, file: !4, line: 2333, type: !48)
!3178 = !DISubprogram(name: "set_check_hostname", scope: !4, file: !4, line: 2339, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2340, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_check_hostname, variables: !3181)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!88, !2092, !49, !48}
!3181 = !{!3182, !3183, !3184, !3185}
!3182 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3178, file: !4, line: 2339, type: !2092)
!3183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !3178, file: !4, line: 2339, type: !49)
!3184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 3, scope: !3178, file: !4, line: 2339, type: !48)
!3185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "check_hostname", scope: !3178, file: !4, line: 2341, type: !88)
!3186 = !DISubprogram(name: "get_options", scope: !4, file: !4, line: 2304, type: !3173, isLocal: true, isDefinition: true, scopeLine: 2305, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, i8*)* @get_options, variables: !3187)
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3186, file: !4, line: 2304, type: !2092)
!3189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !3186, file: !4, line: 2304, type: !48)
!3190 = !DISubprogram(name: "set_options", scope: !4, file: !4, line: 2310, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2311, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_options, variables: !3191)
!3191 = !{!3192, !3193, !3194, !3195, !3196, !3197, !3198}
!3192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3190, file: !4, line: 2310, type: !2092)
!3193 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !3190, file: !4, line: 2310, type: !49)
!3194 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 3, scope: !3190, file: !4, line: 2310, type: !48)
!3195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_opts", scope: !3190, file: !4, line: 2312, type: !61)
!3196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "opts", scope: !3190, file: !4, line: 2312, type: !61)
!3197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "set", scope: !3190, file: !4, line: 2312, type: !61)
!3198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clear", scope: !3190, file: !4, line: 2312, type: !61)
!3199 = !DISubprogram(name: "get_verify_flags", scope: !4, file: !4, line: 2265, type: !3173, isLocal: true, isDefinition: true, scopeLine: 2266, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, i8*)* @get_verify_flags, variables: !3200)
!3200 = !{!3201, !3202, !3203, !3204}
!3201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3199, file: !4, line: 2265, type: !2092)
!3202 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !3199, file: !4, line: 2265, type: !48)
!3203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "store", scope: !3199, file: !4, line: 2267, type: !528)
!3204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !3199, file: !4, line: 2268, type: !140)
!3205 = !DISubprogram(name: "set_verify_flags", scope: !4, file: !4, line: 2276, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2277, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_verify_flags, variables: !3206)
!3206 = !{!3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214}
!3207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3205, file: !4, line: 2276, type: !2092)
!3208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !3205, file: !4, line: 2276, type: !49)
!3209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 3, scope: !3205, file: !4, line: 2276, type: !48)
!3210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "store", scope: !3205, file: !4, line: 2278, type: !528)
!3211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_flags", scope: !3205, file: !4, line: 2279, type: !140)
!3212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !3205, file: !4, line: 2279, type: !140)
!3213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "set", scope: !3205, file: !4, line: 2279, type: !140)
!3214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clear", scope: !3205, file: !4, line: 2279, type: !140)
!3215 = !DISubprogram(name: "get_verify_mode", scope: !4, file: !4, line: 2221, type: !3173, isLocal: true, isDefinition: true, scopeLine: 2222, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLContext*, i8*)* @get_verify_mode, variables: !3216)
!3216 = !{!3217, !3218}
!3217 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3215, file: !4, line: 2221, type: !2092)
!3218 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !3215, file: !4, line: 2221, type: !48)
!3219 = !DISubprogram(name: "set_verify_mode", scope: !4, file: !4, line: 2237, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2238, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLContext*, %struct._object*, i8*)* @set_verify_mode, variables: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3225}
!3221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3219, file: !4, line: 2237, type: !2092)
!3222 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !3219, file: !4, line: 2237, type: !49)
!3223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 3, scope: !3219, file: !4, line: 2237, type: !48)
!3224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !3219, file: !4, line: 2239, type: !88)
!3225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !3219, file: !4, line: 2239, type: !88)
!3226 = !DISubprogram(name: "context_new", scope: !4, file: !4, line: 1995, type: !3227, isLocal: true, isDefinition: true, scopeLine: 1996, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @context_new, variables: !3229)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!49, !2299, !49, !49}
!3229 = !{!3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238}
!3230 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !3226, file: !4, line: 1995, type: !2299)
!3231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3226, file: !4, line: 1995, type: !49)
!3232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !3226, file: !4, line: 1995, type: !49)
!3233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !3226, file: !4, line: 1997, type: !2706)
!3234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !3226, file: !4, line: 1998, type: !2092)
!3235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto_version", scope: !3226, file: !4, line: 1999, type: !88)
!3236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "options", scope: !3226, file: !4, line: 2000, type: !61)
!3237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !3226, file: !4, line: 2001, type: !458)
!3238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3239, file: !4, line: 2008, type: !2130)
!3239 = distinct !DILexicalBlock(scope: !3226, file: !4, line: 2008, column: 5)
!3240 = !DISubprogram(name: "PySSL_dealloc", scope: !4, file: !4, line: 1475, type: !3241, isLocal: true, isDefinition: true, scopeLine: 1476, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PySSLSocket*)* @PySSL_dealloc, variables: !3243)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{null, !387}
!3243 = !{!3244, !3245, !3247, !3250, !3252}
!3244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3240, file: !4, line: 1475, type: !387)
!3245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3246, file: !4, line: 1481, type: !49)
!3246 = distinct !DILexicalBlock(scope: !3240, file: !4, line: 1481, column: 8)
!3247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3248, file: !4, line: 1481, type: !49)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !4, line: 1481, column: 104)
!3249 = distinct !DILexicalBlock(scope: !3246, file: !4, line: 1481, column: 70)
!3250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3251, file: !4, line: 1482, type: !49)
!3251 = distinct !DILexicalBlock(scope: !3240, file: !4, line: 1482, column: 8)
!3252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3253, file: !4, line: 1482, type: !49)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !4, line: 1482, column: 101)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !4, line: 1482, column: 67)
!3255 = !DISubprogram(name: "PySSL_SSLdo_handshake", scope: !4, file: !4, line: 544, type: !3256, isLocal: true, isDefinition: true, scopeLine: 545, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_SSLdo_handshake, variables: !3258)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!49, !387}
!3258 = !{!3259, !3260, !3261, !3262, !3263, !3264, !3265, !3268, !3270, !3272}
!3259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3255, file: !4, line: 544, type: !387)
!3260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !3255, file: !4, line: 546, type: !88)
!3261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !3255, file: !4, line: 547, type: !88)
!3262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sockstate", scope: !3255, file: !4, line: 548, type: !88)
!3263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nonblocking", scope: !3255, file: !4, line: 548, type: !88)
!3264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sock", scope: !3255, file: !4, line: 549, type: !2261)
!3265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3266, file: !4, line: 567, type: !2130)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !4, line: 567, column: 9)
!3267 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 566, column: 8)
!3268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3269, file: !4, line: 596, type: !49)
!3269 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 596, column: 8)
!3270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3271, file: !4, line: 602, type: !2130)
!3271 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 602, column: 5)
!3272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3273, file: !4, line: 611, type: !49)
!3273 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 611, column: 8)
!3274 = !DISubprogram(name: "check_socket_and_wait_for_timeout", scope: !4, file: !4, line: 1492, type: !3275, isLocal: true, isDefinition: true, scopeLine: 1493, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySocketSockObject*, i32)* @check_socket_and_wait_for_timeout, variables: !3277)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!88, !2261, !88}
!3277 = !{!3278, !3279, !3280, !3288, !3289, !3290, !3299, !3300}
!3278 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !3274, file: !4, line: 1492, type: !2261)
!3279 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "writing", arg: 2, scope: !3274, file: !4, line: 1492, type: !88)
!3280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fds", scope: !3274, file: !4, line: 1494, type: !3281)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !3282, line: 75, baseType: !3283)
!3282 = !DIFile(filename: "/usr/include/sys/select.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!3283 = !DICompositeType(tag: DW_TAG_structure_type, file: !3282, line: 64, size: 1024, align: 64, elements: !3284)
!3284 = !{!3285}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !3283, file: !3282, line: 69, baseType: !3286, size: 1024, align: 64)
!3286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3287, size: 1024, align: 64, elements: !1448)
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !3282, line: 54, baseType: !61)
!3288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tv", scope: !3274, file: !4, line: 1495, type: !1952)
!3289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rc", scope: !3274, file: !4, line: 1496, type: !88)
!3290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pollfd", scope: !3291, file: !4, line: 1512, type: !3292)
!3291 = distinct !DILexicalBlock(scope: !3274, file: !4, line: 1511, column: 5)
!3292 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !3293, line: 39, size: 64, align: 32, elements: !3294)
!3293 = !DIFile(filename: "/usr/include/sys/poll.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!3294 = !{!3295, !3296, !3298}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3292, file: !3293, line: 41, baseType: !88, size: 32, align: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3292, file: !3293, line: 42, baseType: !3297, size: 16, align: 16, offset: 32)
!3297 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !3292, file: !3293, line: 43, baseType: !3297, size: 16, align: 16, offset: 48)
!3299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timeout", scope: !3291, file: !4, line: 1513, type: !88)
!3300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3301, file: !4, line: 1520, type: !2130)
!3301 = distinct !DILexicalBlock(scope: !3291, file: !4, line: 1520, column: 9)
!3302 = !DISubprogram(name: "PySSL_SetError", scope: !4, file: !4, line: 379, type: !3303, isLocal: true, isDefinition: true, scopeLine: 380, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*, i32, i8*, i32)* @PySSL_SetError, variables: !3305)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!49, !387, !88, !96, !88}
!3305 = !{!3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3322}
!3306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !3302, file: !4, line: 379, type: !387)
!3307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ret", arg: 2, scope: !3302, file: !4, line: 379, type: !88)
!3308 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 3, scope: !3302, file: !4, line: 379, type: !96)
!3309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lineno", arg: 4, scope: !3302, file: !4, line: 379, type: !88)
!3310 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !3302, file: !4, line: 381, type: !49)
!3311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errstr", scope: !3302, file: !4, line: 382, type: !96)
!3312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !3302, file: !4, line: 383, type: !88)
!3313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !3302, file: !4, line: 384, type: !3)
!3314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !3302, file: !4, line: 385, type: !140)
!3315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !3316, file: !4, line: 420, type: !2261)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !4, line: 419, column: 25)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !4, line: 419, column: 17)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !4, line: 418, column: 9)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !4, line: 393, column: 22)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !4, line: 390, column: 33)
!3321 = distinct !DILexicalBlock(scope: !3302, file: !4, line: 390, column: 9)
!3322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3323, file: !4, line: 431, type: !49)
!3323 = distinct !DILexicalBlock(scope: !3324, file: !4, line: 431, column: 24)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !4, line: 426, column: 39)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !4, line: 426, column: 28)
!3326 = distinct !DILexicalBlock(scope: !3316, file: !4, line: 422, column: 21)
!3327 = !DISubprogram(name: "PySSL_SSLwrite", scope: !4, file: !4, line: 1556, type: !3328, isLocal: true, isDefinition: true, scopeLine: 1557, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*, %struct._object*)* @PySSL_SSLwrite, variables: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!49, !387, !49}
!3330 = !{!3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3343, !3346, !3348}
!3331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3327, file: !4, line: 1556, type: !387)
!3332 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3327, file: !4, line: 1556, type: !49)
!3333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !3327, file: !4, line: 1558, type: !280)
!3334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !3327, file: !4, line: 1559, type: !88)
!3335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sockstate", scope: !3327, file: !4, line: 1560, type: !88)
!3336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !3327, file: !4, line: 1561, type: !88)
!3337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nonblocking", scope: !3327, file: !4, line: 1562, type: !88)
!3338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sock", scope: !3327, file: !4, line: 1563, type: !2261)
!3339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3340, file: !4, line: 1574, type: !49)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !4, line: 1574, column: 12)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !4, line: 1573, column: 52)
!3342 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1573, column: 9)
!3343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3344, file: !4, line: 1604, type: !2130)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !4, line: 1604, column: 9)
!3345 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1603, column: 8)
!3346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3347, file: !4, line: 1631, type: !49)
!3347 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1631, column: 8)
!3348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3349, file: !4, line: 1639, type: !49)
!3349 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1639, column: 8)
!3350 = !DISubprogram(name: "PySSL_SSLread", scope: !4, file: !4, line: 1669, type: !3328, isLocal: true, isDefinition: true, scopeLine: 1670, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*, %struct._object*)* @PySSL_SSLread, variables: !3351)
!3351 = !{!3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3366, !3369, !3371, !3373, !3376}
!3352 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3350, file: !4, line: 1669, type: !387)
!3353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3350, file: !4, line: 1669, type: !49)
!3354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !3350, file: !4, line: 1671, type: !49)
!3355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !3350, file: !4, line: 1672, type: !280)
!3356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !3350, file: !4, line: 1673, type: !96)
!3357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !3350, file: !4, line: 1674, type: !88)
!3358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !3350, file: !4, line: 1674, type: !88)
!3359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf_passed", scope: !3350, file: !4, line: 1675, type: !88)
!3360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sockstate", scope: !3350, file: !4, line: 1676, type: !88)
!3361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !3350, file: !4, line: 1677, type: !88)
!3362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nonblocking", scope: !3350, file: !4, line: 1678, type: !88)
!3363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sock", scope: !3350, file: !4, line: 1679, type: !2261)
!3364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3365, file: !4, line: 1719, type: !2130)
!3365 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1719, column: 5)
!3366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3367, file: !4, line: 1739, type: !2130)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !4, line: 1739, column: 9)
!3368 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1738, column: 8)
!3369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3370, file: !4, line: 1772, type: !49)
!3370 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1772, column: 8)
!3371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3372, file: !4, line: 1783, type: !49)
!3372 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1783, column: 8)
!3373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3374, file: !4, line: 1785, type: !49)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !4, line: 1785, column: 12)
!3375 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1784, column: 9)
!3376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3377, file: !4, line: 1785, type: !49)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !4, line: 1785, column: 100)
!3378 = distinct !DILexicalBlock(scope: !3374, file: !4, line: 1785, column: 66)
!3379 = !DISubprogram(name: "PySSL_SSLpending", scope: !4, file: !4, line: 1650, type: !3256, isLocal: true, isDefinition: true, scopeLine: 1651, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_SSLpending, variables: !3380)
!3380 = !{!3381, !3382, !3383}
!3381 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3379, file: !4, line: 1650, type: !387)
!3382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !3379, file: !4, line: 1652, type: !88)
!3383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3384, file: !4, line: 1654, type: !2130)
!3384 = distinct !DILexicalBlock(scope: !3379, file: !4, line: 1654, column: 5)
!3385 = !DISubprogram(name: "PySSL_peercert", scope: !4, file: !4, line: 1317, type: !3328, isLocal: true, isDefinition: true, scopeLine: 1318, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*, %struct._object*)* @PySSL_peercert, variables: !3386)
!3386 = !{!3387, !3388, !3389, !3390}
!3387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3385, file: !4, line: 1317, type: !387)
!3388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3385, file: !4, line: 1317, type: !49)
!3389 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "verification", scope: !3385, file: !4, line: 1319, type: !88)
!3390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "binary_mode", scope: !3385, file: !4, line: 1320, type: !88)
!3391 = !DISubprogram(name: "PySSL_cipher", scope: !4, file: !4, line: 1357, type: !3256, isLocal: true, isDefinition: true, scopeLine: 1357, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_cipher, variables: !3392)
!3392 = !{!3393, !3394, !3395, !3396, !3397, !3398, !3399}
!3393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3391, file: !4, line: 1357, type: !387)
!3394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !3391, file: !4, line: 1359, type: !49)
!3395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !3391, file: !4, line: 1359, type: !49)
!3396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current", scope: !3391, file: !4, line: 1360, type: !1247)
!3397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cipher_name", scope: !3391, file: !4, line: 1361, type: !96)
!3398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cipher_protocol", scope: !3391, file: !4, line: 1362, type: !96)
!3399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3400, file: !4, line: 1401, type: !49)
!3400 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1401, column: 8)
!3401 = !DISubprogram(name: "PySSL_selected_npn_protocol", scope: !4, file: !4, line: 1406, type: !3256, isLocal: true, isDefinition: true, scopeLine: 1406, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_selected_npn_protocol, variables: !3402)
!3402 = !{!3403, !3404, !3405}
!3403 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3401, file: !4, line: 1406, type: !387)
!3404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !3401, file: !4, line: 1407, type: !567)
!3405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outlen", scope: !3401, file: !4, line: 1408, type: !385)
!3406 = !DISubprogram(name: "PySSL_compression", scope: !4, file: !4, line: 1419, type: !3256, isLocal: true, isDefinition: true, scopeLine: 1419, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_compression, variables: !3407)
!3407 = !{!3408, !3409, !3412}
!3408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3406, file: !4, line: 1419, type: !387)
!3409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "comp_method", scope: !3406, file: !4, line: 1423, type: !3410)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64, align: 64)
!3411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!3412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "short_name", scope: !3406, file: !4, line: 1424, type: !73)
!3413 = !DISubprogram(name: "PySSL_SSLshutdown", scope: !4, file: !4, line: 1796, type: !3256, isLocal: true, isDefinition: true, scopeLine: 1797, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_SSLshutdown, variables: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3425, !3429}
!3415 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3413, file: !4, line: 1796, type: !387)
!3416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !3413, file: !4, line: 1798, type: !88)
!3417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssl_err", scope: !3413, file: !4, line: 1798, type: !88)
!3418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sockstate", scope: !3413, file: !4, line: 1798, type: !88)
!3419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nonblocking", scope: !3413, file: !4, line: 1798, type: !88)
!3420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zeros", scope: !3413, file: !4, line: 1799, type: !88)
!3421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sock", scope: !3413, file: !4, line: 1800, type: !2261)
!3422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3423, file: !4, line: 1817, type: !2130)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !4, line: 1817, column: 9)
!3424 = distinct !DILexicalBlock(scope: !3413, file: !4, line: 1816, column: 15)
!3425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3426, file: !4, line: 1872, type: !49)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !4, line: 1872, column: 12)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !4, line: 1871, column: 18)
!3428 = distinct !DILexicalBlock(scope: !3413, file: !4, line: 1871, column: 9)
!3429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3430, file: !4, line: 1880, type: !49)
!3430 = distinct !DILexicalBlock(scope: !3413, file: !4, line: 1880, column: 8)
!3431 = !DISubprogram(name: "PySSL_tls_unique_cb", scope: !4, file: !4, line: 1892, type: !3256, isLocal: true, isDefinition: true, scopeLine: 1893, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySSLSocket*)* @PySSL_tls_unique_cb, variables: !3432)
!3432 = !{!3433, !3434, !3435, !3437}
!3433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3431, file: !4, line: 1892, type: !387)
!3434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !3431, file: !4, line: 1894, type: !49)
!3435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !3431, file: !4, line: 1895, type: !3436)
!3436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1024, align: 8, elements: !1520)
!3437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !3431, file: !4, line: 1896, type: !138)
!3438 = !DISubprogram(name: "PySSL_get_context", scope: !4, file: !4, line: 1438, type: !3439, isLocal: true, isDefinition: true, scopeLine: 1438, flags: DIFlagPrototyped, isOptimized: true, function: %struct.PySSLContext* (%struct.PySSLSocket*, i8*)* @PySSL_get_context, variables: !3441)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!2092, !387, !48}
!3441 = !{!3442, !3443}
!3442 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3438, file: !4, line: 1438, type: !387)
!3443 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !3438, file: !4, line: 1438, type: !48)
!3444 = !DISubprogram(name: "PySSL_set_context", scope: !4, file: !4, line: 1443, type: !3445, isLocal: true, isDefinition: true, scopeLine: 1444, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySSLSocket*, %struct._object*, i8*)* @PySSL_set_context, variables: !3447)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!88, !387, !49, !48}
!3447 = !{!3448, !3449, !3450, !3451}
!3448 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3444, file: !4, line: 1443, type: !387)
!3449 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !3444, file: !4, line: 1443, type: !49)
!3450 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 3, scope: !3444, file: !4, line: 1444, type: !48)
!3451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3452, file: !4, line: 1453, type: !49)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !4, line: 1453, column: 12)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !4, line: 1446, column: 143)
!3454 = distinct !DILexicalBlock(scope: !3444, file: !4, line: 1446, column: 9)
!3455 = !DISubprogram(name: "PySSL_test_decode_certificate", scope: !4, file: !4, line: 1276, type: !170, isLocal: true, isDefinition: true, scopeLine: 1276, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PySSL_test_decode_certificate, variables: !3456)
!3456 = !{!3457, !3458, !3459, !3460, !3461, !3462, !3463}
!3457 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mod", arg: 1, scope: !3455, file: !4, line: 1276, type: !49)
!3458 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3455, file: !4, line: 1276, type: !49)
!3459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !3455, file: !4, line: 1278, type: !49)
!3460 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !3455, file: !4, line: 1279, type: !49)
!3461 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !3455, file: !4, line: 1280, type: !532)
!3462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cert", scope: !3455, file: !4, line: 1281, type: !1609)
!3463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3464, file: !4, line: 1310, type: !49)
!3464 = distinct !DILexicalBlock(scope: !3455, file: !4, line: 1310, column: 8)
!3465 = !DISubprogram(name: "PySSL_RAND_add", scope: !4, file: !4, line: 3235, type: !170, isLocal: true, isDefinition: true, scopeLine: 3236, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_add, variables: !3466)
!3466 = !{!3467, !3468, !3469, !3470, !3471}
!3467 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3465, file: !4, line: 3235, type: !49)
!3468 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3465, file: !4, line: 3235, type: !49)
!3469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !3465, file: !4, line: 3237, type: !96)
!3470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !3465, file: !4, line: 3238, type: !88)
!3471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entropy", scope: !3465, file: !4, line: 3239, type: !2277)
!3472 = !DISubprogram(name: "PySSL_RAND_bytes", scope: !4, file: !4, line: 3294, type: !170, isLocal: true, isDefinition: true, scopeLine: 3295, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_bytes, variables: !3473)
!3473 = !{!3474, !3475, !3476}
!3474 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3472, file: !4, line: 3294, type: !49)
!3475 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3472, file: !4, line: 3294, type: !49)
!3476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !3472, file: !4, line: 3296, type: !88)
!3477 = !DISubprogram(name: "PySSL_RAND", scope: !4, file: !4, line: 3255, type: !3478, isLocal: true, isDefinition: true, scopeLine: 3256, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32)* @PySSL_RAND, variables: !3480)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!49, !88, !88}
!3480 = !{!3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3490}
!3481 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 1, scope: !3477, file: !4, line: 3255, type: !88)
!3482 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pseudo", arg: 2, scope: !3477, file: !4, line: 3255, type: !88)
!3483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !3477, file: !4, line: 3257, type: !88)
!3484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !3477, file: !4, line: 3258, type: !49)
!3485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !3477, file: !4, line: 3259, type: !140)
!3486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errstr", scope: !3477, file: !4, line: 3260, type: !73)
!3487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !3477, file: !4, line: 3261, type: !49)
!3488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3489, file: !4, line: 3281, type: !49)
!3489 = distinct !DILexicalBlock(scope: !3477, file: !4, line: 3281, column: 8)
!3490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3491, file: !4, line: 3288, type: !49)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !4, line: 3288, column: 12)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !4, line: 3286, column: 26)
!3493 = distinct !DILexicalBlock(scope: !3477, file: !4, line: 3286, column: 9)
!3494 = !DISubprogram(name: "PySSL_RAND_pseudo_bytes", scope: !4, file: !4, line: 3308, type: !170, isLocal: true, isDefinition: true, scopeLine: 3309, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_pseudo_bytes, variables: !3495)
!3495 = !{!3496, !3497, !3498}
!3496 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3494, file: !4, line: 3308, type: !49)
!3497 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3494, file: !4, line: 3308, type: !49)
!3498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !3494, file: !4, line: 3310, type: !88)
!3499 = !DISubprogram(name: "PySSL_RAND_egd", scope: !4, file: !4, line: 3336, type: !170, isLocal: true, isDefinition: true, scopeLine: 3337, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PySSL_RAND_egd, variables: !3500)
!3500 = !{!3501, !3502, !3503, !3504, !3505}
!3501 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3499, file: !4, line: 3336, type: !49)
!3502 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3499, file: !4, line: 3336, type: !49)
!3503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !3499, file: !4, line: 3338, type: !49)
!3504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !3499, file: !4, line: 3339, type: !88)
!3505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3506, file: !4, line: 3346, type: !49)
!3506 = distinct !DILexicalBlock(scope: !3499, file: !4, line: 3346, column: 8)
!3507 = !DISubprogram(name: "PySSL_RAND_status", scope: !4, file: !4, line: 3323, type: !160, isLocal: true, isDefinition: true, scopeLine: 3324, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PySSL_RAND_status, variables: !3508)
!3508 = !{!3509}
!3509 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3507, file: !4, line: 3323, type: !49)
!3510 = !DISubprogram(name: "PySSL_get_default_verify_paths", scope: !4, file: !4, line: 3374, type: !160, isLocal: true, isDefinition: true, scopeLine: 3375, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PySSL_get_default_verify_paths, variables: !3511)
!3511 = !{!3512, !3513, !3514, !3515, !3516, !3517, !3519, !3521, !3523, !3525, !3527, !3530, !3532, !3535, !3537, !3540, !3542}
!3512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3510, file: !4, line: 3374, type: !49)
!3513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ofile_env", scope: !3510, file: !4, line: 3376, type: !49)
!3514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ofile", scope: !3510, file: !4, line: 3377, type: !49)
!3515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "odir_env", scope: !3510, file: !4, line: 3378, type: !49)
!3516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "odir", scope: !3510, file: !4, line: 3379, type: !49)
!3517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !3518, file: !4, line: 3390, type: !73)
!3518 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3390, column: 5)
!3519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !3520, file: !4, line: 3391, type: !73)
!3520 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3391, column: 5)
!3521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !3522, file: !4, line: 3392, type: !73)
!3522 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3392, column: 5)
!3523 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !3524, file: !4, line: 3393, type: !73)
!3524 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3393, column: 5)
!3525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3526, file: !4, line: 3399, type: !49)
!3526 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3399, column: 8)
!3527 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3528, file: !4, line: 3399, type: !49)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !4, line: 3399, column: 101)
!3529 = distinct !DILexicalBlock(scope: !3526, file: !4, line: 3399, column: 67)
!3530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3531, file: !4, line: 3400, type: !49)
!3531 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3400, column: 8)
!3532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3533, file: !4, line: 3400, type: !49)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !4, line: 3400, column: 97)
!3534 = distinct !DILexicalBlock(scope: !3531, file: !4, line: 3400, column: 63)
!3535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3536, file: !4, line: 3401, type: !49)
!3536 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3401, column: 8)
!3537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3538, file: !4, line: 3401, type: !49)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !4, line: 3401, column: 100)
!3539 = distinct !DILexicalBlock(scope: !3536, file: !4, line: 3401, column: 66)
!3540 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3541, file: !4, line: 3402, type: !49)
!3541 = distinct !DILexicalBlock(scope: !3510, file: !4, line: 3402, column: 8)
!3542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3543, file: !4, line: 3402, type: !49)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !4, line: 3402, column: 96)
!3544 = distinct !DILexicalBlock(scope: !3541, file: !4, line: 3402, column: 62)
!3545 = !DISubprogram(name: "PySSL_txt2obj", scope: !4, file: !4, line: 3441, type: !179, isLocal: true, isDefinition: true, scopeLine: 3442, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @PySSL_txt2obj, variables: !3546)
!3546 = !{!3547, !3548, !3549, !3550, !3554, !3555, !3556, !3557}
!3547 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3545, file: !4, line: 3441, type: !49)
!3548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3545, file: !4, line: 3441, type: !49)
!3549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !3545, file: !4, line: 3441, type: !49)
!3550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !3545, file: !4, line: 3443, type: !3551)
!3551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 192, align: 64, elements: !3552)
!3552 = !{!3553}
!3553 = !DISubrange(count: 3)
!3554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3545, file: !4, line: 3444, type: !49)
!3555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "txt", scope: !3545, file: !4, line: 3445, type: !96)
!3556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !3545, file: !4, line: 3446, type: !88)
!3557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !3545, file: !4, line: 3447, type: !558)
!3558 = !DISubprogram(name: "asn1obj2py", scope: !4, file: !4, line: 3407, type: !3559, isLocal: true, isDefinition: true, scopeLine: 3408, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.asn1_object_st*)* @asn1obj2py, variables: !3561)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!49, !558}
!3561 = !{!3562, !3563, !3564, !3565, !3566, !3570}
!3562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !3558, file: !4, line: 3407, type: !558)
!3563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nid", scope: !3558, file: !4, line: 3409, type: !88)
!3564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ln", scope: !3558, file: !4, line: 3410, type: !73)
!3565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sn", scope: !3558, file: !4, line: 3410, type: !73)
!3566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !3558, file: !4, line: 3411, type: !3567)
!3567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 800, align: 8, elements: !3568)
!3568 = !{!3569}
!3569 = !DISubrange(count: 100)
!3570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buflen", scope: !3558, file: !4, line: 3412, type: !88)
!3571 = !DISubprogram(name: "PySSL_nid2obj", scope: !4, file: !4, line: 3469, type: !170, isLocal: true, isDefinition: true, scopeLine: 3470, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PySSL_nid2obj, variables: !3572)
!3572 = !{!3573, !3574, !3575, !3576, !3577}
!3573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3571, file: !4, line: 3469, type: !49)
!3574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3571, file: !4, line: 3469, type: !49)
!3575 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3571, file: !4, line: 3471, type: !49)
!3576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nid", scope: !3571, file: !4, line: 3472, type: !88)
!3577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !3571, file: !4, line: 3473, type: !558)
!3578 = !DISubprogram(name: "_setup_ssl_threads", scope: !4, file: !4, line: 3828, type: !1577, isLocal: true, isDefinition: true, scopeLine: 3828, flags: DIFlagPrototyped, isOptimized: true, function: i32 ()* @_setup_ssl_threads, variables: !3579)
!3579 = !{!3580, !3581}
!3580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3578, file: !4, line: 3830, type: !385)
!3581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !3582, file: !4, line: 3843, type: !385)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !4, line: 3842, column: 46)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !4, line: 3842, column: 17)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !4, line: 3840, column: 48)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !4, line: 3840, column: 9)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !4, line: 3840, column: 9)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !4, line: 3832, column: 35)
!3588 = distinct !DILexicalBlock(scope: !3578, file: !4, line: 3832, column: 9)
!3589 = !DISubprogram(name: "_ssl_thread_locking_function", scope: !4, file: !4, line: 3801, type: !3590, isLocal: true, isDefinition: true, scopeLine: 3802, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, i32, i8*, i32)* @_ssl_thread_locking_function, variables: !3592)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{null, !88, !88, !73, !88}
!3592 = !{!3593, !3594, !3595, !3596}
!3593 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mode", arg: 1, scope: !3589, file: !4, line: 3802, type: !88)
!3594 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !3589, file: !4, line: 3802, type: !88)
!3595 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "file", arg: 3, scope: !3589, file: !4, line: 3802, type: !73)
!3596 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "line", arg: 4, scope: !3589, file: !4, line: 3802, type: !88)
!3597 = !DISubprogram(name: "_ssl_threadid_callback", scope: !4, file: !4, line: 3788, type: !3598, isLocal: true, isDefinition: true, scopeLine: 3789, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.crypto_threadid_st*)* @_ssl_threadid_callback, variables: !3606)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{null, !3600}
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64, align: 64)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYPTO_THREADID", file: !804, line: 433, baseType: !3602)
!3602 = !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_threadid_st", file: !804, line: 429, size: 128, align: 64, elements: !3603)
!3603 = !{!3604, !3605}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3602, file: !804, line: 431, baseType: !48, size: 64, align: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3602, file: !804, line: 432, baseType: !140, size: 64, align: 64, offset: 64)
!3606 = !{!3607}
!3607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "id", arg: 1, scope: !3597, file: !4, line: 3788, type: !3600)
!3608 = !DISubprogram(name: "SSLError_str", scope: !4, file: !4, line: 283, type: !3609, isLocal: true, isDefinition: true, scopeLine: 284, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*)* @SSLError_str, variables: !3628)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!49, !3611}
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64, align: 64)
!3612 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyOSErrorObject", file: !3613, line: 61, baseType: !3614)
!3613 = !DIFile(filename: "./Include/pyerrors.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!3614 = !DICompositeType(tag: DW_TAG_structure_type, file: !3613, line: 51, size: 832, align: 64, elements: !3615)
!3615 = !{!3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !3614, file: !3613, line: 52, baseType: !50, size: 128, align: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !3614, file: !3613, line: 52, baseType: !49, size: 64, align: 64, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3614, file: !3613, line: 52, baseType: !49, size: 64, align: 64, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !3614, file: !3613, line: 52, baseType: !49, size: 64, align: 64, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3614, file: !3613, line: 52, baseType: !49, size: 64, align: 64, offset: 320)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !3614, file: !3613, line: 52, baseType: !49, size: 64, align: 64, offset: 384)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !3614, file: !3613, line: 52, baseType: !75, size: 8, align: 8, offset: 448)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "myerrno", scope: !3614, file: !3613, line: 53, baseType: !49, size: 64, align: 64, offset: 512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "strerror", scope: !3614, file: !3613, line: 54, baseType: !49, size: 64, align: 64, offset: 576)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3614, file: !3613, line: 55, baseType: !49, size: 64, align: 64, offset: 640)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "filename2", scope: !3614, file: !3613, line: 56, baseType: !49, size: 64, align: 64, offset: 704)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !3614, file: !3613, line: 60, baseType: !55, size: 64, align: 64, offset: 768)
!3628 = !{!3629}
!3629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3608, file: !4, line: 283, type: !3611)
!3630 = !DISubprogram(name: "parse_openssl_version", scope: !4, file: !4, line: 3882, type: !3631, isLocal: true, isDefinition: true, scopeLine: 3886, flags: DIFlagPrototyped, isOptimized: true, function: void (i64, i32*, i32*, i32*, i32*, i32*)* @parse_openssl_version, variables: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{null, !140, !764, !764, !764, !764, !764}
!3633 = !{!3634, !3635, !3636, !3637, !3638, !3639}
!3634 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "libver", arg: 1, scope: !3630, file: !4, line: 3882, type: !140)
!3635 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "major", arg: 2, scope: !3630, file: !4, line: 3883, type: !764)
!3636 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minor", arg: 3, scope: !3630, file: !4, line: 3883, type: !764)
!3637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fix", arg: 4, scope: !3630, file: !4, line: 3884, type: !764)
!3638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "patch", arg: 5, scope: !3630, file: !4, line: 3884, type: !764)
!3639 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !3630, file: !4, line: 3885, type: !764)
!3640 = !{!3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3656, !3657, !3665, !3666, !3670, !3674, !3678, !3681, !3682, !3687, !3691, !3695, !3699, !3703, !3707, !3711, !3713, !3717, !3738, !3742, !3746, !3750, !3754, !3758, !3762, !3766, !3770, !3774, !3778, !3779, !3786, !3790, !3800, !3802, !3806, !3810, !3814, !3818, !3823}
!3641 = !DIGlobalVariable(name: "PySocketModule", scope: !0, file: !4, line: 48, type: !2295, isLocal: true, isDefinition: true, variable: %struct.PySocketModule_APIObject* @PySocketModule)
!3642 = !DIGlobalVariable(name: "PySSLErrorObject", scope: !0, file: !4, line: 67, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @PySSLErrorObject)
!3643 = !DIGlobalVariable(name: "PySSLZeroReturnErrorObject", scope: !0, file: !4, line: 68, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @PySSLZeroReturnErrorObject)
!3644 = !DIGlobalVariable(name: "PySSLWantReadErrorObject", scope: !0, file: !4, line: 69, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @PySSLWantReadErrorObject)
!3645 = !DIGlobalVariable(name: "PySSLWantWriteErrorObject", scope: !0, file: !4, line: 70, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @PySSLWantWriteErrorObject)
!3646 = !DIGlobalVariable(name: "PySSLSyscallErrorObject", scope: !0, file: !4, line: 71, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @PySSLSyscallErrorObject)
!3647 = !DIGlobalVariable(name: "PySSLEOFErrorObject", scope: !0, file: !4, line: 72, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @PySSLEOFErrorObject)
!3648 = !DIGlobalVariable(name: "err_codes_to_names", scope: !0, file: !4, line: 75, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @err_codes_to_names)
!3649 = !DIGlobalVariable(name: "err_names_to_codes", scope: !0, file: !4, line: 76, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @err_names_to_codes)
!3650 = !DIGlobalVariable(name: "lib_codes_to_names", scope: !0, file: !4, line: 77, type: !49, isLocal: true, isDefinition: true, variable: %struct._object** @lib_codes_to_names)
!3651 = !DIGlobalVariable(name: "PySSLContext_Type", scope: !0, file: !4, line: 3188, type: !2300, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PySSLContext_Type)
!3652 = !DIGlobalVariable(name: "context_methods", scope: !0, file: !4, line: 3158, type: !3653, isLocal: true, isDefinition: true, variable: [13 x %struct.PyMethodDef]* @context_methods)
!3653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 3328, align: 64, elements: !3654)
!3654 = !{!3655}
!3655 = !DISubrange(count: 13)
!3656 = !DIGlobalVariable(name: "_ssl_locks_count", scope: !0, file: !4, line: 154, type: !385, isLocal: true, isDefinition: true, variable: i32* @_ssl_locks_count)
!3657 = !DIGlobalVariable(name: "PyId_reason", scope: !2507, file: !4, line: 314, type: !3658, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @fill_and_set_sslerror.PyId_reason)
!3658 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !51, line: 144, baseType: !3659)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !51, line: 140, size: 192, align: 64, elements: !3660)
!3660 = !{!3661, !3663, !3664}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3659, file: !51, line: 141, baseType: !3662, size: 64, align: 64)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64, align: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3659, file: !51, line: 142, baseType: !73, size: 64, align: 64, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3659, file: !51, line: 143, baseType: !49, size: 64, align: 64, offset: 128)
!3665 = !DIGlobalVariable(name: "PyId_library", scope: !2507, file: !4, line: 315, type: !3658, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @fill_and_set_sslerror.PyId_library)
!3666 = !DIGlobalVariable(name: "PySSL_set_servername_callback_doc", scope: !0, file: !4, line: 2993, type: !3667, isLocal: true, isDefinition: true, variable: [349 x i8]* @PySSL_set_servername_callback_doc)
!3667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 2792, align: 8, elements: !3668)
!3668 = !{!3669}
!3669 = !DISubrange(count: 349)
!3670 = !DIGlobalVariable(name: "PySSL_get_stats_doc", scope: !0, file: !4, line: 3038, type: !3671, isLocal: true, isDefinition: true, variable: [316 x i8]* @PySSL_get_stats_doc)
!3671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 2528, align: 8, elements: !3672)
!3672 = !{!3673}
!3673 = !DISubrange(count: 316)
!3674 = !DIGlobalVariable(name: "PySSL_get_ca_certs_doc", scope: !0, file: !4, line: 3081, type: !3675, isLocal: true, isDefinition: true, variable: [305 x i8]* @PySSL_get_ca_certs_doc)
!3675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 2440, align: 8, elements: !3676)
!3676 = !{!3677}
!3677 = !DISubrange(count: 305)
!3678 = !DIGlobalVariable(name: "context_getsetlist", scope: !0, file: !4, line: 3144, type: !3679, isLocal: true, isDefinition: true, variable: [5 x %struct.PyGetSetDef]* @context_getsetlist)
!3679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3680, size: 1600, align: 64, elements: !1389)
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !338, line: 17, baseType: !337)
!3681 = !DIGlobalVariable(name: "PySSLSocket_Type", scope: !0, file: !4, line: 1955, type: !2300, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PySSLSocket_Type)
!3682 = !DIGlobalVariable(name: "PySSLMethods", scope: !0, file: !4, line: 1931, type: !3683, isLocal: true, isDefinition: true, variable: [11 x %struct.PyMethodDef]* @PySSLMethods)
!3683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3684, size: 2816, align: 64, elements: !3685)
!3684 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !325, line: 47, baseType: !324)
!3685 = !{!3686}
!3686 = !DISubrange(count: 11)
!3687 = !DIGlobalVariable(name: "PySSL_SSLwrite_doc", scope: !0, file: !4, line: 1644, type: !3688, isLocal: true, isDefinition: true, variable: [96 x i8]* @PySSL_SSLwrite_doc)
!3688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 768, align: 8, elements: !3689)
!3689 = !{!3690}
!3690 = !DISubrange(count: 96)
!3691 = !DIGlobalVariable(name: "PySSL_SSLread_doc", scope: !0, file: !4, line: 1791, type: !3692, isLocal: true, isDefinition: true, variable: [65 x i8]* @PySSL_SSLread_doc)
!3692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 520, align: 8, elements: !3693)
!3693 = !{!3694}
!3694 = !DISubrange(count: 65)
!3695 = !DIGlobalVariable(name: "PySSL_SSLpending_doc", scope: !0, file: !4, line: 1663, type: !3696, isLocal: true, isDefinition: true, variable: [114 x i8]* @PySSL_SSLpending_doc)
!3696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 912, align: 8, elements: !3697)
!3697 = !{!3698}
!3698 = !DISubrange(count: 114)
!3699 = !DIGlobalVariable(name: "PySSL_peercert_doc", scope: !0, file: !4, line: 1345, type: !3700, isLocal: true, isDefinition: true, variable: [478 x i8]* @PySSL_peercert_doc)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 3824, align: 8, elements: !3701)
!3701 = !{!3702}
!3702 = !DISubrange(count: 478)
!3703 = !DIGlobalVariable(name: "PySSL_SSLshutdown_doc", scope: !0, file: !4, line: 1884, type: !3704, isLocal: true, isDefinition: true, variable: [118 x i8]* @PySSL_SSLshutdown_doc)
!3704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 944, align: 8, elements: !3705)
!3705 = !{!3706}
!3706 = !DISubrange(count: 118)
!3707 = !DIGlobalVariable(name: "PySSL_tls_unique_cb_doc", scope: !0, file: !4, line: 1916, type: !3708, isLocal: true, isDefinition: true, variable: [157 x i8]* @PySSL_tls_unique_cb_doc)
!3708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1256, align: 8, elements: !3709)
!3709 = !{!3710}
!3710 = !DISubrange(count: 157)
!3711 = !DIGlobalVariable(name: "ssl_getsetlist", scope: !0, file: !4, line: 1925, type: !3712, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @ssl_getsetlist)
!3712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3680, size: 640, align: 64, elements: !750)
!3713 = !DIGlobalVariable(name: "PySSL_set_context_doc", scope: !0, file: !4, line: 1465, type: !3714, isLocal: true, isDefinition: true, variable: [307 x i8]* @PySSL_set_context_doc)
!3714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 2456, align: 8, elements: !3715)
!3715 = !{!3716}
!3716 = !DISubrange(count: 307)
!3717 = !DIGlobalVariable(name: "_sslmodule", scope: !0, file: !4, line: 3868, type: !3718, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @_sslmodule)
!3718 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !3719, line: 47, size: 832, align: 64, elements: !3720)
!3719 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!3720 = !{!3721, !3729, !3730, !3731, !3732, !3734, !3735, !3736, !3737}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !3718, file: !3719, line: 48, baseType: !3722, size: 320, align: 64)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !3719, line: 38, baseType: !3723)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !3719, line: 33, size: 320, align: 64, elements: !3724)
!3724 = !{!3725, !3726, !3727, !3728}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !3723, file: !3719, line: 34, baseType: !50, size: 128, align: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !3723, file: !3719, line: 35, baseType: !2273, size: 64, align: 64, offset: 128)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !3723, file: !3719, line: 36, baseType: !55, size: 64, align: 64, offset: 192)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !3723, file: !3719, line: 37, baseType: !49, size: 64, align: 64, offset: 256)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !3718, file: !3719, line: 49, baseType: !73, size: 64, align: 64, offset: 320)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !3718, file: !3719, line: 50, baseType: !73, size: 64, align: 64, offset: 384)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !3718, file: !3719, line: 51, baseType: !55, size: 64, align: 64, offset: 448)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !3718, file: !3719, line: 52, baseType: !3733, size: 64, align: 64, offset: 512)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64, align: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !3718, file: !3719, line: 53, baseType: !186, size: 64, align: 64, offset: 576)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !3718, file: !3719, line: 54, baseType: !303, size: 64, align: 64, offset: 640)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !3718, file: !3719, line: 55, baseType: !186, size: 64, align: 64, offset: 704)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !3718, file: !3719, line: 56, baseType: !373, size: 64, align: 64, offset: 768)
!3738 = !DIGlobalVariable(name: "module_doc", scope: !0, file: !4, line: 3863, type: !3739, isLocal: true, isDefinition: true, variable: [91 x i8]* @module_doc)
!3739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 728, align: 8, elements: !3740)
!3740 = !{!3741}
!3741 = !DISubrange(count: 91)
!3742 = !DIGlobalVariable(name: "PySSL_methods", scope: !0, file: !4, line: 3747, type: !3743, isLocal: true, isDefinition: true, variable: [10 x %struct.PyMethodDef]* @PySSL_methods)
!3743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3684, size: 2560, align: 64, elements: !3744)
!3744 = !{!3745}
!3745 = !DISubrange(count: 10)
!3746 = !DIGlobalVariable(name: "PySSL_RAND_add_doc", scope: !0, file: !4, line: 3248, type: !3747, isLocal: true, isDefinition: true, variable: [154 x i8]* @PySSL_RAND_add_doc)
!3747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1232, align: 8, elements: !3748)
!3748 = !{!3749}
!3749 = !DISubrange(count: 154)
!3750 = !DIGlobalVariable(name: "PySSL_RAND_bytes_doc", scope: !0, file: !4, line: 3302, type: !3751, isLocal: true, isDefinition: true, variable: [81 x i8]* @PySSL_RAND_bytes_doc)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 648, align: 8, elements: !3752)
!3752 = !{!3753}
!3753 = !DISubrange(count: 81)
!3754 = !DIGlobalVariable(name: "PySSL_RAND_pseudo_bytes_doc", scope: !0, file: !4, line: 3316, type: !3755, isLocal: true, isDefinition: true, variable: [160 x i8]* @PySSL_RAND_pseudo_bytes_doc)
!3755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1280, align: 8, elements: !3756)
!3756 = !{!3757}
!3757 = !DISubrange(count: 160)
!3758 = !DIGlobalVariable(name: "PySSL_RAND_egd_doc", scope: !0, file: !4, line: 3356, type: !3759, isLocal: true, isDefinition: true, variable: [222 x i8]* @PySSL_RAND_egd_doc)
!3759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1776, align: 8, elements: !3760)
!3760 = !{!3761}
!3761 = !DISubrange(count: 222)
!3762 = !DIGlobalVariable(name: "PySSL_RAND_status_doc", scope: !0, file: !4, line: 3328, type: !3763, isLocal: true, isDefinition: true, variable: [202 x i8]* @PySSL_RAND_status_doc)
!3763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1616, align: 8, elements: !3764)
!3764 = !{!3765}
!3765 = !DISubrange(count: 202)
!3766 = !DIGlobalVariable(name: "PySSL_get_default_verify_paths_doc", scope: !0, file: !4, line: 3366, type: !3767, isLocal: true, isDefinition: true, variable: [229 x i8]* @PySSL_get_default_verify_paths_doc)
!3767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1832, align: 8, elements: !3768)
!3768 = !{!3769}
!3769 = !DISubrange(count: 229)
!3770 = !DIGlobalVariable(name: "PySSL_txt2obj_doc", scope: !0, file: !4, line: 3433, type: !3771, isLocal: true, isDefinition: true, variable: [216 x i8]* @PySSL_txt2obj_doc)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 1728, align: 8, elements: !3772)
!3772 = !{!3773}
!3773 = !DISubrange(count: 216)
!3774 = !DIGlobalVariable(name: "PySSL_nid2obj_doc", scope: !0, file: !4, line: 3463, type: !3775, isLocal: true, isDefinition: true, variable: [117 x i8]* @PySSL_nid2obj_doc)
!3775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 936, align: 8, elements: !3776)
!3776 = !{!3777}
!3777 = !DISubrange(count: 117)
!3778 = !DIGlobalVariable(name: "_ssl_locks", scope: !0, file: !4, line: 3783, type: !2278, isLocal: true, isDefinition: true, variable: i8*** @_ssl_locks)
!3779 = !DIGlobalVariable(name: "sslerror_type_slots", scope: !0, file: !4, line: 293, type: !3780, isLocal: true, isDefinition: true, variable: [4 x %struct.PyType_Slot]* @sslerror_type_slots)
!3780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3781, size: 512, align: 64, elements: !1786)
!3781 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyType_Slot", file: !51, line: 428, baseType: !3782)
!3782 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 425, size: 128, align: 64, elements: !3783)
!3783 = !{!3784, !3785}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3782, file: !51, line: 426, baseType: !88, size: 32, align: 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "pfunc", scope: !3782, file: !51, line: 427, baseType: !48, size: 64, align: 64, offset: 64)
!3786 = !DIGlobalVariable(name: "SSLError_doc", scope: !0, file: !4, line: 262, type: !3787, isLocal: true, isDefinition: true, variable: [45 x i8]* @SSLError_doc)
!3787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 360, align: 8, elements: !3788)
!3788 = !{!3789}
!3789 = !DISubrange(count: 45)
!3790 = !DIGlobalVariable(name: "sslerror_type_spec", scope: !0, file: !4, line: 300, type: !3791, isLocal: true, isDefinition: true, variable: %struct.PyType_Spec* @sslerror_type_spec)
!3791 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyType_Spec", file: !51, line: 436, baseType: !3792)
!3792 = !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 430, size: 256, align: 64, elements: !3793)
!3793 = !{!3794, !3795, !3796, !3797, !3798}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3792, file: !51, line: 431, baseType: !73, size: 64, align: 64)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "basicsize", scope: !3792, file: !51, line: 432, baseType: !88, size: 32, align: 32, offset: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !3792, file: !51, line: 433, baseType: !88, size: 32, align: 32, offset: 96)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3792, file: !51, line: 434, baseType: !385, size: 32, align: 32, offset: 128)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !3792, file: !51, line: 435, baseType: !3799, size: 64, align: 64, offset: 192)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64, align: 64)
!3800 = !DIGlobalVariable(name: "SSLZeroReturnError_doc", scope: !0, file: !4, line: 265, type: !3801, isLocal: true, isDefinition: true, variable: [32 x i8]* @SSLZeroReturnError_doc)
!3801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 256, align: 8, elements: !1225)
!3802 = !DIGlobalVariable(name: "SSLWantReadError_doc", scope: !0, file: !4, line: 268, type: !3803, isLocal: true, isDefinition: true, variable: [97 x i8]* @SSLWantReadError_doc)
!3803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 776, align: 8, elements: !3804)
!3804 = !{!3805}
!3805 = !DISubrange(count: 97)
!3806 = !DIGlobalVariable(name: "SSLWantWriteError_doc", scope: !0, file: !4, line: 272, type: !3807, isLocal: true, isDefinition: true, variable: [98 x i8]* @SSLWantWriteError_doc)
!3807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 784, align: 8, elements: !3808)
!3808 = !{!3809}
!3809 = !DISubrange(count: 98)
!3810 = !DIGlobalVariable(name: "SSLSyscallError_doc", scope: !0, file: !4, line: 276, type: !3811, isLocal: true, isDefinition: true, variable: [44 x i8]* @SSLSyscallError_doc)
!3811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 352, align: 8, elements: !3812)
!3812 = !{!3813}
!3813 = !DISubrange(count: 44)
!3814 = !DIGlobalVariable(name: "SSLEOFError_doc", scope: !0, file: !4, line: 279, type: !3815, isLocal: true, isDefinition: true, variable: [40 x i8]* @SSLEOFError_doc)
!3815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 320, align: 8, elements: !3816)
!3816 = !{!3817}
!3817 = !DISubrange(count: 40)
!3818 = !DIGlobalVariable(name: "error_codes", scope: !0, file: !3819, line: 11, type: !3820, isLocal: true, isDefinition: true, variable: [329 x %struct.py_ssl_error_code]* @error_codes)
!3819 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_ssl_data.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!3820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2305, size: 42112, align: 64, elements: !3821)
!3821 = !{!3822}
!3822 = !DISubrange(count: 329)
!3823 = !DIGlobalVariable(name: "library_codes", scope: !0, file: !3819, line: 4, type: !3824, isLocal: true, isDefinition: true, variable: [4 x %struct.py_ssl_library_code]* @library_codes)
!3824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2312, size: 512, align: 64, elements: !1786)
!3825 = !{i32 2, !"Dwarf Version", i32 4}
!3826 = !{i32 2, !"Debug Info Version", i32 3}
!3827 = !{i32 1, !"PIC Level", i32 2}
!3828 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!3829 = !DILocation(line: 3901, column: 5, scope: !2282)
!3830 = !DIExpression()
!3831 = !DILocation(line: 3901, column: 15, scope: !2282)
!3832 = !DILocation(line: 3901, column: 19, scope: !2282)
!3833 = !DILocation(line: 3901, column: 23, scope: !2282)
!3834 = !DILocation(line: 3902, column: 5, scope: !2282)
!3835 = !DILocation(line: 3902, column: 19, scope: !2282)
!3836 = !DILocation(line: 3903, column: 5, scope: !2282)
!3837 = !DILocation(line: 3903, column: 18, scope: !2282)
!3838 = !DILocation(line: 3903, column: 25, scope: !2282)
!3839 = !DILocation(line: 3903, column: 32, scope: !2282)
!3840 = !DILocation(line: 3903, column: 37, scope: !2282)
!3841 = !DILocation(line: 3903, column: 44, scope: !2282)
!3842 = !DILocation(line: 3904, column: 5, scope: !2282)
!3843 = !DILocation(line: 3904, column: 31, scope: !2282)
!3844 = !DILocation(line: 3905, column: 5, scope: !2282)
!3845 = !DILocation(line: 3905, column: 31, scope: !2282)
!3846 = !DILocation(line: 3906, column: 5, scope: !2282)
!3847 = !DILocation(line: 3906, column: 33, scope: !2282)
!3848 = !DILocation(line: 3908, column: 9, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3908, column: 9)
!3850 = !DILocation(line: 3908, column: 42, scope: !3849)
!3851 = !DILocation(line: 3908, column: 9, scope: !2282)
!3852 = !DILocation(line: 3909, column: 9, scope: !3849)
!3853 = !DILocation(line: 3910, column: 9, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3910, column: 9)
!3855 = !DILocation(line: 3910, column: 41, scope: !3854)
!3856 = !DILocation(line: 3910, column: 9, scope: !2282)
!3857 = !DILocation(line: 3911, column: 9, scope: !3854)
!3858 = !DILocation(line: 3913, column: 9, scope: !2282)
!3859 = !DILocation(line: 3913, column: 7, scope: !2282)
!3860 = !{!3861, !3861, i64 0}
!3861 = !{!"any pointer", !3862, i64 0}
!3862 = !{!"omnipotent char", !3863, i64 0}
!3863 = !{!"Simple C/C++ TBAA"}
!3864 = !DILocation(line: 3914, column: 9, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3914, column: 9)
!3866 = !DILocation(line: 3914, column: 11, scope: !3865)
!3867 = !DILocation(line: 3914, column: 9, scope: !2282)
!3868 = !DILocation(line: 3915, column: 9, scope: !3865)
!3869 = !DILocation(line: 3916, column: 26, scope: !2282)
!3870 = !DILocation(line: 3916, column: 9, scope: !2282)
!3871 = !DILocation(line: 3916, column: 7, scope: !2282)
!3872 = !DILocation(line: 3919, column: 18, scope: !2282)
!3873 = !DILocation(line: 3919, column: 16, scope: !2282)
!3874 = !DILocation(line: 3920, column: 10, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3920, column: 9)
!3876 = !DILocation(line: 3920, column: 9, scope: !2282)
!3877 = !DILocation(line: 3921, column: 9, scope: !3875)
!3878 = !DILocation(line: 3922, column: 23, scope: !2282)
!3879 = !DILocation(line: 3922, column: 22, scope: !2282)
!3880 = !{i64 0, i64 8, !3860, i64 8, i64 8, !3860, i64 16, i64 8, !3860}
!3881 = !DILocation(line: 3925, column: 5, scope: !2282)
!3882 = !DILocation(line: 3926, column: 5, scope: !2282)
!3883 = !DILocation(line: 3929, column: 10, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3929, column: 9)
!3885 = !DILocation(line: 3929, column: 9, scope: !2282)
!3886 = !DILocation(line: 3930, column: 9, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3884, file: !4, line: 3929, column: 32)
!3888 = !DILocation(line: 3933, column: 5, scope: !2282)
!3889 = !DILocation(line: 3936, column: 36, scope: !2282)
!3890 = !DILocation(line: 3936, column: 34, scope: !2282)
!3891 = !{!3892, !3861, i64 8}
!3892 = !{!"", !3893, i64 0, !3861, i64 8}
!3893 = !{!"int", !3862, i64 0}
!3894 = !DILocation(line: 3937, column: 24, scope: !2282)
!3895 = !DILocation(line: 3937, column: 22, scope: !2282)
!3896 = !DILocation(line: 3938, column: 9, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3938, column: 9)
!3898 = !DILocation(line: 3938, column: 26, scope: !3897)
!3899 = !DILocation(line: 3938, column: 9, scope: !2282)
!3900 = !DILocation(line: 3939, column: 9, scope: !3897)
!3901 = !DILocation(line: 3943, column: 9, scope: !2282)
!3902 = !DILocation(line: 3941, column: 34, scope: !2282)
!3903 = !DILocation(line: 3941, column: 32, scope: !2282)
!3904 = !DILocation(line: 3946, column: 9, scope: !2282)
!3905 = !DILocation(line: 3944, column: 32, scope: !2282)
!3906 = !DILocation(line: 3944, column: 30, scope: !2282)
!3907 = !DILocation(line: 3949, column: 9, scope: !2282)
!3908 = !DILocation(line: 3947, column: 33, scope: !2282)
!3909 = !DILocation(line: 3947, column: 31, scope: !2282)
!3910 = !DILocation(line: 3952, column: 9, scope: !2282)
!3911 = !DILocation(line: 3950, column: 31, scope: !2282)
!3912 = !DILocation(line: 3950, column: 29, scope: !2282)
!3913 = !DILocation(line: 3955, column: 9, scope: !2282)
!3914 = !DILocation(line: 3953, column: 27, scope: !2282)
!3915 = !DILocation(line: 3953, column: 25, scope: !2282)
!3916 = !DILocation(line: 3956, column: 9, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3956, column: 9)
!3918 = !DILocation(line: 3956, column: 36, scope: !3917)
!3919 = !DILocation(line: 3957, column: 9, scope: !3917)
!3920 = !DILocation(line: 3957, column: 12, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3917, file: !4, discriminator: 1)
!3922 = !DILocation(line: 3957, column: 37, scope: !3917)
!3923 = !DILocation(line: 3958, column: 9, scope: !3917)
!3924 = !DILocation(line: 3958, column: 12, scope: !3921)
!3925 = !DILocation(line: 3958, column: 38, scope: !3917)
!3926 = !DILocation(line: 3959, column: 9, scope: !3917)
!3927 = !DILocation(line: 3959, column: 12, scope: !3921)
!3928 = !DILocation(line: 3959, column: 36, scope: !3917)
!3929 = !DILocation(line: 3960, column: 9, scope: !3917)
!3930 = !DILocation(line: 3960, column: 12, scope: !3921)
!3931 = !DILocation(line: 3960, column: 32, scope: !3917)
!3932 = !DILocation(line: 3956, column: 9, scope: !2282)
!3933 = !DILocation(line: 3961, column: 9, scope: !3917)
!3934 = !DILocation(line: 3962, column: 30, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3962, column: 9)
!3936 = !DILocation(line: 3962, column: 45, scope: !3935)
!3937 = !DILocation(line: 3962, column: 9, scope: !3935)
!3938 = !DILocation(line: 3962, column: 63, scope: !3935)
!3939 = !DILocation(line: 3963, column: 9, scope: !3935)
!3940 = !DILocation(line: 3963, column: 33, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !3935, file: !4, discriminator: 1)
!3942 = !DILocation(line: 3963, column: 58, scope: !3935)
!3943 = !DILocation(line: 3963, column: 12, scope: !3935)
!3944 = !DILocation(line: 3963, column: 86, scope: !3935)
!3945 = !DILocation(line: 3964, column: 9, scope: !3935)
!3946 = !DILocation(line: 3964, column: 33, scope: !3941)
!3947 = !DILocation(line: 3964, column: 56, scope: !3935)
!3948 = !DILocation(line: 3964, column: 12, scope: !3935)
!3949 = !DILocation(line: 3964, column: 82, scope: !3935)
!3950 = !DILocation(line: 3965, column: 9, scope: !3935)
!3951 = !DILocation(line: 3965, column: 33, scope: !3941)
!3952 = !DILocation(line: 3965, column: 57, scope: !3935)
!3953 = !DILocation(line: 3965, column: 12, scope: !3935)
!3954 = !DILocation(line: 3965, column: 84, scope: !3935)
!3955 = !DILocation(line: 3966, column: 9, scope: !3935)
!3956 = !DILocation(line: 3966, column: 33, scope: !3941)
!3957 = !DILocation(line: 3966, column: 55, scope: !3935)
!3958 = !DILocation(line: 3966, column: 12, scope: !3935)
!3959 = !DILocation(line: 3966, column: 80, scope: !3935)
!3960 = !DILocation(line: 3967, column: 9, scope: !3935)
!3961 = !DILocation(line: 3967, column: 33, scope: !3941)
!3962 = !DILocation(line: 3967, column: 51, scope: !3935)
!3963 = !DILocation(line: 3967, column: 12, scope: !3935)
!3964 = !DILocation(line: 3967, column: 72, scope: !3935)
!3965 = !DILocation(line: 3962, column: 9, scope: !2282)
!3966 = !DILocation(line: 3968, column: 9, scope: !3935)
!3967 = !DILocation(line: 3969, column: 30, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3969, column: 9)
!3969 = !DILocation(line: 3969, column: 9, scope: !3968)
!3970 = !DILocation(line: 3970, column: 62, scope: !3968)
!3971 = !DILocation(line: 3969, column: 9, scope: !2282)
!3972 = !DILocation(line: 3971, column: 9, scope: !3968)
!3973 = !DILocation(line: 3972, column: 30, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 3972, column: 9)
!3975 = !DILocation(line: 3972, column: 9, scope: !3974)
!3976 = !DILocation(line: 3973, column: 61, scope: !3974)
!3977 = !DILocation(line: 3972, column: 9, scope: !2282)
!3978 = !DILocation(line: 3974, column: 9, scope: !3974)
!3979 = !DILocation(line: 3975, column: 29, scope: !2282)
!3980 = !DILocation(line: 3975, column: 5, scope: !2282)
!3981 = !DILocation(line: 3977, column: 29, scope: !2282)
!3982 = !DILocation(line: 3977, column: 5, scope: !2282)
!3983 = !DILocation(line: 3979, column: 29, scope: !2282)
!3984 = !DILocation(line: 3979, column: 5, scope: !2282)
!3985 = !DILocation(line: 3981, column: 29, scope: !2282)
!3986 = !DILocation(line: 3981, column: 5, scope: !2282)
!3987 = !DILocation(line: 3983, column: 29, scope: !2282)
!3988 = !DILocation(line: 3983, column: 5, scope: !2282)
!3989 = !DILocation(line: 3985, column: 29, scope: !2282)
!3990 = !DILocation(line: 3985, column: 5, scope: !2282)
!3991 = !DILocation(line: 3987, column: 29, scope: !2282)
!3992 = !DILocation(line: 3987, column: 5, scope: !2282)
!3993 = !DILocation(line: 3990, column: 29, scope: !2282)
!3994 = !DILocation(line: 3990, column: 5, scope: !2282)
!3995 = !DILocation(line: 3992, column: 29, scope: !2282)
!3996 = !DILocation(line: 3992, column: 5, scope: !2282)
!3997 = !DILocation(line: 3995, column: 29, scope: !2282)
!3998 = !DILocation(line: 3995, column: 5, scope: !2282)
!3999 = !DILocation(line: 3997, column: 29, scope: !2282)
!4000 = !DILocation(line: 3997, column: 5, scope: !2282)
!4001 = !DILocation(line: 3999, column: 29, scope: !2282)
!4002 = !DILocation(line: 3999, column: 5, scope: !2282)
!4003 = !DILocation(line: 4002, column: 29, scope: !2282)
!4004 = !DILocation(line: 4002, column: 5, scope: !2282)
!4005 = !DILocation(line: 4004, column: 29, scope: !2282)
!4006 = !DILocation(line: 4004, column: 5, scope: !2282)
!4007 = !DILocation(line: 4006, column: 29, scope: !2282)
!4008 = !DILocation(line: 4006, column: 5, scope: !2282)
!4009 = !DILocation(line: 4008, column: 29, scope: !2282)
!4010 = !DILocation(line: 4008, column: 5, scope: !2282)
!4011 = !DILocation(line: 4019, column: 29, scope: !2282)
!4012 = !DILocation(line: 4019, column: 5, scope: !2282)
!4013 = !DILocation(line: 4020, column: 29, scope: !2282)
!4014 = !DILocation(line: 4020, column: 5, scope: !2282)
!4015 = !DILocation(line: 4021, column: 29, scope: !2282)
!4016 = !DILocation(line: 4021, column: 5, scope: !2282)
!4017 = !DILocation(line: 4022, column: 29, scope: !2282)
!4018 = !DILocation(line: 4022, column: 5, scope: !2282)
!4019 = !DILocation(line: 4023, column: 29, scope: !2282)
!4020 = !DILocation(line: 4023, column: 5, scope: !2282)
!4021 = !DILocation(line: 4024, column: 29, scope: !2282)
!4022 = !DILocation(line: 4024, column: 5, scope: !2282)
!4023 = !DILocation(line: 4025, column: 29, scope: !2282)
!4024 = !DILocation(line: 4025, column: 5, scope: !2282)
!4025 = !DILocation(line: 4026, column: 29, scope: !2282)
!4026 = !DILocation(line: 4026, column: 5, scope: !2282)
!4027 = !DILocation(line: 4027, column: 29, scope: !2282)
!4028 = !DILocation(line: 4027, column: 5, scope: !2282)
!4029 = !DILocation(line: 4028, column: 29, scope: !2282)
!4030 = !DILocation(line: 4028, column: 5, scope: !2282)
!4031 = !DILocation(line: 4029, column: 29, scope: !2282)
!4032 = !DILocation(line: 4029, column: 5, scope: !2282)
!4033 = !DILocation(line: 4030, column: 29, scope: !2282)
!4034 = !DILocation(line: 4030, column: 5, scope: !2282)
!4035 = !DILocation(line: 4031, column: 29, scope: !2282)
!4036 = !DILocation(line: 4031, column: 5, scope: !2282)
!4037 = !DILocation(line: 4032, column: 29, scope: !2282)
!4038 = !DILocation(line: 4032, column: 5, scope: !2282)
!4039 = !DILocation(line: 4033, column: 29, scope: !2282)
!4040 = !DILocation(line: 4033, column: 5, scope: !2282)
!4041 = !DILocation(line: 4034, column: 29, scope: !2282)
!4042 = !DILocation(line: 4034, column: 5, scope: !2282)
!4043 = !DILocation(line: 4035, column: 29, scope: !2282)
!4044 = !DILocation(line: 4035, column: 5, scope: !2282)
!4045 = !DILocation(line: 4036, column: 29, scope: !2282)
!4046 = !DILocation(line: 4036, column: 5, scope: !2282)
!4047 = !DILocation(line: 4037, column: 29, scope: !2282)
!4048 = !DILocation(line: 4037, column: 5, scope: !2282)
!4049 = !DILocation(line: 4038, column: 29, scope: !2282)
!4050 = !DILocation(line: 4038, column: 5, scope: !2282)
!4051 = !DILocation(line: 4039, column: 29, scope: !2282)
!4052 = !DILocation(line: 4039, column: 5, scope: !2282)
!4053 = !DILocation(line: 4042, column: 29, scope: !2282)
!4054 = !DILocation(line: 4042, column: 5, scope: !2282)
!4055 = !DILocation(line: 4045, column: 29, scope: !2282)
!4056 = !DILocation(line: 4045, column: 5, scope: !2282)
!4057 = !DILocation(line: 4048, column: 29, scope: !2282)
!4058 = !DILocation(line: 4048, column: 5, scope: !2282)
!4059 = !DILocation(line: 4051, column: 29, scope: !2282)
!4060 = !DILocation(line: 4051, column: 5, scope: !2282)
!4061 = !DILocation(line: 4054, column: 29, scope: !2282)
!4062 = !DILocation(line: 4054, column: 5, scope: !2282)
!4063 = !DILocation(line: 4057, column: 29, scope: !2282)
!4064 = !DILocation(line: 4057, column: 5, scope: !2282)
!4065 = !DILocation(line: 4064, column: 29, scope: !2282)
!4066 = !DILocation(line: 4064, column: 5, scope: !2282)
!4067 = !DILocation(line: 4067, column: 29, scope: !2282)
!4068 = !DILocation(line: 4067, column: 5, scope: !2282)
!4069 = !DILocation(line: 4069, column: 29, scope: !2282)
!4070 = !DILocation(line: 4069, column: 5, scope: !2282)
!4071 = !DILocation(line: 4071, column: 29, scope: !2282)
!4072 = !DILocation(line: 4071, column: 5, scope: !2282)
!4073 = !DILocation(line: 4074, column: 29, scope: !2282)
!4074 = !DILocation(line: 4074, column: 5, scope: !2282)
!4075 = !DILocation(line: 4076, column: 29, scope: !2282)
!4076 = !DILocation(line: 4076, column: 5, scope: !2282)
!4077 = !DILocation(line: 4081, column: 29, scope: !2282)
!4078 = !DILocation(line: 4081, column: 5, scope: !2282)
!4079 = !DILocation(line: 4083, column: 29, scope: !2282)
!4080 = !DILocation(line: 4083, column: 5, scope: !2282)
!4081 = !DILocation(line: 4084, column: 29, scope: !2282)
!4082 = !DILocation(line: 4084, column: 5, scope: !2282)
!4083 = !DILocation(line: 4085, column: 29, scope: !2282)
!4084 = !DILocation(line: 4085, column: 5, scope: !2282)
!4085 = !DILocation(line: 4087, column: 29, scope: !2282)
!4086 = !DILocation(line: 4087, column: 5, scope: !2282)
!4087 = !DILocation(line: 4088, column: 29, scope: !2282)
!4088 = !DILocation(line: 4088, column: 5, scope: !2282)
!4089 = !DILocation(line: 4090, column: 29, scope: !2282)
!4090 = !DILocation(line: 4090, column: 5, scope: !2282)
!4091 = !DILocation(line: 4092, column: 29, scope: !2282)
!4092 = !DILocation(line: 4092, column: 5, scope: !2282)
!4093 = !DILocation(line: 4094, column: 29, scope: !2282)
!4094 = !DILocation(line: 4094, column: 5, scope: !2282)
!4095 = !DILocation(line: 4097, column: 29, scope: !2282)
!4096 = !DILocation(line: 4097, column: 5, scope: !2282)
!4097 = !DILocation(line: 4102, column: 7, scope: !2282)
!4098 = !DILocation(line: 4106, column: 21, scope: !2282)
!4099 = !DILocation(line: 4106, column: 26, scope: !2282)
!4100 = !DILocation(line: 4106, column: 35, scope: !2282)
!4101 = !{!4102, !4103, i64 0}
!4102 = !{!"_object", !4103, i64 0, !3861, i64 8}
!4103 = !{!"long", !3862, i64 0}
!4104 = !DILocation(line: 4107, column: 24, scope: !2282)
!4105 = !DILocation(line: 4107, column: 38, scope: !2282)
!4106 = !DILocation(line: 4107, column: 5, scope: !2282)
!4107 = !DILocation(line: 4110, column: 7, scope: !2282)
!4108 = !DILocation(line: 4114, column: 21, scope: !2282)
!4109 = !DILocation(line: 4114, column: 26, scope: !2282)
!4110 = !DILocation(line: 4114, column: 35, scope: !2282)
!4111 = !DILocation(line: 4115, column: 24, scope: !2282)
!4112 = !DILocation(line: 4115, column: 45, scope: !2282)
!4113 = !DILocation(line: 4115, column: 5, scope: !2282)
!4114 = !DILocation(line: 4120, column: 7, scope: !2282)
!4115 = !DILocation(line: 4122, column: 21, scope: !2282)
!4116 = !DILocation(line: 4122, column: 26, scope: !2282)
!4117 = !DILocation(line: 4122, column: 35, scope: !2282)
!4118 = !DILocation(line: 4123, column: 24, scope: !2282)
!4119 = !DILocation(line: 4123, column: 39, scope: !2282)
!4120 = !DILocation(line: 4123, column: 5, scope: !2282)
!4121 = !DILocation(line: 4126, column: 7, scope: !2282)
!4122 = !DILocation(line: 4130, column: 21, scope: !2282)
!4123 = !DILocation(line: 4130, column: 26, scope: !2282)
!4124 = !DILocation(line: 4130, column: 35, scope: !2282)
!4125 = !DILocation(line: 4131, column: 24, scope: !2282)
!4126 = !DILocation(line: 4131, column: 38, scope: !2282)
!4127 = !DILocation(line: 4131, column: 5, scope: !2282)
!4128 = !DILocation(line: 4134, column: 26, scope: !2282)
!4129 = !DILocation(line: 4134, column: 24, scope: !2282)
!4130 = !DILocation(line: 4135, column: 26, scope: !2282)
!4131 = !DILocation(line: 4135, column: 24, scope: !2282)
!4132 = !DILocation(line: 4136, column: 9, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4136, column: 9)
!4134 = !DILocation(line: 4136, column: 28, scope: !4133)
!4135 = !DILocation(line: 4136, column: 42, scope: !4133)
!4136 = !DILocation(line: 4136, column: 45, scope: !4137)
!4137 = !DILexicalBlockFile(scope: !4133, file: !4, discriminator: 1)
!4138 = !DILocation(line: 4136, column: 64, scope: !4133)
!4139 = !DILocation(line: 4136, column: 9, scope: !2282)
!4140 = !DILocation(line: 4137, column: 9, scope: !4133)
!4141 = !DILocation(line: 4138, column: 13, scope: !2282)
!4142 = !DILocation(line: 4139, column: 5, scope: !2282)
!4143 = !DILocation(line: 4139, column: 12, scope: !4144)
!4144 = !DILexicalBlockFile(scope: !4145, file: !4, discriminator: 2)
!4145 = !DILexicalBlockFile(scope: !2282, file: !4, discriminator: 1)
!4146 = !DILocation(line: 4139, column: 21, scope: !2282)
!4147 = !{!4148, !3861, i64 0}
!4148 = !{!"py_ssl_error_code", !3861, i64 0, !3893, i64 8, !3893, i64 12}
!4149 = !DILocation(line: 4139, column: 30, scope: !2282)
!4150 = !DILocation(line: 4140, column: 9, scope: !2317)
!4151 = !DILocation(line: 4140, column: 19, scope: !2317)
!4152 = !DILocation(line: 4140, column: 27, scope: !2317)
!4153 = !DILocation(line: 4141, column: 38, scope: !2317)
!4154 = !DILocation(line: 4141, column: 47, scope: !2317)
!4155 = !DILocation(line: 4141, column: 17, scope: !2317)
!4156 = !DILocation(line: 4141, column: 15, scope: !2317)
!4157 = !DILocation(line: 4142, column: 35, scope: !2317)
!4158 = !DILocation(line: 4142, column: 44, scope: !2317)
!4159 = !{!4148, !3893, i64 8}
!4160 = !DILocation(line: 4142, column: 53, scope: !2317)
!4161 = !DILocation(line: 4142, column: 62, scope: !2317)
!4162 = !{!4148, !3893, i64 12}
!4163 = !DILocation(line: 4142, column: 15, scope: !2317)
!4164 = !DILocation(line: 4142, column: 13, scope: !2317)
!4165 = !DILocation(line: 4143, column: 13, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !2317, file: !4, line: 4143, column: 13)
!4167 = !DILocation(line: 4143, column: 19, scope: !4166)
!4168 = !DILocation(line: 4143, column: 33, scope: !4166)
!4169 = !DILocation(line: 4143, column: 36, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4166, file: !4, discriminator: 1)
!4171 = !DILocation(line: 4143, column: 40, scope: !4166)
!4172 = !DILocation(line: 4143, column: 13, scope: !2317)
!4173 = !DILocation(line: 4144, column: 13, scope: !4166)
!4174 = !DILocation(line: 4145, column: 28, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !2317, file: !4, line: 4145, column: 13)
!4176 = !DILocation(line: 4145, column: 48, scope: !4175)
!4177 = !DILocation(line: 4145, column: 53, scope: !4175)
!4178 = !DILocation(line: 4145, column: 13, scope: !4175)
!4179 = !DILocation(line: 4145, column: 13, scope: !2317)
!4180 = !DILocation(line: 4146, column: 13, scope: !4175)
!4181 = !DILocation(line: 4147, column: 28, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !2317, file: !4, line: 4147, column: 13)
!4183 = !DILocation(line: 4147, column: 48, scope: !4182)
!4184 = !DILocation(line: 4147, column: 55, scope: !4182)
!4185 = !DILocation(line: 4147, column: 13, scope: !4182)
!4186 = !DILocation(line: 4147, column: 13, scope: !2317)
!4187 = !DILocation(line: 4148, column: 13, scope: !4182)
!4188 = !DILocation(line: 4149, column: 9, scope: !2317)
!4189 = !DILocation(line: 4149, column: 14, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !2320, file: !4, discriminator: 1)
!4191 = !DILocation(line: 4149, column: 24, scope: !2320)
!4192 = !DILocation(line: 4149, column: 54, scope: !2320)
!4193 = !DILocation(line: 4149, column: 68, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !2320, file: !4, line: 4149, column: 65)
!4195 = !DILocation(line: 4149, column: 85, scope: !4194)
!4196 = !DILocation(line: 4149, column: 65, scope: !4194)
!4197 = !DILocation(line: 4149, column: 95, scope: !4194)
!4198 = !DILocation(line: 4149, column: 65, scope: !2320)
!4199 = !DILocation(line: 4149, column: 65, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !2320, file: !4, discriminator: 2)
!4201 = !DILocation(line: 4149, column: 126, scope: !4202)
!4202 = !DILexicalBlockFile(scope: !4194, file: !4, discriminator: 3)
!4203 = !DILocation(line: 4149, column: 144, scope: !4194)
!4204 = !{!4102, !3861, i64 8}
!4205 = !DILocation(line: 4149, column: 154, scope: !4194)
!4206 = !{!4207, !3861, i64 48}
!4207 = !{!"_typeobject", !4208, i64 0, !3861, i64 24, !4103, i64 32, !4103, i64 40, !3861, i64 48, !3861, i64 56, !3861, i64 64, !3861, i64 72, !3861, i64 80, !3861, i64 88, !3861, i64 96, !3861, i64 104, !3861, i64 112, !3861, i64 120, !3861, i64 128, !3861, i64 136, !3861, i64 144, !3861, i64 152, !3861, i64 160, !4103, i64 168, !3861, i64 176, !3861, i64 184, !3861, i64 192, !3861, i64 200, !4103, i64 208, !3861, i64 216, !3861, i64 224, !3861, i64 232, !3861, i64 240, !3861, i64 248, !3861, i64 256, !3861, i64 264, !3861, i64 272, !3861, i64 280, !4103, i64 288, !3861, i64 296, !3861, i64 304, !3861, i64 312, !3861, i64 320, !3861, i64 328, !3861, i64 336, !3861, i64 344, !3861, i64 352, !3861, i64 360, !3861, i64 368, !3861, i64 376, !3893, i64 384, !3861, i64 392}
!4208 = !{!"", !4102, i64 0, !4103, i64 16}
!4209 = !DILocation(line: 4149, column: 179, scope: !4194)
!4210 = !DILocation(line: 4149, column: 110, scope: !4194)
!4211 = !DILocation(line: 4149, column: 198, scope: !4212)
!4212 = !DILexicalBlockFile(scope: !2317, file: !4, discriminator: 4)
!4213 = !DILocation(line: 4149, column: 198, scope: !2320)
!4214 = !DILocation(line: 4149, column: 198, scope: !4215)
!4215 = !DILexicalBlockFile(scope: !2320, file: !4, discriminator: 5)
!4216 = !DILocation(line: 4150, column: 9, scope: !2317)
!4217 = !DILocation(line: 4150, column: 14, scope: !4218)
!4218 = !DILexicalBlockFile(scope: !2322, file: !4, discriminator: 1)
!4219 = !DILocation(line: 4150, column: 24, scope: !2322)
!4220 = !DILocation(line: 4150, column: 54, scope: !2322)
!4221 = !DILocation(line: 4150, column: 70, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !2322, file: !4, line: 4150, column: 67)
!4223 = !DILocation(line: 4150, column: 87, scope: !4222)
!4224 = !DILocation(line: 4150, column: 67, scope: !4222)
!4225 = !DILocation(line: 4150, column: 97, scope: !4222)
!4226 = !DILocation(line: 4150, column: 67, scope: !2322)
!4227 = !DILocation(line: 4150, column: 67, scope: !4228)
!4228 = !DILexicalBlockFile(scope: !2322, file: !4, discriminator: 2)
!4229 = !DILocation(line: 4150, column: 128, scope: !4230)
!4230 = !DILexicalBlockFile(scope: !4222, file: !4, discriminator: 3)
!4231 = !DILocation(line: 4150, column: 146, scope: !4222)
!4232 = !DILocation(line: 4150, column: 156, scope: !4222)
!4233 = !DILocation(line: 4150, column: 181, scope: !4222)
!4234 = !DILocation(line: 4150, column: 112, scope: !4222)
!4235 = !DILocation(line: 4150, column: 200, scope: !4212)
!4236 = !DILocation(line: 4150, column: 200, scope: !2322)
!4237 = !DILocation(line: 4150, column: 200, scope: !4238)
!4238 = !DILexicalBlockFile(scope: !2322, file: !4, discriminator: 5)
!4239 = !DILocation(line: 4151, column: 16, scope: !2317)
!4240 = !DILocation(line: 4152, column: 5, scope: !2282)
!4241 = !DILocation(line: 4152, column: 5, scope: !4145)
!4242 = !DILocation(line: 4153, column: 28, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4153, column: 9)
!4244 = !DILocation(line: 4153, column: 53, scope: !4243)
!4245 = !DILocation(line: 4153, column: 9, scope: !4243)
!4246 = !DILocation(line: 4153, column: 9, scope: !2282)
!4247 = !DILocation(line: 4154, column: 9, scope: !4243)
!4248 = !DILocation(line: 4155, column: 28, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4155, column: 9)
!4250 = !DILocation(line: 4155, column: 53, scope: !4249)
!4251 = !DILocation(line: 4155, column: 9, scope: !4249)
!4252 = !DILocation(line: 4155, column: 9, scope: !2282)
!4253 = !DILocation(line: 4156, column: 9, scope: !4249)
!4254 = !DILocation(line: 4158, column: 26, scope: !2282)
!4255 = !DILocation(line: 4158, column: 24, scope: !2282)
!4256 = !DILocation(line: 4159, column: 9, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4159, column: 9)
!4258 = !DILocation(line: 4159, column: 28, scope: !4257)
!4259 = !DILocation(line: 4159, column: 9, scope: !2282)
!4260 = !DILocation(line: 4160, column: 9, scope: !4257)
!4261 = !DILocation(line: 4161, column: 13, scope: !2282)
!4262 = !DILocation(line: 4162, column: 5, scope: !2282)
!4263 = !DILocation(line: 4162, column: 12, scope: !4144)
!4264 = !DILocation(line: 4162, column: 21, scope: !2282)
!4265 = !{!4266, !3861, i64 0}
!4266 = !{!"py_ssl_library_code", !3861, i64 0, !3893, i64 8}
!4267 = !DILocation(line: 4162, column: 29, scope: !2282)
!4268 = !DILocation(line: 4163, column: 9, scope: !2324)
!4269 = !DILocation(line: 4163, column: 19, scope: !2324)
!4270 = !DILocation(line: 4163, column: 27, scope: !2324)
!4271 = !DILocation(line: 4164, column: 31, scope: !2324)
!4272 = !DILocation(line: 4164, column: 40, scope: !2324)
!4273 = !{!4266, !3893, i64 8}
!4274 = !DILocation(line: 4164, column: 15, scope: !2324)
!4275 = !DILocation(line: 4164, column: 13, scope: !2324)
!4276 = !DILocation(line: 4165, column: 38, scope: !2324)
!4277 = !DILocation(line: 4165, column: 47, scope: !2324)
!4278 = !DILocation(line: 4165, column: 17, scope: !2324)
!4279 = !DILocation(line: 4165, column: 15, scope: !2324)
!4280 = !DILocation(line: 4166, column: 13, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !2324, file: !4, line: 4166, column: 13)
!4282 = !DILocation(line: 4166, column: 17, scope: !4281)
!4283 = !DILocation(line: 4166, column: 31, scope: !4281)
!4284 = !DILocation(line: 4166, column: 34, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4281, file: !4, discriminator: 1)
!4286 = !DILocation(line: 4166, column: 40, scope: !4281)
!4287 = !DILocation(line: 4166, column: 13, scope: !2324)
!4288 = !DILocation(line: 4167, column: 13, scope: !4281)
!4289 = !DILocation(line: 4168, column: 28, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !2324, file: !4, line: 4168, column: 13)
!4291 = !DILocation(line: 4168, column: 48, scope: !4290)
!4292 = !DILocation(line: 4168, column: 53, scope: !4290)
!4293 = !DILocation(line: 4168, column: 13, scope: !4290)
!4294 = !DILocation(line: 4168, column: 13, scope: !2324)
!4295 = !DILocation(line: 4169, column: 13, scope: !4290)
!4296 = !DILocation(line: 4170, column: 9, scope: !2324)
!4297 = !DILocation(line: 4170, column: 14, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !2327, file: !4, discriminator: 1)
!4299 = !DILocation(line: 4170, column: 24, scope: !2327)
!4300 = !DILocation(line: 4170, column: 54, scope: !2327)
!4301 = !DILocation(line: 4170, column: 68, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !2327, file: !4, line: 4170, column: 65)
!4303 = !DILocation(line: 4170, column: 85, scope: !4302)
!4304 = !DILocation(line: 4170, column: 65, scope: !4302)
!4305 = !DILocation(line: 4170, column: 95, scope: !4302)
!4306 = !DILocation(line: 4170, column: 65, scope: !2327)
!4307 = !DILocation(line: 4170, column: 65, scope: !4308)
!4308 = !DILexicalBlockFile(scope: !2327, file: !4, discriminator: 2)
!4309 = !DILocation(line: 4170, column: 126, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4302, file: !4, discriminator: 3)
!4311 = !DILocation(line: 4170, column: 144, scope: !4302)
!4312 = !DILocation(line: 4170, column: 154, scope: !4302)
!4313 = !DILocation(line: 4170, column: 179, scope: !4302)
!4314 = !DILocation(line: 4170, column: 110, scope: !4302)
!4315 = !DILocation(line: 4170, column: 198, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !2324, file: !4, discriminator: 4)
!4317 = !DILocation(line: 4170, column: 198, scope: !2327)
!4318 = !DILocation(line: 4170, column: 198, scope: !4319)
!4319 = !DILexicalBlockFile(scope: !2327, file: !4, discriminator: 5)
!4320 = !DILocation(line: 4171, column: 9, scope: !2324)
!4321 = !DILocation(line: 4171, column: 14, scope: !4322)
!4322 = !DILexicalBlockFile(scope: !2329, file: !4, discriminator: 1)
!4323 = !DILocation(line: 4171, column: 24, scope: !2329)
!4324 = !DILocation(line: 4171, column: 54, scope: !2329)
!4325 = !DILocation(line: 4171, column: 70, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !2329, file: !4, line: 4171, column: 67)
!4327 = !DILocation(line: 4171, column: 87, scope: !4326)
!4328 = !DILocation(line: 4171, column: 67, scope: !4326)
!4329 = !DILocation(line: 4171, column: 97, scope: !4326)
!4330 = !DILocation(line: 4171, column: 67, scope: !2329)
!4331 = !DILocation(line: 4171, column: 67, scope: !4332)
!4332 = !DILexicalBlockFile(scope: !2329, file: !4, discriminator: 2)
!4333 = !DILocation(line: 4171, column: 128, scope: !4334)
!4334 = !DILexicalBlockFile(scope: !4326, file: !4, discriminator: 3)
!4335 = !DILocation(line: 4171, column: 146, scope: !4326)
!4336 = !DILocation(line: 4171, column: 156, scope: !4326)
!4337 = !DILocation(line: 4171, column: 181, scope: !4326)
!4338 = !DILocation(line: 4171, column: 112, scope: !4326)
!4339 = !DILocation(line: 4171, column: 200, scope: !4316)
!4340 = !DILocation(line: 4171, column: 200, scope: !2329)
!4341 = !DILocation(line: 4171, column: 200, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !2329, file: !4, discriminator: 5)
!4343 = !DILocation(line: 4172, column: 16, scope: !2324)
!4344 = !DILocation(line: 4173, column: 5, scope: !2282)
!4345 = !DILocation(line: 4173, column: 5, scope: !4145)
!4346 = !DILocation(line: 4174, column: 28, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4174, column: 9)
!4348 = !DILocation(line: 4174, column: 53, scope: !4347)
!4349 = !DILocation(line: 4174, column: 9, scope: !4347)
!4350 = !DILocation(line: 4174, column: 9, scope: !2282)
!4351 = !DILocation(line: 4175, column: 9, scope: !4347)
!4352 = !DILocation(line: 4181, column: 14, scope: !2282)
!4353 = !DILocation(line: 4181, column: 12, scope: !2282)
!4354 = !{!4103, !4103, i64 0}
!4355 = !DILocation(line: 4182, column: 33, scope: !2282)
!4356 = !DILocation(line: 4182, column: 9, scope: !2282)
!4357 = !DILocation(line: 4182, column: 7, scope: !2282)
!4358 = !DILocation(line: 4183, column: 9, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4183, column: 9)
!4360 = !DILocation(line: 4183, column: 11, scope: !4359)
!4361 = !DILocation(line: 4183, column: 9, scope: !2282)
!4362 = !DILocation(line: 4184, column: 9, scope: !4359)
!4363 = !DILocation(line: 4185, column: 28, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4185, column: 9)
!4365 = !DILocation(line: 4185, column: 57, scope: !4364)
!4366 = !DILocation(line: 4185, column: 9, scope: !4364)
!4367 = !DILocation(line: 4185, column: 9, scope: !2282)
!4368 = !DILocation(line: 4186, column: 9, scope: !4364)
!4369 = !DILocation(line: 4187, column: 27, scope: !2282)
!4370 = !DILocation(line: 4187, column: 5, scope: !2282)
!4371 = !DILocation(line: 4188, column: 32, scope: !2282)
!4372 = !{!3893, !3893, i64 0}
!4373 = !DILocation(line: 4188, column: 39, scope: !2282)
!4374 = !DILocation(line: 4188, column: 46, scope: !2282)
!4375 = !DILocation(line: 4188, column: 51, scope: !2282)
!4376 = !DILocation(line: 4188, column: 58, scope: !2282)
!4377 = !DILocation(line: 4188, column: 9, scope: !2282)
!4378 = !DILocation(line: 4188, column: 7, scope: !2282)
!4379 = !DILocation(line: 4189, column: 9, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4189, column: 9)
!4381 = !DILocation(line: 4189, column: 11, scope: !4380)
!4382 = !DILocation(line: 4189, column: 25, scope: !4380)
!4383 = !DILocation(line: 4189, column: 47, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !4380, file: !4, discriminator: 1)
!4385 = !DILocation(line: 4189, column: 74, scope: !4380)
!4386 = !DILocation(line: 4189, column: 28, scope: !4380)
!4387 = !DILocation(line: 4189, column: 9, scope: !2282)
!4388 = !DILocation(line: 4190, column: 9, scope: !4380)
!4389 = !DILocation(line: 4191, column: 30, scope: !2282)
!4390 = !DILocation(line: 4191, column: 9, scope: !2282)
!4391 = !DILocation(line: 4191, column: 7, scope: !2282)
!4392 = !DILocation(line: 4192, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4192, column: 9)
!4394 = !DILocation(line: 4192, column: 11, scope: !4393)
!4395 = !DILocation(line: 4192, column: 25, scope: !4393)
!4396 = !DILocation(line: 4192, column: 47, scope: !4397)
!4397 = !DILexicalBlockFile(scope: !4393, file: !4, discriminator: 1)
!4398 = !DILocation(line: 4192, column: 69, scope: !4393)
!4399 = !DILocation(line: 4192, column: 28, scope: !4393)
!4400 = !DILocation(line: 4192, column: 9, scope: !2282)
!4401 = !DILocation(line: 4193, column: 9, scope: !4393)
!4402 = !DILocation(line: 4195, column: 12, scope: !2282)
!4403 = !DILocation(line: 4196, column: 27, scope: !2282)
!4404 = !DILocation(line: 4196, column: 5, scope: !2282)
!4405 = !DILocation(line: 4197, column: 32, scope: !2282)
!4406 = !DILocation(line: 4197, column: 39, scope: !2282)
!4407 = !DILocation(line: 4197, column: 46, scope: !2282)
!4408 = !DILocation(line: 4197, column: 51, scope: !2282)
!4409 = !DILocation(line: 4197, column: 58, scope: !2282)
!4410 = !DILocation(line: 4197, column: 9, scope: !2282)
!4411 = !DILocation(line: 4197, column: 7, scope: !2282)
!4412 = !DILocation(line: 4198, column: 9, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !2282, file: !4, line: 4198, column: 9)
!4414 = !DILocation(line: 4198, column: 11, scope: !4413)
!4415 = !DILocation(line: 4198, column: 25, scope: !4413)
!4416 = !DILocation(line: 4198, column: 47, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4413, file: !4, discriminator: 1)
!4418 = !DILocation(line: 4198, column: 74, scope: !4413)
!4419 = !DILocation(line: 4198, column: 28, scope: !4413)
!4420 = !DILocation(line: 4198, column: 9, scope: !2282)
!4421 = !DILocation(line: 4199, column: 9, scope: !4413)
!4422 = !DILocation(line: 4201, column: 12, scope: !2282)
!4423 = !DILocation(line: 4201, column: 5, scope: !2282)
!4424 = !DILocation(line: 4202, column: 1, scope: !2282)
!4425 = !DILocation(line: 3830, column: 5, scope: !3578)
!4426 = !DILocation(line: 3830, column: 18, scope: !3578)
!4427 = !DILocation(line: 3832, column: 9, scope: !3588)
!4428 = !DILocation(line: 3832, column: 20, scope: !3588)
!4429 = !DILocation(line: 3832, column: 9, scope: !3578)
!4430 = !DILocation(line: 3833, column: 28, scope: !3587)
!4431 = !DILocation(line: 3833, column: 26, scope: !3587)
!4432 = !DILocation(line: 3835, column: 55, scope: !3587)
!4433 = !DILocation(line: 3835, column: 53, scope: !3587)
!4434 = !DILocation(line: 3835, column: 13, scope: !3587)
!4435 = !DILocation(line: 3834, column: 22, scope: !3587)
!4436 = !DILocation(line: 3834, column: 20, scope: !3587)
!4437 = !DILocation(line: 3836, column: 13, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !3587, file: !4, line: 3836, column: 13)
!4439 = !DILocation(line: 3836, column: 24, scope: !4438)
!4440 = !DILocation(line: 3836, column: 13, scope: !3587)
!4441 = !DILocation(line: 3837, column: 13, scope: !4438)
!4442 = !DILocation(line: 3838, column: 16, scope: !3587)
!4443 = !DILocation(line: 3838, column: 9, scope: !3587)
!4444 = !DILocation(line: 3839, column: 45, scope: !3587)
!4445 = !DILocation(line: 3839, column: 43, scope: !3587)
!4446 = !DILocation(line: 3840, column: 16, scope: !3586)
!4447 = !DILocation(line: 3840, column: 14, scope: !3586)
!4448 = !DILocation(line: 3840, column: 21, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !4450, file: !4, discriminator: 2)
!4450 = !DILexicalBlockFile(scope: !3585, file: !4, discriminator: 1)
!4451 = !DILocation(line: 3840, column: 25, scope: !3585)
!4452 = !DILocation(line: 3840, column: 23, scope: !3585)
!4453 = !DILocation(line: 3840, column: 9, scope: !3586)
!4454 = !DILocation(line: 3841, column: 29, scope: !3584)
!4455 = !DILocation(line: 3841, column: 24, scope: !3584)
!4456 = !DILocation(line: 3841, column: 13, scope: !3584)
!4457 = !DILocation(line: 3841, column: 27, scope: !3584)
!4458 = !DILocation(line: 3842, column: 28, scope: !3583)
!4459 = !DILocation(line: 3842, column: 17, scope: !3583)
!4460 = !DILocation(line: 3842, column: 31, scope: !3583)
!4461 = !DILocation(line: 3842, column: 17, scope: !3584)
!4462 = !DILocation(line: 3843, column: 17, scope: !3582)
!4463 = !DILocation(line: 3843, column: 30, scope: !3582)
!4464 = !DILocation(line: 3844, column: 24, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !3582, file: !4, line: 3844, column: 17)
!4466 = !DILocation(line: 3844, column: 22, scope: !4465)
!4467 = !DILocation(line: 3844, column: 29, scope: !4468)
!4468 = !DILexicalBlockFile(scope: !4469, file: !4, discriminator: 2)
!4469 = !DILexicalBlockFile(scope: !4470, file: !4, discriminator: 1)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !4, line: 3844, column: 17)
!4471 = !DILocation(line: 3844, column: 33, scope: !4470)
!4472 = !DILocation(line: 3844, column: 31, scope: !4470)
!4473 = !DILocation(line: 3844, column: 17, scope: !4465)
!4474 = !DILocation(line: 3845, column: 51, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4470, file: !4, line: 3844, column: 41)
!4476 = !DILocation(line: 3845, column: 40, scope: !4475)
!4477 = !DILocation(line: 3845, column: 21, scope: !4475)
!4478 = !DILocation(line: 3846, column: 17, scope: !4475)
!4479 = !DILocation(line: 3844, column: 37, scope: !4470)
!4480 = !DILocation(line: 3844, column: 17, scope: !4470)
!4481 = !DILocation(line: 3847, column: 28, scope: !3582)
!4482 = !DILocation(line: 3847, column: 17, scope: !3582)
!4483 = !DILocation(line: 3848, column: 17, scope: !3582)
!4484 = !DILocation(line: 3849, column: 13, scope: !3583)
!4485 = !DILocation(line: 3850, column: 9, scope: !3584)
!4486 = !DILocation(line: 3840, column: 44, scope: !3585)
!4487 = !DILocation(line: 3840, column: 9, scope: !3585)
!4488 = !DILocation(line: 3851, column: 9, scope: !3587)
!4489 = !DILocation(line: 3853, column: 9, scope: !3587)
!4490 = !DILocation(line: 3857, column: 5, scope: !3587)
!4491 = !DILocation(line: 3858, column: 5, scope: !3578)
!4492 = !DILocation(line: 3859, column: 1, scope: !3578)
!4493 = !DILocation(line: 3882, column: 37, scope: !3630)
!4494 = !DILocation(line: 3883, column: 37, scope: !3630)
!4495 = !DILocation(line: 3883, column: 58, scope: !3630)
!4496 = !DILocation(line: 3884, column: 37, scope: !3630)
!4497 = !DILocation(line: 3884, column: 56, scope: !3630)
!4498 = !DILocation(line: 3885, column: 37, scope: !3630)
!4499 = !DILocation(line: 3887, column: 15, scope: !3630)
!4500 = !DILocation(line: 3887, column: 22, scope: !3630)
!4501 = !DILocation(line: 3887, column: 6, scope: !3630)
!4502 = !DILocation(line: 3887, column: 13, scope: !3630)
!4503 = !DILocation(line: 3888, column: 12, scope: !3630)
!4504 = !DILocation(line: 3889, column: 14, scope: !3630)
!4505 = !DILocation(line: 3889, column: 21, scope: !3630)
!4506 = !DILocation(line: 3889, column: 6, scope: !3630)
!4507 = !DILocation(line: 3889, column: 12, scope: !3630)
!4508 = !DILocation(line: 3890, column: 12, scope: !3630)
!4509 = !DILocation(line: 3891, column: 12, scope: !3630)
!4510 = !DILocation(line: 3891, column: 19, scope: !3630)
!4511 = !DILocation(line: 3891, column: 6, scope: !3630)
!4512 = !DILocation(line: 3891, column: 10, scope: !3630)
!4513 = !DILocation(line: 3892, column: 12, scope: !3630)
!4514 = !DILocation(line: 3893, column: 14, scope: !3630)
!4515 = !DILocation(line: 3893, column: 21, scope: !3630)
!4516 = !DILocation(line: 3893, column: 6, scope: !3630)
!4517 = !DILocation(line: 3893, column: 12, scope: !3630)
!4518 = !DILocation(line: 3894, column: 12, scope: !3630)
!4519 = !DILocation(line: 3895, column: 14, scope: !3630)
!4520 = !DILocation(line: 3895, column: 21, scope: !3630)
!4521 = !DILocation(line: 3895, column: 6, scope: !3630)
!4522 = !DILocation(line: 3895, column: 12, scope: !3630)
!4523 = !DILocation(line: 3896, column: 1, scope: !3630)
!4524 = !DILocation(line: 2104, column: 31, scope: !2330)
!4525 = !DILocation(line: 2106, column: 19, scope: !2330)
!4526 = !DILocation(line: 2106, column: 5, scope: !2330)
!4527 = !DILocation(line: 2107, column: 18, scope: !2330)
!4528 = !DILocation(line: 2107, column: 24, scope: !2330)
!4529 = !{!4530, !3861, i64 16}
!4530 = !{!"", !4102, i64 0, !3861, i64 16, !3861, i64 24, !3893, i64 32, !3861, i64 40, !3893, i64 48}
!4531 = !DILocation(line: 2107, column: 5, scope: !2330)
!4532 = !DILocation(line: 2109, column: 16, scope: !2330)
!4533 = !DILocation(line: 2109, column: 22, scope: !2330)
!4534 = !{!4530, !3861, i64 24}
!4535 = !DILocation(line: 2109, column: 5, scope: !2330)
!4536 = !DILocation(line: 2111, column: 19, scope: !2330)
!4537 = !DILocation(line: 2111, column: 7, scope: !2330)
!4538 = !DILocation(line: 2111, column: 27, scope: !2330)
!4539 = !DILocation(line: 2111, column: 37, scope: !2330)
!4540 = !{!4207, !3861, i64 320}
!4541 = !DILocation(line: 2111, column: 45, scope: !2330)
!4542 = !DILocation(line: 2111, column: 5, scope: !2330)
!4543 = !DILocation(line: 2112, column: 1, scope: !2330)
!4544 = !DILocation(line: 2086, column: 32, scope: !2335)
!4545 = !DILocation(line: 2086, column: 48, scope: !2335)
!4546 = !DILocation(line: 2086, column: 61, scope: !2335)
!4547 = !DILocation(line: 2089, column: 5, scope: !2335)
!4548 = !DILocation(line: 2089, column: 14, scope: !4549)
!4549 = !DILexicalBlockFile(scope: !2344, file: !4, discriminator: 1)
!4550 = !DILocation(line: 2089, column: 20, scope: !2344)
!4551 = !{!4530, !3861, i64 40}
!4552 = !DILocation(line: 2089, column: 14, scope: !2344)
!4553 = !DILocation(line: 2089, column: 14, scope: !2345)
!4554 = !DILocation(line: 2089, column: 36, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !2343, file: !4, discriminator: 2)
!4556 = !DILocation(line: 2089, column: 40, scope: !2343)
!4557 = !DILocation(line: 2089, column: 47, scope: !2343)
!4558 = !DILocation(line: 2089, column: 66, scope: !2343)
!4559 = !DILocation(line: 2089, column: 72, scope: !2343)
!4560 = !DILocation(line: 2089, column: 87, scope: !2343)
!4561 = !DILocation(line: 2089, column: 97, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !2343, file: !4, line: 2089, column: 97)
!4563 = !DILocation(line: 2089, column: 97, scope: !2343)
!4564 = !DILocation(line: 2089, column: 110, scope: !4565)
!4565 = !DILexicalBlockFile(scope: !4562, file: !4, discriminator: 4)
!4566 = !DILocation(line: 2089, column: 103, scope: !4562)
!4567 = !DILocation(line: 2089, column: 116, scope: !4568)
!4568 = !DILexicalBlockFile(scope: !2344, file: !4, discriminator: 5)
!4569 = !DILocation(line: 2089, column: 116, scope: !4570)
!4570 = !DILexicalBlockFile(scope: !4571, file: !4, discriminator: 7)
!4571 = !DILexicalBlockFile(scope: !2344, file: !4, discriminator: 6)
!4572 = !DILocation(line: 2089, column: 116, scope: !2343)
!4573 = !DILocation(line: 2089, column: 118, scope: !4574)
!4574 = !DILexicalBlockFile(scope: !4575, file: !4, discriminator: 8)
!4575 = !DILexicalBlockFile(scope: !2345, file: !4, discriminator: 3)
!4576 = !DILocation(line: 2091, column: 5, scope: !2335)
!4577 = !DILocation(line: 2092, column: 1, scope: !2335)
!4578 = !DILocation(line: 2095, column: 29, scope: !2346)
!4579 = !DILocation(line: 2098, column: 5, scope: !2346)
!4580 = !DILocation(line: 2098, column: 10, scope: !4581)
!4581 = !DILexicalBlockFile(scope: !2352, file: !4, discriminator: 1)
!4582 = !DILocation(line: 2098, column: 20, scope: !2352)
!4583 = !DILocation(line: 2098, column: 43, scope: !2352)
!4584 = !DILocation(line: 2098, column: 49, scope: !2352)
!4585 = !DILocation(line: 2098, column: 68, scope: !2356)
!4586 = !DILocation(line: 2098, column: 76, scope: !2356)
!4587 = !DILocation(line: 2098, column: 68, scope: !2352)
!4588 = !DILocation(line: 2098, column: 94, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !2355, file: !4, discriminator: 2)
!4590 = !DILocation(line: 2098, column: 100, scope: !2355)
!4591 = !DILocation(line: 2098, column: 114, scope: !2355)
!4592 = !DILocation(line: 2098, column: 128, scope: !2355)
!4593 = !DILocation(line: 2098, column: 133, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !2354, file: !4, discriminator: 4)
!4595 = !DILocation(line: 2098, column: 143, scope: !2354)
!4596 = !DILocation(line: 2098, column: 173, scope: !2354)
!4597 = !DILocation(line: 2098, column: 191, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !2354, file: !4, line: 2098, column: 188)
!4599 = !DILocation(line: 2098, column: 208, scope: !4598)
!4600 = !DILocation(line: 2098, column: 188, scope: !4598)
!4601 = !DILocation(line: 2098, column: 218, scope: !4598)
!4602 = !DILocation(line: 2098, column: 188, scope: !2354)
!4603 = !DILocation(line: 2098, column: 188, scope: !4604)
!4604 = !DILexicalBlockFile(scope: !2354, file: !4, discriminator: 5)
!4605 = !DILocation(line: 2098, column: 249, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4598, file: !4, discriminator: 6)
!4607 = !DILocation(line: 2098, column: 267, scope: !4598)
!4608 = !DILocation(line: 2098, column: 277, scope: !4598)
!4609 = !DILocation(line: 2098, column: 302, scope: !4598)
!4610 = !DILocation(line: 2098, column: 233, scope: !4598)
!4611 = !DILocation(line: 2098, column: 321, scope: !4612)
!4612 = !DILexicalBlockFile(scope: !2355, file: !4, discriminator: 7)
!4613 = !DILocation(line: 2098, column: 321, scope: !2354)
!4614 = !DILocation(line: 2098, column: 321, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !2354, file: !4, discriminator: 8)
!4616 = !DILocation(line: 2098, column: 334, scope: !4617)
!4617 = !DILexicalBlockFile(scope: !2355, file: !4, discriminator: 9)
!4618 = !DILocation(line: 2098, column: 336, scope: !4619)
!4619 = !DILexicalBlockFile(scope: !4620, file: !4, discriminator: 10)
!4620 = !DILexicalBlockFile(scope: !2346, file: !4, discriminator: 3)
!4621 = !DILocation(line: 2098, column: 336, scope: !2352)
!4622 = !DILocation(line: 2100, column: 5, scope: !2346)
!4623 = !DILocation(line: 1995, column: 27, scope: !3226)
!4624 = !DILocation(line: 1995, column: 43, scope: !3226)
!4625 = !DILocation(line: 1995, column: 59, scope: !3226)
!4626 = !DILocation(line: 1997, column: 5, scope: !3226)
!4627 = !DILocation(line: 1997, column: 11, scope: !3226)
!4628 = !DILocation(line: 1998, column: 5, scope: !3226)
!4629 = !DILocation(line: 1998, column: 19, scope: !3226)
!4630 = !DILocation(line: 1999, column: 5, scope: !3226)
!4631 = !DILocation(line: 1999, column: 9, scope: !3226)
!4632 = !DILocation(line: 2000, column: 5, scope: !3226)
!4633 = !DILocation(line: 2000, column: 10, scope: !3226)
!4634 = !DILocation(line: 2001, column: 5, scope: !3226)
!4635 = !DILocation(line: 2001, column: 14, scope: !3226)
!4636 = !DILocation(line: 2004, column: 9, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !3226, file: !4, line: 2003, column: 9)
!4638 = !DILocation(line: 2004, column: 15, scope: !4637)
!4639 = !DILocation(line: 2004, column: 38, scope: !4637)
!4640 = !DILocation(line: 2003, column: 10, scope: !4637)
!4641 = !DILocation(line: 2003, column: 9, scope: !3226)
!4642 = !DILocation(line: 2006, column: 9, scope: !4637)
!4643 = !DILocation(line: 2008, column: 7, scope: !3239)
!4644 = !DILocation(line: 2008, column: 22, scope: !3239)
!4645 = !DILocation(line: 2008, column: 42, scope: !3239)
!4646 = !DILocation(line: 2008, column: 51, scope: !4647)
!4647 = !DILexicalBlockFile(scope: !4648, file: !4, discriminator: 1)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !4, line: 2008, column: 51)
!4649 = distinct !DILexicalBlock(scope: !3239, file: !4, line: 2008, column: 45)
!4650 = !DILocation(line: 2008, column: 67, scope: !4648)
!4651 = !DILocation(line: 2008, column: 51, scope: !4649)
!4652 = !DILocation(line: 2008, column: 83, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4654, file: !4, discriminator: 2)
!4654 = distinct !DILexicalBlock(scope: !4648, file: !4, line: 2008, column: 71)
!4655 = !DILocation(line: 2008, column: 81, scope: !4654)
!4656 = !DILocation(line: 2008, column: 104, scope: !4654)
!4657 = !DILocation(line: 2008, column: 106, scope: !4658)
!4658 = !DILexicalBlockFile(scope: !4659, file: !4, discriminator: 4)
!4659 = !DILexicalBlockFile(scope: !4649, file: !4, discriminator: 3)
!4660 = !DILocation(line: 2008, column: 106, scope: !4661)
!4661 = !DILexicalBlockFile(scope: !4649, file: !4, discriminator: 5)
!4662 = !DILocation(line: 2009, column: 9, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !3239, file: !4, line: 2009, column: 9)
!4664 = !DILocation(line: 2009, column: 23, scope: !4663)
!4665 = !DILocation(line: 2009, column: 9, scope: !3239)
!4666 = !DILocation(line: 2010, column: 27, scope: !4663)
!4667 = !DILocation(line: 2010, column: 15, scope: !4663)
!4668 = !DILocation(line: 2010, column: 13, scope: !4663)
!4669 = !DILocation(line: 2010, column: 9, scope: !4663)
!4670 = !DILocation(line: 2012, column: 14, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4663, file: !4, line: 2012, column: 14)
!4672 = !DILocation(line: 2012, column: 28, scope: !4671)
!4673 = !DILocation(line: 2012, column: 14, scope: !4663)
!4674 = !DILocation(line: 2013, column: 27, scope: !4671)
!4675 = !DILocation(line: 2013, column: 15, scope: !4671)
!4676 = !DILocation(line: 2013, column: 13, scope: !4671)
!4677 = !DILocation(line: 2013, column: 9, scope: !4671)
!4678 = !DILocation(line: 2014, column: 14, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4671, file: !4, line: 2014, column: 14)
!4680 = !DILocation(line: 2014, column: 28, scope: !4679)
!4681 = !DILocation(line: 2014, column: 14, scope: !4671)
!4682 = !DILocation(line: 2015, column: 27, scope: !4679)
!4683 = !DILocation(line: 2015, column: 15, scope: !4679)
!4684 = !DILocation(line: 2015, column: 13, scope: !4679)
!4685 = !DILocation(line: 2015, column: 9, scope: !4679)
!4686 = !DILocation(line: 2017, column: 14, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4679, file: !4, line: 2017, column: 14)
!4688 = !DILocation(line: 2017, column: 28, scope: !4687)
!4689 = !DILocation(line: 2017, column: 14, scope: !4679)
!4690 = !DILocation(line: 2018, column: 27, scope: !4687)
!4691 = !DILocation(line: 2018, column: 15, scope: !4687)
!4692 = !DILocation(line: 2018, column: 13, scope: !4687)
!4693 = !DILocation(line: 2018, column: 9, scope: !4687)
!4694 = !DILocation(line: 2020, column: 14, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4687, file: !4, line: 2020, column: 14)
!4696 = !DILocation(line: 2020, column: 28, scope: !4695)
!4697 = !DILocation(line: 2020, column: 14, scope: !4687)
!4698 = !DILocation(line: 2021, column: 27, scope: !4695)
!4699 = !DILocation(line: 2021, column: 15, scope: !4695)
!4700 = !DILocation(line: 2021, column: 13, scope: !4695)
!4701 = !DILocation(line: 2021, column: 9, scope: !4695)
!4702 = !DILocation(line: 2023, column: 14, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4695, file: !4, line: 2023, column: 14)
!4704 = !DILocation(line: 2023, column: 28, scope: !4703)
!4705 = !DILocation(line: 2023, column: 14, scope: !4695)
!4706 = !DILocation(line: 2024, column: 27, scope: !4703)
!4707 = !DILocation(line: 2024, column: 15, scope: !4703)
!4708 = !DILocation(line: 2024, column: 13, scope: !4703)
!4709 = !DILocation(line: 2024, column: 9, scope: !4703)
!4710 = !DILocation(line: 2026, column: 23, scope: !4703)
!4711 = !DILocation(line: 2027, column: 5, scope: !3239)
!4712 = !DILocation(line: 2027, column: 14, scope: !4713)
!4713 = !DILexicalBlockFile(scope: !4714, file: !4, discriminator: 1)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !4, line: 2027, column: 14)
!4715 = distinct !DILexicalBlock(scope: !3239, file: !4, line: 2027, column: 8)
!4716 = !DILocation(line: 2027, column: 30, scope: !4714)
!4717 = !DILocation(line: 2027, column: 14, scope: !4715)
!4718 = !DILocation(line: 2027, column: 57, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4720, file: !4, discriminator: 2)
!4720 = distinct !DILexicalBlock(scope: !4714, file: !4, line: 2027, column: 34)
!4721 = !DILocation(line: 2027, column: 36, scope: !4720)
!4722 = !DILocation(line: 2027, column: 65, scope: !4720)
!4723 = !DILocation(line: 2027, column: 67, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4725, file: !4, discriminator: 4)
!4725 = !DILexicalBlockFile(scope: !4715, file: !4, discriminator: 3)
!4726 = !DILocation(line: 2027, column: 67, scope: !4727)
!4727 = !DILexicalBlockFile(scope: !4715, file: !4, discriminator: 5)
!4728 = !DILocation(line: 2027, column: 80, scope: !4729)
!4729 = !DILexicalBlockFile(scope: !3226, file: !4, discriminator: 6)
!4730 = !DILocation(line: 2029, column: 9, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !3226, file: !4, line: 2029, column: 9)
!4732 = !DILocation(line: 2029, column: 23, scope: !4731)
!4733 = !DILocation(line: 2029, column: 9, scope: !3226)
!4734 = !DILocation(line: 2030, column: 25, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4731, file: !4, line: 2029, column: 30)
!4736 = !DILocation(line: 2030, column: 9, scope: !4735)
!4737 = !DILocation(line: 2032, column: 9, scope: !4735)
!4738 = !DILocation(line: 2034, column: 9, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !3226, file: !4, line: 2034, column: 9)
!4740 = !DILocation(line: 2034, column: 13, scope: !4739)
!4741 = !DILocation(line: 2034, column: 9, scope: !3226)
!4742 = !DILocation(line: 2035, column: 25, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4739, file: !4, line: 2034, column: 28)
!4744 = !DILocation(line: 2035, column: 9, scope: !4743)
!4745 = !DILocation(line: 2037, column: 9, scope: !4743)
!4746 = !DILocation(line: 2041, column: 29, scope: !3226)
!4747 = !DILocation(line: 2041, column: 35, scope: !3226)
!4748 = !{!4207, !3861, i64 304}
!4749 = !DILocation(line: 2041, column: 44, scope: !3226)
!4750 = !DILocation(line: 2041, column: 12, scope: !3226)
!4751 = !DILocation(line: 2041, column: 10, scope: !3226)
!4752 = !DILocation(line: 2042, column: 9, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !3226, file: !4, line: 2042, column: 9)
!4754 = !DILocation(line: 2042, column: 14, scope: !4753)
!4755 = !DILocation(line: 2042, column: 9, scope: !3226)
!4756 = !DILocation(line: 2043, column: 22, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4753, file: !4, line: 2042, column: 29)
!4758 = !DILocation(line: 2043, column: 9, scope: !4757)
!4759 = !DILocation(line: 2044, column: 9, scope: !4757)
!4760 = !DILocation(line: 2046, column: 17, scope: !3226)
!4761 = !DILocation(line: 2046, column: 5, scope: !3226)
!4762 = !DILocation(line: 2046, column: 11, scope: !3226)
!4763 = !DILocation(line: 2046, column: 15, scope: !3226)
!4764 = !DILocation(line: 2048, column: 5, scope: !3226)
!4765 = !DILocation(line: 2048, column: 11, scope: !3226)
!4766 = !DILocation(line: 2048, column: 25, scope: !3226)
!4767 = !DILocation(line: 2051, column: 5, scope: !3226)
!4768 = !DILocation(line: 2051, column: 11, scope: !3226)
!4769 = !DILocation(line: 2051, column: 24, scope: !3226)
!4770 = !DILocation(line: 2054, column: 5, scope: !3226)
!4771 = !DILocation(line: 2054, column: 11, scope: !3226)
!4772 = !DILocation(line: 2054, column: 26, scope: !3226)
!4773 = !{!4530, !3893, i64 48}
!4774 = !DILocation(line: 2056, column: 24, scope: !3226)
!4775 = !DILocation(line: 2056, column: 30, scope: !3226)
!4776 = !DILocation(line: 2056, column: 5, scope: !3226)
!4777 = !DILocation(line: 2057, column: 13, scope: !3226)
!4778 = !DILocation(line: 2058, column: 9, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !3226, file: !4, line: 2058, column: 9)
!4780 = !DILocation(line: 2058, column: 23, scope: !4779)
!4781 = !DILocation(line: 2058, column: 9, scope: !3226)
!4782 = !DILocation(line: 2059, column: 17, scope: !4779)
!4783 = !DILocation(line: 2059, column: 9, scope: !4779)
!4784 = !DILocation(line: 2060, column: 19, scope: !3226)
!4785 = !DILocation(line: 2060, column: 25, scope: !3226)
!4786 = !DILocation(line: 2060, column: 34, scope: !3226)
!4787 = !DILocation(line: 2060, column: 5, scope: !3226)
!4788 = !DILocation(line: 2067, column: 18, scope: !3226)
!4789 = !DILocation(line: 2067, column: 24, scope: !3226)
!4790 = !DILocation(line: 2067, column: 5, scope: !3226)
!4791 = !DILocation(line: 2078, column: 36, scope: !3226)
!4792 = !DILocation(line: 2078, column: 42, scope: !3226)
!4793 = !DILocation(line: 2078, column: 5, scope: !3226)
!4794 = !DILocation(line: 2082, column: 24, scope: !3226)
!4795 = !DILocation(line: 2082, column: 12, scope: !3226)
!4796 = !DILocation(line: 2082, column: 5, scope: !3226)
!4797 = !DILocation(line: 2083, column: 1, scope: !3226)
!4798 = !DILocation(line: 2787, column: 35, scope: !2357)
!4799 = !DILocation(line: 2787, column: 51, scope: !2357)
!4800 = !DILocation(line: 2787, column: 67, scope: !2357)
!4801 = !DILocation(line: 2789, column: 5, scope: !2357)
!4802 = !DILocation(line: 2789, column: 11, scope: !2357)
!4803 = !DILocation(line: 2790, column: 5, scope: !2357)
!4804 = !DILocation(line: 2790, column: 25, scope: !2357)
!4805 = !DILocation(line: 2791, column: 5, scope: !2357)
!4806 = !DILocation(line: 2791, column: 9, scope: !2357)
!4807 = !DILocation(line: 2792, column: 5, scope: !2357)
!4808 = !DILocation(line: 2792, column: 11, scope: !2357)
!4809 = !DILocation(line: 2793, column: 5, scope: !2357)
!4810 = !DILocation(line: 2793, column: 15, scope: !2357)
!4811 = !DILocation(line: 2793, column: 30, scope: !2357)
!4812 = !DILocation(line: 2797, column: 38, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !2357, file: !4, line: 2797, column: 9)
!4814 = !DILocation(line: 2797, column: 44, scope: !4813)
!4815 = !DILocation(line: 2797, column: 73, scope: !4813)
!4816 = !DILocation(line: 2798, column: 53, scope: !4813)
!4817 = !{!4818, !3861, i64 0}
!4818 = !{!"", !3861, i64 0, !3861, i64 8, !3861, i64 16}
!4819 = !DILocation(line: 2800, column: 73, scope: !4813)
!4820 = !DILocation(line: 2797, column: 10, scope: !4813)
!4821 = !DILocation(line: 2797, column: 9, scope: !2357)
!4822 = !DILocation(line: 2801, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4813, file: !4, line: 2800, column: 99)
!4824 = !DILocation(line: 2802, column: 42, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4823, file: !4, line: 2802, column: 13)
!4826 = !DILocation(line: 2802, column: 48, scope: !4825)
!4827 = !DILocation(line: 2802, column: 76, scope: !4825)
!4828 = !DILocation(line: 2803, column: 28, scope: !4825)
!4829 = !DILocation(line: 2802, column: 14, scope: !4825)
!4830 = !DILocation(line: 2802, column: 13, scope: !4823)
!4831 = !DILocation(line: 2806, column: 13, scope: !4825)
!4832 = !DILocation(line: 2813, column: 5, scope: !4823)
!4833 = !DILocation(line: 2815, column: 39, scope: !2357)
!4834 = !DILocation(line: 2815, column: 45, scope: !2357)
!4835 = !DILocation(line: 2815, column: 51, scope: !2357)
!4836 = !DILocation(line: 2816, column: 39, scope: !2357)
!4837 = !DILocation(line: 2815, column: 24, scope: !2357)
!4838 = !DILocation(line: 2815, column: 11, scope: !2357)
!4839 = !DILocation(line: 2815, column: 9, scope: !2357)
!4840 = !DILocation(line: 2817, column: 9, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !2357, file: !4, line: 2817, column: 9)
!4842 = !DILocation(line: 2817, column: 18, scope: !4841)
!4843 = !DILocation(line: 2817, column: 9, scope: !2357)
!4844 = !DILocation(line: 2818, column: 20, scope: !4841)
!4845 = !DILocation(line: 2818, column: 9, scope: !4841)
!4846 = !DILocation(line: 2819, column: 12, scope: !2357)
!4847 = !DILocation(line: 2819, column: 5, scope: !2357)
!4848 = !DILocation(line: 2820, column: 1, scope: !2357)
!4849 = !DILocation(line: 2115, column: 27, scope: !2390)
!4850 = !DILocation(line: 2115, column: 43, scope: !2390)
!4851 = !DILocation(line: 2117, column: 5, scope: !2390)
!4852 = !DILocation(line: 2117, column: 9, scope: !2390)
!4853 = !DILocation(line: 2118, column: 5, scope: !2390)
!4854 = !DILocation(line: 2118, column: 17, scope: !2390)
!4855 = !DILocation(line: 2120, column: 27, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !2390, file: !4, line: 2120, column: 9)
!4857 = !DILocation(line: 2120, column: 10, scope: !4856)
!4858 = !DILocation(line: 2120, column: 9, scope: !2390)
!4859 = !DILocation(line: 2121, column: 9, scope: !4856)
!4860 = !DILocation(line: 2122, column: 35, scope: !2390)
!4861 = !DILocation(line: 2122, column: 41, scope: !2390)
!4862 = !DILocation(line: 2122, column: 46, scope: !2390)
!4863 = !DILocation(line: 2122, column: 11, scope: !2390)
!4864 = !DILocation(line: 2122, column: 9, scope: !2390)
!4865 = !DILocation(line: 2123, column: 9, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !2390, file: !4, line: 2123, column: 9)
!4867 = !DILocation(line: 2123, column: 13, scope: !4866)
!4868 = !DILocation(line: 2123, column: 9, scope: !2390)
!4869 = !DILocation(line: 2127, column: 9, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4866, file: !4, line: 2123, column: 19)
!4871 = !DILocation(line: 2128, column: 25, scope: !4870)
!4872 = !DILocation(line: 2128, column: 9, scope: !4870)
!4873 = !DILocation(line: 2130, column: 9, scope: !4870)
!4874 = !DILocation(line: 2132, column: 58, scope: !2390)
!4875 = !DILocation(line: 2132, column: 5, scope: !2390)
!4876 = !DILocation(line: 2133, column: 1, scope: !2390)
!4877 = !DILocation(line: 2182, column: 34, scope: !2398)
!4878 = !DILocation(line: 2182, column: 50, scope: !2398)
!4879 = !DILocation(line: 2185, column: 5, scope: !2398)
!4880 = !DILocation(line: 2185, column: 15, scope: !2398)
!4881 = !DILocation(line: 2187, column: 27, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !2398, file: !4, line: 2187, column: 9)
!4883 = !DILocation(line: 2187, column: 10, scope: !4882)
!4884 = !DILocation(line: 2187, column: 9, scope: !2398)
!4885 = !DILocation(line: 2188, column: 9, scope: !4882)
!4886 = !DILocation(line: 2190, column: 9, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !2398, file: !4, line: 2190, column: 9)
!4888 = !DILocation(line: 2190, column: 15, scope: !4887)
!4889 = !DILocation(line: 2190, column: 29, scope: !4887)
!4890 = !DILocation(line: 2190, column: 9, scope: !2398)
!4891 = !DILocation(line: 2191, column: 20, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4887, file: !4, line: 2190, column: 44)
!4893 = !DILocation(line: 2191, column: 26, scope: !4892)
!4894 = !DILocation(line: 2191, column: 9, scope: !4892)
!4895 = !DILocation(line: 2192, column: 5, scope: !4892)
!4896 = !DILocation(line: 2194, column: 47, scope: !2398)
!4897 = !{!4898, !4103, i64 16}
!4898 = !{!"bufferinfo", !3861, i64 0, !3861, i64 8, !4103, i64 16, !4103, i64 24, !3893, i64 32, !3893, i64 36, !3861, i64 40, !3861, i64 48, !3861, i64 56, !3861, i64 64, !3861, i64 72}
!4899 = !DILocation(line: 2194, column: 27, scope: !2398)
!4900 = !DILocation(line: 2194, column: 5, scope: !2398)
!4901 = !DILocation(line: 2194, column: 11, scope: !2398)
!4902 = !DILocation(line: 2194, column: 25, scope: !2398)
!4903 = !DILocation(line: 2195, column: 9, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !2398, file: !4, line: 2195, column: 9)
!4905 = !DILocation(line: 2195, column: 15, scope: !4904)
!4906 = !DILocation(line: 2195, column: 29, scope: !4904)
!4907 = !DILocation(line: 2195, column: 9, scope: !2398)
!4908 = !DILocation(line: 2196, column: 9, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !4, line: 2195, column: 44)
!4910 = !DILocation(line: 2197, column: 16, scope: !4909)
!4911 = !DILocation(line: 2197, column: 9, scope: !4909)
!4912 = !DILocation(line: 2199, column: 12, scope: !2398)
!4913 = !DILocation(line: 2199, column: 18, scope: !2398)
!4914 = !DILocation(line: 2199, column: 40, scope: !2398)
!4915 = !{!4898, !3861, i64 0}
!4916 = !DILocation(line: 2199, column: 52, scope: !2398)
!4917 = !DILocation(line: 2199, column: 5, scope: !2398)
!4918 = !DILocation(line: 2200, column: 44, scope: !2398)
!4919 = !DILocation(line: 2200, column: 31, scope: !2398)
!4920 = !DILocation(line: 2200, column: 5, scope: !2398)
!4921 = !DILocation(line: 2200, column: 11, scope: !2398)
!4922 = !DILocation(line: 2200, column: 29, scope: !2398)
!4923 = !{!4530, !3893, i64 32}
!4924 = !DILocation(line: 2204, column: 43, scope: !2398)
!4925 = !DILocation(line: 2204, column: 49, scope: !2398)
!4926 = !DILocation(line: 2206, column: 43, scope: !2398)
!4927 = !DILocation(line: 2204, column: 5, scope: !2398)
!4928 = !DILocation(line: 2207, column: 38, scope: !2398)
!4929 = !DILocation(line: 2207, column: 44, scope: !2398)
!4930 = !DILocation(line: 2209, column: 38, scope: !2398)
!4931 = !DILocation(line: 2207, column: 5, scope: !2398)
!4932 = !DILocation(line: 2211, column: 5, scope: !2398)
!4933 = !DILocation(line: 2212, column: 58, scope: !2398)
!4934 = !DILocation(line: 2212, column: 5, scope: !2398)
!4935 = !DILocation(line: 2218, column: 1, scope: !2398)
!4936 = !DILocation(line: 2459, column: 31, scope: !2421)
!4937 = !DILocation(line: 2459, column: 47, scope: !2421)
!4938 = !DILocation(line: 2459, column: 63, scope: !2421)
!4939 = !DILocation(line: 2461, column: 5, scope: !2421)
!4940 = !DILocation(line: 2461, column: 11, scope: !2421)
!4941 = !DILocation(line: 2462, column: 5, scope: !2421)
!4942 = !DILocation(line: 2462, column: 15, scope: !2421)
!4943 = !DILocation(line: 2462, column: 26, scope: !2421)
!4944 = !DILocation(line: 2462, column: 49, scope: !2421)
!4945 = !DILocation(line: 2463, column: 5, scope: !2421)
!4946 = !DILocation(line: 2463, column: 15, scope: !2421)
!4947 = !DILocation(line: 2463, column: 45, scope: !2421)
!4948 = !DILocation(line: 2464, column: 5, scope: !2421)
!4949 = !DILocation(line: 2464, column: 22, scope: !2421)
!4950 = !DILocation(line: 2464, column: 39, scope: !2421)
!4951 = !DILocation(line: 2464, column: 45, scope: !2421)
!4952 = !DILocation(line: 2464, column: 50, scope: !2421)
!4953 = !{!4954, !3861, i64 168}
!4954 = !{!"ssl_ctx_st", !3861, i64 0, !3861, i64 8, !3861, i64 16, !3861, i64 24, !3861, i64 32, !4103, i64 40, !3861, i64 48, !3861, i64 56, !3893, i64 64, !4103, i64 72, !3861, i64 80, !3861, i64 88, !3861, i64 96, !4955, i64 104, !3893, i64 148, !3861, i64 152, !3861, i64 160, !3861, i64 168, !3861, i64 176, !3861, i64 184, !3861, i64 192, !3861, i64 200, !4956, i64 208, !3861, i64 224, !3861, i64 232, !3861, i64 240, !3861, i64 248, !3861, i64 256, !3861, i64 264, !3861, i64 272, !4103, i64 280, !4103, i64 288, !4103, i64 296, !3861, i64 304, !3893, i64 312, !3861, i64 320, !3861, i64 328, !3893, i64 336, !3893, i64 340, !3862, i64 344, !3861, i64 376, !3861, i64 384, !3861, i64 392, !3893, i64 400, !3893, i64 404, !3861, i64 408, !3861, i64 416, !3861, i64 424, !3862, i64 432, !3862, i64 448, !3862, i64 464, !3861, i64 480, !3861, i64 488, !3861, i64 496, !3861, i64 504, !3861, i64 512, !3861, i64 520, !3861, i64 528, !3861, i64 536, !3893, i64 544, !3861, i64 552, !3861, i64 560, !3861, i64 568, !3861, i64 576, !3861, i64 584, !3861, i64 592, !3861, i64 600}
!4955 = !{!"", !3893, i64 0, !3893, i64 4, !3893, i64 8, !3893, i64 12, !3893, i64 16, !3893, i64 20, !3893, i64 24, !3893, i64 28, !3893, i64 32, !3893, i64 36, !3893, i64 40}
!4956 = !{!"crypto_ex_data_st", !3861, i64 0, !3893, i64 8}
!4957 = !DILocation(line: 2465, column: 5, scope: !2421)
!4958 = !DILocation(line: 2465, column: 11, scope: !2421)
!4959 = !DILocation(line: 2465, column: 34, scope: !2421)
!4960 = !DILocation(line: 2465, column: 40, scope: !2421)
!4961 = !DILocation(line: 2465, column: 45, scope: !2421)
!4962 = !{!4954, !3861, i64 176}
!4963 = !DILocation(line: 2466, column: 5, scope: !2421)
!4964 = !DILocation(line: 2466, column: 24, scope: !2421)
!4965 = !DILocation(line: 2467, column: 5, scope: !2421)
!4966 = !DILocation(line: 2467, column: 9, scope: !2421)
!4967 = !DILocation(line: 2469, column: 7, scope: !2421)
!4968 = !DILocation(line: 2469, column: 28, scope: !2421)
!4969 = !DILocation(line: 2470, column: 5, scope: !2421)
!4970 = !DILocation(line: 2471, column: 38, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2471, column: 9)
!4972 = !DILocation(line: 2471, column: 44, scope: !4971)
!4973 = !DILocation(line: 2472, column: 33, scope: !4971)
!4974 = !DILocation(line: 2471, column: 10, scope: !4971)
!4975 = !DILocation(line: 2471, column: 9, scope: !2421)
!4976 = !DILocation(line: 2474, column: 9, scope: !4971)
!4977 = !DILocation(line: 2475, column: 9, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2475, column: 9)
!4979 = !DILocation(line: 2475, column: 17, scope: !4978)
!4980 = !DILocation(line: 2475, column: 9, scope: !2421)
!4981 = !DILocation(line: 2476, column: 17, scope: !4978)
!4982 = !DILocation(line: 2476, column: 9, scope: !4978)
!4983 = !DILocation(line: 2477, column: 32, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2477, column: 9)
!4985 = !DILocation(line: 2477, column: 42, scope: !4984)
!4986 = !DILocation(line: 2477, column: 10, scope: !4984)
!4987 = !DILocation(line: 2477, column: 9, scope: !2421)
!4988 = !DILocation(line: 2478, column: 25, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4984, file: !4, line: 2477, column: 60)
!4990 = !DILocation(line: 2478, column: 9, scope: !4989)
!4991 = !DILocation(line: 2480, column: 9, scope: !4989)
!4992 = !DILocation(line: 2482, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2482, column: 9)
!4994 = !DILocation(line: 2482, column: 17, scope: !4993)
!4995 = !DILocation(line: 2482, column: 43, scope: !4996)
!4996 = !DILexicalBlockFile(scope: !4993, file: !4, discriminator: 1)
!4997 = !DILocation(line: 2482, column: 52, scope: !4993)
!4998 = !DILocation(line: 2482, column: 21, scope: !4993)
!4999 = !DILocation(line: 2482, column: 9, scope: !2421)
!5000 = !DILocation(line: 2483, column: 25, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4993, file: !4, line: 2482, column: 69)
!5002 = !DILocation(line: 2483, column: 9, scope: !5001)
!5003 = !DILocation(line: 2485, column: 9, scope: !5001)
!5004 = !DILocation(line: 2487, column: 9, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2487, column: 9)
!5006 = !DILocation(line: 2487, column: 18, scope: !5005)
!5007 = !DILocation(line: 2487, column: 21, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !5005, file: !4, discriminator: 1)
!5009 = !DILocation(line: 2487, column: 30, scope: !5005)
!5010 = !DILocation(line: 2487, column: 9, scope: !2421)
!5011 = !DILocation(line: 2488, column: 30, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !4, line: 2488, column: 13)
!5013 = distinct !DILexicalBlock(scope: !5005, file: !4, line: 2487, column: 52)
!5014 = !DILocation(line: 2488, column: 13, scope: !5012)
!5015 = !DILocation(line: 2488, column: 13, scope: !5013)
!5016 = !DILocation(line: 2489, column: 32, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !4, line: 2488, column: 41)
!5018 = !DILocation(line: 2489, column: 21, scope: !5017)
!5019 = !DILocation(line: 2489, column: 30, scope: !5017)
!5020 = !{!5021, !3861, i64 8}
!5021 = !{!"", !3861, i64 0, !3861, i64 8, !3861, i64 16, !3893, i64 24, !3893, i64 28}
!5022 = !DILocation(line: 2490, column: 9, scope: !5017)
!5023 = !DILocation(line: 2490, column: 43, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5012, file: !4, line: 2490, column: 20)
!5025 = !DILocation(line: 2490, column: 21, scope: !5024)
!5026 = !DILocation(line: 2490, column: 20, scope: !5012)
!5027 = !DILocation(line: 2492, column: 13, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !4, line: 2491, column: 77)
!5029 = !DILocation(line: 2494, column: 39, scope: !5013)
!5030 = !DILocation(line: 2494, column: 45, scope: !5013)
!5031 = !DILocation(line: 2494, column: 9, scope: !5013)
!5032 = !DILocation(line: 2495, column: 48, scope: !5013)
!5033 = !DILocation(line: 2495, column: 54, scope: !5013)
!5034 = !DILocation(line: 2495, column: 59, scope: !5013)
!5035 = !DILocation(line: 2495, column: 9, scope: !5013)
!5036 = !DILocation(line: 2496, column: 5, scope: !5013)
!5037 = !DILocation(line: 2497, column: 5, scope: !2421)
!5038 = !DILocation(line: 2497, column: 14, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !5040, file: !4, discriminator: 1)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !4, line: 2497, column: 14)
!5041 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2497, column: 8)
!5042 = !DILocation(line: 2497, column: 30, scope: !5040)
!5043 = !DILocation(line: 2497, column: 14, scope: !5041)
!5044 = !DILocation(line: 2497, column: 61, scope: !5045)
!5045 = !DILexicalBlockFile(scope: !5046, file: !4, discriminator: 2)
!5046 = distinct !DILexicalBlock(scope: !5040, file: !4, line: 2497, column: 34)
!5047 = !DILocation(line: 2497, column: 45, scope: !5046)
!5048 = !DILocation(line: 2497, column: 59, scope: !5046)
!5049 = !{!5021, !3861, i64 0}
!5050 = !DILocation(line: 2497, column: 82, scope: !5046)
!5051 = !DILocation(line: 2497, column: 84, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5053, file: !4, discriminator: 4)
!5053 = !DILexicalBlockFile(scope: !5041, file: !4, discriminator: 3)
!5054 = !DILocation(line: 2497, column: 84, scope: !5055)
!5055 = !DILexicalBlockFile(scope: !5041, file: !4, discriminator: 5)
!5056 = !DILocation(line: 2498, column: 44, scope: !2421)
!5057 = !DILocation(line: 2498, column: 50, scope: !2421)
!5058 = !DILocation(line: 2499, column: 44, scope: !2421)
!5059 = !DILocation(line: 2499, column: 26, scope: !2421)
!5060 = !DILocation(line: 2499, column: 62, scope: !2421)
!5061 = !DILocation(line: 2499, column: 24, scope: !2421)
!5062 = !DILocation(line: 2498, column: 9, scope: !2421)
!5063 = !DILocation(line: 2498, column: 7, scope: !2421)
!5064 = !DILocation(line: 2500, column: 5, scope: !2421)
!5065 = !DILocation(line: 2500, column: 14, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !5067, file: !4, discriminator: 1)
!5067 = distinct !DILexicalBlock(scope: !5068, file: !4, line: 2500, column: 14)
!5068 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2500, column: 8)
!5069 = !DILocation(line: 2500, column: 30, scope: !5067)
!5070 = !DILocation(line: 2500, column: 14, scope: !5068)
!5071 = !DILocation(line: 2500, column: 65, scope: !5072)
!5072 = !DILexicalBlockFile(scope: !5073, file: !4, discriminator: 2)
!5073 = distinct !DILexicalBlock(scope: !5067, file: !4, line: 2500, column: 34)
!5074 = !DILocation(line: 2500, column: 36, scope: !5073)
!5075 = !DILocation(line: 2500, column: 80, scope: !5073)
!5076 = !DILocation(line: 2500, column: 82, scope: !5077)
!5077 = !DILexicalBlockFile(scope: !5078, file: !4, discriminator: 4)
!5078 = !DILexicalBlockFile(scope: !5068, file: !4, discriminator: 3)
!5079 = !DILocation(line: 2500, column: 82, scope: !5080)
!5080 = !DILexicalBlockFile(scope: !5068, file: !4, discriminator: 5)
!5081 = !DILocation(line: 2501, column: 9, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2501, column: 9)
!5083 = !DILocation(line: 2501, column: 11, scope: !5082)
!5084 = !DILocation(line: 2501, column: 9, scope: !2421)
!5085 = !DILocation(line: 2502, column: 21, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !4, line: 2502, column: 13)
!5087 = distinct !DILexicalBlock(scope: !5082, file: !4, line: 2501, column: 17)
!5088 = !{!5021, !3893, i64 28}
!5089 = !DILocation(line: 2502, column: 13, scope: !5086)
!5090 = !DILocation(line: 2502, column: 13, scope: !5087)
!5091 = !DILocation(line: 2503, column: 13, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5086, file: !4, line: 2502, column: 28)
!5093 = !DILocation(line: 2505, column: 9, scope: !5092)
!5094 = !DILocation(line: 2506, column: 20, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5086, file: !4, line: 2506, column: 18)
!5096 = !DILocation(line: 2506, column: 19, scope: !5095)
!5097 = !DILocation(line: 2506, column: 41, scope: !5095)
!5098 = !DILocation(line: 2506, column: 18, scope: !5086)
!5099 = !DILocation(line: 2507, column: 13, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5095, file: !4, line: 2506, column: 47)
!5101 = !DILocation(line: 2508, column: 32, scope: !5100)
!5102 = !DILocation(line: 2508, column: 13, scope: !5100)
!5103 = !DILocation(line: 2509, column: 9, scope: !5100)
!5104 = !DILocation(line: 2511, column: 13, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5095, file: !4, line: 2510, column: 14)
!5106 = !DILocation(line: 2513, column: 9, scope: !5087)
!5107 = !DILocation(line: 2515, column: 5, scope: !2421)
!5108 = !DILocation(line: 2515, column: 14, scope: !5109)
!5109 = !DILexicalBlockFile(scope: !5110, file: !4, discriminator: 1)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !4, line: 2515, column: 14)
!5111 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2515, column: 8)
!5112 = !DILocation(line: 2515, column: 30, scope: !5110)
!5113 = !DILocation(line: 2515, column: 14, scope: !5111)
!5114 = !DILocation(line: 2515, column: 61, scope: !5115)
!5115 = !DILexicalBlockFile(scope: !5116, file: !4, discriminator: 2)
!5116 = distinct !DILexicalBlock(scope: !5110, file: !4, line: 2515, column: 34)
!5117 = !DILocation(line: 2515, column: 45, scope: !5116)
!5118 = !DILocation(line: 2515, column: 59, scope: !5116)
!5119 = !DILocation(line: 2515, column: 82, scope: !5116)
!5120 = !DILocation(line: 2515, column: 84, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !5122, file: !4, discriminator: 4)
!5122 = !DILexicalBlockFile(scope: !5111, file: !4, discriminator: 3)
!5123 = !DILocation(line: 2515, column: 84, scope: !5124)
!5124 = !DILexicalBlockFile(scope: !5111, file: !4, discriminator: 5)
!5125 = !DILocation(line: 2516, column: 37, scope: !2421)
!5126 = !DILocation(line: 2516, column: 43, scope: !2421)
!5127 = !DILocation(line: 2517, column: 44, scope: !2421)
!5128 = !DILocation(line: 2517, column: 54, scope: !5129)
!5129 = !DILexicalBlockFile(scope: !2421, file: !4, discriminator: 1)
!5130 = !DILocation(line: 2517, column: 70, scope: !5131)
!5131 = !DILexicalBlockFile(scope: !2421, file: !4, discriminator: 2)
!5132 = !DILocation(line: 2517, column: 26, scope: !5133)
!5133 = !DILexicalBlockFile(scope: !5134, file: !4, discriminator: 4)
!5134 = !DILexicalBlockFile(scope: !2421, file: !4, discriminator: 3)
!5135 = !DILocation(line: 2517, column: 88, scope: !2421)
!5136 = !DILocation(line: 2517, column: 24, scope: !2421)
!5137 = !DILocation(line: 2516, column: 9, scope: !2421)
!5138 = !DILocation(line: 2516, column: 7, scope: !2421)
!5139 = !DILocation(line: 2519, column: 5, scope: !2421)
!5140 = !DILocation(line: 2519, column: 14, scope: !5141)
!5141 = !DILexicalBlockFile(scope: !5142, file: !4, discriminator: 1)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !4, line: 2519, column: 14)
!5143 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2519, column: 8)
!5144 = !DILocation(line: 2519, column: 30, scope: !5142)
!5145 = !DILocation(line: 2519, column: 14, scope: !5143)
!5146 = !DILocation(line: 2519, column: 65, scope: !5147)
!5147 = !DILexicalBlockFile(scope: !5148, file: !4, discriminator: 2)
!5148 = distinct !DILexicalBlock(scope: !5142, file: !4, line: 2519, column: 34)
!5149 = !DILocation(line: 2519, column: 36, scope: !5148)
!5150 = !DILocation(line: 2519, column: 80, scope: !5148)
!5151 = !DILocation(line: 2519, column: 82, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !5153, file: !4, discriminator: 4)
!5153 = !DILexicalBlockFile(scope: !5143, file: !4, discriminator: 3)
!5154 = !DILocation(line: 2519, column: 82, scope: !5155)
!5155 = !DILexicalBlockFile(scope: !5143, file: !4, discriminator: 5)
!5156 = !DILocation(line: 2520, column: 5, scope: !2421)
!5157 = !DILocation(line: 2520, column: 10, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !2437, file: !4, discriminator: 1)
!5159 = !DILocation(line: 2520, column: 20, scope: !2437)
!5160 = !DILocation(line: 2520, column: 43, scope: !2437)
!5161 = !DILocation(line: 2520, column: 63, scope: !2441)
!5162 = !DILocation(line: 2520, column: 71, scope: !2441)
!5163 = !DILocation(line: 2520, column: 63, scope: !2437)
!5164 = !DILocation(line: 2520, column: 104, scope: !5165)
!5165 = !DILexicalBlockFile(scope: !2440, file: !4, discriminator: 2)
!5166 = !DILocation(line: 2520, column: 118, scope: !2440)
!5167 = !DILocation(line: 2520, column: 123, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !2439, file: !4, discriminator: 4)
!5169 = !DILocation(line: 2520, column: 133, scope: !2439)
!5170 = !DILocation(line: 2520, column: 163, scope: !2439)
!5171 = !DILocation(line: 2520, column: 181, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !2439, file: !4, line: 2520, column: 178)
!5173 = !DILocation(line: 2520, column: 198, scope: !5172)
!5174 = !DILocation(line: 2520, column: 178, scope: !5172)
!5175 = !DILocation(line: 2520, column: 208, scope: !5172)
!5176 = !DILocation(line: 2520, column: 178, scope: !2439)
!5177 = !DILocation(line: 2520, column: 178, scope: !5178)
!5178 = !DILexicalBlockFile(scope: !2439, file: !4, discriminator: 5)
!5179 = !DILocation(line: 2520, column: 239, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !5172, file: !4, discriminator: 6)
!5181 = !DILocation(line: 2520, column: 257, scope: !5172)
!5182 = !DILocation(line: 2520, column: 267, scope: !5172)
!5183 = !DILocation(line: 2520, column: 292, scope: !5172)
!5184 = !DILocation(line: 2520, column: 223, scope: !5172)
!5185 = !DILocation(line: 2520, column: 311, scope: !5186)
!5186 = !DILexicalBlockFile(scope: !2440, file: !4, discriminator: 7)
!5187 = !DILocation(line: 2520, column: 311, scope: !2439)
!5188 = !DILocation(line: 2520, column: 311, scope: !5189)
!5189 = !DILexicalBlockFile(scope: !2439, file: !4, discriminator: 8)
!5190 = !DILocation(line: 2520, column: 324, scope: !5191)
!5191 = !DILexicalBlockFile(scope: !2440, file: !4, discriminator: 9)
!5192 = !DILocation(line: 2520, column: 326, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !5134, file: !4, discriminator: 10)
!5194 = !DILocation(line: 2520, column: 326, scope: !2437)
!5195 = !DILocation(line: 2520, column: 326, scope: !5196)
!5196 = !DILexicalBlockFile(scope: !2437, file: !4, discriminator: 11)
!5197 = !DILocation(line: 2521, column: 5, scope: !2421)
!5198 = !DILocation(line: 2521, column: 10, scope: !5199)
!5199 = !DILexicalBlockFile(scope: !2443, file: !4, discriminator: 1)
!5200 = !DILocation(line: 2521, column: 20, scope: !2443)
!5201 = !DILocation(line: 2521, column: 43, scope: !2443)
!5202 = !DILocation(line: 2521, column: 64, scope: !2447)
!5203 = !DILocation(line: 2521, column: 72, scope: !2447)
!5204 = !DILocation(line: 2521, column: 64, scope: !2443)
!5205 = !DILocation(line: 2521, column: 106, scope: !5206)
!5206 = !DILexicalBlockFile(scope: !2446, file: !4, discriminator: 2)
!5207 = !DILocation(line: 2521, column: 120, scope: !2446)
!5208 = !DILocation(line: 2521, column: 125, scope: !5209)
!5209 = !DILexicalBlockFile(scope: !2445, file: !4, discriminator: 4)
!5210 = !DILocation(line: 2521, column: 135, scope: !2445)
!5211 = !DILocation(line: 2521, column: 165, scope: !2445)
!5212 = !DILocation(line: 2521, column: 183, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !2445, file: !4, line: 2521, column: 180)
!5214 = !DILocation(line: 2521, column: 200, scope: !5213)
!5215 = !DILocation(line: 2521, column: 180, scope: !5213)
!5216 = !DILocation(line: 2521, column: 210, scope: !5213)
!5217 = !DILocation(line: 2521, column: 180, scope: !2445)
!5218 = !DILocation(line: 2521, column: 180, scope: !5219)
!5219 = !DILexicalBlockFile(scope: !2445, file: !4, discriminator: 5)
!5220 = !DILocation(line: 2521, column: 241, scope: !5221)
!5221 = !DILexicalBlockFile(scope: !5213, file: !4, discriminator: 6)
!5222 = !DILocation(line: 2521, column: 259, scope: !5213)
!5223 = !DILocation(line: 2521, column: 269, scope: !5213)
!5224 = !DILocation(line: 2521, column: 294, scope: !5213)
!5225 = !DILocation(line: 2521, column: 225, scope: !5213)
!5226 = !DILocation(line: 2521, column: 313, scope: !5227)
!5227 = !DILexicalBlockFile(scope: !2446, file: !4, discriminator: 7)
!5228 = !DILocation(line: 2521, column: 313, scope: !2445)
!5229 = !DILocation(line: 2521, column: 313, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !2445, file: !4, discriminator: 8)
!5231 = !DILocation(line: 2521, column: 326, scope: !5232)
!5232 = !DILexicalBlockFile(scope: !2446, file: !4, discriminator: 9)
!5233 = !DILocation(line: 2521, column: 328, scope: !5193)
!5234 = !DILocation(line: 2521, column: 328, scope: !2443)
!5235 = !DILocation(line: 2521, column: 328, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !2443, file: !4, discriminator: 11)
!5237 = !DILocation(line: 2522, column: 9, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2522, column: 9)
!5239 = !DILocation(line: 2522, column: 11, scope: !5238)
!5240 = !DILocation(line: 2522, column: 9, scope: !2421)
!5241 = !DILocation(line: 2523, column: 21, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5243, file: !4, line: 2523, column: 13)
!5243 = distinct !DILexicalBlock(scope: !5238, file: !4, line: 2522, column: 17)
!5244 = !DILocation(line: 2523, column: 13, scope: !5242)
!5245 = !DILocation(line: 2523, column: 13, scope: !5243)
!5246 = !DILocation(line: 2524, column: 13, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5242, file: !4, line: 2523, column: 28)
!5248 = !DILocation(line: 2526, column: 9, scope: !5247)
!5249 = !DILocation(line: 2527, column: 20, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5242, file: !4, line: 2527, column: 18)
!5251 = !DILocation(line: 2527, column: 19, scope: !5250)
!5252 = !DILocation(line: 2527, column: 41, scope: !5250)
!5253 = !DILocation(line: 2527, column: 18, scope: !5242)
!5254 = !DILocation(line: 2528, column: 13, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5250, file: !4, line: 2527, column: 47)
!5256 = !DILocation(line: 2529, column: 32, scope: !5255)
!5257 = !DILocation(line: 2529, column: 13, scope: !5255)
!5258 = !DILocation(line: 2530, column: 9, scope: !5255)
!5259 = !DILocation(line: 2532, column: 13, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5250, file: !4, line: 2531, column: 14)
!5261 = !DILocation(line: 2534, column: 9, scope: !5243)
!5262 = !DILocation(line: 2536, column: 5, scope: !2421)
!5263 = !DILocation(line: 2536, column: 14, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5265, file: !4, discriminator: 1)
!5265 = distinct !DILexicalBlock(scope: !5266, file: !4, line: 2536, column: 14)
!5266 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2536, column: 8)
!5267 = !DILocation(line: 2536, column: 30, scope: !5265)
!5268 = !DILocation(line: 2536, column: 14, scope: !5266)
!5269 = !DILocation(line: 2536, column: 61, scope: !5270)
!5270 = !DILexicalBlockFile(scope: !5271, file: !4, discriminator: 2)
!5271 = distinct !DILexicalBlock(scope: !5265, file: !4, line: 2536, column: 34)
!5272 = !DILocation(line: 2536, column: 45, scope: !5271)
!5273 = !DILocation(line: 2536, column: 59, scope: !5271)
!5274 = !DILocation(line: 2536, column: 82, scope: !5271)
!5275 = !DILocation(line: 2536, column: 84, scope: !5276)
!5276 = !DILexicalBlockFile(scope: !5277, file: !4, discriminator: 4)
!5277 = !DILexicalBlockFile(scope: !5266, file: !4, discriminator: 3)
!5278 = !DILocation(line: 2536, column: 84, scope: !5279)
!5279 = !DILexicalBlockFile(scope: !5266, file: !4, discriminator: 5)
!5280 = !DILocation(line: 2537, column: 35, scope: !2421)
!5281 = !DILocation(line: 2537, column: 41, scope: !2421)
!5282 = !DILocation(line: 2537, column: 9, scope: !2421)
!5283 = !DILocation(line: 2537, column: 7, scope: !2421)
!5284 = !DILocation(line: 2538, column: 5, scope: !2421)
!5285 = !DILocation(line: 2538, column: 14, scope: !5286)
!5286 = !DILexicalBlockFile(scope: !5287, file: !4, discriminator: 1)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !4, line: 2538, column: 14)
!5288 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2538, column: 8)
!5289 = !DILocation(line: 2538, column: 30, scope: !5287)
!5290 = !DILocation(line: 2538, column: 14, scope: !5288)
!5291 = !DILocation(line: 2538, column: 65, scope: !5292)
!5292 = !DILexicalBlockFile(scope: !5293, file: !4, discriminator: 2)
!5293 = distinct !DILexicalBlock(scope: !5287, file: !4, line: 2538, column: 34)
!5294 = !DILocation(line: 2538, column: 36, scope: !5293)
!5295 = !DILocation(line: 2538, column: 80, scope: !5293)
!5296 = !DILocation(line: 2538, column: 82, scope: !5297)
!5297 = !DILexicalBlockFile(scope: !5298, file: !4, discriminator: 4)
!5298 = !DILexicalBlockFile(scope: !5288, file: !4, discriminator: 3)
!5299 = !DILocation(line: 2538, column: 82, scope: !5300)
!5300 = !DILexicalBlockFile(scope: !5288, file: !4, discriminator: 5)
!5301 = !DILocation(line: 2539, column: 9, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !2421, file: !4, line: 2539, column: 9)
!5303 = !DILocation(line: 2539, column: 11, scope: !5302)
!5304 = !DILocation(line: 2539, column: 9, scope: !2421)
!5305 = !DILocation(line: 2540, column: 9, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5302, file: !4, line: 2539, column: 17)
!5307 = !DILocation(line: 2541, column: 9, scope: !5306)
!5308 = !DILocation(line: 2543, column: 35, scope: !2421)
!5309 = !DILocation(line: 2543, column: 41, scope: !2421)
!5310 = !DILocation(line: 2543, column: 46, scope: !2421)
!5311 = !DILocation(line: 2543, column: 5, scope: !2421)
!5312 = !DILocation(line: 2544, column: 44, scope: !2421)
!5313 = !DILocation(line: 2544, column: 50, scope: !2421)
!5314 = !DILocation(line: 2544, column: 55, scope: !2421)
!5315 = !DILocation(line: 2544, column: 5, scope: !2421)
!5316 = !DILocation(line: 2545, column: 24, scope: !2421)
!5317 = !{!5021, !3861, i64 16}
!5318 = !DILocation(line: 2545, column: 5, scope: !2421)
!5319 = !DILocation(line: 2546, column: 58, scope: !2421)
!5320 = !DILocation(line: 2546, column: 5, scope: !2421)
!5321 = !DILocation(line: 2549, column: 35, scope: !2421)
!5322 = !DILocation(line: 2549, column: 41, scope: !2421)
!5323 = !DILocation(line: 2549, column: 46, scope: !2421)
!5324 = !DILocation(line: 2549, column: 5, scope: !2421)
!5325 = !DILocation(line: 2550, column: 44, scope: !2421)
!5326 = !DILocation(line: 2550, column: 50, scope: !2421)
!5327 = !DILocation(line: 2550, column: 55, scope: !2421)
!5328 = !DILocation(line: 2550, column: 5, scope: !2421)
!5329 = !DILocation(line: 2551, column: 24, scope: !2421)
!5330 = !DILocation(line: 2551, column: 5, scope: !2421)
!5331 = !DILocation(line: 2552, column: 5, scope: !2421)
!5332 = !DILocation(line: 2552, column: 10, scope: !5333)
!5333 = !DILexicalBlockFile(scope: !2449, file: !4, discriminator: 1)
!5334 = !DILocation(line: 2552, column: 20, scope: !2449)
!5335 = !DILocation(line: 2552, column: 51, scope: !2449)
!5336 = !DILocation(line: 2552, column: 71, scope: !2452)
!5337 = !DILocation(line: 2552, column: 87, scope: !2452)
!5338 = !DILocation(line: 2552, column: 71, scope: !2449)
!5339 = !DILocation(line: 2552, column: 102, scope: !5340)
!5340 = !DILexicalBlockFile(scope: !2452, file: !4, discriminator: 2)
!5341 = !DILocation(line: 2552, column: 107, scope: !5342)
!5342 = !DILexicalBlockFile(scope: !2451, file: !4, discriminator: 4)
!5343 = !DILocation(line: 2552, column: 117, scope: !2451)
!5344 = !DILocation(line: 2552, column: 147, scope: !2451)
!5345 = !DILocation(line: 2552, column: 173, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !2451, file: !4, line: 2552, column: 170)
!5347 = !DILocation(line: 2552, column: 190, scope: !5346)
!5348 = !DILocation(line: 2552, column: 170, scope: !5346)
!5349 = !DILocation(line: 2552, column: 200, scope: !5346)
!5350 = !DILocation(line: 2552, column: 170, scope: !2451)
!5351 = !DILocation(line: 2552, column: 170, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !2451, file: !4, discriminator: 5)
!5353 = !DILocation(line: 2552, column: 231, scope: !5354)
!5354 = !DILexicalBlockFile(scope: !5346, file: !4, discriminator: 6)
!5355 = !DILocation(line: 2552, column: 249, scope: !5346)
!5356 = !DILocation(line: 2552, column: 259, scope: !5346)
!5357 = !DILocation(line: 2552, column: 284, scope: !5346)
!5358 = !DILocation(line: 2552, column: 215, scope: !5346)
!5359 = !DILocation(line: 2552, column: 303, scope: !5360)
!5360 = !DILexicalBlockFile(scope: !2452, file: !4, discriminator: 7)
!5361 = !DILocation(line: 2552, column: 303, scope: !2451)
!5362 = !DILocation(line: 2552, column: 303, scope: !5363)
!5363 = !DILexicalBlockFile(scope: !2451, file: !4, discriminator: 8)
!5364 = !DILocation(line: 2552, column: 303, scope: !5365)
!5365 = !DILexicalBlockFile(scope: !2451, file: !4, discriminator: 9)
!5366 = !DILocation(line: 2552, column: 316, scope: !5193)
!5367 = !DILocation(line: 2552, column: 316, scope: !2449)
!5368 = !DILocation(line: 2552, column: 316, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !2449, file: !4, discriminator: 11)
!5370 = !DILocation(line: 2553, column: 5, scope: !2421)
!5371 = !DILocation(line: 2553, column: 10, scope: !5372)
!5372 = !DILexicalBlockFile(scope: !2454, file: !4, discriminator: 1)
!5373 = !DILocation(line: 2553, column: 20, scope: !2454)
!5374 = !DILocation(line: 2553, column: 51, scope: !2454)
!5375 = !DILocation(line: 2553, column: 72, scope: !2457)
!5376 = !DILocation(line: 2553, column: 88, scope: !2457)
!5377 = !DILocation(line: 2553, column: 72, scope: !2454)
!5378 = !DILocation(line: 2553, column: 103, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !2457, file: !4, discriminator: 2)
!5380 = !DILocation(line: 2553, column: 108, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !2456, file: !4, discriminator: 4)
!5382 = !DILocation(line: 2553, column: 118, scope: !2456)
!5383 = !DILocation(line: 2553, column: 148, scope: !2456)
!5384 = !DILocation(line: 2553, column: 174, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !2456, file: !4, line: 2553, column: 171)
!5386 = !DILocation(line: 2553, column: 191, scope: !5385)
!5387 = !DILocation(line: 2553, column: 171, scope: !5385)
!5388 = !DILocation(line: 2553, column: 201, scope: !5385)
!5389 = !DILocation(line: 2553, column: 171, scope: !2456)
!5390 = !DILocation(line: 2553, column: 171, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !2456, file: !4, discriminator: 5)
!5392 = !DILocation(line: 2553, column: 232, scope: !5393)
!5393 = !DILexicalBlockFile(scope: !5385, file: !4, discriminator: 6)
!5394 = !DILocation(line: 2553, column: 250, scope: !5385)
!5395 = !DILocation(line: 2553, column: 260, scope: !5385)
!5396 = !DILocation(line: 2553, column: 285, scope: !5385)
!5397 = !DILocation(line: 2553, column: 216, scope: !5385)
!5398 = !DILocation(line: 2553, column: 304, scope: !5399)
!5399 = !DILexicalBlockFile(scope: !2457, file: !4, discriminator: 7)
!5400 = !DILocation(line: 2553, column: 304, scope: !2456)
!5401 = !DILocation(line: 2553, column: 304, scope: !5402)
!5402 = !DILexicalBlockFile(scope: !2456, file: !4, discriminator: 8)
!5403 = !DILocation(line: 2553, column: 304, scope: !5404)
!5404 = !DILexicalBlockFile(scope: !2456, file: !4, discriminator: 9)
!5405 = !DILocation(line: 2553, column: 317, scope: !5193)
!5406 = !DILocation(line: 2553, column: 317, scope: !2454)
!5407 = !DILocation(line: 2553, column: 317, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !2454, file: !4, discriminator: 11)
!5409 = !DILocation(line: 2554, column: 5, scope: !2421)
!5410 = !DILocation(line: 2555, column: 1, scope: !2421)
!5411 = !DILocation(line: 2754, column: 30, scope: !2537)
!5412 = !DILocation(line: 2754, column: 46, scope: !2537)
!5413 = !DILocation(line: 2756, column: 5, scope: !2537)
!5414 = !DILocation(line: 2756, column: 11, scope: !2537)
!5415 = !DILocation(line: 2757, column: 5, scope: !2537)
!5416 = !DILocation(line: 2757, column: 9, scope: !2537)
!5417 = !DILocation(line: 2759, column: 23, scope: !2537)
!5418 = !DILocation(line: 2759, column: 9, scope: !2537)
!5419 = !DILocation(line: 2759, column: 7, scope: !2537)
!5420 = !DILocation(line: 2760, column: 9, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !2537, file: !4, line: 2760, column: 9)
!5422 = !DILocation(line: 2760, column: 11, scope: !5421)
!5423 = !DILocation(line: 2760, column: 9, scope: !2537)
!5424 = !DILocation(line: 2761, column: 14, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !4, line: 2761, column: 13)
!5426 = distinct !DILexicalBlock(scope: !5421, file: !4, line: 2760, column: 26)
!5427 = !DILocation(line: 2761, column: 13, scope: !5426)
!5428 = !DILocation(line: 2762, column: 50, scope: !5425)
!5429 = !DILocation(line: 2762, column: 65, scope: !5425)
!5430 = !DILocation(line: 2762, column: 13, scope: !5425)
!5431 = !DILocation(line: 2763, column: 9, scope: !5426)
!5432 = !DILocation(line: 2765, column: 7, scope: !2537)
!5433 = !DILocation(line: 2765, column: 28, scope: !2537)
!5434 = !DILocation(line: 2766, column: 7, scope: !2544)
!5435 = !DILocation(line: 2766, column: 22, scope: !2544)
!5436 = !DILocation(line: 2766, column: 42, scope: !2544)
!5437 = !DILocation(line: 2766, column: 51, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !5439, file: !4, discriminator: 1)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !4, line: 2766, column: 51)
!5440 = distinct !DILexicalBlock(scope: !2544, file: !4, line: 2766, column: 45)
!5441 = !DILocation(line: 2766, column: 67, scope: !5439)
!5442 = !DILocation(line: 2766, column: 51, scope: !5440)
!5443 = !DILocation(line: 2766, column: 83, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5445, file: !4, discriminator: 2)
!5445 = distinct !DILexicalBlock(scope: !5439, file: !4, line: 2766, column: 71)
!5446 = !DILocation(line: 2766, column: 81, scope: !5445)
!5447 = !DILocation(line: 2766, column: 104, scope: !5445)
!5448 = !DILocation(line: 2766, column: 106, scope: !5449)
!5449 = !DILexicalBlockFile(scope: !5450, file: !4, discriminator: 4)
!5450 = !DILexicalBlockFile(scope: !5440, file: !4, discriminator: 3)
!5451 = !DILocation(line: 2766, column: 106, scope: !5452)
!5452 = !DILexicalBlockFile(scope: !5440, file: !4, discriminator: 5)
!5453 = !DILocation(line: 2767, column: 28, scope: !2544)
!5454 = !DILocation(line: 2767, column: 10, scope: !2544)
!5455 = !DILocation(line: 2767, column: 8, scope: !2544)
!5456 = !DILocation(line: 2768, column: 12, scope: !2544)
!5457 = !DILocation(line: 2768, column: 5, scope: !2544)
!5458 = !DILocation(line: 2769, column: 5, scope: !2544)
!5459 = !DILocation(line: 2769, column: 14, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5461, file: !4, discriminator: 1)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !4, line: 2769, column: 14)
!5462 = distinct !DILexicalBlock(scope: !2544, file: !4, line: 2769, column: 8)
!5463 = !DILocation(line: 2769, column: 30, scope: !5461)
!5464 = !DILocation(line: 2769, column: 14, scope: !5462)
!5465 = !DILocation(line: 2769, column: 57, scope: !5466)
!5466 = !DILexicalBlockFile(scope: !5467, file: !4, discriminator: 2)
!5467 = distinct !DILexicalBlock(scope: !5461, file: !4, line: 2769, column: 34)
!5468 = !DILocation(line: 2769, column: 36, scope: !5467)
!5469 = !DILocation(line: 2769, column: 65, scope: !5467)
!5470 = !DILocation(line: 2769, column: 67, scope: !5471)
!5471 = !DILexicalBlockFile(scope: !5472, file: !4, discriminator: 4)
!5472 = !DILexicalBlockFile(scope: !5462, file: !4, discriminator: 3)
!5473 = !DILocation(line: 2769, column: 67, scope: !5474)
!5474 = !DILexicalBlockFile(scope: !5462, file: !4, discriminator: 5)
!5475 = !DILocation(line: 2769, column: 80, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !2537, file: !4, discriminator: 6)
!5477 = !DILocation(line: 2770, column: 9, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !2537, file: !4, line: 2770, column: 9)
!5479 = !DILocation(line: 2770, column: 12, scope: !5478)
!5480 = !DILocation(line: 2770, column: 9, scope: !2537)
!5481 = !DILocation(line: 2771, column: 15, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !4, line: 2771, column: 13)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !4, line: 2770, column: 27)
!5484 = !DILocation(line: 2771, column: 14, scope: !5482)
!5485 = !DILocation(line: 2771, column: 36, scope: !5482)
!5486 = !DILocation(line: 2771, column: 13, scope: !5483)
!5487 = !DILocation(line: 2772, column: 13, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5482, file: !4, line: 2771, column: 42)
!5489 = !DILocation(line: 2773, column: 50, scope: !5488)
!5490 = !DILocation(line: 2773, column: 65, scope: !5488)
!5491 = !DILocation(line: 2773, column: 13, scope: !5488)
!5492 = !DILocation(line: 2774, column: 9, scope: !5488)
!5493 = !DILocation(line: 2776, column: 13, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5482, file: !4, line: 2775, column: 14)
!5495 = !DILocation(line: 2778, column: 9, scope: !5483)
!5496 = !DILocation(line: 2780, column: 22, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !2537, file: !4, line: 2780, column: 9)
!5498 = !DILocation(line: 2780, column: 28, scope: !5497)
!5499 = !DILocation(line: 2780, column: 44, scope: !5497)
!5500 = !DILocation(line: 2780, column: 36, scope: !5497)
!5501 = !DILocation(line: 2780, column: 9, scope: !5497)
!5502 = !DILocation(line: 2780, column: 48, scope: !5497)
!5503 = !DILocation(line: 2780, column: 9, scope: !2537)
!5504 = !DILocation(line: 2781, column: 9, scope: !5497)
!5505 = !DILocation(line: 2782, column: 13, scope: !2537)
!5506 = !DILocation(line: 2782, column: 5, scope: !2537)
!5507 = !DILocation(line: 2783, column: 58, scope: !2537)
!5508 = !DILocation(line: 2783, column: 5, scope: !2537)
!5509 = !DILocation(line: 2784, column: 1, scope: !2537)
!5510 = !DILocation(line: 2643, column: 37, scope: !2545)
!5511 = !DILocation(line: 2643, column: 53, scope: !2545)
!5512 = !DILocation(line: 2643, column: 69, scope: !2545)
!5513 = !DILocation(line: 2645, column: 5, scope: !2545)
!5514 = !DILocation(line: 2645, column: 11, scope: !2545)
!5515 = !DILocation(line: 2646, column: 5, scope: !2545)
!5516 = !DILocation(line: 2646, column: 15, scope: !2545)
!5517 = !DILocation(line: 2646, column: 37, scope: !2545)
!5518 = !DILocation(line: 2646, column: 59, scope: !2545)
!5519 = !DILocation(line: 2647, column: 5, scope: !2545)
!5520 = !DILocation(line: 2647, column: 15, scope: !2545)
!5521 = !DILocation(line: 2647, column: 43, scope: !2545)
!5522 = !DILocation(line: 2648, column: 5, scope: !2545)
!5523 = !DILocation(line: 2648, column: 17, scope: !2545)
!5524 = !DILocation(line: 2648, column: 43, scope: !2545)
!5525 = !DILocation(line: 2649, column: 5, scope: !2545)
!5526 = !DILocation(line: 2649, column: 9, scope: !2545)
!5527 = !DILocation(line: 2649, column: 16, scope: !2545)
!5528 = !DILocation(line: 2651, column: 7, scope: !2545)
!5529 = !DILocation(line: 2651, column: 28, scope: !2545)
!5530 = !DILocation(line: 2652, column: 38, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2652, column: 9)
!5532 = !DILocation(line: 2652, column: 44, scope: !5531)
!5533 = !DILocation(line: 2653, column: 39, scope: !5531)
!5534 = !DILocation(line: 2652, column: 10, scope: !5531)
!5535 = !DILocation(line: 2652, column: 9, scope: !2545)
!5536 = !DILocation(line: 2655, column: 9, scope: !5531)
!5537 = !DILocation(line: 2657, column: 9, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2657, column: 9)
!5539 = !DILocation(line: 2657, column: 16, scope: !5538)
!5540 = !DILocation(line: 2657, column: 9, scope: !2545)
!5541 = !DILocation(line: 2658, column: 16, scope: !5538)
!5542 = !DILocation(line: 2658, column: 9, scope: !5538)
!5543 = !DILocation(line: 2659, column: 9, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2659, column: 9)
!5545 = !DILocation(line: 2659, column: 16, scope: !5544)
!5546 = !DILocation(line: 2659, column: 9, scope: !2545)
!5547 = !DILocation(line: 2660, column: 16, scope: !5544)
!5548 = !DILocation(line: 2660, column: 9, scope: !5544)
!5549 = !DILocation(line: 2661, column: 9, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2661, column: 9)
!5551 = !DILocation(line: 2661, column: 16, scope: !5550)
!5552 = !DILocation(line: 2661, column: 9, scope: !2545)
!5553 = !DILocation(line: 2662, column: 16, scope: !5550)
!5554 = !DILocation(line: 2662, column: 9, scope: !5550)
!5555 = !DILocation(line: 2664, column: 9, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2664, column: 9)
!5557 = !DILocation(line: 2664, column: 16, scope: !5556)
!5558 = !DILocation(line: 2664, column: 30, scope: !5556)
!5559 = !DILocation(line: 2664, column: 33, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5556, file: !4, discriminator: 1)
!5561 = !DILocation(line: 2664, column: 40, scope: !5556)
!5562 = !DILocation(line: 2664, column: 54, scope: !5556)
!5563 = !DILocation(line: 2664, column: 57, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5556, file: !4, discriminator: 2)
!5565 = !DILocation(line: 2664, column: 64, scope: !5556)
!5566 = !DILocation(line: 2664, column: 9, scope: !2545)
!5567 = !DILocation(line: 2665, column: 25, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5556, file: !4, line: 2664, column: 79)
!5569 = !DILocation(line: 2665, column: 9, scope: !5568)
!5570 = !DILocation(line: 2667, column: 9, scope: !5568)
!5571 = !DILocation(line: 2669, column: 9, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2669, column: 9)
!5573 = !DILocation(line: 2669, column: 16, scope: !5572)
!5574 = !DILocation(line: 2669, column: 42, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !5572, file: !4, discriminator: 1)
!5576 = !DILocation(line: 2669, column: 50, scope: !5572)
!5577 = !DILocation(line: 2669, column: 20, scope: !5572)
!5578 = !DILocation(line: 2669, column: 9, scope: !2545)
!5579 = !DILocation(line: 2670, column: 25, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5572, file: !4, line: 2669, column: 66)
!5581 = !DILocation(line: 2670, column: 9, scope: !5580)
!5582 = !DILocation(line: 2672, column: 9, scope: !5580)
!5583 = !DILocation(line: 2674, column: 9, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2674, column: 9)
!5585 = !DILocation(line: 2674, column: 16, scope: !5584)
!5586 = !DILocation(line: 2674, column: 42, scope: !5587)
!5587 = !DILexicalBlockFile(scope: !5584, file: !4, discriminator: 1)
!5588 = !DILocation(line: 2674, column: 50, scope: !5584)
!5589 = !DILocation(line: 2674, column: 20, scope: !5584)
!5590 = !DILocation(line: 2674, column: 9, scope: !2545)
!5591 = !DILocation(line: 2675, column: 25, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5584, file: !4, line: 2674, column: 66)
!5593 = !DILocation(line: 2675, column: 9, scope: !5592)
!5594 = !DILocation(line: 2677, column: 9, scope: !5592)
!5595 = !DILocation(line: 2681, column: 9, scope: !2562)
!5596 = !DILocation(line: 2681, column: 9, scope: !2545)
!5597 = !DILocation(line: 2682, column: 9, scope: !2561)
!5598 = !DILocation(line: 2682, column: 19, scope: !2561)
!5599 = !DILocation(line: 2683, column: 9, scope: !2561)
!5600 = !DILocation(line: 2683, column: 19, scope: !2561)
!5601 = !DILocation(line: 2685, column: 32, scope: !2567)
!5602 = !DILocation(line: 2685, column: 13, scope: !2567)
!5603 = !DILocation(line: 2685, column: 49, scope: !2567)
!5604 = !DILocation(line: 2685, column: 13, scope: !2561)
!5605 = !DILocation(line: 2686, column: 18, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !4, line: 2686, column: 17)
!5607 = distinct !DILexicalBlock(scope: !2567, file: !4, line: 2685, column: 55)
!5608 = !DILocation(line: 2686, column: 51, scope: !5606)
!5609 = !DILocation(line: 2686, column: 58, scope: !5610)
!5610 = !DILexicalBlockFile(scope: !5606, file: !4, discriminator: 1)
!5611 = !{!4898, !3893, i64 36}
!5612 = !DILocation(line: 2686, column: 63, scope: !5606)
!5613 = !DILocation(line: 2686, column: 17, scope: !5607)
!5614 = !DILocation(line: 2687, column: 17, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5606, file: !4, line: 2686, column: 68)
!5616 = !DILocation(line: 2688, column: 33, scope: !5615)
!5617 = !DILocation(line: 2688, column: 17, scope: !5615)
!5618 = !DILocation(line: 2691, column: 17, scope: !5615)
!5619 = !DILocation(line: 2693, column: 31, scope: !5607)
!5620 = !DILocation(line: 2693, column: 41, scope: !5607)
!5621 = !DILocation(line: 2693, column: 50, scope: !5607)
!5622 = !DILocation(line: 2693, column: 17, scope: !5607)
!5623 = !DILocation(line: 2693, column: 15, scope: !5607)
!5624 = !DILocation(line: 2694, column: 13, scope: !5607)
!5625 = !DILocation(line: 2695, column: 17, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5607, file: !4, line: 2695, column: 17)
!5627 = !DILocation(line: 2695, column: 19, scope: !5626)
!5628 = !DILocation(line: 2695, column: 17, scope: !5607)
!5629 = !DILocation(line: 2696, column: 17, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5626, file: !4, line: 2695, column: 26)
!5631 = !DILocation(line: 2698, column: 9, scope: !5607)
!5632 = !DILocation(line: 2699, column: 13, scope: !2566)
!5633 = !DILocation(line: 2700, column: 52, scope: !2566)
!5634 = !DILocation(line: 2700, column: 28, scope: !2566)
!5635 = !DILocation(line: 2700, column: 26, scope: !2566)
!5636 = !DILocation(line: 2701, column: 17, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !2566, file: !4, line: 2701, column: 17)
!5638 = !DILocation(line: 2701, column: 30, scope: !5637)
!5639 = !DILocation(line: 2701, column: 17, scope: !2566)
!5640 = !DILocation(line: 2702, column: 33, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5637, file: !4, line: 2701, column: 45)
!5642 = !DILocation(line: 2702, column: 17, scope: !5641)
!5643 = !DILocation(line: 2705, column: 17, scope: !5641)
!5644 = !DILocation(line: 2707, column: 31, scope: !2566)
!5645 = !DILocation(line: 2708, column: 66, scope: !2566)
!5646 = !DILocation(line: 2708, column: 48, scope: !2566)
!5647 = !DILocation(line: 2708, column: 82, scope: !2566)
!5648 = !DILocation(line: 2708, column: 46, scope: !2566)
!5649 = !DILocation(line: 2709, column: 62, scope: !2566)
!5650 = !DILocation(line: 2709, column: 47, scope: !2566)
!5651 = !DILocation(line: 2709, column: 78, scope: !2566)
!5652 = !{!4208, !4103, i64 16}
!5653 = !DILocation(line: 2707, column: 17, scope: !2566)
!5654 = !DILocation(line: 2707, column: 15, scope: !2566)
!5655 = !DILocation(line: 2711, column: 13, scope: !2566)
!5656 = !DILocation(line: 2711, column: 18, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !2565, file: !4, discriminator: 1)
!5658 = !DILocation(line: 2711, column: 28, scope: !2565)
!5659 = !DILocation(line: 2711, column: 58, scope: !2565)
!5660 = !DILocation(line: 2711, column: 81, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !2565, file: !4, line: 2711, column: 78)
!5662 = !DILocation(line: 2711, column: 98, scope: !5661)
!5663 = !DILocation(line: 2711, column: 78, scope: !5661)
!5664 = !DILocation(line: 2711, column: 108, scope: !5661)
!5665 = !DILocation(line: 2711, column: 78, scope: !2565)
!5666 = !DILocation(line: 2711, column: 78, scope: !5667)
!5667 = !DILexicalBlockFile(scope: !2565, file: !4, discriminator: 2)
!5668 = !DILocation(line: 2711, column: 139, scope: !5669)
!5669 = !DILexicalBlockFile(scope: !5661, file: !4, discriminator: 3)
!5670 = !DILocation(line: 2711, column: 157, scope: !5661)
!5671 = !DILocation(line: 2711, column: 167, scope: !5661)
!5672 = !DILocation(line: 2711, column: 192, scope: !5661)
!5673 = !DILocation(line: 2711, column: 123, scope: !5661)
!5674 = !DILocation(line: 2711, column: 211, scope: !5675)
!5675 = !DILexicalBlockFile(scope: !2566, file: !4, discriminator: 4)
!5676 = !DILocation(line: 2711, column: 211, scope: !2565)
!5677 = !DILocation(line: 2711, column: 211, scope: !5678)
!5678 = !DILexicalBlockFile(scope: !2565, file: !4, discriminator: 5)
!5679 = !DILocation(line: 2712, column: 17, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !2566, file: !4, line: 2712, column: 17)
!5681 = !DILocation(line: 2712, column: 19, scope: !5680)
!5682 = !DILocation(line: 2712, column: 17, scope: !2566)
!5683 = !DILocation(line: 2713, column: 17, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !4, line: 2712, column: 26)
!5685 = !DILocation(line: 2716, column: 5, scope: !2562)
!5686 = !DILocation(line: 2716, column: 5, scope: !5687)
!5687 = !DILexicalBlockFile(scope: !2562, file: !4, discriminator: 1)
!5688 = !DILocation(line: 2716, column: 5, scope: !2561)
!5689 = !DILocation(line: 2719, column: 9, scope: !2571)
!5690 = !DILocation(line: 2719, column: 16, scope: !2571)
!5691 = !DILocation(line: 2719, column: 19, scope: !5692)
!5692 = !DILexicalBlockFile(scope: !2571, file: !4, discriminator: 1)
!5693 = !DILocation(line: 2719, column: 9, scope: !2545)
!5694 = !DILocation(line: 2720, column: 13, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !2570, file: !4, line: 2720, column: 13)
!5696 = !DILocation(line: 2720, column: 13, scope: !2570)
!5697 = !DILocation(line: 2721, column: 61, scope: !5695)
!5698 = !DILocation(line: 2721, column: 43, scope: !5695)
!5699 = !DILocation(line: 2721, column: 77, scope: !5695)
!5700 = !DILocation(line: 2721, column: 41, scope: !5695)
!5701 = !DILocation(line: 2721, column: 24, scope: !5695)
!5702 = !DILocation(line: 2721, column: 13, scope: !5695)
!5703 = !DILocation(line: 2722, column: 13, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !2570, file: !4, line: 2722, column: 13)
!5705 = !DILocation(line: 2722, column: 13, scope: !2570)
!5706 = !DILocation(line: 2723, column: 61, scope: !5704)
!5707 = !DILocation(line: 2723, column: 43, scope: !5704)
!5708 = !DILocation(line: 2723, column: 77, scope: !5704)
!5709 = !DILocation(line: 2723, column: 41, scope: !5704)
!5710 = !DILocation(line: 2723, column: 24, scope: !5704)
!5711 = !DILocation(line: 2723, column: 13, scope: !5704)
!5712 = !DILocation(line: 2724, column: 11, scope: !2569)
!5713 = !DILocation(line: 2724, column: 26, scope: !2569)
!5714 = !DILocation(line: 2724, column: 46, scope: !2569)
!5715 = !DILocation(line: 2724, column: 55, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5717, file: !4, discriminator: 1)
!5717 = distinct !DILexicalBlock(scope: !5718, file: !4, line: 2724, column: 55)
!5718 = distinct !DILexicalBlock(scope: !2569, file: !4, line: 2724, column: 49)
!5719 = !DILocation(line: 2724, column: 71, scope: !5717)
!5720 = !DILocation(line: 2724, column: 55, scope: !5718)
!5721 = !DILocation(line: 2724, column: 87, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5723, file: !4, discriminator: 2)
!5723 = distinct !DILexicalBlock(scope: !5717, file: !4, line: 2724, column: 75)
!5724 = !DILocation(line: 2724, column: 85, scope: !5723)
!5725 = !DILocation(line: 2724, column: 108, scope: !5723)
!5726 = !DILocation(line: 2724, column: 110, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5728, file: !4, discriminator: 4)
!5728 = !DILexicalBlockFile(scope: !5718, file: !4, discriminator: 3)
!5729 = !DILocation(line: 2724, column: 110, scope: !5730)
!5730 = !DILexicalBlockFile(scope: !5718, file: !4, discriminator: 5)
!5731 = !DILocation(line: 2725, column: 43, scope: !2569)
!5732 = !DILocation(line: 2725, column: 49, scope: !2569)
!5733 = !DILocation(line: 2725, column: 54, scope: !2569)
!5734 = !DILocation(line: 2725, column: 66, scope: !2569)
!5735 = !DILocation(line: 2725, column: 13, scope: !2569)
!5736 = !DILocation(line: 2725, column: 11, scope: !2569)
!5737 = !DILocation(line: 2726, column: 9, scope: !2569)
!5738 = !DILocation(line: 2726, column: 18, scope: !5739)
!5739 = !DILexicalBlockFile(scope: !5740, file: !4, discriminator: 1)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !4, line: 2726, column: 18)
!5741 = distinct !DILexicalBlock(scope: !2569, file: !4, line: 2726, column: 12)
!5742 = !DILocation(line: 2726, column: 34, scope: !5740)
!5743 = !DILocation(line: 2726, column: 18, scope: !5741)
!5744 = !DILocation(line: 2726, column: 61, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !5746, file: !4, discriminator: 2)
!5746 = distinct !DILexicalBlock(scope: !5740, file: !4, line: 2726, column: 38)
!5747 = !DILocation(line: 2726, column: 40, scope: !5746)
!5748 = !DILocation(line: 2726, column: 69, scope: !5746)
!5749 = !DILocation(line: 2726, column: 71, scope: !5750)
!5750 = !DILexicalBlockFile(scope: !5751, file: !4, discriminator: 4)
!5751 = !DILexicalBlockFile(scope: !5741, file: !4, discriminator: 3)
!5752 = !DILocation(line: 2726, column: 71, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5741, file: !4, discriminator: 5)
!5754 = !DILocation(line: 2726, column: 84, scope: !5755)
!5755 = !DILexicalBlockFile(scope: !2570, file: !4, discriminator: 6)
!5756 = !DILocation(line: 2727, column: 13, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !2570, file: !4, line: 2727, column: 13)
!5758 = !DILocation(line: 2727, column: 15, scope: !5757)
!5759 = !DILocation(line: 2727, column: 13, scope: !2570)
!5760 = !DILocation(line: 2728, column: 16, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !4, line: 2727, column: 21)
!5762 = !DILocation(line: 2729, column: 19, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5761, file: !4, line: 2729, column: 17)
!5764 = !DILocation(line: 2729, column: 18, scope: !5763)
!5765 = !DILocation(line: 2729, column: 40, scope: !5763)
!5766 = !DILocation(line: 2729, column: 17, scope: !5761)
!5767 = !DILocation(line: 2730, column: 17, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5763, file: !4, line: 2729, column: 46)
!5769 = !DILocation(line: 2731, column: 36, scope: !5768)
!5770 = !DILocation(line: 2731, column: 17, scope: !5768)
!5771 = !DILocation(line: 2732, column: 13, scope: !5768)
!5772 = !DILocation(line: 2734, column: 17, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5763, file: !4, line: 2733, column: 18)
!5774 = !DILocation(line: 2736, column: 13, scope: !5761)
!5775 = !DILocation(line: 2738, column: 5, scope: !2570)
!5776 = !DILocation(line: 2739, column: 5, scope: !2545)
!5777 = !DILocation(line: 2742, column: 8, scope: !2545)
!5778 = !DILocation(line: 2742, column: 5, scope: !2545)
!5779 = !DILocation(line: 2744, column: 5, scope: !2545)
!5780 = !DILocation(line: 2744, column: 10, scope: !5781)
!5781 = !DILexicalBlockFile(scope: !2573, file: !4, discriminator: 1)
!5782 = !DILocation(line: 2744, column: 20, scope: !2573)
!5783 = !DILocation(line: 2744, column: 51, scope: !2573)
!5784 = !DILocation(line: 2744, column: 70, scope: !2576)
!5785 = !DILocation(line: 2744, column: 86, scope: !2576)
!5786 = !DILocation(line: 2744, column: 70, scope: !2573)
!5787 = !DILocation(line: 2744, column: 101, scope: !5788)
!5788 = !DILexicalBlockFile(scope: !2576, file: !4, discriminator: 2)
!5789 = !DILocation(line: 2744, column: 106, scope: !5790)
!5790 = !DILexicalBlockFile(scope: !2575, file: !4, discriminator: 4)
!5791 = !DILocation(line: 2744, column: 116, scope: !2575)
!5792 = !DILocation(line: 2744, column: 146, scope: !2575)
!5793 = !DILocation(line: 2744, column: 172, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !2575, file: !4, line: 2744, column: 169)
!5795 = !DILocation(line: 2744, column: 189, scope: !5794)
!5796 = !DILocation(line: 2744, column: 169, scope: !5794)
!5797 = !DILocation(line: 2744, column: 199, scope: !5794)
!5798 = !DILocation(line: 2744, column: 169, scope: !2575)
!5799 = !DILocation(line: 2744, column: 169, scope: !5800)
!5800 = !DILexicalBlockFile(scope: !2575, file: !4, discriminator: 5)
!5801 = !DILocation(line: 2744, column: 230, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5794, file: !4, discriminator: 6)
!5803 = !DILocation(line: 2744, column: 248, scope: !5794)
!5804 = !DILocation(line: 2744, column: 258, scope: !5794)
!5805 = !DILocation(line: 2744, column: 283, scope: !5794)
!5806 = !DILocation(line: 2744, column: 214, scope: !5794)
!5807 = !DILocation(line: 2744, column: 302, scope: !5808)
!5808 = !DILexicalBlockFile(scope: !2576, file: !4, discriminator: 7)
!5809 = !DILocation(line: 2744, column: 302, scope: !2575)
!5810 = !DILocation(line: 2744, column: 302, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !2575, file: !4, discriminator: 8)
!5812 = !DILocation(line: 2744, column: 302, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !2575, file: !4, discriminator: 9)
!5814 = !DILocation(line: 2744, column: 315, scope: !5815)
!5815 = !DILexicalBlockFile(scope: !5816, file: !4, discriminator: 10)
!5816 = !DILexicalBlockFile(scope: !2545, file: !4, discriminator: 3)
!5817 = !DILocation(line: 2744, column: 315, scope: !2573)
!5818 = !DILocation(line: 2744, column: 315, scope: !5819)
!5819 = !DILexicalBlockFile(scope: !2573, file: !4, discriminator: 11)
!5820 = !DILocation(line: 2745, column: 5, scope: !2545)
!5821 = !DILocation(line: 2745, column: 10, scope: !5822)
!5822 = !DILexicalBlockFile(scope: !2578, file: !4, discriminator: 1)
!5823 = !DILocation(line: 2745, column: 20, scope: !2578)
!5824 = !DILocation(line: 2745, column: 51, scope: !2578)
!5825 = !DILocation(line: 2745, column: 70, scope: !2581)
!5826 = !DILocation(line: 2745, column: 86, scope: !2581)
!5827 = !DILocation(line: 2745, column: 70, scope: !2578)
!5828 = !DILocation(line: 2745, column: 101, scope: !5829)
!5829 = !DILexicalBlockFile(scope: !2581, file: !4, discriminator: 2)
!5830 = !DILocation(line: 2745, column: 106, scope: !5831)
!5831 = !DILexicalBlockFile(scope: !2580, file: !4, discriminator: 4)
!5832 = !DILocation(line: 2745, column: 116, scope: !2580)
!5833 = !DILocation(line: 2745, column: 146, scope: !2580)
!5834 = !DILocation(line: 2745, column: 172, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !2580, file: !4, line: 2745, column: 169)
!5836 = !DILocation(line: 2745, column: 189, scope: !5835)
!5837 = !DILocation(line: 2745, column: 169, scope: !5835)
!5838 = !DILocation(line: 2745, column: 199, scope: !5835)
!5839 = !DILocation(line: 2745, column: 169, scope: !2580)
!5840 = !DILocation(line: 2745, column: 169, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !2580, file: !4, discriminator: 5)
!5842 = !DILocation(line: 2745, column: 230, scope: !5843)
!5843 = !DILexicalBlockFile(scope: !5835, file: !4, discriminator: 6)
!5844 = !DILocation(line: 2745, column: 248, scope: !5835)
!5845 = !DILocation(line: 2745, column: 258, scope: !5835)
!5846 = !DILocation(line: 2745, column: 283, scope: !5835)
!5847 = !DILocation(line: 2745, column: 214, scope: !5835)
!5848 = !DILocation(line: 2745, column: 302, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !2581, file: !4, discriminator: 7)
!5850 = !DILocation(line: 2745, column: 302, scope: !2580)
!5851 = !DILocation(line: 2745, column: 302, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !2580, file: !4, discriminator: 8)
!5853 = !DILocation(line: 2745, column: 302, scope: !5854)
!5854 = !DILexicalBlockFile(scope: !2580, file: !4, discriminator: 9)
!5855 = !DILocation(line: 2745, column: 315, scope: !5815)
!5856 = !DILocation(line: 2745, column: 315, scope: !2578)
!5857 = !DILocation(line: 2745, column: 315, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !2578, file: !4, discriminator: 11)
!5859 = !DILocation(line: 2746, column: 9, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !2545, file: !4, line: 2746, column: 9)
!5861 = !DILocation(line: 2746, column: 9, scope: !2545)
!5862 = !DILocation(line: 2747, column: 62, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5860, file: !4, line: 2746, column: 13)
!5864 = !DILocation(line: 2747, column: 9, scope: !5863)
!5865 = !DILocation(line: 2749, column: 9, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5860, file: !4, line: 2748, column: 12)
!5867 = !DILocation(line: 2751, column: 1, scope: !2545)
!5868 = !DILocation(line: 2823, column: 29, scope: !2598)
!5869 = !DILocation(line: 2823, column: 45, scope: !2598)
!5870 = !DILocation(line: 2825, column: 5, scope: !2598)
!5871 = !DILocation(line: 2825, column: 9, scope: !2598)
!5872 = !DILocation(line: 2826, column: 5, scope: !2598)
!5873 = !DILocation(line: 2826, column: 15, scope: !2598)
!5874 = !DILocation(line: 2826, column: 23, scope: !2598)
!5875 = !DILocation(line: 2826, column: 31, scope: !2598)
!5876 = !DILocation(line: 2827, column: 10, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2827, column: 9)
!5878 = !DILocation(line: 2827, column: 9, scope: !2598)
!5879 = !DILocation(line: 2828, column: 9, scope: !5877)
!5880 = !DILocation(line: 2839, column: 42, scope: !2598)
!5881 = !DILocation(line: 2839, column: 48, scope: !2598)
!5882 = !DILocation(line: 2839, column: 29, scope: !2598)
!5883 = !DILocation(line: 2839, column: 13, scope: !2598)
!5884 = !DILocation(line: 2839, column: 11, scope: !2598)
!5885 = !DILocation(line: 2839, column: 75, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2839, column: 75)
!5887 = !DILocation(line: 2839, column: 81, scope: !5886)
!5888 = !DILocation(line: 2839, column: 75, scope: !2598)
!5889 = !DILocation(line: 2839, column: 96, scope: !5890)
!5890 = !DILexicalBlockFile(scope: !5886, file: !4, discriminator: 1)
!5891 = !DILocation(line: 2839, column: 133, scope: !5892)
!5892 = !DILexicalBlockFile(scope: !2598, file: !4, discriminator: 2)
!5893 = !DILocation(line: 2839, column: 150, scope: !2598)
!5894 = !DILocation(line: 2839, column: 112, scope: !2598)
!5895 = !DILocation(line: 2839, column: 110, scope: !2598)
!5896 = !DILocation(line: 2839, column: 158, scope: !2598)
!5897 = !DILocation(line: 2839, column: 163, scope: !5898)
!5898 = !DILexicalBlockFile(scope: !2606, file: !4, discriminator: 3)
!5899 = !DILocation(line: 2839, column: 173, scope: !2606)
!5900 = !DILocation(line: 2839, column: 203, scope: !2606)
!5901 = !DILocation(line: 2839, column: 219, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !2606, file: !4, line: 2839, column: 216)
!5903 = !DILocation(line: 2839, column: 236, scope: !5902)
!5904 = !DILocation(line: 2839, column: 216, scope: !5902)
!5905 = !DILocation(line: 2839, column: 246, scope: !5902)
!5906 = !DILocation(line: 2839, column: 216, scope: !2606)
!5907 = !DILocation(line: 2839, column: 216, scope: !5908)
!5908 = !DILexicalBlockFile(scope: !2606, file: !4, discriminator: 4)
!5909 = !DILocation(line: 2839, column: 277, scope: !5910)
!5910 = !DILexicalBlockFile(scope: !5902, file: !4, discriminator: 5)
!5911 = !DILocation(line: 2839, column: 295, scope: !5902)
!5912 = !DILocation(line: 2839, column: 305, scope: !5902)
!5913 = !DILocation(line: 2839, column: 330, scope: !5902)
!5914 = !DILocation(line: 2839, column: 261, scope: !5902)
!5915 = !DILocation(line: 2839, column: 349, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !2598, file: !4, discriminator: 6)
!5917 = !DILocation(line: 2839, column: 349, scope: !2606)
!5918 = !DILocation(line: 2839, column: 349, scope: !5919)
!5919 = !DILexicalBlockFile(scope: !2606, file: !4, discriminator: 7)
!5920 = !DILocation(line: 2839, column: 366, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5922, file: !4, discriminator: 8)
!5922 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2839, column: 366)
!5923 = !DILocation(line: 2839, column: 368, scope: !5922)
!5924 = !DILocation(line: 2839, column: 366, scope: !2598)
!5925 = !DILocation(line: 2839, column: 373, scope: !5926)
!5926 = !DILexicalBlockFile(scope: !5922, file: !4, discriminator: 9)
!5927 = !DILocation(line: 2840, column: 42, scope: !2598)
!5928 = !DILocation(line: 2840, column: 48, scope: !2598)
!5929 = !DILocation(line: 2840, column: 29, scope: !2598)
!5930 = !DILocation(line: 2840, column: 13, scope: !2598)
!5931 = !DILocation(line: 2840, column: 11, scope: !2598)
!5932 = !DILocation(line: 2840, column: 75, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2840, column: 75)
!5934 = !DILocation(line: 2840, column: 81, scope: !5933)
!5935 = !DILocation(line: 2840, column: 75, scope: !2598)
!5936 = !DILocation(line: 2840, column: 96, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !5933, file: !4, discriminator: 1)
!5938 = !DILocation(line: 2840, column: 133, scope: !5892)
!5939 = !DILocation(line: 2840, column: 151, scope: !2598)
!5940 = !DILocation(line: 2840, column: 112, scope: !2598)
!5941 = !DILocation(line: 2840, column: 110, scope: !2598)
!5942 = !DILocation(line: 2840, column: 159, scope: !2598)
!5943 = !DILocation(line: 2840, column: 164, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !2608, file: !4, discriminator: 3)
!5945 = !DILocation(line: 2840, column: 174, scope: !2608)
!5946 = !DILocation(line: 2840, column: 204, scope: !2608)
!5947 = !DILocation(line: 2840, column: 220, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !2608, file: !4, line: 2840, column: 217)
!5949 = !DILocation(line: 2840, column: 237, scope: !5948)
!5950 = !DILocation(line: 2840, column: 217, scope: !5948)
!5951 = !DILocation(line: 2840, column: 247, scope: !5948)
!5952 = !DILocation(line: 2840, column: 217, scope: !2608)
!5953 = !DILocation(line: 2840, column: 217, scope: !5954)
!5954 = !DILexicalBlockFile(scope: !2608, file: !4, discriminator: 4)
!5955 = !DILocation(line: 2840, column: 278, scope: !5956)
!5956 = !DILexicalBlockFile(scope: !5948, file: !4, discriminator: 5)
!5957 = !DILocation(line: 2840, column: 296, scope: !5948)
!5958 = !DILocation(line: 2840, column: 306, scope: !5948)
!5959 = !DILocation(line: 2840, column: 331, scope: !5948)
!5960 = !DILocation(line: 2840, column: 262, scope: !5948)
!5961 = !DILocation(line: 2840, column: 350, scope: !5916)
!5962 = !DILocation(line: 2840, column: 350, scope: !2608)
!5963 = !DILocation(line: 2840, column: 350, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !2608, file: !4, discriminator: 7)
!5965 = !DILocation(line: 2840, column: 367, scope: !5966)
!5966 = !DILexicalBlockFile(scope: !5967, file: !4, discriminator: 8)
!5967 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2840, column: 367)
!5968 = !DILocation(line: 2840, column: 369, scope: !5967)
!5969 = !DILocation(line: 2840, column: 367, scope: !2598)
!5970 = !DILocation(line: 2840, column: 374, scope: !5971)
!5971 = !DILexicalBlockFile(scope: !5967, file: !4, discriminator: 9)
!5972 = !DILocation(line: 2841, column: 42, scope: !2598)
!5973 = !DILocation(line: 2841, column: 48, scope: !2598)
!5974 = !DILocation(line: 2841, column: 29, scope: !2598)
!5975 = !DILocation(line: 2841, column: 13, scope: !2598)
!5976 = !DILocation(line: 2841, column: 11, scope: !2598)
!5977 = !DILocation(line: 2841, column: 75, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2841, column: 75)
!5979 = !DILocation(line: 2841, column: 81, scope: !5978)
!5980 = !DILocation(line: 2841, column: 75, scope: !2598)
!5981 = !DILocation(line: 2841, column: 96, scope: !5982)
!5982 = !DILexicalBlockFile(scope: !5978, file: !4, discriminator: 1)
!5983 = !DILocation(line: 2841, column: 133, scope: !5892)
!5984 = !DILocation(line: 2841, column: 156, scope: !2598)
!5985 = !DILocation(line: 2841, column: 112, scope: !2598)
!5986 = !DILocation(line: 2841, column: 110, scope: !2598)
!5987 = !DILocation(line: 2841, column: 164, scope: !2598)
!5988 = !DILocation(line: 2841, column: 169, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !2610, file: !4, discriminator: 3)
!5990 = !DILocation(line: 2841, column: 179, scope: !2610)
!5991 = !DILocation(line: 2841, column: 209, scope: !2610)
!5992 = !DILocation(line: 2841, column: 225, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !2610, file: !4, line: 2841, column: 222)
!5994 = !DILocation(line: 2841, column: 242, scope: !5993)
!5995 = !DILocation(line: 2841, column: 222, scope: !5993)
!5996 = !DILocation(line: 2841, column: 252, scope: !5993)
!5997 = !DILocation(line: 2841, column: 222, scope: !2610)
!5998 = !DILocation(line: 2841, column: 222, scope: !5999)
!5999 = !DILexicalBlockFile(scope: !2610, file: !4, discriminator: 4)
!6000 = !DILocation(line: 2841, column: 283, scope: !6001)
!6001 = !DILexicalBlockFile(scope: !5993, file: !4, discriminator: 5)
!6002 = !DILocation(line: 2841, column: 301, scope: !5993)
!6003 = !DILocation(line: 2841, column: 311, scope: !5993)
!6004 = !DILocation(line: 2841, column: 336, scope: !5993)
!6005 = !DILocation(line: 2841, column: 267, scope: !5993)
!6006 = !DILocation(line: 2841, column: 355, scope: !5916)
!6007 = !DILocation(line: 2841, column: 355, scope: !2610)
!6008 = !DILocation(line: 2841, column: 355, scope: !6009)
!6009 = !DILexicalBlockFile(scope: !2610, file: !4, discriminator: 7)
!6010 = !DILocation(line: 2841, column: 372, scope: !6011)
!6011 = !DILexicalBlockFile(scope: !6012, file: !4, discriminator: 8)
!6012 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2841, column: 372)
!6013 = !DILocation(line: 2841, column: 374, scope: !6012)
!6014 = !DILocation(line: 2841, column: 372, scope: !2598)
!6015 = !DILocation(line: 2841, column: 379, scope: !6016)
!6016 = !DILexicalBlockFile(scope: !6012, file: !4, discriminator: 9)
!6017 = !DILocation(line: 2842, column: 42, scope: !2598)
!6018 = !DILocation(line: 2842, column: 48, scope: !2598)
!6019 = !DILocation(line: 2842, column: 29, scope: !2598)
!6020 = !DILocation(line: 2842, column: 13, scope: !2598)
!6021 = !DILocation(line: 2842, column: 11, scope: !2598)
!6022 = !DILocation(line: 2842, column: 75, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2842, column: 75)
!6024 = !DILocation(line: 2842, column: 81, scope: !6023)
!6025 = !DILocation(line: 2842, column: 75, scope: !2598)
!6026 = !DILocation(line: 2842, column: 96, scope: !6027)
!6027 = !DILexicalBlockFile(scope: !6023, file: !4, discriminator: 1)
!6028 = !DILocation(line: 2842, column: 133, scope: !5892)
!6029 = !DILocation(line: 2842, column: 163, scope: !2598)
!6030 = !DILocation(line: 2842, column: 112, scope: !2598)
!6031 = !DILocation(line: 2842, column: 110, scope: !2598)
!6032 = !DILocation(line: 2842, column: 171, scope: !2598)
!6033 = !DILocation(line: 2842, column: 176, scope: !6034)
!6034 = !DILexicalBlockFile(scope: !2612, file: !4, discriminator: 3)
!6035 = !DILocation(line: 2842, column: 186, scope: !2612)
!6036 = !DILocation(line: 2842, column: 216, scope: !2612)
!6037 = !DILocation(line: 2842, column: 232, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !2612, file: !4, line: 2842, column: 229)
!6039 = !DILocation(line: 2842, column: 249, scope: !6038)
!6040 = !DILocation(line: 2842, column: 229, scope: !6038)
!6041 = !DILocation(line: 2842, column: 259, scope: !6038)
!6042 = !DILocation(line: 2842, column: 229, scope: !2612)
!6043 = !DILocation(line: 2842, column: 229, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !2612, file: !4, discriminator: 4)
!6045 = !DILocation(line: 2842, column: 290, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !6038, file: !4, discriminator: 5)
!6047 = !DILocation(line: 2842, column: 308, scope: !6038)
!6048 = !DILocation(line: 2842, column: 318, scope: !6038)
!6049 = !DILocation(line: 2842, column: 343, scope: !6038)
!6050 = !DILocation(line: 2842, column: 274, scope: !6038)
!6051 = !DILocation(line: 2842, column: 362, scope: !5916)
!6052 = !DILocation(line: 2842, column: 362, scope: !2612)
!6053 = !DILocation(line: 2842, column: 362, scope: !6054)
!6054 = !DILexicalBlockFile(scope: !2612, file: !4, discriminator: 7)
!6055 = !DILocation(line: 2842, column: 379, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6057, file: !4, discriminator: 8)
!6057 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2842, column: 379)
!6058 = !DILocation(line: 2842, column: 381, scope: !6057)
!6059 = !DILocation(line: 2842, column: 379, scope: !2598)
!6060 = !DILocation(line: 2842, column: 386, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6057, file: !4, discriminator: 9)
!6062 = !DILocation(line: 2843, column: 42, scope: !2598)
!6063 = !DILocation(line: 2843, column: 48, scope: !2598)
!6064 = !DILocation(line: 2843, column: 29, scope: !2598)
!6065 = !DILocation(line: 2843, column: 13, scope: !2598)
!6066 = !DILocation(line: 2843, column: 11, scope: !2598)
!6067 = !DILocation(line: 2843, column: 75, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2843, column: 75)
!6069 = !DILocation(line: 2843, column: 81, scope: !6068)
!6070 = !DILocation(line: 2843, column: 75, scope: !2598)
!6071 = !DILocation(line: 2843, column: 96, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !6068, file: !4, discriminator: 1)
!6073 = !DILocation(line: 2843, column: 133, scope: !5892)
!6074 = !DILocation(line: 2843, column: 150, scope: !2598)
!6075 = !DILocation(line: 2843, column: 112, scope: !2598)
!6076 = !DILocation(line: 2843, column: 110, scope: !2598)
!6077 = !DILocation(line: 2843, column: 158, scope: !2598)
!6078 = !DILocation(line: 2843, column: 163, scope: !6079)
!6079 = !DILexicalBlockFile(scope: !2614, file: !4, discriminator: 3)
!6080 = !DILocation(line: 2843, column: 173, scope: !2614)
!6081 = !DILocation(line: 2843, column: 203, scope: !2614)
!6082 = !DILocation(line: 2843, column: 219, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !2614, file: !4, line: 2843, column: 216)
!6084 = !DILocation(line: 2843, column: 236, scope: !6083)
!6085 = !DILocation(line: 2843, column: 216, scope: !6083)
!6086 = !DILocation(line: 2843, column: 246, scope: !6083)
!6087 = !DILocation(line: 2843, column: 216, scope: !2614)
!6088 = !DILocation(line: 2843, column: 216, scope: !6089)
!6089 = !DILexicalBlockFile(scope: !2614, file: !4, discriminator: 4)
!6090 = !DILocation(line: 2843, column: 277, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6083, file: !4, discriminator: 5)
!6092 = !DILocation(line: 2843, column: 295, scope: !6083)
!6093 = !DILocation(line: 2843, column: 305, scope: !6083)
!6094 = !DILocation(line: 2843, column: 330, scope: !6083)
!6095 = !DILocation(line: 2843, column: 261, scope: !6083)
!6096 = !DILocation(line: 2843, column: 349, scope: !5916)
!6097 = !DILocation(line: 2843, column: 349, scope: !2614)
!6098 = !DILocation(line: 2843, column: 349, scope: !6099)
!6099 = !DILexicalBlockFile(scope: !2614, file: !4, discriminator: 7)
!6100 = !DILocation(line: 2843, column: 366, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !6102, file: !4, discriminator: 8)
!6102 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2843, column: 366)
!6103 = !DILocation(line: 2843, column: 368, scope: !6102)
!6104 = !DILocation(line: 2843, column: 366, scope: !2598)
!6105 = !DILocation(line: 2843, column: 373, scope: !6106)
!6106 = !DILexicalBlockFile(scope: !6102, file: !4, discriminator: 9)
!6107 = !DILocation(line: 2844, column: 42, scope: !2598)
!6108 = !DILocation(line: 2844, column: 48, scope: !2598)
!6109 = !DILocation(line: 2844, column: 29, scope: !2598)
!6110 = !DILocation(line: 2844, column: 13, scope: !2598)
!6111 = !DILocation(line: 2844, column: 11, scope: !2598)
!6112 = !DILocation(line: 2844, column: 75, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2844, column: 75)
!6114 = !DILocation(line: 2844, column: 81, scope: !6113)
!6115 = !DILocation(line: 2844, column: 75, scope: !2598)
!6116 = !DILocation(line: 2844, column: 96, scope: !6117)
!6117 = !DILexicalBlockFile(scope: !6113, file: !4, discriminator: 1)
!6118 = !DILocation(line: 2844, column: 133, scope: !5892)
!6119 = !DILocation(line: 2844, column: 155, scope: !2598)
!6120 = !DILocation(line: 2844, column: 112, scope: !2598)
!6121 = !DILocation(line: 2844, column: 110, scope: !2598)
!6122 = !DILocation(line: 2844, column: 163, scope: !2598)
!6123 = !DILocation(line: 2844, column: 168, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !2616, file: !4, discriminator: 3)
!6125 = !DILocation(line: 2844, column: 178, scope: !2616)
!6126 = !DILocation(line: 2844, column: 208, scope: !2616)
!6127 = !DILocation(line: 2844, column: 224, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !2616, file: !4, line: 2844, column: 221)
!6129 = !DILocation(line: 2844, column: 241, scope: !6128)
!6130 = !DILocation(line: 2844, column: 221, scope: !6128)
!6131 = !DILocation(line: 2844, column: 251, scope: !6128)
!6132 = !DILocation(line: 2844, column: 221, scope: !2616)
!6133 = !DILocation(line: 2844, column: 221, scope: !6134)
!6134 = !DILexicalBlockFile(scope: !2616, file: !4, discriminator: 4)
!6135 = !DILocation(line: 2844, column: 282, scope: !6136)
!6136 = !DILexicalBlockFile(scope: !6128, file: !4, discriminator: 5)
!6137 = !DILocation(line: 2844, column: 300, scope: !6128)
!6138 = !DILocation(line: 2844, column: 310, scope: !6128)
!6139 = !DILocation(line: 2844, column: 335, scope: !6128)
!6140 = !DILocation(line: 2844, column: 266, scope: !6128)
!6141 = !DILocation(line: 2844, column: 354, scope: !5916)
!6142 = !DILocation(line: 2844, column: 354, scope: !2616)
!6143 = !DILocation(line: 2844, column: 354, scope: !6144)
!6144 = !DILexicalBlockFile(scope: !2616, file: !4, discriminator: 7)
!6145 = !DILocation(line: 2844, column: 371, scope: !6146)
!6146 = !DILexicalBlockFile(scope: !6147, file: !4, discriminator: 8)
!6147 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2844, column: 371)
!6148 = !DILocation(line: 2844, column: 373, scope: !6147)
!6149 = !DILocation(line: 2844, column: 371, scope: !2598)
!6150 = !DILocation(line: 2844, column: 378, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !6147, file: !4, discriminator: 9)
!6152 = !DILocation(line: 2845, column: 42, scope: !2598)
!6153 = !DILocation(line: 2845, column: 48, scope: !2598)
!6154 = !DILocation(line: 2845, column: 29, scope: !2598)
!6155 = !DILocation(line: 2845, column: 13, scope: !2598)
!6156 = !DILocation(line: 2845, column: 11, scope: !2598)
!6157 = !DILocation(line: 2845, column: 75, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2845, column: 75)
!6159 = !DILocation(line: 2845, column: 81, scope: !6158)
!6160 = !DILocation(line: 2845, column: 75, scope: !2598)
!6161 = !DILocation(line: 2845, column: 96, scope: !6162)
!6162 = !DILexicalBlockFile(scope: !6158, file: !4, discriminator: 1)
!6163 = !DILocation(line: 2845, column: 133, scope: !5892)
!6164 = !DILocation(line: 2845, column: 162, scope: !2598)
!6165 = !DILocation(line: 2845, column: 112, scope: !2598)
!6166 = !DILocation(line: 2845, column: 110, scope: !2598)
!6167 = !DILocation(line: 2845, column: 170, scope: !2598)
!6168 = !DILocation(line: 2845, column: 175, scope: !6169)
!6169 = !DILexicalBlockFile(scope: !2618, file: !4, discriminator: 3)
!6170 = !DILocation(line: 2845, column: 185, scope: !2618)
!6171 = !DILocation(line: 2845, column: 215, scope: !2618)
!6172 = !DILocation(line: 2845, column: 231, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !2618, file: !4, line: 2845, column: 228)
!6174 = !DILocation(line: 2845, column: 248, scope: !6173)
!6175 = !DILocation(line: 2845, column: 228, scope: !6173)
!6176 = !DILocation(line: 2845, column: 258, scope: !6173)
!6177 = !DILocation(line: 2845, column: 228, scope: !2618)
!6178 = !DILocation(line: 2845, column: 228, scope: !6179)
!6179 = !DILexicalBlockFile(scope: !2618, file: !4, discriminator: 4)
!6180 = !DILocation(line: 2845, column: 289, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !6173, file: !4, discriminator: 5)
!6182 = !DILocation(line: 2845, column: 307, scope: !6173)
!6183 = !DILocation(line: 2845, column: 317, scope: !6173)
!6184 = !DILocation(line: 2845, column: 342, scope: !6173)
!6185 = !DILocation(line: 2845, column: 273, scope: !6173)
!6186 = !DILocation(line: 2845, column: 361, scope: !5916)
!6187 = !DILocation(line: 2845, column: 361, scope: !2618)
!6188 = !DILocation(line: 2845, column: 361, scope: !6189)
!6189 = !DILexicalBlockFile(scope: !2618, file: !4, discriminator: 7)
!6190 = !DILocation(line: 2845, column: 378, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !6192, file: !4, discriminator: 8)
!6192 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2845, column: 378)
!6193 = !DILocation(line: 2845, column: 380, scope: !6192)
!6194 = !DILocation(line: 2845, column: 378, scope: !2598)
!6195 = !DILocation(line: 2845, column: 385, scope: !6196)
!6196 = !DILexicalBlockFile(scope: !6192, file: !4, discriminator: 9)
!6197 = !DILocation(line: 2846, column: 42, scope: !2598)
!6198 = !DILocation(line: 2846, column: 48, scope: !2598)
!6199 = !DILocation(line: 2846, column: 29, scope: !2598)
!6200 = !DILocation(line: 2846, column: 13, scope: !2598)
!6201 = !DILocation(line: 2846, column: 11, scope: !2598)
!6202 = !DILocation(line: 2846, column: 75, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2846, column: 75)
!6204 = !DILocation(line: 2846, column: 81, scope: !6203)
!6205 = !DILocation(line: 2846, column: 75, scope: !2598)
!6206 = !DILocation(line: 2846, column: 96, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6203, file: !4, discriminator: 1)
!6208 = !DILocation(line: 2846, column: 133, scope: !5892)
!6209 = !DILocation(line: 2846, column: 150, scope: !2598)
!6210 = !DILocation(line: 2846, column: 112, scope: !2598)
!6211 = !DILocation(line: 2846, column: 110, scope: !2598)
!6212 = !DILocation(line: 2846, column: 158, scope: !2598)
!6213 = !DILocation(line: 2846, column: 163, scope: !6214)
!6214 = !DILexicalBlockFile(scope: !2620, file: !4, discriminator: 3)
!6215 = !DILocation(line: 2846, column: 173, scope: !2620)
!6216 = !DILocation(line: 2846, column: 203, scope: !2620)
!6217 = !DILocation(line: 2846, column: 219, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !2620, file: !4, line: 2846, column: 216)
!6219 = !DILocation(line: 2846, column: 236, scope: !6218)
!6220 = !DILocation(line: 2846, column: 216, scope: !6218)
!6221 = !DILocation(line: 2846, column: 246, scope: !6218)
!6222 = !DILocation(line: 2846, column: 216, scope: !2620)
!6223 = !DILocation(line: 2846, column: 216, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !2620, file: !4, discriminator: 4)
!6225 = !DILocation(line: 2846, column: 277, scope: !6226)
!6226 = !DILexicalBlockFile(scope: !6218, file: !4, discriminator: 5)
!6227 = !DILocation(line: 2846, column: 295, scope: !6218)
!6228 = !DILocation(line: 2846, column: 305, scope: !6218)
!6229 = !DILocation(line: 2846, column: 330, scope: !6218)
!6230 = !DILocation(line: 2846, column: 261, scope: !6218)
!6231 = !DILocation(line: 2846, column: 349, scope: !5916)
!6232 = !DILocation(line: 2846, column: 349, scope: !2620)
!6233 = !DILocation(line: 2846, column: 349, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !2620, file: !4, discriminator: 7)
!6235 = !DILocation(line: 2846, column: 366, scope: !6236)
!6236 = !DILexicalBlockFile(scope: !6237, file: !4, discriminator: 8)
!6237 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2846, column: 366)
!6238 = !DILocation(line: 2846, column: 368, scope: !6237)
!6239 = !DILocation(line: 2846, column: 366, scope: !2598)
!6240 = !DILocation(line: 2846, column: 373, scope: !6241)
!6241 = !DILexicalBlockFile(scope: !6237, file: !4, discriminator: 9)
!6242 = !DILocation(line: 2847, column: 42, scope: !2598)
!6243 = !DILocation(line: 2847, column: 48, scope: !2598)
!6244 = !DILocation(line: 2847, column: 29, scope: !2598)
!6245 = !DILocation(line: 2847, column: 13, scope: !2598)
!6246 = !DILocation(line: 2847, column: 11, scope: !2598)
!6247 = !DILocation(line: 2847, column: 75, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2847, column: 75)
!6249 = !DILocation(line: 2847, column: 81, scope: !6248)
!6250 = !DILocation(line: 2847, column: 75, scope: !2598)
!6251 = !DILocation(line: 2847, column: 96, scope: !6252)
!6252 = !DILexicalBlockFile(scope: !6248, file: !4, discriminator: 1)
!6253 = !DILocation(line: 2847, column: 133, scope: !5892)
!6254 = !DILocation(line: 2847, column: 148, scope: !2598)
!6255 = !DILocation(line: 2847, column: 112, scope: !2598)
!6256 = !DILocation(line: 2847, column: 110, scope: !2598)
!6257 = !DILocation(line: 2847, column: 156, scope: !2598)
!6258 = !DILocation(line: 2847, column: 161, scope: !6259)
!6259 = !DILexicalBlockFile(scope: !2622, file: !4, discriminator: 3)
!6260 = !DILocation(line: 2847, column: 171, scope: !2622)
!6261 = !DILocation(line: 2847, column: 201, scope: !2622)
!6262 = !DILocation(line: 2847, column: 217, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !2622, file: !4, line: 2847, column: 214)
!6264 = !DILocation(line: 2847, column: 234, scope: !6263)
!6265 = !DILocation(line: 2847, column: 214, scope: !6263)
!6266 = !DILocation(line: 2847, column: 244, scope: !6263)
!6267 = !DILocation(line: 2847, column: 214, scope: !2622)
!6268 = !DILocation(line: 2847, column: 214, scope: !6269)
!6269 = !DILexicalBlockFile(scope: !2622, file: !4, discriminator: 4)
!6270 = !DILocation(line: 2847, column: 275, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6263, file: !4, discriminator: 5)
!6272 = !DILocation(line: 2847, column: 293, scope: !6263)
!6273 = !DILocation(line: 2847, column: 303, scope: !6263)
!6274 = !DILocation(line: 2847, column: 328, scope: !6263)
!6275 = !DILocation(line: 2847, column: 259, scope: !6263)
!6276 = !DILocation(line: 2847, column: 347, scope: !5916)
!6277 = !DILocation(line: 2847, column: 347, scope: !2622)
!6278 = !DILocation(line: 2847, column: 347, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !2622, file: !4, discriminator: 7)
!6280 = !DILocation(line: 2847, column: 364, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !6282, file: !4, discriminator: 8)
!6282 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2847, column: 364)
!6283 = !DILocation(line: 2847, column: 366, scope: !6282)
!6284 = !DILocation(line: 2847, column: 364, scope: !2598)
!6285 = !DILocation(line: 2847, column: 371, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6282, file: !4, discriminator: 9)
!6287 = !DILocation(line: 2848, column: 42, scope: !2598)
!6288 = !DILocation(line: 2848, column: 48, scope: !2598)
!6289 = !DILocation(line: 2848, column: 29, scope: !2598)
!6290 = !DILocation(line: 2848, column: 13, scope: !2598)
!6291 = !DILocation(line: 2848, column: 11, scope: !2598)
!6292 = !DILocation(line: 2848, column: 75, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2848, column: 75)
!6294 = !DILocation(line: 2848, column: 81, scope: !6293)
!6295 = !DILocation(line: 2848, column: 75, scope: !2598)
!6296 = !DILocation(line: 2848, column: 96, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !6293, file: !4, discriminator: 1)
!6298 = !DILocation(line: 2848, column: 133, scope: !5892)
!6299 = !DILocation(line: 2848, column: 150, scope: !2598)
!6300 = !DILocation(line: 2848, column: 112, scope: !2598)
!6301 = !DILocation(line: 2848, column: 110, scope: !2598)
!6302 = !DILocation(line: 2848, column: 158, scope: !2598)
!6303 = !DILocation(line: 2848, column: 163, scope: !6304)
!6304 = !DILexicalBlockFile(scope: !2624, file: !4, discriminator: 3)
!6305 = !DILocation(line: 2848, column: 173, scope: !2624)
!6306 = !DILocation(line: 2848, column: 203, scope: !2624)
!6307 = !DILocation(line: 2848, column: 219, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !2624, file: !4, line: 2848, column: 216)
!6309 = !DILocation(line: 2848, column: 236, scope: !6308)
!6310 = !DILocation(line: 2848, column: 216, scope: !6308)
!6311 = !DILocation(line: 2848, column: 246, scope: !6308)
!6312 = !DILocation(line: 2848, column: 216, scope: !2624)
!6313 = !DILocation(line: 2848, column: 216, scope: !6314)
!6314 = !DILexicalBlockFile(scope: !2624, file: !4, discriminator: 4)
!6315 = !DILocation(line: 2848, column: 277, scope: !6316)
!6316 = !DILexicalBlockFile(scope: !6308, file: !4, discriminator: 5)
!6317 = !DILocation(line: 2848, column: 295, scope: !6308)
!6318 = !DILocation(line: 2848, column: 305, scope: !6308)
!6319 = !DILocation(line: 2848, column: 330, scope: !6308)
!6320 = !DILocation(line: 2848, column: 261, scope: !6308)
!6321 = !DILocation(line: 2848, column: 349, scope: !5916)
!6322 = !DILocation(line: 2848, column: 349, scope: !2624)
!6323 = !DILocation(line: 2848, column: 349, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !2624, file: !4, discriminator: 7)
!6325 = !DILocation(line: 2848, column: 366, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !6327, file: !4, discriminator: 8)
!6327 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2848, column: 366)
!6328 = !DILocation(line: 2848, column: 368, scope: !6327)
!6329 = !DILocation(line: 2848, column: 366, scope: !2598)
!6330 = !DILocation(line: 2848, column: 373, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6327, file: !4, discriminator: 9)
!6332 = !DILocation(line: 2849, column: 42, scope: !2598)
!6333 = !DILocation(line: 2849, column: 48, scope: !2598)
!6334 = !DILocation(line: 2849, column: 29, scope: !2598)
!6335 = !DILocation(line: 2849, column: 13, scope: !2598)
!6336 = !DILocation(line: 2849, column: 11, scope: !2598)
!6337 = !DILocation(line: 2849, column: 75, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2849, column: 75)
!6339 = !DILocation(line: 2849, column: 81, scope: !6338)
!6340 = !DILocation(line: 2849, column: 75, scope: !2598)
!6341 = !DILocation(line: 2849, column: 96, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !6338, file: !4, discriminator: 1)
!6343 = !DILocation(line: 2849, column: 133, scope: !5892)
!6344 = !DILocation(line: 2849, column: 152, scope: !2598)
!6345 = !DILocation(line: 2849, column: 112, scope: !2598)
!6346 = !DILocation(line: 2849, column: 110, scope: !2598)
!6347 = !DILocation(line: 2849, column: 160, scope: !2598)
!6348 = !DILocation(line: 2849, column: 165, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !2626, file: !4, discriminator: 3)
!6350 = !DILocation(line: 2849, column: 175, scope: !2626)
!6351 = !DILocation(line: 2849, column: 205, scope: !2626)
!6352 = !DILocation(line: 2849, column: 221, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !2626, file: !4, line: 2849, column: 218)
!6354 = !DILocation(line: 2849, column: 238, scope: !6353)
!6355 = !DILocation(line: 2849, column: 218, scope: !6353)
!6356 = !DILocation(line: 2849, column: 248, scope: !6353)
!6357 = !DILocation(line: 2849, column: 218, scope: !2626)
!6358 = !DILocation(line: 2849, column: 218, scope: !6359)
!6359 = !DILexicalBlockFile(scope: !2626, file: !4, discriminator: 4)
!6360 = !DILocation(line: 2849, column: 279, scope: !6361)
!6361 = !DILexicalBlockFile(scope: !6353, file: !4, discriminator: 5)
!6362 = !DILocation(line: 2849, column: 297, scope: !6353)
!6363 = !DILocation(line: 2849, column: 307, scope: !6353)
!6364 = !DILocation(line: 2849, column: 332, scope: !6353)
!6365 = !DILocation(line: 2849, column: 263, scope: !6353)
!6366 = !DILocation(line: 2849, column: 351, scope: !5916)
!6367 = !DILocation(line: 2849, column: 351, scope: !2626)
!6368 = !DILocation(line: 2849, column: 351, scope: !6369)
!6369 = !DILexicalBlockFile(scope: !2626, file: !4, discriminator: 7)
!6370 = !DILocation(line: 2849, column: 368, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !6372, file: !4, discriminator: 8)
!6372 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2849, column: 368)
!6373 = !DILocation(line: 2849, column: 370, scope: !6372)
!6374 = !DILocation(line: 2849, column: 368, scope: !2598)
!6375 = !DILocation(line: 2849, column: 375, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6372, file: !4, discriminator: 9)
!6377 = !DILocation(line: 2850, column: 42, scope: !2598)
!6378 = !DILocation(line: 2850, column: 48, scope: !2598)
!6379 = !DILocation(line: 2850, column: 29, scope: !2598)
!6380 = !DILocation(line: 2850, column: 13, scope: !2598)
!6381 = !DILocation(line: 2850, column: 11, scope: !2598)
!6382 = !DILocation(line: 2850, column: 75, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2850, column: 75)
!6384 = !DILocation(line: 2850, column: 81, scope: !6383)
!6385 = !DILocation(line: 2850, column: 75, scope: !2598)
!6386 = !DILocation(line: 2850, column: 96, scope: !6387)
!6387 = !DILexicalBlockFile(scope: !6383, file: !4, discriminator: 1)
!6388 = !DILocation(line: 2850, column: 133, scope: !5892)
!6389 = !DILocation(line: 2850, column: 154, scope: !2598)
!6390 = !DILocation(line: 2850, column: 112, scope: !2598)
!6391 = !DILocation(line: 2850, column: 110, scope: !2598)
!6392 = !DILocation(line: 2850, column: 162, scope: !2598)
!6393 = !DILocation(line: 2850, column: 167, scope: !6394)
!6394 = !DILexicalBlockFile(scope: !2628, file: !4, discriminator: 3)
!6395 = !DILocation(line: 2850, column: 177, scope: !2628)
!6396 = !DILocation(line: 2850, column: 207, scope: !2628)
!6397 = !DILocation(line: 2850, column: 223, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !2628, file: !4, line: 2850, column: 220)
!6399 = !DILocation(line: 2850, column: 240, scope: !6398)
!6400 = !DILocation(line: 2850, column: 220, scope: !6398)
!6401 = !DILocation(line: 2850, column: 250, scope: !6398)
!6402 = !DILocation(line: 2850, column: 220, scope: !2628)
!6403 = !DILocation(line: 2850, column: 220, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !2628, file: !4, discriminator: 4)
!6405 = !DILocation(line: 2850, column: 281, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !6398, file: !4, discriminator: 5)
!6407 = !DILocation(line: 2850, column: 299, scope: !6398)
!6408 = !DILocation(line: 2850, column: 309, scope: !6398)
!6409 = !DILocation(line: 2850, column: 334, scope: !6398)
!6410 = !DILocation(line: 2850, column: 265, scope: !6398)
!6411 = !DILocation(line: 2850, column: 353, scope: !5916)
!6412 = !DILocation(line: 2850, column: 353, scope: !2628)
!6413 = !DILocation(line: 2850, column: 353, scope: !6414)
!6414 = !DILexicalBlockFile(scope: !2628, file: !4, discriminator: 7)
!6415 = !DILocation(line: 2850, column: 370, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6417, file: !4, discriminator: 8)
!6417 = distinct !DILexicalBlock(scope: !2598, file: !4, line: 2850, column: 370)
!6418 = !DILocation(line: 2850, column: 372, scope: !6417)
!6419 = !DILocation(line: 2850, column: 370, scope: !2598)
!6420 = !DILocation(line: 2850, column: 377, scope: !6421)
!6421 = !DILexicalBlockFile(scope: !6417, file: !4, discriminator: 9)
!6422 = !DILocation(line: 2854, column: 12, scope: !2598)
!6423 = !DILocation(line: 2854, column: 5, scope: !2598)
!6424 = !DILocation(line: 2857, column: 5, scope: !2598)
!6425 = !DILocation(line: 2857, column: 10, scope: !6426)
!6426 = !DILexicalBlockFile(scope: !2630, file: !4, discriminator: 1)
!6427 = !DILocation(line: 2857, column: 20, scope: !2630)
!6428 = !DILocation(line: 2857, column: 50, scope: !2630)
!6429 = !DILocation(line: 2857, column: 66, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !2630, file: !4, line: 2857, column: 63)
!6431 = !DILocation(line: 2857, column: 83, scope: !6430)
!6432 = !DILocation(line: 2857, column: 63, scope: !6430)
!6433 = !DILocation(line: 2857, column: 93, scope: !6430)
!6434 = !DILocation(line: 2857, column: 63, scope: !2630)
!6435 = !DILocation(line: 2857, column: 63, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !2630, file: !4, discriminator: 2)
!6437 = !DILocation(line: 2857, column: 124, scope: !6438)
!6438 = !DILexicalBlockFile(scope: !6430, file: !4, discriminator: 3)
!6439 = !DILocation(line: 2857, column: 142, scope: !6430)
!6440 = !DILocation(line: 2857, column: 152, scope: !6430)
!6441 = !DILocation(line: 2857, column: 177, scope: !6430)
!6442 = !DILocation(line: 2857, column: 108, scope: !6430)
!6443 = !DILocation(line: 2857, column: 196, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !2598, file: !4, discriminator: 4)
!6445 = !DILocation(line: 2857, column: 196, scope: !2630)
!6446 = !DILocation(line: 2857, column: 196, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !2630, file: !4, discriminator: 5)
!6448 = !DILocation(line: 2858, column: 5, scope: !2598)
!6449 = !DILocation(line: 2859, column: 1, scope: !2598)
!6450 = !DILocation(line: 2862, column: 40, scope: !2631)
!6451 = !DILocation(line: 2862, column: 56, scope: !2631)
!6452 = !DILocation(line: 2864, column: 43, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !2631, file: !4, line: 2864, column: 9)
!6454 = !DILocation(line: 2864, column: 49, scope: !6453)
!6455 = !DILocation(line: 2864, column: 10, scope: !6453)
!6456 = !DILocation(line: 2864, column: 9, scope: !2631)
!6457 = !DILocation(line: 2865, column: 9, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !4, line: 2864, column: 55)
!6459 = !DILocation(line: 2866, column: 9, scope: !6458)
!6460 = !DILocation(line: 2868, column: 58, scope: !2631)
!6461 = !DILocation(line: 2868, column: 5, scope: !2631)
!6462 = !DILocation(line: 2869, column: 1, scope: !2631)
!6463 = !DILocation(line: 2873, column: 30, scope: !2635)
!6464 = !DILocation(line: 2873, column: 46, scope: !2635)
!6465 = !DILocation(line: 2875, column: 5, scope: !2635)
!6466 = !DILocation(line: 2875, column: 15, scope: !2635)
!6467 = !DILocation(line: 2876, column: 5, scope: !2635)
!6468 = !DILocation(line: 2876, column: 9, scope: !2635)
!6469 = !DILocation(line: 2877, column: 5, scope: !2635)
!6470 = !DILocation(line: 2877, column: 13, scope: !2635)
!6471 = !DILocation(line: 2879, column: 32, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !2635, file: !4, line: 2879, column: 9)
!6473 = !DILocation(line: 2879, column: 38, scope: !6472)
!6474 = !DILocation(line: 2879, column: 10, scope: !6472)
!6475 = !DILocation(line: 2879, column: 9, scope: !2635)
!6476 = !DILocation(line: 2880, column: 9, scope: !6472)
!6477 = !DILocation(line: 2882, column: 57, scope: !2635)
!6478 = !DILocation(line: 2882, column: 39, scope: !2635)
!6479 = !DILocation(line: 2882, column: 71, scope: !2635)
!6480 = !DILocation(line: 2882, column: 37, scope: !2635)
!6481 = !DILocation(line: 2882, column: 11, scope: !2635)
!6482 = !DILocation(line: 2882, column: 9, scope: !2635)
!6483 = !DILocation(line: 2883, column: 5, scope: !2635)
!6484 = !DILocation(line: 2883, column: 10, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !2643, file: !4, discriminator: 1)
!6486 = !DILocation(line: 2883, column: 20, scope: !2643)
!6487 = !DILocation(line: 2883, column: 50, scope: !2643)
!6488 = !DILocation(line: 2883, column: 71, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !2643, file: !4, line: 2883, column: 68)
!6490 = !DILocation(line: 2883, column: 88, scope: !6489)
!6491 = !DILocation(line: 2883, column: 68, scope: !6489)
!6492 = !DILocation(line: 2883, column: 98, scope: !6489)
!6493 = !DILocation(line: 2883, column: 68, scope: !2643)
!6494 = !DILocation(line: 2883, column: 68, scope: !6495)
!6495 = !DILexicalBlockFile(scope: !2643, file: !4, discriminator: 2)
!6496 = !DILocation(line: 2883, column: 129, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !6489, file: !4, discriminator: 3)
!6498 = !DILocation(line: 2883, column: 147, scope: !6489)
!6499 = !DILocation(line: 2883, column: 157, scope: !6489)
!6500 = !DILocation(line: 2883, column: 182, scope: !6489)
!6501 = !DILocation(line: 2883, column: 113, scope: !6489)
!6502 = !DILocation(line: 2883, column: 201, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !2635, file: !4, discriminator: 4)
!6504 = !DILocation(line: 2883, column: 201, scope: !2643)
!6505 = !DILocation(line: 2883, column: 201, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !2643, file: !4, discriminator: 5)
!6507 = !DILocation(line: 2884, column: 9, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !2635, file: !4, line: 2884, column: 9)
!6509 = !DILocation(line: 2884, column: 13, scope: !6508)
!6510 = !DILocation(line: 2884, column: 9, scope: !2635)
!6511 = !DILocation(line: 2885, column: 22, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6508, file: !4, line: 2884, column: 19)
!6513 = !DILocation(line: 2886, column: 56, scope: !6512)
!6514 = !DILocation(line: 2885, column: 9, scope: !6512)
!6515 = !DILocation(line: 2887, column: 9, scope: !6512)
!6516 = !DILocation(line: 2889, column: 36, scope: !2635)
!6517 = !DILocation(line: 2889, column: 11, scope: !2635)
!6518 = !DILocation(line: 2889, column: 9, scope: !2635)
!6519 = !DILocation(line: 2890, column: 9, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !2635, file: !4, line: 2890, column: 9)
!6521 = !DILocation(line: 2890, column: 13, scope: !6520)
!6522 = !DILocation(line: 2890, column: 9, scope: !2635)
!6523 = !DILocation(line: 2891, column: 9, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6520, file: !4, line: 2890, column: 28)
!6525 = !DILocation(line: 2892, column: 9, scope: !6524)
!6526 = !DILocation(line: 2894, column: 18, scope: !2635)
!6527 = !DILocation(line: 2894, column: 24, scope: !2635)
!6528 = !DILocation(line: 2894, column: 40, scope: !2635)
!6529 = !DILocation(line: 2894, column: 32, scope: !2635)
!6530 = !DILocation(line: 2894, column: 5, scope: !2635)
!6531 = !DILocation(line: 2895, column: 17, scope: !2635)
!6532 = !DILocation(line: 2895, column: 5, scope: !2635)
!6533 = !DILocation(line: 2896, column: 58, scope: !2635)
!6534 = !DILocation(line: 2896, column: 5, scope: !2635)
!6535 = !DILocation(line: 2897, column: 1, scope: !2635)
!6536 = !DILocation(line: 3004, column: 39, scope: !2644)
!6537 = !DILocation(line: 3004, column: 55, scope: !2644)
!6538 = !DILocation(line: 3007, column: 5, scope: !2644)
!6539 = !DILocation(line: 3007, column: 15, scope: !2644)
!6540 = !DILocation(line: 3009, column: 27, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !2644, file: !4, line: 3009, column: 9)
!6542 = !DILocation(line: 3009, column: 10, scope: !6541)
!6543 = !DILocation(line: 3009, column: 9, scope: !2644)
!6544 = !DILocation(line: 3010, column: 9, scope: !6541)
!6545 = !DILocation(line: 3012, column: 5, scope: !2644)
!6546 = !DILocation(line: 3012, column: 10, scope: !6547)
!6547 = !DILexicalBlockFile(scope: !2650, file: !4, discriminator: 1)
!6548 = !DILocation(line: 3012, column: 20, scope: !2650)
!6549 = !DILocation(line: 3012, column: 43, scope: !2650)
!6550 = !DILocation(line: 3012, column: 49, scope: !2650)
!6551 = !DILocation(line: 3012, column: 68, scope: !2654)
!6552 = !DILocation(line: 3012, column: 76, scope: !2654)
!6553 = !DILocation(line: 3012, column: 68, scope: !2650)
!6554 = !DILocation(line: 3012, column: 94, scope: !6555)
!6555 = !DILexicalBlockFile(scope: !2653, file: !4, discriminator: 2)
!6556 = !DILocation(line: 3012, column: 100, scope: !2653)
!6557 = !DILocation(line: 3012, column: 114, scope: !2653)
!6558 = !DILocation(line: 3012, column: 128, scope: !2653)
!6559 = !DILocation(line: 3012, column: 133, scope: !6560)
!6560 = !DILexicalBlockFile(scope: !2652, file: !4, discriminator: 4)
!6561 = !DILocation(line: 3012, column: 143, scope: !2652)
!6562 = !DILocation(line: 3012, column: 173, scope: !2652)
!6563 = !DILocation(line: 3012, column: 191, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !2652, file: !4, line: 3012, column: 188)
!6565 = !DILocation(line: 3012, column: 208, scope: !6564)
!6566 = !DILocation(line: 3012, column: 188, scope: !6564)
!6567 = !DILocation(line: 3012, column: 218, scope: !6564)
!6568 = !DILocation(line: 3012, column: 188, scope: !2652)
!6569 = !DILocation(line: 3012, column: 188, scope: !6570)
!6570 = !DILexicalBlockFile(scope: !2652, file: !4, discriminator: 5)
!6571 = !DILocation(line: 3012, column: 249, scope: !6572)
!6572 = !DILexicalBlockFile(scope: !6564, file: !4, discriminator: 6)
!6573 = !DILocation(line: 3012, column: 267, scope: !6564)
!6574 = !DILocation(line: 3012, column: 277, scope: !6564)
!6575 = !DILocation(line: 3012, column: 302, scope: !6564)
!6576 = !DILocation(line: 3012, column: 233, scope: !6564)
!6577 = !DILocation(line: 3012, column: 321, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !2653, file: !4, discriminator: 7)
!6579 = !DILocation(line: 3012, column: 321, scope: !2652)
!6580 = !DILocation(line: 3012, column: 321, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !2652, file: !4, discriminator: 8)
!6582 = !DILocation(line: 3012, column: 334, scope: !6583)
!6583 = !DILexicalBlockFile(scope: !2653, file: !4, discriminator: 9)
!6584 = !DILocation(line: 3012, column: 336, scope: !6585)
!6585 = !DILexicalBlockFile(scope: !6586, file: !4, discriminator: 10)
!6586 = !DILexicalBlockFile(scope: !2644, file: !4, discriminator: 3)
!6587 = !DILocation(line: 3012, column: 336, scope: !2650)
!6588 = !DILocation(line: 3012, column: 336, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !2650, file: !4, discriminator: 11)
!6590 = !DILocation(line: 3013, column: 9, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !2644, file: !4, line: 3013, column: 9)
!6592 = !DILocation(line: 3013, column: 12, scope: !6591)
!6593 = !DILocation(line: 3013, column: 9, scope: !2644)
!6594 = !DILocation(line: 3014, column: 31, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6591, file: !4, line: 3013, column: 34)
!6596 = !DILocation(line: 3014, column: 37, scope: !6595)
!6597 = !DILocation(line: 3014, column: 9, scope: !6595)
!6598 = !DILocation(line: 3015, column: 5, scope: !6595)
!6599 = !DILocation(line: 3017, column: 31, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !4, line: 3017, column: 13)
!6601 = distinct !DILexicalBlock(scope: !6591, file: !4, line: 3016, column: 10)
!6602 = !DILocation(line: 3017, column: 14, scope: !6600)
!6603 = !DILocation(line: 3017, column: 13, scope: !6601)
!6604 = !DILocation(line: 3018, column: 35, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6600, file: !4, line: 3017, column: 36)
!6606 = !DILocation(line: 3018, column: 41, scope: !6605)
!6607 = !DILocation(line: 3018, column: 13, scope: !6605)
!6608 = !DILocation(line: 3019, column: 29, scope: !6605)
!6609 = !DILocation(line: 3019, column: 13, scope: !6605)
!6610 = !DILocation(line: 3021, column: 13, scope: !6605)
!6611 = !DILocation(line: 3023, column: 25, scope: !6601)
!6612 = !DILocation(line: 3023, column: 31, scope: !6601)
!6613 = !DILocation(line: 3023, column: 40, scope: !6601)
!6614 = !DILocation(line: 3024, column: 30, scope: !6601)
!6615 = !DILocation(line: 3024, column: 9, scope: !6601)
!6616 = !DILocation(line: 3024, column: 15, scope: !6601)
!6617 = !DILocation(line: 3024, column: 28, scope: !6601)
!6618 = !DILocation(line: 3025, column: 31, scope: !6601)
!6619 = !DILocation(line: 3025, column: 37, scope: !6601)
!6620 = !DILocation(line: 3025, column: 9, scope: !6601)
!6621 = !DILocation(line: 3026, column: 22, scope: !6601)
!6622 = !DILocation(line: 3026, column: 28, scope: !6601)
!6623 = !DILocation(line: 3026, column: 46, scope: !6601)
!6624 = !DILocation(line: 3026, column: 38, scope: !6601)
!6625 = !DILocation(line: 3026, column: 9, scope: !6601)
!6626 = !DILocation(line: 3028, column: 58, scope: !2644)
!6627 = !DILocation(line: 3028, column: 5, scope: !2644)
!6628 = !DILocation(line: 3036, column: 1, scope: !2644)
!6629 = !DILocation(line: 3048, column: 32, scope: !2688)
!6630 = !DILocation(line: 3050, column: 5, scope: !2688)
!6631 = !DILocation(line: 3050, column: 17, scope: !2688)
!6632 = !DILocation(line: 3051, column: 5, scope: !2688)
!6633 = !DILocation(line: 3051, column: 18, scope: !2688)
!6634 = !DILocation(line: 3052, column: 5, scope: !2688)
!6635 = !DILocation(line: 3052, column: 9, scope: !2688)
!6636 = !DILocation(line: 3052, column: 19, scope: !2688)
!6637 = !DILocation(line: 3052, column: 28, scope: !2688)
!6638 = !DILocation(line: 3052, column: 38, scope: !2688)
!6639 = !DILocation(line: 3052, column: 46, scope: !2688)
!6640 = !DILocation(line: 3054, column: 36, scope: !2688)
!6641 = !DILocation(line: 3054, column: 42, scope: !2688)
!6642 = !DILocation(line: 3054, column: 13, scope: !2688)
!6643 = !DILocation(line: 3054, column: 11, scope: !2688)
!6644 = !DILocation(line: 3055, column: 12, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !2688, file: !4, line: 3055, column: 5)
!6646 = !DILocation(line: 3055, column: 10, scope: !6645)
!6647 = !DILocation(line: 3055, column: 17, scope: !6648)
!6648 = !DILexicalBlockFile(scope: !6649, file: !4, discriminator: 2)
!6649 = !DILexicalBlockFile(scope: !6650, file: !4, discriminator: 1)
!6650 = distinct !DILexicalBlock(scope: !6645, file: !4, line: 3055, column: 5)
!6651 = !DILocation(line: 3055, column: 45, scope: !6650)
!6652 = !DILocation(line: 3055, column: 52, scope: !6650)
!6653 = !{!6654, !3861, i64 8}
!6654 = !{!"x509_store_st", !3893, i64 0, !3861, i64 8, !3861, i64 16, !3861, i64 24, !3861, i64 32, !3861, i64 40, !3861, i64 48, !3861, i64 56, !3861, i64 64, !3861, i64 72, !3861, i64 80, !3861, i64 88, !3861, i64 96, !3861, i64 104, !3861, i64 112, !4956, i64 120, !3893, i64 136}
!6655 = !DILocation(line: 3055, column: 29, scope: !6650)
!6656 = !DILocation(line: 3055, column: 21, scope: !6650)
!6657 = !DILocation(line: 3055, column: 19, scope: !6650)
!6658 = !DILocation(line: 3055, column: 5, scope: !6645)
!6659 = !DILocation(line: 3056, column: 57, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6650, file: !4, line: 3055, column: 101)
!6661 = !DILocation(line: 3056, column: 64, scope: !6660)
!6662 = !DILocation(line: 3056, column: 41, scope: !6660)
!6663 = !DILocation(line: 3056, column: 108, scope: !6660)
!6664 = !DILocation(line: 3056, column: 31, scope: !6660)
!6665 = !DILocation(line: 3056, column: 16, scope: !6660)
!6666 = !DILocation(line: 3056, column: 13, scope: !6660)
!6667 = !DILocation(line: 3057, column: 17, scope: !6660)
!6668 = !DILocation(line: 3057, column: 22, scope: !6660)
!6669 = !{!6670, !3893, i64 0}
!6670 = !{!"x509_object_st", !3893, i64 0, !3862, i64 8}
!6671 = !DILocation(line: 3059, column: 21, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6660, file: !4, line: 3057, column: 28)
!6673 = !DILocation(line: 3060, column: 35, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6672, file: !4, line: 3060, column: 21)
!6675 = !DILocation(line: 3060, column: 40, scope: !6674)
!6676 = !DILocation(line: 3060, column: 45, scope: !6674)
!6677 = !DILocation(line: 3060, column: 21, scope: !6674)
!6678 = !DILocation(line: 3060, column: 21, scope: !6672)
!6679 = !DILocation(line: 3061, column: 23, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6674, file: !4, line: 3060, column: 52)
!6681 = !DILocation(line: 3062, column: 17, scope: !6680)
!6682 = !DILocation(line: 3063, column: 17, scope: !6672)
!6683 = !DILocation(line: 3065, column: 20, scope: !6672)
!6684 = !DILocation(line: 3066, column: 17, scope: !6672)
!6685 = !DILocation(line: 3068, column: 21, scope: !6672)
!6686 = !DILocation(line: 3069, column: 17, scope: !6672)
!6687 = !DILocation(line: 3074, column: 17, scope: !6672)
!6688 = !DILocation(line: 3076, column: 5, scope: !6660)
!6689 = !DILocation(line: 3055, column: 97, scope: !6650)
!6690 = !DILocation(line: 3055, column: 5, scope: !6650)
!6691 = !DILocation(line: 3077, column: 46, scope: !2688)
!6692 = !DILocation(line: 3077, column: 59, scope: !2688)
!6693 = !DILocation(line: 3078, column: 20, scope: !2688)
!6694 = !DILocation(line: 3077, column: 12, scope: !2688)
!6695 = !DILocation(line: 3079, column: 1, scope: !2688)
!6696 = !DILocation(line: 3077, column: 5, scope: !2688)
!6697 = !DILocation(line: 3090, column: 28, scope: !2700)
!6698 = !DILocation(line: 3090, column: 44, scope: !2700)
!6699 = !DILocation(line: 3090, column: 60, scope: !2700)
!6700 = !DILocation(line: 3092, column: 5, scope: !2700)
!6701 = !DILocation(line: 3092, column: 11, scope: !2700)
!6702 = !DILocation(line: 3093, column: 5, scope: !2700)
!6703 = !DILocation(line: 3093, column: 17, scope: !2700)
!6704 = !DILocation(line: 3094, column: 5, scope: !2700)
!6705 = !DILocation(line: 3094, column: 15, scope: !2700)
!6706 = !DILocation(line: 3094, column: 33, scope: !2700)
!6707 = !DILocation(line: 3095, column: 5, scope: !2700)
!6708 = !DILocation(line: 3095, column: 9, scope: !2700)
!6709 = !DILocation(line: 3096, column: 5, scope: !2700)
!6710 = !DILocation(line: 3096, column: 9, scope: !2700)
!6711 = !DILocation(line: 3098, column: 38, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !2700, file: !4, line: 3098, column: 9)
!6713 = !DILocation(line: 3098, column: 44, scope: !6712)
!6714 = !DILocation(line: 3099, column: 38, scope: !6712)
!6715 = !DILocation(line: 3098, column: 10, scope: !6712)
!6716 = !DILocation(line: 3098, column: 9, scope: !2700)
!6717 = !DILocation(line: 3100, column: 9, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6712, file: !4, line: 3099, column: 61)
!6719 = !DILocation(line: 3103, column: 18, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !2700, file: !4, line: 3103, column: 9)
!6721 = !DILocation(line: 3103, column: 16, scope: !6720)
!6722 = !DILocation(line: 3103, column: 33, scope: !6720)
!6723 = !DILocation(line: 3103, column: 9, scope: !2700)
!6724 = !DILocation(line: 3104, column: 9, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6720, file: !4, line: 3103, column: 48)
!6726 = !DILocation(line: 3107, column: 36, scope: !2700)
!6727 = !DILocation(line: 3107, column: 42, scope: !2700)
!6728 = !DILocation(line: 3107, column: 13, scope: !2700)
!6729 = !DILocation(line: 3107, column: 11, scope: !2700)
!6730 = !DILocation(line: 3108, column: 12, scope: !2715)
!6731 = !DILocation(line: 3108, column: 10, scope: !2715)
!6732 = !DILocation(line: 3108, column: 17, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6734, file: !4, discriminator: 2)
!6734 = !DILexicalBlockFile(scope: !2714, file: !4, discriminator: 1)
!6735 = !DILocation(line: 3108, column: 45, scope: !2714)
!6736 = !DILocation(line: 3108, column: 52, scope: !2714)
!6737 = !DILocation(line: 3108, column: 29, scope: !2714)
!6738 = !DILocation(line: 3108, column: 21, scope: !2714)
!6739 = !DILocation(line: 3108, column: 19, scope: !2714)
!6740 = !DILocation(line: 3108, column: 5, scope: !2715)
!6741 = !DILocation(line: 3109, column: 9, scope: !2713)
!6742 = !DILocation(line: 3109, column: 22, scope: !2713)
!6743 = !DILocation(line: 3110, column: 9, scope: !2713)
!6744 = !DILocation(line: 3110, column: 15, scope: !2713)
!6745 = !DILocation(line: 3112, column: 57, scope: !2713)
!6746 = !DILocation(line: 3112, column: 64, scope: !2713)
!6747 = !DILocation(line: 3112, column: 41, scope: !2713)
!6748 = !DILocation(line: 3112, column: 108, scope: !2713)
!6749 = !DILocation(line: 3112, column: 31, scope: !2713)
!6750 = !DILocation(line: 3112, column: 16, scope: !2713)
!6751 = !DILocation(line: 3112, column: 13, scope: !2713)
!6752 = !DILocation(line: 3113, column: 13, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !2713, file: !4, line: 3113, column: 13)
!6754 = !DILocation(line: 3113, column: 18, scope: !6753)
!6755 = !DILocation(line: 3113, column: 23, scope: !6753)
!6756 = !DILocation(line: 3113, column: 13, scope: !2713)
!6757 = !DILocation(line: 3115, column: 13, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6753, file: !4, line: 3113, column: 29)
!6759 = !DILocation(line: 3118, column: 16, scope: !2713)
!6760 = !DILocation(line: 3118, column: 21, scope: !2713)
!6761 = !DILocation(line: 3118, column: 26, scope: !2713)
!6762 = !DILocation(line: 3118, column: 14, scope: !2713)
!6763 = !DILocation(line: 3119, column: 28, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !2713, file: !4, line: 3119, column: 13)
!6765 = !DILocation(line: 3119, column: 14, scope: !6764)
!6766 = !DILocation(line: 3119, column: 13, scope: !2713)
!6767 = !DILocation(line: 3120, column: 13, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6764, file: !4, line: 3119, column: 35)
!6769 = !DILocation(line: 3122, column: 13, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !2713, file: !4, line: 3122, column: 13)
!6771 = !DILocation(line: 3122, column: 13, scope: !2713)
!6772 = !DILocation(line: 3123, column: 38, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6770, file: !4, line: 3122, column: 26)
!6774 = !DILocation(line: 3123, column: 18, scope: !6773)
!6775 = !DILocation(line: 3123, column: 16, scope: !6773)
!6776 = !DILocation(line: 3124, column: 9, scope: !6773)
!6777 = !DILocation(line: 3125, column: 38, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6770, file: !4, line: 3124, column: 16)
!6779 = !DILocation(line: 3125, column: 18, scope: !6778)
!6780 = !DILocation(line: 3125, column: 16, scope: !6778)
!6781 = !DILocation(line: 3127, column: 13, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !2713, file: !4, line: 3127, column: 13)
!6783 = !DILocation(line: 3127, column: 16, scope: !6782)
!6784 = !DILocation(line: 3127, column: 13, scope: !2713)
!6785 = !DILocation(line: 3128, column: 13, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6782, file: !4, line: 3127, column: 31)
!6787 = !DILocation(line: 3130, column: 27, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !2713, file: !4, line: 3130, column: 13)
!6789 = !DILocation(line: 3130, column: 34, scope: !6788)
!6790 = !DILocation(line: 3130, column: 13, scope: !6788)
!6791 = !DILocation(line: 3130, column: 38, scope: !6788)
!6792 = !DILocation(line: 3130, column: 13, scope: !2713)
!6793 = !DILocation(line: 3131, column: 13, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6788, file: !4, line: 3130, column: 45)
!6795 = !DILocation(line: 3133, column: 9, scope: !2713)
!6796 = !DILocation(line: 3133, column: 14, scope: !6797)
!6797 = !DILexicalBlockFile(scope: !2718, file: !4, discriminator: 1)
!6798 = !DILocation(line: 3133, column: 24, scope: !2718)
!6799 = !DILocation(line: 3133, column: 47, scope: !2718)
!6800 = !DILocation(line: 3133, column: 56, scope: !2722)
!6801 = !DILocation(line: 3133, column: 64, scope: !2722)
!6802 = !DILocation(line: 3133, column: 56, scope: !2718)
!6803 = !DILocation(line: 3133, column: 86, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !2721, file: !4, discriminator: 2)
!6805 = !DILocation(line: 3133, column: 100, scope: !2721)
!6806 = !DILocation(line: 3133, column: 105, scope: !6807)
!6807 = !DILexicalBlockFile(scope: !2720, file: !4, discriminator: 4)
!6808 = !DILocation(line: 3133, column: 115, scope: !2720)
!6809 = !DILocation(line: 3133, column: 145, scope: !2720)
!6810 = !DILocation(line: 3133, column: 163, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !2720, file: !4, line: 3133, column: 160)
!6812 = !DILocation(line: 3133, column: 180, scope: !6811)
!6813 = !DILocation(line: 3133, column: 160, scope: !6811)
!6814 = !DILocation(line: 3133, column: 190, scope: !6811)
!6815 = !DILocation(line: 3133, column: 160, scope: !2720)
!6816 = !DILocation(line: 3133, column: 160, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !2720, file: !4, discriminator: 5)
!6818 = !DILocation(line: 3133, column: 221, scope: !6819)
!6819 = !DILexicalBlockFile(scope: !6811, file: !4, discriminator: 6)
!6820 = !DILocation(line: 3133, column: 239, scope: !6811)
!6821 = !DILocation(line: 3133, column: 249, scope: !6811)
!6822 = !DILocation(line: 3133, column: 274, scope: !6811)
!6823 = !DILocation(line: 3133, column: 205, scope: !6811)
!6824 = !DILocation(line: 3133, column: 293, scope: !6825)
!6825 = !DILexicalBlockFile(scope: !2721, file: !4, discriminator: 7)
!6826 = !DILocation(line: 3133, column: 293, scope: !2720)
!6827 = !DILocation(line: 3133, column: 293, scope: !6828)
!6828 = !DILexicalBlockFile(scope: !2720, file: !4, discriminator: 8)
!6829 = !DILocation(line: 3133, column: 306, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !2721, file: !4, discriminator: 9)
!6831 = !DILocation(line: 3133, column: 308, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6833, file: !4, discriminator: 10)
!6833 = !DILexicalBlockFile(scope: !2713, file: !4, discriminator: 3)
!6834 = !DILocation(line: 3133, column: 308, scope: !2718)
!6835 = !DILocation(line: 3133, column: 308, scope: !6836)
!6836 = !DILexicalBlockFile(scope: !2718, file: !4, discriminator: 11)
!6837 = !DILocation(line: 3134, column: 5, scope: !2714)
!6838 = !DILocation(line: 3134, column: 5, scope: !6734)
!6839 = !DILocation(line: 3134, column: 5, scope: !2713)
!6840 = !DILocation(line: 3108, column: 97, scope: !2714)
!6841 = !DILocation(line: 3108, column: 5, scope: !2714)
!6842 = !DILocation(line: 3135, column: 12, scope: !2700)
!6843 = !DILocation(line: 3135, column: 5, scope: !2700)
!6844 = !DILocation(line: 3138, column: 5, scope: !2700)
!6845 = !DILocation(line: 3138, column: 10, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !2724, file: !4, discriminator: 1)
!6847 = !DILocation(line: 3138, column: 20, scope: !2724)
!6848 = !DILocation(line: 3138, column: 51, scope: !2724)
!6849 = !DILocation(line: 3138, column: 60, scope: !2727)
!6850 = !DILocation(line: 3138, column: 76, scope: !2727)
!6851 = !DILocation(line: 3138, column: 60, scope: !2724)
!6852 = !DILocation(line: 3138, column: 91, scope: !6853)
!6853 = !DILexicalBlockFile(scope: !2727, file: !4, discriminator: 2)
!6854 = !DILocation(line: 3138, column: 96, scope: !6855)
!6855 = !DILexicalBlockFile(scope: !2726, file: !4, discriminator: 4)
!6856 = !DILocation(line: 3138, column: 106, scope: !2726)
!6857 = !DILocation(line: 3138, column: 136, scope: !2726)
!6858 = !DILocation(line: 3138, column: 162, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !2726, file: !4, line: 3138, column: 159)
!6860 = !DILocation(line: 3138, column: 179, scope: !6859)
!6861 = !DILocation(line: 3138, column: 159, scope: !6859)
!6862 = !DILocation(line: 3138, column: 189, scope: !6859)
!6863 = !DILocation(line: 3138, column: 159, scope: !2726)
!6864 = !DILocation(line: 3138, column: 159, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !2726, file: !4, discriminator: 5)
!6866 = !DILocation(line: 3138, column: 220, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !6859, file: !4, discriminator: 6)
!6868 = !DILocation(line: 3138, column: 238, scope: !6859)
!6869 = !DILocation(line: 3138, column: 248, scope: !6859)
!6870 = !DILocation(line: 3138, column: 273, scope: !6859)
!6871 = !DILocation(line: 3138, column: 204, scope: !6859)
!6872 = !DILocation(line: 3138, column: 292, scope: !6873)
!6873 = !DILexicalBlockFile(scope: !2727, file: !4, discriminator: 7)
!6874 = !DILocation(line: 3138, column: 292, scope: !2726)
!6875 = !DILocation(line: 3138, column: 292, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !2726, file: !4, discriminator: 8)
!6877 = !DILocation(line: 3138, column: 292, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !2726, file: !4, discriminator: 9)
!6879 = !DILocation(line: 3138, column: 305, scope: !6880)
!6880 = !DILexicalBlockFile(scope: !6881, file: !4, discriminator: 10)
!6881 = !DILexicalBlockFile(scope: !2700, file: !4, discriminator: 3)
!6882 = !DILocation(line: 3138, column: 305, scope: !2724)
!6883 = !DILocation(line: 3138, column: 305, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !2724, file: !4, discriminator: 11)
!6885 = !DILocation(line: 3139, column: 5, scope: !2700)
!6886 = !DILocation(line: 3139, column: 10, scope: !6887)
!6887 = !DILexicalBlockFile(scope: !2729, file: !4, discriminator: 1)
!6888 = !DILocation(line: 3139, column: 20, scope: !2729)
!6889 = !DILocation(line: 3139, column: 51, scope: !2729)
!6890 = !DILocation(line: 3139, column: 63, scope: !2732)
!6891 = !DILocation(line: 3139, column: 79, scope: !2732)
!6892 = !DILocation(line: 3139, column: 63, scope: !2729)
!6893 = !DILocation(line: 3139, column: 94, scope: !6894)
!6894 = !DILexicalBlockFile(scope: !2732, file: !4, discriminator: 2)
!6895 = !DILocation(line: 3139, column: 99, scope: !6896)
!6896 = !DILexicalBlockFile(scope: !2731, file: !4, discriminator: 4)
!6897 = !DILocation(line: 3139, column: 109, scope: !2731)
!6898 = !DILocation(line: 3139, column: 139, scope: !2731)
!6899 = !DILocation(line: 3139, column: 165, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !2731, file: !4, line: 3139, column: 162)
!6901 = !DILocation(line: 3139, column: 182, scope: !6900)
!6902 = !DILocation(line: 3139, column: 162, scope: !6900)
!6903 = !DILocation(line: 3139, column: 192, scope: !6900)
!6904 = !DILocation(line: 3139, column: 162, scope: !2731)
!6905 = !DILocation(line: 3139, column: 162, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !2731, file: !4, discriminator: 5)
!6907 = !DILocation(line: 3139, column: 223, scope: !6908)
!6908 = !DILexicalBlockFile(scope: !6900, file: !4, discriminator: 6)
!6909 = !DILocation(line: 3139, column: 241, scope: !6900)
!6910 = !DILocation(line: 3139, column: 251, scope: !6900)
!6911 = !DILocation(line: 3139, column: 276, scope: !6900)
!6912 = !DILocation(line: 3139, column: 207, scope: !6900)
!6913 = !DILocation(line: 3139, column: 295, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !2732, file: !4, discriminator: 7)
!6915 = !DILocation(line: 3139, column: 295, scope: !2731)
!6916 = !DILocation(line: 3139, column: 295, scope: !6917)
!6917 = !DILexicalBlockFile(scope: !2731, file: !4, discriminator: 8)
!6918 = !DILocation(line: 3139, column: 295, scope: !6919)
!6919 = !DILexicalBlockFile(scope: !2731, file: !4, discriminator: 9)
!6920 = !DILocation(line: 3139, column: 308, scope: !6880)
!6921 = !DILocation(line: 3139, column: 308, scope: !2729)
!6922 = !DILocation(line: 3139, column: 308, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !2729, file: !4, discriminator: 11)
!6924 = !DILocation(line: 3140, column: 5, scope: !2700)
!6925 = !DILocation(line: 3141, column: 1, scope: !2700)
!6926 = !DILocation(line: 478, column: 30, scope: !2371)
!6927 = !DILocation(line: 478, column: 58, scope: !2371)
!6928 = !{!3862, !3862, i64 0}
!6929 = !DILocation(line: 479, column: 45, scope: !2371)
!6930 = !DILocation(line: 480, column: 22, scope: !2371)
!6931 = !DILocation(line: 482, column: 5, scope: !2371)
!6932 = !DILocation(line: 482, column: 18, scope: !2371)
!6933 = !DILocation(line: 483, column: 5, scope: !2371)
!6934 = !DILocation(line: 483, column: 14, scope: !2371)
!6935 = !DILocation(line: 483, column: 20, scope: !2371)
!6936 = !DILocation(line: 483, column: 28, scope: !2371)
!6937 = !DILocation(line: 484, column: 5, scope: !2371)
!6938 = !DILocation(line: 484, column: 10, scope: !2371)
!6939 = !DILocation(line: 486, column: 30, scope: !2371)
!6940 = !DILocation(line: 486, column: 14, scope: !2371)
!6941 = !DILocation(line: 486, column: 10, scope: !2371)
!6942 = !DILocation(line: 487, column: 9, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !2371, file: !4, line: 487, column: 9)
!6944 = !DILocation(line: 487, column: 14, scope: !6943)
!6945 = !DILocation(line: 487, column: 9, scope: !2371)
!6946 = !DILocation(line: 488, column: 9, scope: !6943)
!6947 = !DILocation(line: 490, column: 5, scope: !2371)
!6948 = !DILocation(line: 490, column: 11, scope: !2371)
!6949 = !DILocation(line: 490, column: 21, scope: !2371)
!6950 = !{!6951, !3861, i64 40}
!6951 = !{!"", !4102, i64 0, !3861, i64 16, !3861, i64 24, !3861, i64 32, !3861, i64 40, !3862, i64 48, !3862, i64 49, !3862, i64 52}
!6952 = !DILocation(line: 491, column: 5, scope: !2371)
!6953 = !DILocation(line: 491, column: 11, scope: !2371)
!6954 = !DILocation(line: 491, column: 15, scope: !2371)
!6955 = !{!6951, !3861, i64 24}
!6956 = !DILocation(line: 492, column: 5, scope: !2371)
!6957 = !DILocation(line: 492, column: 11, scope: !2371)
!6958 = !DILocation(line: 492, column: 18, scope: !2371)
!6959 = !{!6951, !3861, i64 16}
!6960 = !DILocation(line: 493, column: 17, scope: !2371)
!6961 = !DILocation(line: 493, column: 5, scope: !2371)
!6962 = !DILocation(line: 493, column: 11, scope: !2371)
!6963 = !DILocation(line: 493, column: 15, scope: !2371)
!6964 = !{!6951, !3861, i64 32}
!6965 = !DILocation(line: 494, column: 5, scope: !2371)
!6966 = !DILocation(line: 494, column: 11, scope: !2371)
!6967 = !DILocation(line: 494, column: 30, scope: !2371)
!6968 = !{!6951, !3862, i64 48}
!6969 = !DILocation(line: 495, column: 5, scope: !2371)
!6970 = !DILocation(line: 495, column: 11, scope: !2371)
!6971 = !DILocation(line: 495, column: 26, scope: !2371)
!6972 = !{!6951, !3862, i64 49}
!6973 = !DILocation(line: 496, column: 21, scope: !2371)
!6974 = !DILocation(line: 496, column: 8, scope: !2371)
!6975 = !DILocation(line: 496, column: 31, scope: !2371)
!6976 = !DILocation(line: 496, column: 40, scope: !2371)
!6977 = !DILocation(line: 499, column: 12, scope: !2371)
!6978 = !DILocation(line: 500, column: 5, scope: !2371)
!6979 = !DILocation(line: 502, column: 7, scope: !2383)
!6980 = !DILocation(line: 502, column: 22, scope: !2383)
!6981 = !DILocation(line: 502, column: 42, scope: !2383)
!6982 = !DILocation(line: 502, column: 51, scope: !6983)
!6983 = !DILexicalBlockFile(scope: !6984, file: !4, discriminator: 1)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !4, line: 502, column: 51)
!6985 = distinct !DILexicalBlock(scope: !2383, file: !4, line: 502, column: 45)
!6986 = !DILocation(line: 502, column: 67, scope: !6984)
!6987 = !DILocation(line: 502, column: 51, scope: !6985)
!6988 = !DILocation(line: 502, column: 83, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6990, file: !4, discriminator: 2)
!6990 = distinct !DILexicalBlock(scope: !6984, file: !4, line: 502, column: 71)
!6991 = !DILocation(line: 502, column: 81, scope: !6990)
!6992 = !DILocation(line: 502, column: 104, scope: !6990)
!6993 = !DILocation(line: 502, column: 106, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !6995, file: !4, discriminator: 4)
!6995 = !DILexicalBlockFile(scope: !6985, file: !4, discriminator: 3)
!6996 = !DILocation(line: 502, column: 106, scope: !6997)
!6997 = !DILexicalBlockFile(scope: !6985, file: !4, discriminator: 5)
!6998 = !DILocation(line: 503, column: 25, scope: !2383)
!6999 = !DILocation(line: 503, column: 17, scope: !2383)
!7000 = !DILocation(line: 503, column: 5, scope: !2383)
!7001 = !DILocation(line: 503, column: 11, scope: !2383)
!7002 = !DILocation(line: 503, column: 15, scope: !2383)
!7003 = !DILocation(line: 504, column: 5, scope: !2383)
!7004 = !DILocation(line: 504, column: 14, scope: !7005)
!7005 = !DILexicalBlockFile(scope: !7006, file: !4, discriminator: 1)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !4, line: 504, column: 14)
!7007 = distinct !DILexicalBlock(scope: !2383, file: !4, line: 504, column: 8)
!7008 = !DILocation(line: 504, column: 30, scope: !7006)
!7009 = !DILocation(line: 504, column: 14, scope: !7007)
!7010 = !DILocation(line: 504, column: 57, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !7012, file: !4, discriminator: 2)
!7012 = distinct !DILexicalBlock(scope: !7006, file: !4, line: 504, column: 34)
!7013 = !DILocation(line: 504, column: 36, scope: !7012)
!7014 = !DILocation(line: 504, column: 65, scope: !7012)
!7015 = !DILocation(line: 504, column: 67, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !7017, file: !4, discriminator: 4)
!7017 = !DILexicalBlockFile(scope: !7007, file: !4, discriminator: 3)
!7018 = !DILocation(line: 504, column: 67, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !7007, file: !4, discriminator: 5)
!7020 = !DILocation(line: 504, column: 80, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !2371, file: !4, discriminator: 6)
!7022 = !DILocation(line: 505, column: 22, scope: !2371)
!7023 = !DILocation(line: 505, column: 28, scope: !2371)
!7024 = !DILocation(line: 505, column: 42, scope: !2371)
!7025 = !DILocation(line: 505, column: 34, scope: !2371)
!7026 = !DILocation(line: 505, column: 6, scope: !2371)
!7027 = !DILocation(line: 506, column: 16, scope: !2371)
!7028 = !DILocation(line: 506, column: 22, scope: !2371)
!7029 = !DILocation(line: 506, column: 33, scope: !2371)
!7030 = !DILocation(line: 506, column: 39, scope: !2371)
!7031 = !{!7032, !3893, i64 16}
!7032 = !{!"", !4102, i64 0, !3893, i64 16, !3893, i64 20, !3893, i64 24, !3893, i64 28, !3861, i64 32, !7033, i64 40}
!7033 = !{!"double", !3862, i64 0}
!7034 = !DILocation(line: 506, column: 5, scope: !2371)
!7035 = !DILocation(line: 507, column: 10, scope: !2371)
!7036 = !DILocation(line: 509, column: 10, scope: !2371)
!7037 = !DILocation(line: 511, column: 15, scope: !2371)
!7038 = !DILocation(line: 511, column: 21, scope: !2371)
!7039 = !DILocation(line: 511, column: 30, scope: !2371)
!7040 = !DILocation(line: 511, column: 5, scope: !2371)
!7041 = !DILocation(line: 514, column: 9, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !2371, file: !4, line: 514, column: 9)
!7043 = !DILocation(line: 514, column: 25, scope: !7042)
!7044 = !DILocation(line: 514, column: 9, scope: !2371)
!7045 = !DILocation(line: 515, column: 18, scope: !7042)
!7046 = !DILocation(line: 515, column: 24, scope: !7042)
!7047 = !DILocation(line: 515, column: 41, scope: !7042)
!7048 = !DILocation(line: 515, column: 9, scope: !7042)
!7049 = !DILocation(line: 521, column: 9, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !2371, file: !4, line: 521, column: 9)
!7051 = !DILocation(line: 521, column: 15, scope: !7050)
!7052 = !{!7032, !7033, i64 40}
!7053 = !DILocation(line: 521, column: 28, scope: !7050)
!7054 = !DILocation(line: 521, column: 9, scope: !2371)
!7055 = !DILocation(line: 522, column: 31, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7050, file: !4, line: 521, column: 36)
!7057 = !DILocation(line: 522, column: 37, scope: !7056)
!7058 = !DILocation(line: 522, column: 18, scope: !7056)
!7059 = !DILocation(line: 522, column: 9, scope: !7056)
!7060 = !DILocation(line: 523, column: 31, scope: !7056)
!7061 = !DILocation(line: 523, column: 37, scope: !7056)
!7062 = !DILocation(line: 523, column: 18, scope: !7056)
!7063 = !DILocation(line: 523, column: 9, scope: !7056)
!7064 = !DILocation(line: 524, column: 5, scope: !7056)
!7065 = !DILocation(line: 526, column: 7, scope: !2385)
!7066 = !DILocation(line: 526, column: 22, scope: !2385)
!7067 = !DILocation(line: 526, column: 42, scope: !2385)
!7068 = !DILocation(line: 526, column: 51, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !7070, file: !4, discriminator: 1)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !4, line: 526, column: 51)
!7071 = distinct !DILexicalBlock(scope: !2385, file: !4, line: 526, column: 45)
!7072 = !DILocation(line: 526, column: 67, scope: !7070)
!7073 = !DILocation(line: 526, column: 51, scope: !7071)
!7074 = !DILocation(line: 526, column: 83, scope: !7075)
!7075 = !DILexicalBlockFile(scope: !7076, file: !4, discriminator: 2)
!7076 = distinct !DILexicalBlock(scope: !7070, file: !4, line: 526, column: 71)
!7077 = !DILocation(line: 526, column: 81, scope: !7076)
!7078 = !DILocation(line: 526, column: 104, scope: !7076)
!7079 = !DILocation(line: 526, column: 106, scope: !7080)
!7080 = !DILexicalBlockFile(scope: !7081, file: !4, discriminator: 4)
!7081 = !DILexicalBlockFile(scope: !7071, file: !4, discriminator: 3)
!7082 = !DILocation(line: 526, column: 106, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !7071, file: !4, discriminator: 5)
!7084 = !DILocation(line: 527, column: 9, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !2385, file: !4, line: 527, column: 9)
!7086 = !DILocation(line: 527, column: 21, scope: !7085)
!7087 = !DILocation(line: 527, column: 9, scope: !2385)
!7088 = !DILocation(line: 528, column: 31, scope: !7085)
!7089 = !DILocation(line: 528, column: 37, scope: !7085)
!7090 = !DILocation(line: 528, column: 9, scope: !7085)
!7091 = !DILocation(line: 530, column: 30, scope: !7085)
!7092 = !DILocation(line: 530, column: 36, scope: !7085)
!7093 = !DILocation(line: 530, column: 9, scope: !7085)
!7094 = !DILocation(line: 531, column: 5, scope: !2385)
!7095 = !DILocation(line: 531, column: 14, scope: !7096)
!7096 = !DILexicalBlockFile(scope: !7097, file: !4, discriminator: 1)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !4, line: 531, column: 14)
!7098 = distinct !DILexicalBlock(scope: !2385, file: !4, line: 531, column: 8)
!7099 = !DILocation(line: 531, column: 30, scope: !7097)
!7100 = !DILocation(line: 531, column: 14, scope: !7098)
!7101 = !DILocation(line: 531, column: 57, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7103, file: !4, discriminator: 2)
!7103 = distinct !DILexicalBlock(scope: !7097, file: !4, line: 531, column: 34)
!7104 = !DILocation(line: 531, column: 36, scope: !7103)
!7105 = !DILocation(line: 531, column: 65, scope: !7103)
!7106 = !DILocation(line: 531, column: 67, scope: !7107)
!7107 = !DILexicalBlockFile(scope: !7108, file: !4, discriminator: 4)
!7108 = !DILexicalBlockFile(scope: !7098, file: !4, discriminator: 3)
!7109 = !DILocation(line: 531, column: 67, scope: !7110)
!7110 = !DILexicalBlockFile(scope: !7098, file: !4, discriminator: 5)
!7111 = !DILocation(line: 531, column: 80, scope: !7021)
!7112 = !DILocation(line: 533, column: 25, scope: !2371)
!7113 = !DILocation(line: 533, column: 5, scope: !2371)
!7114 = !DILocation(line: 533, column: 11, scope: !2371)
!7115 = !DILocation(line: 533, column: 23, scope: !2371)
!7116 = !{!6951, !3862, i64 52}
!7117 = !DILocation(line: 534, column: 50, scope: !2371)
!7118 = !DILocation(line: 534, column: 37, scope: !2371)
!7119 = !DILocation(line: 534, column: 20, scope: !2371)
!7120 = !DILocation(line: 534, column: 5, scope: !2371)
!7121 = !DILocation(line: 534, column: 11, scope: !2371)
!7122 = !DILocation(line: 534, column: 18, scope: !2371)
!7123 = !DILocation(line: 535, column: 9, scope: !2389)
!7124 = !DILocation(line: 535, column: 15, scope: !2389)
!7125 = !DILocation(line: 535, column: 22, scope: !2389)
!7126 = !DILocation(line: 535, column: 9, scope: !2371)
!7127 = !DILocation(line: 536, column: 9, scope: !2388)
!7128 = !DILocation(line: 536, column: 14, scope: !7129)
!7129 = !DILexicalBlockFile(scope: !2387, file: !4, discriminator: 1)
!7130 = !DILocation(line: 536, column: 24, scope: !2387)
!7131 = !DILocation(line: 536, column: 54, scope: !2387)
!7132 = !DILocation(line: 536, column: 41, scope: !2387)
!7133 = !DILocation(line: 536, column: 69, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !2387, file: !4, line: 536, column: 66)
!7135 = !DILocation(line: 536, column: 86, scope: !7134)
!7136 = !DILocation(line: 536, column: 66, scope: !7134)
!7137 = !DILocation(line: 536, column: 96, scope: !7134)
!7138 = !DILocation(line: 536, column: 66, scope: !2387)
!7139 = !DILocation(line: 536, column: 66, scope: !7140)
!7140 = !DILexicalBlockFile(scope: !2387, file: !4, discriminator: 2)
!7141 = !DILocation(line: 536, column: 127, scope: !7142)
!7142 = !DILexicalBlockFile(scope: !7134, file: !4, discriminator: 3)
!7143 = !DILocation(line: 536, column: 145, scope: !7134)
!7144 = !DILocation(line: 536, column: 155, scope: !7134)
!7145 = !DILocation(line: 536, column: 180, scope: !7134)
!7146 = !DILocation(line: 536, column: 111, scope: !7134)
!7147 = !DILocation(line: 536, column: 199, scope: !7148)
!7148 = !DILexicalBlockFile(scope: !2388, file: !4, discriminator: 4)
!7149 = !DILocation(line: 536, column: 199, scope: !2387)
!7150 = !DILocation(line: 536, column: 199, scope: !7151)
!7151 = !DILexicalBlockFile(scope: !2387, file: !4, discriminator: 5)
!7152 = !DILocation(line: 537, column: 9, scope: !2388)
!7153 = !DILocation(line: 539, column: 12, scope: !2371)
!7154 = !DILocation(line: 539, column: 5, scope: !2371)
!7155 = !DILocation(line: 540, column: 1, scope: !2371)
!7156 = !DILocation(line: 2138, column: 23, scope: !2403)
!7157 = !DILocation(line: 2139, column: 40, scope: !2403)
!7158 = !DILocation(line: 2139, column: 60, scope: !2403)
!7159 = !DILocation(line: 2140, column: 24, scope: !2403)
!7160 = !DILocation(line: 2142, column: 5, scope: !2403)
!7161 = !DILocation(line: 2142, column: 19, scope: !2403)
!7162 = !DILocation(line: 2142, column: 46, scope: !2403)
!7163 = !DILocation(line: 2142, column: 29, scope: !2403)
!7164 = !DILocation(line: 2144, column: 9, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !2403, file: !4, line: 2144, column: 9)
!7166 = !DILocation(line: 2144, column: 18, scope: !7165)
!7167 = !DILocation(line: 2144, column: 32, scope: !7165)
!7168 = !DILocation(line: 2144, column: 9, scope: !2403)
!7169 = !DILocation(line: 2145, column: 10, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7165, file: !4, line: 2144, column: 47)
!7171 = !DILocation(line: 2145, column: 15, scope: !7170)
!7172 = !DILocation(line: 2146, column: 10, scope: !7170)
!7173 = !DILocation(line: 2146, column: 14, scope: !7170)
!7174 = !DILocation(line: 2147, column: 5, scope: !7170)
!7175 = !DILocation(line: 2148, column: 35, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7165, file: !4, line: 2147, column: 12)
!7177 = !DILocation(line: 2148, column: 44, scope: !7176)
!7178 = !DILocation(line: 2148, column: 10, scope: !7176)
!7179 = !DILocation(line: 2148, column: 15, scope: !7176)
!7180 = !DILocation(line: 2149, column: 16, scope: !7176)
!7181 = !DILocation(line: 2149, column: 25, scope: !7176)
!7182 = !DILocation(line: 2149, column: 10, scope: !7176)
!7183 = !DILocation(line: 2149, column: 14, scope: !7176)
!7184 = !DILocation(line: 2153, column: 1, scope: !2403)
!7185 = !DILocation(line: 2152, column: 5, scope: !2403)
!7186 = !DILocation(line: 2156, column: 20, scope: !2410)
!7187 = !DILocation(line: 2157, column: 31, scope: !2410)
!7188 = !DILocation(line: 2157, column: 51, scope: !2410)
!7189 = !DILocation(line: 2158, column: 36, scope: !2410)
!7190 = !DILocation(line: 2158, column: 57, scope: !2410)
!7191 = !DILocation(line: 2159, column: 21, scope: !2410)
!7192 = !DILocation(line: 2161, column: 5, scope: !2410)
!7193 = !DILocation(line: 2161, column: 19, scope: !2410)
!7194 = !DILocation(line: 2161, column: 46, scope: !2410)
!7195 = !DILocation(line: 2161, column: 29, scope: !2410)
!7196 = !DILocation(line: 2163, column: 5, scope: !2410)
!7197 = !DILocation(line: 2163, column: 20, scope: !2410)
!7198 = !DILocation(line: 2163, column: 47, scope: !2410)
!7199 = !DILocation(line: 2163, column: 56, scope: !2410)
!7200 = !DILocation(line: 2164, column: 5, scope: !2410)
!7201 = !DILocation(line: 2164, column: 9, scope: !2410)
!7202 = !DILocation(line: 2166, column: 9, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !2410, file: !4, line: 2166, column: 9)
!7204 = !DILocation(line: 2166, column: 16, scope: !7203)
!7205 = !DILocation(line: 2166, column: 9, scope: !2410)
!7206 = !DILocation(line: 2167, column: 16, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7203, file: !4, line: 2166, column: 31)
!7208 = !DILocation(line: 2168, column: 20, scope: !7207)
!7209 = !DILocation(line: 2169, column: 5, scope: !7207)
!7210 = !DILocation(line: 2170, column: 22, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7203, file: !4, line: 2169, column: 12)
!7212 = !DILocation(line: 2170, column: 31, scope: !7211)
!7213 = !DILocation(line: 2170, column: 20, scope: !7211)
!7214 = !DILocation(line: 2173, column: 27, scope: !2410)
!7215 = !DILocation(line: 2173, column: 32, scope: !2410)
!7216 = !DILocation(line: 2174, column: 27, scope: !2410)
!7217 = !DILocation(line: 2174, column: 35, scope: !2410)
!7218 = !DILocation(line: 2175, column: 27, scope: !2410)
!7219 = !DILocation(line: 2175, column: 35, scope: !2410)
!7220 = !DILocation(line: 2173, column: 5, scope: !2410)
!7221 = !DILocation(line: 2178, column: 1, scope: !2410)
!7222 = !DILocation(line: 2177, column: 5, scope: !2410)
!7223 = !DILocation(line: 2365, column: 33, scope: !2458)
!7224 = !DILocation(line: 2365, column: 52, scope: !2458)
!7225 = !DILocation(line: 2366, column: 25, scope: !2458)
!7226 = !DILocation(line: 2372, column: 5, scope: !2458)
!7227 = !DILocation(line: 2372, column: 15, scope: !2458)
!7228 = !DILocation(line: 2373, column: 5, scope: !2458)
!7229 = !DILocation(line: 2373, column: 17, scope: !2458)
!7230 = !DILocation(line: 2374, column: 5, scope: !2458)
!7231 = !DILocation(line: 2374, column: 16, scope: !2458)
!7232 = !DILocation(line: 2376, column: 26, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !2458, file: !4, line: 2376, column: 9)
!7234 = !DILocation(line: 2376, column: 38, scope: !7233)
!7235 = !DILocation(line: 2376, column: 49, scope: !7233)
!7236 = !{!4207, !4103, i64 168}
!7237 = !DILocation(line: 2376, column: 58, scope: !7233)
!7238 = !DILocation(line: 2376, column: 75, scope: !7233)
!7239 = !DILocation(line: 2376, column: 9, scope: !2458)
!7240 = !DILocation(line: 2377, column: 52, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7233, file: !4, line: 2376, column: 82)
!7242 = !DILocation(line: 2377, column: 26, scope: !7241)
!7243 = !DILocation(line: 2377, column: 24, scope: !7241)
!7244 = !DILocation(line: 2378, column: 14, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !4, line: 2378, column: 13)
!7246 = !DILocation(line: 2378, column: 13, scope: !7241)
!7247 = !DILocation(line: 2379, column: 13, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7245, file: !4, line: 2378, column: 30)
!7249 = !DILocation(line: 2381, column: 51, scope: !7241)
!7250 = !DILocation(line: 2381, column: 33, scope: !7241)
!7251 = !DILocation(line: 2381, column: 69, scope: !7241)
!7252 = !DILocation(line: 2381, column: 31, scope: !7241)
!7253 = !DILocation(line: 2381, column: 14, scope: !7241)
!7254 = !DILocation(line: 2382, column: 47, scope: !7241)
!7255 = !DILocation(line: 2382, column: 32, scope: !7241)
!7256 = !DILocation(line: 2382, column: 65, scope: !7241)
!7257 = !DILocation(line: 2382, column: 14, scope: !7241)
!7258 = !DILocation(line: 2383, column: 5, scope: !7241)
!7259 = !DILocation(line: 2383, column: 33, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7233, file: !4, line: 2383, column: 16)
!7261 = !DILocation(line: 2383, column: 45, scope: !7260)
!7262 = !DILocation(line: 2383, column: 56, scope: !7260)
!7263 = !DILocation(line: 2383, column: 65, scope: !7260)
!7264 = !DILocation(line: 2383, column: 82, scope: !7260)
!7265 = !DILocation(line: 2383, column: 16, scope: !7233)
!7266 = !DILocation(line: 2384, column: 51, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7260, file: !4, line: 2383, column: 89)
!7268 = !DILocation(line: 2384, column: 33, scope: !7267)
!7269 = !DILocation(line: 2384, column: 63, scope: !7267)
!7270 = !DILocation(line: 2384, column: 31, scope: !7267)
!7271 = !DILocation(line: 2384, column: 14, scope: !7267)
!7272 = !DILocation(line: 2385, column: 47, scope: !7267)
!7273 = !DILocation(line: 2385, column: 32, scope: !7267)
!7274 = !DILocation(line: 2385, column: 59, scope: !7267)
!7275 = !DILocation(line: 2385, column: 14, scope: !7267)
!7276 = !DILocation(line: 2386, column: 5, scope: !7267)
!7277 = !DILocation(line: 2386, column: 31, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7260, file: !4, line: 2386, column: 16)
!7279 = !DILocation(line: 2386, column: 43, scope: !7278)
!7280 = !DILocation(line: 2386, column: 52, scope: !7278)
!7281 = !DILocation(line: 2386, column: 75, scope: !7278)
!7282 = !DILocation(line: 2386, column: 109, scope: !7283)
!7283 = !DILexicalBlockFile(scope: !7278, file: !4, discriminator: 1)
!7284 = !DILocation(line: 2386, column: 121, scope: !7278)
!7285 = !DILocation(line: 2386, column: 78, scope: !7278)
!7286 = !DILocation(line: 2386, column: 16, scope: !7260)
!7287 = !DILocation(line: 2387, column: 48, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7278, file: !4, line: 2386, column: 154)
!7289 = !DILocation(line: 2387, column: 33, scope: !7288)
!7290 = !DILocation(line: 2387, column: 60, scope: !7288)
!7291 = !DILocation(line: 2387, column: 31, scope: !7288)
!7292 = !DILocation(line: 2387, column: 94, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7288, file: !4, discriminator: 1)
!7294 = !DILocation(line: 2387, column: 72, scope: !7288)
!7295 = !DILocation(line: 2387, column: 106, scope: !7288)
!7296 = !{!7297, !3861, i64 40}
!7297 = !{!"", !4208, i64 0, !4103, i64 24, !3861, i64 32, !3861, i64 40, !3893, i64 48}
!7298 = !DILocation(line: 2387, column: 31, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !7288, file: !4, discriminator: 2)
!7300 = !DILocation(line: 2387, column: 14, scope: !7301)
!7301 = !DILexicalBlockFile(scope: !7302, file: !4, discriminator: 4)
!7302 = !DILexicalBlockFile(scope: !7288, file: !4, discriminator: 3)
!7303 = !DILocation(line: 2388, column: 48, scope: !7288)
!7304 = !DILocation(line: 2388, column: 33, scope: !7288)
!7305 = !DILocation(line: 2388, column: 60, scope: !7288)
!7306 = !DILocation(line: 2388, column: 14, scope: !7288)
!7307 = !DILocation(line: 2389, column: 5, scope: !7288)
!7308 = !DILocation(line: 2390, column: 25, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7278, file: !4, line: 2389, column: 12)
!7310 = !DILocation(line: 2390, column: 42, scope: !7309)
!7311 = !DILocation(line: 2390, column: 9, scope: !7309)
!7312 = !DILocation(line: 2391, column: 9, scope: !7309)
!7313 = !DILocation(line: 2394, column: 9, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !2458, file: !4, line: 2394, column: 9)
!7315 = !DILocation(line: 2394, column: 14, scope: !7314)
!7316 = !DILocation(line: 2394, column: 9, scope: !2458)
!7317 = !DILocation(line: 2395, column: 22, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !4, line: 2394, column: 40)
!7319 = !DILocation(line: 2395, column: 9, scope: !7318)
!7320 = !DILocation(line: 2397, column: 9, scope: !7318)
!7321 = !DILocation(line: 2400, column: 16, scope: !2458)
!7322 = !DILocation(line: 2400, column: 25, scope: !2458)
!7323 = !DILocation(line: 2400, column: 5, scope: !2458)
!7324 = !DILocation(line: 2401, column: 38, scope: !2458)
!7325 = !DILocation(line: 2401, column: 25, scope: !2458)
!7326 = !DILocation(line: 2401, column: 5, scope: !2458)
!7327 = !DILocation(line: 2401, column: 14, scope: !2458)
!7328 = !DILocation(line: 2401, column: 23, scope: !2458)
!7329 = !DILocation(line: 2402, column: 10, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !2458, file: !4, line: 2402, column: 9)
!7331 = !DILocation(line: 2402, column: 19, scope: !7330)
!7332 = !DILocation(line: 2402, column: 9, scope: !2458)
!7333 = !DILocation(line: 2403, column: 25, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !4, line: 2402, column: 29)
!7335 = !DILocation(line: 2403, column: 9, scope: !7334)
!7336 = !DILocation(line: 2405, column: 9, scope: !7334)
!7337 = !DILocation(line: 2407, column: 12, scope: !2458)
!7338 = !DILocation(line: 2407, column: 21, scope: !2458)
!7339 = !DILocation(line: 2407, column: 31, scope: !2458)
!7340 = !DILocation(line: 2407, column: 37, scope: !2458)
!7341 = !DILocation(line: 2407, column: 5, scope: !2458)
!7342 = !DILocation(line: 2408, column: 26, scope: !2458)
!7343 = !DILocation(line: 2408, column: 21, scope: !2458)
!7344 = !DILocation(line: 2408, column: 5, scope: !2458)
!7345 = !DILocation(line: 2408, column: 14, scope: !2458)
!7346 = !DILocation(line: 2408, column: 19, scope: !2458)
!7347 = !{!5021, !3893, i64 24}
!7348 = !DILocation(line: 2410, column: 5, scope: !2458)
!7349 = !DILocation(line: 2410, column: 10, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !2469, file: !4, discriminator: 1)
!7351 = !DILocation(line: 2410, column: 20, scope: !2469)
!7352 = !DILocation(line: 2410, column: 51, scope: !2469)
!7353 = !DILocation(line: 2410, column: 72, scope: !2472)
!7354 = !DILocation(line: 2410, column: 88, scope: !2472)
!7355 = !DILocation(line: 2410, column: 72, scope: !2469)
!7356 = !DILocation(line: 2410, column: 103, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !2472, file: !4, discriminator: 2)
!7358 = !DILocation(line: 2410, column: 108, scope: !7359)
!7359 = !DILexicalBlockFile(scope: !2471, file: !4, discriminator: 4)
!7360 = !DILocation(line: 2410, column: 118, scope: !2471)
!7361 = !DILocation(line: 2410, column: 148, scope: !2471)
!7362 = !DILocation(line: 2410, column: 174, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !2471, file: !4, line: 2410, column: 171)
!7364 = !DILocation(line: 2410, column: 191, scope: !7363)
!7365 = !DILocation(line: 2410, column: 171, scope: !7363)
!7366 = !DILocation(line: 2410, column: 201, scope: !7363)
!7367 = !DILocation(line: 2410, column: 171, scope: !2471)
!7368 = !DILocation(line: 2410, column: 171, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !2471, file: !4, discriminator: 5)
!7370 = !DILocation(line: 2410, column: 232, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7363, file: !4, discriminator: 6)
!7372 = !DILocation(line: 2410, column: 250, scope: !7363)
!7373 = !DILocation(line: 2410, column: 260, scope: !7363)
!7374 = !DILocation(line: 2410, column: 285, scope: !7363)
!7375 = !DILocation(line: 2410, column: 216, scope: !7363)
!7376 = !DILocation(line: 2410, column: 304, scope: !7377)
!7377 = !DILexicalBlockFile(scope: !2472, file: !4, discriminator: 7)
!7378 = !DILocation(line: 2410, column: 304, scope: !2471)
!7379 = !DILocation(line: 2410, column: 304, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !2471, file: !4, discriminator: 8)
!7381 = !DILocation(line: 2410, column: 304, scope: !7382)
!7382 = !DILexicalBlockFile(scope: !2471, file: !4, discriminator: 9)
!7383 = !DILocation(line: 2410, column: 317, scope: !7384)
!7384 = !DILexicalBlockFile(scope: !7385, file: !4, discriminator: 10)
!7385 = !DILexicalBlockFile(scope: !2458, file: !4, discriminator: 3)
!7386 = !DILocation(line: 2410, column: 317, scope: !2469)
!7387 = !DILocation(line: 2410, column: 317, scope: !7388)
!7388 = !DILexicalBlockFile(scope: !2469, file: !4, discriminator: 11)
!7389 = !DILocation(line: 2411, column: 5, scope: !2458)
!7390 = !DILocation(line: 2414, column: 5, scope: !2458)
!7391 = !DILocation(line: 2414, column: 10, scope: !7392)
!7392 = !DILexicalBlockFile(scope: !2474, file: !4, discriminator: 1)
!7393 = !DILocation(line: 2414, column: 20, scope: !2474)
!7394 = !DILocation(line: 2414, column: 51, scope: !2474)
!7395 = !DILocation(line: 2414, column: 72, scope: !2477)
!7396 = !DILocation(line: 2414, column: 88, scope: !2477)
!7397 = !DILocation(line: 2414, column: 72, scope: !2474)
!7398 = !DILocation(line: 2414, column: 103, scope: !7399)
!7399 = !DILexicalBlockFile(scope: !2477, file: !4, discriminator: 2)
!7400 = !DILocation(line: 2414, column: 108, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !2476, file: !4, discriminator: 4)
!7402 = !DILocation(line: 2414, column: 118, scope: !2476)
!7403 = !DILocation(line: 2414, column: 148, scope: !2476)
!7404 = !DILocation(line: 2414, column: 174, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !2476, file: !4, line: 2414, column: 171)
!7406 = !DILocation(line: 2414, column: 191, scope: !7405)
!7407 = !DILocation(line: 2414, column: 171, scope: !7405)
!7408 = !DILocation(line: 2414, column: 201, scope: !7405)
!7409 = !DILocation(line: 2414, column: 171, scope: !2476)
!7410 = !DILocation(line: 2414, column: 171, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !2476, file: !4, discriminator: 5)
!7412 = !DILocation(line: 2414, column: 232, scope: !7413)
!7413 = !DILexicalBlockFile(scope: !7405, file: !4, discriminator: 6)
!7414 = !DILocation(line: 2414, column: 250, scope: !7405)
!7415 = !DILocation(line: 2414, column: 260, scope: !7405)
!7416 = !DILocation(line: 2414, column: 285, scope: !7405)
!7417 = !DILocation(line: 2414, column: 216, scope: !7405)
!7418 = !DILocation(line: 2414, column: 304, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !2477, file: !4, discriminator: 7)
!7420 = !DILocation(line: 2414, column: 304, scope: !2476)
!7421 = !DILocation(line: 2414, column: 304, scope: !7422)
!7422 = !DILexicalBlockFile(scope: !2476, file: !4, discriminator: 8)
!7423 = !DILocation(line: 2414, column: 304, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !2476, file: !4, discriminator: 9)
!7425 = !DILocation(line: 2414, column: 317, scope: !7384)
!7426 = !DILocation(line: 2414, column: 317, scope: !2474)
!7427 = !DILocation(line: 2414, column: 317, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !2474, file: !4, discriminator: 11)
!7429 = !DILocation(line: 2415, column: 5, scope: !2458)
!7430 = !DILocation(line: 2416, column: 1, scope: !2458)
!7431 = !DILocation(line: 2419, column: 26, scope: !2478)
!7432 = !DILocation(line: 2419, column: 35, scope: !2478)
!7433 = !DILocation(line: 2419, column: 45, scope: !2478)
!7434 = !DILocation(line: 2419, column: 59, scope: !2478)
!7435 = !DILocation(line: 2421, column: 5, scope: !2478)
!7436 = !DILocation(line: 2421, column: 25, scope: !2478)
!7437 = !DILocation(line: 2421, column: 57, scope: !2478)
!7438 = !DILocation(line: 2421, column: 35, scope: !2478)
!7439 = !DILocation(line: 2422, column: 5, scope: !2478)
!7440 = !DILocation(line: 2422, column: 15, scope: !2478)
!7441 = !DILocation(line: 2424, column: 5, scope: !2478)
!7442 = !DILocation(line: 2424, column: 14, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7444, file: !4, discriminator: 1)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !4, line: 2424, column: 14)
!7445 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 2424, column: 8)
!7446 = !DILocation(line: 2424, column: 30, scope: !7444)
!7447 = !DILocation(line: 2424, column: 14, scope: !7445)
!7448 = !DILocation(line: 2424, column: 57, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !7450, file: !4, discriminator: 2)
!7450 = distinct !DILexicalBlock(scope: !7444, file: !4, line: 2424, column: 34)
!7451 = !DILocation(line: 2424, column: 66, scope: !7450)
!7452 = !DILocation(line: 2424, column: 36, scope: !7450)
!7453 = !DILocation(line: 2424, column: 81, scope: !7450)
!7454 = !DILocation(line: 2424, column: 83, scope: !7455)
!7455 = !DILexicalBlockFile(scope: !7456, file: !4, discriminator: 4)
!7456 = !DILexicalBlockFile(scope: !7445, file: !4, discriminator: 3)
!7457 = !DILocation(line: 2424, column: 83, scope: !7458)
!7458 = !DILexicalBlockFile(scope: !7445, file: !4, discriminator: 5)
!7459 = !DILocation(line: 2426, column: 9, scope: !2489)
!7460 = !DILocation(line: 2426, column: 18, scope: !2489)
!7461 = !DILocation(line: 2426, column: 9, scope: !2478)
!7462 = !DILocation(line: 2427, column: 47, scope: !2488)
!7463 = !DILocation(line: 2427, column: 56, scope: !2488)
!7464 = !DILocation(line: 2427, column: 18, scope: !2488)
!7465 = !DILocation(line: 2427, column: 16, scope: !2488)
!7466 = !DILocation(line: 2428, column: 14, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !2488, file: !4, line: 2428, column: 13)
!7468 = !DILocation(line: 2428, column: 13, scope: !2488)
!7469 = !DILocation(line: 2431, column: 13, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7467, file: !4, line: 2428, column: 22)
!7471 = !DILocation(line: 2434, column: 26, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !2488, file: !4, line: 2434, column: 13)
!7473 = !DILocation(line: 2434, column: 35, scope: !7472)
!7474 = !DILocation(line: 2434, column: 14, scope: !7472)
!7475 = !DILocation(line: 2434, column: 13, scope: !2488)
!7476 = !DILocation(line: 2436, column: 13, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7472, file: !4, line: 2435, column: 69)
!7478 = !DILocation(line: 2438, column: 9, scope: !2488)
!7479 = !DILocation(line: 2438, column: 14, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !2487, file: !4, discriminator: 1)
!7481 = !DILocation(line: 2438, column: 24, scope: !2487)
!7482 = !DILocation(line: 2438, column: 47, scope: !2487)
!7483 = !DILocation(line: 2438, column: 60, scope: !2493)
!7484 = !DILocation(line: 2438, column: 68, scope: !2493)
!7485 = !DILocation(line: 2438, column: 60, scope: !2487)
!7486 = !DILocation(line: 2438, column: 94, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !2492, file: !4, discriminator: 2)
!7488 = !DILocation(line: 2438, column: 108, scope: !2492)
!7489 = !DILocation(line: 2438, column: 113, scope: !7490)
!7490 = !DILexicalBlockFile(scope: !2491, file: !4, discriminator: 4)
!7491 = !DILocation(line: 2438, column: 123, scope: !2491)
!7492 = !DILocation(line: 2438, column: 153, scope: !2491)
!7493 = !DILocation(line: 2438, column: 171, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !2491, file: !4, line: 2438, column: 168)
!7495 = !DILocation(line: 2438, column: 188, scope: !7494)
!7496 = !DILocation(line: 2438, column: 168, scope: !7494)
!7497 = !DILocation(line: 2438, column: 198, scope: !7494)
!7498 = !DILocation(line: 2438, column: 168, scope: !2491)
!7499 = !DILocation(line: 2438, column: 168, scope: !7500)
!7500 = !DILexicalBlockFile(scope: !2491, file: !4, discriminator: 5)
!7501 = !DILocation(line: 2438, column: 229, scope: !7502)
!7502 = !DILexicalBlockFile(scope: !7494, file: !4, discriminator: 6)
!7503 = !DILocation(line: 2438, column: 247, scope: !7494)
!7504 = !DILocation(line: 2438, column: 257, scope: !7494)
!7505 = !DILocation(line: 2438, column: 282, scope: !7494)
!7506 = !DILocation(line: 2438, column: 213, scope: !7494)
!7507 = !DILocation(line: 2438, column: 301, scope: !7508)
!7508 = !DILexicalBlockFile(scope: !2492, file: !4, discriminator: 7)
!7509 = !DILocation(line: 2438, column: 301, scope: !2491)
!7510 = !DILocation(line: 2438, column: 301, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !2491, file: !4, discriminator: 8)
!7512 = !DILocation(line: 2438, column: 314, scope: !7513)
!7513 = !DILexicalBlockFile(scope: !2492, file: !4, discriminator: 9)
!7514 = !DILocation(line: 2438, column: 316, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !7516, file: !4, discriminator: 10)
!7516 = !DILexicalBlockFile(scope: !2488, file: !4, discriminator: 3)
!7517 = !DILocation(line: 2438, column: 316, scope: !2487)
!7518 = !DILocation(line: 2438, column: 316, scope: !7519)
!7519 = !DILexicalBlockFile(scope: !2487, file: !4, discriminator: 11)
!7520 = !DILocation(line: 2439, column: 5, scope: !2488)
!7521 = !DILocation(line: 2441, column: 9, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 2441, column: 9)
!7523 = !DILocation(line: 2441, column: 18, scope: !7522)
!7524 = !DILocation(line: 2441, column: 25, scope: !7522)
!7525 = !DILocation(line: 2441, column: 23, scope: !7522)
!7526 = !DILocation(line: 2441, column: 9, scope: !2478)
!7527 = !DILocation(line: 2442, column: 22, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7522, file: !4, line: 2441, column: 31)
!7529 = !DILocation(line: 2443, column: 65, scope: !7528)
!7530 = !DILocation(line: 2442, column: 9, scope: !7528)
!7531 = !DILocation(line: 2444, column: 9, scope: !7528)
!7532 = !DILocation(line: 2447, column: 5, scope: !2478)
!7533 = !DILocation(line: 2447, column: 14, scope: !7534)
!7534 = !DILexicalBlockFile(scope: !7535, file: !4, discriminator: 1)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !4, line: 2447, column: 14)
!7536 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 2447, column: 8)
!7537 = !DILocation(line: 2447, column: 30, scope: !7535)
!7538 = !DILocation(line: 2447, column: 14, scope: !7536)
!7539 = !DILocation(line: 2447, column: 62, scope: !7540)
!7540 = !DILexicalBlockFile(scope: !7541, file: !4, discriminator: 2)
!7541 = distinct !DILexicalBlock(scope: !7535, file: !4, line: 2447, column: 34)
!7542 = !DILocation(line: 2447, column: 37, scope: !7541)
!7543 = !DILocation(line: 2447, column: 46, scope: !7541)
!7544 = !DILocation(line: 2447, column: 60, scope: !7541)
!7545 = !DILocation(line: 2447, column: 83, scope: !7541)
!7546 = !DILocation(line: 2447, column: 85, scope: !7547)
!7547 = !DILexicalBlockFile(scope: !7548, file: !4, discriminator: 4)
!7548 = !DILexicalBlockFile(scope: !7536, file: !4, discriminator: 3)
!7549 = !DILocation(line: 2447, column: 85, scope: !7550)
!7550 = !DILexicalBlockFile(scope: !7536, file: !4, discriminator: 5)
!7551 = !DILocation(line: 2448, column: 12, scope: !2478)
!7552 = !DILocation(line: 2448, column: 17, scope: !2478)
!7553 = !DILocation(line: 2448, column: 26, scope: !2478)
!7554 = !DILocation(line: 2448, column: 36, scope: !2478)
!7555 = !DILocation(line: 2448, column: 45, scope: !2478)
!7556 = !DILocation(line: 2448, column: 5, scope: !2478)
!7557 = !DILocation(line: 2449, column: 12, scope: !2478)
!7558 = !DILocation(line: 2449, column: 21, scope: !2478)
!7559 = !DILocation(line: 2449, column: 5, scope: !2478)
!7560 = !DILocation(line: 2452, column: 5, scope: !2478)
!7561 = !DILocation(line: 2452, column: 10, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !2495, file: !4, discriminator: 1)
!7563 = !DILocation(line: 2452, column: 20, scope: !2495)
!7564 = !DILocation(line: 2452, column: 51, scope: !2495)
!7565 = !DILocation(line: 2452, column: 64, scope: !2498)
!7566 = !DILocation(line: 2452, column: 80, scope: !2498)
!7567 = !DILocation(line: 2452, column: 64, scope: !2495)
!7568 = !DILocation(line: 2452, column: 95, scope: !7569)
!7569 = !DILexicalBlockFile(scope: !2498, file: !4, discriminator: 2)
!7570 = !DILocation(line: 2452, column: 100, scope: !7571)
!7571 = !DILexicalBlockFile(scope: !2497, file: !4, discriminator: 4)
!7572 = !DILocation(line: 2452, column: 110, scope: !2497)
!7573 = !DILocation(line: 2452, column: 140, scope: !2497)
!7574 = !DILocation(line: 2452, column: 166, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !2497, file: !4, line: 2452, column: 163)
!7576 = !DILocation(line: 2452, column: 183, scope: !7575)
!7577 = !DILocation(line: 2452, column: 163, scope: !7575)
!7578 = !DILocation(line: 2452, column: 193, scope: !7575)
!7579 = !DILocation(line: 2452, column: 163, scope: !2497)
!7580 = !DILocation(line: 2452, column: 163, scope: !7581)
!7581 = !DILexicalBlockFile(scope: !2497, file: !4, discriminator: 5)
!7582 = !DILocation(line: 2452, column: 224, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7575, file: !4, discriminator: 6)
!7584 = !DILocation(line: 2452, column: 242, scope: !7575)
!7585 = !DILocation(line: 2452, column: 252, scope: !7575)
!7586 = !DILocation(line: 2452, column: 277, scope: !7575)
!7587 = !DILocation(line: 2452, column: 208, scope: !7575)
!7588 = !DILocation(line: 2452, column: 296, scope: !7589)
!7589 = !DILexicalBlockFile(scope: !2498, file: !4, discriminator: 7)
!7590 = !DILocation(line: 2452, column: 296, scope: !2497)
!7591 = !DILocation(line: 2452, column: 296, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !2497, file: !4, discriminator: 8)
!7593 = !DILocation(line: 2452, column: 296, scope: !7594)
!7594 = !DILexicalBlockFile(scope: !2497, file: !4, discriminator: 9)
!7595 = !DILocation(line: 2452, column: 309, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7597, file: !4, discriminator: 10)
!7597 = !DILexicalBlockFile(scope: !2478, file: !4, discriminator: 3)
!7598 = !DILocation(line: 2452, column: 309, scope: !2495)
!7599 = !DILocation(line: 2452, column: 309, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !2495, file: !4, discriminator: 11)
!7601 = !DILocation(line: 2453, column: 5, scope: !2478)
!7602 = !DILocation(line: 2453, column: 14, scope: !7603)
!7603 = !DILexicalBlockFile(scope: !7604, file: !4, discriminator: 1)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !4, line: 2453, column: 14)
!7605 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 2453, column: 8)
!7606 = !DILocation(line: 2453, column: 30, scope: !7604)
!7607 = !DILocation(line: 2453, column: 14, scope: !7605)
!7608 = !DILocation(line: 2453, column: 62, scope: !7609)
!7609 = !DILexicalBlockFile(scope: !7610, file: !4, discriminator: 2)
!7610 = distinct !DILexicalBlock(scope: !7604, file: !4, line: 2453, column: 34)
!7611 = !DILocation(line: 2453, column: 37, scope: !7610)
!7612 = !DILocation(line: 2453, column: 46, scope: !7610)
!7613 = !DILocation(line: 2453, column: 60, scope: !7610)
!7614 = !DILocation(line: 2453, column: 83, scope: !7610)
!7615 = !DILocation(line: 2453, column: 85, scope: !7616)
!7616 = !DILexicalBlockFile(scope: !7617, file: !4, discriminator: 4)
!7617 = !DILexicalBlockFile(scope: !7605, file: !4, discriminator: 3)
!7618 = !DILocation(line: 2453, column: 85, scope: !7619)
!7619 = !DILexicalBlockFile(scope: !7605, file: !4, discriminator: 5)
!7620 = !DILocation(line: 2454, column: 5, scope: !2478)
!7621 = !DILocation(line: 2454, column: 14, scope: !2478)
!7622 = !DILocation(line: 2454, column: 20, scope: !2478)
!7623 = !DILocation(line: 2455, column: 5, scope: !2478)
!7624 = !DILocation(line: 2456, column: 1, scope: !2478)
!7625 = !DILocation(line: 462, column: 21, scope: !2499)
!7626 = !DILocation(line: 462, column: 33, scope: !2499)
!7627 = !DILocation(line: 462, column: 48, scope: !2499)
!7628 = !DILocation(line: 462, column: 62, scope: !2499)
!7629 = !DILocation(line: 464, column: 9, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !2499, file: !4, line: 464, column: 9)
!7631 = !DILocation(line: 464, column: 16, scope: !7630)
!7632 = !DILocation(line: 464, column: 9, scope: !2499)
!7633 = !DILocation(line: 465, column: 19, scope: !7630)
!7634 = !DILocation(line: 465, column: 17, scope: !7630)
!7635 = !DILocation(line: 465, column: 9, scope: !7630)
!7636 = !DILocation(line: 467, column: 17, scope: !7630)
!7637 = !DILocation(line: 468, column: 27, scope: !2499)
!7638 = !DILocation(line: 468, column: 45, scope: !2499)
!7639 = !DILocation(line: 468, column: 54, scope: !2499)
!7640 = !DILocation(line: 468, column: 62, scope: !2499)
!7641 = !DILocation(line: 468, column: 70, scope: !2499)
!7642 = !DILocation(line: 468, column: 5, scope: !2499)
!7643 = !DILocation(line: 469, column: 5, scope: !2499)
!7644 = !DILocation(line: 470, column: 5, scope: !2499)
!7645 = !DILocation(line: 309, column: 33, scope: !2507)
!7646 = !DILocation(line: 309, column: 43, scope: !2507)
!7647 = !DILocation(line: 309, column: 66, scope: !2507)
!7648 = !DILocation(line: 310, column: 27, scope: !2507)
!7649 = !DILocation(line: 310, column: 49, scope: !2507)
!7650 = !DILocation(line: 312, column: 5, scope: !2507)
!7651 = !DILocation(line: 312, column: 15, scope: !2507)
!7652 = !DILocation(line: 312, column: 40, scope: !2507)
!7653 = !DILocation(line: 312, column: 66, scope: !2507)
!7654 = !DILocation(line: 313, column: 5, scope: !2507)
!7655 = !DILocation(line: 313, column: 15, scope: !2507)
!7656 = !DILocation(line: 313, column: 28, scope: !2507)
!7657 = !DILocation(line: 313, column: 34, scope: !2507)
!7658 = !DILocation(line: 317, column: 9, scope: !2524)
!7659 = !DILocation(line: 317, column: 17, scope: !2524)
!7660 = !DILocation(line: 317, column: 9, scope: !2507)
!7661 = !DILocation(line: 318, column: 9, scope: !2523)
!7662 = !DILocation(line: 318, column: 13, scope: !2523)
!7663 = !DILocation(line: 318, column: 18, scope: !2523)
!7664 = !DILocation(line: 320, column: 38, scope: !2523)
!7665 = !DILocation(line: 320, column: 46, scope: !2523)
!7666 = !DILocation(line: 320, column: 52, scope: !2523)
!7667 = !DILocation(line: 320, column: 15, scope: !2523)
!7668 = !DILocation(line: 320, column: 13, scope: !2523)
!7669 = !DILocation(line: 321, column: 25, scope: !2523)
!7670 = !DILocation(line: 321, column: 33, scope: !2523)
!7671 = !DILocation(line: 321, column: 18, scope: !2523)
!7672 = !DILocation(line: 321, column: 16, scope: !2523)
!7673 = !DILocation(line: 322, column: 35, scope: !2523)
!7674 = !DILocation(line: 322, column: 40, scope: !2523)
!7675 = !DILocation(line: 322, column: 15, scope: !2523)
!7676 = !DILocation(line: 322, column: 13, scope: !2523)
!7677 = !DILocation(line: 323, column: 13, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 323, column: 13)
!7679 = !DILocation(line: 323, column: 17, scope: !7678)
!7680 = !DILocation(line: 323, column: 13, scope: !2523)
!7681 = !DILocation(line: 324, column: 13, scope: !7678)
!7682 = !DILocation(line: 325, column: 37, scope: !2523)
!7683 = !DILocation(line: 325, column: 57, scope: !2523)
!7684 = !DILocation(line: 325, column: 22, scope: !2523)
!7685 = !DILocation(line: 325, column: 20, scope: !2523)
!7686 = !DILocation(line: 326, column: 9, scope: !2523)
!7687 = !DILocation(line: 326, column: 14, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !2527, file: !4, discriminator: 1)
!7689 = !DILocation(line: 326, column: 24, scope: !2527)
!7690 = !DILocation(line: 326, column: 54, scope: !2527)
!7691 = !DILocation(line: 326, column: 68, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !2527, file: !4, line: 326, column: 65)
!7693 = !DILocation(line: 326, column: 85, scope: !7692)
!7694 = !DILocation(line: 326, column: 65, scope: !7692)
!7695 = !DILocation(line: 326, column: 95, scope: !7692)
!7696 = !DILocation(line: 326, column: 65, scope: !2527)
!7697 = !DILocation(line: 326, column: 65, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !2527, file: !4, discriminator: 2)
!7699 = !DILocation(line: 326, column: 126, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !7692, file: !4, discriminator: 3)
!7701 = !DILocation(line: 326, column: 144, scope: !7692)
!7702 = !DILocation(line: 326, column: 154, scope: !7692)
!7703 = !DILocation(line: 326, column: 179, scope: !7692)
!7704 = !DILocation(line: 326, column: 110, scope: !7692)
!7705 = !DILocation(line: 326, column: 198, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !2523, file: !4, discriminator: 4)
!7707 = !DILocation(line: 326, column: 198, scope: !2527)
!7708 = !DILocation(line: 326, column: 198, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !2527, file: !4, discriminator: 5)
!7710 = !DILocation(line: 327, column: 13, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 327, column: 13)
!7712 = !DILocation(line: 327, column: 24, scope: !7711)
!7713 = !DILocation(line: 327, column: 13, scope: !2523)
!7714 = !DILocation(line: 329, column: 13, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7711, file: !4, line: 327, column: 39)
!7716 = !DILocation(line: 330, column: 9, scope: !7715)
!7717 = !DILocation(line: 331, column: 31, scope: !2523)
!7718 = !DILocation(line: 331, column: 15, scope: !2523)
!7719 = !DILocation(line: 331, column: 13, scope: !2523)
!7720 = !DILocation(line: 332, column: 13, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 332, column: 13)
!7722 = !DILocation(line: 332, column: 17, scope: !7721)
!7723 = !DILocation(line: 332, column: 13, scope: !2523)
!7724 = !DILocation(line: 333, column: 13, scope: !7721)
!7725 = !DILocation(line: 334, column: 34, scope: !2523)
!7726 = !DILocation(line: 334, column: 54, scope: !2523)
!7727 = !DILocation(line: 334, column: 19, scope: !2523)
!7728 = !DILocation(line: 334, column: 17, scope: !2523)
!7729 = !DILocation(line: 335, column: 9, scope: !2523)
!7730 = !DILocation(line: 335, column: 14, scope: !7731)
!7731 = !DILexicalBlockFile(scope: !2529, file: !4, discriminator: 1)
!7732 = !DILocation(line: 335, column: 24, scope: !2529)
!7733 = !DILocation(line: 335, column: 54, scope: !2529)
!7734 = !DILocation(line: 335, column: 68, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !2529, file: !4, line: 335, column: 65)
!7736 = !DILocation(line: 335, column: 85, scope: !7735)
!7737 = !DILocation(line: 335, column: 65, scope: !7735)
!7738 = !DILocation(line: 335, column: 95, scope: !7735)
!7739 = !DILocation(line: 335, column: 65, scope: !2529)
!7740 = !DILocation(line: 335, column: 65, scope: !7741)
!7741 = !DILexicalBlockFile(scope: !2529, file: !4, discriminator: 2)
!7742 = !DILocation(line: 335, column: 126, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7735, file: !4, discriminator: 3)
!7744 = !DILocation(line: 335, column: 144, scope: !7735)
!7745 = !DILocation(line: 335, column: 154, scope: !7735)
!7746 = !DILocation(line: 335, column: 179, scope: !7735)
!7747 = !DILocation(line: 335, column: 110, scope: !7735)
!7748 = !DILocation(line: 335, column: 198, scope: !7706)
!7749 = !DILocation(line: 335, column: 198, scope: !2529)
!7750 = !DILocation(line: 335, column: 198, scope: !7751)
!7751 = !DILexicalBlockFile(scope: !2529, file: !4, discriminator: 5)
!7752 = !DILocation(line: 336, column: 13, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 336, column: 13)
!7754 = !DILocation(line: 336, column: 21, scope: !7753)
!7755 = !DILocation(line: 336, column: 13, scope: !2523)
!7756 = !DILocation(line: 337, column: 13, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7753, file: !4, line: 336, column: 36)
!7758 = !DILocation(line: 338, column: 9, scope: !7757)
!7759 = !DILocation(line: 339, column: 13, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !2523, file: !4, line: 339, column: 13)
!7761 = !DILocation(line: 339, column: 20, scope: !7760)
!7762 = !DILocation(line: 339, column: 13, scope: !2523)
!7763 = !DILocation(line: 340, column: 46, scope: !7760)
!7764 = !DILocation(line: 340, column: 22, scope: !7760)
!7765 = !DILocation(line: 340, column: 20, scope: !7760)
!7766 = !DILocation(line: 340, column: 13, scope: !7760)
!7767 = !DILocation(line: 341, column: 5, scope: !2524)
!7768 = !DILocation(line: 341, column: 5, scope: !7769)
!7769 = !DILexicalBlockFile(scope: !2524, file: !4, discriminator: 1)
!7770 = !DILocation(line: 341, column: 5, scope: !2523)
!7771 = !DILocation(line: 342, column: 9, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 342, column: 9)
!7773 = !DILocation(line: 342, column: 16, scope: !7772)
!7774 = !DILocation(line: 342, column: 9, scope: !2507)
!7775 = !DILocation(line: 343, column: 16, scope: !7772)
!7776 = !DILocation(line: 343, column: 9, scope: !7772)
!7777 = !DILocation(line: 345, column: 9, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 345, column: 9)
!7779 = !DILocation(line: 345, column: 20, scope: !7778)
!7780 = !DILocation(line: 345, column: 23, scope: !7781)
!7781 = !DILexicalBlockFile(scope: !7778, file: !4, discriminator: 1)
!7782 = !DILocation(line: 345, column: 9, scope: !2507)
!7783 = !DILocation(line: 347, column: 36, scope: !7778)
!7784 = !DILocation(line: 347, column: 45, scope: !7778)
!7785 = !DILocation(line: 347, column: 57, scope: !7778)
!7786 = !DILocation(line: 347, column: 65, scope: !7778)
!7787 = !DILocation(line: 346, column: 15, scope: !7778)
!7788 = !DILocation(line: 346, column: 13, scope: !7778)
!7789 = !DILocation(line: 346, column: 9, scope: !7778)
!7790 = !DILocation(line: 348, column: 14, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7778, file: !4, line: 348, column: 14)
!7792 = !DILocation(line: 348, column: 14, scope: !7778)
!7793 = !DILocation(line: 350, column: 36, scope: !7791)
!7794 = !DILocation(line: 350, column: 45, scope: !7791)
!7795 = !DILocation(line: 350, column: 53, scope: !7791)
!7796 = !DILocation(line: 349, column: 15, scope: !7791)
!7797 = !DILocation(line: 349, column: 13, scope: !7791)
!7798 = !DILocation(line: 349, column: 9, scope: !7791)
!7799 = !DILocation(line: 352, column: 54, scope: !7791)
!7800 = !DILocation(line: 352, column: 62, scope: !7791)
!7801 = !DILocation(line: 352, column: 15, scope: !7791)
!7802 = !DILocation(line: 352, column: 13, scope: !7791)
!7803 = !DILocation(line: 353, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 353, column: 9)
!7805 = !DILocation(line: 353, column: 13, scope: !7804)
!7806 = !DILocation(line: 353, column: 9, scope: !2507)
!7807 = !DILocation(line: 354, column: 9, scope: !7804)
!7808 = !DILocation(line: 356, column: 38, scope: !2507)
!7809 = !DILocation(line: 356, column: 49, scope: !2507)
!7810 = !DILocation(line: 356, column: 18, scope: !2507)
!7811 = !DILocation(line: 356, column: 16, scope: !2507)
!7812 = !DILocation(line: 357, column: 9, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 357, column: 9)
!7814 = !DILocation(line: 357, column: 20, scope: !7813)
!7815 = !DILocation(line: 357, column: 9, scope: !2507)
!7816 = !DILocation(line: 358, column: 9, scope: !7813)
!7817 = !DILocation(line: 360, column: 37, scope: !2507)
!7818 = !DILocation(line: 360, column: 43, scope: !2507)
!7819 = !DILocation(line: 360, column: 17, scope: !2507)
!7820 = !DILocation(line: 360, column: 15, scope: !2507)
!7821 = !DILocation(line: 361, column: 5, scope: !2507)
!7822 = !DILocation(line: 361, column: 10, scope: !7823)
!7823 = !DILexicalBlockFile(scope: !2531, file: !4, discriminator: 1)
!7824 = !DILocation(line: 361, column: 20, scope: !2531)
!7825 = !DILocation(line: 361, column: 50, scope: !2531)
!7826 = !DILocation(line: 361, column: 71, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !2531, file: !4, line: 361, column: 68)
!7828 = !DILocation(line: 361, column: 88, scope: !7827)
!7829 = !DILocation(line: 361, column: 68, scope: !7827)
!7830 = !DILocation(line: 361, column: 98, scope: !7827)
!7831 = !DILocation(line: 361, column: 68, scope: !2531)
!7832 = !DILocation(line: 361, column: 68, scope: !7833)
!7833 = !DILexicalBlockFile(scope: !2531, file: !4, discriminator: 2)
!7834 = !DILocation(line: 361, column: 129, scope: !7835)
!7835 = !DILexicalBlockFile(scope: !7827, file: !4, discriminator: 3)
!7836 = !DILocation(line: 361, column: 147, scope: !7827)
!7837 = !DILocation(line: 361, column: 157, scope: !7827)
!7838 = !DILocation(line: 361, column: 182, scope: !7827)
!7839 = !DILocation(line: 361, column: 113, scope: !7827)
!7840 = !DILocation(line: 361, column: 201, scope: !7841)
!7841 = !DILexicalBlockFile(scope: !2507, file: !4, discriminator: 4)
!7842 = !DILocation(line: 361, column: 201, scope: !2531)
!7843 = !DILocation(line: 361, column: 201, scope: !7844)
!7844 = !DILexicalBlockFile(scope: !2531, file: !4, discriminator: 5)
!7845 = !DILocation(line: 362, column: 9, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 362, column: 9)
!7847 = !DILocation(line: 362, column: 19, scope: !7846)
!7848 = !DILocation(line: 362, column: 9, scope: !2507)
!7849 = !DILocation(line: 363, column: 9, scope: !7846)
!7850 = !DILocation(line: 365, column: 9, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 365, column: 9)
!7852 = !DILocation(line: 365, column: 20, scope: !7851)
!7853 = !DILocation(line: 365, column: 9, scope: !2507)
!7854 = !DILocation(line: 366, column: 20, scope: !7851)
!7855 = !DILocation(line: 366, column: 9, scope: !7851)
!7856 = !DILocation(line: 367, column: 29, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 367, column: 9)
!7858 = !DILocation(line: 367, column: 54, scope: !7857)
!7859 = !DILocation(line: 367, column: 9, scope: !7857)
!7860 = !DILocation(line: 367, column: 9, scope: !2507)
!7861 = !DILocation(line: 368, column: 9, scope: !7857)
!7862 = !DILocation(line: 369, column: 9, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 369, column: 9)
!7864 = !DILocation(line: 369, column: 17, scope: !7863)
!7865 = !DILocation(line: 369, column: 9, scope: !2507)
!7866 = !DILocation(line: 370, column: 17, scope: !7863)
!7867 = !DILocation(line: 370, column: 9, scope: !7863)
!7868 = !DILocation(line: 371, column: 29, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !2507, file: !4, line: 371, column: 9)
!7870 = !DILocation(line: 371, column: 55, scope: !7869)
!7871 = !DILocation(line: 371, column: 9, scope: !7869)
!7872 = !DILocation(line: 371, column: 9, scope: !2507)
!7873 = !DILocation(line: 372, column: 9, scope: !7869)
!7874 = !DILocation(line: 373, column: 21, scope: !2507)
!7875 = !DILocation(line: 373, column: 27, scope: !2507)
!7876 = !DILocation(line: 373, column: 5, scope: !2507)
!7877 = !DILocation(line: 375, column: 5, scope: !2507)
!7878 = !DILocation(line: 375, column: 10, scope: !7879)
!7879 = !DILexicalBlockFile(scope: !2533, file: !4, discriminator: 1)
!7880 = !DILocation(line: 375, column: 20, scope: !2533)
!7881 = !DILocation(line: 375, column: 51, scope: !2533)
!7882 = !DILocation(line: 375, column: 67, scope: !2536)
!7883 = !DILocation(line: 375, column: 83, scope: !2536)
!7884 = !DILocation(line: 375, column: 67, scope: !2533)
!7885 = !DILocation(line: 375, column: 98, scope: !7886)
!7886 = !DILexicalBlockFile(scope: !2536, file: !4, discriminator: 2)
!7887 = !DILocation(line: 375, column: 103, scope: !7888)
!7888 = !DILexicalBlockFile(scope: !2535, file: !4, discriminator: 4)
!7889 = !DILocation(line: 375, column: 113, scope: !2535)
!7890 = !DILocation(line: 375, column: 143, scope: !2535)
!7891 = !DILocation(line: 375, column: 169, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !2535, file: !4, line: 375, column: 166)
!7893 = !DILocation(line: 375, column: 186, scope: !7892)
!7894 = !DILocation(line: 375, column: 166, scope: !7892)
!7895 = !DILocation(line: 375, column: 196, scope: !7892)
!7896 = !DILocation(line: 375, column: 166, scope: !2535)
!7897 = !DILocation(line: 375, column: 166, scope: !7898)
!7898 = !DILexicalBlockFile(scope: !2535, file: !4, discriminator: 5)
!7899 = !DILocation(line: 375, column: 227, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !7892, file: !4, discriminator: 6)
!7901 = !DILocation(line: 375, column: 245, scope: !7892)
!7902 = !DILocation(line: 375, column: 255, scope: !7892)
!7903 = !DILocation(line: 375, column: 280, scope: !7892)
!7904 = !DILocation(line: 375, column: 211, scope: !7892)
!7905 = !DILocation(line: 375, column: 299, scope: !7906)
!7906 = !DILexicalBlockFile(scope: !2536, file: !4, discriminator: 7)
!7907 = !DILocation(line: 375, column: 299, scope: !2535)
!7908 = !DILocation(line: 375, column: 299, scope: !7909)
!7909 = !DILexicalBlockFile(scope: !2535, file: !4, discriminator: 8)
!7910 = !DILocation(line: 375, column: 299, scope: !7911)
!7911 = !DILexicalBlockFile(scope: !2535, file: !4, discriminator: 9)
!7912 = !DILocation(line: 375, column: 312, scope: !7913)
!7913 = !DILexicalBlockFile(scope: !7914, file: !4, discriminator: 10)
!7914 = !DILexicalBlockFile(scope: !2507, file: !4, discriminator: 3)
!7915 = !DILocation(line: 375, column: 312, scope: !2533)
!7916 = !DILocation(line: 375, column: 312, scope: !7917)
!7917 = !DILexicalBlockFile(scope: !2533, file: !4, discriminator: 11)
!7918 = !DILocation(line: 376, column: 1, scope: !2507)
!7919 = !DILocation(line: 2560, column: 29, scope: !2582)
!7920 = !DILocation(line: 2560, column: 41, scope: !2582)
!7921 = !DILocation(line: 2560, column: 58, scope: !2582)
!7922 = !DILocation(line: 2561, column: 19, scope: !2582)
!7923 = !DILocation(line: 2563, column: 5, scope: !2582)
!7924 = !DILocation(line: 2563, column: 10, scope: !2582)
!7925 = !DILocation(line: 2564, column: 5, scope: !2582)
!7926 = !DILocation(line: 2564, column: 17, scope: !2582)
!7927 = !DILocation(line: 2565, column: 5, scope: !2582)
!7928 = !DILocation(line: 2565, column: 9, scope: !2582)
!7929 = !DILocation(line: 2565, column: 21, scope: !2582)
!7930 = !DILocation(line: 2565, column: 26, scope: !2582)
!7931 = !DILocation(line: 2569, column: 9, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !2582, file: !4, line: 2569, column: 9)
!7933 = !DILocation(line: 2569, column: 13, scope: !7932)
!7934 = !DILocation(line: 2569, column: 9, scope: !2582)
!7935 = !DILocation(line: 2570, column: 25, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7932, file: !4, line: 2569, column: 19)
!7937 = !DILocation(line: 2570, column: 9, scope: !7936)
!7938 = !DILocation(line: 2572, column: 9, scope: !7936)
!7939 = !DILocation(line: 2573, column: 16, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7932, file: !4, line: 2573, column: 16)
!7941 = !DILocation(line: 2573, column: 20, scope: !7940)
!7942 = !DILocation(line: 2573, column: 16, scope: !7932)
!7943 = !DILocation(line: 2574, column: 25, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7940, file: !4, line: 2573, column: 34)
!7945 = !DILocation(line: 2574, column: 9, scope: !7944)
!7946 = !DILocation(line: 2576, column: 9, scope: !7944)
!7947 = !DILocation(line: 2579, column: 30, scope: !2582)
!7948 = !DILocation(line: 2579, column: 41, scope: !2582)
!7949 = !DILocation(line: 2579, column: 36, scope: !2582)
!7950 = !DILocation(line: 2579, column: 14, scope: !2582)
!7951 = !DILocation(line: 2579, column: 12, scope: !2582)
!7952 = !DILocation(line: 2580, column: 9, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !2582, file: !4, line: 2580, column: 9)
!7954 = !DILocation(line: 2580, column: 16, scope: !7953)
!7955 = !DILocation(line: 2580, column: 9, scope: !2582)
!7956 = !DILocation(line: 2581, column: 9, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7953, file: !4, line: 2580, column: 31)
!7958 = !DILocation(line: 2582, column: 9, scope: !7957)
!7959 = !DILocation(line: 2585, column: 36, scope: !2582)
!7960 = !DILocation(line: 2585, column: 42, scope: !2582)
!7961 = !DILocation(line: 2585, column: 13, scope: !2582)
!7962 = !DILocation(line: 2585, column: 11, scope: !2582)
!7963 = !DILocation(line: 2588, column: 5, scope: !2582)
!7964 = !DILocation(line: 2588, column: 5, scope: !7965)
!7965 = !DILexicalBlockFile(scope: !7966, file: !4, discriminator: 2)
!7966 = !DILexicalBlockFile(scope: !2582, file: !4, discriminator: 1)
!7967 = !DILocation(line: 2589, column: 9, scope: !2596)
!7968 = !DILocation(line: 2589, column: 15, scope: !2596)
!7969 = !DILocation(line: 2590, column: 9, scope: !2596)
!7970 = !DILocation(line: 2590, column: 13, scope: !2596)
!7971 = !DILocation(line: 2592, column: 13, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !2596, file: !4, line: 2592, column: 13)
!7973 = !DILocation(line: 2592, column: 22, scope: !7972)
!7974 = !DILocation(line: 2592, column: 13, scope: !2596)
!7975 = !DILocation(line: 2593, column: 33, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7972, file: !4, line: 2592, column: 28)
!7977 = !DILocation(line: 2593, column: 20, scope: !7976)
!7978 = !DILocation(line: 2593, column: 18, scope: !7976)
!7979 = !DILocation(line: 2594, column: 9, scope: !7976)
!7980 = !DILocation(line: 2595, column: 38, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7972, file: !4, line: 2594, column: 16)
!7982 = !DILocation(line: 2596, column: 38, scope: !7981)
!7983 = !DILocation(line: 2596, column: 44, scope: !7981)
!7984 = !DILocation(line: 2596, column: 49, scope: !7981)
!7985 = !DILocation(line: 2597, column: 38, scope: !7981)
!7986 = !DILocation(line: 2597, column: 44, scope: !7981)
!7987 = !DILocation(line: 2597, column: 49, scope: !7981)
!7988 = !DILocation(line: 2595, column: 20, scope: !7981)
!7989 = !DILocation(line: 2595, column: 18, scope: !7981)
!7990 = !DILocation(line: 2599, column: 13, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !2596, file: !4, line: 2599, column: 13)
!7992 = !DILocation(line: 2599, column: 18, scope: !7991)
!7993 = !DILocation(line: 2599, column: 13, scope: !2596)
!7994 = !DILocation(line: 2600, column: 13, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7991, file: !4, line: 2599, column: 33)
!7996 = !DILocation(line: 2602, column: 33, scope: !2596)
!7997 = !DILocation(line: 2602, column: 40, scope: !2596)
!7998 = !DILocation(line: 2602, column: 13, scope: !2596)
!7999 = !DILocation(line: 2602, column: 11, scope: !2596)
!8000 = !DILocation(line: 2603, column: 19, scope: !2596)
!8001 = !DILocation(line: 2603, column: 9, scope: !2596)
!8002 = !DILocation(line: 2604, column: 14, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !2596, file: !4, line: 2604, column: 13)
!8004 = !DILocation(line: 2604, column: 13, scope: !2596)
!8005 = !DILocation(line: 2605, column: 19, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8003, file: !4, line: 2604, column: 17)
!8007 = !DILocation(line: 2605, column: 17, scope: !8006)
!8008 = !DILocation(line: 2606, column: 41, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8006, file: !4, line: 2606, column: 17)
!8010 = !DILocation(line: 2606, column: 26, scope: !8009)
!8011 = !DILocation(line: 2606, column: 45, scope: !8009)
!8012 = !DILocation(line: 2606, column: 51, scope: !8009)
!8013 = !DILocation(line: 2606, column: 18, scope: !8009)
!8014 = !DILocation(line: 2606, column: 59, scope: !8009)
!8015 = !DILocation(line: 2606, column: 66, scope: !8009)
!8016 = !DILocation(line: 2607, column: 25, scope: !8009)
!8017 = !DILocation(line: 2607, column: 24, scope: !8009)
!8018 = !DILocation(line: 2607, column: 29, scope: !8009)
!8019 = !DILocation(line: 2607, column: 18, scope: !8009)
!8020 = !DILocation(line: 2607, column: 38, scope: !8009)
!8021 = !DILocation(line: 2606, column: 17, scope: !8006)
!8022 = !DILocation(line: 2609, column: 17, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8009, file: !4, line: 2607, column: 47)
!8024 = !DILocation(line: 2610, column: 13, scope: !8023)
!8025 = !DILocation(line: 2611, column: 17, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8009, file: !4, line: 2610, column: 20)
!8027 = !DILocation(line: 2613, column: 9, scope: !8006)
!8028 = !DILocation(line: 2614, column: 15, scope: !2596)
!8029 = !DILocation(line: 2615, column: 5, scope: !2582)
!8030 = !DILocation(line: 2615, column: 5, scope: !7966)
!8031 = !DILocation(line: 2617, column: 11, scope: !2582)
!8032 = !DILocation(line: 2617, column: 9, scope: !2582)
!8033 = !DILocation(line: 2618, column: 10, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !2582, file: !4, line: 2618, column: 9)
!8035 = !DILocation(line: 2618, column: 19, scope: !8034)
!8036 = !DILocation(line: 2618, column: 25, scope: !8034)
!8037 = !DILocation(line: 2619, column: 14, scope: !8034)
!8038 = !DILocation(line: 2619, column: 21, scope: !8034)
!8039 = !DILocation(line: 2619, column: 26, scope: !8034)
!8040 = !DILocation(line: 2620, column: 37, scope: !8034)
!8041 = !DILocation(line: 2620, column: 22, scope: !8034)
!8042 = !DILocation(line: 2620, column: 41, scope: !8034)
!8043 = !DILocation(line: 2620, column: 47, scope: !8034)
!8044 = !DILocation(line: 2620, column: 14, scope: !8034)
!8045 = !DILocation(line: 2620, column: 55, scope: !8034)
!8046 = !DILocation(line: 2620, column: 62, scope: !8034)
!8047 = !DILocation(line: 2621, column: 21, scope: !8034)
!8048 = !DILocation(line: 2621, column: 20, scope: !8034)
!8049 = !DILocation(line: 2621, column: 25, scope: !8034)
!8050 = !DILocation(line: 2621, column: 14, scope: !8034)
!8051 = !DILocation(line: 2621, column: 34, scope: !8034)
!8052 = !DILocation(line: 2618, column: 9, scope: !2582)
!8053 = !DILocation(line: 2623, column: 9, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8034, file: !4, line: 2621, column: 43)
!8055 = !DILocation(line: 2624, column: 16, scope: !8054)
!8056 = !DILocation(line: 2625, column: 5, scope: !8054)
!8057 = !DILocation(line: 2625, column: 17, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8034, file: !4, line: 2625, column: 16)
!8059 = !DILocation(line: 2625, column: 26, scope: !8058)
!8060 = !DILocation(line: 2625, column: 32, scope: !8058)
!8061 = !DILocation(line: 2626, column: 21, scope: !8058)
!8062 = !DILocation(line: 2626, column: 28, scope: !8058)
!8063 = !DILocation(line: 2626, column: 33, scope: !8058)
!8064 = !DILocation(line: 2627, column: 44, scope: !8058)
!8065 = !DILocation(line: 2627, column: 29, scope: !8058)
!8066 = !DILocation(line: 2627, column: 48, scope: !8058)
!8067 = !DILocation(line: 2627, column: 54, scope: !8058)
!8068 = !DILocation(line: 2627, column: 21, scope: !8058)
!8069 = !DILocation(line: 2627, column: 62, scope: !8058)
!8070 = !DILocation(line: 2627, column: 68, scope: !8058)
!8071 = !DILocation(line: 2628, column: 28, scope: !8058)
!8072 = !DILocation(line: 2628, column: 27, scope: !8058)
!8073 = !DILocation(line: 2628, column: 32, scope: !8058)
!8074 = !DILocation(line: 2628, column: 21, scope: !8058)
!8075 = !DILocation(line: 2628, column: 41, scope: !8058)
!8076 = !DILocation(line: 2625, column: 16, scope: !8034)
!8077 = !DILocation(line: 2630, column: 9, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8058, file: !4, line: 2628, column: 50)
!8079 = !DILocation(line: 2631, column: 16, scope: !8078)
!8080 = !DILocation(line: 2632, column: 5, scope: !8078)
!8081 = !DILocation(line: 2633, column: 9, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8058, file: !4, line: 2632, column: 12)
!8083 = !DILocation(line: 2634, column: 16, scope: !8082)
!8084 = !DILocation(line: 2637, column: 14, scope: !2582)
!8085 = !DILocation(line: 2637, column: 5, scope: !2582)
!8086 = !DILocation(line: 2638, column: 12, scope: !2582)
!8087 = !DILocation(line: 2638, column: 5, scope: !2582)
!8088 = !DILocation(line: 2639, column: 1, scope: !2582)
!8089 = !DILocation(line: 2902, column: 27, scope: !2655)
!8090 = !DILocation(line: 2902, column: 35, scope: !2655)
!8091 = !DILocation(line: 2902, column: 45, scope: !2655)
!8092 = !DILocation(line: 2904, column: 5, scope: !2655)
!8093 = !DILocation(line: 2904, column: 9, scope: !2655)
!8094 = !DILocation(line: 2905, column: 5, scope: !2655)
!8095 = !DILocation(line: 2905, column: 19, scope: !2655)
!8096 = !DILocation(line: 2905, column: 46, scope: !2655)
!8097 = !DILocation(line: 2905, column: 29, scope: !2655)
!8098 = !DILocation(line: 2906, column: 5, scope: !2655)
!8099 = !DILocation(line: 2906, column: 18, scope: !2655)
!8100 = !DILocation(line: 2907, column: 5, scope: !2655)
!8101 = !DILocation(line: 2907, column: 15, scope: !2655)
!8102 = !DILocation(line: 2908, column: 5, scope: !2655)
!8103 = !DILocation(line: 2908, column: 15, scope: !2655)
!8104 = !DILocation(line: 2909, column: 5, scope: !2655)
!8105 = !DILocation(line: 2909, column: 15, scope: !2655)
!8106 = !DILocation(line: 2911, column: 5, scope: !2655)
!8107 = !DILocation(line: 2911, column: 15, scope: !2655)
!8108 = !DILocation(line: 2912, column: 5, scope: !2655)
!8109 = !DILocation(line: 2912, column: 17, scope: !2655)
!8110 = !DILocation(line: 2912, column: 49, scope: !2655)
!8111 = !DILocation(line: 2912, column: 30, scope: !2655)
!8112 = !DILocation(line: 2914, column: 5, scope: !2655)
!8113 = !DILocation(line: 2914, column: 22, scope: !2655)
!8114 = !DILocation(line: 2914, column: 31, scope: !2655)
!8115 = !DILocation(line: 2917, column: 9, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !2655, file: !4, line: 2917, column: 9)
!8117 = !DILocation(line: 2917, column: 18, scope: !8116)
!8118 = !DILocation(line: 2917, column: 31, scope: !8116)
!8119 = !DILocation(line: 2917, column: 9, scope: !2655)
!8120 = !DILocation(line: 2921, column: 28, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8116, file: !4, line: 2917, column: 46)
!8122 = !DILocation(line: 2921, column: 9, scope: !8121)
!8123 = !DILocation(line: 2923, column: 9, scope: !8121)
!8124 = !DILocation(line: 2926, column: 28, scope: !2655)
!8125 = !DILocation(line: 2926, column: 12, scope: !2655)
!8126 = !DILocation(line: 2926, column: 11, scope: !2655)
!8127 = !DILocation(line: 2926, column: 9, scope: !2655)
!8128 = !DILocation(line: 2928, column: 38, scope: !2655)
!8129 = !DILocation(line: 2928, column: 43, scope: !2655)
!8130 = !DILocation(line: 2928, column: 18, scope: !2655)
!8131 = !DILocation(line: 2928, column: 16, scope: !2655)
!8132 = !DILocation(line: 2929, column: 21, scope: !2655)
!8133 = !DILocation(line: 2929, column: 35, scope: !2655)
!8134 = !DILocation(line: 2929, column: 44, scope: !2655)
!8135 = !DILocation(line: 2930, column: 9, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !2655, file: !4, line: 2930, column: 9)
!8137 = !DILocation(line: 2930, column: 20, scope: !8136)
!8138 = !DILocation(line: 2930, column: 9, scope: !2655)
!8139 = !DILocation(line: 2931, column: 9, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8136, file: !4, line: 2930, column: 42)
!8141 = !DILocation(line: 2934, column: 9, scope: !2675)
!8142 = !DILocation(line: 2934, column: 20, scope: !2675)
!8143 = !DILocation(line: 2934, column: 9, scope: !2655)
!8144 = !DILocation(line: 2935, column: 47, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !2675, file: !4, line: 2934, column: 35)
!8146 = !DILocation(line: 2935, column: 56, scope: !8145)
!8147 = !DILocation(line: 2935, column: 70, scope: !8145)
!8148 = !DILocation(line: 2936, column: 66, scope: !8145)
!8149 = !DILocation(line: 2935, column: 18, scope: !8145)
!8150 = !DILocation(line: 2935, column: 16, scope: !8145)
!8151 = !DILocation(line: 2937, column: 5, scope: !8145)
!8152 = !DILocation(line: 2939, column: 43, scope: !2674)
!8153 = !DILocation(line: 2939, column: 24, scope: !2674)
!8154 = !DILocation(line: 2939, column: 22, scope: !2674)
!8155 = !DILocation(line: 2940, column: 13, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !2674, file: !4, line: 2940, column: 13)
!8157 = !DILocation(line: 2940, column: 26, scope: !8156)
!8158 = !DILocation(line: 2940, column: 13, scope: !2674)
!8159 = !DILocation(line: 2941, column: 48, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !4, line: 2940, column: 41)
!8161 = !DILocation(line: 2941, column: 35, scope: !8160)
!8162 = !DILocation(line: 2941, column: 13, scope: !8160)
!8163 = !DILocation(line: 2942, column: 13, scope: !8160)
!8164 = !DILocation(line: 2944, column: 55, scope: !2674)
!8165 = !DILocation(line: 2944, column: 27, scope: !2674)
!8166 = !DILocation(line: 2944, column: 25, scope: !2674)
!8167 = !DILocation(line: 2945, column: 13, scope: !2673)
!8168 = !DILocation(line: 2945, column: 29, scope: !2673)
!8169 = !DILocation(line: 2945, column: 13, scope: !2674)
!8170 = !DILocation(line: 2946, column: 35, scope: !2672)
!8171 = !DILocation(line: 2946, column: 13, scope: !2672)
!8172 = !DILocation(line: 2947, column: 13, scope: !2672)
!8173 = !DILocation(line: 2947, column: 18, scope: !8174)
!8174 = !DILexicalBlockFile(scope: !2671, file: !4, discriminator: 1)
!8175 = !DILocation(line: 2947, column: 28, scope: !2671)
!8176 = !DILocation(line: 2947, column: 58, scope: !2671)
!8177 = !DILocation(line: 2947, column: 81, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !2671, file: !4, line: 2947, column: 78)
!8179 = !DILocation(line: 2947, column: 98, scope: !8178)
!8180 = !DILocation(line: 2947, column: 78, scope: !8178)
!8181 = !DILocation(line: 2947, column: 108, scope: !8178)
!8182 = !DILocation(line: 2947, column: 78, scope: !2671)
!8183 = !DILocation(line: 2947, column: 78, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !2671, file: !4, discriminator: 2)
!8185 = !DILocation(line: 2947, column: 139, scope: !8186)
!8186 = !DILexicalBlockFile(scope: !8178, file: !4, discriminator: 3)
!8187 = !DILocation(line: 2947, column: 157, scope: !8178)
!8188 = !DILocation(line: 2947, column: 167, scope: !8178)
!8189 = !DILocation(line: 2947, column: 192, scope: !8178)
!8190 = !DILocation(line: 2947, column: 123, scope: !8178)
!8191 = !DILocation(line: 2947, column: 211, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !2672, file: !4, discriminator: 4)
!8193 = !DILocation(line: 2947, column: 211, scope: !2671)
!8194 = !DILocation(line: 2947, column: 211, scope: !8195)
!8195 = !DILexicalBlockFile(scope: !2671, file: !4, discriminator: 5)
!8196 = !DILocation(line: 2948, column: 13, scope: !2672)
!8197 = !DILocation(line: 2950, column: 9, scope: !2674)
!8198 = !DILocation(line: 2950, column: 14, scope: !8199)
!8199 = !DILexicalBlockFile(scope: !2677, file: !4, discriminator: 1)
!8200 = !DILocation(line: 2950, column: 24, scope: !2677)
!8201 = !DILocation(line: 2950, column: 54, scope: !2677)
!8202 = !DILocation(line: 2950, column: 77, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !2677, file: !4, line: 2950, column: 74)
!8204 = !DILocation(line: 2950, column: 94, scope: !8203)
!8205 = !DILocation(line: 2950, column: 74, scope: !8203)
!8206 = !DILocation(line: 2950, column: 104, scope: !8203)
!8207 = !DILocation(line: 2950, column: 74, scope: !2677)
!8208 = !DILocation(line: 2950, column: 74, scope: !8209)
!8209 = !DILexicalBlockFile(scope: !2677, file: !4, discriminator: 2)
!8210 = !DILocation(line: 2950, column: 135, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !8203, file: !4, discriminator: 3)
!8212 = !DILocation(line: 2950, column: 153, scope: !8203)
!8213 = !DILocation(line: 2950, column: 163, scope: !8203)
!8214 = !DILocation(line: 2950, column: 188, scope: !8203)
!8215 = !DILocation(line: 2950, column: 119, scope: !8203)
!8216 = !DILocation(line: 2950, column: 207, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !2674, file: !4, discriminator: 4)
!8218 = !DILocation(line: 2950, column: 207, scope: !2677)
!8219 = !DILocation(line: 2950, column: 207, scope: !8220)
!8220 = !DILexicalBlockFile(scope: !2677, file: !4, discriminator: 5)
!8221 = !DILocation(line: 2951, column: 47, scope: !2674)
!8222 = !DILocation(line: 2951, column: 56, scope: !2674)
!8223 = !DILocation(line: 2951, column: 70, scope: !2674)
!8224 = !DILocation(line: 2952, column: 47, scope: !2674)
!8225 = !DILocation(line: 2952, column: 64, scope: !2674)
!8226 = !DILocation(line: 2951, column: 18, scope: !2674)
!8227 = !DILocation(line: 2951, column: 16, scope: !2674)
!8228 = !DILocation(line: 2953, column: 9, scope: !2674)
!8229 = !DILocation(line: 2953, column: 14, scope: !8230)
!8230 = !DILexicalBlockFile(scope: !2679, file: !4, discriminator: 1)
!8231 = !DILocation(line: 2953, column: 24, scope: !2679)
!8232 = !DILocation(line: 2953, column: 54, scope: !2679)
!8233 = !DILocation(line: 2953, column: 80, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !2679, file: !4, line: 2953, column: 77)
!8235 = !DILocation(line: 2953, column: 97, scope: !8234)
!8236 = !DILocation(line: 2953, column: 77, scope: !8234)
!8237 = !DILocation(line: 2953, column: 107, scope: !8234)
!8238 = !DILocation(line: 2953, column: 77, scope: !2679)
!8239 = !DILocation(line: 2953, column: 77, scope: !8240)
!8240 = !DILexicalBlockFile(scope: !2679, file: !4, discriminator: 2)
!8241 = !DILocation(line: 2953, column: 138, scope: !8242)
!8242 = !DILexicalBlockFile(scope: !8234, file: !4, discriminator: 3)
!8243 = !DILocation(line: 2953, column: 156, scope: !8234)
!8244 = !DILocation(line: 2953, column: 166, scope: !8234)
!8245 = !DILocation(line: 2953, column: 191, scope: !8234)
!8246 = !DILocation(line: 2953, column: 122, scope: !8234)
!8247 = !DILocation(line: 2953, column: 210, scope: !8217)
!8248 = !DILocation(line: 2953, column: 210, scope: !2679)
!8249 = !DILocation(line: 2953, column: 210, scope: !8250)
!8250 = !DILexicalBlockFile(scope: !2679, file: !4, discriminator: 5)
!8251 = !DILocation(line: 2955, column: 5, scope: !2655)
!8252 = !DILocation(line: 2955, column: 10, scope: !8253)
!8253 = !DILexicalBlockFile(scope: !2681, file: !4, discriminator: 1)
!8254 = !DILocation(line: 2955, column: 20, scope: !2681)
!8255 = !DILocation(line: 2955, column: 50, scope: !2681)
!8256 = !DILocation(line: 2955, column: 71, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !2681, file: !4, line: 2955, column: 68)
!8258 = !DILocation(line: 2955, column: 88, scope: !8257)
!8259 = !DILocation(line: 2955, column: 68, scope: !8257)
!8260 = !DILocation(line: 2955, column: 98, scope: !8257)
!8261 = !DILocation(line: 2955, column: 68, scope: !2681)
!8262 = !DILocation(line: 2955, column: 68, scope: !8263)
!8263 = !DILexicalBlockFile(scope: !2681, file: !4, discriminator: 2)
!8264 = !DILocation(line: 2955, column: 129, scope: !8265)
!8265 = !DILexicalBlockFile(scope: !8257, file: !4, discriminator: 3)
!8266 = !DILocation(line: 2955, column: 147, scope: !8257)
!8267 = !DILocation(line: 2955, column: 157, scope: !8257)
!8268 = !DILocation(line: 2955, column: 182, scope: !8257)
!8269 = !DILocation(line: 2955, column: 113, scope: !8257)
!8270 = !DILocation(line: 2955, column: 201, scope: !8271)
!8271 = !DILexicalBlockFile(scope: !2655, file: !4, discriminator: 4)
!8272 = !DILocation(line: 2955, column: 201, scope: !2681)
!8273 = !DILocation(line: 2955, column: 201, scope: !8274)
!8274 = !DILexicalBlockFile(scope: !2681, file: !4, discriminator: 5)
!8275 = !DILocation(line: 2957, column: 9, scope: !2685)
!8276 = !DILocation(line: 2957, column: 16, scope: !2685)
!8277 = !DILocation(line: 2957, column: 9, scope: !2655)
!8278 = !DILocation(line: 2958, column: 31, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !2685, file: !4, line: 2957, column: 31)
!8280 = !DILocation(line: 2958, column: 40, scope: !8279)
!8281 = !DILocation(line: 2958, column: 9, scope: !8279)
!8282 = !DILocation(line: 2959, column: 10, scope: !8279)
!8283 = !DILocation(line: 2959, column: 13, scope: !8279)
!8284 = !DILocation(line: 2960, column: 13, scope: !8279)
!8285 = !DILocation(line: 2961, column: 5, scope: !8279)
!8286 = !DILocation(line: 2963, column: 13, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !2684, file: !4, line: 2963, column: 13)
!8288 = !DILocation(line: 2963, column: 20, scope: !8287)
!8289 = !DILocation(line: 2963, column: 13, scope: !2684)
!8290 = !DILocation(line: 2964, column: 39, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8287, file: !4, line: 2963, column: 42)
!8292 = !DILocation(line: 2964, column: 25, scope: !8291)
!8293 = !DILocation(line: 2964, column: 19, scope: !8291)
!8294 = !DILocation(line: 2964, column: 14, scope: !8291)
!8295 = !DILocation(line: 2964, column: 17, scope: !8291)
!8296 = !DILocation(line: 2965, column: 17, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8291, file: !4, line: 2965, column: 17)
!8298 = !DILocation(line: 2965, column: 17, scope: !8291)
!8299 = !DILocation(line: 2966, column: 39, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8297, file: !4, line: 2965, column: 35)
!8301 = !DILocation(line: 2966, column: 17, scope: !8300)
!8302 = !DILocation(line: 2967, column: 18, scope: !8300)
!8303 = !DILocation(line: 2967, column: 21, scope: !8300)
!8304 = !DILocation(line: 2968, column: 13, scope: !8300)
!8305 = !DILocation(line: 2969, column: 17, scope: !8291)
!8306 = !DILocation(line: 2970, column: 9, scope: !8291)
!8307 = !DILocation(line: 2972, column: 17, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8287, file: !4, line: 2971, column: 14)
!8309 = !DILocation(line: 2974, column: 9, scope: !2684)
!8310 = !DILocation(line: 2974, column: 14, scope: !8311)
!8311 = !DILexicalBlockFile(scope: !2683, file: !4, discriminator: 1)
!8312 = !DILocation(line: 2974, column: 24, scope: !2683)
!8313 = !DILocation(line: 2974, column: 54, scope: !2683)
!8314 = !DILocation(line: 2974, column: 71, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !2683, file: !4, line: 2974, column: 68)
!8316 = !DILocation(line: 2974, column: 88, scope: !8315)
!8317 = !DILocation(line: 2974, column: 68, scope: !8315)
!8318 = !DILocation(line: 2974, column: 98, scope: !8315)
!8319 = !DILocation(line: 2974, column: 68, scope: !2683)
!8320 = !DILocation(line: 2974, column: 68, scope: !8321)
!8321 = !DILexicalBlockFile(scope: !2683, file: !4, discriminator: 2)
!8322 = !DILocation(line: 2974, column: 129, scope: !8323)
!8323 = !DILexicalBlockFile(scope: !8315, file: !4, discriminator: 3)
!8324 = !DILocation(line: 2974, column: 147, scope: !8315)
!8325 = !DILocation(line: 2974, column: 157, scope: !8315)
!8326 = !DILocation(line: 2974, column: 182, scope: !8315)
!8327 = !DILocation(line: 2974, column: 113, scope: !8315)
!8328 = !DILocation(line: 2974, column: 201, scope: !8329)
!8329 = !DILexicalBlockFile(scope: !2684, file: !4, discriminator: 4)
!8330 = !DILocation(line: 2974, column: 201, scope: !2683)
!8331 = !DILocation(line: 2974, column: 201, scope: !8332)
!8332 = !DILexicalBlockFile(scope: !2683, file: !4, discriminator: 5)
!8333 = !DILocation(line: 2978, column: 24, scope: !2655)
!8334 = !DILocation(line: 2978, column: 5, scope: !2655)
!8335 = !DILocation(line: 2980, column: 12, scope: !2655)
!8336 = !DILocation(line: 2980, column: 5, scope: !2655)
!8337 = !DILocation(line: 2983, column: 5, scope: !2655)
!8338 = !DILocation(line: 2983, column: 10, scope: !8339)
!8339 = !DILexicalBlockFile(scope: !2687, file: !4, discriminator: 1)
!8340 = !DILocation(line: 2983, column: 20, scope: !2687)
!8341 = !DILocation(line: 2983, column: 50, scope: !2687)
!8342 = !DILocation(line: 2983, column: 71, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !2687, file: !4, line: 2983, column: 68)
!8344 = !DILocation(line: 2983, column: 88, scope: !8343)
!8345 = !DILocation(line: 2983, column: 68, scope: !8343)
!8346 = !DILocation(line: 2983, column: 98, scope: !8343)
!8347 = !DILocation(line: 2983, column: 68, scope: !2687)
!8348 = !DILocation(line: 2983, column: 68, scope: !8349)
!8349 = !DILexicalBlockFile(scope: !2687, file: !4, discriminator: 2)
!8350 = !DILocation(line: 2983, column: 129, scope: !8351)
!8351 = !DILexicalBlockFile(scope: !8343, file: !4, discriminator: 3)
!8352 = !DILocation(line: 2983, column: 147, scope: !8343)
!8353 = !DILocation(line: 2983, column: 157, scope: !8343)
!8354 = !DILocation(line: 2983, column: 182, scope: !8343)
!8355 = !DILocation(line: 2983, column: 113, scope: !8343)
!8356 = !DILocation(line: 2983, column: 201, scope: !8271)
!8357 = !DILocation(line: 2983, column: 201, scope: !2687)
!8358 = !DILocation(line: 2983, column: 201, scope: !8359)
!8359 = !DILexicalBlockFile(scope: !2687, file: !4, discriminator: 5)
!8360 = !DILocation(line: 2984, column: 6, scope: !2655)
!8361 = !DILocation(line: 2984, column: 9, scope: !2655)
!8362 = !DILocation(line: 2985, column: 9, scope: !2655)
!8363 = !DILocation(line: 2987, column: 24, scope: !2655)
!8364 = !DILocation(line: 2987, column: 5, scope: !2655)
!8365 = !DILocation(line: 2989, column: 12, scope: !2655)
!8366 = !DILocation(line: 2989, column: 5, scope: !2655)
!8367 = !DILocation(line: 2990, column: 1, scope: !2655)
!8368 = !DILocation(line: 1257, column: 27, scope: !2733)
!8369 = !DILocation(line: 1259, column: 5, scope: !2733)
!8370 = !DILocation(line: 1259, column: 20, scope: !2733)
!8371 = !DILocation(line: 1260, column: 5, scope: !2733)
!8372 = !DILocation(line: 1260, column: 9, scope: !2733)
!8373 = !DILocation(line: 1261, column: 5, scope: !2733)
!8374 = !DILocation(line: 1261, column: 15, scope: !2733)
!8375 = !DILocation(line: 1263, column: 15, scope: !2733)
!8376 = !DILocation(line: 1264, column: 20, scope: !2733)
!8377 = !DILocation(line: 1264, column: 11, scope: !2733)
!8378 = !DILocation(line: 1264, column: 9, scope: !2733)
!8379 = !DILocation(line: 1265, column: 9, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !2733, file: !4, line: 1265, column: 9)
!8381 = !DILocation(line: 1265, column: 13, scope: !8380)
!8382 = !DILocation(line: 1265, column: 9, scope: !2733)
!8383 = !DILocation(line: 1266, column: 9, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8380, file: !4, line: 1265, column: 18)
!8385 = !DILocation(line: 1267, column: 9, scope: !8384)
!8386 = !DILocation(line: 1270, column: 55, scope: !2733)
!8387 = !DILocation(line: 1270, column: 66, scope: !2733)
!8388 = !DILocation(line: 1270, column: 14, scope: !2733)
!8389 = !DILocation(line: 1270, column: 12, scope: !2733)
!8390 = !DILocation(line: 1271, column: 17, scope: !2733)
!8391 = !DILocation(line: 1271, column: 5, scope: !2733)
!8392 = !DILocation(line: 1272, column: 12, scope: !2733)
!8393 = !DILocation(line: 1272, column: 5, scope: !2733)
!8394 = !DILocation(line: 1273, column: 1, scope: !2733)
!8395 = !DILocation(line: 1092, column: 27, scope: !2741)
!8396 = !DILocation(line: 1094, column: 5, scope: !2741)
!8397 = !DILocation(line: 1094, column: 15, scope: !2741)
!8398 = !DILocation(line: 1095, column: 5, scope: !2741)
!8399 = !DILocation(line: 1095, column: 10, scope: !2741)
!8400 = !DILocation(line: 1096, column: 5, scope: !2741)
!8401 = !DILocation(line: 1096, column: 15, scope: !2741)
!8402 = !DILocation(line: 1097, column: 5, scope: !2741)
!8403 = !DILocation(line: 1097, column: 15, scope: !2741)
!8404 = !DILocation(line: 1098, column: 5, scope: !2741)
!8405 = !DILocation(line: 1098, column: 15, scope: !2741)
!8406 = !DILocation(line: 1099, column: 5, scope: !2741)
!8407 = !DILocation(line: 1099, column: 15, scope: !2741)
!8408 = !DILocation(line: 1100, column: 5, scope: !2741)
!8409 = !DILocation(line: 1100, column: 15, scope: !2741)
!8410 = !DILocation(line: 1101, column: 5, scope: !2741)
!8411 = !DILocation(line: 1101, column: 15, scope: !2741)
!8412 = !DILocation(line: 1102, column: 5, scope: !2741)
!8413 = !DILocation(line: 1102, column: 19, scope: !2741)
!8414 = !DILocation(line: 1103, column: 5, scope: !2741)
!8415 = !DILocation(line: 1103, column: 10, scope: !2741)
!8416 = !DILocation(line: 1104, column: 5, scope: !2741)
!8417 = !DILocation(line: 1104, column: 9, scope: !2741)
!8418 = !DILocation(line: 1104, column: 14, scope: !2741)
!8419 = !DILocation(line: 1105, column: 5, scope: !2741)
!8420 = !DILocation(line: 1105, column: 16, scope: !2741)
!8421 = !DILocation(line: 1105, column: 28, scope: !2741)
!8422 = !DILocation(line: 1106, column: 5, scope: !2741)
!8423 = !DILocation(line: 1106, column: 15, scope: !2741)
!8424 = !DILocation(line: 1106, column: 28, scope: !2741)
!8425 = !DILocation(line: 1108, column: 14, scope: !2741)
!8426 = !DILocation(line: 1108, column: 12, scope: !2741)
!8427 = !DILocation(line: 1109, column: 9, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1109, column: 9)
!8429 = !DILocation(line: 1109, column: 16, scope: !8428)
!8430 = !DILocation(line: 1109, column: 9, scope: !2741)
!8431 = !DILocation(line: 1110, column: 9, scope: !8428)
!8432 = !DILocation(line: 1113, column: 31, scope: !2741)
!8433 = !DILocation(line: 1113, column: 9, scope: !2741)
!8434 = !DILocation(line: 1112, column: 12, scope: !2741)
!8435 = !DILocation(line: 1112, column: 10, scope: !2741)
!8436 = !DILocation(line: 1114, column: 9, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1114, column: 9)
!8438 = !DILocation(line: 1114, column: 14, scope: !8437)
!8439 = !DILocation(line: 1114, column: 9, scope: !2741)
!8440 = !DILocation(line: 1115, column: 9, scope: !8437)
!8441 = !DILocation(line: 1116, column: 30, scope: !2766)
!8442 = !DILocation(line: 1116, column: 64, scope: !2766)
!8443 = !DILocation(line: 1116, column: 9, scope: !2766)
!8444 = !DILocation(line: 1116, column: 70, scope: !2766)
!8445 = !DILocation(line: 1116, column: 9, scope: !2741)
!8446 = !DILocation(line: 1117, column: 9, scope: !2765)
!8447 = !DILocation(line: 1117, column: 14, scope: !8448)
!8448 = !DILexicalBlockFile(scope: !2764, file: !4, discriminator: 1)
!8449 = !DILocation(line: 1117, column: 24, scope: !2764)
!8450 = !DILocation(line: 1117, column: 54, scope: !2764)
!8451 = !DILocation(line: 1117, column: 69, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !2764, file: !4, line: 1117, column: 66)
!8453 = !DILocation(line: 1117, column: 86, scope: !8452)
!8454 = !DILocation(line: 1117, column: 66, scope: !8452)
!8455 = !DILocation(line: 1117, column: 96, scope: !8452)
!8456 = !DILocation(line: 1117, column: 66, scope: !2764)
!8457 = !DILocation(line: 1117, column: 66, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !2764, file: !4, discriminator: 2)
!8459 = !DILocation(line: 1117, column: 127, scope: !8460)
!8460 = !DILexicalBlockFile(scope: !8452, file: !4, discriminator: 3)
!8461 = !DILocation(line: 1117, column: 145, scope: !8452)
!8462 = !DILocation(line: 1117, column: 155, scope: !8452)
!8463 = !DILocation(line: 1117, column: 180, scope: !8452)
!8464 = !DILocation(line: 1117, column: 111, scope: !8452)
!8465 = !DILocation(line: 1117, column: 199, scope: !8466)
!8466 = !DILexicalBlockFile(scope: !2765, file: !4, discriminator: 4)
!8467 = !DILocation(line: 1117, column: 199, scope: !2764)
!8468 = !DILocation(line: 1117, column: 199, scope: !8469)
!8469 = !DILexicalBlockFile(scope: !2764, file: !4, discriminator: 5)
!8470 = !DILocation(line: 1118, column: 9, scope: !2765)
!8471 = !DILocation(line: 1120, column: 5, scope: !2741)
!8472 = !DILocation(line: 1120, column: 10, scope: !8473)
!8473 = !DILexicalBlockFile(scope: !2768, file: !4, discriminator: 1)
!8474 = !DILocation(line: 1120, column: 20, scope: !2768)
!8475 = !DILocation(line: 1120, column: 50, scope: !2768)
!8476 = !DILocation(line: 1120, column: 65, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !2768, file: !4, line: 1120, column: 62)
!8478 = !DILocation(line: 1120, column: 82, scope: !8477)
!8479 = !DILocation(line: 1120, column: 62, scope: !8477)
!8480 = !DILocation(line: 1120, column: 92, scope: !8477)
!8481 = !DILocation(line: 1120, column: 62, scope: !2768)
!8482 = !DILocation(line: 1120, column: 62, scope: !8483)
!8483 = !DILexicalBlockFile(scope: !2768, file: !4, discriminator: 2)
!8484 = !DILocation(line: 1120, column: 123, scope: !8485)
!8485 = !DILexicalBlockFile(scope: !8477, file: !4, discriminator: 3)
!8486 = !DILocation(line: 1120, column: 141, scope: !8477)
!8487 = !DILocation(line: 1120, column: 151, scope: !8477)
!8488 = !DILocation(line: 1120, column: 176, scope: !8477)
!8489 = !DILocation(line: 1120, column: 107, scope: !8477)
!8490 = !DILocation(line: 1120, column: 195, scope: !8491)
!8491 = !DILexicalBlockFile(scope: !2741, file: !4, discriminator: 4)
!8492 = !DILocation(line: 1120, column: 195, scope: !2768)
!8493 = !DILocation(line: 1120, column: 195, scope: !8494)
!8494 = !DILexicalBlockFile(scope: !2768, file: !4, discriminator: 5)
!8495 = !DILocation(line: 1123, column: 30, scope: !2741)
!8496 = !DILocation(line: 1123, column: 9, scope: !2741)
!8497 = !DILocation(line: 1122, column: 14, scope: !2741)
!8498 = !DILocation(line: 1122, column: 12, scope: !2741)
!8499 = !DILocation(line: 1124, column: 9, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1124, column: 9)
!8501 = !DILocation(line: 1124, column: 16, scope: !8500)
!8502 = !DILocation(line: 1124, column: 9, scope: !2741)
!8503 = !DILocation(line: 1125, column: 9, scope: !8500)
!8504 = !DILocation(line: 1126, column: 30, scope: !2772)
!8505 = !DILocation(line: 1126, column: 62, scope: !2772)
!8506 = !DILocation(line: 1126, column: 9, scope: !2772)
!8507 = !DILocation(line: 1126, column: 70, scope: !2772)
!8508 = !DILocation(line: 1126, column: 9, scope: !2741)
!8509 = !DILocation(line: 1127, column: 9, scope: !2771)
!8510 = !DILocation(line: 1127, column: 14, scope: !8511)
!8511 = !DILexicalBlockFile(scope: !2770, file: !4, discriminator: 1)
!8512 = !DILocation(line: 1127, column: 24, scope: !2770)
!8513 = !DILocation(line: 1127, column: 54, scope: !2770)
!8514 = !DILocation(line: 1127, column: 71, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !2770, file: !4, line: 1127, column: 68)
!8516 = !DILocation(line: 1127, column: 88, scope: !8515)
!8517 = !DILocation(line: 1127, column: 68, scope: !8515)
!8518 = !DILocation(line: 1127, column: 98, scope: !8515)
!8519 = !DILocation(line: 1127, column: 68, scope: !2770)
!8520 = !DILocation(line: 1127, column: 68, scope: !8521)
!8521 = !DILexicalBlockFile(scope: !2770, file: !4, discriminator: 2)
!8522 = !DILocation(line: 1127, column: 129, scope: !8523)
!8523 = !DILexicalBlockFile(scope: !8515, file: !4, discriminator: 3)
!8524 = !DILocation(line: 1127, column: 147, scope: !8515)
!8525 = !DILocation(line: 1127, column: 157, scope: !8515)
!8526 = !DILocation(line: 1127, column: 182, scope: !8515)
!8527 = !DILocation(line: 1127, column: 113, scope: !8515)
!8528 = !DILocation(line: 1127, column: 201, scope: !8529)
!8529 = !DILexicalBlockFile(scope: !2771, file: !4, discriminator: 4)
!8530 = !DILocation(line: 1127, column: 201, scope: !2770)
!8531 = !DILocation(line: 1127, column: 201, scope: !8532)
!8532 = !DILexicalBlockFile(scope: !2770, file: !4, discriminator: 5)
!8533 = !DILocation(line: 1128, column: 9, scope: !2771)
!8534 = !DILocation(line: 1130, column: 5, scope: !2741)
!8535 = !DILocation(line: 1130, column: 10, scope: !8536)
!8536 = !DILexicalBlockFile(scope: !2774, file: !4, discriminator: 1)
!8537 = !DILocation(line: 1130, column: 20, scope: !2774)
!8538 = !DILocation(line: 1130, column: 50, scope: !2774)
!8539 = !DILocation(line: 1130, column: 67, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !2774, file: !4, line: 1130, column: 64)
!8541 = !DILocation(line: 1130, column: 84, scope: !8540)
!8542 = !DILocation(line: 1130, column: 64, scope: !8540)
!8543 = !DILocation(line: 1130, column: 94, scope: !8540)
!8544 = !DILocation(line: 1130, column: 64, scope: !2774)
!8545 = !DILocation(line: 1130, column: 64, scope: !8546)
!8546 = !DILexicalBlockFile(scope: !2774, file: !4, discriminator: 2)
!8547 = !DILocation(line: 1130, column: 125, scope: !8548)
!8548 = !DILexicalBlockFile(scope: !8540, file: !4, discriminator: 3)
!8549 = !DILocation(line: 1130, column: 143, scope: !8540)
!8550 = !DILocation(line: 1130, column: 153, scope: !8540)
!8551 = !DILocation(line: 1130, column: 178, scope: !8540)
!8552 = !DILocation(line: 1130, column: 109, scope: !8540)
!8553 = !DILocation(line: 1130, column: 197, scope: !8491)
!8554 = !DILocation(line: 1130, column: 197, scope: !2774)
!8555 = !DILocation(line: 1130, column: 197, scope: !8556)
!8556 = !DILexicalBlockFile(scope: !2774, file: !4, discriminator: 5)
!8557 = !DILocation(line: 1132, column: 49, scope: !2741)
!8558 = !DILocation(line: 1132, column: 63, scope: !2741)
!8559 = !{!8560, !3861, i64 0}
!8560 = !{!"x509_st", !3861, i64 0, !3861, i64 8, !3861, i64 16, !3893, i64 24, !3893, i64 28, !3861, i64 32, !4956, i64 40, !4103, i64 56, !4103, i64 64, !4103, i64 72, !4103, i64 80, !4103, i64 88, !4103, i64 96, !3861, i64 104, !3861, i64 112, !3861, i64 120, !3861, i64 128, !3861, i64 136, !3861, i64 144, !3861, i64 152, !3861, i64 160, !3862, i64 168, !3861, i64 192}
!8561 = !DILocation(line: 1132, column: 74, scope: !2741)
!8562 = !{!8563, !3861, i64 0}
!8563 = !{!"x509_cinf_st", !3861, i64 0, !3861, i64 8, !3861, i64 16, !3861, i64 24, !3861, i64 32, !3861, i64 40, !3861, i64 48, !3861, i64 56, !3861, i64 64, !3861, i64 72, !8564, i64 80}
!8564 = !{!"ASN1_ENCODING_st", !3861, i64 0, !4103, i64 8, !3893, i64 16}
!8565 = !DILocation(line: 1132, column: 31, scope: !2741)
!8566 = !DILocation(line: 1132, column: 83, scope: !2741)
!8567 = !DILocation(line: 1132, column: 15, scope: !2741)
!8568 = !DILocation(line: 1132, column: 13, scope: !2741)
!8569 = !DILocation(line: 1133, column: 9, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1133, column: 9)
!8571 = !DILocation(line: 1133, column: 17, scope: !8570)
!8572 = !DILocation(line: 1133, column: 9, scope: !2741)
!8573 = !DILocation(line: 1134, column: 9, scope: !8570)
!8574 = !DILocation(line: 1135, column: 30, scope: !2778)
!8575 = !DILocation(line: 1135, column: 49, scope: !2778)
!8576 = !DILocation(line: 1135, column: 9, scope: !2778)
!8577 = !DILocation(line: 1135, column: 58, scope: !2778)
!8578 = !DILocation(line: 1135, column: 9, scope: !2741)
!8579 = !DILocation(line: 1136, column: 9, scope: !2777)
!8580 = !DILocation(line: 1136, column: 14, scope: !8581)
!8581 = !DILexicalBlockFile(scope: !2776, file: !4, discriminator: 1)
!8582 = !DILocation(line: 1136, column: 24, scope: !2776)
!8583 = !DILocation(line: 1136, column: 54, scope: !2776)
!8584 = !DILocation(line: 1136, column: 72, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !2776, file: !4, line: 1136, column: 69)
!8586 = !DILocation(line: 1136, column: 89, scope: !8585)
!8587 = !DILocation(line: 1136, column: 69, scope: !8585)
!8588 = !DILocation(line: 1136, column: 99, scope: !8585)
!8589 = !DILocation(line: 1136, column: 69, scope: !2776)
!8590 = !DILocation(line: 1136, column: 69, scope: !8591)
!8591 = !DILexicalBlockFile(scope: !2776, file: !4, discriminator: 2)
!8592 = !DILocation(line: 1136, column: 130, scope: !8593)
!8593 = !DILexicalBlockFile(scope: !8585, file: !4, discriminator: 3)
!8594 = !DILocation(line: 1136, column: 148, scope: !8585)
!8595 = !DILocation(line: 1136, column: 158, scope: !8585)
!8596 = !DILocation(line: 1136, column: 183, scope: !8585)
!8597 = !DILocation(line: 1136, column: 114, scope: !8585)
!8598 = !DILocation(line: 1136, column: 202, scope: !8599)
!8599 = !DILexicalBlockFile(scope: !2777, file: !4, discriminator: 4)
!8600 = !DILocation(line: 1136, column: 202, scope: !2776)
!8601 = !DILocation(line: 1136, column: 202, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !2776, file: !4, discriminator: 5)
!8603 = !DILocation(line: 1137, column: 9, scope: !2777)
!8604 = !DILocation(line: 1139, column: 5, scope: !2741)
!8605 = !DILocation(line: 1139, column: 10, scope: !8606)
!8606 = !DILexicalBlockFile(scope: !2780, file: !4, discriminator: 1)
!8607 = !DILocation(line: 1139, column: 20, scope: !2780)
!8608 = !DILocation(line: 1139, column: 50, scope: !2780)
!8609 = !DILocation(line: 1139, column: 68, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !2780, file: !4, line: 1139, column: 65)
!8611 = !DILocation(line: 1139, column: 85, scope: !8610)
!8612 = !DILocation(line: 1139, column: 65, scope: !8610)
!8613 = !DILocation(line: 1139, column: 95, scope: !8610)
!8614 = !DILocation(line: 1139, column: 65, scope: !2780)
!8615 = !DILocation(line: 1139, column: 65, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !2780, file: !4, discriminator: 2)
!8617 = !DILocation(line: 1139, column: 126, scope: !8618)
!8618 = !DILexicalBlockFile(scope: !8610, file: !4, discriminator: 3)
!8619 = !DILocation(line: 1139, column: 144, scope: !8610)
!8620 = !DILocation(line: 1139, column: 154, scope: !8610)
!8621 = !DILocation(line: 1139, column: 179, scope: !8610)
!8622 = !DILocation(line: 1139, column: 110, scope: !8610)
!8623 = !DILocation(line: 1139, column: 198, scope: !8491)
!8624 = !DILocation(line: 1139, column: 198, scope: !2780)
!8625 = !DILocation(line: 1139, column: 198, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !2780, file: !4, discriminator: 5)
!8627 = !DILocation(line: 1142, column: 22, scope: !2741)
!8628 = !DILocation(line: 1142, column: 14, scope: !2741)
!8629 = !DILocation(line: 1142, column: 12, scope: !2741)
!8630 = !DILocation(line: 1144, column: 26, scope: !2741)
!8631 = !DILocation(line: 1144, column: 17, scope: !2741)
!8632 = !DILocation(line: 1144, column: 12, scope: !2741)
!8633 = !DILocation(line: 1145, column: 42, scope: !2741)
!8634 = !DILocation(line: 1145, column: 20, scope: !2741)
!8635 = !DILocation(line: 1145, column: 18, scope: !2741)
!8636 = !DILocation(line: 1147, column: 22, scope: !2741)
!8637 = !DILocation(line: 1147, column: 30, scope: !2741)
!8638 = !DILocation(line: 1147, column: 5, scope: !2741)
!8639 = !DILocation(line: 1148, column: 20, scope: !2741)
!8640 = !DILocation(line: 1148, column: 28, scope: !2741)
!8641 = !DILocation(line: 1148, column: 11, scope: !2741)
!8642 = !DILocation(line: 1148, column: 9, scope: !2741)
!8643 = !DILocation(line: 1149, column: 9, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1149, column: 9)
!8645 = !DILocation(line: 1149, column: 13, scope: !8644)
!8646 = !DILocation(line: 1149, column: 9, scope: !2741)
!8647 = !DILocation(line: 1150, column: 9, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !4, line: 1149, column: 18)
!8649 = !DILocation(line: 1151, column: 9, scope: !8648)
!8650 = !DILocation(line: 1153, column: 42, scope: !2741)
!8651 = !DILocation(line: 1153, column: 47, scope: !2741)
!8652 = !DILocation(line: 1153, column: 14, scope: !2741)
!8653 = !DILocation(line: 1153, column: 12, scope: !2741)
!8654 = !DILocation(line: 1154, column: 9, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1154, column: 9)
!8656 = !DILocation(line: 1154, column: 16, scope: !8655)
!8657 = !DILocation(line: 1154, column: 9, scope: !2741)
!8658 = !DILocation(line: 1155, column: 9, scope: !8655)
!8659 = !DILocation(line: 1156, column: 30, scope: !2784)
!8660 = !DILocation(line: 1156, column: 54, scope: !2784)
!8661 = !DILocation(line: 1156, column: 9, scope: !2784)
!8662 = !DILocation(line: 1156, column: 62, scope: !2784)
!8663 = !DILocation(line: 1156, column: 9, scope: !2741)
!8664 = !DILocation(line: 1157, column: 9, scope: !2783)
!8665 = !DILocation(line: 1157, column: 14, scope: !8666)
!8666 = !DILexicalBlockFile(scope: !2782, file: !4, discriminator: 1)
!8667 = !DILocation(line: 1157, column: 24, scope: !2782)
!8668 = !DILocation(line: 1157, column: 54, scope: !2782)
!8669 = !DILocation(line: 1157, column: 71, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !2782, file: !4, line: 1157, column: 68)
!8671 = !DILocation(line: 1157, column: 88, scope: !8670)
!8672 = !DILocation(line: 1157, column: 68, scope: !8670)
!8673 = !DILocation(line: 1157, column: 98, scope: !8670)
!8674 = !DILocation(line: 1157, column: 68, scope: !2782)
!8675 = !DILocation(line: 1157, column: 68, scope: !8676)
!8676 = !DILexicalBlockFile(scope: !2782, file: !4, discriminator: 2)
!8677 = !DILocation(line: 1157, column: 129, scope: !8678)
!8678 = !DILexicalBlockFile(scope: !8670, file: !4, discriminator: 3)
!8679 = !DILocation(line: 1157, column: 147, scope: !8670)
!8680 = !DILocation(line: 1157, column: 157, scope: !8670)
!8681 = !DILocation(line: 1157, column: 182, scope: !8670)
!8682 = !DILocation(line: 1157, column: 113, scope: !8670)
!8683 = !DILocation(line: 1157, column: 201, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !2783, file: !4, discriminator: 4)
!8685 = !DILocation(line: 1157, column: 201, scope: !2782)
!8686 = !DILocation(line: 1157, column: 201, scope: !8687)
!8687 = !DILexicalBlockFile(scope: !2782, file: !4, discriminator: 5)
!8688 = !DILocation(line: 1158, column: 9, scope: !2783)
!8689 = !DILocation(line: 1160, column: 5, scope: !2741)
!8690 = !DILocation(line: 1160, column: 10, scope: !8691)
!8691 = !DILexicalBlockFile(scope: !2786, file: !4, discriminator: 1)
!8692 = !DILocation(line: 1160, column: 20, scope: !2786)
!8693 = !DILocation(line: 1160, column: 50, scope: !2786)
!8694 = !DILocation(line: 1160, column: 67, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !2786, file: !4, line: 1160, column: 64)
!8696 = !DILocation(line: 1160, column: 84, scope: !8695)
!8697 = !DILocation(line: 1160, column: 64, scope: !8695)
!8698 = !DILocation(line: 1160, column: 94, scope: !8695)
!8699 = !DILocation(line: 1160, column: 64, scope: !2786)
!8700 = !DILocation(line: 1160, column: 64, scope: !8701)
!8701 = !DILexicalBlockFile(scope: !2786, file: !4, discriminator: 2)
!8702 = !DILocation(line: 1160, column: 125, scope: !8703)
!8703 = !DILexicalBlockFile(scope: !8695, file: !4, discriminator: 3)
!8704 = !DILocation(line: 1160, column: 143, scope: !8695)
!8705 = !DILocation(line: 1160, column: 153, scope: !8695)
!8706 = !DILocation(line: 1160, column: 178, scope: !8695)
!8707 = !DILocation(line: 1160, column: 109, scope: !8695)
!8708 = !DILocation(line: 1160, column: 197, scope: !8491)
!8709 = !DILocation(line: 1160, column: 197, scope: !2786)
!8710 = !DILocation(line: 1160, column: 197, scope: !8711)
!8711 = !DILexicalBlockFile(scope: !2786, file: !4, discriminator: 5)
!8712 = !DILocation(line: 1162, column: 26, scope: !2741)
!8713 = !DILocation(line: 1162, column: 17, scope: !2741)
!8714 = !DILocation(line: 1162, column: 12, scope: !2741)
!8715 = !DILocation(line: 1163, column: 19, scope: !2741)
!8716 = !DILocation(line: 1163, column: 33, scope: !2741)
!8717 = !DILocation(line: 1163, column: 44, scope: !2741)
!8718 = !{!8563, !3861, i64 32}
!8719 = !DILocation(line: 1163, column: 54, scope: !2741)
!8720 = !{!8721, !3861, i64 0}
!8721 = !{!"X509_val_st", !3861, i64 0, !3861, i64 8}
!8722 = !DILocation(line: 1163, column: 15, scope: !2741)
!8723 = !DILocation(line: 1164, column: 21, scope: !2741)
!8724 = !DILocation(line: 1164, column: 29, scope: !2741)
!8725 = !DILocation(line: 1164, column: 5, scope: !2741)
!8726 = !DILocation(line: 1165, column: 20, scope: !2741)
!8727 = !DILocation(line: 1165, column: 28, scope: !2741)
!8728 = !DILocation(line: 1165, column: 11, scope: !2741)
!8729 = !DILocation(line: 1165, column: 9, scope: !2741)
!8730 = !DILocation(line: 1166, column: 9, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1166, column: 9)
!8732 = !DILocation(line: 1166, column: 13, scope: !8731)
!8733 = !DILocation(line: 1166, column: 9, scope: !2741)
!8734 = !DILocation(line: 1167, column: 9, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8731, file: !4, line: 1166, column: 18)
!8736 = !DILocation(line: 1168, column: 9, scope: !8735)
!8737 = !DILocation(line: 1170, column: 46, scope: !2741)
!8738 = !DILocation(line: 1170, column: 51, scope: !2741)
!8739 = !DILocation(line: 1170, column: 18, scope: !2741)
!8740 = !DILocation(line: 1170, column: 16, scope: !2741)
!8741 = !DILocation(line: 1171, column: 9, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1171, column: 9)
!8743 = !DILocation(line: 1171, column: 20, scope: !8742)
!8744 = !DILocation(line: 1171, column: 9, scope: !2741)
!8745 = !DILocation(line: 1172, column: 9, scope: !8742)
!8746 = !DILocation(line: 1173, column: 30, scope: !2790)
!8747 = !DILocation(line: 1173, column: 51, scope: !2790)
!8748 = !DILocation(line: 1173, column: 9, scope: !2790)
!8749 = !DILocation(line: 1173, column: 63, scope: !2790)
!8750 = !DILocation(line: 1173, column: 9, scope: !2741)
!8751 = !DILocation(line: 1174, column: 9, scope: !2789)
!8752 = !DILocation(line: 1174, column: 14, scope: !8753)
!8753 = !DILexicalBlockFile(scope: !2788, file: !4, discriminator: 1)
!8754 = !DILocation(line: 1174, column: 24, scope: !2788)
!8755 = !DILocation(line: 1174, column: 54, scope: !2788)
!8756 = !DILocation(line: 1174, column: 75, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !2788, file: !4, line: 1174, column: 72)
!8758 = !DILocation(line: 1174, column: 92, scope: !8757)
!8759 = !DILocation(line: 1174, column: 72, scope: !8757)
!8760 = !DILocation(line: 1174, column: 102, scope: !8757)
!8761 = !DILocation(line: 1174, column: 72, scope: !2788)
!8762 = !DILocation(line: 1174, column: 72, scope: !8763)
!8763 = !DILexicalBlockFile(scope: !2788, file: !4, discriminator: 2)
!8764 = !DILocation(line: 1174, column: 133, scope: !8765)
!8765 = !DILexicalBlockFile(scope: !8757, file: !4, discriminator: 3)
!8766 = !DILocation(line: 1174, column: 151, scope: !8757)
!8767 = !DILocation(line: 1174, column: 161, scope: !8757)
!8768 = !DILocation(line: 1174, column: 186, scope: !8757)
!8769 = !DILocation(line: 1174, column: 117, scope: !8757)
!8770 = !DILocation(line: 1174, column: 205, scope: !8771)
!8771 = !DILexicalBlockFile(scope: !2789, file: !4, discriminator: 4)
!8772 = !DILocation(line: 1174, column: 205, scope: !2788)
!8773 = !DILocation(line: 1174, column: 205, scope: !8774)
!8774 = !DILexicalBlockFile(scope: !2788, file: !4, discriminator: 5)
!8775 = !DILocation(line: 1175, column: 9, scope: !2789)
!8776 = !DILocation(line: 1177, column: 5, scope: !2741)
!8777 = !DILocation(line: 1177, column: 10, scope: !8778)
!8778 = !DILexicalBlockFile(scope: !2792, file: !4, discriminator: 1)
!8779 = !DILocation(line: 1177, column: 20, scope: !2792)
!8780 = !DILocation(line: 1177, column: 50, scope: !2792)
!8781 = !DILocation(line: 1177, column: 71, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !2792, file: !4, line: 1177, column: 68)
!8783 = !DILocation(line: 1177, column: 88, scope: !8782)
!8784 = !DILocation(line: 1177, column: 68, scope: !8782)
!8785 = !DILocation(line: 1177, column: 98, scope: !8782)
!8786 = !DILocation(line: 1177, column: 68, scope: !2792)
!8787 = !DILocation(line: 1177, column: 68, scope: !8788)
!8788 = !DILexicalBlockFile(scope: !2792, file: !4, discriminator: 2)
!8789 = !DILocation(line: 1177, column: 129, scope: !8790)
!8790 = !DILexicalBlockFile(scope: !8782, file: !4, discriminator: 3)
!8791 = !DILocation(line: 1177, column: 147, scope: !8782)
!8792 = !DILocation(line: 1177, column: 157, scope: !8782)
!8793 = !DILocation(line: 1177, column: 182, scope: !8782)
!8794 = !DILocation(line: 1177, column: 113, scope: !8782)
!8795 = !DILocation(line: 1177, column: 201, scope: !8491)
!8796 = !DILocation(line: 1177, column: 201, scope: !2792)
!8797 = !DILocation(line: 1177, column: 201, scope: !8798)
!8798 = !DILexicalBlockFile(scope: !2792, file: !4, discriminator: 5)
!8799 = !DILocation(line: 1179, column: 26, scope: !2741)
!8800 = !DILocation(line: 1179, column: 17, scope: !2741)
!8801 = !DILocation(line: 1179, column: 12, scope: !2741)
!8802 = !DILocation(line: 1180, column: 18, scope: !2741)
!8803 = !DILocation(line: 1180, column: 32, scope: !2741)
!8804 = !DILocation(line: 1180, column: 43, scope: !2741)
!8805 = !DILocation(line: 1180, column: 53, scope: !2741)
!8806 = !{!8721, !3861, i64 8}
!8807 = !DILocation(line: 1180, column: 14, scope: !2741)
!8808 = !DILocation(line: 1181, column: 21, scope: !2741)
!8809 = !DILocation(line: 1181, column: 29, scope: !2741)
!8810 = !DILocation(line: 1181, column: 5, scope: !2741)
!8811 = !DILocation(line: 1182, column: 20, scope: !2741)
!8812 = !DILocation(line: 1182, column: 28, scope: !2741)
!8813 = !DILocation(line: 1182, column: 11, scope: !2741)
!8814 = !DILocation(line: 1182, column: 9, scope: !2741)
!8815 = !DILocation(line: 1183, column: 9, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1183, column: 9)
!8817 = !DILocation(line: 1183, column: 13, scope: !8816)
!8818 = !DILocation(line: 1183, column: 9, scope: !2741)
!8819 = !DILocation(line: 1184, column: 9, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8816, file: !4, line: 1183, column: 18)
!8821 = !DILocation(line: 1185, column: 9, scope: !8820)
!8822 = !DILocation(line: 1187, column: 45, scope: !2741)
!8823 = !DILocation(line: 1187, column: 50, scope: !2741)
!8824 = !DILocation(line: 1187, column: 17, scope: !2741)
!8825 = !DILocation(line: 1187, column: 15, scope: !2741)
!8826 = !DILocation(line: 1188, column: 9, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1188, column: 9)
!8828 = !DILocation(line: 1188, column: 19, scope: !8827)
!8829 = !DILocation(line: 1188, column: 9, scope: !2741)
!8830 = !DILocation(line: 1189, column: 9, scope: !8827)
!8831 = !DILocation(line: 1190, column: 30, scope: !2796)
!8832 = !DILocation(line: 1190, column: 50, scope: !2796)
!8833 = !DILocation(line: 1190, column: 9, scope: !2796)
!8834 = !DILocation(line: 1190, column: 61, scope: !2796)
!8835 = !DILocation(line: 1190, column: 9, scope: !2741)
!8836 = !DILocation(line: 1191, column: 9, scope: !2795)
!8837 = !DILocation(line: 1191, column: 14, scope: !8838)
!8838 = !DILexicalBlockFile(scope: !2794, file: !4, discriminator: 1)
!8839 = !DILocation(line: 1191, column: 24, scope: !2794)
!8840 = !DILocation(line: 1191, column: 54, scope: !2794)
!8841 = !DILocation(line: 1191, column: 74, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !2794, file: !4, line: 1191, column: 71)
!8843 = !DILocation(line: 1191, column: 91, scope: !8842)
!8844 = !DILocation(line: 1191, column: 71, scope: !8842)
!8845 = !DILocation(line: 1191, column: 101, scope: !8842)
!8846 = !DILocation(line: 1191, column: 71, scope: !2794)
!8847 = !DILocation(line: 1191, column: 71, scope: !8848)
!8848 = !DILexicalBlockFile(scope: !2794, file: !4, discriminator: 2)
!8849 = !DILocation(line: 1191, column: 132, scope: !8850)
!8850 = !DILexicalBlockFile(scope: !8842, file: !4, discriminator: 3)
!8851 = !DILocation(line: 1191, column: 150, scope: !8842)
!8852 = !DILocation(line: 1191, column: 160, scope: !8842)
!8853 = !DILocation(line: 1191, column: 185, scope: !8842)
!8854 = !DILocation(line: 1191, column: 116, scope: !8842)
!8855 = !DILocation(line: 1191, column: 204, scope: !8856)
!8856 = !DILexicalBlockFile(scope: !2795, file: !4, discriminator: 4)
!8857 = !DILocation(line: 1191, column: 204, scope: !2794)
!8858 = !DILocation(line: 1191, column: 204, scope: !8859)
!8859 = !DILexicalBlockFile(scope: !2794, file: !4, discriminator: 5)
!8860 = !DILocation(line: 1192, column: 9, scope: !2795)
!8861 = !DILocation(line: 1194, column: 5, scope: !2741)
!8862 = !DILocation(line: 1194, column: 10, scope: !8863)
!8863 = !DILexicalBlockFile(scope: !2798, file: !4, discriminator: 1)
!8864 = !DILocation(line: 1194, column: 20, scope: !2798)
!8865 = !DILocation(line: 1194, column: 50, scope: !2798)
!8866 = !DILocation(line: 1194, column: 70, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !2798, file: !4, line: 1194, column: 67)
!8868 = !DILocation(line: 1194, column: 87, scope: !8867)
!8869 = !DILocation(line: 1194, column: 67, scope: !8867)
!8870 = !DILocation(line: 1194, column: 97, scope: !8867)
!8871 = !DILocation(line: 1194, column: 67, scope: !2798)
!8872 = !DILocation(line: 1194, column: 67, scope: !8873)
!8873 = !DILexicalBlockFile(scope: !2798, file: !4, discriminator: 2)
!8874 = !DILocation(line: 1194, column: 128, scope: !8875)
!8875 = !DILexicalBlockFile(scope: !8867, file: !4, discriminator: 3)
!8876 = !DILocation(line: 1194, column: 146, scope: !8867)
!8877 = !DILocation(line: 1194, column: 156, scope: !8867)
!8878 = !DILocation(line: 1194, column: 181, scope: !8867)
!8879 = !DILocation(line: 1194, column: 112, scope: !8867)
!8880 = !DILocation(line: 1194, column: 200, scope: !8491)
!8881 = !DILocation(line: 1194, column: 200, scope: !2798)
!8882 = !DILocation(line: 1194, column: 200, scope: !8883)
!8883 = !DILexicalBlockFile(scope: !2798, file: !4, discriminator: 5)
!8884 = !DILocation(line: 1198, column: 42, scope: !2741)
!8885 = !DILocation(line: 1198, column: 22, scope: !2741)
!8886 = !DILocation(line: 1198, column: 20, scope: !2741)
!8887 = !DILocation(line: 1199, column: 9, scope: !2805)
!8888 = !DILocation(line: 1199, column: 24, scope: !2805)
!8889 = !DILocation(line: 1199, column: 9, scope: !2741)
!8890 = !DILocation(line: 1200, column: 9, scope: !2805)
!8891 = !DILocation(line: 1201, column: 14, scope: !2804)
!8892 = !DILocation(line: 1201, column: 29, scope: !2804)
!8893 = !DILocation(line: 1201, column: 14, scope: !2805)
!8894 = !DILocation(line: 1202, column: 34, scope: !2802)
!8895 = !DILocation(line: 1203, column: 34, scope: !2802)
!8896 = !DILocation(line: 1202, column: 13, scope: !2802)
!8897 = !DILocation(line: 1203, column: 50, scope: !2802)
!8898 = !DILocation(line: 1202, column: 13, scope: !2803)
!8899 = !DILocation(line: 1204, column: 13, scope: !2801)
!8900 = !DILocation(line: 1204, column: 18, scope: !8901)
!8901 = !DILexicalBlockFile(scope: !2800, file: !4, discriminator: 1)
!8902 = !DILocation(line: 1204, column: 28, scope: !2800)
!8903 = !DILocation(line: 1204, column: 58, scope: !2800)
!8904 = !DILocation(line: 1204, column: 83, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !2800, file: !4, line: 1204, column: 80)
!8906 = !DILocation(line: 1204, column: 100, scope: !8905)
!8907 = !DILocation(line: 1204, column: 80, scope: !8905)
!8908 = !DILocation(line: 1204, column: 110, scope: !8905)
!8909 = !DILocation(line: 1204, column: 80, scope: !2800)
!8910 = !DILocation(line: 1204, column: 80, scope: !8911)
!8911 = !DILexicalBlockFile(scope: !2800, file: !4, discriminator: 2)
!8912 = !DILocation(line: 1204, column: 141, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !8905, file: !4, discriminator: 3)
!8914 = !DILocation(line: 1204, column: 159, scope: !8905)
!8915 = !DILocation(line: 1204, column: 169, scope: !8905)
!8916 = !DILocation(line: 1204, column: 194, scope: !8905)
!8917 = !DILocation(line: 1204, column: 125, scope: !8905)
!8918 = !DILocation(line: 1204, column: 213, scope: !8919)
!8919 = !DILexicalBlockFile(scope: !2801, file: !4, discriminator: 4)
!8920 = !DILocation(line: 1204, column: 213, scope: !2800)
!8921 = !DILocation(line: 1204, column: 213, scope: !8922)
!8922 = !DILexicalBlockFile(scope: !2800, file: !4, discriminator: 5)
!8923 = !DILocation(line: 1205, column: 13, scope: !2801)
!8924 = !DILocation(line: 1207, column: 9, scope: !2803)
!8925 = !DILocation(line: 1207, column: 14, scope: !8926)
!8926 = !DILexicalBlockFile(scope: !2807, file: !4, discriminator: 1)
!8927 = !DILocation(line: 1207, column: 24, scope: !2807)
!8928 = !DILocation(line: 1207, column: 54, scope: !2807)
!8929 = !DILocation(line: 1207, column: 79, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !2807, file: !4, line: 1207, column: 76)
!8931 = !DILocation(line: 1207, column: 96, scope: !8930)
!8932 = !DILocation(line: 1207, column: 76, scope: !8930)
!8933 = !DILocation(line: 1207, column: 106, scope: !8930)
!8934 = !DILocation(line: 1207, column: 76, scope: !2807)
!8935 = !DILocation(line: 1207, column: 76, scope: !8936)
!8936 = !DILexicalBlockFile(scope: !2807, file: !4, discriminator: 2)
!8937 = !DILocation(line: 1207, column: 137, scope: !8938)
!8938 = !DILexicalBlockFile(scope: !8930, file: !4, discriminator: 3)
!8939 = !DILocation(line: 1207, column: 155, scope: !8930)
!8940 = !DILocation(line: 1207, column: 165, scope: !8930)
!8941 = !DILocation(line: 1207, column: 190, scope: !8930)
!8942 = !DILocation(line: 1207, column: 121, scope: !8930)
!8943 = !DILocation(line: 1207, column: 209, scope: !8944)
!8944 = !DILexicalBlockFile(scope: !2803, file: !4, discriminator: 4)
!8945 = !DILocation(line: 1207, column: 209, scope: !2807)
!8946 = !DILocation(line: 1207, column: 209, scope: !8947)
!8947 = !DILexicalBlockFile(scope: !2807, file: !4, discriminator: 5)
!8948 = !DILocation(line: 1208, column: 5, scope: !2803)
!8949 = !DILocation(line: 1211, column: 24, scope: !2741)
!8950 = !DILocation(line: 1211, column: 11, scope: !2741)
!8951 = !DILocation(line: 1211, column: 9, scope: !2741)
!8952 = !DILocation(line: 1212, column: 9, scope: !2812)
!8953 = !DILocation(line: 1212, column: 13, scope: !2812)
!8954 = !DILocation(line: 1212, column: 9, scope: !2741)
!8955 = !DILocation(line: 1213, column: 9, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !2812, file: !4, line: 1212, column: 28)
!8957 = !DILocation(line: 1214, column: 16, scope: !2811)
!8958 = !DILocation(line: 1214, column: 20, scope: !2811)
!8959 = !DILocation(line: 1214, column: 16, scope: !2812)
!8960 = !DILocation(line: 1215, column: 39, scope: !2810)
!8961 = !DILocation(line: 1215, column: 55, scope: !2810)
!8962 = !DILocation(line: 1215, column: 18, scope: !2810)
!8963 = !DILocation(line: 1215, column: 16, scope: !2810)
!8964 = !DILocation(line: 1216, column: 9, scope: !2810)
!8965 = !DILocation(line: 1216, column: 14, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !2809, file: !4, discriminator: 1)
!8967 = !DILocation(line: 1216, column: 24, scope: !2809)
!8968 = !DILocation(line: 1216, column: 54, scope: !2809)
!8969 = !DILocation(line: 1216, column: 68, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !2809, file: !4, line: 1216, column: 65)
!8971 = !DILocation(line: 1216, column: 85, scope: !8970)
!8972 = !DILocation(line: 1216, column: 65, scope: !8970)
!8973 = !DILocation(line: 1216, column: 95, scope: !8970)
!8974 = !DILocation(line: 1216, column: 65, scope: !2809)
!8975 = !DILocation(line: 1216, column: 65, scope: !8976)
!8976 = !DILexicalBlockFile(scope: !2809, file: !4, discriminator: 2)
!8977 = !DILocation(line: 1216, column: 126, scope: !8978)
!8978 = !DILexicalBlockFile(scope: !8970, file: !4, discriminator: 3)
!8979 = !DILocation(line: 1216, column: 144, scope: !8970)
!8980 = !DILocation(line: 1216, column: 154, scope: !8970)
!8981 = !DILocation(line: 1216, column: 179, scope: !8970)
!8982 = !DILocation(line: 1216, column: 110, scope: !8970)
!8983 = !DILocation(line: 1216, column: 198, scope: !8984)
!8984 = !DILexicalBlockFile(scope: !2810, file: !4, discriminator: 4)
!8985 = !DILocation(line: 1216, column: 198, scope: !2809)
!8986 = !DILocation(line: 1216, column: 198, scope: !8987)
!8987 = !DILexicalBlockFile(scope: !2809, file: !4, discriminator: 5)
!8988 = !DILocation(line: 1217, column: 13, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !2810, file: !4, line: 1217, column: 13)
!8990 = !DILocation(line: 1217, column: 20, scope: !8989)
!8991 = !DILocation(line: 1217, column: 13, scope: !2810)
!8992 = !DILocation(line: 1218, column: 13, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !4, line: 1217, column: 25)
!8994 = !DILocation(line: 1220, column: 5, scope: !2810)
!8995 = !DILocation(line: 1222, column: 24, scope: !2741)
!8996 = !DILocation(line: 1222, column: 11, scope: !2741)
!8997 = !DILocation(line: 1222, column: 9, scope: !2741)
!8998 = !DILocation(line: 1223, column: 9, scope: !2817)
!8999 = !DILocation(line: 1223, column: 13, scope: !2817)
!9000 = !DILocation(line: 1223, column: 9, scope: !2741)
!9001 = !DILocation(line: 1224, column: 9, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !2817, file: !4, line: 1223, column: 28)
!9003 = !DILocation(line: 1225, column: 16, scope: !2816)
!9004 = !DILocation(line: 1225, column: 20, scope: !2816)
!9005 = !DILocation(line: 1225, column: 16, scope: !2817)
!9006 = !DILocation(line: 1226, column: 39, scope: !2815)
!9007 = !DILocation(line: 1226, column: 60, scope: !2815)
!9008 = !DILocation(line: 1226, column: 18, scope: !2815)
!9009 = !DILocation(line: 1226, column: 16, scope: !2815)
!9010 = !DILocation(line: 1227, column: 9, scope: !2815)
!9011 = !DILocation(line: 1227, column: 14, scope: !9012)
!9012 = !DILexicalBlockFile(scope: !2814, file: !4, discriminator: 1)
!9013 = !DILocation(line: 1227, column: 24, scope: !2814)
!9014 = !DILocation(line: 1227, column: 54, scope: !2814)
!9015 = !DILocation(line: 1227, column: 68, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !2814, file: !4, line: 1227, column: 65)
!9017 = !DILocation(line: 1227, column: 85, scope: !9016)
!9018 = !DILocation(line: 1227, column: 65, scope: !9016)
!9019 = !DILocation(line: 1227, column: 95, scope: !9016)
!9020 = !DILocation(line: 1227, column: 65, scope: !2814)
!9021 = !DILocation(line: 1227, column: 65, scope: !9022)
!9022 = !DILexicalBlockFile(scope: !2814, file: !4, discriminator: 2)
!9023 = !DILocation(line: 1227, column: 126, scope: !9024)
!9024 = !DILexicalBlockFile(scope: !9016, file: !4, discriminator: 3)
!9025 = !DILocation(line: 1227, column: 144, scope: !9016)
!9026 = !DILocation(line: 1227, column: 154, scope: !9016)
!9027 = !DILocation(line: 1227, column: 179, scope: !9016)
!9028 = !DILocation(line: 1227, column: 110, scope: !9016)
!9029 = !DILocation(line: 1227, column: 198, scope: !9030)
!9030 = !DILexicalBlockFile(scope: !2815, file: !4, discriminator: 4)
!9031 = !DILocation(line: 1227, column: 198, scope: !2814)
!9032 = !DILocation(line: 1227, column: 198, scope: !9033)
!9033 = !DILexicalBlockFile(scope: !2814, file: !4, discriminator: 5)
!9034 = !DILocation(line: 1228, column: 13, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !2815, file: !4, line: 1228, column: 13)
!9036 = !DILocation(line: 1228, column: 20, scope: !9035)
!9037 = !DILocation(line: 1228, column: 13, scope: !2815)
!9038 = !DILocation(line: 1229, column: 13, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9035, file: !4, line: 1228, column: 25)
!9040 = !DILocation(line: 1231, column: 5, scope: !2815)
!9041 = !DILocation(line: 1234, column: 23, scope: !2741)
!9042 = !DILocation(line: 1234, column: 11, scope: !2741)
!9043 = !DILocation(line: 1234, column: 9, scope: !2741)
!9044 = !DILocation(line: 1235, column: 9, scope: !2822)
!9045 = !DILocation(line: 1235, column: 13, scope: !2822)
!9046 = !DILocation(line: 1235, column: 9, scope: !2741)
!9047 = !DILocation(line: 1236, column: 9, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !2822, file: !4, line: 1235, column: 28)
!9049 = !DILocation(line: 1237, column: 16, scope: !2821)
!9050 = !DILocation(line: 1237, column: 20, scope: !2821)
!9051 = !DILocation(line: 1237, column: 16, scope: !2822)
!9052 = !DILocation(line: 1238, column: 39, scope: !2820)
!9053 = !DILocation(line: 1238, column: 72, scope: !2820)
!9054 = !DILocation(line: 1238, column: 18, scope: !2820)
!9055 = !DILocation(line: 1238, column: 16, scope: !2820)
!9056 = !DILocation(line: 1239, column: 9, scope: !2820)
!9057 = !DILocation(line: 1239, column: 14, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !2819, file: !4, discriminator: 1)
!9059 = !DILocation(line: 1239, column: 24, scope: !2819)
!9060 = !DILocation(line: 1239, column: 54, scope: !2819)
!9061 = !DILocation(line: 1239, column: 68, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !2819, file: !4, line: 1239, column: 65)
!9063 = !DILocation(line: 1239, column: 85, scope: !9062)
!9064 = !DILocation(line: 1239, column: 65, scope: !9062)
!9065 = !DILocation(line: 1239, column: 95, scope: !9062)
!9066 = !DILocation(line: 1239, column: 65, scope: !2819)
!9067 = !DILocation(line: 1239, column: 65, scope: !9068)
!9068 = !DILexicalBlockFile(scope: !2819, file: !4, discriminator: 2)
!9069 = !DILocation(line: 1239, column: 126, scope: !9070)
!9070 = !DILexicalBlockFile(scope: !9062, file: !4, discriminator: 3)
!9071 = !DILocation(line: 1239, column: 144, scope: !9062)
!9072 = !DILocation(line: 1239, column: 154, scope: !9062)
!9073 = !DILocation(line: 1239, column: 179, scope: !9062)
!9074 = !DILocation(line: 1239, column: 110, scope: !9062)
!9075 = !DILocation(line: 1239, column: 198, scope: !9076)
!9076 = !DILexicalBlockFile(scope: !2820, file: !4, discriminator: 4)
!9077 = !DILocation(line: 1239, column: 198, scope: !2819)
!9078 = !DILocation(line: 1239, column: 198, scope: !9079)
!9079 = !DILexicalBlockFile(scope: !2819, file: !4, discriminator: 5)
!9080 = !DILocation(line: 1240, column: 13, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !2820, file: !4, line: 1240, column: 13)
!9082 = !DILocation(line: 1240, column: 20, scope: !9081)
!9083 = !DILocation(line: 1240, column: 13, scope: !2820)
!9084 = !DILocation(line: 1241, column: 13, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9081, file: !4, line: 1240, column: 25)
!9086 = !DILocation(line: 1243, column: 5, scope: !2820)
!9087 = !DILocation(line: 1245, column: 14, scope: !2741)
!9088 = !DILocation(line: 1245, column: 5, scope: !2741)
!9089 = !DILocation(line: 1246, column: 12, scope: !2741)
!9090 = !DILocation(line: 1246, column: 5, scope: !2741)
!9091 = !DILocation(line: 1249, column: 9, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !2741, file: !4, line: 1249, column: 9)
!9093 = !DILocation(line: 1249, column: 16, scope: !9092)
!9094 = !DILocation(line: 1249, column: 9, scope: !2741)
!9095 = !DILocation(line: 1250, column: 18, scope: !9092)
!9096 = !DILocation(line: 1250, column: 9, scope: !9092)
!9097 = !DILocation(line: 1249, column: 28, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !9092, file: !4, discriminator: 1)
!9099 = !DILocation(line: 1252, column: 5, scope: !2741)
!9100 = !DILocation(line: 1252, column: 10, scope: !9101)
!9101 = !DILexicalBlockFile(scope: !2824, file: !4, discriminator: 1)
!9102 = !DILocation(line: 1252, column: 20, scope: !2824)
!9103 = !DILocation(line: 1252, column: 51, scope: !2824)
!9104 = !DILocation(line: 1252, column: 64, scope: !2827)
!9105 = !DILocation(line: 1252, column: 80, scope: !2827)
!9106 = !DILocation(line: 1252, column: 64, scope: !2824)
!9107 = !DILocation(line: 1252, column: 95, scope: !9108)
!9108 = !DILexicalBlockFile(scope: !2827, file: !4, discriminator: 2)
!9109 = !DILocation(line: 1252, column: 100, scope: !9110)
!9110 = !DILexicalBlockFile(scope: !2826, file: !4, discriminator: 4)
!9111 = !DILocation(line: 1252, column: 110, scope: !2826)
!9112 = !DILocation(line: 1252, column: 140, scope: !2826)
!9113 = !DILocation(line: 1252, column: 166, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !2826, file: !4, line: 1252, column: 163)
!9115 = !DILocation(line: 1252, column: 183, scope: !9114)
!9116 = !DILocation(line: 1252, column: 163, scope: !9114)
!9117 = !DILocation(line: 1252, column: 193, scope: !9114)
!9118 = !DILocation(line: 1252, column: 163, scope: !2826)
!9119 = !DILocation(line: 1252, column: 163, scope: !9120)
!9120 = !DILexicalBlockFile(scope: !2826, file: !4, discriminator: 5)
!9121 = !DILocation(line: 1252, column: 224, scope: !9122)
!9122 = !DILexicalBlockFile(scope: !9114, file: !4, discriminator: 6)
!9123 = !DILocation(line: 1252, column: 242, scope: !9114)
!9124 = !DILocation(line: 1252, column: 252, scope: !9114)
!9125 = !DILocation(line: 1252, column: 277, scope: !9114)
!9126 = !DILocation(line: 1252, column: 208, scope: !9114)
!9127 = !DILocation(line: 1252, column: 296, scope: !9128)
!9128 = !DILexicalBlockFile(scope: !2827, file: !4, discriminator: 7)
!9129 = !DILocation(line: 1252, column: 296, scope: !2826)
!9130 = !DILocation(line: 1252, column: 296, scope: !9131)
!9131 = !DILexicalBlockFile(scope: !2826, file: !4, discriminator: 8)
!9132 = !DILocation(line: 1252, column: 296, scope: !9133)
!9133 = !DILexicalBlockFile(scope: !2826, file: !4, discriminator: 9)
!9134 = !DILocation(line: 1252, column: 309, scope: !9135)
!9135 = !DILexicalBlockFile(scope: !9136, file: !4, discriminator: 10)
!9136 = !DILexicalBlockFile(scope: !2741, file: !4, discriminator: 3)
!9137 = !DILocation(line: 1252, column: 309, scope: !2824)
!9138 = !DILocation(line: 1252, column: 309, scope: !9139)
!9139 = !DILexicalBlockFile(scope: !2824, file: !4, discriminator: 11)
!9140 = !DILocation(line: 1253, column: 5, scope: !2741)
!9141 = !DILocation(line: 1254, column: 1, scope: !2741)
!9142 = !DILocation(line: 662, column: 41, scope: !2828)
!9143 = !DILocation(line: 664, column: 5, scope: !2828)
!9144 = !DILocation(line: 664, column: 15, scope: !2828)
!9145 = !DILocation(line: 665, column: 5, scope: !2828)
!9146 = !DILocation(line: 665, column: 15, scope: !2828)
!9147 = !DILocation(line: 666, column: 5, scope: !2828)
!9148 = !DILocation(line: 666, column: 15, scope: !2828)
!9149 = !DILocation(line: 667, column: 5, scope: !2828)
!9150 = !DILocation(line: 667, column: 15, scope: !2828)
!9151 = !DILocation(line: 668, column: 5, scope: !2828)
!9152 = !DILocation(line: 668, column: 9, scope: !2828)
!9153 = !DILocation(line: 668, column: 45, scope: !2828)
!9154 = !DILocation(line: 668, column: 23, scope: !2828)
!9155 = !DILocation(line: 669, column: 5, scope: !2828)
!9156 = !DILocation(line: 669, column: 22, scope: !2828)
!9157 = !DILocation(line: 670, column: 5, scope: !2828)
!9158 = !DILocation(line: 670, column: 18, scope: !2828)
!9159 = !DILocation(line: 671, column: 5, scope: !2828)
!9160 = !DILocation(line: 671, column: 18, scope: !2828)
!9161 = !DILocation(line: 672, column: 5, scope: !2828)
!9162 = !DILocation(line: 672, column: 9, scope: !2828)
!9163 = !DILocation(line: 673, column: 5, scope: !2828)
!9164 = !DILocation(line: 673, column: 9, scope: !2828)
!9165 = !DILocation(line: 674, column: 5, scope: !2828)
!9166 = !DILocation(line: 674, column: 9, scope: !2828)
!9167 = !DILocation(line: 676, column: 10, scope: !2828)
!9168 = !DILocation(line: 676, column: 8, scope: !2828)
!9169 = !DILocation(line: 677, column: 9, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 677, column: 9)
!9171 = !DILocation(line: 677, column: 12, scope: !9170)
!9172 = !DILocation(line: 677, column: 9, scope: !2828)
!9173 = !DILocation(line: 678, column: 9, scope: !9170)
!9174 = !DILocation(line: 680, column: 11, scope: !2828)
!9175 = !DILocation(line: 680, column: 9, scope: !2828)
!9176 = !DILocation(line: 681, column: 9, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 681, column: 9)
!9178 = !DILocation(line: 681, column: 13, scope: !9177)
!9179 = !DILocation(line: 681, column: 9, scope: !2828)
!9180 = !DILocation(line: 682, column: 9, scope: !9177)
!9181 = !DILocation(line: 684, column: 24, scope: !2860)
!9182 = !DILocation(line: 684, column: 10, scope: !2860)
!9183 = !DILocation(line: 685, column: 10, scope: !2859)
!9184 = !DILocation(line: 685, column: 26, scope: !2859)
!9185 = !DILocation(line: 685, column: 24, scope: !2859)
!9186 = !DILocation(line: 684, column: 5, scope: !2860)
!9187 = !DILocation(line: 688, column: 37, scope: !2858)
!9188 = !DILocation(line: 688, column: 44, scope: !2858)
!9189 = !DILocation(line: 688, column: 17, scope: !2858)
!9190 = !DILocation(line: 688, column: 15, scope: !2858)
!9191 = !DILocation(line: 691, column: 13, scope: !2857)
!9192 = !DILocation(line: 691, column: 23, scope: !2857)
!9193 = !DILocation(line: 691, column: 13, scope: !2858)
!9194 = !DILocation(line: 692, column: 17, scope: !2855)
!9195 = !DILocation(line: 692, column: 30, scope: !2855)
!9196 = !DILocation(line: 692, column: 37, scope: !2855)
!9197 = !{!9198, !3893, i64 16}
!9198 = !{!"X509_name_entry_st", !3861, i64 0, !3861, i64 8, !3893, i64 16, !3893, i64 20}
!9199 = !DILocation(line: 692, column: 27, scope: !2855)
!9200 = !DILocation(line: 692, column: 17, scope: !2856)
!9201 = !DILocation(line: 695, column: 39, scope: !2854)
!9202 = !DILocation(line: 695, column: 24, scope: !2854)
!9203 = !DILocation(line: 695, column: 22, scope: !2854)
!9204 = !DILocation(line: 696, column: 17, scope: !2854)
!9205 = !DILocation(line: 696, column: 22, scope: !9206)
!9206 = !DILexicalBlockFile(scope: !2853, file: !4, discriminator: 1)
!9207 = !DILocation(line: 696, column: 32, scope: !2853)
!9208 = !DILocation(line: 696, column: 62, scope: !2853)
!9209 = !DILocation(line: 696, column: 76, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !2853, file: !4, line: 696, column: 73)
!9211 = !DILocation(line: 696, column: 93, scope: !9210)
!9212 = !DILocation(line: 696, column: 73, scope: !9210)
!9213 = !DILocation(line: 696, column: 103, scope: !9210)
!9214 = !DILocation(line: 696, column: 73, scope: !2853)
!9215 = !DILocation(line: 696, column: 73, scope: !9216)
!9216 = !DILexicalBlockFile(scope: !2853, file: !4, discriminator: 2)
!9217 = !DILocation(line: 696, column: 134, scope: !9218)
!9218 = !DILexicalBlockFile(scope: !9210, file: !4, discriminator: 3)
!9219 = !DILocation(line: 696, column: 152, scope: !9210)
!9220 = !DILocation(line: 696, column: 162, scope: !9210)
!9221 = !DILocation(line: 696, column: 187, scope: !9210)
!9222 = !DILocation(line: 696, column: 118, scope: !9210)
!9223 = !DILocation(line: 696, column: 206, scope: !9224)
!9224 = !DILexicalBlockFile(scope: !2854, file: !4, discriminator: 4)
!9225 = !DILocation(line: 696, column: 206, scope: !2853)
!9226 = !DILocation(line: 696, column: 206, scope: !9227)
!9227 = !DILexicalBlockFile(scope: !2853, file: !4, discriminator: 5)
!9228 = !DILocation(line: 697, column: 21, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !2854, file: !4, line: 697, column: 21)
!9230 = !DILocation(line: 697, column: 26, scope: !9229)
!9231 = !DILocation(line: 697, column: 21, scope: !2854)
!9232 = !DILocation(line: 698, column: 21, scope: !9229)
!9233 = !DILocation(line: 699, column: 41, scope: !2854)
!9234 = !DILocation(line: 699, column: 45, scope: !2854)
!9235 = !DILocation(line: 699, column: 27, scope: !2854)
!9236 = !DILocation(line: 699, column: 25, scope: !2854)
!9237 = !DILocation(line: 700, column: 17, scope: !2854)
!9238 = !DILocation(line: 700, column: 22, scope: !9239)
!9239 = !DILexicalBlockFile(scope: !2862, file: !4, discriminator: 1)
!9240 = !DILocation(line: 700, column: 32, scope: !2862)
!9241 = !DILocation(line: 700, column: 62, scope: !2862)
!9242 = !DILocation(line: 700, column: 77, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !2862, file: !4, line: 700, column: 74)
!9244 = !DILocation(line: 700, column: 94, scope: !9243)
!9245 = !DILocation(line: 700, column: 74, scope: !9243)
!9246 = !DILocation(line: 700, column: 104, scope: !9243)
!9247 = !DILocation(line: 700, column: 74, scope: !2862)
!9248 = !DILocation(line: 700, column: 74, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !2862, file: !4, discriminator: 2)
!9250 = !DILocation(line: 700, column: 135, scope: !9251)
!9251 = !DILexicalBlockFile(scope: !9243, file: !4, discriminator: 3)
!9252 = !DILocation(line: 700, column: 153, scope: !9243)
!9253 = !DILocation(line: 700, column: 163, scope: !9243)
!9254 = !DILocation(line: 700, column: 188, scope: !9243)
!9255 = !DILocation(line: 700, column: 119, scope: !9243)
!9256 = !DILocation(line: 700, column: 207, scope: !9224)
!9257 = !DILocation(line: 700, column: 207, scope: !2862)
!9258 = !DILocation(line: 700, column: 207, scope: !9259)
!9259 = !DILexicalBlockFile(scope: !2862, file: !4, discriminator: 5)
!9260 = !DILocation(line: 701, column: 21, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !2854, file: !4, line: 701, column: 21)
!9262 = !DILocation(line: 701, column: 29, scope: !9261)
!9263 = !DILocation(line: 701, column: 21, scope: !2854)
!9264 = !DILocation(line: 702, column: 21, scope: !9261)
!9265 = !DILocation(line: 704, column: 23, scope: !2854)
!9266 = !DILocation(line: 704, column: 21, scope: !2854)
!9267 = !DILocation(line: 705, column: 21, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !2854, file: !4, line: 705, column: 21)
!9269 = !DILocation(line: 705, column: 25, scope: !9268)
!9270 = !DILocation(line: 705, column: 21, scope: !2854)
!9271 = !DILocation(line: 706, column: 21, scope: !9268)
!9272 = !DILocation(line: 707, column: 13, scope: !2854)
!9273 = !DILocation(line: 708, column: 9, scope: !2856)
!9274 = !DILocation(line: 709, column: 21, scope: !2858)
!9275 = !DILocation(line: 709, column: 28, scope: !2858)
!9276 = !DILocation(line: 709, column: 19, scope: !2858)
!9277 = !DILocation(line: 712, column: 43, scope: !2858)
!9278 = !DILocation(line: 712, column: 16, scope: !2858)
!9279 = !DILocation(line: 712, column: 14, scope: !2858)
!9280 = !DILocation(line: 713, column: 42, scope: !2858)
!9281 = !DILocation(line: 713, column: 17, scope: !2858)
!9282 = !DILocation(line: 713, column: 15, scope: !2858)
!9283 = !DILocation(line: 714, column: 44, scope: !2858)
!9284 = !DILocation(line: 714, column: 50, scope: !2858)
!9285 = !DILocation(line: 714, column: 16, scope: !2858)
!9286 = !DILocation(line: 714, column: 14, scope: !2858)
!9287 = !DILocation(line: 721, column: 13, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !2858, file: !4, line: 721, column: 13)
!9289 = !DILocation(line: 721, column: 18, scope: !9288)
!9290 = !DILocation(line: 721, column: 13, scope: !2858)
!9291 = !DILocation(line: 722, column: 13, scope: !9288)
!9292 = !DILocation(line: 723, column: 33, scope: !2858)
!9293 = !DILocation(line: 723, column: 38, scope: !2858)
!9294 = !DILocation(line: 723, column: 19, scope: !2858)
!9295 = !DILocation(line: 723, column: 17, scope: !2858)
!9296 = !DILocation(line: 724, column: 9, scope: !2858)
!9297 = !DILocation(line: 724, column: 14, scope: !9298)
!9298 = !DILexicalBlockFile(scope: !2864, file: !4, discriminator: 1)
!9299 = !DILocation(line: 724, column: 24, scope: !2864)
!9300 = !DILocation(line: 724, column: 54, scope: !2864)
!9301 = !DILocation(line: 724, column: 69, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !2864, file: !4, line: 724, column: 66)
!9303 = !DILocation(line: 724, column: 86, scope: !9302)
!9304 = !DILocation(line: 724, column: 66, scope: !9302)
!9305 = !DILocation(line: 724, column: 96, scope: !9302)
!9306 = !DILocation(line: 724, column: 66, scope: !2864)
!9307 = !DILocation(line: 724, column: 66, scope: !9308)
!9308 = !DILexicalBlockFile(scope: !2864, file: !4, discriminator: 2)
!9309 = !DILocation(line: 724, column: 127, scope: !9310)
!9310 = !DILexicalBlockFile(scope: !9302, file: !4, discriminator: 3)
!9311 = !DILocation(line: 724, column: 145, scope: !9302)
!9312 = !DILocation(line: 724, column: 155, scope: !9302)
!9313 = !DILocation(line: 724, column: 180, scope: !9302)
!9314 = !DILocation(line: 724, column: 111, scope: !9302)
!9315 = !DILocation(line: 724, column: 199, scope: !9316)
!9316 = !DILexicalBlockFile(scope: !2858, file: !4, discriminator: 4)
!9317 = !DILocation(line: 724, column: 199, scope: !2864)
!9318 = !DILocation(line: 724, column: 199, scope: !9319)
!9319 = !DILexicalBlockFile(scope: !2864, file: !4, discriminator: 5)
!9320 = !DILocation(line: 725, column: 13, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !2858, file: !4, line: 725, column: 13)
!9322 = !DILocation(line: 725, column: 21, scope: !9321)
!9323 = !DILocation(line: 725, column: 13, scope: !2858)
!9324 = !DILocation(line: 726, column: 13, scope: !9321)
!9325 = !DILocation(line: 727, column: 5, scope: !2858)
!9326 = !DILocation(line: 686, column: 23, scope: !2859)
!9327 = !DILocation(line: 684, column: 5, scope: !2859)
!9328 = !DILocation(line: 729, column: 9, scope: !2870)
!9329 = !DILocation(line: 729, column: 13, scope: !2870)
!9330 = !DILocation(line: 729, column: 9, scope: !2828)
!9331 = !DILocation(line: 730, column: 30, scope: !2868)
!9332 = !DILocation(line: 730, column: 15, scope: !2868)
!9333 = !DILocation(line: 730, column: 37, scope: !2868)
!9334 = !DILocation(line: 730, column: 46, scope: !2868)
!9335 = !DILocation(line: 730, column: 13, scope: !2869)
!9336 = !DILocation(line: 731, column: 35, scope: !2867)
!9337 = !DILocation(line: 731, column: 20, scope: !2867)
!9338 = !DILocation(line: 731, column: 18, scope: !2867)
!9339 = !DILocation(line: 732, column: 13, scope: !2867)
!9340 = !DILocation(line: 732, column: 18, scope: !9341)
!9341 = !DILexicalBlockFile(scope: !2866, file: !4, discriminator: 1)
!9342 = !DILocation(line: 732, column: 28, scope: !2866)
!9343 = !DILocation(line: 732, column: 58, scope: !2866)
!9344 = !DILocation(line: 732, column: 72, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !2866, file: !4, line: 732, column: 69)
!9346 = !DILocation(line: 732, column: 89, scope: !9345)
!9347 = !DILocation(line: 732, column: 69, scope: !9345)
!9348 = !DILocation(line: 732, column: 99, scope: !9345)
!9349 = !DILocation(line: 732, column: 69, scope: !2866)
!9350 = !DILocation(line: 732, column: 69, scope: !9351)
!9351 = !DILexicalBlockFile(scope: !2866, file: !4, discriminator: 2)
!9352 = !DILocation(line: 732, column: 130, scope: !9353)
!9353 = !DILexicalBlockFile(scope: !9345, file: !4, discriminator: 3)
!9354 = !DILocation(line: 732, column: 148, scope: !9345)
!9355 = !DILocation(line: 732, column: 158, scope: !9345)
!9356 = !DILocation(line: 732, column: 183, scope: !9345)
!9357 = !DILocation(line: 732, column: 114, scope: !9345)
!9358 = !DILocation(line: 732, column: 202, scope: !9359)
!9359 = !DILexicalBlockFile(scope: !2867, file: !4, discriminator: 4)
!9360 = !DILocation(line: 732, column: 202, scope: !2866)
!9361 = !DILocation(line: 732, column: 202, scope: !9362)
!9362 = !DILexicalBlockFile(scope: !2866, file: !4, discriminator: 5)
!9363 = !DILocation(line: 733, column: 17, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !2867, file: !4, line: 733, column: 17)
!9365 = !DILocation(line: 733, column: 22, scope: !9364)
!9366 = !DILocation(line: 733, column: 17, scope: !2867)
!9367 = !DILocation(line: 734, column: 17, scope: !9364)
!9368 = !DILocation(line: 735, column: 37, scope: !2867)
!9369 = !DILocation(line: 735, column: 41, scope: !2867)
!9370 = !DILocation(line: 735, column: 23, scope: !2867)
!9371 = !DILocation(line: 735, column: 21, scope: !2867)
!9372 = !DILocation(line: 736, column: 13, scope: !2867)
!9373 = !DILocation(line: 736, column: 18, scope: !9374)
!9374 = !DILexicalBlockFile(scope: !2872, file: !4, discriminator: 1)
!9375 = !DILocation(line: 736, column: 28, scope: !2872)
!9376 = !DILocation(line: 736, column: 58, scope: !2872)
!9377 = !DILocation(line: 736, column: 73, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !2872, file: !4, line: 736, column: 70)
!9379 = !DILocation(line: 736, column: 90, scope: !9378)
!9380 = !DILocation(line: 736, column: 70, scope: !9378)
!9381 = !DILocation(line: 736, column: 100, scope: !9378)
!9382 = !DILocation(line: 736, column: 70, scope: !2872)
!9383 = !DILocation(line: 736, column: 70, scope: !9384)
!9384 = !DILexicalBlockFile(scope: !2872, file: !4, discriminator: 2)
!9385 = !DILocation(line: 736, column: 131, scope: !9386)
!9386 = !DILexicalBlockFile(scope: !9378, file: !4, discriminator: 3)
!9387 = !DILocation(line: 736, column: 149, scope: !9378)
!9388 = !DILocation(line: 736, column: 159, scope: !9378)
!9389 = !DILocation(line: 736, column: 184, scope: !9378)
!9390 = !DILocation(line: 736, column: 115, scope: !9378)
!9391 = !DILocation(line: 736, column: 203, scope: !9359)
!9392 = !DILocation(line: 736, column: 203, scope: !2872)
!9393 = !DILocation(line: 736, column: 203, scope: !9394)
!9394 = !DILexicalBlockFile(scope: !2872, file: !4, discriminator: 5)
!9395 = !DILocation(line: 737, column: 17, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !2867, file: !4, line: 737, column: 17)
!9397 = !DILocation(line: 737, column: 25, scope: !9396)
!9398 = !DILocation(line: 737, column: 17, scope: !2867)
!9399 = !DILocation(line: 738, column: 17, scope: !9396)
!9400 = !DILocation(line: 739, column: 9, scope: !2867)
!9401 = !DILocation(line: 741, column: 13, scope: !2875)
!9402 = !DILocation(line: 741, column: 18, scope: !9403)
!9403 = !DILexicalBlockFile(scope: !2874, file: !4, discriminator: 1)
!9404 = !DILocation(line: 741, column: 28, scope: !2874)
!9405 = !DILocation(line: 741, column: 58, scope: !2874)
!9406 = !DILocation(line: 741, column: 72, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !2874, file: !4, line: 741, column: 69)
!9408 = !DILocation(line: 741, column: 89, scope: !9407)
!9409 = !DILocation(line: 741, column: 69, scope: !9407)
!9410 = !DILocation(line: 741, column: 99, scope: !9407)
!9411 = !DILocation(line: 741, column: 69, scope: !2874)
!9412 = !DILocation(line: 741, column: 69, scope: !9413)
!9413 = !DILexicalBlockFile(scope: !2874, file: !4, discriminator: 2)
!9414 = !DILocation(line: 741, column: 130, scope: !9415)
!9415 = !DILexicalBlockFile(scope: !9407, file: !4, discriminator: 3)
!9416 = !DILocation(line: 741, column: 148, scope: !9407)
!9417 = !DILocation(line: 741, column: 158, scope: !9407)
!9418 = !DILocation(line: 741, column: 183, scope: !9407)
!9419 = !DILocation(line: 741, column: 114, scope: !9407)
!9420 = !DILocation(line: 741, column: 202, scope: !9421)
!9421 = !DILexicalBlockFile(scope: !2875, file: !4, discriminator: 4)
!9422 = !DILocation(line: 741, column: 202, scope: !2874)
!9423 = !DILocation(line: 741, column: 202, scope: !9424)
!9424 = !DILexicalBlockFile(scope: !2874, file: !4, discriminator: 5)
!9425 = !DILocation(line: 743, column: 5, scope: !2869)
!9426 = !DILocation(line: 746, column: 27, scope: !2828)
!9427 = !DILocation(line: 746, column: 12, scope: !2828)
!9428 = !DILocation(line: 746, column: 10, scope: !2828)
!9429 = !DILocation(line: 747, column: 5, scope: !2828)
!9430 = !DILocation(line: 747, column: 10, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !2877, file: !4, discriminator: 1)
!9432 = !DILocation(line: 747, column: 20, scope: !2877)
!9433 = !DILocation(line: 747, column: 50, scope: !2877)
!9434 = !DILocation(line: 747, column: 63, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !2877, file: !4, line: 747, column: 60)
!9436 = !DILocation(line: 747, column: 80, scope: !9435)
!9437 = !DILocation(line: 747, column: 60, scope: !9435)
!9438 = !DILocation(line: 747, column: 90, scope: !9435)
!9439 = !DILocation(line: 747, column: 60, scope: !2877)
!9440 = !DILocation(line: 747, column: 60, scope: !9441)
!9441 = !DILexicalBlockFile(scope: !2877, file: !4, discriminator: 2)
!9442 = !DILocation(line: 747, column: 121, scope: !9443)
!9443 = !DILexicalBlockFile(scope: !9435, file: !4, discriminator: 3)
!9444 = !DILocation(line: 747, column: 139, scope: !9435)
!9445 = !DILocation(line: 747, column: 149, scope: !9435)
!9446 = !DILocation(line: 747, column: 174, scope: !9435)
!9447 = !DILocation(line: 747, column: 105, scope: !9435)
!9448 = !DILocation(line: 747, column: 193, scope: !9449)
!9449 = !DILexicalBlockFile(scope: !2828, file: !4, discriminator: 4)
!9450 = !DILocation(line: 747, column: 193, scope: !2877)
!9451 = !DILocation(line: 747, column: 193, scope: !9452)
!9452 = !DILexicalBlockFile(scope: !2877, file: !4, discriminator: 5)
!9453 = !DILocation(line: 748, column: 9, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !2828, file: !4, line: 748, column: 9)
!9455 = !DILocation(line: 748, column: 14, scope: !9454)
!9456 = !DILocation(line: 748, column: 9, scope: !2828)
!9457 = !DILocation(line: 749, column: 9, scope: !9454)
!9458 = !DILocation(line: 750, column: 12, scope: !2828)
!9459 = !DILocation(line: 750, column: 5, scope: !2828)
!9460 = !DILocation(line: 753, column: 5, scope: !2828)
!9461 = !DILocation(line: 753, column: 10, scope: !9462)
!9462 = !DILexicalBlockFile(scope: !2879, file: !4, discriminator: 1)
!9463 = !DILocation(line: 753, column: 20, scope: !2879)
!9464 = !DILocation(line: 753, column: 51, scope: !2879)
!9465 = !DILocation(line: 753, column: 61, scope: !2882)
!9466 = !DILocation(line: 753, column: 77, scope: !2882)
!9467 = !DILocation(line: 753, column: 61, scope: !2879)
!9468 = !DILocation(line: 753, column: 92, scope: !9469)
!9469 = !DILexicalBlockFile(scope: !2882, file: !4, discriminator: 2)
!9470 = !DILocation(line: 753, column: 97, scope: !9471)
!9471 = !DILexicalBlockFile(scope: !2881, file: !4, discriminator: 4)
!9472 = !DILocation(line: 753, column: 107, scope: !2881)
!9473 = !DILocation(line: 753, column: 137, scope: !2881)
!9474 = !DILocation(line: 753, column: 163, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !2881, file: !4, line: 753, column: 160)
!9476 = !DILocation(line: 753, column: 180, scope: !9475)
!9477 = !DILocation(line: 753, column: 160, scope: !9475)
!9478 = !DILocation(line: 753, column: 190, scope: !9475)
!9479 = !DILocation(line: 753, column: 160, scope: !2881)
!9480 = !DILocation(line: 753, column: 160, scope: !9481)
!9481 = !DILexicalBlockFile(scope: !2881, file: !4, discriminator: 5)
!9482 = !DILocation(line: 753, column: 221, scope: !9483)
!9483 = !DILexicalBlockFile(scope: !9475, file: !4, discriminator: 6)
!9484 = !DILocation(line: 753, column: 239, scope: !9475)
!9485 = !DILocation(line: 753, column: 249, scope: !9475)
!9486 = !DILocation(line: 753, column: 274, scope: !9475)
!9487 = !DILocation(line: 753, column: 205, scope: !9475)
!9488 = !DILocation(line: 753, column: 293, scope: !9489)
!9489 = !DILexicalBlockFile(scope: !2882, file: !4, discriminator: 7)
!9490 = !DILocation(line: 753, column: 293, scope: !2881)
!9491 = !DILocation(line: 753, column: 293, scope: !9492)
!9492 = !DILexicalBlockFile(scope: !2881, file: !4, discriminator: 8)
!9493 = !DILocation(line: 753, column: 293, scope: !9494)
!9494 = !DILexicalBlockFile(scope: !2881, file: !4, discriminator: 9)
!9495 = !DILocation(line: 753, column: 306, scope: !9496)
!9496 = !DILexicalBlockFile(scope: !9497, file: !4, discriminator: 10)
!9497 = !DILexicalBlockFile(scope: !2828, file: !4, discriminator: 3)
!9498 = !DILocation(line: 753, column: 306, scope: !2879)
!9499 = !DILocation(line: 753, column: 306, scope: !9500)
!9500 = !DILexicalBlockFile(scope: !2879, file: !4, discriminator: 11)
!9501 = !DILocation(line: 753, column: 306, scope: !9502)
!9502 = !DILexicalBlockFile(scope: !2879, file: !4, discriminator: 12)
!9503 = !DILocation(line: 756, column: 5, scope: !2828)
!9504 = !DILocation(line: 756, column: 10, scope: !9505)
!9505 = !DILexicalBlockFile(scope: !2884, file: !4, discriminator: 1)
!9506 = !DILocation(line: 756, column: 20, scope: !2884)
!9507 = !DILocation(line: 756, column: 51, scope: !2884)
!9508 = !DILocation(line: 756, column: 60, scope: !2887)
!9509 = !DILocation(line: 756, column: 76, scope: !2887)
!9510 = !DILocation(line: 756, column: 60, scope: !2884)
!9511 = !DILocation(line: 756, column: 91, scope: !9512)
!9512 = !DILexicalBlockFile(scope: !2887, file: !4, discriminator: 2)
!9513 = !DILocation(line: 756, column: 96, scope: !9514)
!9514 = !DILexicalBlockFile(scope: !2886, file: !4, discriminator: 4)
!9515 = !DILocation(line: 756, column: 106, scope: !2886)
!9516 = !DILocation(line: 756, column: 136, scope: !2886)
!9517 = !DILocation(line: 756, column: 162, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !2886, file: !4, line: 756, column: 159)
!9519 = !DILocation(line: 756, column: 179, scope: !9518)
!9520 = !DILocation(line: 756, column: 159, scope: !9518)
!9521 = !DILocation(line: 756, column: 189, scope: !9518)
!9522 = !DILocation(line: 756, column: 159, scope: !2886)
!9523 = !DILocation(line: 756, column: 159, scope: !9524)
!9524 = !DILexicalBlockFile(scope: !2886, file: !4, discriminator: 5)
!9525 = !DILocation(line: 756, column: 220, scope: !9526)
!9526 = !DILexicalBlockFile(scope: !9518, file: !4, discriminator: 6)
!9527 = !DILocation(line: 756, column: 238, scope: !9518)
!9528 = !DILocation(line: 756, column: 248, scope: !9518)
!9529 = !DILocation(line: 756, column: 273, scope: !9518)
!9530 = !DILocation(line: 756, column: 204, scope: !9518)
!9531 = !DILocation(line: 756, column: 292, scope: !9532)
!9532 = !DILexicalBlockFile(scope: !2887, file: !4, discriminator: 7)
!9533 = !DILocation(line: 756, column: 292, scope: !2886)
!9534 = !DILocation(line: 756, column: 292, scope: !9535)
!9535 = !DILexicalBlockFile(scope: !2886, file: !4, discriminator: 8)
!9536 = !DILocation(line: 756, column: 292, scope: !9537)
!9537 = !DILexicalBlockFile(scope: !2886, file: !4, discriminator: 9)
!9538 = !DILocation(line: 756, column: 305, scope: !9496)
!9539 = !DILocation(line: 756, column: 305, scope: !2884)
!9540 = !DILocation(line: 756, column: 305, scope: !9541)
!9541 = !DILexicalBlockFile(scope: !2884, file: !4, discriminator: 11)
!9542 = !DILocation(line: 757, column: 5, scope: !2828)
!9543 = !DILocation(line: 758, column: 1, scope: !2828)
!9544 = !DILocation(line: 761, column: 28, scope: !2915)
!9545 = !DILocation(line: 769, column: 5, scope: !2915)
!9546 = !DILocation(line: 769, column: 9, scope: !2915)
!9547 = !DILocation(line: 769, column: 12, scope: !2915)
!9548 = !DILocation(line: 770, column: 5, scope: !2915)
!9549 = !DILocation(line: 770, column: 15, scope: !2915)
!9550 = !DILocation(line: 771, column: 5, scope: !2915)
!9551 = !DILocation(line: 771, column: 15, scope: !2915)
!9552 = !DILocation(line: 771, column: 32, scope: !2915)
!9553 = !DILocation(line: 772, column: 5, scope: !2915)
!9554 = !DILocation(line: 772, column: 21, scope: !2915)
!9555 = !DILocation(line: 773, column: 5, scope: !2915)
!9556 = !DILocation(line: 773, column: 20, scope: !2915)
!9557 = !DILocation(line: 774, column: 5, scope: !2915)
!9558 = !DILocation(line: 774, column: 19, scope: !2915)
!9559 = !DILocation(line: 775, column: 5, scope: !2915)
!9560 = !DILocation(line: 775, column: 30, scope: !2915)
!9561 = !DILocation(line: 776, column: 5, scope: !2915)
!9562 = !DILocation(line: 776, column: 10, scope: !2915)
!9563 = !DILocation(line: 777, column: 5, scope: !2915)
!9564 = !DILocation(line: 777, column: 10, scope: !2915)
!9565 = !DILocation(line: 778, column: 5, scope: !2915)
!9566 = !DILocation(line: 778, column: 11, scope: !2915)
!9567 = !DILocation(line: 779, column: 5, scope: !2915)
!9568 = !DILocation(line: 779, column: 9, scope: !2915)
!9569 = !DILocation(line: 782, column: 5, scope: !2915)
!9570 = !DILocation(line: 782, column: 26, scope: !2915)
!9571 = !DILocation(line: 787, column: 9, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !2915, file: !4, line: 787, column: 9)
!9573 = !DILocation(line: 787, column: 21, scope: !9572)
!9574 = !DILocation(line: 787, column: 9, scope: !2915)
!9575 = !DILocation(line: 788, column: 16, scope: !9572)
!9576 = !DILocation(line: 788, column: 9, scope: !9572)
!9577 = !DILocation(line: 791, column: 22, scope: !2915)
!9578 = !DILocation(line: 791, column: 14, scope: !2915)
!9579 = !DILocation(line: 791, column: 12, scope: !2915)
!9580 = !DILocation(line: 793, column: 7, scope: !2915)
!9581 = !DILocation(line: 794, column: 5, scope: !2915)
!9582 = !DILocation(line: 795, column: 21, scope: !2915)
!9583 = !DILocation(line: 795, column: 38, scope: !2915)
!9584 = !DILocation(line: 794, column: 17, scope: !2915)
!9585 = !DILocation(line: 794, column: 15, scope: !2915)
!9586 = !DILocation(line: 795, column: 42, scope: !2915)
!9587 = !DILocation(line: 797, column: 13, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !3055, file: !4, line: 797, column: 13)
!9589 = !DILocation(line: 797, column: 28, scope: !9588)
!9590 = !DILocation(line: 797, column: 13, scope: !3055)
!9591 = !DILocation(line: 798, column: 30, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9588, file: !4, line: 797, column: 50)
!9593 = !DILocation(line: 798, column: 28, scope: !9592)
!9594 = !DILocation(line: 799, column: 17, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9592, file: !4, line: 799, column: 17)
!9596 = !DILocation(line: 799, column: 32, scope: !9595)
!9597 = !DILocation(line: 799, column: 17, scope: !9592)
!9598 = !DILocation(line: 800, column: 17, scope: !9595)
!9599 = !DILocation(line: 801, column: 9, scope: !9592)
!9600 = !DILocation(line: 804, column: 28, scope: !3055)
!9601 = !DILocation(line: 804, column: 41, scope: !3055)
!9602 = !DILocation(line: 804, column: 15, scope: !3055)
!9603 = !DILocation(line: 804, column: 13, scope: !3055)
!9604 = !DILocation(line: 805, column: 38, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !3055, file: !4, line: 805, column: 12)
!9606 = !DILocation(line: 805, column: 23, scope: !9605)
!9607 = !DILocation(line: 805, column: 21, scope: !9605)
!9608 = !DILocation(line: 805, column: 12, scope: !3055)
!9609 = !DILocation(line: 807, column: 16, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9605, file: !4, line: 805, column: 45)
!9611 = !DILocation(line: 806, column: 13, scope: !9610)
!9612 = !DILocation(line: 809, column: 13, scope: !9610)
!9613 = !DILocation(line: 812, column: 13, scope: !3055)
!9614 = !DILocation(line: 812, column: 18, scope: !3055)
!9615 = !{!9616, !3861, i64 16}
!9616 = !{!"X509_extension_st", !3861, i64 0, !3893, i64 8, !3861, i64 16}
!9617 = !DILocation(line: 812, column: 25, scope: !3055)
!9618 = !{!9619, !3861, i64 8}
!9619 = !{!"asn1_string_st", !3893, i64 0, !3893, i64 4, !3861, i64 8, !4103, i64 16}
!9620 = !DILocation(line: 812, column: 11, scope: !3055)
!9621 = !DILocation(line: 813, column: 13, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !3055, file: !4, line: 813, column: 13)
!9623 = !DILocation(line: 813, column: 21, scope: !9622)
!9624 = !{!9625, !3861, i64 8}
!9625 = !{!"v3_ext_method", !3893, i64 0, !3893, i64 4, !3861, i64 8, !3861, i64 16, !3861, i64 24, !3861, i64 32, !3861, i64 40, !3861, i64 48, !3861, i64 56, !3861, i64 64, !3861, i64 72, !3861, i64 80, !3861, i64 88, !3861, i64 96}
!9626 = !DILocation(line: 813, column: 13, scope: !3055)
!9627 = !DILocation(line: 817, column: 30, scope: !9622)
!9628 = !DILocation(line: 817, column: 35, scope: !9622)
!9629 = !DILocation(line: 817, column: 42, scope: !9622)
!9630 = !{!9619, !3893, i64 0}
!9631 = !DILocation(line: 818, column: 31, scope: !9622)
!9632 = !DILocation(line: 818, column: 39, scope: !9622)
!9633 = !DILocation(line: 815, column: 16, scope: !9622)
!9634 = !DILocation(line: 814, column: 21, scope: !9622)
!9635 = !DILocation(line: 814, column: 19, scope: !9622)
!9636 = !DILocation(line: 814, column: 13, scope: !9622)
!9637 = !DILocation(line: 821, column: 16, scope: !9622)
!9638 = !DILocation(line: 821, column: 24, scope: !9622)
!9639 = !{!9625, !3861, i64 32}
!9640 = !DILocation(line: 823, column: 28, scope: !9622)
!9641 = !DILocation(line: 823, column: 33, scope: !9622)
!9642 = !DILocation(line: 823, column: 40, scope: !9622)
!9643 = !DILocation(line: 820, column: 21, scope: !9622)
!9644 = !DILocation(line: 820, column: 19, scope: !9622)
!9645 = !DILocation(line: 825, column: 15, scope: !3054)
!9646 = !DILocation(line: 825, column: 13, scope: !3054)
!9647 = !DILocation(line: 825, column: 20, scope: !9648)
!9648 = !DILexicalBlockFile(scope: !9649, file: !4, discriminator: 2)
!9649 = !DILexicalBlockFile(scope: !3053, file: !4, discriminator: 1)
!9650 = !DILocation(line: 825, column: 48, scope: !3053)
!9651 = !DILocation(line: 825, column: 32, scope: !3053)
!9652 = !DILocation(line: 825, column: 24, scope: !3053)
!9653 = !DILocation(line: 825, column: 22, scope: !3053)
!9654 = !DILocation(line: 825, column: 9, scope: !3054)
!9655 = !DILocation(line: 827, column: 13, scope: !3052)
!9656 = !DILocation(line: 827, column: 17, scope: !3052)
!9657 = !DILocation(line: 828, column: 13, scope: !3052)
!9658 = !DILocation(line: 828, column: 26, scope: !3052)
!9659 = !DILocation(line: 830, column: 63, scope: !3052)
!9660 = !DILocation(line: 830, column: 47, scope: !3052)
!9661 = !DILocation(line: 830, column: 109, scope: !3052)
!9662 = !DILocation(line: 830, column: 37, scope: !3052)
!9663 = !DILocation(line: 830, column: 21, scope: !3052)
!9664 = !DILocation(line: 830, column: 18, scope: !3052)
!9665 = !DILocation(line: 831, column: 22, scope: !3052)
!9666 = !DILocation(line: 831, column: 28, scope: !3052)
!9667 = !{!9668, !3893, i64 0}
!9668 = !{!"GENERAL_NAME_st", !3893, i64 0, !3862, i64 8}
!9669 = !DILocation(line: 831, column: 20, scope: !3052)
!9670 = !DILocation(line: 832, column: 21, scope: !3052)
!9671 = !DILocation(line: 837, column: 21, scope: !3061)
!9672 = !DILocation(line: 837, column: 19, scope: !3061)
!9673 = !DILocation(line: 838, column: 21, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 838, column: 21)
!9675 = !DILocation(line: 838, column: 23, scope: !9674)
!9676 = !DILocation(line: 838, column: 21, scope: !3061)
!9677 = !DILocation(line: 839, column: 21, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9674, file: !4, line: 838, column: 38)
!9679 = !DILocation(line: 842, column: 21, scope: !3061)
!9680 = !DILocation(line: 842, column: 19, scope: !3061)
!9681 = !DILocation(line: 843, column: 21, scope: !3060)
!9682 = !DILocation(line: 843, column: 23, scope: !3060)
!9683 = !DILocation(line: 843, column: 21, scope: !3061)
!9684 = !DILocation(line: 844, column: 21, scope: !3059)
!9685 = !DILocation(line: 844, column: 26, scope: !9686)
!9686 = !DILexicalBlockFile(scope: !3058, file: !4, discriminator: 1)
!9687 = !DILocation(line: 844, column: 36, scope: !3058)
!9688 = !DILocation(line: 844, column: 66, scope: !3058)
!9689 = !DILocation(line: 844, column: 78, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !3058, file: !4, line: 844, column: 75)
!9691 = !DILocation(line: 844, column: 95, scope: !9690)
!9692 = !DILocation(line: 844, column: 75, scope: !9690)
!9693 = !DILocation(line: 844, column: 105, scope: !9690)
!9694 = !DILocation(line: 844, column: 75, scope: !3058)
!9695 = !DILocation(line: 844, column: 75, scope: !9696)
!9696 = !DILexicalBlockFile(scope: !3058, file: !4, discriminator: 2)
!9697 = !DILocation(line: 844, column: 136, scope: !9698)
!9698 = !DILexicalBlockFile(scope: !9690, file: !4, discriminator: 3)
!9699 = !DILocation(line: 844, column: 154, scope: !9690)
!9700 = !DILocation(line: 844, column: 164, scope: !9690)
!9701 = !DILocation(line: 844, column: 189, scope: !9690)
!9702 = !DILocation(line: 844, column: 120, scope: !9690)
!9703 = !DILocation(line: 844, column: 208, scope: !9704)
!9704 = !DILexicalBlockFile(scope: !3059, file: !4, discriminator: 4)
!9705 = !DILocation(line: 844, column: 208, scope: !3058)
!9706 = !DILocation(line: 844, column: 208, scope: !9707)
!9707 = !DILexicalBlockFile(scope: !3058, file: !4, discriminator: 5)
!9708 = !DILocation(line: 845, column: 21, scope: !3059)
!9709 = !DILocation(line: 847, column: 55, scope: !3061)
!9710 = !DILocation(line: 847, column: 37, scope: !3061)
!9711 = !DILocation(line: 847, column: 19, scope: !3061)
!9712 = !DILocation(line: 847, column: 42, scope: !3061)
!9713 = !DILocation(line: 847, column: 18, scope: !3061)
!9714 = !DILocation(line: 847, column: 53, scope: !3061)
!9715 = !DILocation(line: 849, column: 50, scope: !3061)
!9716 = !DILocation(line: 849, column: 56, scope: !3061)
!9717 = !DILocation(line: 849, column: 58, scope: !3061)
!9718 = !DILocation(line: 849, column: 21, scope: !3061)
!9719 = !DILocation(line: 849, column: 19, scope: !3061)
!9720 = !DILocation(line: 850, column: 21, scope: !3065)
!9721 = !DILocation(line: 850, column: 23, scope: !3065)
!9722 = !DILocation(line: 850, column: 21, scope: !3061)
!9723 = !DILocation(line: 851, column: 21, scope: !3064)
!9724 = !DILocation(line: 851, column: 26, scope: !9725)
!9725 = !DILexicalBlockFile(scope: !3063, file: !4, discriminator: 1)
!9726 = !DILocation(line: 851, column: 36, scope: !3063)
!9727 = !DILocation(line: 851, column: 66, scope: !3063)
!9728 = !DILocation(line: 851, column: 78, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !3063, file: !4, line: 851, column: 75)
!9730 = !DILocation(line: 851, column: 95, scope: !9729)
!9731 = !DILocation(line: 851, column: 75, scope: !9729)
!9732 = !DILocation(line: 851, column: 105, scope: !9729)
!9733 = !DILocation(line: 851, column: 75, scope: !3063)
!9734 = !DILocation(line: 851, column: 75, scope: !9735)
!9735 = !DILexicalBlockFile(scope: !3063, file: !4, discriminator: 2)
!9736 = !DILocation(line: 851, column: 136, scope: !9737)
!9737 = !DILexicalBlockFile(scope: !9729, file: !4, discriminator: 3)
!9738 = !DILocation(line: 851, column: 154, scope: !9729)
!9739 = !DILocation(line: 851, column: 164, scope: !9729)
!9740 = !DILocation(line: 851, column: 189, scope: !9729)
!9741 = !DILocation(line: 851, column: 120, scope: !9729)
!9742 = !DILocation(line: 851, column: 208, scope: !9743)
!9743 = !DILexicalBlockFile(scope: !3064, file: !4, discriminator: 4)
!9744 = !DILocation(line: 851, column: 208, scope: !3063)
!9745 = !DILocation(line: 851, column: 208, scope: !9746)
!9746 = !DILexicalBlockFile(scope: !3063, file: !4, discriminator: 5)
!9747 = !DILocation(line: 852, column: 21, scope: !3064)
!9748 = !DILocation(line: 854, column: 55, scope: !3061)
!9749 = !DILocation(line: 854, column: 37, scope: !3061)
!9750 = !DILocation(line: 854, column: 19, scope: !3061)
!9751 = !DILocation(line: 854, column: 42, scope: !3061)
!9752 = !DILocation(line: 854, column: 18, scope: !3061)
!9753 = !DILocation(line: 854, column: 53, scope: !3061)
!9754 = !DILocation(line: 855, column: 17, scope: !3061)
!9755 = !DILocation(line: 862, column: 21, scope: !3061)
!9756 = !DILocation(line: 862, column: 19, scope: !3061)
!9757 = !DILocation(line: 863, column: 21, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 863, column: 21)
!9759 = !DILocation(line: 863, column: 23, scope: !9758)
!9760 = !DILocation(line: 863, column: 21, scope: !3061)
!9761 = !DILocation(line: 864, column: 21, scope: !9758)
!9762 = !DILocation(line: 865, column: 25, scope: !3061)
!9763 = !DILocation(line: 867, column: 25, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 865, column: 33)
!9765 = !DILocation(line: 867, column: 23, scope: !9764)
!9766 = !DILocation(line: 868, column: 26, scope: !9764)
!9767 = !DILocation(line: 868, column: 32, scope: !9764)
!9768 = !DILocation(line: 868, column: 34, scope: !9764)
!9769 = !DILocation(line: 868, column: 24, scope: !9764)
!9770 = !DILocation(line: 869, column: 21, scope: !9764)
!9771 = !DILocation(line: 871, column: 25, scope: !9764)
!9772 = !DILocation(line: 871, column: 23, scope: !9764)
!9773 = !DILocation(line: 872, column: 26, scope: !9764)
!9774 = !DILocation(line: 872, column: 32, scope: !9764)
!9775 = !DILocation(line: 872, column: 34, scope: !9764)
!9776 = !DILocation(line: 872, column: 24, scope: !9764)
!9777 = !DILocation(line: 873, column: 21, scope: !9764)
!9778 = !DILocation(line: 875, column: 25, scope: !9764)
!9779 = !DILocation(line: 875, column: 23, scope: !9764)
!9780 = !DILocation(line: 876, column: 26, scope: !9764)
!9781 = !DILocation(line: 876, column: 32, scope: !9764)
!9782 = !DILocation(line: 876, column: 34, scope: !9764)
!9783 = !DILocation(line: 876, column: 24, scope: !9764)
!9784 = !DILocation(line: 877, column: 21, scope: !9764)
!9785 = !DILocation(line: 879, column: 21, scope: !3069)
!9786 = !DILocation(line: 879, column: 23, scope: !3069)
!9787 = !DILocation(line: 879, column: 21, scope: !3061)
!9788 = !DILocation(line: 880, column: 21, scope: !3068)
!9789 = !DILocation(line: 880, column: 26, scope: !9790)
!9790 = !DILexicalBlockFile(scope: !3067, file: !4, discriminator: 1)
!9791 = !DILocation(line: 880, column: 36, scope: !3067)
!9792 = !DILocation(line: 880, column: 66, scope: !3067)
!9793 = !DILocation(line: 880, column: 78, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !3067, file: !4, line: 880, column: 75)
!9795 = !DILocation(line: 880, column: 95, scope: !9794)
!9796 = !DILocation(line: 880, column: 75, scope: !9794)
!9797 = !DILocation(line: 880, column: 105, scope: !9794)
!9798 = !DILocation(line: 880, column: 75, scope: !3067)
!9799 = !DILocation(line: 880, column: 75, scope: !9800)
!9800 = !DILexicalBlockFile(scope: !3067, file: !4, discriminator: 2)
!9801 = !DILocation(line: 880, column: 136, scope: !9802)
!9802 = !DILexicalBlockFile(scope: !9794, file: !4, discriminator: 3)
!9803 = !DILocation(line: 880, column: 154, scope: !9794)
!9804 = !DILocation(line: 880, column: 164, scope: !9794)
!9805 = !DILocation(line: 880, column: 189, scope: !9794)
!9806 = !DILocation(line: 880, column: 120, scope: !9794)
!9807 = !DILocation(line: 880, column: 208, scope: !9808)
!9808 = !DILexicalBlockFile(scope: !3068, file: !4, discriminator: 4)
!9809 = !DILocation(line: 880, column: 208, scope: !3067)
!9810 = !DILocation(line: 880, column: 208, scope: !9811)
!9811 = !DILexicalBlockFile(scope: !3067, file: !4, discriminator: 5)
!9812 = !DILocation(line: 881, column: 21, scope: !3068)
!9813 = !DILocation(line: 883, column: 55, scope: !3061)
!9814 = !DILocation(line: 883, column: 37, scope: !3061)
!9815 = !DILocation(line: 883, column: 19, scope: !3061)
!9816 = !DILocation(line: 883, column: 42, scope: !3061)
!9817 = !DILocation(line: 883, column: 18, scope: !3061)
!9818 = !DILocation(line: 883, column: 53, scope: !3061)
!9819 = !DILocation(line: 884, column: 74, scope: !3061)
!9820 = !DILocation(line: 884, column: 57, scope: !3061)
!9821 = !DILocation(line: 885, column: 68, scope: !3061)
!9822 = !DILocation(line: 885, column: 49, scope: !3061)
!9823 = !DILocation(line: 884, column: 21, scope: !3061)
!9824 = !DILocation(line: 884, column: 19, scope: !3061)
!9825 = !DILocation(line: 886, column: 21, scope: !3073)
!9826 = !DILocation(line: 886, column: 23, scope: !3073)
!9827 = !DILocation(line: 886, column: 21, scope: !3061)
!9828 = !DILocation(line: 887, column: 21, scope: !3072)
!9829 = !DILocation(line: 887, column: 26, scope: !9830)
!9830 = !DILexicalBlockFile(scope: !3071, file: !4, discriminator: 1)
!9831 = !DILocation(line: 887, column: 36, scope: !3071)
!9832 = !DILocation(line: 887, column: 66, scope: !3071)
!9833 = !DILocation(line: 887, column: 78, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !3071, file: !4, line: 887, column: 75)
!9835 = !DILocation(line: 887, column: 95, scope: !9834)
!9836 = !DILocation(line: 887, column: 75, scope: !9834)
!9837 = !DILocation(line: 887, column: 105, scope: !9834)
!9838 = !DILocation(line: 887, column: 75, scope: !3071)
!9839 = !DILocation(line: 887, column: 75, scope: !9840)
!9840 = !DILexicalBlockFile(scope: !3071, file: !4, discriminator: 2)
!9841 = !DILocation(line: 887, column: 136, scope: !9842)
!9842 = !DILexicalBlockFile(scope: !9834, file: !4, discriminator: 3)
!9843 = !DILocation(line: 887, column: 154, scope: !9834)
!9844 = !DILocation(line: 887, column: 164, scope: !9834)
!9845 = !DILocation(line: 887, column: 189, scope: !9834)
!9846 = !DILocation(line: 887, column: 120, scope: !9834)
!9847 = !DILocation(line: 887, column: 208, scope: !9848)
!9848 = !DILexicalBlockFile(scope: !3072, file: !4, discriminator: 4)
!9849 = !DILocation(line: 887, column: 208, scope: !3071)
!9850 = !DILocation(line: 887, column: 208, scope: !9851)
!9851 = !DILexicalBlockFile(scope: !3071, file: !4, discriminator: 5)
!9852 = !DILocation(line: 888, column: 21, scope: !3072)
!9853 = !DILocation(line: 890, column: 55, scope: !3061)
!9854 = !DILocation(line: 890, column: 37, scope: !3061)
!9855 = !DILocation(line: 890, column: 19, scope: !3061)
!9856 = !DILocation(line: 890, column: 42, scope: !3061)
!9857 = !DILocation(line: 890, column: 18, scope: !3061)
!9858 = !DILocation(line: 890, column: 53, scope: !3061)
!9859 = !DILocation(line: 891, column: 17, scope: !3061)
!9860 = !DILocation(line: 895, column: 25, scope: !3061)
!9861 = !DILocation(line: 902, column: 25, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 895, column: 33)
!9863 = !DILocation(line: 904, column: 46, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9862, file: !4, line: 904, column: 29)
!9865 = !DILocation(line: 906, column: 46, scope: !9864)
!9866 = !DILocation(line: 904, column: 29, scope: !9864)
!9867 = !DILocation(line: 906, column: 54, scope: !9864)
!9868 = !DILocation(line: 904, column: 29, scope: !9862)
!9869 = !DILocation(line: 907, column: 29, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9864, file: !4, line: 906, column: 61)
!9871 = !DILocation(line: 909, column: 25, scope: !9862)
!9872 = !DILocation(line: 911, column: 38, scope: !3061)
!9873 = !DILocation(line: 911, column: 29, scope: !3061)
!9874 = !DILocation(line: 911, column: 24, scope: !3061)
!9875 = !DILocation(line: 912, column: 36, scope: !3061)
!9876 = !DILocation(line: 912, column: 44, scope: !3061)
!9877 = !DILocation(line: 912, column: 17, scope: !3061)
!9878 = !DILocation(line: 913, column: 32, scope: !3061)
!9879 = !DILocation(line: 913, column: 40, scope: !3061)
!9880 = !DILocation(line: 913, column: 23, scope: !3061)
!9881 = !DILocation(line: 913, column: 21, scope: !3061)
!9882 = !DILocation(line: 914, column: 21, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 914, column: 21)
!9884 = !DILocation(line: 914, column: 25, scope: !9883)
!9885 = !DILocation(line: 914, column: 21, scope: !3061)
!9886 = !DILocation(line: 915, column: 21, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9883, file: !4, line: 914, column: 30)
!9888 = !DILocation(line: 916, column: 21, scope: !9887)
!9889 = !DILocation(line: 918, column: 169, scope: !3061)
!9890 = !DILocation(line: 918, column: 151, scope: !3061)
!9891 = !DILocation(line: 918, column: 22, scope: !3061)
!9892 = !DILocation(line: 919, column: 21, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 919, column: 21)
!9894 = !DILocation(line: 919, column: 26, scope: !9893)
!9895 = !DILocation(line: 919, column: 21, scope: !3061)
!9896 = !DILocation(line: 920, column: 21, scope: !9893)
!9897 = !DILocation(line: 921, column: 21, scope: !3061)
!9898 = !DILocation(line: 921, column: 19, scope: !3061)
!9899 = !DILocation(line: 922, column: 21, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !3061, file: !4, line: 922, column: 21)
!9901 = !DILocation(line: 922, column: 23, scope: !9900)
!9902 = !DILocation(line: 922, column: 21, scope: !3061)
!9903 = !DILocation(line: 923, column: 21, scope: !9900)
!9904 = !DILocation(line: 924, column: 49, scope: !3061)
!9905 = !DILocation(line: 924, column: 55, scope: !3061)
!9906 = !DILocation(line: 924, column: 62, scope: !3061)
!9907 = !DILocation(line: 924, column: 60, scope: !3061)
!9908 = !DILocation(line: 924, column: 21, scope: !3061)
!9909 = !DILocation(line: 924, column: 19, scope: !3061)
!9910 = !DILocation(line: 925, column: 21, scope: !3077)
!9911 = !DILocation(line: 925, column: 23, scope: !3077)
!9912 = !DILocation(line: 925, column: 21, scope: !3061)
!9913 = !DILocation(line: 926, column: 21, scope: !3076)
!9914 = !DILocation(line: 926, column: 26, scope: !9915)
!9915 = !DILexicalBlockFile(scope: !3075, file: !4, discriminator: 1)
!9916 = !DILocation(line: 926, column: 36, scope: !3075)
!9917 = !DILocation(line: 926, column: 66, scope: !3075)
!9918 = !DILocation(line: 926, column: 78, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !3075, file: !4, line: 926, column: 75)
!9920 = !DILocation(line: 926, column: 95, scope: !9919)
!9921 = !DILocation(line: 926, column: 75, scope: !9919)
!9922 = !DILocation(line: 926, column: 105, scope: !9919)
!9923 = !DILocation(line: 926, column: 75, scope: !3075)
!9924 = !DILocation(line: 926, column: 75, scope: !9925)
!9925 = !DILexicalBlockFile(scope: !3075, file: !4, discriminator: 2)
!9926 = !DILocation(line: 926, column: 136, scope: !9927)
!9927 = !DILexicalBlockFile(scope: !9919, file: !4, discriminator: 3)
!9928 = !DILocation(line: 926, column: 154, scope: !9919)
!9929 = !DILocation(line: 926, column: 164, scope: !9919)
!9930 = !DILocation(line: 926, column: 189, scope: !9919)
!9931 = !DILocation(line: 926, column: 120, scope: !9919)
!9932 = !DILocation(line: 926, column: 208, scope: !9933)
!9933 = !DILexicalBlockFile(scope: !3076, file: !4, discriminator: 4)
!9934 = !DILocation(line: 926, column: 208, scope: !3075)
!9935 = !DILocation(line: 926, column: 208, scope: !9936)
!9936 = !DILexicalBlockFile(scope: !3075, file: !4, discriminator: 5)
!9937 = !DILocation(line: 927, column: 21, scope: !3076)
!9938 = !DILocation(line: 929, column: 55, scope: !3061)
!9939 = !DILocation(line: 929, column: 37, scope: !3061)
!9940 = !DILocation(line: 929, column: 19, scope: !3061)
!9941 = !DILocation(line: 929, column: 42, scope: !3061)
!9942 = !DILocation(line: 929, column: 18, scope: !3061)
!9943 = !DILocation(line: 929, column: 53, scope: !3061)
!9944 = !DILocation(line: 930, column: 50, scope: !3061)
!9945 = !DILocation(line: 930, column: 55, scope: !3061)
!9946 = !DILocation(line: 931, column: 50, scope: !3061)
!9947 = !DILocation(line: 931, column: 57, scope: !3061)
!9948 = !DILocation(line: 931, column: 64, scope: !3061)
!9949 = !DILocation(line: 931, column: 62, scope: !3061)
!9950 = !DILocation(line: 931, column: 68, scope: !3061)
!9951 = !DILocation(line: 931, column: 54, scope: !3061)
!9952 = !DILocation(line: 930, column: 21, scope: !3061)
!9953 = !DILocation(line: 930, column: 19, scope: !3061)
!9954 = !DILocation(line: 932, column: 21, scope: !3081)
!9955 = !DILocation(line: 932, column: 23, scope: !3081)
!9956 = !DILocation(line: 932, column: 21, scope: !3061)
!9957 = !DILocation(line: 933, column: 21, scope: !3080)
!9958 = !DILocation(line: 933, column: 26, scope: !9959)
!9959 = !DILexicalBlockFile(scope: !3079, file: !4, discriminator: 1)
!9960 = !DILocation(line: 933, column: 36, scope: !3079)
!9961 = !DILocation(line: 933, column: 66, scope: !3079)
!9962 = !DILocation(line: 933, column: 78, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !3079, file: !4, line: 933, column: 75)
!9964 = !DILocation(line: 933, column: 95, scope: !9963)
!9965 = !DILocation(line: 933, column: 75, scope: !9963)
!9966 = !DILocation(line: 933, column: 105, scope: !9963)
!9967 = !DILocation(line: 933, column: 75, scope: !3079)
!9968 = !DILocation(line: 933, column: 75, scope: !9969)
!9969 = !DILexicalBlockFile(scope: !3079, file: !4, discriminator: 2)
!9970 = !DILocation(line: 933, column: 136, scope: !9971)
!9971 = !DILexicalBlockFile(scope: !9963, file: !4, discriminator: 3)
!9972 = !DILocation(line: 933, column: 154, scope: !9963)
!9973 = !DILocation(line: 933, column: 164, scope: !9963)
!9974 = !DILocation(line: 933, column: 189, scope: !9963)
!9975 = !DILocation(line: 933, column: 120, scope: !9963)
!9976 = !DILocation(line: 933, column: 208, scope: !9977)
!9977 = !DILexicalBlockFile(scope: !3080, file: !4, discriminator: 4)
!9978 = !DILocation(line: 933, column: 208, scope: !3079)
!9979 = !DILocation(line: 933, column: 208, scope: !9980)
!9980 = !DILexicalBlockFile(scope: !3079, file: !4, discriminator: 5)
!9981 = !DILocation(line: 934, column: 21, scope: !3080)
!9982 = !DILocation(line: 936, column: 55, scope: !3061)
!9983 = !DILocation(line: 936, column: 37, scope: !3061)
!9984 = !DILocation(line: 936, column: 19, scope: !3061)
!9985 = !DILocation(line: 936, column: 42, scope: !3061)
!9986 = !DILocation(line: 936, column: 18, scope: !3061)
!9987 = !DILocation(line: 936, column: 53, scope: !3061)
!9988 = !DILocation(line: 937, column: 17, scope: !3061)
!9989 = !DILocation(line: 942, column: 31, scope: !3085)
!9990 = !DILocation(line: 942, column: 47, scope: !3085)
!9991 = !DILocation(line: 942, column: 17, scope: !3085)
!9992 = !DILocation(line: 942, column: 50, scope: !3085)
!9993 = !DILocation(line: 942, column: 17, scope: !3052)
!9994 = !DILocation(line: 943, column: 17, scope: !3084)
!9995 = !DILocation(line: 943, column: 22, scope: !9996)
!9996 = !DILexicalBlockFile(scope: !3083, file: !4, discriminator: 1)
!9997 = !DILocation(line: 943, column: 32, scope: !3083)
!9998 = !DILocation(line: 943, column: 62, scope: !3083)
!9999 = !DILocation(line: 943, column: 74, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !3083, file: !4, line: 943, column: 71)
!10001 = !DILocation(line: 943, column: 91, scope: !10000)
!10002 = !DILocation(line: 943, column: 71, scope: !10000)
!10003 = !DILocation(line: 943, column: 101, scope: !10000)
!10004 = !DILocation(line: 943, column: 71, scope: !3083)
!10005 = !DILocation(line: 943, column: 71, scope: !10006)
!10006 = !DILexicalBlockFile(scope: !3083, file: !4, discriminator: 2)
!10007 = !DILocation(line: 943, column: 132, scope: !10008)
!10008 = !DILexicalBlockFile(scope: !10000, file: !4, discriminator: 3)
!10009 = !DILocation(line: 943, column: 150, scope: !10000)
!10010 = !DILocation(line: 943, column: 160, scope: !10000)
!10011 = !DILocation(line: 943, column: 185, scope: !10000)
!10012 = !DILocation(line: 943, column: 116, scope: !10000)
!10013 = !DILocation(line: 943, column: 204, scope: !10014)
!10014 = !DILexicalBlockFile(scope: !3084, file: !4, discriminator: 4)
!10015 = !DILocation(line: 943, column: 204, scope: !3083)
!10016 = !DILocation(line: 943, column: 204, scope: !10017)
!10017 = !DILexicalBlockFile(scope: !3083, file: !4, discriminator: 5)
!10018 = !DILocation(line: 944, column: 17, scope: !3084)
!10019 = !DILocation(line: 946, column: 13, scope: !3052)
!10020 = !DILocation(line: 946, column: 18, scope: !10021)
!10021 = !DILexicalBlockFile(scope: !3087, file: !4, discriminator: 1)
!10022 = !DILocation(line: 946, column: 28, scope: !3087)
!10023 = !DILocation(line: 946, column: 58, scope: !3087)
!10024 = !DILocation(line: 946, column: 70, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !3087, file: !4, line: 946, column: 67)
!10026 = !DILocation(line: 946, column: 87, scope: !10025)
!10027 = !DILocation(line: 946, column: 67, scope: !10025)
!10028 = !DILocation(line: 946, column: 97, scope: !10025)
!10029 = !DILocation(line: 946, column: 67, scope: !3087)
!10030 = !DILocation(line: 946, column: 67, scope: !10031)
!10031 = !DILexicalBlockFile(scope: !3087, file: !4, discriminator: 2)
!10032 = !DILocation(line: 946, column: 128, scope: !10033)
!10033 = !DILexicalBlockFile(scope: !10025, file: !4, discriminator: 3)
!10034 = !DILocation(line: 946, column: 146, scope: !10025)
!10035 = !DILocation(line: 946, column: 156, scope: !10025)
!10036 = !DILocation(line: 946, column: 181, scope: !10025)
!10037 = !DILocation(line: 946, column: 112, scope: !10025)
!10038 = !DILocation(line: 946, column: 200, scope: !10039)
!10039 = !DILexicalBlockFile(scope: !3052, file: !4, discriminator: 4)
!10040 = !DILocation(line: 946, column: 200, scope: !3087)
!10041 = !DILocation(line: 946, column: 200, scope: !10042)
!10042 = !DILexicalBlockFile(scope: !3087, file: !4, discriminator: 5)
!10043 = !DILocation(line: 947, column: 9, scope: !3053)
!10044 = !DILocation(line: 947, column: 9, scope: !9649)
!10045 = !DILocation(line: 947, column: 9, scope: !3052)
!10046 = !DILocation(line: 825, column: 95, scope: !3053)
!10047 = !DILocation(line: 825, column: 9, scope: !3053)
!10048 = !DILocation(line: 948, column: 38, scope: !3055)
!10049 = !DILocation(line: 948, column: 22, scope: !3055)
!10050 = !DILocation(line: 948, column: 9, scope: !3055)
!10051 = !DILocation(line: 950, column: 14, scope: !2915)
!10052 = !DILocation(line: 950, column: 5, scope: !2915)
!10053 = !DILocation(line: 951, column: 9, scope: !3091)
!10054 = !DILocation(line: 951, column: 24, scope: !3091)
!10055 = !DILocation(line: 951, column: 9, scope: !2915)
!10056 = !DILocation(line: 952, column: 28, scope: !3090)
!10057 = !DILocation(line: 952, column: 13, scope: !3090)
!10058 = !DILocation(line: 952, column: 11, scope: !3090)
!10059 = !DILocation(line: 953, column: 9, scope: !3090)
!10060 = !DILocation(line: 953, column: 14, scope: !10061)
!10061 = !DILexicalBlockFile(scope: !3089, file: !4, discriminator: 1)
!10062 = !DILocation(line: 953, column: 24, scope: !3089)
!10063 = !DILocation(line: 953, column: 54, scope: !3089)
!10064 = !DILocation(line: 953, column: 79, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !3089, file: !4, line: 953, column: 76)
!10066 = !DILocation(line: 953, column: 96, scope: !10065)
!10067 = !DILocation(line: 953, column: 76, scope: !10065)
!10068 = !DILocation(line: 953, column: 106, scope: !10065)
!10069 = !DILocation(line: 953, column: 76, scope: !3089)
!10070 = !DILocation(line: 953, column: 76, scope: !10071)
!10071 = !DILexicalBlockFile(scope: !3089, file: !4, discriminator: 2)
!10072 = !DILocation(line: 953, column: 137, scope: !10073)
!10073 = !DILexicalBlockFile(scope: !10065, file: !4, discriminator: 3)
!10074 = !DILocation(line: 953, column: 155, scope: !10065)
!10075 = !DILocation(line: 953, column: 165, scope: !10065)
!10076 = !DILocation(line: 953, column: 190, scope: !10065)
!10077 = !DILocation(line: 953, column: 121, scope: !10065)
!10078 = !DILocation(line: 953, column: 209, scope: !10079)
!10079 = !DILexicalBlockFile(scope: !3090, file: !4, discriminator: 4)
!10080 = !DILocation(line: 953, column: 209, scope: !3089)
!10081 = !DILocation(line: 953, column: 209, scope: !10082)
!10082 = !DILexicalBlockFile(scope: !3089, file: !4, discriminator: 5)
!10083 = !DILocation(line: 954, column: 16, scope: !3090)
!10084 = !DILocation(line: 954, column: 9, scope: !3090)
!10085 = !DILocation(line: 956, column: 16, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !3091, file: !4, line: 955, column: 12)
!10087 = !DILocation(line: 956, column: 9, scope: !10086)
!10088 = !DILocation(line: 961, column: 9, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !2915, file: !4, line: 961, column: 9)
!10090 = !DILocation(line: 961, column: 16, scope: !10089)
!10091 = !DILocation(line: 961, column: 9, scope: !2915)
!10092 = !DILocation(line: 962, column: 18, scope: !10089)
!10093 = !DILocation(line: 962, column: 9, scope: !10089)
!10094 = !DILocation(line: 964, column: 9, scope: !3095)
!10095 = !DILocation(line: 964, column: 24, scope: !3095)
!10096 = !DILocation(line: 964, column: 9, scope: !2915)
!10097 = !DILocation(line: 965, column: 9, scope: !3094)
!10098 = !DILocation(line: 965, column: 14, scope: !10099)
!10099 = !DILexicalBlockFile(scope: !3093, file: !4, discriminator: 1)
!10100 = !DILocation(line: 965, column: 24, scope: !3093)
!10101 = !DILocation(line: 965, column: 55, scope: !3093)
!10102 = !DILocation(line: 965, column: 76, scope: !3098)
!10103 = !DILocation(line: 965, column: 92, scope: !3098)
!10104 = !DILocation(line: 965, column: 76, scope: !3093)
!10105 = !DILocation(line: 965, column: 107, scope: !10106)
!10106 = !DILexicalBlockFile(scope: !3098, file: !4, discriminator: 2)
!10107 = !DILocation(line: 965, column: 112, scope: !10108)
!10108 = !DILexicalBlockFile(scope: !3097, file: !4, discriminator: 4)
!10109 = !DILocation(line: 965, column: 122, scope: !3097)
!10110 = !DILocation(line: 965, column: 152, scope: !3097)
!10111 = !DILocation(line: 965, column: 178, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !3097, file: !4, line: 965, column: 175)
!10113 = !DILocation(line: 965, column: 195, scope: !10112)
!10114 = !DILocation(line: 965, column: 175, scope: !10112)
!10115 = !DILocation(line: 965, column: 205, scope: !10112)
!10116 = !DILocation(line: 965, column: 175, scope: !3097)
!10117 = !DILocation(line: 965, column: 175, scope: !10118)
!10118 = !DILexicalBlockFile(scope: !3097, file: !4, discriminator: 5)
!10119 = !DILocation(line: 965, column: 236, scope: !10120)
!10120 = !DILexicalBlockFile(scope: !10112, file: !4, discriminator: 6)
!10121 = !DILocation(line: 965, column: 254, scope: !10112)
!10122 = !DILocation(line: 965, column: 264, scope: !10112)
!10123 = !DILocation(line: 965, column: 289, scope: !10112)
!10124 = !DILocation(line: 965, column: 220, scope: !10112)
!10125 = !DILocation(line: 965, column: 308, scope: !10126)
!10126 = !DILexicalBlockFile(scope: !3098, file: !4, discriminator: 7)
!10127 = !DILocation(line: 965, column: 308, scope: !3097)
!10128 = !DILocation(line: 965, column: 308, scope: !10129)
!10129 = !DILexicalBlockFile(scope: !3097, file: !4, discriminator: 8)
!10130 = !DILocation(line: 965, column: 308, scope: !10131)
!10131 = !DILexicalBlockFile(scope: !3097, file: !4, discriminator: 9)
!10132 = !DILocation(line: 965, column: 321, scope: !10133)
!10133 = !DILexicalBlockFile(scope: !10134, file: !4, discriminator: 10)
!10134 = !DILexicalBlockFile(scope: !3094, file: !4, discriminator: 3)
!10135 = !DILocation(line: 965, column: 321, scope: !3093)
!10136 = !DILocation(line: 965, column: 321, scope: !10137)
!10137 = !DILexicalBlockFile(scope: !3093, file: !4, discriminator: 11)
!10138 = !DILocation(line: 966, column: 5, scope: !3094)
!10139 = !DILocation(line: 968, column: 5, scope: !2915)
!10140 = !DILocation(line: 969, column: 1, scope: !2915)
!10141 = !DILocation(line: 972, column: 20, scope: !3099)
!10142 = !DILocation(line: 972, column: 37, scope: !3099)
!10143 = !DILocation(line: 973, column: 5, scope: !3099)
!10144 = !DILocation(line: 973, column: 15, scope: !3099)
!10145 = !DILocation(line: 973, column: 34, scope: !3099)
!10146 = !DILocation(line: 974, column: 5, scope: !3099)
!10147 = !DILocation(line: 974, column: 9, scope: !3099)
!10148 = !DILocation(line: 974, column: 12, scope: !3099)
!10149 = !DILocation(line: 975, column: 5, scope: !3099)
!10150 = !DILocation(line: 975, column: 28, scope: !3099)
!10151 = !DILocation(line: 977, column: 29, scope: !3099)
!10152 = !DILocation(line: 977, column: 12, scope: !3099)
!10153 = !DILocation(line: 977, column: 10, scope: !3099)
!10154 = !DILocation(line: 978, column: 10, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !3099, file: !4, line: 978, column: 9)
!10156 = !DILocation(line: 978, column: 15, scope: !10155)
!10157 = !DILocation(line: 978, column: 30, scope: !10155)
!10158 = !DILocation(line: 978, column: 58, scope: !10159)
!10159 = !DILexicalBlockFile(scope: !10155, file: !4, discriminator: 1)
!10160 = !DILocation(line: 978, column: 42, scope: !10155)
!10161 = !DILocation(line: 978, column: 34, scope: !10155)
!10162 = !DILocation(line: 978, column: 108, scope: !10155)
!10163 = !DILocation(line: 978, column: 9, scope: !3099)
!10164 = !DILocation(line: 979, column: 9, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10155, file: !4, line: 978, column: 115)
!10166 = !DILocation(line: 982, column: 16, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !3099, file: !4, line: 982, column: 9)
!10168 = !DILocation(line: 982, column: 14, scope: !10167)
!10169 = !DILocation(line: 982, column: 31, scope: !10167)
!10170 = !DILocation(line: 982, column: 9, scope: !3099)
!10171 = !DILocation(line: 983, column: 9, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10167, file: !4, line: 982, column: 46)
!10173 = !DILocation(line: 986, column: 12, scope: !3118)
!10174 = !DILocation(line: 986, column: 10, scope: !3118)
!10175 = !DILocation(line: 986, column: 17, scope: !10176)
!10176 = !DILexicalBlockFile(scope: !10177, file: !4, discriminator: 2)
!10177 = !DILexicalBlockFile(scope: !3117, file: !4, discriminator: 1)
!10178 = !DILocation(line: 986, column: 45, scope: !3117)
!10179 = !DILocation(line: 986, column: 29, scope: !3117)
!10180 = !DILocation(line: 986, column: 21, scope: !3117)
!10181 = !DILocation(line: 986, column: 19, scope: !3117)
!10182 = !DILocation(line: 986, column: 5, scope: !3118)
!10183 = !DILocation(line: 987, column: 9, scope: !3116)
!10184 = !DILocation(line: 987, column: 29, scope: !3116)
!10185 = !DILocation(line: 987, column: 83, scope: !3116)
!10186 = !DILocation(line: 987, column: 67, scope: !3116)
!10187 = !DILocation(line: 987, column: 134, scope: !3116)
!10188 = !DILocation(line: 987, column: 57, scope: !3116)
!10189 = !DILocation(line: 987, column: 35, scope: !3116)
!10190 = !DILocation(line: 988, column: 9, scope: !3116)
!10191 = !DILocation(line: 988, column: 25, scope: !3116)
!10192 = !DILocation(line: 990, column: 26, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !3116, file: !4, line: 990, column: 13)
!10194 = !DILocation(line: 990, column: 30, scope: !10193)
!10195 = !{!10196, !3861, i64 0}
!10196 = !{!"ACCESS_DESCRIPTION_st", !3861, i64 0, !3861, i64 8}
!10197 = !DILocation(line: 990, column: 14, scope: !10193)
!10198 = !DILocation(line: 990, column: 41, scope: !10193)
!10199 = !DILocation(line: 990, column: 38, scope: !10193)
!10200 = !DILocation(line: 990, column: 46, scope: !10193)
!10201 = !DILocation(line: 991, column: 18, scope: !10193)
!10202 = !DILocation(line: 991, column: 22, scope: !10193)
!10203 = !{!10196, !3861, i64 8}
!10204 = !DILocation(line: 991, column: 32, scope: !10193)
!10205 = !DILocation(line: 991, column: 37, scope: !10193)
!10206 = !DILocation(line: 990, column: 13, scope: !3116)
!10207 = !DILocation(line: 992, column: 13, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10193, file: !4, line: 991, column: 44)
!10209 = !DILocation(line: 994, column: 15, scope: !3116)
!10210 = !DILocation(line: 994, column: 19, scope: !3116)
!10211 = !DILocation(line: 994, column: 29, scope: !3116)
!10212 = !DILocation(line: 994, column: 31, scope: !3116)
!10213 = !DILocation(line: 994, column: 13, scope: !3116)
!10214 = !DILocation(line: 995, column: 52, scope: !3116)
!10215 = !DILocation(line: 995, column: 57, scope: !3116)
!10216 = !DILocation(line: 996, column: 44, scope: !3116)
!10217 = !DILocation(line: 996, column: 49, scope: !3116)
!10218 = !DILocation(line: 995, column: 16, scope: !3116)
!10219 = !DILocation(line: 995, column: 14, scope: !3116)
!10220 = !DILocation(line: 997, column: 13, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !3116, file: !4, line: 997, column: 13)
!10222 = !DILocation(line: 997, column: 18, scope: !10221)
!10223 = !DILocation(line: 997, column: 13, scope: !3116)
!10224 = !DILocation(line: 998, column: 13, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10221, file: !4, line: 997, column: 33)
!10226 = !DILocation(line: 1000, column: 32, scope: !3116)
!10227 = !DILocation(line: 1000, column: 37, scope: !3116)
!10228 = !DILocation(line: 1000, column: 18, scope: !3116)
!10229 = !DILocation(line: 1000, column: 16, scope: !3116)
!10230 = !DILocation(line: 1001, column: 9, scope: !3116)
!10231 = !DILocation(line: 1001, column: 14, scope: !10232)
!10232 = !DILexicalBlockFile(scope: !3121, file: !4, discriminator: 1)
!10233 = !DILocation(line: 1001, column: 24, scope: !3121)
!10234 = !DILocation(line: 1001, column: 54, scope: !3121)
!10235 = !DILocation(line: 1001, column: 69, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !3121, file: !4, line: 1001, column: 66)
!10237 = !DILocation(line: 1001, column: 86, scope: !10236)
!10238 = !DILocation(line: 1001, column: 66, scope: !10236)
!10239 = !DILocation(line: 1001, column: 96, scope: !10236)
!10240 = !DILocation(line: 1001, column: 66, scope: !3121)
!10241 = !DILocation(line: 1001, column: 66, scope: !10242)
!10242 = !DILexicalBlockFile(scope: !3121, file: !4, discriminator: 2)
!10243 = !DILocation(line: 1001, column: 127, scope: !10244)
!10244 = !DILexicalBlockFile(scope: !10236, file: !4, discriminator: 3)
!10245 = !DILocation(line: 1001, column: 145, scope: !10236)
!10246 = !DILocation(line: 1001, column: 155, scope: !10236)
!10247 = !DILocation(line: 1001, column: 180, scope: !10236)
!10248 = !DILocation(line: 1001, column: 111, scope: !10236)
!10249 = !DILocation(line: 1001, column: 199, scope: !10250)
!10250 = !DILexicalBlockFile(scope: !3116, file: !4, discriminator: 4)
!10251 = !DILocation(line: 1001, column: 199, scope: !3121)
!10252 = !DILocation(line: 1001, column: 199, scope: !10253)
!10253 = !DILexicalBlockFile(scope: !3121, file: !4, discriminator: 5)
!10254 = !DILocation(line: 1002, column: 13, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !3116, file: !4, line: 1002, column: 13)
!10256 = !DILocation(line: 1002, column: 20, scope: !10255)
!10257 = !DILocation(line: 1002, column: 13, scope: !3116)
!10258 = !DILocation(line: 1003, column: 13, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10255, file: !4, line: 1002, column: 25)
!10260 = !DILocation(line: 1005, column: 5, scope: !3117)
!10261 = !DILocation(line: 1005, column: 5, scope: !10177)
!10262 = !DILocation(line: 1005, column: 5, scope: !3116)
!10263 = !DILocation(line: 986, column: 97, scope: !3117)
!10264 = !DILocation(line: 986, column: 5, scope: !3117)
!10265 = !DILocation(line: 1006, column: 32, scope: !3099)
!10266 = !DILocation(line: 1006, column: 5, scope: !3099)
!10267 = !DILocation(line: 1009, column: 21, scope: !3125)
!10268 = !DILocation(line: 1009, column: 9, scope: !3125)
!10269 = !DILocation(line: 1009, column: 26, scope: !3125)
!10270 = !DILocation(line: 1009, column: 9, scope: !3099)
!10271 = !DILocation(line: 1010, column: 9, scope: !3124)
!10272 = !DILocation(line: 1010, column: 14, scope: !10273)
!10273 = !DILexicalBlockFile(scope: !3123, file: !4, discriminator: 1)
!10274 = !DILocation(line: 1010, column: 24, scope: !3123)
!10275 = !DILocation(line: 1010, column: 54, scope: !3123)
!10276 = !DILocation(line: 1010, column: 68, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !3123, file: !4, line: 1010, column: 65)
!10278 = !DILocation(line: 1010, column: 85, scope: !10277)
!10279 = !DILocation(line: 1010, column: 65, scope: !10277)
!10280 = !DILocation(line: 1010, column: 95, scope: !10277)
!10281 = !DILocation(line: 1010, column: 65, scope: !3123)
!10282 = !DILocation(line: 1010, column: 65, scope: !10283)
!10283 = !DILexicalBlockFile(scope: !3123, file: !4, discriminator: 2)
!10284 = !DILocation(line: 1010, column: 126, scope: !10285)
!10285 = !DILexicalBlockFile(scope: !10277, file: !4, discriminator: 3)
!10286 = !DILocation(line: 1010, column: 144, scope: !10277)
!10287 = !DILocation(line: 1010, column: 154, scope: !10277)
!10288 = !DILocation(line: 1010, column: 179, scope: !10277)
!10289 = !DILocation(line: 1010, column: 110, scope: !10277)
!10290 = !DILocation(line: 1010, column: 198, scope: !10291)
!10291 = !DILexicalBlockFile(scope: !3124, file: !4, discriminator: 4)
!10292 = !DILocation(line: 1010, column: 198, scope: !3123)
!10293 = !DILocation(line: 1010, column: 198, scope: !10294)
!10294 = !DILexicalBlockFile(scope: !3123, file: !4, discriminator: 5)
!10295 = !DILocation(line: 1011, column: 9, scope: !3124)
!10296 = !DILocation(line: 1013, column: 9, scope: !3127)
!10297 = !DILocation(line: 1013, column: 19, scope: !3127)
!10298 = !DILocation(line: 1014, column: 30, scope: !3127)
!10299 = !DILocation(line: 1014, column: 15, scope: !3127)
!10300 = !DILocation(line: 1014, column: 13, scope: !3127)
!10301 = !DILocation(line: 1015, column: 9, scope: !3127)
!10302 = !DILocation(line: 1015, column: 14, scope: !10303)
!10303 = !DILexicalBlockFile(scope: !3129, file: !4, discriminator: 1)
!10304 = !DILocation(line: 1015, column: 24, scope: !3129)
!10305 = !DILocation(line: 1015, column: 54, scope: !3129)
!10306 = !DILocation(line: 1015, column: 68, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !3129, file: !4, line: 1015, column: 65)
!10308 = !DILocation(line: 1015, column: 85, scope: !10307)
!10309 = !DILocation(line: 1015, column: 65, scope: !10307)
!10310 = !DILocation(line: 1015, column: 95, scope: !10307)
!10311 = !DILocation(line: 1015, column: 65, scope: !3129)
!10312 = !DILocation(line: 1015, column: 65, scope: !10313)
!10313 = !DILexicalBlockFile(scope: !3129, file: !4, discriminator: 2)
!10314 = !DILocation(line: 1015, column: 126, scope: !10315)
!10315 = !DILexicalBlockFile(scope: !10307, file: !4, discriminator: 3)
!10316 = !DILocation(line: 1015, column: 144, scope: !10307)
!10317 = !DILocation(line: 1015, column: 154, scope: !10307)
!10318 = !DILocation(line: 1015, column: 179, scope: !10307)
!10319 = !DILocation(line: 1015, column: 110, scope: !10307)
!10320 = !DILocation(line: 1015, column: 198, scope: !10321)
!10321 = !DILexicalBlockFile(scope: !3127, file: !4, discriminator: 4)
!10322 = !DILocation(line: 1015, column: 198, scope: !3129)
!10323 = !DILocation(line: 1015, column: 198, scope: !10324)
!10324 = !DILexicalBlockFile(scope: !3129, file: !4, discriminator: 5)
!10325 = !DILocation(line: 1016, column: 16, scope: !3127)
!10326 = !DILocation(line: 1016, column: 9, scope: !3127)
!10327 = !DILocation(line: 1017, column: 5, scope: !3125)
!10328 = !DILocation(line: 1020, column: 32, scope: !3099)
!10329 = !DILocation(line: 1020, column: 5, scope: !3099)
!10330 = !DILocation(line: 1021, column: 5, scope: !3099)
!10331 = !DILocation(line: 1021, column: 10, scope: !10332)
!10332 = !DILexicalBlockFile(scope: !3131, file: !4, discriminator: 1)
!10333 = !DILocation(line: 1021, column: 20, scope: !3131)
!10334 = !DILocation(line: 1021, column: 51, scope: !3131)
!10335 = !DILocation(line: 1021, column: 61, scope: !3134)
!10336 = !DILocation(line: 1021, column: 77, scope: !3134)
!10337 = !DILocation(line: 1021, column: 61, scope: !3131)
!10338 = !DILocation(line: 1021, column: 92, scope: !10339)
!10339 = !DILexicalBlockFile(scope: !3134, file: !4, discriminator: 2)
!10340 = !DILocation(line: 1021, column: 97, scope: !10341)
!10341 = !DILexicalBlockFile(scope: !3133, file: !4, discriminator: 4)
!10342 = !DILocation(line: 1021, column: 107, scope: !3133)
!10343 = !DILocation(line: 1021, column: 137, scope: !3133)
!10344 = !DILocation(line: 1021, column: 163, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !3133, file: !4, line: 1021, column: 160)
!10346 = !DILocation(line: 1021, column: 180, scope: !10345)
!10347 = !DILocation(line: 1021, column: 160, scope: !10345)
!10348 = !DILocation(line: 1021, column: 190, scope: !10345)
!10349 = !DILocation(line: 1021, column: 160, scope: !3133)
!10350 = !DILocation(line: 1021, column: 160, scope: !10351)
!10351 = !DILexicalBlockFile(scope: !3133, file: !4, discriminator: 5)
!10352 = !DILocation(line: 1021, column: 221, scope: !10353)
!10353 = !DILexicalBlockFile(scope: !10345, file: !4, discriminator: 6)
!10354 = !DILocation(line: 1021, column: 239, scope: !10345)
!10355 = !DILocation(line: 1021, column: 249, scope: !10345)
!10356 = !DILocation(line: 1021, column: 274, scope: !10345)
!10357 = !DILocation(line: 1021, column: 205, scope: !10345)
!10358 = !DILocation(line: 1021, column: 293, scope: !10359)
!10359 = !DILexicalBlockFile(scope: !3134, file: !4, discriminator: 7)
!10360 = !DILocation(line: 1021, column: 293, scope: !3133)
!10361 = !DILocation(line: 1021, column: 293, scope: !10362)
!10362 = !DILexicalBlockFile(scope: !3133, file: !4, discriminator: 8)
!10363 = !DILocation(line: 1021, column: 293, scope: !10364)
!10364 = !DILexicalBlockFile(scope: !3133, file: !4, discriminator: 9)
!10365 = !DILocation(line: 1021, column: 306, scope: !10366)
!10366 = !DILexicalBlockFile(scope: !10367, file: !4, discriminator: 10)
!10367 = !DILexicalBlockFile(scope: !3099, file: !4, discriminator: 3)
!10368 = !DILocation(line: 1021, column: 306, scope: !3131)
!10369 = !DILocation(line: 1021, column: 306, scope: !10370)
!10370 = !DILexicalBlockFile(scope: !3131, file: !4, discriminator: 11)
!10371 = !DILocation(line: 1022, column: 5, scope: !3099)
!10372 = !DILocation(line: 1023, column: 1, scope: !3099)
!10373 = !DILocation(line: 1026, column: 19, scope: !3135)
!10374 = !DILocation(line: 1027, column: 5, scope: !3135)
!10375 = !DILocation(line: 1027, column: 33, scope: !3135)
!10376 = !DILocation(line: 1028, column: 5, scope: !3135)
!10377 = !DILocation(line: 1028, column: 9, scope: !3135)
!10378 = !DILocation(line: 1028, column: 12, scope: !3135)
!10379 = !DILocation(line: 1028, column: 15, scope: !3135)
!10380 = !DILocation(line: 1029, column: 5, scope: !3135)
!10381 = !DILocation(line: 1029, column: 15, scope: !3135)
!10382 = !DILocation(line: 1036, column: 19, scope: !3135)
!10383 = !DILocation(line: 1036, column: 5, scope: !3135)
!10384 = !DILocation(line: 1037, column: 11, scope: !3135)
!10385 = !DILocation(line: 1037, column: 24, scope: !3135)
!10386 = !{!8560, !3861, i64 128}
!10387 = !DILocation(line: 1037, column: 9, scope: !3135)
!10388 = !DILocation(line: 1040, column: 9, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !3135, file: !4, line: 1040, column: 9)
!10390 = !DILocation(line: 1040, column: 13, scope: !10389)
!10391 = !DILocation(line: 1040, column: 9, scope: !3135)
!10392 = !DILocation(line: 1041, column: 9, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10389, file: !4, line: 1040, column: 28)
!10394 = !DILocation(line: 1044, column: 16, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !3135, file: !4, line: 1044, column: 9)
!10396 = !DILocation(line: 1044, column: 14, scope: !10395)
!10397 = !DILocation(line: 1044, column: 31, scope: !10395)
!10398 = !DILocation(line: 1044, column: 9, scope: !3135)
!10399 = !DILocation(line: 1045, column: 9, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10395, file: !4, line: 1044, column: 46)
!10401 = !DILocation(line: 1048, column: 11, scope: !3146)
!10402 = !DILocation(line: 1048, column: 10, scope: !3146)
!10403 = !DILocation(line: 1048, column: 15, scope: !10404)
!10404 = !DILexicalBlockFile(scope: !10405, file: !4, discriminator: 2)
!10405 = !DILexicalBlockFile(scope: !3145, file: !4, discriminator: 1)
!10406 = !DILocation(line: 1048, column: 43, scope: !3145)
!10407 = !DILocation(line: 1048, column: 27, scope: !3145)
!10408 = !DILocation(line: 1048, column: 19, scope: !3145)
!10409 = !DILocation(line: 1048, column: 17, scope: !3145)
!10410 = !DILocation(line: 1048, column: 5, scope: !3146)
!10411 = !DILocation(line: 1049, column: 9, scope: !3144)
!10412 = !DILocation(line: 1049, column: 21, scope: !3144)
!10413 = !DILocation(line: 1050, column: 9, scope: !3144)
!10414 = !DILocation(line: 1050, column: 39, scope: !3144)
!10415 = !DILocation(line: 1052, column: 55, scope: !3144)
!10416 = !DILocation(line: 1052, column: 39, scope: !3144)
!10417 = !DILocation(line: 1052, column: 97, scope: !3144)
!10418 = !DILocation(line: 1052, column: 29, scope: !3144)
!10419 = !DILocation(line: 1052, column: 15, scope: !3144)
!10420 = !DILocation(line: 1052, column: 12, scope: !3144)
!10421 = !DILocation(line: 1053, column: 15, scope: !3144)
!10422 = !DILocation(line: 1053, column: 19, scope: !3144)
!10423 = !{!10424, !3861, i64 0}
!10424 = !{!"DIST_POINT_st", !3861, i64 0, !3861, i64 8, !3861, i64 16, !3893, i64 24}
!10425 = !DILocation(line: 1053, column: 30, scope: !3144)
!10426 = !DILocation(line: 1053, column: 35, scope: !3144)
!10427 = !DILocation(line: 1053, column: 13, scope: !3144)
!10428 = !DILocation(line: 1055, column: 15, scope: !3151)
!10429 = !DILocation(line: 1055, column: 14, scope: !3151)
!10430 = !DILocation(line: 1055, column: 19, scope: !10431)
!10431 = !DILexicalBlockFile(scope: !10432, file: !4, discriminator: 2)
!10432 = !DILexicalBlockFile(scope: !3150, file: !4, discriminator: 1)
!10433 = !DILocation(line: 1055, column: 47, scope: !3150)
!10434 = !DILocation(line: 1055, column: 31, scope: !3150)
!10435 = !DILocation(line: 1055, column: 23, scope: !3150)
!10436 = !DILocation(line: 1055, column: 21, scope: !3150)
!10437 = !DILocation(line: 1055, column: 9, scope: !3151)
!10438 = !DILocation(line: 1056, column: 13, scope: !3149)
!10439 = !DILocation(line: 1056, column: 27, scope: !3149)
!10440 = !DILocation(line: 1057, column: 13, scope: !3149)
!10441 = !DILocation(line: 1057, column: 29, scope: !3149)
!10442 = !DILocation(line: 1058, column: 13, scope: !3149)
!10443 = !DILocation(line: 1058, column: 23, scope: !3149)
!10444 = !DILocation(line: 1060, column: 61, scope: !3149)
!10445 = !DILocation(line: 1060, column: 45, scope: !3149)
!10446 = !DILocation(line: 1060, column: 105, scope: !3149)
!10447 = !DILocation(line: 1060, column: 35, scope: !3149)
!10448 = !DILocation(line: 1060, column: 19, scope: !3149)
!10449 = !DILocation(line: 1060, column: 16, scope: !3149)
!10450 = !DILocation(line: 1061, column: 17, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !3149, file: !4, line: 1061, column: 17)
!10452 = !DILocation(line: 1061, column: 21, scope: !10451)
!10453 = !DILocation(line: 1061, column: 26, scope: !10451)
!10454 = !DILocation(line: 1061, column: 17, scope: !3149)
!10455 = !DILocation(line: 1062, column: 17, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10451, file: !4, line: 1061, column: 32)
!10457 = !DILocation(line: 1064, column: 19, scope: !3149)
!10458 = !DILocation(line: 1064, column: 23, scope: !3149)
!10459 = !DILocation(line: 1064, column: 25, scope: !3149)
!10460 = !DILocation(line: 1064, column: 17, scope: !3149)
!10461 = !DILocation(line: 1065, column: 56, scope: !3149)
!10462 = !DILocation(line: 1065, column: 61, scope: !3149)
!10463 = !DILocation(line: 1066, column: 48, scope: !3149)
!10464 = !DILocation(line: 1066, column: 53, scope: !3149)
!10465 = !DILocation(line: 1065, column: 20, scope: !3149)
!10466 = !DILocation(line: 1065, column: 18, scope: !3149)
!10467 = !DILocation(line: 1067, column: 17, scope: !3157)
!10468 = !DILocation(line: 1067, column: 22, scope: !3157)
!10469 = !DILocation(line: 1067, column: 17, scope: !3149)
!10470 = !DILocation(line: 1068, column: 17, scope: !3156)
!10471 = !DILocation(line: 1068, column: 22, scope: !10472)
!10472 = !DILexicalBlockFile(scope: !3155, file: !4, discriminator: 1)
!10473 = !DILocation(line: 1068, column: 32, scope: !3155)
!10474 = !DILocation(line: 1068, column: 62, scope: !3155)
!10475 = !DILocation(line: 1068, column: 76, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !3155, file: !4, line: 1068, column: 73)
!10477 = !DILocation(line: 1068, column: 93, scope: !10476)
!10478 = !DILocation(line: 1068, column: 73, scope: !10476)
!10479 = !DILocation(line: 1068, column: 103, scope: !10476)
!10480 = !DILocation(line: 1068, column: 73, scope: !3155)
!10481 = !DILocation(line: 1068, column: 73, scope: !10482)
!10482 = !DILexicalBlockFile(scope: !3155, file: !4, discriminator: 2)
!10483 = !DILocation(line: 1068, column: 134, scope: !10484)
!10484 = !DILexicalBlockFile(scope: !10476, file: !4, discriminator: 3)
!10485 = !DILocation(line: 1068, column: 152, scope: !10476)
!10486 = !DILocation(line: 1068, column: 162, scope: !10476)
!10487 = !DILocation(line: 1068, column: 187, scope: !10476)
!10488 = !DILocation(line: 1068, column: 118, scope: !10476)
!10489 = !DILocation(line: 1068, column: 206, scope: !10490)
!10490 = !DILexicalBlockFile(scope: !3156, file: !4, discriminator: 4)
!10491 = !DILocation(line: 1068, column: 206, scope: !3155)
!10492 = !DILocation(line: 1068, column: 206, scope: !10493)
!10493 = !DILexicalBlockFile(scope: !3155, file: !4, discriminator: 5)
!10494 = !DILocation(line: 1069, column: 17, scope: !3156)
!10495 = !DILocation(line: 1071, column: 36, scope: !3149)
!10496 = !DILocation(line: 1071, column: 41, scope: !3149)
!10497 = !DILocation(line: 1071, column: 22, scope: !3149)
!10498 = !DILocation(line: 1071, column: 20, scope: !3149)
!10499 = !DILocation(line: 1072, column: 13, scope: !3149)
!10500 = !DILocation(line: 1072, column: 18, scope: !10501)
!10501 = !DILexicalBlockFile(scope: !3159, file: !4, discriminator: 1)
!10502 = !DILocation(line: 1072, column: 28, scope: !3159)
!10503 = !DILocation(line: 1072, column: 58, scope: !3159)
!10504 = !DILocation(line: 1072, column: 73, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !3159, file: !4, line: 1072, column: 70)
!10506 = !DILocation(line: 1072, column: 90, scope: !10505)
!10507 = !DILocation(line: 1072, column: 70, scope: !10505)
!10508 = !DILocation(line: 1072, column: 100, scope: !10505)
!10509 = !DILocation(line: 1072, column: 70, scope: !3159)
!10510 = !DILocation(line: 1072, column: 70, scope: !10511)
!10511 = !DILexicalBlockFile(scope: !3159, file: !4, discriminator: 2)
!10512 = !DILocation(line: 1072, column: 131, scope: !10513)
!10513 = !DILexicalBlockFile(scope: !10505, file: !4, discriminator: 3)
!10514 = !DILocation(line: 1072, column: 149, scope: !10505)
!10515 = !DILocation(line: 1072, column: 159, scope: !10505)
!10516 = !DILocation(line: 1072, column: 184, scope: !10505)
!10517 = !DILocation(line: 1072, column: 115, scope: !10505)
!10518 = !DILocation(line: 1072, column: 203, scope: !10519)
!10519 = !DILexicalBlockFile(scope: !3149, file: !4, discriminator: 4)
!10520 = !DILocation(line: 1072, column: 203, scope: !3159)
!10521 = !DILocation(line: 1072, column: 203, scope: !10522)
!10522 = !DILexicalBlockFile(scope: !3159, file: !4, discriminator: 5)
!10523 = !DILocation(line: 1073, column: 17, scope: !3163)
!10524 = !DILocation(line: 1073, column: 24, scope: !3163)
!10525 = !DILocation(line: 1073, column: 17, scope: !3149)
!10526 = !DILocation(line: 1074, column: 17, scope: !3162)
!10527 = !DILocation(line: 1074, column: 22, scope: !10528)
!10528 = !DILexicalBlockFile(scope: !3161, file: !4, discriminator: 1)
!10529 = !DILocation(line: 1074, column: 32, scope: !3161)
!10530 = !DILocation(line: 1074, column: 62, scope: !3161)
!10531 = !DILocation(line: 1074, column: 76, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !3161, file: !4, line: 1074, column: 73)
!10533 = !DILocation(line: 1074, column: 93, scope: !10532)
!10534 = !DILocation(line: 1074, column: 73, scope: !10532)
!10535 = !DILocation(line: 1074, column: 103, scope: !10532)
!10536 = !DILocation(line: 1074, column: 73, scope: !3161)
!10537 = !DILocation(line: 1074, column: 73, scope: !10538)
!10538 = !DILexicalBlockFile(scope: !3161, file: !4, discriminator: 2)
!10539 = !DILocation(line: 1074, column: 134, scope: !10540)
!10540 = !DILexicalBlockFile(scope: !10532, file: !4, discriminator: 3)
!10541 = !DILocation(line: 1074, column: 152, scope: !10532)
!10542 = !DILocation(line: 1074, column: 162, scope: !10532)
!10543 = !DILocation(line: 1074, column: 187, scope: !10532)
!10544 = !DILocation(line: 1074, column: 118, scope: !10532)
!10545 = !DILocation(line: 1074, column: 206, scope: !10546)
!10546 = !DILexicalBlockFile(scope: !3162, file: !4, discriminator: 4)
!10547 = !DILocation(line: 1074, column: 206, scope: !3161)
!10548 = !DILocation(line: 1074, column: 206, scope: !10549)
!10549 = !DILexicalBlockFile(scope: !3161, file: !4, discriminator: 5)
!10550 = !DILocation(line: 1075, column: 17, scope: !3162)
!10551 = !DILocation(line: 1077, column: 9, scope: !3150)
!10552 = !DILocation(line: 1077, column: 9, scope: !10432)
!10553 = !DILocation(line: 1077, column: 9, scope: !3149)
!10554 = !DILocation(line: 1055, column: 92, scope: !3150)
!10555 = !DILocation(line: 1055, column: 9, scope: !3150)
!10556 = !DILocation(line: 1078, column: 5, scope: !3145)
!10557 = !DILocation(line: 1078, column: 5, scope: !10405)
!10558 = !DILocation(line: 1078, column: 5, scope: !3144)
!10559 = !DILocation(line: 1048, column: 86, scope: !3145)
!10560 = !DILocation(line: 1048, column: 5, scope: !3145)
!10561 = !DILocation(line: 1080, column: 21, scope: !3167)
!10562 = !DILocation(line: 1080, column: 9, scope: !3167)
!10563 = !DILocation(line: 1080, column: 26, scope: !3167)
!10564 = !DILocation(line: 1080, column: 9, scope: !3135)
!10565 = !DILocation(line: 1081, column: 9, scope: !3166)
!10566 = !DILocation(line: 1081, column: 14, scope: !10567)
!10567 = !DILexicalBlockFile(scope: !3165, file: !4, discriminator: 1)
!10568 = !DILocation(line: 1081, column: 24, scope: !3165)
!10569 = !DILocation(line: 1081, column: 54, scope: !3165)
!10570 = !DILocation(line: 1081, column: 68, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !3165, file: !4, line: 1081, column: 65)
!10572 = !DILocation(line: 1081, column: 85, scope: !10571)
!10573 = !DILocation(line: 1081, column: 65, scope: !10571)
!10574 = !DILocation(line: 1081, column: 95, scope: !10571)
!10575 = !DILocation(line: 1081, column: 65, scope: !3165)
!10576 = !DILocation(line: 1081, column: 65, scope: !10577)
!10577 = !DILexicalBlockFile(scope: !3165, file: !4, discriminator: 2)
!10578 = !DILocation(line: 1081, column: 126, scope: !10579)
!10579 = !DILexicalBlockFile(scope: !10571, file: !4, discriminator: 3)
!10580 = !DILocation(line: 1081, column: 144, scope: !10571)
!10581 = !DILocation(line: 1081, column: 154, scope: !10571)
!10582 = !DILocation(line: 1081, column: 179, scope: !10571)
!10583 = !DILocation(line: 1081, column: 110, scope: !10571)
!10584 = !DILocation(line: 1081, column: 198, scope: !10585)
!10585 = !DILexicalBlockFile(scope: !3166, file: !4, discriminator: 4)
!10586 = !DILocation(line: 1081, column: 198, scope: !3165)
!10587 = !DILocation(line: 1081, column: 198, scope: !10588)
!10588 = !DILexicalBlockFile(scope: !3165, file: !4, discriminator: 5)
!10589 = !DILocation(line: 1082, column: 9, scope: !3166)
!10590 = !DILocation(line: 1084, column: 9, scope: !3169)
!10591 = !DILocation(line: 1084, column: 19, scope: !3169)
!10592 = !DILocation(line: 1085, column: 30, scope: !3169)
!10593 = !DILocation(line: 1085, column: 15, scope: !3169)
!10594 = !DILocation(line: 1085, column: 13, scope: !3169)
!10595 = !DILocation(line: 1086, column: 9, scope: !3169)
!10596 = !DILocation(line: 1086, column: 14, scope: !10597)
!10597 = !DILexicalBlockFile(scope: !3171, file: !4, discriminator: 1)
!10598 = !DILocation(line: 1086, column: 24, scope: !3171)
!10599 = !DILocation(line: 1086, column: 54, scope: !3171)
!10600 = !DILocation(line: 1086, column: 68, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !3171, file: !4, line: 1086, column: 65)
!10602 = !DILocation(line: 1086, column: 85, scope: !10601)
!10603 = !DILocation(line: 1086, column: 65, scope: !10601)
!10604 = !DILocation(line: 1086, column: 95, scope: !10601)
!10605 = !DILocation(line: 1086, column: 65, scope: !3171)
!10606 = !DILocation(line: 1086, column: 65, scope: !10607)
!10607 = !DILexicalBlockFile(scope: !3171, file: !4, discriminator: 2)
!10608 = !DILocation(line: 1086, column: 126, scope: !10609)
!10609 = !DILexicalBlockFile(scope: !10601, file: !4, discriminator: 3)
!10610 = !DILocation(line: 1086, column: 144, scope: !10601)
!10611 = !DILocation(line: 1086, column: 154, scope: !10601)
!10612 = !DILocation(line: 1086, column: 179, scope: !10601)
!10613 = !DILocation(line: 1086, column: 110, scope: !10601)
!10614 = !DILocation(line: 1086, column: 198, scope: !10615)
!10615 = !DILexicalBlockFile(scope: !3169, file: !4, discriminator: 4)
!10616 = !DILocation(line: 1086, column: 198, scope: !3171)
!10617 = !DILocation(line: 1086, column: 198, scope: !10618)
!10618 = !DILexicalBlockFile(scope: !3171, file: !4, discriminator: 5)
!10619 = !DILocation(line: 1087, column: 16, scope: !3169)
!10620 = !DILocation(line: 1087, column: 9, scope: !3169)
!10621 = !DILocation(line: 1088, column: 5, scope: !3167)
!10622 = !DILocation(line: 1089, column: 1, scope: !3135)
!10623 = !DILocation(line: 616, column: 43, scope: !2888)
!10624 = !DILocation(line: 616, column: 62, scope: !2888)
!10625 = !DILocation(line: 618, column: 5, scope: !2888)
!10626 = !DILocation(line: 618, column: 10, scope: !2888)
!10627 = !DILocation(line: 619, column: 5, scope: !2888)
!10628 = !DILocation(line: 619, column: 9, scope: !2888)
!10629 = !DILocation(line: 620, column: 5, scope: !2888)
!10630 = !DILocation(line: 620, column: 15, scope: !2888)
!10631 = !DILocation(line: 621, column: 5, scope: !2888)
!10632 = !DILocation(line: 621, column: 15, scope: !2888)
!10633 = !DILocation(line: 622, column: 5, scope: !2888)
!10634 = !DILocation(line: 622, column: 15, scope: !2888)
!10635 = !DILocation(line: 623, column: 5, scope: !2888)
!10636 = !DILocation(line: 623, column: 20, scope: !2888)
!10637 = !DILocation(line: 625, column: 26, scope: !2888)
!10638 = !DILocation(line: 625, column: 52, scope: !2888)
!10639 = !DILocation(line: 625, column: 14, scope: !2888)
!10640 = !DILocation(line: 625, column: 12, scope: !2888)
!10641 = !DILocation(line: 626, column: 9, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !2888, file: !4, line: 626, column: 9)
!10643 = !DILocation(line: 626, column: 16, scope: !10642)
!10644 = !DILocation(line: 626, column: 9, scope: !2888)
!10645 = !DILocation(line: 627, column: 9, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10642, file: !4, line: 626, column: 21)
!10647 = !DILocation(line: 628, column: 9, scope: !10646)
!10648 = !DILocation(line: 630, column: 44, scope: !2888)
!10649 = !DILocation(line: 630, column: 53, scope: !2888)
!10650 = !DILocation(line: 630, column: 16, scope: !2888)
!10651 = !DILocation(line: 630, column: 14, scope: !2888)
!10652 = !DILocation(line: 631, column: 9, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !2888, file: !4, line: 631, column: 9)
!10654 = !DILocation(line: 631, column: 18, scope: !10653)
!10655 = !DILocation(line: 631, column: 9, scope: !2888)
!10656 = !DILocation(line: 632, column: 9, scope: !10653)
!10657 = !DILocation(line: 634, column: 45, scope: !2888)
!10658 = !DILocation(line: 634, column: 14, scope: !2888)
!10659 = !DILocation(line: 634, column: 12, scope: !2888)
!10660 = !DILocation(line: 635, column: 9, scope: !2904)
!10661 = !DILocation(line: 635, column: 16, scope: !2904)
!10662 = !DILocation(line: 635, column: 9, scope: !2888)
!10663 = !DILocation(line: 636, column: 9, scope: !2903)
!10664 = !DILocation(line: 637, column: 9, scope: !2903)
!10665 = !DILocation(line: 637, column: 14, scope: !10666)
!10666 = !DILexicalBlockFile(scope: !2902, file: !4, discriminator: 1)
!10667 = !DILocation(line: 637, column: 24, scope: !2902)
!10668 = !DILocation(line: 637, column: 54, scope: !2902)
!10669 = !DILocation(line: 637, column: 73, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !2902, file: !4, line: 637, column: 70)
!10671 = !DILocation(line: 637, column: 90, scope: !10670)
!10672 = !DILocation(line: 637, column: 70, scope: !10670)
!10673 = !DILocation(line: 637, column: 100, scope: !10670)
!10674 = !DILocation(line: 637, column: 70, scope: !2902)
!10675 = !DILocation(line: 637, column: 70, scope: !10676)
!10676 = !DILexicalBlockFile(scope: !2902, file: !4, discriminator: 2)
!10677 = !DILocation(line: 637, column: 131, scope: !10678)
!10678 = !DILexicalBlockFile(scope: !10670, file: !4, discriminator: 3)
!10679 = !DILocation(line: 637, column: 149, scope: !10670)
!10680 = !DILocation(line: 637, column: 159, scope: !10670)
!10681 = !DILocation(line: 637, column: 184, scope: !10670)
!10682 = !DILocation(line: 637, column: 115, scope: !10670)
!10683 = !DILocation(line: 637, column: 203, scope: !10684)
!10684 = !DILexicalBlockFile(scope: !2903, file: !4, discriminator: 4)
!10685 = !DILocation(line: 637, column: 203, scope: !2902)
!10686 = !DILocation(line: 637, column: 203, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !2902, file: !4, discriminator: 5)
!10688 = !DILocation(line: 638, column: 9, scope: !2903)
!10689 = !DILocation(line: 640, column: 47, scope: !2888)
!10690 = !DILocation(line: 641, column: 38, scope: !2888)
!10691 = !DILocation(line: 640, column: 17, scope: !2888)
!10692 = !DILocation(line: 640, column: 15, scope: !2888)
!10693 = !DILocation(line: 642, column: 17, scope: !2888)
!10694 = !DILocation(line: 642, column: 5, scope: !2888)
!10695 = !DILocation(line: 643, column: 9, scope: !2908)
!10696 = !DILocation(line: 643, column: 19, scope: !2908)
!10697 = !DILocation(line: 643, column: 9, scope: !2888)
!10698 = !DILocation(line: 644, column: 9, scope: !2907)
!10699 = !DILocation(line: 644, column: 14, scope: !10700)
!10700 = !DILexicalBlockFile(scope: !2906, file: !4, discriminator: 1)
!10701 = !DILocation(line: 644, column: 24, scope: !2906)
!10702 = !DILocation(line: 644, column: 54, scope: !2906)
!10703 = !DILocation(line: 644, column: 73, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !2906, file: !4, line: 644, column: 70)
!10705 = !DILocation(line: 644, column: 90, scope: !10704)
!10706 = !DILocation(line: 644, column: 70, scope: !10704)
!10707 = !DILocation(line: 644, column: 100, scope: !10704)
!10708 = !DILocation(line: 644, column: 70, scope: !2906)
!10709 = !DILocation(line: 644, column: 70, scope: !10710)
!10710 = !DILexicalBlockFile(scope: !2906, file: !4, discriminator: 2)
!10711 = !DILocation(line: 644, column: 131, scope: !10712)
!10712 = !DILexicalBlockFile(scope: !10704, file: !4, discriminator: 3)
!10713 = !DILocation(line: 644, column: 149, scope: !10704)
!10714 = !DILocation(line: 644, column: 159, scope: !10704)
!10715 = !DILocation(line: 644, column: 184, scope: !10704)
!10716 = !DILocation(line: 644, column: 115, scope: !10704)
!10717 = !DILocation(line: 644, column: 203, scope: !10718)
!10718 = !DILexicalBlockFile(scope: !2907, file: !4, discriminator: 4)
!10719 = !DILocation(line: 644, column: 203, scope: !2906)
!10720 = !DILocation(line: 644, column: 203, scope: !10721)
!10721 = !DILexicalBlockFile(scope: !2906, file: !4, discriminator: 5)
!10722 = !DILocation(line: 645, column: 9, scope: !2907)
!10723 = !DILocation(line: 647, column: 12, scope: !2888)
!10724 = !DILocation(line: 647, column: 10, scope: !2888)
!10725 = !DILocation(line: 648, column: 9, scope: !2912)
!10726 = !DILocation(line: 648, column: 14, scope: !2912)
!10727 = !DILocation(line: 648, column: 9, scope: !2888)
!10728 = !DILocation(line: 649, column: 9, scope: !2911)
!10729 = !DILocation(line: 649, column: 14, scope: !10730)
!10730 = !DILexicalBlockFile(scope: !2910, file: !4, discriminator: 1)
!10731 = !DILocation(line: 649, column: 24, scope: !2910)
!10732 = !DILocation(line: 649, column: 54, scope: !2910)
!10733 = !DILocation(line: 649, column: 73, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !2910, file: !4, line: 649, column: 70)
!10735 = !DILocation(line: 649, column: 90, scope: !10734)
!10736 = !DILocation(line: 649, column: 70, scope: !10734)
!10737 = !DILocation(line: 649, column: 100, scope: !10734)
!10738 = !DILocation(line: 649, column: 70, scope: !2910)
!10739 = !DILocation(line: 649, column: 70, scope: !10740)
!10740 = !DILexicalBlockFile(scope: !2910, file: !4, discriminator: 2)
!10741 = !DILocation(line: 649, column: 131, scope: !10742)
!10742 = !DILexicalBlockFile(scope: !10734, file: !4, discriminator: 3)
!10743 = !DILocation(line: 649, column: 149, scope: !10734)
!10744 = !DILocation(line: 649, column: 159, scope: !10734)
!10745 = !DILocation(line: 649, column: 184, scope: !10734)
!10746 = !DILocation(line: 649, column: 115, scope: !10734)
!10747 = !DILocation(line: 649, column: 203, scope: !10748)
!10748 = !DILexicalBlockFile(scope: !2911, file: !4, discriminator: 4)
!10749 = !DILocation(line: 649, column: 203, scope: !2910)
!10750 = !DILocation(line: 649, column: 203, scope: !10751)
!10751 = !DILexicalBlockFile(scope: !2910, file: !4, discriminator: 5)
!10752 = !DILocation(line: 650, column: 9, scope: !2911)
!10753 = !DILocation(line: 650, column: 14, scope: !10754)
!10754 = !DILexicalBlockFile(scope: !2914, file: !4, discriminator: 1)
!10755 = !DILocation(line: 650, column: 24, scope: !2914)
!10756 = !DILocation(line: 650, column: 54, scope: !2914)
!10757 = !DILocation(line: 650, column: 74, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !2914, file: !4, line: 650, column: 71)
!10759 = !DILocation(line: 650, column: 91, scope: !10758)
!10760 = !DILocation(line: 650, column: 71, scope: !10758)
!10761 = !DILocation(line: 650, column: 101, scope: !10758)
!10762 = !DILocation(line: 650, column: 71, scope: !2914)
!10763 = !DILocation(line: 650, column: 71, scope: !10764)
!10764 = !DILexicalBlockFile(scope: !2914, file: !4, discriminator: 2)
!10765 = !DILocation(line: 650, column: 132, scope: !10766)
!10766 = !DILexicalBlockFile(scope: !10758, file: !4, discriminator: 3)
!10767 = !DILocation(line: 650, column: 150, scope: !10758)
!10768 = !DILocation(line: 650, column: 160, scope: !10758)
!10769 = !DILocation(line: 650, column: 185, scope: !10758)
!10770 = !DILocation(line: 650, column: 116, scope: !10758)
!10771 = !DILocation(line: 650, column: 204, scope: !10748)
!10772 = !DILocation(line: 650, column: 204, scope: !2914)
!10773 = !DILocation(line: 650, column: 204, scope: !10774)
!10774 = !DILexicalBlockFile(scope: !2914, file: !4, discriminator: 5)
!10775 = !DILocation(line: 651, column: 9, scope: !2911)
!10776 = !DILocation(line: 653, column: 46, scope: !2888)
!10777 = !DILocation(line: 653, column: 25, scope: !2888)
!10778 = !DILocation(line: 653, column: 7, scope: !2888)
!10779 = !DILocation(line: 653, column: 33, scope: !2888)
!10780 = !DILocation(line: 653, column: 6, scope: !2888)
!10781 = !DILocation(line: 653, column: 44, scope: !2888)
!10782 = !DILocation(line: 654, column: 46, scope: !2888)
!10783 = !DILocation(line: 654, column: 25, scope: !2888)
!10784 = !DILocation(line: 654, column: 7, scope: !2888)
!10785 = !DILocation(line: 654, column: 33, scope: !2888)
!10786 = !DILocation(line: 654, column: 6, scope: !2888)
!10787 = !DILocation(line: 654, column: 44, scope: !2888)
!10788 = !DILocation(line: 655, column: 12, scope: !2888)
!10789 = !DILocation(line: 655, column: 5, scope: !2888)
!10790 = !DILocation(line: 658, column: 5, scope: !2888)
!10791 = !DILocation(line: 659, column: 1, scope: !2888)
!10792 = !DILocation(line: 2333, column: 34, scope: !3172)
!10793 = !DILocation(line: 2333, column: 46, scope: !3172)
!10794 = !DILocation(line: 2335, column: 28, scope: !3172)
!10795 = !DILocation(line: 2335, column: 34, scope: !3172)
!10796 = !DILocation(line: 2335, column: 12, scope: !3172)
!10797 = !DILocation(line: 2335, column: 5, scope: !3172)
!10798 = !DILocation(line: 2339, column: 34, scope: !3178)
!10799 = !DILocation(line: 2339, column: 50, scope: !3178)
!10800 = !DILocation(line: 2339, column: 61, scope: !3178)
!10801 = !DILocation(line: 2341, column: 5, scope: !3178)
!10802 = !DILocation(line: 2341, column: 9, scope: !3178)
!10803 = !DILocation(line: 2342, column: 22, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !3178, file: !4, line: 2342, column: 9)
!10805 = !DILocation(line: 2342, column: 10, scope: !10804)
!10806 = !DILocation(line: 2342, column: 9, scope: !3178)
!10807 = !DILocation(line: 2343, column: 9, scope: !10804)
!10808 = !DILocation(line: 2344, column: 9, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !3178, file: !4, line: 2344, column: 9)
!10810 = !DILocation(line: 2344, column: 24, scope: !10809)
!10811 = !DILocation(line: 2345, column: 37, scope: !10809)
!10812 = !DILocation(line: 2345, column: 43, scope: !10809)
!10813 = !DILocation(line: 2345, column: 13, scope: !10809)
!10814 = !DILocation(line: 2345, column: 48, scope: !10809)
!10815 = !DILocation(line: 2344, column: 9, scope: !3178)
!10816 = !DILocation(line: 2346, column: 25, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10809, file: !4, line: 2345, column: 57)
!10818 = !DILocation(line: 2346, column: 9, scope: !10817)
!10819 = !DILocation(line: 2349, column: 9, scope: !10817)
!10820 = !DILocation(line: 2351, column: 28, scope: !3178)
!10821 = !DILocation(line: 2351, column: 5, scope: !3178)
!10822 = !DILocation(line: 2351, column: 11, scope: !3178)
!10823 = !DILocation(line: 2351, column: 26, scope: !3178)
!10824 = !DILocation(line: 2352, column: 5, scope: !3178)
!10825 = !DILocation(line: 2353, column: 1, scope: !3178)
!10826 = !DILocation(line: 2304, column: 27, scope: !3186)
!10827 = !DILocation(line: 2304, column: 39, scope: !3186)
!10828 = !DILocation(line: 2306, column: 42, scope: !3186)
!10829 = !DILocation(line: 2306, column: 48, scope: !3186)
!10830 = !DILocation(line: 2306, column: 28, scope: !3186)
!10831 = !DILocation(line: 2306, column: 12, scope: !3186)
!10832 = !DILocation(line: 2306, column: 5, scope: !3186)
!10833 = !DILocation(line: 2310, column: 27, scope: !3190)
!10834 = !DILocation(line: 2310, column: 43, scope: !3190)
!10835 = !DILocation(line: 2310, column: 54, scope: !3190)
!10836 = !DILocation(line: 2312, column: 5, scope: !3190)
!10837 = !DILocation(line: 2312, column: 10, scope: !3190)
!10838 = !DILocation(line: 2312, column: 20, scope: !3190)
!10839 = !DILocation(line: 2312, column: 26, scope: !3190)
!10840 = !DILocation(line: 2312, column: 31, scope: !3190)
!10841 = !DILocation(line: 2313, column: 22, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !3190, file: !4, line: 2313, column: 9)
!10843 = !DILocation(line: 2313, column: 10, scope: !10842)
!10844 = !DILocation(line: 2313, column: 9, scope: !3190)
!10845 = !DILocation(line: 2314, column: 9, scope: !10842)
!10846 = !DILocation(line: 2315, column: 26, scope: !3190)
!10847 = !DILocation(line: 2315, column: 32, scope: !3190)
!10848 = !DILocation(line: 2315, column: 12, scope: !3190)
!10849 = !DILocation(line: 2315, column: 10, scope: !3190)
!10850 = !DILocation(line: 2316, column: 13, scope: !3190)
!10851 = !DILocation(line: 2316, column: 21, scope: !3190)
!10852 = !DILocation(line: 2316, column: 20, scope: !3190)
!10853 = !DILocation(line: 2316, column: 18, scope: !3190)
!10854 = !DILocation(line: 2316, column: 11, scope: !3190)
!10855 = !DILocation(line: 2317, column: 12, scope: !3190)
!10856 = !DILocation(line: 2317, column: 11, scope: !3190)
!10857 = !DILocation(line: 2317, column: 19, scope: !3190)
!10858 = !DILocation(line: 2317, column: 17, scope: !3190)
!10859 = !DILocation(line: 2317, column: 9, scope: !3190)
!10860 = !DILocation(line: 2318, column: 9, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !3190, file: !4, line: 2318, column: 9)
!10862 = !DILocation(line: 2318, column: 9, scope: !3190)
!10863 = !DILocation(line: 2320, column: 23, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10861, file: !4, line: 2318, column: 16)
!10865 = !DILocation(line: 2320, column: 29, scope: !10864)
!10866 = !DILocation(line: 2320, column: 38, scope: !10864)
!10867 = !DILocation(line: 2320, column: 9, scope: !10864)
!10868 = !DILocation(line: 2326, column: 5, scope: !10864)
!10869 = !DILocation(line: 2327, column: 9, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !3190, file: !4, line: 2327, column: 9)
!10871 = !DILocation(line: 2327, column: 9, scope: !3190)
!10872 = !DILocation(line: 2328, column: 23, scope: !10870)
!10873 = !DILocation(line: 2328, column: 29, scope: !10870)
!10874 = !DILocation(line: 2328, column: 38, scope: !10870)
!10875 = !DILocation(line: 2328, column: 9, scope: !10870)
!10876 = !DILocation(line: 2329, column: 5, scope: !3190)
!10877 = !DILocation(line: 2330, column: 1, scope: !3190)
!10878 = !DILocation(line: 2265, column: 32, scope: !3199)
!10879 = !DILocation(line: 2265, column: 44, scope: !3199)
!10880 = !DILocation(line: 2267, column: 5, scope: !3199)
!10881 = !DILocation(line: 2267, column: 17, scope: !3199)
!10882 = !DILocation(line: 2268, column: 5, scope: !3199)
!10883 = !DILocation(line: 2268, column: 19, scope: !3199)
!10884 = !DILocation(line: 2270, column: 36, scope: !3199)
!10885 = !DILocation(line: 2270, column: 42, scope: !3199)
!10886 = !DILocation(line: 2270, column: 13, scope: !3199)
!10887 = !DILocation(line: 2270, column: 11, scope: !3199)
!10888 = !DILocation(line: 2271, column: 41, scope: !3199)
!10889 = !DILocation(line: 2271, column: 48, scope: !3199)
!10890 = !{!6654, !3861, i64 24}
!10891 = !DILocation(line: 2271, column: 13, scope: !3199)
!10892 = !DILocation(line: 2271, column: 11, scope: !3199)
!10893 = !DILocation(line: 2272, column: 36, scope: !3199)
!10894 = !DILocation(line: 2272, column: 12, scope: !3199)
!10895 = !DILocation(line: 2273, column: 1, scope: !3199)
!10896 = !DILocation(line: 2272, column: 5, scope: !3199)
!10897 = !DILocation(line: 2276, column: 32, scope: !3205)
!10898 = !DILocation(line: 2276, column: 48, scope: !3205)
!10899 = !DILocation(line: 2276, column: 59, scope: !3205)
!10900 = !DILocation(line: 2278, column: 5, scope: !3205)
!10901 = !DILocation(line: 2278, column: 17, scope: !3205)
!10902 = !DILocation(line: 2279, column: 5, scope: !3205)
!10903 = !DILocation(line: 2279, column: 19, scope: !3205)
!10904 = !DILocation(line: 2279, column: 30, scope: !3205)
!10905 = !DILocation(line: 2279, column: 37, scope: !3205)
!10906 = !DILocation(line: 2279, column: 42, scope: !3205)
!10907 = !DILocation(line: 2281, column: 22, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !3205, file: !4, line: 2281, column: 9)
!10909 = !DILocation(line: 2281, column: 10, scope: !10908)
!10910 = !DILocation(line: 2281, column: 9, scope: !3205)
!10911 = !DILocation(line: 2282, column: 9, scope: !10908)
!10912 = !DILocation(line: 2283, column: 36, scope: !3205)
!10913 = !DILocation(line: 2283, column: 42, scope: !3205)
!10914 = !DILocation(line: 2283, column: 13, scope: !3205)
!10915 = !DILocation(line: 2283, column: 11, scope: !3205)
!10916 = !DILocation(line: 2284, column: 41, scope: !3205)
!10917 = !DILocation(line: 2284, column: 48, scope: !3205)
!10918 = !DILocation(line: 2284, column: 13, scope: !3205)
!10919 = !DILocation(line: 2284, column: 11, scope: !3205)
!10920 = !DILocation(line: 2285, column: 13, scope: !3205)
!10921 = !DILocation(line: 2285, column: 22, scope: !3205)
!10922 = !DILocation(line: 2285, column: 21, scope: !3205)
!10923 = !DILocation(line: 2285, column: 19, scope: !3205)
!10924 = !DILocation(line: 2285, column: 11, scope: !3205)
!10925 = !DILocation(line: 2286, column: 12, scope: !3205)
!10926 = !DILocation(line: 2286, column: 11, scope: !3205)
!10927 = !DILocation(line: 2286, column: 20, scope: !3205)
!10928 = !DILocation(line: 2286, column: 18, scope: !3205)
!10929 = !DILocation(line: 2286, column: 9, scope: !3205)
!10930 = !DILocation(line: 2287, column: 9, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !3205, file: !4, line: 2287, column: 9)
!10932 = !DILocation(line: 2287, column: 9, scope: !3205)
!10933 = !DILocation(line: 2288, column: 44, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !4, line: 2288, column: 13)
!10935 = distinct !DILexicalBlock(scope: !10931, file: !4, line: 2287, column: 16)
!10936 = !DILocation(line: 2288, column: 51, scope: !10934)
!10937 = !DILocation(line: 2288, column: 58, scope: !10934)
!10938 = !DILocation(line: 2288, column: 14, scope: !10934)
!10939 = !DILocation(line: 2288, column: 13, scope: !10935)
!10940 = !DILocation(line: 2289, column: 13, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10934, file: !4, line: 2288, column: 66)
!10942 = !DILocation(line: 2290, column: 13, scope: !10941)
!10943 = !DILocation(line: 2292, column: 5, scope: !10935)
!10944 = !DILocation(line: 2293, column: 9, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !3205, file: !4, line: 2293, column: 9)
!10946 = !DILocation(line: 2293, column: 9, scope: !3205)
!10947 = !DILocation(line: 2294, column: 42, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !4, line: 2294, column: 13)
!10949 = distinct !DILexicalBlock(scope: !10945, file: !4, line: 2293, column: 14)
!10950 = !DILocation(line: 2294, column: 49, scope: !10948)
!10951 = !DILocation(line: 2294, column: 56, scope: !10948)
!10952 = !DILocation(line: 2294, column: 14, scope: !10948)
!10953 = !DILocation(line: 2294, column: 13, scope: !10949)
!10954 = !DILocation(line: 2295, column: 13, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10948, file: !4, line: 2294, column: 62)
!10956 = !DILocation(line: 2296, column: 13, scope: !10955)
!10957 = !DILocation(line: 2298, column: 5, scope: !10949)
!10958 = !DILocation(line: 2299, column: 5, scope: !3205)
!10959 = !DILocation(line: 2300, column: 1, scope: !3205)
!10960 = !DILocation(line: 2221, column: 31, scope: !3215)
!10961 = !DILocation(line: 2221, column: 43, scope: !3215)
!10962 = !DILocation(line: 2223, column: 37, scope: !3215)
!10963 = !DILocation(line: 2223, column: 43, scope: !3215)
!10964 = !DILocation(line: 2223, column: 13, scope: !3215)
!10965 = !DILocation(line: 2225, column: 16, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !3215, file: !4, line: 2223, column: 49)
!10967 = !DILocation(line: 2225, column: 9, scope: !10966)
!10968 = !DILocation(line: 2227, column: 16, scope: !10966)
!10969 = !DILocation(line: 2227, column: 9, scope: !10966)
!10970 = !DILocation(line: 2229, column: 16, scope: !10966)
!10971 = !DILocation(line: 2229, column: 9, scope: !10966)
!10972 = !DILocation(line: 2231, column: 21, scope: !3215)
!10973 = !DILocation(line: 2231, column: 5, scope: !3215)
!10974 = !DILocation(line: 2233, column: 5, scope: !3215)
!10975 = !DILocation(line: 2234, column: 1, scope: !3215)
!10976 = !DILocation(line: 2237, column: 31, scope: !3219)
!10977 = !DILocation(line: 2237, column: 47, scope: !3219)
!10978 = !DILocation(line: 2237, column: 58, scope: !3219)
!10979 = !DILocation(line: 2239, column: 5, scope: !3219)
!10980 = !DILocation(line: 2239, column: 9, scope: !3219)
!10981 = !DILocation(line: 2239, column: 12, scope: !3219)
!10982 = !DILocation(line: 2240, column: 22, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !3219, file: !4, line: 2240, column: 9)
!10984 = !DILocation(line: 2240, column: 10, scope: !10983)
!10985 = !DILocation(line: 2240, column: 9, scope: !3219)
!10986 = !DILocation(line: 2241, column: 9, scope: !10983)
!10987 = !DILocation(line: 2242, column: 9, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !3219, file: !4, line: 2242, column: 9)
!10989 = !DILocation(line: 2242, column: 11, scope: !10988)
!10990 = !DILocation(line: 2242, column: 9, scope: !3219)
!10991 = !DILocation(line: 2243, column: 14, scope: !10988)
!10992 = !DILocation(line: 2243, column: 9, scope: !10988)
!10993 = !DILocation(line: 2244, column: 14, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10988, file: !4, line: 2244, column: 14)
!10995 = !DILocation(line: 2244, column: 16, scope: !10994)
!10996 = !DILocation(line: 2244, column: 14, scope: !10988)
!10997 = !DILocation(line: 2245, column: 14, scope: !10994)
!10998 = !DILocation(line: 2245, column: 9, scope: !10994)
!10999 = !DILocation(line: 2246, column: 14, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10994, file: !4, line: 2246, column: 14)
!11001 = !DILocation(line: 2246, column: 16, scope: !11000)
!11002 = !DILocation(line: 2246, column: 14, scope: !10994)
!11003 = !DILocation(line: 2247, column: 14, scope: !11000)
!11004 = !DILocation(line: 2247, column: 9, scope: !11000)
!11005 = !DILocation(line: 2249, column: 25, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11000, file: !4, line: 2248, column: 10)
!11007 = !DILocation(line: 2249, column: 9, scope: !11006)
!11008 = !DILocation(line: 2251, column: 9, scope: !11006)
!11009 = !DILocation(line: 2253, column: 9, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !3219, file: !4, line: 2253, column: 9)
!11011 = !DILocation(line: 2253, column: 14, scope: !11010)
!11012 = !DILocation(line: 2253, column: 22, scope: !11010)
!11013 = !DILocation(line: 2253, column: 25, scope: !11014)
!11014 = !DILexicalBlockFile(scope: !11010, file: !4, discriminator: 1)
!11015 = !DILocation(line: 2253, column: 31, scope: !11010)
!11016 = !DILocation(line: 2253, column: 25, scope: !11010)
!11017 = !DILocation(line: 2253, column: 9, scope: !3219)
!11018 = !DILocation(line: 2254, column: 25, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11010, file: !4, line: 2253, column: 47)
!11020 = !DILocation(line: 2254, column: 9, scope: !11019)
!11021 = !DILocation(line: 2257, column: 9, scope: !11019)
!11022 = !DILocation(line: 2259, column: 24, scope: !3219)
!11023 = !DILocation(line: 2259, column: 30, scope: !3219)
!11024 = !DILocation(line: 2259, column: 35, scope: !3219)
!11025 = !DILocation(line: 2259, column: 5, scope: !3219)
!11026 = !DILocation(line: 2260, column: 5, scope: !3219)
!11027 = !DILocation(line: 2261, column: 1, scope: !3219)
!11028 = !DILocation(line: 1475, column: 40, scope: !3240)
!11029 = !DILocation(line: 1477, column: 9, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !3240, file: !4, line: 1477, column: 9)
!11031 = !DILocation(line: 1477, column: 15, scope: !11030)
!11032 = !DILocation(line: 1477, column: 9, scope: !3240)
!11033 = !DILocation(line: 1478, column: 20, scope: !11030)
!11034 = !DILocation(line: 1478, column: 26, scope: !11030)
!11035 = !DILocation(line: 1478, column: 9, scope: !11030)
!11036 = !DILocation(line: 1479, column: 9, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !3240, file: !4, line: 1479, column: 9)
!11038 = !DILocation(line: 1479, column: 15, scope: !11037)
!11039 = !DILocation(line: 1479, column: 9, scope: !3240)
!11040 = !DILocation(line: 1480, column: 18, scope: !11037)
!11041 = !DILocation(line: 1480, column: 24, scope: !11037)
!11042 = !DILocation(line: 1480, column: 9, scope: !11037)
!11043 = !DILocation(line: 1481, column: 5, scope: !3240)
!11044 = !DILocation(line: 1481, column: 10, scope: !11045)
!11045 = !DILexicalBlockFile(scope: !3246, file: !4, discriminator: 1)
!11046 = !DILocation(line: 1481, column: 20, scope: !3246)
!11047 = !DILocation(line: 1481, column: 51, scope: !3246)
!11048 = !DILocation(line: 1481, column: 57, scope: !3246)
!11049 = !DILocation(line: 1481, column: 70, scope: !3249)
!11050 = !DILocation(line: 1481, column: 86, scope: !3249)
!11051 = !DILocation(line: 1481, column: 70, scope: !3246)
!11052 = !DILocation(line: 1481, column: 101, scope: !11053)
!11053 = !DILexicalBlockFile(scope: !3249, file: !4, discriminator: 2)
!11054 = !DILocation(line: 1481, column: 106, scope: !11055)
!11055 = !DILexicalBlockFile(scope: !3248, file: !4, discriminator: 4)
!11056 = !DILocation(line: 1481, column: 116, scope: !3248)
!11057 = !DILocation(line: 1481, column: 146, scope: !3248)
!11058 = !DILocation(line: 1481, column: 172, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !3248, file: !4, line: 1481, column: 169)
!11060 = !DILocation(line: 1481, column: 189, scope: !11059)
!11061 = !DILocation(line: 1481, column: 169, scope: !11059)
!11062 = !DILocation(line: 1481, column: 199, scope: !11059)
!11063 = !DILocation(line: 1481, column: 169, scope: !3248)
!11064 = !DILocation(line: 1481, column: 169, scope: !11065)
!11065 = !DILexicalBlockFile(scope: !3248, file: !4, discriminator: 5)
!11066 = !DILocation(line: 1481, column: 230, scope: !11067)
!11067 = !DILexicalBlockFile(scope: !11059, file: !4, discriminator: 6)
!11068 = !DILocation(line: 1481, column: 248, scope: !11059)
!11069 = !DILocation(line: 1481, column: 258, scope: !11059)
!11070 = !DILocation(line: 1481, column: 283, scope: !11059)
!11071 = !DILocation(line: 1481, column: 214, scope: !11059)
!11072 = !DILocation(line: 1481, column: 302, scope: !11073)
!11073 = !DILexicalBlockFile(scope: !3249, file: !4, discriminator: 7)
!11074 = !DILocation(line: 1481, column: 302, scope: !3248)
!11075 = !DILocation(line: 1481, column: 302, scope: !11076)
!11076 = !DILexicalBlockFile(scope: !3248, file: !4, discriminator: 8)
!11077 = !DILocation(line: 1481, column: 302, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !3248, file: !4, discriminator: 9)
!11079 = !DILocation(line: 1481, column: 315, scope: !11080)
!11080 = !DILexicalBlockFile(scope: !11081, file: !4, discriminator: 10)
!11081 = !DILexicalBlockFile(scope: !3240, file: !4, discriminator: 3)
!11082 = !DILocation(line: 1481, column: 315, scope: !3246)
!11083 = !DILocation(line: 1482, column: 5, scope: !3240)
!11084 = !DILocation(line: 1482, column: 10, scope: !11085)
!11085 = !DILexicalBlockFile(scope: !3251, file: !4, discriminator: 1)
!11086 = !DILocation(line: 1482, column: 20, scope: !3251)
!11087 = !DILocation(line: 1482, column: 51, scope: !3251)
!11088 = !DILocation(line: 1482, column: 57, scope: !3251)
!11089 = !DILocation(line: 1482, column: 38, scope: !3251)
!11090 = !DILocation(line: 1482, column: 67, scope: !3254)
!11091 = !DILocation(line: 1482, column: 83, scope: !3254)
!11092 = !DILocation(line: 1482, column: 67, scope: !3251)
!11093 = !DILocation(line: 1482, column: 98, scope: !11094)
!11094 = !DILexicalBlockFile(scope: !3254, file: !4, discriminator: 2)
!11095 = !DILocation(line: 1482, column: 103, scope: !11096)
!11096 = !DILexicalBlockFile(scope: !3253, file: !4, discriminator: 4)
!11097 = !DILocation(line: 1482, column: 113, scope: !3253)
!11098 = !DILocation(line: 1482, column: 143, scope: !3253)
!11099 = !DILocation(line: 1482, column: 169, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !3253, file: !4, line: 1482, column: 166)
!11101 = !DILocation(line: 1482, column: 186, scope: !11100)
!11102 = !DILocation(line: 1482, column: 166, scope: !11100)
!11103 = !DILocation(line: 1482, column: 196, scope: !11100)
!11104 = !DILocation(line: 1482, column: 166, scope: !3253)
!11105 = !DILocation(line: 1482, column: 166, scope: !11106)
!11106 = !DILexicalBlockFile(scope: !3253, file: !4, discriminator: 5)
!11107 = !DILocation(line: 1482, column: 227, scope: !11108)
!11108 = !DILexicalBlockFile(scope: !11100, file: !4, discriminator: 6)
!11109 = !DILocation(line: 1482, column: 245, scope: !11100)
!11110 = !DILocation(line: 1482, column: 255, scope: !11100)
!11111 = !DILocation(line: 1482, column: 280, scope: !11100)
!11112 = !DILocation(line: 1482, column: 211, scope: !11100)
!11113 = !DILocation(line: 1482, column: 299, scope: !11114)
!11114 = !DILexicalBlockFile(scope: !3254, file: !4, discriminator: 7)
!11115 = !DILocation(line: 1482, column: 299, scope: !3253)
!11116 = !DILocation(line: 1482, column: 299, scope: !11117)
!11117 = !DILexicalBlockFile(scope: !3253, file: !4, discriminator: 8)
!11118 = !DILocation(line: 1482, column: 299, scope: !11119)
!11119 = !DILexicalBlockFile(scope: !3253, file: !4, discriminator: 9)
!11120 = !DILocation(line: 1482, column: 312, scope: !11080)
!11121 = !DILocation(line: 1482, column: 312, scope: !3251)
!11122 = !DILocation(line: 1483, column: 19, scope: !3240)
!11123 = !DILocation(line: 1483, column: 5, scope: !3240)
!11124 = !DILocation(line: 1484, column: 1, scope: !3240)
!11125 = !DILocation(line: 544, column: 53, scope: !3255)
!11126 = !DILocation(line: 546, column: 5, scope: !3255)
!11127 = !DILocation(line: 546, column: 9, scope: !3255)
!11128 = !DILocation(line: 547, column: 5, scope: !3255)
!11129 = !DILocation(line: 547, column: 9, scope: !3255)
!11130 = !DILocation(line: 548, column: 5, scope: !3255)
!11131 = !DILocation(line: 548, column: 9, scope: !3255)
!11132 = !DILocation(line: 548, column: 20, scope: !3255)
!11133 = !DILocation(line: 549, column: 5, scope: !3255)
!11134 = !DILocation(line: 549, column: 25, scope: !3255)
!11135 = !DILocation(line: 550, column: 52, scope: !3255)
!11136 = !DILocation(line: 550, column: 58, scope: !3255)
!11137 = !DILocation(line: 550, column: 32, scope: !3255)
!11138 = !DILocation(line: 550, column: 9, scope: !3255)
!11139 = !DILocation(line: 552, column: 21, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 552, column: 9)
!11141 = !DILocation(line: 552, column: 10, scope: !11140)
!11142 = !DILocation(line: 552, column: 27, scope: !11140)
!11143 = !DILocation(line: 552, column: 9, scope: !3255)
!11144 = !DILocation(line: 553, column: 9, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11140, file: !4, line: 552, column: 49)
!11146 = !DILocation(line: 555, column: 9, scope: !11145)
!11147 = !DILocation(line: 557, column: 21, scope: !3255)
!11148 = !DILocation(line: 557, column: 8, scope: !3255)
!11149 = !DILocation(line: 557, column: 29, scope: !3255)
!11150 = !DILocation(line: 557, column: 38, scope: !3255)
!11151 = !DILocation(line: 560, column: 20, scope: !3255)
!11152 = !DILocation(line: 560, column: 26, scope: !3255)
!11153 = !DILocation(line: 560, column: 39, scope: !3255)
!11154 = !DILocation(line: 560, column: 17, scope: !3255)
!11155 = !DILocation(line: 561, column: 27, scope: !3255)
!11156 = !DILocation(line: 561, column: 33, scope: !3255)
!11157 = !DILocation(line: 561, column: 14, scope: !3255)
!11158 = !DILocation(line: 561, column: 43, scope: !3255)
!11159 = !DILocation(line: 561, column: 42, scope: !3255)
!11160 = !DILocation(line: 561, column: 5, scope: !3255)
!11161 = !DILocation(line: 562, column: 27, scope: !3255)
!11162 = !DILocation(line: 562, column: 33, scope: !3255)
!11163 = !DILocation(line: 562, column: 14, scope: !3255)
!11164 = !DILocation(line: 562, column: 43, scope: !3255)
!11165 = !DILocation(line: 562, column: 42, scope: !3255)
!11166 = !DILocation(line: 562, column: 5, scope: !3255)
!11167 = !DILocation(line: 566, column: 5, scope: !3255)
!11168 = !DILocation(line: 567, column: 11, scope: !3266)
!11169 = !DILocation(line: 567, column: 26, scope: !3266)
!11170 = !DILocation(line: 567, column: 46, scope: !3266)
!11171 = !DILocation(line: 567, column: 55, scope: !11172)
!11172 = !DILexicalBlockFile(scope: !11173, file: !4, discriminator: 1)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !4, line: 567, column: 55)
!11174 = distinct !DILexicalBlock(scope: !3266, file: !4, line: 567, column: 49)
!11175 = !DILocation(line: 567, column: 71, scope: !11173)
!11176 = !DILocation(line: 567, column: 55, scope: !11174)
!11177 = !DILocation(line: 567, column: 87, scope: !11178)
!11178 = !DILexicalBlockFile(scope: !11179, file: !4, discriminator: 2)
!11179 = distinct !DILexicalBlock(scope: !11173, file: !4, line: 567, column: 75)
!11180 = !DILocation(line: 567, column: 85, scope: !11179)
!11181 = !DILocation(line: 567, column: 108, scope: !11179)
!11182 = !DILocation(line: 567, column: 110, scope: !11183)
!11183 = !DILexicalBlockFile(scope: !11184, file: !4, discriminator: 4)
!11184 = !DILexicalBlockFile(scope: !11174, file: !4, discriminator: 3)
!11185 = !DILocation(line: 567, column: 110, scope: !11186)
!11186 = !DILexicalBlockFile(scope: !11174, file: !4, discriminator: 5)
!11187 = !DILocation(line: 568, column: 32, scope: !3266)
!11188 = !DILocation(line: 568, column: 38, scope: !3266)
!11189 = !DILocation(line: 568, column: 15, scope: !3266)
!11190 = !DILocation(line: 568, column: 13, scope: !3266)
!11191 = !DILocation(line: 569, column: 29, scope: !3266)
!11192 = !DILocation(line: 569, column: 35, scope: !3266)
!11193 = !DILocation(line: 569, column: 40, scope: !3266)
!11194 = !DILocation(line: 569, column: 15, scope: !3266)
!11195 = !DILocation(line: 569, column: 13, scope: !3266)
!11196 = !DILocation(line: 570, column: 9, scope: !3266)
!11197 = !DILocation(line: 570, column: 18, scope: !11198)
!11198 = !DILexicalBlockFile(scope: !11199, file: !4, discriminator: 1)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !4, line: 570, column: 18)
!11200 = distinct !DILexicalBlock(scope: !3266, file: !4, line: 570, column: 12)
!11201 = !DILocation(line: 570, column: 34, scope: !11199)
!11202 = !DILocation(line: 570, column: 18, scope: !11200)
!11203 = !DILocation(line: 570, column: 61, scope: !11204)
!11204 = !DILexicalBlockFile(scope: !11205, file: !4, discriminator: 2)
!11205 = distinct !DILexicalBlock(scope: !11199, file: !4, line: 570, column: 38)
!11206 = !DILocation(line: 570, column: 40, scope: !11205)
!11207 = !DILocation(line: 570, column: 69, scope: !11205)
!11208 = !DILocation(line: 570, column: 71, scope: !11209)
!11209 = !DILexicalBlockFile(scope: !11210, file: !4, discriminator: 4)
!11210 = !DILexicalBlockFile(scope: !11200, file: !4, discriminator: 3)
!11211 = !DILocation(line: 570, column: 71, scope: !11212)
!11212 = !DILexicalBlockFile(scope: !11200, file: !4, discriminator: 5)
!11213 = !DILocation(line: 570, column: 84, scope: !11214)
!11214 = !DILexicalBlockFile(scope: !3267, file: !4, discriminator: 6)
!11215 = !DILocation(line: 571, column: 13, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !3267, file: !4, line: 571, column: 13)
!11217 = !DILocation(line: 571, column: 13, scope: !3267)
!11218 = !DILocation(line: 572, column: 13, scope: !11216)
!11219 = !DILocation(line: 573, column: 13, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !3267, file: !4, line: 573, column: 13)
!11221 = !DILocation(line: 573, column: 17, scope: !11220)
!11222 = !DILocation(line: 573, column: 13, scope: !3267)
!11223 = !DILocation(line: 574, column: 59, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11220, file: !4, line: 573, column: 23)
!11225 = !DILocation(line: 574, column: 25, scope: !11224)
!11226 = !DILocation(line: 574, column: 23, scope: !11224)
!11227 = !DILocation(line: 575, column: 9, scope: !11224)
!11228 = !DILocation(line: 575, column: 20, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11220, file: !4, line: 575, column: 20)
!11230 = !DILocation(line: 575, column: 24, scope: !11229)
!11231 = !DILocation(line: 575, column: 20, scope: !11220)
!11232 = !DILocation(line: 576, column: 59, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11229, file: !4, line: 575, column: 30)
!11234 = !DILocation(line: 576, column: 25, scope: !11233)
!11235 = !DILocation(line: 576, column: 23, scope: !11233)
!11236 = !DILocation(line: 577, column: 9, scope: !11233)
!11237 = !DILocation(line: 578, column: 23, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11229, file: !4, line: 577, column: 16)
!11239 = !DILocation(line: 580, column: 13, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !3267, file: !4, line: 580, column: 13)
!11241 = !DILocation(line: 580, column: 23, scope: !11240)
!11242 = !DILocation(line: 580, column: 13, scope: !3267)
!11243 = !DILocation(line: 581, column: 44, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11240, file: !4, line: 580, column: 48)
!11245 = !{!4818, !3861, i64 16}
!11246 = !DILocation(line: 581, column: 13, scope: !11244)
!11247 = !DILocation(line: 583, column: 13, scope: !11244)
!11248 = !DILocation(line: 584, column: 20, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11240, file: !4, line: 584, column: 20)
!11250 = !DILocation(line: 584, column: 30, scope: !11249)
!11251 = !DILocation(line: 584, column: 20, scope: !11240)
!11252 = !DILocation(line: 585, column: 29, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11249, file: !4, line: 584, column: 57)
!11254 = !DILocation(line: 585, column: 13, scope: !11253)
!11255 = !DILocation(line: 587, column: 13, scope: !11253)
!11256 = !DILocation(line: 588, column: 20, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11249, file: !4, line: 588, column: 20)
!11258 = !DILocation(line: 588, column: 30, scope: !11257)
!11259 = !DILocation(line: 588, column: 20, scope: !11249)
!11260 = !DILocation(line: 589, column: 29, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11257, file: !4, line: 588, column: 62)
!11262 = !DILocation(line: 589, column: 13, scope: !11261)
!11263 = !DILocation(line: 591, column: 13, scope: !11261)
!11264 = !DILocation(line: 592, column: 20, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11257, file: !4, line: 592, column: 20)
!11266 = !DILocation(line: 592, column: 30, scope: !11265)
!11267 = !DILocation(line: 592, column: 20, scope: !11257)
!11268 = !DILocation(line: 593, column: 13, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11265, file: !4, line: 592, column: 56)
!11270 = !DILocation(line: 595, column: 5, scope: !3267)
!11271 = !DILocation(line: 595, column: 14, scope: !11272)
!11272 = !DILexicalBlockFile(scope: !3255, file: !4, discriminator: 1)
!11273 = !DILocation(line: 595, column: 18, scope: !3255)
!11274 = !DILocation(line: 595, column: 23, scope: !3255)
!11275 = !DILocation(line: 595, column: 26, scope: !11276)
!11276 = !DILexicalBlockFile(scope: !3255, file: !4, discriminator: 3)
!11277 = !DILocation(line: 595, column: 30, scope: !3255)
!11278 = !DILocation(line: 595, column: 5, scope: !11279)
!11279 = !DILexicalBlockFile(scope: !11280, file: !4, discriminator: 4)
!11280 = !DILexicalBlockFile(scope: !3267, file: !4, discriminator: 2)
!11281 = !DILocation(line: 596, column: 5, scope: !3255)
!11282 = !DILocation(line: 596, column: 10, scope: !11283)
!11283 = !DILexicalBlockFile(scope: !3269, file: !4, discriminator: 1)
!11284 = !DILocation(line: 596, column: 20, scope: !3269)
!11285 = !DILocation(line: 596, column: 50, scope: !3269)
!11286 = !DILocation(line: 596, column: 37, scope: !3269)
!11287 = !DILocation(line: 596, column: 65, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !3269, file: !4, line: 596, column: 62)
!11289 = !DILocation(line: 596, column: 82, scope: !11288)
!11290 = !DILocation(line: 596, column: 62, scope: !11288)
!11291 = !DILocation(line: 596, column: 92, scope: !11288)
!11292 = !DILocation(line: 596, column: 62, scope: !3269)
!11293 = !DILocation(line: 596, column: 62, scope: !11294)
!11294 = !DILexicalBlockFile(scope: !3269, file: !4, discriminator: 2)
!11295 = !DILocation(line: 596, column: 123, scope: !11296)
!11296 = !DILexicalBlockFile(scope: !11288, file: !4, discriminator: 3)
!11297 = !DILocation(line: 596, column: 141, scope: !11288)
!11298 = !DILocation(line: 596, column: 151, scope: !11288)
!11299 = !DILocation(line: 596, column: 176, scope: !11288)
!11300 = !DILocation(line: 596, column: 107, scope: !11288)
!11301 = !DILocation(line: 596, column: 195, scope: !11302)
!11302 = !DILexicalBlockFile(scope: !3255, file: !4, discriminator: 4)
!11303 = !DILocation(line: 596, column: 195, scope: !3269)
!11304 = !DILocation(line: 596, column: 195, scope: !11305)
!11305 = !DILexicalBlockFile(scope: !3269, file: !4, discriminator: 5)
!11306 = !DILocation(line: 597, column: 9, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 597, column: 9)
!11308 = !DILocation(line: 597, column: 13, scope: !11307)
!11309 = !DILocation(line: 597, column: 9, scope: !3255)
!11310 = !DILocation(line: 598, column: 31, scope: !11307)
!11311 = !DILocation(line: 598, column: 37, scope: !11307)
!11312 = !DILocation(line: 598, column: 16, scope: !11307)
!11313 = !DILocation(line: 598, column: 9, scope: !11307)
!11314 = !DILocation(line: 600, column: 9, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !3255, file: !4, line: 600, column: 9)
!11316 = !DILocation(line: 600, column: 15, scope: !11315)
!11317 = !DILocation(line: 600, column: 9, scope: !3255)
!11318 = !DILocation(line: 601, column: 20, scope: !11315)
!11319 = !DILocation(line: 601, column: 26, scope: !11315)
!11320 = !DILocation(line: 601, column: 9, scope: !11315)
!11321 = !DILocation(line: 602, column: 7, scope: !3271)
!11322 = !DILocation(line: 602, column: 22, scope: !3271)
!11323 = !DILocation(line: 602, column: 42, scope: !3271)
!11324 = !DILocation(line: 602, column: 51, scope: !11325)
!11325 = !DILexicalBlockFile(scope: !11326, file: !4, discriminator: 1)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !4, line: 602, column: 51)
!11327 = distinct !DILexicalBlock(scope: !3271, file: !4, line: 602, column: 45)
!11328 = !DILocation(line: 602, column: 67, scope: !11326)
!11329 = !DILocation(line: 602, column: 51, scope: !11327)
!11330 = !DILocation(line: 602, column: 83, scope: !11331)
!11331 = !DILexicalBlockFile(scope: !11332, file: !4, discriminator: 2)
!11332 = distinct !DILexicalBlock(scope: !11326, file: !4, line: 602, column: 71)
!11333 = !DILocation(line: 602, column: 81, scope: !11332)
!11334 = !DILocation(line: 602, column: 104, scope: !11332)
!11335 = !DILocation(line: 602, column: 106, scope: !11336)
!11336 = !DILexicalBlockFile(scope: !11337, file: !4, discriminator: 4)
!11337 = !DILexicalBlockFile(scope: !11327, file: !4, discriminator: 3)
!11338 = !DILocation(line: 602, column: 106, scope: !11339)
!11339 = !DILexicalBlockFile(scope: !11327, file: !4, discriminator: 5)
!11340 = !DILocation(line: 603, column: 48, scope: !3271)
!11341 = !DILocation(line: 603, column: 54, scope: !3271)
!11342 = !DILocation(line: 603, column: 23, scope: !3271)
!11343 = !DILocation(line: 603, column: 5, scope: !3271)
!11344 = !DILocation(line: 603, column: 11, scope: !3271)
!11345 = !DILocation(line: 603, column: 21, scope: !3271)
!11346 = !DILocation(line: 604, column: 5, scope: !3271)
!11347 = !DILocation(line: 604, column: 14, scope: !11348)
!11348 = !DILexicalBlockFile(scope: !11349, file: !4, discriminator: 1)
!11349 = distinct !DILexicalBlock(scope: !11350, file: !4, line: 604, column: 14)
!11350 = distinct !DILexicalBlock(scope: !3271, file: !4, line: 604, column: 8)
!11351 = !DILocation(line: 604, column: 30, scope: !11349)
!11352 = !DILocation(line: 604, column: 14, scope: !11350)
!11353 = !DILocation(line: 604, column: 57, scope: !11354)
!11354 = !DILexicalBlockFile(scope: !11355, file: !4, discriminator: 2)
!11355 = distinct !DILexicalBlock(scope: !11349, file: !4, line: 604, column: 34)
!11356 = !DILocation(line: 604, column: 36, scope: !11355)
!11357 = !DILocation(line: 604, column: 65, scope: !11355)
!11358 = !DILocation(line: 604, column: 67, scope: !11359)
!11359 = !DILexicalBlockFile(scope: !11360, file: !4, discriminator: 4)
!11360 = !DILexicalBlockFile(scope: !11350, file: !4, discriminator: 3)
!11361 = !DILocation(line: 604, column: 67, scope: !11362)
!11362 = !DILexicalBlockFile(scope: !11350, file: !4, discriminator: 5)
!11363 = !DILocation(line: 604, column: 80, scope: !11364)
!11364 = !DILexicalBlockFile(scope: !3255, file: !4, discriminator: 6)
!11365 = !DILocation(line: 605, column: 5, scope: !3255)
!11366 = !DILocation(line: 605, column: 11, scope: !3255)
!11367 = !DILocation(line: 605, column: 26, scope: !3255)
!11368 = !DILocation(line: 607, column: 51, scope: !3255)
!11369 = !DILocation(line: 608, column: 5, scope: !3255)
!11370 = !DILocation(line: 611, column: 5, scope: !3255)
!11371 = !DILocation(line: 611, column: 10, scope: !11372)
!11372 = !DILexicalBlockFile(scope: !3273, file: !4, discriminator: 1)
!11373 = !DILocation(line: 611, column: 20, scope: !3273)
!11374 = !DILocation(line: 611, column: 50, scope: !3273)
!11375 = !DILocation(line: 611, column: 37, scope: !3273)
!11376 = !DILocation(line: 611, column: 65, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !3273, file: !4, line: 611, column: 62)
!11378 = !DILocation(line: 611, column: 82, scope: !11377)
!11379 = !DILocation(line: 611, column: 62, scope: !11377)
!11380 = !DILocation(line: 611, column: 92, scope: !11377)
!11381 = !DILocation(line: 611, column: 62, scope: !3273)
!11382 = !DILocation(line: 611, column: 62, scope: !11383)
!11383 = !DILexicalBlockFile(scope: !3273, file: !4, discriminator: 2)
!11384 = !DILocation(line: 611, column: 123, scope: !11385)
!11385 = !DILexicalBlockFile(scope: !11377, file: !4, discriminator: 3)
!11386 = !DILocation(line: 611, column: 141, scope: !11377)
!11387 = !DILocation(line: 611, column: 151, scope: !11377)
!11388 = !DILocation(line: 611, column: 176, scope: !11377)
!11389 = !DILocation(line: 611, column: 107, scope: !11377)
!11390 = !DILocation(line: 611, column: 195, scope: !11302)
!11391 = !DILocation(line: 611, column: 195, scope: !3273)
!11392 = !DILocation(line: 611, column: 195, scope: !11393)
!11393 = !DILexicalBlockFile(scope: !3273, file: !4, discriminator: 5)
!11394 = !DILocation(line: 612, column: 5, scope: !3255)
!11395 = !DILocation(line: 613, column: 1, scope: !3255)
!11396 = !DILocation(line: 1556, column: 46, scope: !3327)
!11397 = !DILocation(line: 1556, column: 62, scope: !3327)
!11398 = !DILocation(line: 1558, column: 5, scope: !3327)
!11399 = !DILocation(line: 1558, column: 15, scope: !3327)
!11400 = !DILocation(line: 1559, column: 5, scope: !3327)
!11401 = !DILocation(line: 1559, column: 9, scope: !3327)
!11402 = !DILocation(line: 1560, column: 5, scope: !3327)
!11403 = !DILocation(line: 1560, column: 9, scope: !3327)
!11404 = !DILocation(line: 1561, column: 5, scope: !3327)
!11405 = !DILocation(line: 1561, column: 9, scope: !3327)
!11406 = !DILocation(line: 1562, column: 5, scope: !3327)
!11407 = !DILocation(line: 1562, column: 9, scope: !3327)
!11408 = !DILocation(line: 1563, column: 5, scope: !3327)
!11409 = !DILocation(line: 1563, column: 25, scope: !3327)
!11410 = !DILocation(line: 1564, column: 52, scope: !3327)
!11411 = !DILocation(line: 1564, column: 58, scope: !3327)
!11412 = !DILocation(line: 1564, column: 32, scope: !3327)
!11413 = !DILocation(line: 1564, column: 9, scope: !3327)
!11414 = !DILocation(line: 1566, column: 21, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1566, column: 9)
!11416 = !DILocation(line: 1566, column: 10, scope: !11415)
!11417 = !DILocation(line: 1566, column: 27, scope: !11415)
!11418 = !DILocation(line: 1566, column: 9, scope: !3327)
!11419 = !DILocation(line: 1567, column: 9, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11415, file: !4, line: 1566, column: 49)
!11421 = !DILocation(line: 1569, column: 9, scope: !11420)
!11422 = !DILocation(line: 1571, column: 21, scope: !3327)
!11423 = !DILocation(line: 1571, column: 8, scope: !3327)
!11424 = !DILocation(line: 1571, column: 29, scope: !3327)
!11425 = !DILocation(line: 1571, column: 38, scope: !3327)
!11426 = !DILocation(line: 1573, column: 27, scope: !3342)
!11427 = !DILocation(line: 1573, column: 10, scope: !3342)
!11428 = !DILocation(line: 1573, column: 9, scope: !3327)
!11429 = !DILocation(line: 1574, column: 9, scope: !3341)
!11430 = !DILocation(line: 1574, column: 14, scope: !11431)
!11431 = !DILexicalBlockFile(scope: !3340, file: !4, discriminator: 1)
!11432 = !DILocation(line: 1574, column: 24, scope: !3340)
!11433 = !DILocation(line: 1574, column: 54, scope: !3340)
!11434 = !DILocation(line: 1574, column: 41, scope: !3340)
!11435 = !DILocation(line: 1574, column: 69, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !3340, file: !4, line: 1574, column: 66)
!11437 = !DILocation(line: 1574, column: 86, scope: !11436)
!11438 = !DILocation(line: 1574, column: 66, scope: !11436)
!11439 = !DILocation(line: 1574, column: 96, scope: !11436)
!11440 = !DILocation(line: 1574, column: 66, scope: !3340)
!11441 = !DILocation(line: 1574, column: 66, scope: !11442)
!11442 = !DILexicalBlockFile(scope: !3340, file: !4, discriminator: 2)
!11443 = !DILocation(line: 1574, column: 127, scope: !11444)
!11444 = !DILexicalBlockFile(scope: !11436, file: !4, discriminator: 3)
!11445 = !DILocation(line: 1574, column: 145, scope: !11436)
!11446 = !DILocation(line: 1574, column: 155, scope: !11436)
!11447 = !DILocation(line: 1574, column: 180, scope: !11436)
!11448 = !DILocation(line: 1574, column: 111, scope: !11436)
!11449 = !DILocation(line: 1574, column: 199, scope: !11450)
!11450 = !DILexicalBlockFile(scope: !3341, file: !4, discriminator: 4)
!11451 = !DILocation(line: 1574, column: 199, scope: !3340)
!11452 = !DILocation(line: 1574, column: 199, scope: !11453)
!11453 = !DILexicalBlockFile(scope: !3340, file: !4, discriminator: 5)
!11454 = !DILocation(line: 1575, column: 9, scope: !3341)
!11455 = !DILocation(line: 1578, column: 13, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1578, column: 9)
!11457 = !DILocation(line: 1578, column: 17, scope: !11456)
!11458 = !DILocation(line: 1578, column: 9, scope: !3327)
!11459 = !DILocation(line: 1579, column: 22, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11456, file: !4, line: 1578, column: 31)
!11461 = !DILocation(line: 1579, column: 9, scope: !11460)
!11462 = !DILocation(line: 1581, column: 9, scope: !11460)
!11463 = !DILocation(line: 1585, column: 20, scope: !3327)
!11464 = !DILocation(line: 1585, column: 26, scope: !3327)
!11465 = !DILocation(line: 1585, column: 39, scope: !3327)
!11466 = !DILocation(line: 1585, column: 17, scope: !3327)
!11467 = !DILocation(line: 1586, column: 27, scope: !3327)
!11468 = !DILocation(line: 1586, column: 33, scope: !3327)
!11469 = !DILocation(line: 1586, column: 14, scope: !3327)
!11470 = !DILocation(line: 1586, column: 43, scope: !3327)
!11471 = !DILocation(line: 1586, column: 42, scope: !3327)
!11472 = !DILocation(line: 1586, column: 5, scope: !3327)
!11473 = !DILocation(line: 1587, column: 27, scope: !3327)
!11474 = !DILocation(line: 1587, column: 33, scope: !3327)
!11475 = !DILocation(line: 1587, column: 14, scope: !3327)
!11476 = !DILocation(line: 1587, column: 43, scope: !3327)
!11477 = !DILocation(line: 1587, column: 42, scope: !3327)
!11478 = !DILocation(line: 1587, column: 5, scope: !3327)
!11479 = !DILocation(line: 1589, column: 51, scope: !3327)
!11480 = !DILocation(line: 1589, column: 17, scope: !3327)
!11481 = !DILocation(line: 1589, column: 15, scope: !3327)
!11482 = !DILocation(line: 1590, column: 9, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1590, column: 9)
!11484 = !DILocation(line: 1590, column: 19, scope: !11483)
!11485 = !DILocation(line: 1590, column: 9, scope: !3327)
!11486 = !DILocation(line: 1591, column: 40, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11483, file: !4, line: 1590, column: 44)
!11488 = !DILocation(line: 1591, column: 9, scope: !11487)
!11489 = !DILocation(line: 1593, column: 9, scope: !11487)
!11490 = !DILocation(line: 1594, column: 16, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11483, file: !4, line: 1594, column: 16)
!11492 = !DILocation(line: 1594, column: 26, scope: !11491)
!11493 = !DILocation(line: 1594, column: 16, scope: !11483)
!11494 = !DILocation(line: 1595, column: 25, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11491, file: !4, line: 1594, column: 53)
!11496 = !DILocation(line: 1595, column: 9, scope: !11495)
!11497 = !DILocation(line: 1597, column: 9, scope: !11495)
!11498 = !DILocation(line: 1598, column: 16, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11491, file: !4, line: 1598, column: 16)
!11500 = !DILocation(line: 1598, column: 26, scope: !11499)
!11501 = !DILocation(line: 1598, column: 16, scope: !11491)
!11502 = !DILocation(line: 1599, column: 25, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11499, file: !4, line: 1598, column: 58)
!11504 = !DILocation(line: 1599, column: 9, scope: !11503)
!11505 = !DILocation(line: 1601, column: 9, scope: !11503)
!11506 = !DILocation(line: 1603, column: 5, scope: !3327)
!11507 = !DILocation(line: 1604, column: 11, scope: !3344)
!11508 = !DILocation(line: 1604, column: 26, scope: !3344)
!11509 = !DILocation(line: 1604, column: 46, scope: !3344)
!11510 = !DILocation(line: 1604, column: 55, scope: !11511)
!11511 = !DILexicalBlockFile(scope: !11512, file: !4, discriminator: 1)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !4, line: 1604, column: 55)
!11513 = distinct !DILexicalBlock(scope: !3344, file: !4, line: 1604, column: 49)
!11514 = !DILocation(line: 1604, column: 71, scope: !11512)
!11515 = !DILocation(line: 1604, column: 55, scope: !11513)
!11516 = !DILocation(line: 1604, column: 87, scope: !11517)
!11517 = !DILexicalBlockFile(scope: !11518, file: !4, discriminator: 2)
!11518 = distinct !DILexicalBlock(scope: !11512, file: !4, line: 1604, column: 75)
!11519 = !DILocation(line: 1604, column: 85, scope: !11518)
!11520 = !DILocation(line: 1604, column: 108, scope: !11518)
!11521 = !DILocation(line: 1604, column: 110, scope: !11522)
!11522 = !DILexicalBlockFile(scope: !11523, file: !4, discriminator: 4)
!11523 = !DILexicalBlockFile(scope: !11513, file: !4, discriminator: 3)
!11524 = !DILocation(line: 1604, column: 110, scope: !11525)
!11525 = !DILexicalBlockFile(scope: !11513, file: !4, discriminator: 5)
!11526 = !DILocation(line: 1605, column: 25, scope: !3344)
!11527 = !DILocation(line: 1605, column: 31, scope: !3344)
!11528 = !DILocation(line: 1605, column: 40, scope: !3344)
!11529 = !DILocation(line: 1605, column: 54, scope: !3344)
!11530 = !DILocation(line: 1605, column: 45, scope: !3344)
!11531 = !DILocation(line: 1605, column: 15, scope: !3344)
!11532 = !DILocation(line: 1605, column: 13, scope: !3344)
!11533 = !DILocation(line: 1606, column: 29, scope: !3344)
!11534 = !DILocation(line: 1606, column: 35, scope: !3344)
!11535 = !DILocation(line: 1606, column: 40, scope: !3344)
!11536 = !DILocation(line: 1606, column: 15, scope: !3344)
!11537 = !DILocation(line: 1606, column: 13, scope: !3344)
!11538 = !DILocation(line: 1607, column: 9, scope: !3344)
!11539 = !DILocation(line: 1607, column: 18, scope: !11540)
!11540 = !DILexicalBlockFile(scope: !11541, file: !4, discriminator: 1)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !4, line: 1607, column: 18)
!11542 = distinct !DILexicalBlock(scope: !3344, file: !4, line: 1607, column: 12)
!11543 = !DILocation(line: 1607, column: 34, scope: !11541)
!11544 = !DILocation(line: 1607, column: 18, scope: !11542)
!11545 = !DILocation(line: 1607, column: 61, scope: !11546)
!11546 = !DILexicalBlockFile(scope: !11547, file: !4, discriminator: 2)
!11547 = distinct !DILexicalBlock(scope: !11541, file: !4, line: 1607, column: 38)
!11548 = !DILocation(line: 1607, column: 40, scope: !11547)
!11549 = !DILocation(line: 1607, column: 69, scope: !11547)
!11550 = !DILocation(line: 1607, column: 71, scope: !11551)
!11551 = !DILexicalBlockFile(scope: !11552, file: !4, discriminator: 4)
!11552 = !DILexicalBlockFile(scope: !11542, file: !4, discriminator: 3)
!11553 = !DILocation(line: 1607, column: 71, scope: !11554)
!11554 = !DILexicalBlockFile(scope: !11542, file: !4, discriminator: 5)
!11555 = !DILocation(line: 1607, column: 84, scope: !11556)
!11556 = !DILexicalBlockFile(scope: !3345, file: !4, discriminator: 6)
!11557 = !DILocation(line: 1608, column: 13, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !3345, file: !4, line: 1608, column: 13)
!11559 = !DILocation(line: 1608, column: 13, scope: !3345)
!11560 = !DILocation(line: 1609, column: 13, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11558, file: !4, line: 1608, column: 35)
!11562 = !DILocation(line: 1611, column: 13, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !3345, file: !4, line: 1611, column: 13)
!11564 = !DILocation(line: 1611, column: 17, scope: !11563)
!11565 = !DILocation(line: 1611, column: 13, scope: !3345)
!11566 = !DILocation(line: 1612, column: 59, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11563, file: !4, line: 1611, column: 23)
!11568 = !DILocation(line: 1612, column: 25, scope: !11567)
!11569 = !DILocation(line: 1612, column: 23, scope: !11567)
!11570 = !DILocation(line: 1613, column: 9, scope: !11567)
!11571 = !DILocation(line: 1613, column: 20, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11563, file: !4, line: 1613, column: 20)
!11573 = !DILocation(line: 1613, column: 24, scope: !11572)
!11574 = !DILocation(line: 1613, column: 20, scope: !11563)
!11575 = !DILocation(line: 1614, column: 59, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11572, file: !4, line: 1613, column: 30)
!11577 = !DILocation(line: 1614, column: 25, scope: !11576)
!11578 = !DILocation(line: 1614, column: 23, scope: !11576)
!11579 = !DILocation(line: 1615, column: 9, scope: !11576)
!11580 = !DILocation(line: 1616, column: 23, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11572, file: !4, line: 1615, column: 16)
!11582 = !DILocation(line: 1618, column: 13, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !3345, file: !4, line: 1618, column: 13)
!11584 = !DILocation(line: 1618, column: 23, scope: !11583)
!11585 = !DILocation(line: 1618, column: 13, scope: !3345)
!11586 = !DILocation(line: 1619, column: 44, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11583, file: !4, line: 1618, column: 48)
!11588 = !DILocation(line: 1619, column: 13, scope: !11587)
!11589 = !DILocation(line: 1621, column: 13, scope: !11587)
!11590 = !DILocation(line: 1622, column: 20, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11583, file: !4, line: 1622, column: 20)
!11592 = !DILocation(line: 1622, column: 30, scope: !11591)
!11593 = !DILocation(line: 1622, column: 20, scope: !11583)
!11594 = !DILocation(line: 1623, column: 29, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11591, file: !4, line: 1622, column: 57)
!11596 = !DILocation(line: 1623, column: 13, scope: !11595)
!11597 = !DILocation(line: 1625, column: 13, scope: !11595)
!11598 = !DILocation(line: 1626, column: 20, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11591, file: !4, line: 1626, column: 20)
!11600 = !DILocation(line: 1626, column: 30, scope: !11599)
!11601 = !DILocation(line: 1626, column: 20, scope: !11591)
!11602 = !DILocation(line: 1627, column: 13, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11599, file: !4, line: 1626, column: 56)
!11604 = !DILocation(line: 1629, column: 5, scope: !3345)
!11605 = !DILocation(line: 1629, column: 14, scope: !11606)
!11606 = !DILexicalBlockFile(scope: !3327, file: !4, discriminator: 1)
!11607 = !DILocation(line: 1629, column: 18, scope: !3327)
!11608 = !DILocation(line: 1629, column: 23, scope: !3327)
!11609 = !DILocation(line: 1629, column: 26, scope: !11610)
!11610 = !DILexicalBlockFile(scope: !3327, file: !4, discriminator: 3)
!11611 = !DILocation(line: 1629, column: 30, scope: !3327)
!11612 = !DILocation(line: 1629, column: 5, scope: !11613)
!11613 = !DILexicalBlockFile(scope: !11614, file: !4, discriminator: 4)
!11614 = !DILexicalBlockFile(scope: !3345, file: !4, discriminator: 2)
!11615 = !DILocation(line: 1631, column: 5, scope: !3327)
!11616 = !DILocation(line: 1631, column: 10, scope: !11617)
!11617 = !DILexicalBlockFile(scope: !3347, file: !4, discriminator: 1)
!11618 = !DILocation(line: 1631, column: 20, scope: !3347)
!11619 = !DILocation(line: 1631, column: 50, scope: !3347)
!11620 = !DILocation(line: 1631, column: 37, scope: !3347)
!11621 = !DILocation(line: 1631, column: 65, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !3347, file: !4, line: 1631, column: 62)
!11623 = !DILocation(line: 1631, column: 82, scope: !11622)
!11624 = !DILocation(line: 1631, column: 62, scope: !11622)
!11625 = !DILocation(line: 1631, column: 92, scope: !11622)
!11626 = !DILocation(line: 1631, column: 62, scope: !3347)
!11627 = !DILocation(line: 1631, column: 62, scope: !11628)
!11628 = !DILexicalBlockFile(scope: !3347, file: !4, discriminator: 2)
!11629 = !DILocation(line: 1631, column: 123, scope: !11630)
!11630 = !DILexicalBlockFile(scope: !11622, file: !4, discriminator: 3)
!11631 = !DILocation(line: 1631, column: 141, scope: !11622)
!11632 = !DILocation(line: 1631, column: 151, scope: !11622)
!11633 = !DILocation(line: 1631, column: 176, scope: !11622)
!11634 = !DILocation(line: 1631, column: 107, scope: !11622)
!11635 = !DILocation(line: 1631, column: 195, scope: !11636)
!11636 = !DILexicalBlockFile(scope: !3327, file: !4, discriminator: 4)
!11637 = !DILocation(line: 1631, column: 195, scope: !3347)
!11638 = !DILocation(line: 1631, column: 195, scope: !11639)
!11639 = !DILexicalBlockFile(scope: !3347, file: !4, discriminator: 5)
!11640 = !DILocation(line: 1632, column: 5, scope: !3327)
!11641 = !DILocation(line: 1633, column: 9, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !3327, file: !4, line: 1633, column: 9)
!11643 = !DILocation(line: 1633, column: 13, scope: !11642)
!11644 = !DILocation(line: 1633, column: 9, scope: !3327)
!11645 = !DILocation(line: 1634, column: 32, scope: !11642)
!11646 = !DILocation(line: 1634, column: 16, scope: !11642)
!11647 = !DILocation(line: 1634, column: 9, scope: !11642)
!11648 = !DILocation(line: 1636, column: 31, scope: !11642)
!11649 = !DILocation(line: 1636, column: 37, scope: !11642)
!11650 = !DILocation(line: 1636, column: 16, scope: !11642)
!11651 = !DILocation(line: 1636, column: 9, scope: !11642)
!11652 = !DILocation(line: 1639, column: 5, scope: !3327)
!11653 = !DILocation(line: 1639, column: 10, scope: !11654)
!11654 = !DILexicalBlockFile(scope: !3349, file: !4, discriminator: 1)
!11655 = !DILocation(line: 1639, column: 20, scope: !3349)
!11656 = !DILocation(line: 1639, column: 50, scope: !3349)
!11657 = !DILocation(line: 1639, column: 37, scope: !3349)
!11658 = !DILocation(line: 1639, column: 65, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !3349, file: !4, line: 1639, column: 62)
!11660 = !DILocation(line: 1639, column: 82, scope: !11659)
!11661 = !DILocation(line: 1639, column: 62, scope: !11659)
!11662 = !DILocation(line: 1639, column: 92, scope: !11659)
!11663 = !DILocation(line: 1639, column: 62, scope: !3349)
!11664 = !DILocation(line: 1639, column: 62, scope: !11665)
!11665 = !DILexicalBlockFile(scope: !3349, file: !4, discriminator: 2)
!11666 = !DILocation(line: 1639, column: 123, scope: !11667)
!11667 = !DILexicalBlockFile(scope: !11659, file: !4, discriminator: 3)
!11668 = !DILocation(line: 1639, column: 141, scope: !11659)
!11669 = !DILocation(line: 1639, column: 151, scope: !11659)
!11670 = !DILocation(line: 1639, column: 176, scope: !11659)
!11671 = !DILocation(line: 1639, column: 107, scope: !11659)
!11672 = !DILocation(line: 1639, column: 195, scope: !11636)
!11673 = !DILocation(line: 1639, column: 195, scope: !3349)
!11674 = !DILocation(line: 1639, column: 195, scope: !11675)
!11675 = !DILexicalBlockFile(scope: !3349, file: !4, discriminator: 5)
!11676 = !DILocation(line: 1640, column: 5, scope: !3327)
!11677 = !DILocation(line: 1641, column: 5, scope: !3327)
!11678 = !DILocation(line: 1642, column: 1, scope: !3327)
!11679 = !DILocation(line: 1669, column: 45, scope: !3350)
!11680 = !DILocation(line: 1669, column: 61, scope: !3350)
!11681 = !DILocation(line: 1671, column: 5, scope: !3350)
!11682 = !DILocation(line: 1671, column: 15, scope: !3350)
!11683 = !DILocation(line: 1672, column: 5, scope: !3350)
!11684 = !DILocation(line: 1672, column: 15, scope: !3350)
!11685 = !DILocation(line: 1673, column: 5, scope: !3350)
!11686 = !DILocation(line: 1673, column: 11, scope: !3350)
!11687 = !DILocation(line: 1674, column: 5, scope: !3350)
!11688 = !DILocation(line: 1674, column: 9, scope: !3350)
!11689 = !DILocation(line: 1674, column: 14, scope: !3350)
!11690 = !DILocation(line: 1675, column: 5, scope: !3350)
!11691 = !DILocation(line: 1675, column: 9, scope: !3350)
!11692 = !DILocation(line: 1676, column: 5, scope: !3350)
!11693 = !DILocation(line: 1676, column: 9, scope: !3350)
!11694 = !DILocation(line: 1677, column: 5, scope: !3350)
!11695 = !DILocation(line: 1677, column: 9, scope: !3350)
!11696 = !DILocation(line: 1678, column: 5, scope: !3350)
!11697 = !DILocation(line: 1678, column: 9, scope: !3350)
!11698 = !DILocation(line: 1679, column: 5, scope: !3350)
!11699 = !DILocation(line: 1679, column: 25, scope: !3350)
!11700 = !DILocation(line: 1680, column: 52, scope: !3350)
!11701 = !DILocation(line: 1680, column: 58, scope: !3350)
!11702 = !DILocation(line: 1680, column: 32, scope: !3350)
!11703 = !DILocation(line: 1680, column: 9, scope: !3350)
!11704 = !DILocation(line: 1682, column: 21, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1682, column: 9)
!11706 = !DILocation(line: 1682, column: 10, scope: !11705)
!11707 = !DILocation(line: 1682, column: 27, scope: !11705)
!11708 = !DILocation(line: 1682, column: 9, scope: !3350)
!11709 = !DILocation(line: 1683, column: 9, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11705, file: !4, line: 1682, column: 49)
!11711 = !DILocation(line: 1685, column: 9, scope: !11710)
!11712 = !DILocation(line: 1687, column: 21, scope: !3350)
!11713 = !DILocation(line: 1687, column: 8, scope: !3350)
!11714 = !DILocation(line: 1687, column: 29, scope: !3350)
!11715 = !DILocation(line: 1687, column: 38, scope: !3350)
!11716 = !DILocation(line: 1689, column: 9, scope: !3350)
!11717 = !DILocation(line: 1689, column: 13, scope: !3350)
!11718 = !{!4898, !3861, i64 8}
!11719 = !DILocation(line: 1690, column: 9, scope: !3350)
!11720 = !DILocation(line: 1690, column: 13, scope: !3350)
!11721 = !DILocation(line: 1691, column: 27, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1691, column: 9)
!11723 = !DILocation(line: 1691, column: 10, scope: !11722)
!11724 = !DILocation(line: 1691, column: 9, scope: !3350)
!11725 = !DILocation(line: 1692, column: 9, scope: !11722)
!11726 = !DILocation(line: 1694, column: 14, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1694, column: 9)
!11728 = !DILocation(line: 1694, column: 18, scope: !11727)
!11729 = !DILocation(line: 1694, column: 33, scope: !11727)
!11730 = !DILocation(line: 1694, column: 41, scope: !11731)
!11731 = !DILexicalBlockFile(scope: !11727, file: !4, discriminator: 1)
!11732 = !DILocation(line: 1694, column: 45, scope: !11727)
!11733 = !DILocation(line: 1694, column: 9, scope: !3350)
!11734 = !DILocation(line: 1695, column: 54, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11727, file: !4, line: 1694, column: 61)
!11736 = !DILocation(line: 1695, column: 16, scope: !11735)
!11737 = !DILocation(line: 1695, column: 14, scope: !11735)
!11738 = !DILocation(line: 1696, column: 13, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !4, line: 1696, column: 13)
!11740 = !DILocation(line: 1696, column: 18, scope: !11739)
!11741 = !DILocation(line: 1696, column: 13, scope: !11735)
!11742 = !DILocation(line: 1697, column: 13, scope: !11739)
!11743 = !DILocation(line: 1698, column: 50, scope: !11735)
!11744 = !DILocation(line: 1698, column: 32, scope: !11735)
!11745 = !DILocation(line: 1698, column: 58, scope: !11735)
!11746 = !DILocation(line: 1698, column: 30, scope: !11735)
!11747 = !DILocation(line: 1698, column: 13, scope: !11735)
!11748 = !DILocation(line: 1699, column: 5, scope: !11735)
!11749 = !DILocation(line: 1701, column: 20, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11727, file: !4, line: 1700, column: 10)
!11751 = !DILocation(line: 1702, column: 19, scope: !11750)
!11752 = !DILocation(line: 1702, column: 13, scope: !11750)
!11753 = !DILocation(line: 1703, column: 13, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11750, file: !4, line: 1703, column: 13)
!11755 = !DILocation(line: 1703, column: 17, scope: !11754)
!11756 = !DILocation(line: 1703, column: 22, scope: !11754)
!11757 = !DILocation(line: 1703, column: 25, scope: !11758)
!11758 = !DILexicalBlockFile(scope: !11754, file: !4, discriminator: 1)
!11759 = !DILocation(line: 1703, column: 35, scope: !11754)
!11760 = !DILocation(line: 1703, column: 29, scope: !11754)
!11761 = !DILocation(line: 1703, column: 13, scope: !11750)
!11762 = !DILocation(line: 1704, column: 29, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11754, file: !4, line: 1703, column: 40)
!11764 = !DILocation(line: 1704, column: 19, scope: !11763)
!11765 = !DILocation(line: 1704, column: 17, scope: !11763)
!11766 = !DILocation(line: 1705, column: 21, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11763, file: !4, line: 1705, column: 17)
!11768 = !DILocation(line: 1705, column: 28, scope: !11767)
!11769 = !DILocation(line: 1705, column: 25, scope: !11767)
!11770 = !DILocation(line: 1705, column: 17, scope: !11763)
!11771 = !DILocation(line: 1706, column: 33, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11767, file: !4, line: 1705, column: 33)
!11773 = !DILocation(line: 1706, column: 17, scope: !11772)
!11774 = !DILocation(line: 1708, column: 17, scope: !11772)
!11775 = !DILocation(line: 1710, column: 9, scope: !11763)
!11776 = !DILocation(line: 1714, column: 20, scope: !3350)
!11777 = !DILocation(line: 1714, column: 26, scope: !3350)
!11778 = !DILocation(line: 1714, column: 39, scope: !3350)
!11779 = !DILocation(line: 1714, column: 17, scope: !3350)
!11780 = !DILocation(line: 1715, column: 27, scope: !3350)
!11781 = !DILocation(line: 1715, column: 33, scope: !3350)
!11782 = !DILocation(line: 1715, column: 14, scope: !3350)
!11783 = !DILocation(line: 1715, column: 43, scope: !3350)
!11784 = !DILocation(line: 1715, column: 42, scope: !3350)
!11785 = !DILocation(line: 1715, column: 5, scope: !3350)
!11786 = !DILocation(line: 1716, column: 27, scope: !3350)
!11787 = !DILocation(line: 1716, column: 33, scope: !3350)
!11788 = !DILocation(line: 1716, column: 14, scope: !3350)
!11789 = !DILocation(line: 1716, column: 43, scope: !3350)
!11790 = !DILocation(line: 1716, column: 42, scope: !3350)
!11791 = !DILocation(line: 1716, column: 5, scope: !3350)
!11792 = !DILocation(line: 1719, column: 7, scope: !3365)
!11793 = !DILocation(line: 1719, column: 22, scope: !3365)
!11794 = !DILocation(line: 1719, column: 42, scope: !3365)
!11795 = !DILocation(line: 1719, column: 51, scope: !11796)
!11796 = !DILexicalBlockFile(scope: !11797, file: !4, discriminator: 1)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !4, line: 1719, column: 51)
!11798 = distinct !DILexicalBlock(scope: !3365, file: !4, line: 1719, column: 45)
!11799 = !DILocation(line: 1719, column: 67, scope: !11797)
!11800 = !DILocation(line: 1719, column: 51, scope: !11798)
!11801 = !DILocation(line: 1719, column: 83, scope: !11802)
!11802 = !DILexicalBlockFile(scope: !11803, file: !4, discriminator: 2)
!11803 = distinct !DILexicalBlock(scope: !11797, file: !4, line: 1719, column: 71)
!11804 = !DILocation(line: 1719, column: 81, scope: !11803)
!11805 = !DILocation(line: 1719, column: 104, scope: !11803)
!11806 = !DILocation(line: 1719, column: 106, scope: !11807)
!11807 = !DILexicalBlockFile(scope: !11808, file: !4, discriminator: 4)
!11808 = !DILexicalBlockFile(scope: !11798, file: !4, discriminator: 3)
!11809 = !DILocation(line: 1719, column: 106, scope: !11810)
!11810 = !DILexicalBlockFile(scope: !11798, file: !4, discriminator: 5)
!11811 = !DILocation(line: 1720, column: 25, scope: !3365)
!11812 = !DILocation(line: 1720, column: 31, scope: !3365)
!11813 = !DILocation(line: 1720, column: 13, scope: !3365)
!11814 = !DILocation(line: 1720, column: 11, scope: !3365)
!11815 = !DILocation(line: 1721, column: 5, scope: !3365)
!11816 = !DILocation(line: 1721, column: 14, scope: !11817)
!11817 = !DILexicalBlockFile(scope: !11818, file: !4, discriminator: 1)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !4, line: 1721, column: 14)
!11819 = distinct !DILexicalBlock(scope: !3365, file: !4, line: 1721, column: 8)
!11820 = !DILocation(line: 1721, column: 30, scope: !11818)
!11821 = !DILocation(line: 1721, column: 14, scope: !11819)
!11822 = !DILocation(line: 1721, column: 57, scope: !11823)
!11823 = !DILexicalBlockFile(scope: !11824, file: !4, discriminator: 2)
!11824 = distinct !DILexicalBlock(scope: !11818, file: !4, line: 1721, column: 34)
!11825 = !DILocation(line: 1721, column: 36, scope: !11824)
!11826 = !DILocation(line: 1721, column: 65, scope: !11824)
!11827 = !DILocation(line: 1721, column: 67, scope: !11828)
!11828 = !DILexicalBlockFile(scope: !11829, file: !4, discriminator: 4)
!11829 = !DILexicalBlockFile(scope: !11819, file: !4, discriminator: 3)
!11830 = !DILocation(line: 1721, column: 67, scope: !11831)
!11831 = !DILexicalBlockFile(scope: !11819, file: !4, discriminator: 5)
!11832 = !DILocation(line: 1721, column: 80, scope: !11833)
!11833 = !DILexicalBlockFile(scope: !3350, file: !4, discriminator: 6)
!11834 = !DILocation(line: 1723, column: 10, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1723, column: 9)
!11836 = !DILocation(line: 1723, column: 9, scope: !3350)
!11837 = !DILocation(line: 1724, column: 55, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11835, file: !4, line: 1723, column: 17)
!11839 = !DILocation(line: 1724, column: 21, scope: !11838)
!11840 = !DILocation(line: 1724, column: 19, scope: !11838)
!11841 = !DILocation(line: 1725, column: 13, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11838, file: !4, line: 1725, column: 13)
!11843 = !DILocation(line: 1725, column: 23, scope: !11842)
!11844 = !DILocation(line: 1725, column: 13, scope: !11838)
!11845 = !DILocation(line: 1726, column: 44, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11842, file: !4, line: 1725, column: 48)
!11847 = !DILocation(line: 1726, column: 13, scope: !11846)
!11848 = !DILocation(line: 1728, column: 13, scope: !11846)
!11849 = !DILocation(line: 1729, column: 20, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11842, file: !4, line: 1729, column: 20)
!11851 = !DILocation(line: 1729, column: 30, scope: !11850)
!11852 = !DILocation(line: 1729, column: 20, scope: !11842)
!11853 = !DILocation(line: 1730, column: 29, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11850, file: !4, line: 1729, column: 62)
!11855 = !DILocation(line: 1730, column: 13, scope: !11854)
!11856 = !DILocation(line: 1732, column: 13, scope: !11854)
!11857 = !DILocation(line: 1733, column: 20, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11850, file: !4, line: 1733, column: 20)
!11859 = !DILocation(line: 1733, column: 30, scope: !11858)
!11860 = !DILocation(line: 1733, column: 20, scope: !11850)
!11861 = !DILocation(line: 1734, column: 19, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11858, file: !4, line: 1733, column: 57)
!11863 = !DILocation(line: 1735, column: 13, scope: !11862)
!11864 = !DILocation(line: 1737, column: 5, scope: !11838)
!11865 = !DILocation(line: 1738, column: 5, scope: !3350)
!11866 = !DILocation(line: 1739, column: 11, scope: !3367)
!11867 = !DILocation(line: 1739, column: 26, scope: !3367)
!11868 = !DILocation(line: 1739, column: 46, scope: !3367)
!11869 = !DILocation(line: 1739, column: 55, scope: !11870)
!11870 = !DILexicalBlockFile(scope: !11871, file: !4, discriminator: 1)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !4, line: 1739, column: 55)
!11872 = distinct !DILexicalBlock(scope: !3367, file: !4, line: 1739, column: 49)
!11873 = !DILocation(line: 1739, column: 71, scope: !11871)
!11874 = !DILocation(line: 1739, column: 55, scope: !11872)
!11875 = !DILocation(line: 1739, column: 87, scope: !11876)
!11876 = !DILexicalBlockFile(scope: !11877, file: !4, discriminator: 2)
!11877 = distinct !DILexicalBlock(scope: !11871, file: !4, line: 1739, column: 75)
!11878 = !DILocation(line: 1739, column: 85, scope: !11877)
!11879 = !DILocation(line: 1739, column: 108, scope: !11877)
!11880 = !DILocation(line: 1739, column: 110, scope: !11881)
!11881 = !DILexicalBlockFile(scope: !11882, file: !4, discriminator: 4)
!11882 = !DILexicalBlockFile(scope: !11872, file: !4, discriminator: 3)
!11883 = !DILocation(line: 1739, column: 110, scope: !11884)
!11884 = !DILexicalBlockFile(scope: !11872, file: !4, discriminator: 5)
!11885 = !DILocation(line: 1740, column: 26, scope: !3367)
!11886 = !DILocation(line: 1740, column: 32, scope: !3367)
!11887 = !DILocation(line: 1740, column: 37, scope: !3367)
!11888 = !DILocation(line: 1740, column: 42, scope: !3367)
!11889 = !DILocation(line: 1740, column: 17, scope: !3367)
!11890 = !DILocation(line: 1740, column: 15, scope: !3367)
!11891 = !DILocation(line: 1741, column: 29, scope: !3367)
!11892 = !DILocation(line: 1741, column: 35, scope: !3367)
!11893 = !DILocation(line: 1741, column: 40, scope: !3367)
!11894 = !DILocation(line: 1741, column: 15, scope: !3367)
!11895 = !DILocation(line: 1741, column: 13, scope: !3367)
!11896 = !DILocation(line: 1742, column: 9, scope: !3367)
!11897 = !DILocation(line: 1742, column: 18, scope: !11898)
!11898 = !DILexicalBlockFile(scope: !11899, file: !4, discriminator: 1)
!11899 = distinct !DILexicalBlock(scope: !11900, file: !4, line: 1742, column: 18)
!11900 = distinct !DILexicalBlock(scope: !3367, file: !4, line: 1742, column: 12)
!11901 = !DILocation(line: 1742, column: 34, scope: !11899)
!11902 = !DILocation(line: 1742, column: 18, scope: !11900)
!11903 = !DILocation(line: 1742, column: 61, scope: !11904)
!11904 = !DILexicalBlockFile(scope: !11905, file: !4, discriminator: 2)
!11905 = distinct !DILexicalBlock(scope: !11899, file: !4, line: 1742, column: 38)
!11906 = !DILocation(line: 1742, column: 40, scope: !11905)
!11907 = !DILocation(line: 1742, column: 69, scope: !11905)
!11908 = !DILocation(line: 1742, column: 71, scope: !11909)
!11909 = !DILexicalBlockFile(scope: !11910, file: !4, discriminator: 4)
!11910 = !DILexicalBlockFile(scope: !11900, file: !4, discriminator: 3)
!11911 = !DILocation(line: 1742, column: 71, scope: !11912)
!11912 = !DILexicalBlockFile(scope: !11900, file: !4, discriminator: 5)
!11913 = !DILocation(line: 1742, column: 84, scope: !11914)
!11914 = !DILexicalBlockFile(scope: !3368, file: !4, discriminator: 6)
!11915 = !DILocation(line: 1743, column: 13, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !3368, file: !4, line: 1743, column: 13)
!11917 = !DILocation(line: 1743, column: 13, scope: !3368)
!11918 = !DILocation(line: 1744, column: 13, scope: !11916)
!11919 = !DILocation(line: 1745, column: 13, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !3368, file: !4, line: 1745, column: 13)
!11921 = !DILocation(line: 1745, column: 17, scope: !11920)
!11922 = !DILocation(line: 1745, column: 13, scope: !3368)
!11923 = !DILocation(line: 1746, column: 59, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11920, file: !4, line: 1745, column: 23)
!11925 = !DILocation(line: 1746, column: 25, scope: !11924)
!11926 = !DILocation(line: 1746, column: 23, scope: !11924)
!11927 = !DILocation(line: 1747, column: 9, scope: !11924)
!11928 = !DILocation(line: 1747, column: 20, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11920, file: !4, line: 1747, column: 20)
!11930 = !DILocation(line: 1747, column: 24, scope: !11929)
!11931 = !DILocation(line: 1747, column: 20, scope: !11920)
!11932 = !DILocation(line: 1748, column: 59, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !4, line: 1747, column: 30)
!11934 = !DILocation(line: 1748, column: 25, scope: !11933)
!11935 = !DILocation(line: 1748, column: 23, scope: !11933)
!11936 = !DILocation(line: 1749, column: 9, scope: !11933)
!11937 = !DILocation(line: 1749, column: 21, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11929, file: !4, line: 1749, column: 20)
!11939 = !DILocation(line: 1749, column: 25, scope: !11938)
!11940 = !DILocation(line: 1749, column: 31, scope: !11938)
!11941 = !DILocation(line: 1750, column: 38, scope: !11938)
!11942 = !DILocation(line: 1750, column: 44, scope: !11938)
!11943 = !DILocation(line: 1750, column: 21, scope: !11938)
!11944 = !DILocation(line: 1750, column: 49, scope: !11938)
!11945 = !DILocation(line: 1749, column: 20, scope: !11929)
!11946 = !DILocation(line: 1753, column: 19, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11938, file: !4, line: 1752, column: 9)
!11948 = !DILocation(line: 1754, column: 13, scope: !11947)
!11949 = !DILocation(line: 1756, column: 23, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11938, file: !4, line: 1755, column: 16)
!11951 = !DILocation(line: 1758, column: 13, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !3368, file: !4, line: 1758, column: 13)
!11953 = !DILocation(line: 1758, column: 23, scope: !11952)
!11954 = !DILocation(line: 1758, column: 13, scope: !3368)
!11955 = !DILocation(line: 1759, column: 44, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11952, file: !4, line: 1758, column: 48)
!11957 = !DILocation(line: 1759, column: 13, scope: !11956)
!11958 = !DILocation(line: 1761, column: 13, scope: !11956)
!11959 = !DILocation(line: 1762, column: 20, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11952, file: !4, line: 1762, column: 20)
!11961 = !DILocation(line: 1762, column: 30, scope: !11960)
!11962 = !DILocation(line: 1762, column: 20, scope: !11952)
!11963 = !DILocation(line: 1763, column: 13, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11960, file: !4, line: 1762, column: 56)
!11965 = !DILocation(line: 1765, column: 5, scope: !3368)
!11966 = !DILocation(line: 1765, column: 14, scope: !11967)
!11967 = !DILexicalBlockFile(scope: !3350, file: !4, discriminator: 1)
!11968 = !DILocation(line: 1765, column: 18, scope: !3350)
!11969 = !DILocation(line: 1765, column: 23, scope: !3350)
!11970 = !DILocation(line: 1765, column: 26, scope: !11971)
!11971 = !DILexicalBlockFile(scope: !3350, file: !4, discriminator: 3)
!11972 = !DILocation(line: 1765, column: 30, scope: !3350)
!11973 = !DILocation(line: 1765, column: 5, scope: !11974)
!11974 = !DILexicalBlockFile(scope: !11975, file: !4, discriminator: 4)
!11975 = !DILexicalBlockFile(scope: !3368, file: !4, discriminator: 2)
!11976 = !DILocation(line: 1766, column: 9, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1766, column: 9)
!11978 = !DILocation(line: 1766, column: 15, scope: !11977)
!11979 = !DILocation(line: 1766, column: 9, scope: !3350)
!11980 = !DILocation(line: 1767, column: 24, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11977, file: !4, line: 1766, column: 21)
!11982 = !DILocation(line: 1767, column: 30, scope: !11981)
!11983 = !DILocation(line: 1767, column: 9, scope: !11981)
!11984 = !DILocation(line: 1768, column: 9, scope: !11981)
!11985 = !DILocation(line: 1766, column: 18, scope: !11986)
!11986 = !DILexicalBlockFile(scope: !11977, file: !4, discriminator: 1)
!11987 = !DILocation(line: 1772, column: 5, scope: !3350)
!11988 = !DILocation(line: 1772, column: 10, scope: !11989)
!11989 = !DILexicalBlockFile(scope: !3370, file: !4, discriminator: 1)
!11990 = !DILocation(line: 1772, column: 20, scope: !3370)
!11991 = !DILocation(line: 1772, column: 50, scope: !3370)
!11992 = !DILocation(line: 1772, column: 37, scope: !3370)
!11993 = !DILocation(line: 1772, column: 65, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !3370, file: !4, line: 1772, column: 62)
!11995 = !DILocation(line: 1772, column: 82, scope: !11994)
!11996 = !DILocation(line: 1772, column: 62, scope: !11994)
!11997 = !DILocation(line: 1772, column: 92, scope: !11994)
!11998 = !DILocation(line: 1772, column: 62, scope: !3370)
!11999 = !DILocation(line: 1772, column: 62, scope: !12000)
!12000 = !DILexicalBlockFile(scope: !3370, file: !4, discriminator: 2)
!12001 = !DILocation(line: 1772, column: 123, scope: !12002)
!12002 = !DILexicalBlockFile(scope: !11994, file: !4, discriminator: 3)
!12003 = !DILocation(line: 1772, column: 141, scope: !11994)
!12004 = !DILocation(line: 1772, column: 151, scope: !11994)
!12005 = !DILocation(line: 1772, column: 176, scope: !11994)
!12006 = !DILocation(line: 1772, column: 107, scope: !11994)
!12007 = !DILocation(line: 1772, column: 195, scope: !12008)
!12008 = !DILexicalBlockFile(scope: !3350, file: !4, discriminator: 4)
!12009 = !DILocation(line: 1772, column: 195, scope: !3370)
!12010 = !DILocation(line: 1772, column: 195, scope: !12011)
!12011 = !DILexicalBlockFile(scope: !3370, file: !4, discriminator: 5)
!12012 = !DILocation(line: 1773, column: 10, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !3350, file: !4, line: 1773, column: 9)
!12014 = !DILocation(line: 1773, column: 9, scope: !3350)
!12015 = !DILocation(line: 1774, column: 32, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12013, file: !4, line: 1773, column: 22)
!12017 = !DILocation(line: 1774, column: 9, scope: !12016)
!12018 = !DILocation(line: 1775, column: 16, scope: !12016)
!12019 = !DILocation(line: 1775, column: 9, scope: !12016)
!12020 = !DILocation(line: 1778, column: 9, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12013, file: !4, line: 1777, column: 10)
!12022 = !DILocation(line: 1779, column: 32, scope: !12021)
!12023 = !DILocation(line: 1779, column: 16, scope: !12021)
!12024 = !DILocation(line: 1779, column: 9, scope: !12021)
!12025 = !DILocation(line: 1783, column: 5, scope: !3350)
!12026 = !DILocation(line: 1783, column: 10, scope: !12027)
!12027 = !DILexicalBlockFile(scope: !3372, file: !4, discriminator: 1)
!12028 = !DILocation(line: 1783, column: 20, scope: !3372)
!12029 = !DILocation(line: 1783, column: 50, scope: !3372)
!12030 = !DILocation(line: 1783, column: 37, scope: !3372)
!12031 = !DILocation(line: 1783, column: 65, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !3372, file: !4, line: 1783, column: 62)
!12033 = !DILocation(line: 1783, column: 82, scope: !12032)
!12034 = !DILocation(line: 1783, column: 62, scope: !12032)
!12035 = !DILocation(line: 1783, column: 92, scope: !12032)
!12036 = !DILocation(line: 1783, column: 62, scope: !3372)
!12037 = !DILocation(line: 1783, column: 62, scope: !12038)
!12038 = !DILexicalBlockFile(scope: !3372, file: !4, discriminator: 2)
!12039 = !DILocation(line: 1783, column: 123, scope: !12040)
!12040 = !DILexicalBlockFile(scope: !12032, file: !4, discriminator: 3)
!12041 = !DILocation(line: 1783, column: 141, scope: !12032)
!12042 = !DILocation(line: 1783, column: 151, scope: !12032)
!12043 = !DILocation(line: 1783, column: 176, scope: !12032)
!12044 = !DILocation(line: 1783, column: 107, scope: !12032)
!12045 = !DILocation(line: 1783, column: 195, scope: !12008)
!12046 = !DILocation(line: 1783, column: 195, scope: !3372)
!12047 = !DILocation(line: 1783, column: 195, scope: !12048)
!12048 = !DILexicalBlockFile(scope: !3372, file: !4, discriminator: 5)
!12049 = !DILocation(line: 1784, column: 10, scope: !3375)
!12050 = !DILocation(line: 1784, column: 9, scope: !3350)
!12051 = !DILocation(line: 1785, column: 9, scope: !3375)
!12052 = !DILocation(line: 1785, column: 14, scope: !12053)
!12053 = !DILexicalBlockFile(scope: !3374, file: !4, discriminator: 1)
!12054 = !DILocation(line: 1785, column: 24, scope: !3374)
!12055 = !DILocation(line: 1785, column: 55, scope: !3374)
!12056 = !DILocation(line: 1785, column: 66, scope: !3378)
!12057 = !DILocation(line: 1785, column: 82, scope: !3378)
!12058 = !DILocation(line: 1785, column: 66, scope: !3374)
!12059 = !DILocation(line: 1785, column: 97, scope: !12060)
!12060 = !DILexicalBlockFile(scope: !3378, file: !4, discriminator: 2)
!12061 = !DILocation(line: 1785, column: 102, scope: !12062)
!12062 = !DILexicalBlockFile(scope: !3377, file: !4, discriminator: 4)
!12063 = !DILocation(line: 1785, column: 112, scope: !3377)
!12064 = !DILocation(line: 1785, column: 142, scope: !3377)
!12065 = !DILocation(line: 1785, column: 168, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !3377, file: !4, line: 1785, column: 165)
!12067 = !DILocation(line: 1785, column: 185, scope: !12066)
!12068 = !DILocation(line: 1785, column: 165, scope: !12066)
!12069 = !DILocation(line: 1785, column: 195, scope: !12066)
!12070 = !DILocation(line: 1785, column: 165, scope: !3377)
!12071 = !DILocation(line: 1785, column: 165, scope: !12072)
!12072 = !DILexicalBlockFile(scope: !3377, file: !4, discriminator: 5)
!12073 = !DILocation(line: 1785, column: 226, scope: !12074)
!12074 = !DILexicalBlockFile(scope: !12066, file: !4, discriminator: 6)
!12075 = !DILocation(line: 1785, column: 244, scope: !12066)
!12076 = !DILocation(line: 1785, column: 254, scope: !12066)
!12077 = !DILocation(line: 1785, column: 279, scope: !12066)
!12078 = !DILocation(line: 1785, column: 210, scope: !12066)
!12079 = !DILocation(line: 1785, column: 298, scope: !12080)
!12080 = !DILexicalBlockFile(scope: !3378, file: !4, discriminator: 7)
!12081 = !DILocation(line: 1785, column: 298, scope: !3377)
!12082 = !DILocation(line: 1785, column: 298, scope: !12083)
!12083 = !DILexicalBlockFile(scope: !3377, file: !4, discriminator: 8)
!12084 = !DILocation(line: 1785, column: 298, scope: !12085)
!12085 = !DILexicalBlockFile(scope: !3377, file: !4, discriminator: 9)
!12086 = !DILocation(line: 1785, column: 311, scope: !12087)
!12087 = !DILexicalBlockFile(scope: !12088, file: !4, discriminator: 10)
!12088 = !DILexicalBlockFile(scope: !3375, file: !4, discriminator: 3)
!12089 = !DILocation(line: 1785, column: 311, scope: !3374)
!12090 = !DILocation(line: 1785, column: 311, scope: !12091)
!12091 = !DILexicalBlockFile(scope: !3374, file: !4, discriminator: 11)
!12092 = !DILocation(line: 1785, column: 311, scope: !12093)
!12093 = !DILexicalBlockFile(scope: !3374, file: !4, discriminator: 12)
!12094 = !DILocation(line: 1787, column: 9, scope: !3375)
!12095 = !DILocation(line: 1788, column: 5, scope: !3350)
!12096 = !DILocation(line: 1789, column: 1, scope: !3350)
!12097 = !DILocation(line: 1650, column: 48, scope: !3379)
!12098 = !DILocation(line: 1652, column: 5, scope: !3379)
!12099 = !DILocation(line: 1652, column: 9, scope: !3379)
!12100 = !DILocation(line: 1654, column: 7, scope: !3384)
!12101 = !DILocation(line: 1654, column: 22, scope: !3384)
!12102 = !DILocation(line: 1654, column: 42, scope: !3384)
!12103 = !DILocation(line: 1654, column: 51, scope: !12104)
!12104 = !DILexicalBlockFile(scope: !12105, file: !4, discriminator: 1)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !4, line: 1654, column: 51)
!12106 = distinct !DILexicalBlock(scope: !3384, file: !4, line: 1654, column: 45)
!12107 = !DILocation(line: 1654, column: 67, scope: !12105)
!12108 = !DILocation(line: 1654, column: 51, scope: !12106)
!12109 = !DILocation(line: 1654, column: 83, scope: !12110)
!12110 = !DILexicalBlockFile(scope: !12111, file: !4, discriminator: 2)
!12111 = distinct !DILexicalBlock(scope: !12105, file: !4, line: 1654, column: 71)
!12112 = !DILocation(line: 1654, column: 81, scope: !12111)
!12113 = !DILocation(line: 1654, column: 104, scope: !12111)
!12114 = !DILocation(line: 1654, column: 106, scope: !12115)
!12115 = !DILexicalBlockFile(scope: !12116, file: !4, discriminator: 4)
!12116 = !DILexicalBlockFile(scope: !12106, file: !4, discriminator: 3)
!12117 = !DILocation(line: 1654, column: 106, scope: !12118)
!12118 = !DILexicalBlockFile(scope: !12106, file: !4, discriminator: 5)
!12119 = !DILocation(line: 1655, column: 25, scope: !3384)
!12120 = !DILocation(line: 1655, column: 31, scope: !3384)
!12121 = !DILocation(line: 1655, column: 13, scope: !3384)
!12122 = !DILocation(line: 1655, column: 11, scope: !3384)
!12123 = !DILocation(line: 1656, column: 5, scope: !3384)
!12124 = !DILocation(line: 1656, column: 14, scope: !12125)
!12125 = !DILexicalBlockFile(scope: !12126, file: !4, discriminator: 1)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !4, line: 1656, column: 14)
!12127 = distinct !DILexicalBlock(scope: !3384, file: !4, line: 1656, column: 8)
!12128 = !DILocation(line: 1656, column: 30, scope: !12126)
!12129 = !DILocation(line: 1656, column: 14, scope: !12127)
!12130 = !DILocation(line: 1656, column: 57, scope: !12131)
!12131 = !DILexicalBlockFile(scope: !12132, file: !4, discriminator: 2)
!12132 = distinct !DILexicalBlock(scope: !12126, file: !4, line: 1656, column: 34)
!12133 = !DILocation(line: 1656, column: 36, scope: !12132)
!12134 = !DILocation(line: 1656, column: 65, scope: !12132)
!12135 = !DILocation(line: 1656, column: 67, scope: !12136)
!12136 = !DILexicalBlockFile(scope: !12137, file: !4, discriminator: 4)
!12137 = !DILexicalBlockFile(scope: !12127, file: !4, discriminator: 3)
!12138 = !DILocation(line: 1656, column: 67, scope: !12139)
!12139 = !DILexicalBlockFile(scope: !12127, file: !4, discriminator: 5)
!12140 = !DILocation(line: 1656, column: 80, scope: !12141)
!12141 = !DILexicalBlockFile(scope: !3379, file: !4, discriminator: 6)
!12142 = !DILocation(line: 1657, column: 9, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !3379, file: !4, line: 1657, column: 9)
!12144 = !DILocation(line: 1657, column: 15, scope: !12143)
!12145 = !DILocation(line: 1657, column: 9, scope: !3379)
!12146 = !DILocation(line: 1658, column: 31, scope: !12143)
!12147 = !DILocation(line: 1658, column: 37, scope: !12143)
!12148 = !DILocation(line: 1658, column: 16, scope: !12143)
!12149 = !DILocation(line: 1658, column: 9, scope: !12143)
!12150 = !DILocation(line: 1660, column: 32, scope: !12143)
!12151 = !DILocation(line: 1660, column: 16, scope: !12143)
!12152 = !DILocation(line: 1660, column: 9, scope: !12143)
!12153 = !DILocation(line: 1661, column: 1, scope: !3379)
!12154 = !DILocation(line: 1317, column: 29, scope: !3385)
!12155 = !DILocation(line: 1317, column: 45, scope: !3385)
!12156 = !DILocation(line: 1319, column: 5, scope: !3385)
!12157 = !DILocation(line: 1319, column: 9, scope: !3385)
!12158 = !DILocation(line: 1320, column: 5, scope: !3385)
!12159 = !DILocation(line: 1320, column: 9, scope: !3385)
!12160 = !DILocation(line: 1322, column: 27, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !3385, file: !4, line: 1322, column: 9)
!12162 = !DILocation(line: 1322, column: 10, scope: !12161)
!12163 = !DILocation(line: 1322, column: 9, scope: !3385)
!12164 = !DILocation(line: 1323, column: 9, scope: !12161)
!12165 = !DILocation(line: 1325, column: 10, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !3385, file: !4, line: 1325, column: 9)
!12167 = !DILocation(line: 1325, column: 16, scope: !12166)
!12168 = !DILocation(line: 1325, column: 9, scope: !3385)
!12169 = !DILocation(line: 1326, column: 25, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12166, file: !4, line: 1325, column: 32)
!12171 = !DILocation(line: 1326, column: 9, scope: !12170)
!12172 = !DILocation(line: 1328, column: 9, scope: !12170)
!12173 = !DILocation(line: 1330, column: 10, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !3385, file: !4, line: 1330, column: 9)
!12175 = !DILocation(line: 1330, column: 16, scope: !12174)
!12176 = !DILocation(line: 1330, column: 9, scope: !3385)
!12177 = !DILocation(line: 1331, column: 62, scope: !12174)
!12178 = !DILocation(line: 1331, column: 9, scope: !12174)
!12179 = !DILocation(line: 1333, column: 9, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !3385, file: !4, line: 1333, column: 9)
!12181 = !DILocation(line: 1333, column: 9, scope: !3385)
!12182 = !DILocation(line: 1335, column: 36, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12180, file: !4, line: 1333, column: 22)
!12184 = !DILocation(line: 1335, column: 42, scope: !12183)
!12185 = !DILocation(line: 1335, column: 16, scope: !12183)
!12186 = !DILocation(line: 1335, column: 9, scope: !12183)
!12187 = !DILocation(line: 1337, column: 64, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12180, file: !4, line: 1336, column: 12)
!12189 = !DILocation(line: 1337, column: 70, scope: !12188)
!12190 = !DILocation(line: 1337, column: 48, scope: !12188)
!12191 = !DILocation(line: 1337, column: 24, scope: !12188)
!12192 = !DILocation(line: 1337, column: 22, scope: !12188)
!12193 = !DILocation(line: 1338, column: 14, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12188, file: !4, line: 1338, column: 13)
!12195 = !DILocation(line: 1338, column: 27, scope: !12194)
!12196 = !DILocation(line: 1338, column: 35, scope: !12194)
!12197 = !DILocation(line: 1338, column: 13, scope: !12188)
!12198 = !DILocation(line: 1339, column: 20, scope: !12194)
!12199 = !DILocation(line: 1339, column: 13, scope: !12194)
!12200 = !DILocation(line: 1341, column: 40, scope: !12194)
!12201 = !DILocation(line: 1341, column: 46, scope: !12194)
!12202 = !DILocation(line: 1341, column: 20, scope: !12194)
!12203 = !DILocation(line: 1341, column: 13, scope: !12194)
!12204 = !DILocation(line: 1343, column: 1, scope: !3385)
!12205 = !DILocation(line: 1357, column: 45, scope: !3391)
!12206 = !DILocation(line: 1359, column: 5, scope: !3391)
!12207 = !DILocation(line: 1359, column: 15, scope: !3391)
!12208 = !DILocation(line: 1359, column: 24, scope: !3391)
!12209 = !DILocation(line: 1360, column: 5, scope: !3391)
!12210 = !DILocation(line: 1360, column: 23, scope: !3391)
!12211 = !DILocation(line: 1361, column: 5, scope: !3391)
!12212 = !DILocation(line: 1361, column: 11, scope: !3391)
!12213 = !DILocation(line: 1362, column: 5, scope: !3391)
!12214 = !DILocation(line: 1362, column: 11, scope: !3391)
!12215 = !DILocation(line: 1364, column: 9, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1364, column: 9)
!12217 = !DILocation(line: 1364, column: 15, scope: !12216)
!12218 = !DILocation(line: 1364, column: 19, scope: !12216)
!12219 = !DILocation(line: 1364, column: 9, scope: !3391)
!12220 = !DILocation(line: 1365, column: 62, scope: !12216)
!12221 = !DILocation(line: 1365, column: 9, scope: !12216)
!12222 = !DILocation(line: 1366, column: 38, scope: !3391)
!12223 = !DILocation(line: 1366, column: 44, scope: !3391)
!12224 = !DILocation(line: 1366, column: 15, scope: !3391)
!12225 = !DILocation(line: 1366, column: 13, scope: !3391)
!12226 = !DILocation(line: 1367, column: 9, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1367, column: 9)
!12228 = !DILocation(line: 1367, column: 17, scope: !12227)
!12229 = !DILocation(line: 1367, column: 9, scope: !3391)
!12230 = !DILocation(line: 1368, column: 62, scope: !12227)
!12231 = !DILocation(line: 1368, column: 9, scope: !12227)
!12232 = !DILocation(line: 1370, column: 14, scope: !3391)
!12233 = !DILocation(line: 1370, column: 12, scope: !3391)
!12234 = !DILocation(line: 1371, column: 9, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1371, column: 9)
!12236 = !DILocation(line: 1371, column: 16, scope: !12235)
!12237 = !DILocation(line: 1371, column: 9, scope: !3391)
!12238 = !DILocation(line: 1372, column: 9, scope: !12235)
!12239 = !DILocation(line: 1374, column: 48, scope: !3391)
!12240 = !DILocation(line: 1374, column: 28, scope: !3391)
!12241 = !DILocation(line: 1374, column: 17, scope: !3391)
!12242 = !DILocation(line: 1375, column: 9, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1375, column: 9)
!12244 = !DILocation(line: 1375, column: 21, scope: !12243)
!12245 = !DILocation(line: 1375, column: 9, scope: !3391)
!12246 = !DILocation(line: 1376, column: 55, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12243, file: !4, line: 1375, column: 36)
!12248 = !DILocation(line: 1377, column: 29, scope: !12247)
!12249 = !DILocation(line: 1377, column: 11, scope: !12247)
!12250 = !DILocation(line: 1377, column: 39, scope: !12247)
!12251 = !DILocation(line: 1377, column: 10, scope: !12247)
!12252 = !DILocation(line: 1377, column: 50, scope: !12247)
!12253 = !DILocation(line: 1378, column: 5, scope: !12247)
!12254 = !DILocation(line: 1379, column: 34, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12243, file: !4, line: 1378, column: 12)
!12256 = !DILocation(line: 1379, column: 13, scope: !12255)
!12257 = !DILocation(line: 1379, column: 11, scope: !12255)
!12258 = !DILocation(line: 1380, column: 13, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12255, file: !4, line: 1380, column: 13)
!12260 = !DILocation(line: 1380, column: 15, scope: !12259)
!12261 = !DILocation(line: 1380, column: 13, scope: !12255)
!12262 = !DILocation(line: 1381, column: 13, scope: !12259)
!12263 = !DILocation(line: 1382, column: 52, scope: !12255)
!12264 = !DILocation(line: 1382, column: 29, scope: !12255)
!12265 = !DILocation(line: 1382, column: 11, scope: !12255)
!12266 = !DILocation(line: 1382, column: 39, scope: !12255)
!12267 = !DILocation(line: 1382, column: 10, scope: !12255)
!12268 = !DILocation(line: 1382, column: 50, scope: !12255)
!12269 = !DILocation(line: 1384, column: 55, scope: !3391)
!12270 = !DILocation(line: 1384, column: 32, scope: !3391)
!12271 = !DILocation(line: 1384, column: 21, scope: !3391)
!12272 = !DILocation(line: 1385, column: 9, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1385, column: 9)
!12274 = !DILocation(line: 1385, column: 25, scope: !12273)
!12275 = !DILocation(line: 1385, column: 9, scope: !3391)
!12276 = !DILocation(line: 1386, column: 55, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12273, file: !4, line: 1385, column: 40)
!12278 = !DILocation(line: 1387, column: 29, scope: !12277)
!12279 = !DILocation(line: 1387, column: 11, scope: !12277)
!12280 = !DILocation(line: 1387, column: 39, scope: !12277)
!12281 = !DILocation(line: 1387, column: 10, scope: !12277)
!12282 = !DILocation(line: 1387, column: 50, scope: !12277)
!12283 = !DILocation(line: 1388, column: 5, scope: !12277)
!12284 = !DILocation(line: 1389, column: 34, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12273, file: !4, line: 1388, column: 12)
!12286 = !DILocation(line: 1389, column: 13, scope: !12285)
!12287 = !DILocation(line: 1389, column: 11, scope: !12285)
!12288 = !DILocation(line: 1390, column: 13, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12285, file: !4, line: 1390, column: 13)
!12290 = !DILocation(line: 1390, column: 15, scope: !12289)
!12291 = !DILocation(line: 1390, column: 13, scope: !12285)
!12292 = !DILocation(line: 1391, column: 13, scope: !12289)
!12293 = !DILocation(line: 1392, column: 52, scope: !12285)
!12294 = !DILocation(line: 1392, column: 29, scope: !12285)
!12295 = !DILocation(line: 1392, column: 11, scope: !12285)
!12296 = !DILocation(line: 1392, column: 39, scope: !12285)
!12297 = !DILocation(line: 1392, column: 10, scope: !12285)
!12298 = !DILocation(line: 1392, column: 50, scope: !12285)
!12299 = !DILocation(line: 1394, column: 45, scope: !3391)
!12300 = !DILocation(line: 1394, column: 25, scope: !3391)
!12301 = !DILocation(line: 1394, column: 9, scope: !3391)
!12302 = !DILocation(line: 1394, column: 7, scope: !3391)
!12303 = !DILocation(line: 1395, column: 9, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !3391, file: !4, line: 1395, column: 9)
!12305 = !DILocation(line: 1395, column: 11, scope: !12304)
!12306 = !DILocation(line: 1395, column: 9, scope: !3391)
!12307 = !DILocation(line: 1396, column: 9, scope: !12304)
!12308 = !DILocation(line: 1397, column: 48, scope: !3391)
!12309 = !DILocation(line: 1397, column: 25, scope: !3391)
!12310 = !DILocation(line: 1397, column: 7, scope: !3391)
!12311 = !DILocation(line: 1397, column: 35, scope: !3391)
!12312 = !DILocation(line: 1397, column: 6, scope: !3391)
!12313 = !DILocation(line: 1397, column: 46, scope: !3391)
!12314 = !DILocation(line: 1398, column: 12, scope: !3391)
!12315 = !DILocation(line: 1398, column: 5, scope: !3391)
!12316 = !DILocation(line: 1401, column: 5, scope: !3391)
!12317 = !DILocation(line: 1401, column: 10, scope: !12318)
!12318 = !DILexicalBlockFile(scope: !3400, file: !4, discriminator: 1)
!12319 = !DILocation(line: 1401, column: 20, scope: !3400)
!12320 = !DILocation(line: 1401, column: 50, scope: !3400)
!12321 = !DILocation(line: 1401, column: 67, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !3400, file: !4, line: 1401, column: 64)
!12323 = !DILocation(line: 1401, column: 84, scope: !12322)
!12324 = !DILocation(line: 1401, column: 64, scope: !12322)
!12325 = !DILocation(line: 1401, column: 94, scope: !12322)
!12326 = !DILocation(line: 1401, column: 64, scope: !3400)
!12327 = !DILocation(line: 1401, column: 64, scope: !12328)
!12328 = !DILexicalBlockFile(scope: !3400, file: !4, discriminator: 2)
!12329 = !DILocation(line: 1401, column: 125, scope: !12330)
!12330 = !DILexicalBlockFile(scope: !12322, file: !4, discriminator: 3)
!12331 = !DILocation(line: 1401, column: 143, scope: !12322)
!12332 = !DILocation(line: 1401, column: 153, scope: !12322)
!12333 = !DILocation(line: 1401, column: 178, scope: !12322)
!12334 = !DILocation(line: 1401, column: 109, scope: !12322)
!12335 = !DILocation(line: 1401, column: 197, scope: !12336)
!12336 = !DILexicalBlockFile(scope: !3391, file: !4, discriminator: 4)
!12337 = !DILocation(line: 1401, column: 197, scope: !3400)
!12338 = !DILocation(line: 1401, column: 197, scope: !12339)
!12339 = !DILexicalBlockFile(scope: !3400, file: !4, discriminator: 5)
!12340 = !DILocation(line: 1402, column: 5, scope: !3391)
!12341 = !DILocation(line: 1403, column: 1, scope: !3391)
!12342 = !DILocation(line: 1406, column: 59, scope: !3401)
!12343 = !DILocation(line: 1407, column: 5, scope: !3401)
!12344 = !DILocation(line: 1407, column: 26, scope: !3401)
!12345 = !DILocation(line: 1408, column: 5, scope: !3401)
!12346 = !DILocation(line: 1408, column: 18, scope: !3401)
!12347 = !DILocation(line: 1410, column: 36, scope: !3401)
!12348 = !DILocation(line: 1410, column: 42, scope: !3401)
!12349 = !DILocation(line: 1410, column: 5, scope: !3401)
!12350 = !DILocation(line: 1413, column: 9, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !3401, file: !4, line: 1413, column: 9)
!12352 = !DILocation(line: 1413, column: 13, scope: !12351)
!12353 = !DILocation(line: 1413, column: 9, scope: !3401)
!12354 = !DILocation(line: 1414, column: 62, scope: !12351)
!12355 = !DILocation(line: 1414, column: 9, scope: !12351)
!12356 = !DILocation(line: 1415, column: 49, scope: !3401)
!12357 = !DILocation(line: 1415, column: 54, scope: !3401)
!12358 = !DILocation(line: 1415, column: 12, scope: !3401)
!12359 = !DILocation(line: 1415, column: 5, scope: !3401)
!12360 = !DILocation(line: 1416, column: 1, scope: !3401)
!12361 = !DILocation(line: 1419, column: 49, scope: !3406)
!12362 = !DILocation(line: 1423, column: 5, scope: !3406)
!12363 = !DILocation(line: 1423, column: 24, scope: !3406)
!12364 = !DILocation(line: 1424, column: 5, scope: !3406)
!12365 = !DILocation(line: 1424, column: 17, scope: !3406)
!12366 = !DILocation(line: 1426, column: 9, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !3406, file: !4, line: 1426, column: 9)
!12368 = !DILocation(line: 1426, column: 15, scope: !12367)
!12369 = !DILocation(line: 1426, column: 19, scope: !12367)
!12370 = !DILocation(line: 1426, column: 9, scope: !3406)
!12371 = !DILocation(line: 1427, column: 62, scope: !12367)
!12372 = !DILocation(line: 1427, column: 9, scope: !12367)
!12373 = !DILocation(line: 1428, column: 47, scope: !3406)
!12374 = !DILocation(line: 1428, column: 53, scope: !3406)
!12375 = !DILocation(line: 1428, column: 19, scope: !3406)
!12376 = !DILocation(line: 1428, column: 17, scope: !3406)
!12377 = !DILocation(line: 1429, column: 9, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !3406, file: !4, line: 1429, column: 9)
!12379 = !DILocation(line: 1429, column: 21, scope: !12378)
!12380 = !DILocation(line: 1429, column: 35, scope: !12378)
!12381 = !DILocation(line: 1429, column: 38, scope: !12382)
!12382 = !DILexicalBlockFile(scope: !12378, file: !4, discriminator: 1)
!12383 = !DILocation(line: 1429, column: 51, scope: !12378)
!12384 = !{!12385, !3893, i64 0}
!12385 = !{!"comp_method_st", !3893, i64 0, !3861, i64 8, !3861, i64 16, !3861, i64 24, !3861, i64 32, !3861, i64 40, !3861, i64 48, !3861, i64 56}
!12386 = !DILocation(line: 1429, column: 56, scope: !12378)
!12387 = !DILocation(line: 1429, column: 9, scope: !3406)
!12388 = !DILocation(line: 1430, column: 62, scope: !12378)
!12389 = !DILocation(line: 1430, column: 9, scope: !12378)
!12390 = !DILocation(line: 1431, column: 29, scope: !3406)
!12391 = !DILocation(line: 1431, column: 42, scope: !3406)
!12392 = !DILocation(line: 1431, column: 18, scope: !3406)
!12393 = !DILocation(line: 1431, column: 16, scope: !3406)
!12394 = !DILocation(line: 1432, column: 9, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !3406, file: !4, line: 1432, column: 9)
!12396 = !DILocation(line: 1432, column: 20, scope: !12395)
!12397 = !DILocation(line: 1432, column: 9, scope: !3406)
!12398 = !DILocation(line: 1433, column: 62, scope: !12395)
!12399 = !DILocation(line: 1433, column: 9, scope: !12395)
!12400 = !DILocation(line: 1434, column: 38, scope: !3406)
!12401 = !DILocation(line: 1434, column: 12, scope: !3406)
!12402 = !DILocation(line: 1434, column: 5, scope: !3406)
!12403 = !DILocation(line: 1436, column: 1, scope: !3406)
!12404 = !DILocation(line: 1796, column: 49, scope: !3413)
!12405 = !DILocation(line: 1798, column: 5, scope: !3413)
!12406 = !DILocation(line: 1798, column: 9, scope: !3413)
!12407 = !DILocation(line: 1798, column: 14, scope: !3413)
!12408 = !DILocation(line: 1798, column: 23, scope: !3413)
!12409 = !DILocation(line: 1798, column: 34, scope: !3413)
!12410 = !DILocation(line: 1799, column: 5, scope: !3413)
!12411 = !DILocation(line: 1799, column: 9, scope: !3413)
!12412 = !DILocation(line: 1800, column: 5, scope: !3413)
!12413 = !DILocation(line: 1800, column: 25, scope: !3413)
!12414 = !DILocation(line: 1801, column: 52, scope: !3413)
!12415 = !DILocation(line: 1801, column: 58, scope: !3413)
!12416 = !DILocation(line: 1801, column: 32, scope: !3413)
!12417 = !DILocation(line: 1801, column: 9, scope: !3413)
!12418 = !DILocation(line: 1804, column: 22, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !3413, file: !4, line: 1804, column: 9)
!12420 = !DILocation(line: 1804, column: 11, scope: !12419)
!12421 = !DILocation(line: 1804, column: 28, scope: !12419)
!12422 = !DILocation(line: 1804, column: 50, scope: !12419)
!12423 = !DILocation(line: 1804, column: 54, scope: !12424)
!12424 = !DILexicalBlockFile(scope: !12419, file: !4, discriminator: 1)
!12425 = !DILocation(line: 1804, column: 60, scope: !12419)
!12426 = !DILocation(line: 1804, column: 68, scope: !12419)
!12427 = !DILocation(line: 1804, column: 9, scope: !3413)
!12428 = !DILocation(line: 1805, column: 9, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12419, file: !4, line: 1804, column: 74)
!12430 = !DILocation(line: 1807, column: 9, scope: !12429)
!12431 = !DILocation(line: 1809, column: 21, scope: !3413)
!12432 = !DILocation(line: 1809, column: 8, scope: !3413)
!12433 = !DILocation(line: 1809, column: 29, scope: !3413)
!12434 = !DILocation(line: 1809, column: 38, scope: !3413)
!12435 = !DILocation(line: 1812, column: 20, scope: !3413)
!12436 = !DILocation(line: 1812, column: 26, scope: !3413)
!12437 = !DILocation(line: 1812, column: 39, scope: !3413)
!12438 = !DILocation(line: 1812, column: 17, scope: !3413)
!12439 = !DILocation(line: 1813, column: 27, scope: !3413)
!12440 = !DILocation(line: 1813, column: 33, scope: !3413)
!12441 = !DILocation(line: 1813, column: 14, scope: !3413)
!12442 = !DILocation(line: 1813, column: 43, scope: !3413)
!12443 = !DILocation(line: 1813, column: 42, scope: !3413)
!12444 = !DILocation(line: 1813, column: 5, scope: !3413)
!12445 = !DILocation(line: 1814, column: 27, scope: !3413)
!12446 = !DILocation(line: 1814, column: 33, scope: !3413)
!12447 = !DILocation(line: 1814, column: 14, scope: !3413)
!12448 = !DILocation(line: 1814, column: 43, scope: !3413)
!12449 = !DILocation(line: 1814, column: 42, scope: !3413)
!12450 = !DILocation(line: 1814, column: 5, scope: !3413)
!12451 = !DILocation(line: 1816, column: 5, scope: !3413)
!12452 = !DILocation(line: 1816, column: 5, scope: !12453)
!12453 = !DILexicalBlockFile(scope: !12454, file: !4, discriminator: 2)
!12454 = !DILexicalBlockFile(scope: !3413, file: !4, discriminator: 1)
!12455 = !DILocation(line: 1817, column: 11, scope: !3423)
!12456 = !DILocation(line: 1817, column: 26, scope: !3423)
!12457 = !DILocation(line: 1817, column: 46, scope: !3423)
!12458 = !DILocation(line: 1817, column: 55, scope: !12459)
!12459 = !DILexicalBlockFile(scope: !12460, file: !4, discriminator: 1)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !4, line: 1817, column: 55)
!12461 = distinct !DILexicalBlock(scope: !3423, file: !4, line: 1817, column: 49)
!12462 = !DILocation(line: 1817, column: 71, scope: !12460)
!12463 = !DILocation(line: 1817, column: 55, scope: !12461)
!12464 = !DILocation(line: 1817, column: 87, scope: !12465)
!12465 = !DILexicalBlockFile(scope: !12466, file: !4, discriminator: 2)
!12466 = distinct !DILexicalBlock(scope: !12460, file: !4, line: 1817, column: 75)
!12467 = !DILocation(line: 1817, column: 85, scope: !12466)
!12468 = !DILocation(line: 1817, column: 108, scope: !12466)
!12469 = !DILocation(line: 1817, column: 110, scope: !12470)
!12470 = !DILexicalBlockFile(scope: !12471, file: !4, discriminator: 4)
!12471 = !DILexicalBlockFile(scope: !12461, file: !4, discriminator: 3)
!12472 = !DILocation(line: 1817, column: 110, scope: !12473)
!12473 = !DILexicalBlockFile(scope: !12461, file: !4, discriminator: 5)
!12474 = !DILocation(line: 1826, column: 13, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !3423, file: !4, line: 1826, column: 13)
!12476 = !DILocation(line: 1826, column: 19, scope: !12475)
!12477 = !DILocation(line: 1826, column: 13, scope: !3423)
!12478 = !DILocation(line: 1827, column: 32, scope: !12475)
!12479 = !DILocation(line: 1827, column: 38, scope: !12475)
!12480 = !DILocation(line: 1827, column: 13, scope: !12475)
!12481 = !DILocation(line: 1828, column: 28, scope: !3423)
!12482 = !DILocation(line: 1828, column: 34, scope: !3423)
!12483 = !DILocation(line: 1828, column: 15, scope: !3423)
!12484 = !DILocation(line: 1828, column: 13, scope: !3423)
!12485 = !DILocation(line: 1829, column: 9, scope: !3423)
!12486 = !DILocation(line: 1829, column: 18, scope: !12487)
!12487 = !DILexicalBlockFile(scope: !12488, file: !4, discriminator: 1)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !4, line: 1829, column: 18)
!12489 = distinct !DILexicalBlock(scope: !3423, file: !4, line: 1829, column: 12)
!12490 = !DILocation(line: 1829, column: 34, scope: !12488)
!12491 = !DILocation(line: 1829, column: 18, scope: !12489)
!12492 = !DILocation(line: 1829, column: 61, scope: !12493)
!12493 = !DILexicalBlockFile(scope: !12494, file: !4, discriminator: 2)
!12494 = distinct !DILexicalBlock(scope: !12488, file: !4, line: 1829, column: 38)
!12495 = !DILocation(line: 1829, column: 40, scope: !12494)
!12496 = !DILocation(line: 1829, column: 69, scope: !12494)
!12497 = !DILocation(line: 1829, column: 71, scope: !12498)
!12498 = !DILexicalBlockFile(scope: !12499, file: !4, discriminator: 4)
!12499 = !DILexicalBlockFile(scope: !12489, file: !4, discriminator: 3)
!12500 = !DILocation(line: 1829, column: 71, scope: !12501)
!12501 = !DILexicalBlockFile(scope: !12489, file: !4, discriminator: 5)
!12502 = !DILocation(line: 1829, column: 84, scope: !12503)
!12503 = !DILexicalBlockFile(scope: !3424, file: !4, discriminator: 6)
!12504 = !DILocation(line: 1831, column: 13, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !3424, file: !4, line: 1831, column: 13)
!12506 = !DILocation(line: 1831, column: 17, scope: !12505)
!12507 = !DILocation(line: 1831, column: 13, scope: !3424)
!12508 = !DILocation(line: 1832, column: 13, scope: !12505)
!12509 = !DILocation(line: 1833, column: 13, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !3424, file: !4, line: 1833, column: 13)
!12511 = !DILocation(line: 1833, column: 17, scope: !12510)
!12512 = !DILocation(line: 1833, column: 13, scope: !3424)
!12513 = !DILocation(line: 1837, column: 17, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !4, line: 1837, column: 17)
!12515 = distinct !DILexicalBlock(scope: !12510, file: !4, line: 1833, column: 23)
!12516 = !DILocation(line: 1837, column: 25, scope: !12514)
!12517 = !DILocation(line: 1837, column: 17, scope: !12515)
!12518 = !DILocation(line: 1838, column: 17, scope: !12514)
!12519 = !DILocation(line: 1840, column: 13, scope: !12515)
!12520 = !DILocation(line: 1840, column: 19, scope: !12515)
!12521 = !DILocation(line: 1840, column: 38, scope: !12515)
!12522 = !DILocation(line: 1841, column: 13, scope: !12515)
!12523 = !DILocation(line: 1845, column: 33, scope: !3424)
!12524 = !DILocation(line: 1845, column: 39, scope: !3424)
!12525 = !DILocation(line: 1845, column: 44, scope: !3424)
!12526 = !DILocation(line: 1845, column: 19, scope: !3424)
!12527 = !DILocation(line: 1845, column: 17, scope: !3424)
!12528 = !DILocation(line: 1846, column: 13, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !3424, file: !4, line: 1846, column: 13)
!12530 = !DILocation(line: 1846, column: 21, scope: !12529)
!12531 = !DILocation(line: 1846, column: 13, scope: !3424)
!12532 = !DILocation(line: 1847, column: 59, scope: !12529)
!12533 = !DILocation(line: 1847, column: 25, scope: !12529)
!12534 = !DILocation(line: 1847, column: 23, scope: !12529)
!12535 = !DILocation(line: 1847, column: 13, scope: !12529)
!12536 = !DILocation(line: 1848, column: 18, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12529, file: !4, line: 1848, column: 18)
!12538 = !DILocation(line: 1848, column: 26, scope: !12537)
!12539 = !DILocation(line: 1848, column: 18, scope: !12529)
!12540 = !DILocation(line: 1849, column: 59, scope: !12537)
!12541 = !DILocation(line: 1849, column: 25, scope: !12537)
!12542 = !DILocation(line: 1849, column: 23, scope: !12537)
!12543 = !DILocation(line: 1849, column: 13, scope: !12537)
!12544 = !DILocation(line: 1851, column: 13, scope: !12537)
!12545 = !DILocation(line: 1852, column: 13, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !3424, file: !4, line: 1852, column: 13)
!12547 = !DILocation(line: 1852, column: 23, scope: !12546)
!12548 = !DILocation(line: 1852, column: 13, scope: !3424)
!12549 = !DILocation(line: 1853, column: 17, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !4, line: 1853, column: 17)
!12551 = distinct !DILexicalBlock(scope: !12546, file: !4, line: 1852, column: 48)
!12552 = !DILocation(line: 1853, column: 25, scope: !12550)
!12553 = !DILocation(line: 1853, column: 17, scope: !12551)
!12554 = !DILocation(line: 1854, column: 48, scope: !12550)
!12555 = !DILocation(line: 1854, column: 17, scope: !12550)
!12556 = !DILocation(line: 1857, column: 48, scope: !12550)
!12557 = !DILocation(line: 1857, column: 17, scope: !12550)
!12558 = !DILocation(line: 1859, column: 13, scope: !12551)
!12559 = !DILocation(line: 1861, column: 18, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12546, file: !4, line: 1861, column: 18)
!12561 = !DILocation(line: 1861, column: 28, scope: !12560)
!12562 = !DILocation(line: 1861, column: 18, scope: !12546)
!12563 = !DILocation(line: 1862, column: 29, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12560, file: !4, line: 1861, column: 60)
!12565 = !DILocation(line: 1862, column: 13, scope: !12564)
!12566 = !DILocation(line: 1864, column: 13, scope: !12564)
!12567 = !DILocation(line: 1866, column: 18, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12560, file: !4, line: 1866, column: 18)
!12569 = !DILocation(line: 1866, column: 28, scope: !12568)
!12570 = !DILocation(line: 1866, column: 18, scope: !12560)
!12571 = !DILocation(line: 1868, column: 13, scope: !12568)
!12572 = !DILocation(line: 1871, column: 9, scope: !3428)
!12573 = !DILocation(line: 1871, column: 13, scope: !3428)
!12574 = !DILocation(line: 1871, column: 9, scope: !3413)
!12575 = !DILocation(line: 1872, column: 9, scope: !3427)
!12576 = !DILocation(line: 1872, column: 14, scope: !12577)
!12577 = !DILexicalBlockFile(scope: !3426, file: !4, discriminator: 1)
!12578 = !DILocation(line: 1872, column: 24, scope: !3426)
!12579 = !DILocation(line: 1872, column: 54, scope: !3426)
!12580 = !DILocation(line: 1872, column: 41, scope: !3426)
!12581 = !DILocation(line: 1872, column: 69, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !3426, file: !4, line: 1872, column: 66)
!12583 = !DILocation(line: 1872, column: 86, scope: !12582)
!12584 = !DILocation(line: 1872, column: 66, scope: !12582)
!12585 = !DILocation(line: 1872, column: 96, scope: !12582)
!12586 = !DILocation(line: 1872, column: 66, scope: !3426)
!12587 = !DILocation(line: 1872, column: 66, scope: !12588)
!12588 = !DILexicalBlockFile(scope: !3426, file: !4, discriminator: 2)
!12589 = !DILocation(line: 1872, column: 127, scope: !12590)
!12590 = !DILexicalBlockFile(scope: !12582, file: !4, discriminator: 3)
!12591 = !DILocation(line: 1872, column: 145, scope: !12582)
!12592 = !DILocation(line: 1872, column: 155, scope: !12582)
!12593 = !DILocation(line: 1872, column: 180, scope: !12582)
!12594 = !DILocation(line: 1872, column: 111, scope: !12582)
!12595 = !DILocation(line: 1872, column: 199, scope: !12596)
!12596 = !DILexicalBlockFile(scope: !3427, file: !4, discriminator: 4)
!12597 = !DILocation(line: 1872, column: 199, scope: !3426)
!12598 = !DILocation(line: 1872, column: 199, scope: !12599)
!12599 = !DILexicalBlockFile(scope: !3426, file: !4, discriminator: 5)
!12600 = !DILocation(line: 1873, column: 31, scope: !3427)
!12601 = !DILocation(line: 1873, column: 37, scope: !3427)
!12602 = !DILocation(line: 1873, column: 16, scope: !3427)
!12603 = !DILocation(line: 1873, column: 9, scope: !3427)
!12604 = !DILocation(line: 1877, column: 29, scope: !3428)
!12605 = !DILocation(line: 1877, column: 16, scope: !3428)
!12606 = !DILocation(line: 1877, column: 9, scope: !3428)
!12607 = !DILocation(line: 1880, column: 5, scope: !3413)
!12608 = !DILocation(line: 1880, column: 10, scope: !12609)
!12609 = !DILexicalBlockFile(scope: !3430, file: !4, discriminator: 1)
!12610 = !DILocation(line: 1880, column: 20, scope: !3430)
!12611 = !DILocation(line: 1880, column: 50, scope: !3430)
!12612 = !DILocation(line: 1880, column: 37, scope: !3430)
!12613 = !DILocation(line: 1880, column: 65, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !3430, file: !4, line: 1880, column: 62)
!12615 = !DILocation(line: 1880, column: 82, scope: !12614)
!12616 = !DILocation(line: 1880, column: 62, scope: !12614)
!12617 = !DILocation(line: 1880, column: 92, scope: !12614)
!12618 = !DILocation(line: 1880, column: 62, scope: !3430)
!12619 = !DILocation(line: 1880, column: 62, scope: !12620)
!12620 = !DILexicalBlockFile(scope: !3430, file: !4, discriminator: 2)
!12621 = !DILocation(line: 1880, column: 123, scope: !12622)
!12622 = !DILexicalBlockFile(scope: !12614, file: !4, discriminator: 3)
!12623 = !DILocation(line: 1880, column: 141, scope: !12614)
!12624 = !DILocation(line: 1880, column: 151, scope: !12614)
!12625 = !DILocation(line: 1880, column: 176, scope: !12614)
!12626 = !DILocation(line: 1880, column: 107, scope: !12614)
!12627 = !DILocation(line: 1880, column: 195, scope: !12628)
!12628 = !DILexicalBlockFile(scope: !3413, file: !4, discriminator: 4)
!12629 = !DILocation(line: 1880, column: 195, scope: !3430)
!12630 = !DILocation(line: 1880, column: 195, scope: !12631)
!12631 = !DILexicalBlockFile(scope: !3430, file: !4, discriminator: 5)
!12632 = !DILocation(line: 1881, column: 5, scope: !3413)
!12633 = !DILocation(line: 1882, column: 1, scope: !3413)
!12634 = !DILocation(line: 1892, column: 34, scope: !3431)
!12635 = !DILocation(line: 1894, column: 5, scope: !3431)
!12636 = !DILocation(line: 1894, column: 15, scope: !3431)
!12637 = !DILocation(line: 1895, column: 5, scope: !3431)
!12638 = !DILocation(line: 1895, column: 10, scope: !3431)
!12639 = !DILocation(line: 1896, column: 5, scope: !3431)
!12640 = !DILocation(line: 1896, column: 12, scope: !3431)
!12641 = !DILocation(line: 1898, column: 19, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !3431, file: !4, line: 1898, column: 9)
!12643 = !DILocation(line: 1898, column: 25, scope: !12642)
!12644 = !DILocation(line: 1898, column: 9, scope: !12642)
!12645 = !DILocation(line: 1898, column: 49, scope: !12642)
!12646 = !DILocation(line: 1898, column: 55, scope: !12642)
!12647 = !DILocation(line: 1898, column: 48, scope: !12642)
!12648 = !DILocation(line: 1898, column: 46, scope: !12642)
!12649 = !DILocation(line: 1898, column: 9, scope: !3431)
!12650 = !DILocation(line: 1900, column: 32, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12642, file: !4, line: 1898, column: 68)
!12652 = !DILocation(line: 1900, column: 38, scope: !12651)
!12653 = !DILocation(line: 1900, column: 43, scope: !12651)
!12654 = !DILocation(line: 1900, column: 15, scope: !12651)
!12655 = !DILocation(line: 1900, column: 13, scope: !12651)
!12656 = !DILocation(line: 1901, column: 5, scope: !12651)
!12657 = !DILocation(line: 1904, column: 37, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12642, file: !4, line: 1902, column: 10)
!12659 = !DILocation(line: 1904, column: 43, scope: !12658)
!12660 = !DILocation(line: 1904, column: 48, scope: !12658)
!12661 = !DILocation(line: 1904, column: 15, scope: !12658)
!12662 = !DILocation(line: 1904, column: 13, scope: !12658)
!12663 = !DILocation(line: 1908, column: 9, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !3431, file: !4, line: 1908, column: 9)
!12665 = !DILocation(line: 1908, column: 13, scope: !12664)
!12666 = !DILocation(line: 1908, column: 9, scope: !3431)
!12667 = !DILocation(line: 1909, column: 62, scope: !12664)
!12668 = !DILocation(line: 1909, column: 9, scope: !12664)
!12669 = !DILocation(line: 1911, column: 40, scope: !3431)
!12670 = !DILocation(line: 1911, column: 45, scope: !3431)
!12671 = !DILocation(line: 1911, column: 14, scope: !3431)
!12672 = !DILocation(line: 1911, column: 12, scope: !3431)
!12673 = !DILocation(line: 1913, column: 12, scope: !3431)
!12674 = !DILocation(line: 1913, column: 5, scope: !3431)
!12675 = !DILocation(line: 1914, column: 1, scope: !3431)
!12676 = !DILocation(line: 1492, column: 55, scope: !3274)
!12677 = !DILocation(line: 1492, column: 62, scope: !3274)
!12678 = !DILocation(line: 1494, column: 5, scope: !3274)
!12679 = !DILocation(line: 1494, column: 12, scope: !3274)
!12680 = !DILocation(line: 1495, column: 5, scope: !3274)
!12681 = !DILocation(line: 1495, column: 20, scope: !3274)
!12682 = !DILocation(line: 1496, column: 5, scope: !3274)
!12683 = !DILocation(line: 1496, column: 9, scope: !3274)
!12684 = !DILocation(line: 1499, column: 9, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !3274, file: !4, line: 1499, column: 9)
!12686 = !DILocation(line: 1499, column: 12, scope: !12685)
!12687 = !DILocation(line: 1499, column: 25, scope: !12685)
!12688 = !DILocation(line: 1499, column: 9, scope: !3274)
!12689 = !DILocation(line: 1500, column: 9, scope: !12685)
!12690 = !DILocation(line: 1501, column: 14, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12685, file: !4, line: 1501, column: 14)
!12692 = !DILocation(line: 1501, column: 17, scope: !12691)
!12693 = !DILocation(line: 1501, column: 30, scope: !12691)
!12694 = !DILocation(line: 1501, column: 14, scope: !12685)
!12695 = !DILocation(line: 1502, column: 9, scope: !12691)
!12696 = !DILocation(line: 1505, column: 9, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !3274, file: !4, line: 1505, column: 9)
!12698 = !DILocation(line: 1505, column: 12, scope: !12697)
!12699 = !DILocation(line: 1505, column: 20, scope: !12697)
!12700 = !DILocation(line: 1505, column: 9, scope: !3274)
!12701 = !DILocation(line: 1506, column: 9, scope: !12697)
!12702 = !DILocation(line: 1512, column: 9, scope: !3291)
!12703 = !DILocation(line: 1512, column: 23, scope: !3291)
!12704 = !DILocation(line: 1513, column: 9, scope: !3291)
!12705 = !DILocation(line: 1513, column: 13, scope: !3291)
!12706 = !DILocation(line: 1515, column: 21, scope: !3291)
!12707 = !DILocation(line: 1515, column: 24, scope: !3291)
!12708 = !DILocation(line: 1515, column: 16, scope: !3291)
!12709 = !DILocation(line: 1515, column: 19, scope: !3291)
!12710 = !{!12711, !3893, i64 0}
!12711 = !{!"pollfd", !3893, i64 0, !12712, i64 4, !12712, i64 6}
!12712 = !{!"short", !3862, i64 0}
!12713 = !DILocation(line: 1516, column: 25, scope: !3291)
!12714 = !DILocation(line: 1516, column: 16, scope: !3291)
!12715 = !DILocation(line: 1516, column: 23, scope: !3291)
!12716 = !{!12711, !12712, i64 4}
!12717 = !DILocation(line: 1519, column: 25, scope: !3291)
!12718 = !DILocation(line: 1519, column: 28, scope: !3291)
!12719 = !DILocation(line: 1519, column: 41, scope: !3291)
!12720 = !DILocation(line: 1519, column: 48, scope: !3291)
!12721 = !DILocation(line: 1519, column: 19, scope: !3291)
!12722 = !DILocation(line: 1519, column: 17, scope: !3291)
!12723 = !DILocation(line: 1520, column: 11, scope: !3301)
!12724 = !DILocation(line: 1520, column: 26, scope: !3301)
!12725 = !DILocation(line: 1520, column: 46, scope: !3301)
!12726 = !DILocation(line: 1520, column: 55, scope: !12727)
!12727 = !DILexicalBlockFile(scope: !12728, file: !4, discriminator: 1)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !4, line: 1520, column: 55)
!12729 = distinct !DILexicalBlock(scope: !3301, file: !4, line: 1520, column: 49)
!12730 = !DILocation(line: 1520, column: 71, scope: !12728)
!12731 = !DILocation(line: 1520, column: 55, scope: !12729)
!12732 = !DILocation(line: 1520, column: 87, scope: !12733)
!12733 = !DILexicalBlockFile(scope: !12734, file: !4, discriminator: 2)
!12734 = distinct !DILexicalBlock(scope: !12728, file: !4, line: 1520, column: 75)
!12735 = !DILocation(line: 1520, column: 85, scope: !12734)
!12736 = !DILocation(line: 1520, column: 108, scope: !12734)
!12737 = !DILocation(line: 1520, column: 110, scope: !12738)
!12738 = !DILexicalBlockFile(scope: !12739, file: !4, discriminator: 4)
!12739 = !DILexicalBlockFile(scope: !12729, file: !4, discriminator: 3)
!12740 = !DILocation(line: 1520, column: 110, scope: !12741)
!12741 = !DILexicalBlockFile(scope: !12729, file: !4, discriminator: 5)
!12742 = !DILocation(line: 1521, column: 31, scope: !3301)
!12743 = !DILocation(line: 1521, column: 14, scope: !3301)
!12744 = !DILocation(line: 1521, column: 12, scope: !3301)
!12745 = !DILocation(line: 1522, column: 9, scope: !3301)
!12746 = !DILocation(line: 1522, column: 18, scope: !12747)
!12747 = !DILexicalBlockFile(scope: !12748, file: !4, discriminator: 1)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !4, line: 1522, column: 18)
!12749 = distinct !DILexicalBlock(scope: !3301, file: !4, line: 1522, column: 12)
!12750 = !DILocation(line: 1522, column: 34, scope: !12748)
!12751 = !DILocation(line: 1522, column: 18, scope: !12749)
!12752 = !DILocation(line: 1522, column: 61, scope: !12753)
!12753 = !DILexicalBlockFile(scope: !12754, file: !4, discriminator: 2)
!12754 = distinct !DILexicalBlock(scope: !12748, file: !4, line: 1522, column: 38)
!12755 = !DILocation(line: 1522, column: 40, scope: !12754)
!12756 = !DILocation(line: 1522, column: 69, scope: !12754)
!12757 = !DILocation(line: 1522, column: 71, scope: !12758)
!12758 = !DILexicalBlockFile(scope: !12759, file: !4, discriminator: 4)
!12759 = !DILexicalBlockFile(scope: !12749, file: !4, discriminator: 3)
!12760 = !DILocation(line: 1522, column: 71, scope: !12761)
!12761 = !DILexicalBlockFile(scope: !12749, file: !4, discriminator: 5)
!12762 = !DILocation(line: 1522, column: 84, scope: !12763)
!12763 = !DILexicalBlockFile(scope: !3291, file: !4, discriminator: 6)
!12764 = !DILocation(line: 1525, column: 5, scope: !3274)
!12765 = !DILocation(line: 1553, column: 12, scope: !3274)
!12766 = !DILocation(line: 1553, column: 15, scope: !3274)
!12767 = !DILocation(line: 1553, column: 5, scope: !3274)
!12768 = !DILocation(line: 1554, column: 1, scope: !3274)
!12769 = !DILocation(line: 379, column: 29, scope: !3302)
!12770 = !DILocation(line: 379, column: 38, scope: !3302)
!12771 = !DILocation(line: 379, column: 49, scope: !3302)
!12772 = !DILocation(line: 379, column: 63, scope: !3302)
!12773 = !DILocation(line: 381, column: 5, scope: !3302)
!12774 = !DILocation(line: 381, column: 15, scope: !3302)
!12775 = !DILocation(line: 381, column: 22, scope: !3302)
!12776 = !DILocation(line: 382, column: 5, scope: !3302)
!12777 = !DILocation(line: 382, column: 11, scope: !3302)
!12778 = !DILocation(line: 383, column: 5, scope: !3302)
!12779 = !DILocation(line: 383, column: 9, scope: !3302)
!12780 = !DILocation(line: 384, column: 5, scope: !3302)
!12781 = !DILocation(line: 384, column: 23, scope: !3302)
!12782 = !DILocation(line: 385, column: 5, scope: !3302)
!12783 = !DILocation(line: 385, column: 19, scope: !3302)
!12784 = !DILocation(line: 388, column: 9, scope: !3302)
!12785 = !DILocation(line: 388, column: 7, scope: !3302)
!12786 = !DILocation(line: 390, column: 9, scope: !3321)
!12787 = !DILocation(line: 390, column: 14, scope: !3321)
!12788 = !DILocation(line: 390, column: 18, scope: !3321)
!12789 = !DILocation(line: 390, column: 9, scope: !3302)
!12790 = !DILocation(line: 391, column: 29, scope: !3320)
!12791 = !DILocation(line: 391, column: 34, scope: !3320)
!12792 = !DILocation(line: 391, column: 39, scope: !3320)
!12793 = !DILocation(line: 391, column: 15, scope: !3320)
!12794 = !DILocation(line: 391, column: 13, scope: !3320)
!12795 = !DILocation(line: 393, column: 17, scope: !3320)
!12796 = !DILocation(line: 395, column: 20, scope: !3319)
!12797 = !DILocation(line: 396, column: 20, scope: !3319)
!12798 = !DILocation(line: 396, column: 18, scope: !3319)
!12799 = !DILocation(line: 397, column: 15, scope: !3319)
!12800 = !DILocation(line: 398, column: 13, scope: !3319)
!12801 = !DILocation(line: 400, column: 20, scope: !3319)
!12802 = !DILocation(line: 401, column: 20, scope: !3319)
!12803 = !DILocation(line: 401, column: 18, scope: !3319)
!12804 = !DILocation(line: 402, column: 15, scope: !3319)
!12805 = !DILocation(line: 403, column: 13, scope: !3319)
!12806 = !DILocation(line: 405, column: 15, scope: !3319)
!12807 = !DILocation(line: 406, column: 20, scope: !3319)
!12808 = !DILocation(line: 406, column: 18, scope: !3319)
!12809 = !DILocation(line: 407, column: 20, scope: !3319)
!12810 = !DILocation(line: 408, column: 13, scope: !3319)
!12811 = !DILocation(line: 410, column: 15, scope: !3319)
!12812 = !DILocation(line: 411, column: 20, scope: !3319)
!12813 = !DILocation(line: 412, column: 13, scope: !3319)
!12814 = !DILocation(line: 414, column: 15, scope: !3319)
!12815 = !DILocation(line: 415, column: 20, scope: !3319)
!12816 = !DILocation(line: 416, column: 13, scope: !3319)
!12817 = !DILocation(line: 419, column: 17, scope: !3317)
!12818 = !DILocation(line: 419, column: 19, scope: !3317)
!12819 = !DILocation(line: 419, column: 17, scope: !3318)
!12820 = !DILocation(line: 420, column: 17, scope: !3316)
!12821 = !DILocation(line: 420, column: 37, scope: !3316)
!12822 = !DILocation(line: 421, column: 64, scope: !3316)
!12823 = !DILocation(line: 421, column: 69, scope: !3316)
!12824 = !DILocation(line: 421, column: 44, scope: !3316)
!12825 = !DILocation(line: 421, column: 21, scope: !3316)
!12826 = !DILocation(line: 422, column: 21, scope: !3326)
!12827 = !DILocation(line: 422, column: 25, scope: !3326)
!12828 = !DILocation(line: 422, column: 30, scope: !3326)
!12829 = !DILocation(line: 422, column: 47, scope: !12830)
!12830 = !DILexicalBlockFile(scope: !3326, file: !4, discriminator: 1)
!12831 = !DILocation(line: 422, column: 35, scope: !3326)
!12832 = !DILocation(line: 422, column: 50, scope: !3326)
!12833 = !DILocation(line: 422, column: 21, scope: !3316)
!12834 = !DILocation(line: 423, column: 23, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !3326, file: !4, line: 422, column: 73)
!12836 = !DILocation(line: 424, column: 28, scope: !12835)
!12837 = !DILocation(line: 424, column: 26, scope: !12835)
!12838 = !DILocation(line: 425, column: 28, scope: !12835)
!12839 = !DILocation(line: 426, column: 17, scope: !12835)
!12840 = !DILocation(line: 426, column: 28, scope: !3325)
!12841 = !DILocation(line: 426, column: 32, scope: !3325)
!12842 = !DILocation(line: 426, column: 28, scope: !3326)
!12843 = !DILocation(line: 428, column: 37, scope: !3324)
!12844 = !DILocation(line: 428, column: 24, scope: !3324)
!12845 = !DILocation(line: 428, column: 42, scope: !3324)
!12846 = !DILocation(line: 428, column: 51, scope: !3324)
!12847 = !DILocation(line: 429, column: 21, scope: !3324)
!12848 = !DILocation(line: 430, column: 21, scope: !3324)
!12849 = !DILocation(line: 430, column: 24, scope: !3324)
!12850 = !{!7032, !3861, i64 32}
!12851 = !DILocation(line: 431, column: 21, scope: !3324)
!12852 = !DILocation(line: 431, column: 26, scope: !12853)
!12853 = !DILexicalBlockFile(scope: !3323, file: !4, discriminator: 1)
!12854 = !DILocation(line: 431, column: 36, scope: !3323)
!12855 = !DILocation(line: 431, column: 66, scope: !3323)
!12856 = !DILocation(line: 431, column: 53, scope: !3323)
!12857 = !DILocation(line: 431, column: 78, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !3323, file: !4, line: 431, column: 75)
!12859 = !DILocation(line: 431, column: 95, scope: !12858)
!12860 = !DILocation(line: 431, column: 75, scope: !12858)
!12861 = !DILocation(line: 431, column: 105, scope: !12858)
!12862 = !DILocation(line: 431, column: 75, scope: !3323)
!12863 = !DILocation(line: 431, column: 75, scope: !12864)
!12864 = !DILexicalBlockFile(scope: !3323, file: !4, discriminator: 2)
!12865 = !DILocation(line: 431, column: 136, scope: !12866)
!12866 = !DILexicalBlockFile(scope: !12858, file: !4, discriminator: 3)
!12867 = !DILocation(line: 431, column: 154, scope: !12858)
!12868 = !DILocation(line: 431, column: 164, scope: !12858)
!12869 = !DILocation(line: 431, column: 189, scope: !12858)
!12870 = !DILocation(line: 431, column: 120, scope: !12858)
!12871 = !DILocation(line: 431, column: 208, scope: !12872)
!12872 = !DILexicalBlockFile(scope: !3324, file: !4, discriminator: 4)
!12873 = !DILocation(line: 431, column: 208, scope: !3323)
!12874 = !DILocation(line: 431, column: 208, scope: !12875)
!12875 = !DILexicalBlockFile(scope: !3323, file: !4, discriminator: 5)
!12876 = !DILocation(line: 432, column: 21, scope: !3324)
!12877 = !DILocation(line: 434, column: 23, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !3325, file: !4, line: 433, column: 24)
!12879 = !DILocation(line: 435, column: 28, scope: !12878)
!12880 = !DILocation(line: 435, column: 26, scope: !12878)
!12881 = !DILocation(line: 436, column: 28, scope: !12878)
!12882 = !DILocation(line: 438, column: 13, scope: !3317)
!12883 = !DILocation(line: 438, column: 13, scope: !12884)
!12884 = !DILexicalBlockFile(scope: !3317, file: !4, discriminator: 1)
!12885 = !DILocation(line: 438, column: 13, scope: !3316)
!12886 = !DILocation(line: 439, column: 19, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !3317, file: !4, line: 438, column: 20)
!12888 = !DILocation(line: 441, column: 13, scope: !3318)
!12889 = !DILocation(line: 445, column: 15, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !3319, file: !4, line: 444, column: 9)
!12891 = !DILocation(line: 446, column: 17, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12890, file: !4, line: 446, column: 17)
!12893 = !DILocation(line: 446, column: 19, scope: !12892)
!12894 = !DILocation(line: 446, column: 17, scope: !12890)
!12895 = !DILocation(line: 448, column: 24, scope: !12892)
!12896 = !DILocation(line: 448, column: 17, scope: !12892)
!12897 = !DILocation(line: 449, column: 13, scope: !12890)
!12898 = !DILocation(line: 452, column: 15, scope: !3319)
!12899 = !DILocation(line: 453, column: 20, scope: !3319)
!12900 = !DILocation(line: 454, column: 9, scope: !3319)
!12901 = !DILocation(line: 455, column: 5, scope: !3320)
!12902 = !DILocation(line: 456, column: 27, scope: !3302)
!12903 = !DILocation(line: 456, column: 33, scope: !3302)
!12904 = !DILocation(line: 456, column: 36, scope: !3302)
!12905 = !DILocation(line: 456, column: 44, scope: !3302)
!12906 = !DILocation(line: 456, column: 52, scope: !3302)
!12907 = !DILocation(line: 456, column: 5, scope: !3302)
!12908 = !DILocation(line: 457, column: 5, scope: !3302)
!12909 = !DILocation(line: 458, column: 5, scope: !3302)
!12910 = !DILocation(line: 459, column: 1, scope: !3302)
!12911 = !DILocation(line: 1438, column: 53, scope: !3438)
!12912 = !DILocation(line: 1438, column: 65, scope: !3438)
!12913 = !DILocation(line: 1439, column: 21, scope: !3438)
!12914 = !DILocation(line: 1439, column: 27, scope: !3438)
!12915 = !DILocation(line: 1439, column: 8, scope: !3438)
!12916 = !DILocation(line: 1439, column: 34, scope: !3438)
!12917 = !DILocation(line: 1439, column: 43, scope: !3438)
!12918 = !DILocation(line: 1440, column: 12, scope: !3438)
!12919 = !DILocation(line: 1440, column: 18, scope: !3438)
!12920 = !DILocation(line: 1440, column: 5, scope: !3438)
!12921 = !DILocation(line: 1443, column: 43, scope: !3444)
!12922 = !DILocation(line: 1443, column: 59, scope: !3444)
!12923 = !DILocation(line: 1444, column: 42, scope: !3444)
!12924 = !DILocation(line: 1446, column: 24, scope: !3454)
!12925 = !DILocation(line: 1446, column: 33, scope: !3454)
!12926 = !DILocation(line: 1446, column: 42, scope: !3454)
!12927 = !DILocation(line: 1446, column: 66, scope: !3454)
!12928 = !DILocation(line: 1446, column: 100, scope: !12929)
!12929 = !DILexicalBlockFile(scope: !3454, file: !4, discriminator: 1)
!12930 = !DILocation(line: 1446, column: 109, scope: !3454)
!12931 = !DILocation(line: 1446, column: 69, scope: !3454)
!12932 = !DILocation(line: 1446, column: 9, scope: !3444)
!12933 = !DILocation(line: 1452, column: 25, scope: !3453)
!12934 = !DILocation(line: 1452, column: 34, scope: !3453)
!12935 = !DILocation(line: 1452, column: 43, scope: !3453)
!12936 = !DILocation(line: 1453, column: 9, scope: !3453)
!12937 = !DILocation(line: 1453, column: 14, scope: !12938)
!12938 = !DILexicalBlockFile(scope: !3452, file: !4, discriminator: 1)
!12939 = !DILocation(line: 1453, column: 24, scope: !3452)
!12940 = !DILocation(line: 1453, column: 54, scope: !3452)
!12941 = !DILocation(line: 1453, column: 60, scope: !3452)
!12942 = !DILocation(line: 1453, column: 41, scope: !3452)
!12943 = !DILocation(line: 1453, column: 74, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !3452, file: !4, line: 1453, column: 71)
!12945 = !DILocation(line: 1453, column: 91, scope: !12944)
!12946 = !DILocation(line: 1453, column: 71, scope: !12944)
!12947 = !DILocation(line: 1453, column: 101, scope: !12944)
!12948 = !DILocation(line: 1453, column: 71, scope: !3452)
!12949 = !DILocation(line: 1453, column: 71, scope: !12950)
!12950 = !DILexicalBlockFile(scope: !3452, file: !4, discriminator: 2)
!12951 = !DILocation(line: 1453, column: 132, scope: !12952)
!12952 = !DILexicalBlockFile(scope: !12944, file: !4, discriminator: 3)
!12953 = !DILocation(line: 1453, column: 150, scope: !12944)
!12954 = !DILocation(line: 1453, column: 160, scope: !12944)
!12955 = !DILocation(line: 1453, column: 185, scope: !12944)
!12956 = !DILocation(line: 1453, column: 116, scope: !12944)
!12957 = !DILocation(line: 1453, column: 204, scope: !12958)
!12958 = !DILexicalBlockFile(scope: !3453, file: !4, discriminator: 4)
!12959 = !DILocation(line: 1453, column: 204, scope: !3452)
!12960 = !DILocation(line: 1454, column: 38, scope: !3453)
!12961 = !DILocation(line: 1454, column: 21, scope: !3453)
!12962 = !DILocation(line: 1454, column: 9, scope: !3453)
!12963 = !DILocation(line: 1454, column: 15, scope: !3453)
!12964 = !DILocation(line: 1454, column: 19, scope: !3453)
!12965 = !DILocation(line: 1455, column: 25, scope: !3453)
!12966 = !DILocation(line: 1455, column: 31, scope: !3453)
!12967 = !DILocation(line: 1455, column: 36, scope: !3453)
!12968 = !DILocation(line: 1455, column: 42, scope: !3453)
!12969 = !DILocation(line: 1455, column: 47, scope: !3453)
!12970 = !DILocation(line: 1455, column: 9, scope: !3453)
!12971 = !DILocation(line: 1457, column: 5, scope: !3453)
!12972 = !DILocation(line: 1458, column: 25, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !3454, file: !4, line: 1457, column: 12)
!12974 = !DILocation(line: 1458, column: 9, scope: !12973)
!12975 = !DILocation(line: 1459, column: 9, scope: !12973)
!12976 = !DILocation(line: 1462, column: 5, scope: !3444)
!12977 = !DILocation(line: 1463, column: 1, scope: !3444)
!12978 = !DILocation(line: 1276, column: 42, scope: !3455)
!12979 = !DILocation(line: 1276, column: 57, scope: !3455)
!12980 = !DILocation(line: 1278, column: 5, scope: !3455)
!12981 = !DILocation(line: 1278, column: 15, scope: !3455)
!12982 = !DILocation(line: 1279, column: 5, scope: !3455)
!12983 = !DILocation(line: 1279, column: 15, scope: !3455)
!12984 = !DILocation(line: 1280, column: 5, scope: !3455)
!12985 = !DILocation(line: 1280, column: 11, scope: !3455)
!12986 = !DILocation(line: 1281, column: 5, scope: !3455)
!12987 = !DILocation(line: 1281, column: 10, scope: !3455)
!12988 = !DILocation(line: 1283, column: 27, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !3455, file: !4, line: 1283, column: 9)
!12990 = !DILocation(line: 1283, column: 10, scope: !12989)
!12991 = !DILocation(line: 1283, column: 9, scope: !3455)
!12992 = !DILocation(line: 1285, column: 9, scope: !12989)
!12993 = !DILocation(line: 1287, column: 23, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !3455, file: !4, line: 1287, column: 9)
!12995 = !DILocation(line: 1287, column: 15, scope: !12994)
!12996 = !DILocation(line: 1287, column: 14, scope: !12994)
!12997 = !DILocation(line: 1287, column: 38, scope: !12994)
!12998 = !DILocation(line: 1287, column: 9, scope: !3455)
!12999 = !DILocation(line: 1288, column: 25, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12994, file: !4, line: 1287, column: 53)
!13001 = !DILocation(line: 1288, column: 9, scope: !13000)
!13002 = !DILocation(line: 1290, column: 9, scope: !13000)
!13003 = !DILocation(line: 1293, column: 18, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !3455, file: !4, line: 1293, column: 9)
!13005 = !DILocation(line: 1293, column: 63, scope: !13004)
!13006 = !DILocation(line: 1293, column: 46, scope: !13004)
!13007 = !DILocation(line: 1293, column: 9, scope: !13004)
!13008 = !DILocation(line: 1293, column: 74, scope: !13004)
!13009 = !DILocation(line: 1293, column: 9, scope: !3455)
!13010 = !DILocation(line: 1294, column: 25, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !13004, file: !4, line: 1293, column: 80)
!13012 = !DILocation(line: 1294, column: 9, scope: !13011)
!13013 = !DILocation(line: 1296, column: 9, scope: !13011)
!13014 = !DILocation(line: 1299, column: 31, scope: !3455)
!13015 = !DILocation(line: 1299, column: 9, scope: !3455)
!13016 = !DILocation(line: 1299, column: 7, scope: !3455)
!13017 = !DILocation(line: 1300, column: 9, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !3455, file: !4, line: 1300, column: 9)
!13019 = !DILocation(line: 1300, column: 11, scope: !13018)
!13020 = !DILocation(line: 1300, column: 9, scope: !3455)
!13021 = !DILocation(line: 1301, column: 25, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13018, file: !4, line: 1300, column: 26)
!13023 = !DILocation(line: 1301, column: 9, scope: !13022)
!13024 = !DILocation(line: 1303, column: 9, scope: !13022)
!13025 = !DILocation(line: 1306, column: 34, scope: !3455)
!13026 = !DILocation(line: 1306, column: 14, scope: !3455)
!13027 = !DILocation(line: 1306, column: 12, scope: !3455)
!13028 = !DILocation(line: 1307, column: 15, scope: !3455)
!13029 = !DILocation(line: 1307, column: 5, scope: !3455)
!13030 = !DILocation(line: 1310, column: 5, scope: !3455)
!13031 = !DILocation(line: 1310, column: 10, scope: !13032)
!13032 = !DILexicalBlockFile(scope: !3464, file: !4, discriminator: 1)
!13033 = !DILocation(line: 1310, column: 20, scope: !3464)
!13034 = !DILocation(line: 1310, column: 50, scope: !3464)
!13035 = !DILocation(line: 1310, column: 69, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !3464, file: !4, line: 1310, column: 66)
!13037 = !DILocation(line: 1310, column: 86, scope: !13036)
!13038 = !DILocation(line: 1310, column: 66, scope: !13036)
!13039 = !DILocation(line: 1310, column: 96, scope: !13036)
!13040 = !DILocation(line: 1310, column: 66, scope: !3464)
!13041 = !DILocation(line: 1310, column: 66, scope: !13042)
!13042 = !DILexicalBlockFile(scope: !3464, file: !4, discriminator: 2)
!13043 = !DILocation(line: 1310, column: 127, scope: !13044)
!13044 = !DILexicalBlockFile(scope: !13036, file: !4, discriminator: 3)
!13045 = !DILocation(line: 1310, column: 145, scope: !13036)
!13046 = !DILocation(line: 1310, column: 155, scope: !13036)
!13047 = !DILocation(line: 1310, column: 180, scope: !13036)
!13048 = !DILocation(line: 1310, column: 111, scope: !13036)
!13049 = !DILocation(line: 1310, column: 199, scope: !13050)
!13050 = !DILexicalBlockFile(scope: !3455, file: !4, discriminator: 4)
!13051 = !DILocation(line: 1310, column: 199, scope: !3464)
!13052 = !DILocation(line: 1310, column: 199, scope: !13053)
!13053 = !DILexicalBlockFile(scope: !3464, file: !4, discriminator: 5)
!13054 = !DILocation(line: 1311, column: 9, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !3455, file: !4, line: 1311, column: 9)
!13056 = !DILocation(line: 1311, column: 14, scope: !13055)
!13057 = !DILocation(line: 1311, column: 9, scope: !3455)
!13058 = !DILocation(line: 1311, column: 38, scope: !13059)
!13059 = !DILexicalBlockFile(scope: !13055, file: !4, discriminator: 1)
!13060 = !DILocation(line: 1311, column: 29, scope: !13055)
!13061 = !DILocation(line: 1312, column: 12, scope: !3455)
!13062 = !DILocation(line: 1312, column: 5, scope: !3455)
!13063 = !DILocation(line: 1313, column: 1, scope: !3455)
!13064 = !DILocation(line: 3235, column: 26, scope: !3465)
!13065 = !DILocation(line: 3235, column: 42, scope: !3465)
!13066 = !DILocation(line: 3237, column: 5, scope: !3465)
!13067 = !DILocation(line: 3237, column: 11, scope: !3465)
!13068 = !DILocation(line: 3238, column: 5, scope: !3465)
!13069 = !DILocation(line: 3238, column: 9, scope: !3465)
!13070 = !DILocation(line: 3239, column: 5, scope: !3465)
!13071 = !DILocation(line: 3239, column: 12, scope: !3465)
!13072 = !DILocation(line: 3241, column: 27, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !3465, file: !4, line: 3241, column: 9)
!13074 = !DILocation(line: 3241, column: 10, scope: !13073)
!13075 = !DILocation(line: 3241, column: 9, scope: !3465)
!13076 = !DILocation(line: 3242, column: 9, scope: !13073)
!13077 = !DILocation(line: 3243, column: 14, scope: !3465)
!13078 = !DILocation(line: 3243, column: 19, scope: !3465)
!13079 = !DILocation(line: 3243, column: 24, scope: !3465)
!13080 = !{!7033, !7033, i64 0}
!13081 = !DILocation(line: 3243, column: 5, scope: !3465)
!13082 = !DILocation(line: 3244, column: 51, scope: !3465)
!13083 = !DILocation(line: 3245, column: 5, scope: !3465)
!13084 = !DILocation(line: 3246, column: 1, scope: !3465)
!13085 = !DILocation(line: 3294, column: 28, scope: !3472)
!13086 = !DILocation(line: 3294, column: 44, scope: !3472)
!13087 = !DILocation(line: 3296, column: 5, scope: !3472)
!13088 = !DILocation(line: 3296, column: 9, scope: !3472)
!13089 = !DILocation(line: 3297, column: 27, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !3472, file: !4, line: 3297, column: 9)
!13091 = !DILocation(line: 3297, column: 10, scope: !13090)
!13092 = !DILocation(line: 3297, column: 9, scope: !3472)
!13093 = !DILocation(line: 3298, column: 9, scope: !13090)
!13094 = !DILocation(line: 3299, column: 23, scope: !3472)
!13095 = !DILocation(line: 3299, column: 12, scope: !3472)
!13096 = !DILocation(line: 3299, column: 5, scope: !3472)
!13097 = !DILocation(line: 3300, column: 1, scope: !3472)
!13098 = !DILocation(line: 3308, column: 35, scope: !3494)
!13099 = !DILocation(line: 3308, column: 51, scope: !3494)
!13100 = !DILocation(line: 3310, column: 5, scope: !3494)
!13101 = !DILocation(line: 3310, column: 9, scope: !3494)
!13102 = !DILocation(line: 3311, column: 27, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !3494, file: !4, line: 3311, column: 9)
!13104 = !DILocation(line: 3311, column: 10, scope: !13103)
!13105 = !DILocation(line: 3311, column: 9, scope: !3494)
!13106 = !DILocation(line: 3312, column: 9, scope: !13103)
!13107 = !DILocation(line: 3313, column: 23, scope: !3494)
!13108 = !DILocation(line: 3313, column: 12, scope: !3494)
!13109 = !DILocation(line: 3313, column: 5, scope: !3494)
!13110 = !DILocation(line: 3314, column: 1, scope: !3494)
!13111 = !DILocation(line: 3336, column: 26, scope: !3499)
!13112 = !DILocation(line: 3336, column: 42, scope: !3499)
!13113 = !DILocation(line: 3338, column: 5, scope: !3499)
!13114 = !DILocation(line: 3338, column: 15, scope: !3499)
!13115 = !DILocation(line: 3339, column: 5, scope: !3499)
!13116 = !DILocation(line: 3339, column: 9, scope: !3499)
!13117 = !DILocation(line: 3341, column: 27, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !3499, file: !4, line: 3341, column: 9)
!13119 = !DILocation(line: 3341, column: 10, scope: !13118)
!13120 = !DILocation(line: 3341, column: 9, scope: !3499)
!13121 = !DILocation(line: 3343, column: 9, scope: !13118)
!13122 = !DILocation(line: 3345, column: 39, scope: !3499)
!13123 = !DILocation(line: 3345, column: 22, scope: !3499)
!13124 = !DILocation(line: 3345, column: 13, scope: !3499)
!13125 = !DILocation(line: 3345, column: 11, scope: !3499)
!13126 = !DILocation(line: 3346, column: 5, scope: !3499)
!13127 = !DILocation(line: 3346, column: 10, scope: !13128)
!13128 = !DILexicalBlockFile(scope: !3506, file: !4, discriminator: 1)
!13129 = !DILocation(line: 3346, column: 20, scope: !3506)
!13130 = !DILocation(line: 3346, column: 50, scope: !3506)
!13131 = !DILocation(line: 3346, column: 65, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !3506, file: !4, line: 3346, column: 62)
!13133 = !DILocation(line: 3346, column: 82, scope: !13132)
!13134 = !DILocation(line: 3346, column: 62, scope: !13132)
!13135 = !DILocation(line: 3346, column: 92, scope: !13132)
!13136 = !DILocation(line: 3346, column: 62, scope: !3506)
!13137 = !DILocation(line: 3346, column: 62, scope: !13138)
!13138 = !DILexicalBlockFile(scope: !3506, file: !4, discriminator: 2)
!13139 = !DILocation(line: 3346, column: 123, scope: !13140)
!13140 = !DILexicalBlockFile(scope: !13132, file: !4, discriminator: 3)
!13141 = !DILocation(line: 3346, column: 141, scope: !13132)
!13142 = !DILocation(line: 3346, column: 151, scope: !13132)
!13143 = !DILocation(line: 3346, column: 176, scope: !13132)
!13144 = !DILocation(line: 3346, column: 107, scope: !13132)
!13145 = !DILocation(line: 3346, column: 195, scope: !13146)
!13146 = !DILexicalBlockFile(scope: !3499, file: !4, discriminator: 4)
!13147 = !DILocation(line: 3346, column: 195, scope: !3506)
!13148 = !DILocation(line: 3346, column: 195, scope: !13149)
!13149 = !DILexicalBlockFile(scope: !3506, file: !4, discriminator: 5)
!13150 = !DILocation(line: 3347, column: 9, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !3499, file: !4, line: 3347, column: 9)
!13152 = !DILocation(line: 3347, column: 15, scope: !13151)
!13153 = !DILocation(line: 3347, column: 9, scope: !3499)
!13154 = !DILocation(line: 3348, column: 25, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13151, file: !4, line: 3347, column: 22)
!13156 = !DILocation(line: 3348, column: 9, scope: !13155)
!13157 = !DILocation(line: 3351, column: 9, scope: !13155)
!13158 = !DILocation(line: 3353, column: 28, scope: !3499)
!13159 = !DILocation(line: 3353, column: 12, scope: !3499)
!13160 = !DILocation(line: 3353, column: 5, scope: !3499)
!13161 = !DILocation(line: 3354, column: 1, scope: !3499)
!13162 = !DILocation(line: 3323, column: 29, scope: !3507)
!13163 = !DILocation(line: 3325, column: 28, scope: !3507)
!13164 = !DILocation(line: 3325, column: 12, scope: !3507)
!13165 = !DILocation(line: 3325, column: 5, scope: !3507)
!13166 = !DILocation(line: 3374, column: 42, scope: !3510)
!13167 = !DILocation(line: 3376, column: 5, scope: !3510)
!13168 = !DILocation(line: 3376, column: 15, scope: !3510)
!13169 = !DILocation(line: 3377, column: 5, scope: !3510)
!13170 = !DILocation(line: 3377, column: 15, scope: !3510)
!13171 = !DILocation(line: 3378, column: 5, scope: !3510)
!13172 = !DILocation(line: 3378, column: 15, scope: !3510)
!13173 = !DILocation(line: 3379, column: 5, scope: !3510)
!13174 = !DILocation(line: 3379, column: 15, scope: !3510)
!13175 = !DILocation(line: 3390, column: 7, scope: !3518)
!13176 = !DILocation(line: 3390, column: 19, scope: !3518)
!13177 = !DILocation(line: 3390, column: 26, scope: !3518)
!13178 = !DILocation(line: 3390, column: 71, scope: !3518)
!13179 = !DILocation(line: 3390, column: 90, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !3518, file: !4, line: 3390, column: 89)
!13181 = !DILocation(line: 3390, column: 89, scope: !3518)
!13182 = !DILocation(line: 3390, column: 143, scope: !13183)
!13183 = !DILexicalBlockFile(scope: !13184, file: !4, discriminator: 2)
!13184 = distinct !DILexicalBlock(scope: !13180, file: !4, line: 3390, column: 95)
!13185 = !DILocation(line: 3390, column: 158, scope: !13184)
!13186 = !DILocation(line: 3390, column: 179, scope: !13184)
!13187 = !DILocation(line: 3390, column: 229, scope: !13188)
!13188 = !DILexicalBlockFile(scope: !13189, file: !4, discriminator: 1)
!13189 = distinct !DILexicalBlock(scope: !13180, file: !4, line: 3390, column: 190)
!13190 = !DILocation(line: 3390, column: 203, scope: !13189)
!13191 = !DILocation(line: 3390, column: 201, scope: !13189)
!13192 = !DILocation(line: 3390, column: 235, scope: !13189)
!13193 = !DILocation(line: 3390, column: 190, scope: !13180)
!13194 = !DILocation(line: 3390, column: 283, scope: !13195)
!13195 = !DILexicalBlockFile(scope: !13196, file: !4, discriminator: 4)
!13196 = distinct !DILexicalBlock(scope: !13189, file: !4, line: 3390, column: 250)
!13197 = !DILocation(line: 3390, column: 264, scope: !13196)
!13198 = !DILocation(line: 3390, column: 262, scope: !13196)
!13199 = !DILocation(line: 3390, column: 289, scope: !13196)
!13200 = !DILocation(line: 3390, column: 296, scope: !13201)
!13201 = !DILexicalBlockFile(scope: !13202, file: !4, discriminator: 3)
!13202 = distinct !DILexicalBlock(scope: !3518, file: !4, line: 3390, column: 295)
!13203 = !DILocation(line: 3390, column: 295, scope: !3518)
!13204 = !DILocation(line: 3390, column: 307, scope: !13202)
!13205 = !DILocation(line: 3390, column: 319, scope: !13206)
!13206 = !DILexicalBlockFile(scope: !3510, file: !4, discriminator: 5)
!13207 = !DILocation(line: 3390, column: 319, scope: !13208)
!13208 = !DILexicalBlockFile(scope: !13209, file: !4, discriminator: 7)
!13209 = !DILexicalBlockFile(scope: !3510, file: !4, discriminator: 6)
!13210 = !DILocation(line: 3390, column: 321, scope: !3510)
!13211 = !DILocation(line: 3390, column: 321, scope: !13212)
!13212 = !DILexicalBlockFile(scope: !13213, file: !4, discriminator: 10)
!13213 = !DILexicalBlockFile(scope: !3510, file: !4, discriminator: 8)
!13214 = !DILocation(line: 3390, column: 321, scope: !13215)
!13215 = !DILexicalBlockFile(scope: !3510, file: !4, discriminator: 9)
!13216 = !DILocation(line: 3391, column: 7, scope: !3520)
!13217 = !DILocation(line: 3391, column: 19, scope: !3520)
!13218 = !DILocation(line: 3391, column: 26, scope: !3520)
!13219 = !DILocation(line: 3391, column: 63, scope: !3520)
!13220 = !DILocation(line: 3391, column: 82, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !3520, file: !4, line: 3391, column: 81)
!13222 = !DILocation(line: 3391, column: 81, scope: !3520)
!13223 = !DILocation(line: 3391, column: 135, scope: !13224)
!13224 = !DILexicalBlockFile(scope: !13225, file: !4, discriminator: 2)
!13225 = distinct !DILexicalBlock(scope: !13221, file: !4, line: 3391, column: 87)
!13226 = !DILocation(line: 3391, column: 146, scope: !13225)
!13227 = !DILocation(line: 3391, column: 167, scope: !13225)
!13228 = !DILocation(line: 3391, column: 213, scope: !13229)
!13229 = !DILexicalBlockFile(scope: !13230, file: !4, discriminator: 1)
!13230 = distinct !DILexicalBlock(scope: !13221, file: !4, line: 3391, column: 178)
!13231 = !DILocation(line: 3391, column: 187, scope: !13230)
!13232 = !DILocation(line: 3391, column: 185, scope: !13230)
!13233 = !DILocation(line: 3391, column: 219, scope: !13230)
!13234 = !DILocation(line: 3391, column: 178, scope: !13221)
!13235 = !DILocation(line: 3391, column: 263, scope: !13236)
!13236 = !DILexicalBlockFile(scope: !13237, file: !4, discriminator: 4)
!13237 = distinct !DILexicalBlock(scope: !13230, file: !4, line: 3391, column: 234)
!13238 = !DILocation(line: 3391, column: 244, scope: !13237)
!13239 = !DILocation(line: 3391, column: 242, scope: !13237)
!13240 = !DILocation(line: 3391, column: 269, scope: !13237)
!13241 = !DILocation(line: 3391, column: 276, scope: !13242)
!13242 = !DILexicalBlockFile(scope: !13243, file: !4, discriminator: 3)
!13243 = distinct !DILexicalBlock(scope: !3520, file: !4, line: 3391, column: 275)
!13244 = !DILocation(line: 3391, column: 275, scope: !3520)
!13245 = !DILocation(line: 3391, column: 283, scope: !13243)
!13246 = !DILocation(line: 3391, column: 295, scope: !13206)
!13247 = !DILocation(line: 3391, column: 295, scope: !13208)
!13248 = !DILocation(line: 3391, column: 297, scope: !3510)
!13249 = !DILocation(line: 3391, column: 297, scope: !13212)
!13250 = !DILocation(line: 3391, column: 297, scope: !13215)
!13251 = !DILocation(line: 3392, column: 7, scope: !3522)
!13252 = !DILocation(line: 3392, column: 19, scope: !3522)
!13253 = !DILocation(line: 3392, column: 26, scope: !3522)
!13254 = !DILocation(line: 3392, column: 69, scope: !3522)
!13255 = !DILocation(line: 3392, column: 88, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !3522, file: !4, line: 3392, column: 87)
!13257 = !DILocation(line: 3392, column: 87, scope: !3522)
!13258 = !DILocation(line: 3392, column: 141, scope: !13259)
!13259 = !DILexicalBlockFile(scope: !13260, file: !4, discriminator: 2)
!13260 = distinct !DILexicalBlock(scope: !13256, file: !4, line: 3392, column: 93)
!13261 = !DILocation(line: 3392, column: 155, scope: !13260)
!13262 = !DILocation(line: 3392, column: 176, scope: !13260)
!13263 = !DILocation(line: 3392, column: 225, scope: !13264)
!13264 = !DILexicalBlockFile(scope: !13265, file: !4, discriminator: 1)
!13265 = distinct !DILexicalBlock(scope: !13256, file: !4, line: 3392, column: 187)
!13266 = !DILocation(line: 3392, column: 199, scope: !13265)
!13267 = !DILocation(line: 3392, column: 197, scope: !13265)
!13268 = !DILocation(line: 3392, column: 231, scope: !13265)
!13269 = !DILocation(line: 3392, column: 187, scope: !13256)
!13270 = !DILocation(line: 3392, column: 278, scope: !13271)
!13271 = !DILexicalBlockFile(scope: !13272, file: !4, discriminator: 4)
!13272 = distinct !DILexicalBlock(scope: !13265, file: !4, line: 3392, column: 246)
!13273 = !DILocation(line: 3392, column: 259, scope: !13272)
!13274 = !DILocation(line: 3392, column: 257, scope: !13272)
!13275 = !DILocation(line: 3392, column: 284, scope: !13272)
!13276 = !DILocation(line: 3392, column: 291, scope: !13277)
!13277 = !DILexicalBlockFile(scope: !13278, file: !4, discriminator: 3)
!13278 = distinct !DILexicalBlock(scope: !3522, file: !4, line: 3392, column: 290)
!13279 = !DILocation(line: 3392, column: 290, scope: !3522)
!13280 = !DILocation(line: 3392, column: 301, scope: !13278)
!13281 = !DILocation(line: 3392, column: 313, scope: !13206)
!13282 = !DILocation(line: 3392, column: 313, scope: !13208)
!13283 = !DILocation(line: 3392, column: 315, scope: !3510)
!13284 = !DILocation(line: 3392, column: 315, scope: !13212)
!13285 = !DILocation(line: 3392, column: 315, scope: !13215)
!13286 = !DILocation(line: 3393, column: 7, scope: !3524)
!13287 = !DILocation(line: 3393, column: 19, scope: !3524)
!13288 = !DILocation(line: 3393, column: 26, scope: !3524)
!13289 = !DILocation(line: 3393, column: 61, scope: !3524)
!13290 = !DILocation(line: 3393, column: 80, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !3524, file: !4, line: 3393, column: 79)
!13292 = !DILocation(line: 3393, column: 79, scope: !3524)
!13293 = !DILocation(line: 3393, column: 133, scope: !13294)
!13294 = !DILexicalBlockFile(scope: !13295, file: !4, discriminator: 2)
!13295 = distinct !DILexicalBlock(scope: !13291, file: !4, line: 3393, column: 85)
!13296 = !DILocation(line: 3393, column: 143, scope: !13295)
!13297 = !DILocation(line: 3393, column: 164, scope: !13295)
!13298 = !DILocation(line: 3393, column: 209, scope: !13299)
!13299 = !DILexicalBlockFile(scope: !13300, file: !4, discriminator: 1)
!13300 = distinct !DILexicalBlock(scope: !13291, file: !4, line: 3393, column: 175)
!13301 = !DILocation(line: 3393, column: 183, scope: !13300)
!13302 = !DILocation(line: 3393, column: 181, scope: !13300)
!13303 = !DILocation(line: 3393, column: 215, scope: !13300)
!13304 = !DILocation(line: 3393, column: 175, scope: !13291)
!13305 = !DILocation(line: 3393, column: 258, scope: !13306)
!13306 = !DILexicalBlockFile(scope: !13307, file: !4, discriminator: 4)
!13307 = distinct !DILexicalBlock(scope: !13300, file: !4, line: 3393, column: 230)
!13308 = !DILocation(line: 3393, column: 239, scope: !13307)
!13309 = !DILocation(line: 3393, column: 237, scope: !13307)
!13310 = !DILocation(line: 3393, column: 264, scope: !13307)
!13311 = !DILocation(line: 3393, column: 271, scope: !13312)
!13312 = !DILexicalBlockFile(scope: !13313, file: !4, discriminator: 3)
!13313 = distinct !DILexicalBlock(scope: !3524, file: !4, line: 3393, column: 270)
!13314 = !DILocation(line: 3393, column: 270, scope: !3524)
!13315 = !DILocation(line: 3393, column: 277, scope: !13313)
!13316 = !DILocation(line: 3393, column: 289, scope: !13206)
!13317 = !DILocation(line: 3393, column: 289, scope: !13208)
!13318 = !DILocation(line: 3393, column: 291, scope: !3510)
!13319 = !DILocation(line: 3393, column: 291, scope: !13212)
!13320 = !DILocation(line: 3393, column: 291, scope: !13215)
!13321 = !DILocation(line: 3396, column: 34, scope: !3510)
!13322 = !DILocation(line: 3396, column: 45, scope: !3510)
!13323 = !DILocation(line: 3396, column: 52, scope: !3510)
!13324 = !DILocation(line: 3396, column: 62, scope: !3510)
!13325 = !DILocation(line: 3396, column: 12, scope: !3510)
!13326 = !DILocation(line: 3396, column: 5, scope: !3510)
!13327 = !DILocation(line: 3399, column: 5, scope: !3510)
!13328 = !DILocation(line: 3399, column: 10, scope: !13329)
!13329 = !DILexicalBlockFile(scope: !3526, file: !4, discriminator: 1)
!13330 = !DILocation(line: 3399, column: 20, scope: !3526)
!13331 = !DILocation(line: 3399, column: 51, scope: !3526)
!13332 = !DILocation(line: 3399, column: 67, scope: !3529)
!13333 = !DILocation(line: 3399, column: 83, scope: !3529)
!13334 = !DILocation(line: 3399, column: 67, scope: !3526)
!13335 = !DILocation(line: 3399, column: 98, scope: !13336)
!13336 = !DILexicalBlockFile(scope: !3529, file: !4, discriminator: 2)
!13337 = !DILocation(line: 3399, column: 103, scope: !13338)
!13338 = !DILexicalBlockFile(scope: !3528, file: !4, discriminator: 4)
!13339 = !DILocation(line: 3399, column: 113, scope: !3528)
!13340 = !DILocation(line: 3399, column: 143, scope: !3528)
!13341 = !DILocation(line: 3399, column: 169, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !3528, file: !4, line: 3399, column: 166)
!13343 = !DILocation(line: 3399, column: 186, scope: !13342)
!13344 = !DILocation(line: 3399, column: 166, scope: !13342)
!13345 = !DILocation(line: 3399, column: 196, scope: !13342)
!13346 = !DILocation(line: 3399, column: 166, scope: !3528)
!13347 = !DILocation(line: 3399, column: 166, scope: !13348)
!13348 = !DILexicalBlockFile(scope: !3528, file: !4, discriminator: 5)
!13349 = !DILocation(line: 3399, column: 227, scope: !13350)
!13350 = !DILexicalBlockFile(scope: !13342, file: !4, discriminator: 6)
!13351 = !DILocation(line: 3399, column: 245, scope: !13342)
!13352 = !DILocation(line: 3399, column: 255, scope: !13342)
!13353 = !DILocation(line: 3399, column: 280, scope: !13342)
!13354 = !DILocation(line: 3399, column: 211, scope: !13342)
!13355 = !DILocation(line: 3399, column: 299, scope: !13356)
!13356 = !DILexicalBlockFile(scope: !3529, file: !4, discriminator: 7)
!13357 = !DILocation(line: 3399, column: 299, scope: !3528)
!13358 = !DILocation(line: 3399, column: 299, scope: !13359)
!13359 = !DILexicalBlockFile(scope: !3528, file: !4, discriminator: 8)
!13360 = !DILocation(line: 3399, column: 299, scope: !13361)
!13361 = !DILexicalBlockFile(scope: !3528, file: !4, discriminator: 9)
!13362 = !DILocation(line: 3399, column: 312, scope: !13363)
!13363 = !DILexicalBlockFile(scope: !13364, file: !4, discriminator: 10)
!13364 = !DILexicalBlockFile(scope: !3510, file: !4, discriminator: 3)
!13365 = !DILocation(line: 3399, column: 312, scope: !3526)
!13366 = !DILocation(line: 3399, column: 312, scope: !13367)
!13367 = !DILexicalBlockFile(scope: !3526, file: !4, discriminator: 11)
!13368 = !DILocation(line: 3400, column: 5, scope: !3510)
!13369 = !DILocation(line: 3400, column: 10, scope: !13370)
!13370 = !DILexicalBlockFile(scope: !3531, file: !4, discriminator: 1)
!13371 = !DILocation(line: 3400, column: 20, scope: !3531)
!13372 = !DILocation(line: 3400, column: 51, scope: !3531)
!13373 = !DILocation(line: 3400, column: 63, scope: !3534)
!13374 = !DILocation(line: 3400, column: 79, scope: !3534)
!13375 = !DILocation(line: 3400, column: 63, scope: !3531)
!13376 = !DILocation(line: 3400, column: 94, scope: !13377)
!13377 = !DILexicalBlockFile(scope: !3534, file: !4, discriminator: 2)
!13378 = !DILocation(line: 3400, column: 99, scope: !13379)
!13379 = !DILexicalBlockFile(scope: !3533, file: !4, discriminator: 4)
!13380 = !DILocation(line: 3400, column: 109, scope: !3533)
!13381 = !DILocation(line: 3400, column: 139, scope: !3533)
!13382 = !DILocation(line: 3400, column: 165, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !3533, file: !4, line: 3400, column: 162)
!13384 = !DILocation(line: 3400, column: 182, scope: !13383)
!13385 = !DILocation(line: 3400, column: 162, scope: !13383)
!13386 = !DILocation(line: 3400, column: 192, scope: !13383)
!13387 = !DILocation(line: 3400, column: 162, scope: !3533)
!13388 = !DILocation(line: 3400, column: 162, scope: !13389)
!13389 = !DILexicalBlockFile(scope: !3533, file: !4, discriminator: 5)
!13390 = !DILocation(line: 3400, column: 223, scope: !13391)
!13391 = !DILexicalBlockFile(scope: !13383, file: !4, discriminator: 6)
!13392 = !DILocation(line: 3400, column: 241, scope: !13383)
!13393 = !DILocation(line: 3400, column: 251, scope: !13383)
!13394 = !DILocation(line: 3400, column: 276, scope: !13383)
!13395 = !DILocation(line: 3400, column: 207, scope: !13383)
!13396 = !DILocation(line: 3400, column: 295, scope: !13397)
!13397 = !DILexicalBlockFile(scope: !3534, file: !4, discriminator: 7)
!13398 = !DILocation(line: 3400, column: 295, scope: !3533)
!13399 = !DILocation(line: 3400, column: 295, scope: !13400)
!13400 = !DILexicalBlockFile(scope: !3533, file: !4, discriminator: 8)
!13401 = !DILocation(line: 3400, column: 295, scope: !13402)
!13402 = !DILexicalBlockFile(scope: !3533, file: !4, discriminator: 9)
!13403 = !DILocation(line: 3400, column: 308, scope: !13363)
!13404 = !DILocation(line: 3400, column: 308, scope: !3531)
!13405 = !DILocation(line: 3400, column: 308, scope: !13406)
!13406 = !DILexicalBlockFile(scope: !3531, file: !4, discriminator: 11)
!13407 = !DILocation(line: 3401, column: 5, scope: !3510)
!13408 = !DILocation(line: 3401, column: 10, scope: !13409)
!13409 = !DILexicalBlockFile(scope: !3536, file: !4, discriminator: 1)
!13410 = !DILocation(line: 3401, column: 20, scope: !3536)
!13411 = !DILocation(line: 3401, column: 51, scope: !3536)
!13412 = !DILocation(line: 3401, column: 66, scope: !3539)
!13413 = !DILocation(line: 3401, column: 82, scope: !3539)
!13414 = !DILocation(line: 3401, column: 66, scope: !3536)
!13415 = !DILocation(line: 3401, column: 97, scope: !13416)
!13416 = !DILexicalBlockFile(scope: !3539, file: !4, discriminator: 2)
!13417 = !DILocation(line: 3401, column: 102, scope: !13418)
!13418 = !DILexicalBlockFile(scope: !3538, file: !4, discriminator: 4)
!13419 = !DILocation(line: 3401, column: 112, scope: !3538)
!13420 = !DILocation(line: 3401, column: 142, scope: !3538)
!13421 = !DILocation(line: 3401, column: 168, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !3538, file: !4, line: 3401, column: 165)
!13423 = !DILocation(line: 3401, column: 185, scope: !13422)
!13424 = !DILocation(line: 3401, column: 165, scope: !13422)
!13425 = !DILocation(line: 3401, column: 195, scope: !13422)
!13426 = !DILocation(line: 3401, column: 165, scope: !3538)
!13427 = !DILocation(line: 3401, column: 165, scope: !13428)
!13428 = !DILexicalBlockFile(scope: !3538, file: !4, discriminator: 5)
!13429 = !DILocation(line: 3401, column: 226, scope: !13430)
!13430 = !DILexicalBlockFile(scope: !13422, file: !4, discriminator: 6)
!13431 = !DILocation(line: 3401, column: 244, scope: !13422)
!13432 = !DILocation(line: 3401, column: 254, scope: !13422)
!13433 = !DILocation(line: 3401, column: 279, scope: !13422)
!13434 = !DILocation(line: 3401, column: 210, scope: !13422)
!13435 = !DILocation(line: 3401, column: 298, scope: !13436)
!13436 = !DILexicalBlockFile(scope: !3539, file: !4, discriminator: 7)
!13437 = !DILocation(line: 3401, column: 298, scope: !3538)
!13438 = !DILocation(line: 3401, column: 298, scope: !13439)
!13439 = !DILexicalBlockFile(scope: !3538, file: !4, discriminator: 8)
!13440 = !DILocation(line: 3401, column: 298, scope: !13441)
!13441 = !DILexicalBlockFile(scope: !3538, file: !4, discriminator: 9)
!13442 = !DILocation(line: 3401, column: 311, scope: !13363)
!13443 = !DILocation(line: 3401, column: 311, scope: !3536)
!13444 = !DILocation(line: 3401, column: 311, scope: !13445)
!13445 = !DILexicalBlockFile(scope: !3536, file: !4, discriminator: 11)
!13446 = !DILocation(line: 3402, column: 5, scope: !3510)
!13447 = !DILocation(line: 3402, column: 10, scope: !13448)
!13448 = !DILexicalBlockFile(scope: !3541, file: !4, discriminator: 1)
!13449 = !DILocation(line: 3402, column: 20, scope: !3541)
!13450 = !DILocation(line: 3402, column: 51, scope: !3541)
!13451 = !DILocation(line: 3402, column: 62, scope: !3544)
!13452 = !DILocation(line: 3402, column: 78, scope: !3544)
!13453 = !DILocation(line: 3402, column: 62, scope: !3541)
!13454 = !DILocation(line: 3402, column: 93, scope: !13455)
!13455 = !DILexicalBlockFile(scope: !3544, file: !4, discriminator: 2)
!13456 = !DILocation(line: 3402, column: 98, scope: !13457)
!13457 = !DILexicalBlockFile(scope: !3543, file: !4, discriminator: 4)
!13458 = !DILocation(line: 3402, column: 108, scope: !3543)
!13459 = !DILocation(line: 3402, column: 138, scope: !3543)
!13460 = !DILocation(line: 3402, column: 164, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !3543, file: !4, line: 3402, column: 161)
!13462 = !DILocation(line: 3402, column: 181, scope: !13461)
!13463 = !DILocation(line: 3402, column: 161, scope: !13461)
!13464 = !DILocation(line: 3402, column: 191, scope: !13461)
!13465 = !DILocation(line: 3402, column: 161, scope: !3543)
!13466 = !DILocation(line: 3402, column: 161, scope: !13467)
!13467 = !DILexicalBlockFile(scope: !3543, file: !4, discriminator: 5)
!13468 = !DILocation(line: 3402, column: 222, scope: !13469)
!13469 = !DILexicalBlockFile(scope: !13461, file: !4, discriminator: 6)
!13470 = !DILocation(line: 3402, column: 240, scope: !13461)
!13471 = !DILocation(line: 3402, column: 250, scope: !13461)
!13472 = !DILocation(line: 3402, column: 275, scope: !13461)
!13473 = !DILocation(line: 3402, column: 206, scope: !13461)
!13474 = !DILocation(line: 3402, column: 294, scope: !13475)
!13475 = !DILexicalBlockFile(scope: !3544, file: !4, discriminator: 7)
!13476 = !DILocation(line: 3402, column: 294, scope: !3543)
!13477 = !DILocation(line: 3402, column: 294, scope: !13478)
!13478 = !DILexicalBlockFile(scope: !3543, file: !4, discriminator: 8)
!13479 = !DILocation(line: 3402, column: 294, scope: !13480)
!13480 = !DILexicalBlockFile(scope: !3543, file: !4, discriminator: 9)
!13481 = !DILocation(line: 3402, column: 307, scope: !13363)
!13482 = !DILocation(line: 3402, column: 307, scope: !3541)
!13483 = !DILocation(line: 3402, column: 307, scope: !13484)
!13484 = !DILexicalBlockFile(scope: !3541, file: !4, discriminator: 11)
!13485 = !DILocation(line: 3403, column: 5, scope: !3510)
!13486 = !DILocation(line: 3404, column: 1, scope: !3510)
!13487 = !DILocation(line: 3441, column: 25, scope: !3545)
!13488 = !DILocation(line: 3441, column: 41, scope: !3545)
!13489 = !DILocation(line: 3441, column: 57, scope: !3545)
!13490 = !DILocation(line: 3443, column: 5, scope: !3545)
!13491 = !DILocation(line: 3443, column: 11, scope: !3545)
!13492 = !DILocation(line: 3444, column: 5, scope: !3545)
!13493 = !DILocation(line: 3444, column: 15, scope: !3545)
!13494 = !DILocation(line: 3445, column: 5, scope: !3545)
!13495 = !DILocation(line: 3445, column: 11, scope: !3545)
!13496 = !DILocation(line: 3446, column: 5, scope: !3545)
!13497 = !DILocation(line: 3446, column: 9, scope: !3545)
!13498 = !DILocation(line: 3447, column: 5, scope: !3545)
!13499 = !DILocation(line: 3447, column: 18, scope: !3545)
!13500 = !DILocation(line: 3449, column: 38, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !3545, file: !4, line: 3449, column: 9)
!13502 = !DILocation(line: 3449, column: 44, scope: !13501)
!13503 = !DILocation(line: 3450, column: 38, scope: !13501)
!13504 = !DILocation(line: 3449, column: 10, scope: !13501)
!13505 = !DILocation(line: 3449, column: 9, scope: !3545)
!13506 = !DILocation(line: 3451, column: 9, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13501, file: !4, line: 3450, column: 60)
!13508 = !DILocation(line: 3453, column: 23, scope: !3545)
!13509 = !DILocation(line: 3453, column: 28, scope: !3545)
!13510 = !DILocation(line: 3453, column: 11, scope: !3545)
!13511 = !DILocation(line: 3453, column: 9, scope: !3545)
!13512 = !DILocation(line: 3454, column: 9, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !3545, file: !4, line: 3454, column: 9)
!13514 = !DILocation(line: 3454, column: 13, scope: !13513)
!13515 = !DILocation(line: 3454, column: 9, scope: !3545)
!13516 = !DILocation(line: 3455, column: 22, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13513, file: !4, line: 3454, column: 28)
!13518 = !DILocation(line: 3455, column: 67, scope: !13517)
!13519 = !DILocation(line: 3455, column: 9, scope: !13517)
!13520 = !DILocation(line: 3456, column: 9, scope: !13517)
!13521 = !DILocation(line: 3458, column: 25, scope: !3545)
!13522 = !DILocation(line: 3458, column: 14, scope: !3545)
!13523 = !DILocation(line: 3458, column: 12, scope: !3545)
!13524 = !DILocation(line: 3459, column: 22, scope: !3545)
!13525 = !DILocation(line: 3459, column: 5, scope: !3545)
!13526 = !DILocation(line: 3460, column: 12, scope: !3545)
!13527 = !DILocation(line: 3460, column: 5, scope: !3545)
!13528 = !DILocation(line: 3461, column: 1, scope: !3545)
!13529 = !DILocation(line: 3469, column: 25, scope: !3571)
!13530 = !DILocation(line: 3469, column: 41, scope: !3571)
!13531 = !DILocation(line: 3471, column: 5, scope: !3571)
!13532 = !DILocation(line: 3471, column: 15, scope: !3571)
!13533 = !DILocation(line: 3472, column: 5, scope: !3571)
!13534 = !DILocation(line: 3472, column: 9, scope: !3571)
!13535 = !DILocation(line: 3473, column: 5, scope: !3571)
!13536 = !DILocation(line: 3473, column: 18, scope: !3571)
!13537 = !DILocation(line: 3475, column: 27, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !3571, file: !4, line: 3475, column: 9)
!13539 = !DILocation(line: 3475, column: 10, scope: !13538)
!13540 = !DILocation(line: 3475, column: 9, scope: !3571)
!13541 = !DILocation(line: 3476, column: 9, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13538, file: !4, line: 3475, column: 53)
!13543 = !DILocation(line: 3478, column: 9, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !3571, file: !4, line: 3478, column: 9)
!13545 = !DILocation(line: 3478, column: 13, scope: !13544)
!13546 = !DILocation(line: 3478, column: 9, scope: !3571)
!13547 = !DILocation(line: 3479, column: 25, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !4, line: 3478, column: 18)
!13549 = !DILocation(line: 3479, column: 9, scope: !13548)
!13550 = !DILocation(line: 3480, column: 9, scope: !13548)
!13551 = !DILocation(line: 3482, column: 23, scope: !3571)
!13552 = !DILocation(line: 3482, column: 11, scope: !3571)
!13553 = !DILocation(line: 3482, column: 9, scope: !3571)
!13554 = !DILocation(line: 3483, column: 9, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !3571, file: !4, line: 3483, column: 9)
!13556 = !DILocation(line: 3483, column: 13, scope: !13555)
!13557 = !DILocation(line: 3483, column: 9, scope: !3571)
!13558 = !DILocation(line: 3484, column: 22, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13555, file: !4, line: 3483, column: 28)
!13560 = !DILocation(line: 3484, column: 58, scope: !13559)
!13561 = !DILocation(line: 3484, column: 9, scope: !13559)
!13562 = !DILocation(line: 3485, column: 9, scope: !13559)
!13563 = !DILocation(line: 3487, column: 25, scope: !3571)
!13564 = !DILocation(line: 3487, column: 14, scope: !3571)
!13565 = !DILocation(line: 3487, column: 12, scope: !3571)
!13566 = !DILocation(line: 3488, column: 22, scope: !3571)
!13567 = !DILocation(line: 3488, column: 5, scope: !3571)
!13568 = !DILocation(line: 3489, column: 12, scope: !3571)
!13569 = !DILocation(line: 3489, column: 5, scope: !3571)
!13570 = !DILocation(line: 3490, column: 1, scope: !3571)
!13571 = !DILocation(line: 3255, column: 16, scope: !3477)
!13572 = !DILocation(line: 3255, column: 25, scope: !3477)
!13573 = !DILocation(line: 3257, column: 5, scope: !3477)
!13574 = !DILocation(line: 3257, column: 9, scope: !3477)
!13575 = !DILocation(line: 3258, column: 5, scope: !3477)
!13576 = !DILocation(line: 3258, column: 15, scope: !3477)
!13577 = !DILocation(line: 3259, column: 5, scope: !3477)
!13578 = !DILocation(line: 3259, column: 19, scope: !3477)
!13579 = !DILocation(line: 3260, column: 5, scope: !3477)
!13580 = !DILocation(line: 3260, column: 17, scope: !3477)
!13581 = !DILocation(line: 3261, column: 5, scope: !3477)
!13582 = !DILocation(line: 3261, column: 15, scope: !3477)
!13583 = !DILocation(line: 3263, column: 9, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !3477, file: !4, line: 3263, column: 9)
!13585 = !DILocation(line: 3263, column: 13, scope: !13584)
!13586 = !DILocation(line: 3263, column: 9, scope: !3477)
!13587 = !DILocation(line: 3264, column: 25, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13584, file: !4, line: 3263, column: 18)
!13589 = !DILocation(line: 3264, column: 9, scope: !13588)
!13590 = !DILocation(line: 3265, column: 9, scope: !13588)
!13591 = !DILocation(line: 3268, column: 51, scope: !3477)
!13592 = !DILocation(line: 3268, column: 13, scope: !3477)
!13593 = !DILocation(line: 3268, column: 11, scope: !3477)
!13594 = !DILocation(line: 3269, column: 9, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !3477, file: !4, line: 3269, column: 9)
!13596 = !DILocation(line: 3269, column: 15, scope: !13595)
!13597 = !DILocation(line: 3269, column: 9, scope: !3477)
!13598 = !DILocation(line: 3270, column: 9, scope: !13595)
!13599 = !DILocation(line: 3271, column: 9, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !3477, file: !4, line: 3271, column: 9)
!13601 = !DILocation(line: 3271, column: 9, scope: !3477)
!13602 = !DILocation(line: 3272, column: 83, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13600, file: !4, line: 3271, column: 17)
!13604 = !DILocation(line: 3272, column: 65, scope: !13603)
!13605 = !DILocation(line: 3272, column: 92, scope: !13603)
!13606 = !DILocation(line: 3272, column: 63, scope: !13603)
!13607 = !DILocation(line: 3272, column: 103, scope: !13603)
!13608 = !DILocation(line: 3272, column: 14, scope: !13603)
!13609 = !DILocation(line: 3272, column: 12, scope: !13603)
!13610 = !DILocation(line: 3273, column: 13, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13603, file: !4, line: 3273, column: 13)
!13612 = !DILocation(line: 3273, column: 16, scope: !13611)
!13613 = !DILocation(line: 3273, column: 21, scope: !13611)
!13614 = !DILocation(line: 3273, column: 24, scope: !13615)
!13615 = !DILexicalBlockFile(scope: !13611, file: !4, discriminator: 1)
!13616 = !DILocation(line: 3273, column: 27, scope: !13611)
!13617 = !DILocation(line: 3273, column: 13, scope: !13603)
!13618 = !DILocation(line: 3274, column: 40, scope: !13611)
!13619 = !DILocation(line: 3274, column: 47, scope: !13611)
!13620 = !DILocation(line: 3274, column: 50, scope: !13611)
!13621 = !DILocation(line: 3274, column: 20, scope: !13611)
!13622 = !DILocation(line: 3274, column: 13, scope: !13611)
!13623 = !DILocation(line: 3275, column: 5, scope: !13603)
!13624 = !DILocation(line: 3277, column: 76, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13600, file: !4, line: 3276, column: 10)
!13626 = !DILocation(line: 3277, column: 58, scope: !13625)
!13627 = !DILocation(line: 3277, column: 85, scope: !13625)
!13628 = !DILocation(line: 3277, column: 56, scope: !13625)
!13629 = !DILocation(line: 3277, column: 96, scope: !13625)
!13630 = !DILocation(line: 3277, column: 14, scope: !13625)
!13631 = !DILocation(line: 3277, column: 12, scope: !13625)
!13632 = !DILocation(line: 3278, column: 13, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13625, file: !4, line: 3278, column: 13)
!13634 = !DILocation(line: 3278, column: 16, scope: !13633)
!13635 = !DILocation(line: 3278, column: 13, scope: !13625)
!13636 = !DILocation(line: 3279, column: 20, scope: !13633)
!13637 = !DILocation(line: 3279, column: 13, scope: !13633)
!13638 = !DILocation(line: 3281, column: 5, scope: !3477)
!13639 = !DILocation(line: 3281, column: 10, scope: !13640)
!13640 = !DILexicalBlockFile(scope: !3489, file: !4, discriminator: 1)
!13641 = !DILocation(line: 3281, column: 20, scope: !3489)
!13642 = !DILocation(line: 3281, column: 50, scope: !3489)
!13643 = !DILocation(line: 3281, column: 66, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !3489, file: !4, line: 3281, column: 63)
!13645 = !DILocation(line: 3281, column: 83, scope: !13644)
!13646 = !DILocation(line: 3281, column: 63, scope: !13644)
!13647 = !DILocation(line: 3281, column: 93, scope: !13644)
!13648 = !DILocation(line: 3281, column: 63, scope: !3489)
!13649 = !DILocation(line: 3281, column: 63, scope: !13650)
!13650 = !DILexicalBlockFile(scope: !3489, file: !4, discriminator: 2)
!13651 = !DILocation(line: 3281, column: 124, scope: !13652)
!13652 = !DILexicalBlockFile(scope: !13644, file: !4, discriminator: 3)
!13653 = !DILocation(line: 3281, column: 142, scope: !13644)
!13654 = !DILocation(line: 3281, column: 152, scope: !13644)
!13655 = !DILocation(line: 3281, column: 177, scope: !13644)
!13656 = !DILocation(line: 3281, column: 108, scope: !13644)
!13657 = !DILocation(line: 3281, column: 196, scope: !13658)
!13658 = !DILexicalBlockFile(scope: !3477, file: !4, discriminator: 4)
!13659 = !DILocation(line: 3281, column: 196, scope: !3489)
!13660 = !DILocation(line: 3281, column: 196, scope: !13661)
!13661 = !DILexicalBlockFile(scope: !3489, file: !4, discriminator: 5)
!13662 = !DILocation(line: 3283, column: 11, scope: !3477)
!13663 = !DILocation(line: 3283, column: 9, scope: !3477)
!13664 = !DILocation(line: 3284, column: 38, scope: !3477)
!13665 = !DILocation(line: 3284, column: 14, scope: !3477)
!13666 = !DILocation(line: 3284, column: 12, scope: !3477)
!13667 = !DILocation(line: 3285, column: 31, scope: !3477)
!13668 = !DILocation(line: 3285, column: 36, scope: !3477)
!13669 = !DILocation(line: 3285, column: 9, scope: !3477)
!13670 = !DILocation(line: 3285, column: 7, scope: !3477)
!13671 = !DILocation(line: 3286, column: 9, scope: !3493)
!13672 = !DILocation(line: 3286, column: 11, scope: !3493)
!13673 = !DILocation(line: 3286, column: 9, scope: !3477)
!13674 = !DILocation(line: 3287, column: 25, scope: !3492)
!13675 = !DILocation(line: 3287, column: 43, scope: !3492)
!13676 = !DILocation(line: 3287, column: 9, scope: !3492)
!13677 = !DILocation(line: 3288, column: 9, scope: !3492)
!13678 = !DILocation(line: 3288, column: 14, scope: !13679)
!13679 = !DILexicalBlockFile(scope: !3491, file: !4, discriminator: 1)
!13680 = !DILocation(line: 3288, column: 24, scope: !3491)
!13681 = !DILocation(line: 3288, column: 54, scope: !3491)
!13682 = !DILocation(line: 3288, column: 66, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !3491, file: !4, line: 3288, column: 63)
!13684 = !DILocation(line: 3288, column: 83, scope: !13683)
!13685 = !DILocation(line: 3288, column: 63, scope: !13683)
!13686 = !DILocation(line: 3288, column: 93, scope: !13683)
!13687 = !DILocation(line: 3288, column: 63, scope: !3491)
!13688 = !DILocation(line: 3288, column: 63, scope: !13689)
!13689 = !DILexicalBlockFile(scope: !3491, file: !4, discriminator: 2)
!13690 = !DILocation(line: 3288, column: 124, scope: !13691)
!13691 = !DILexicalBlockFile(scope: !13683, file: !4, discriminator: 3)
!13692 = !DILocation(line: 3288, column: 142, scope: !13683)
!13693 = !DILocation(line: 3288, column: 152, scope: !13683)
!13694 = !DILocation(line: 3288, column: 177, scope: !13683)
!13695 = !DILocation(line: 3288, column: 108, scope: !13683)
!13696 = !DILocation(line: 3288, column: 196, scope: !13697)
!13697 = !DILexicalBlockFile(scope: !3492, file: !4, discriminator: 4)
!13698 = !DILocation(line: 3288, column: 196, scope: !3491)
!13699 = !DILocation(line: 3288, column: 196, scope: !13700)
!13700 = !DILexicalBlockFile(scope: !3491, file: !4, discriminator: 5)
!13701 = !DILocation(line: 3289, column: 5, scope: !3492)
!13702 = !DILocation(line: 3290, column: 5, scope: !3477)
!13703 = !DILocation(line: 3291, column: 1, scope: !3477)
!13704 = !DILocation(line: 3407, column: 25, scope: !3558)
!13705 = !DILocation(line: 3409, column: 5, scope: !3558)
!13706 = !DILocation(line: 3409, column: 9, scope: !3558)
!13707 = !DILocation(line: 3410, column: 5, scope: !3558)
!13708 = !DILocation(line: 3410, column: 17, scope: !3558)
!13709 = !DILocation(line: 3410, column: 22, scope: !3558)
!13710 = !DILocation(line: 3411, column: 5, scope: !3558)
!13711 = !DILocation(line: 3411, column: 10, scope: !3558)
!13712 = !DILocation(line: 3412, column: 5, scope: !3558)
!13713 = !DILocation(line: 3412, column: 9, scope: !3558)
!13714 = !DILocation(line: 3414, column: 23, scope: !3558)
!13715 = !DILocation(line: 3414, column: 11, scope: !3558)
!13716 = !DILocation(line: 3414, column: 9, scope: !3558)
!13717 = !DILocation(line: 3415, column: 9, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !3558, file: !4, line: 3415, column: 9)
!13719 = !DILocation(line: 3415, column: 13, scope: !13718)
!13720 = !DILocation(line: 3415, column: 9, scope: !3558)
!13721 = !DILocation(line: 3416, column: 22, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13718, file: !4, line: 3415, column: 19)
!13723 = !DILocation(line: 3416, column: 9, scope: !13722)
!13724 = !DILocation(line: 3417, column: 9, scope: !13722)
!13725 = !DILocation(line: 3419, column: 21, scope: !3558)
!13726 = !DILocation(line: 3419, column: 10, scope: !3558)
!13727 = !DILocation(line: 3419, column: 8, scope: !3558)
!13728 = !DILocation(line: 3420, column: 21, scope: !3558)
!13729 = !DILocation(line: 3420, column: 10, scope: !3558)
!13730 = !DILocation(line: 3420, column: 8, scope: !3558)
!13731 = !DILocation(line: 3421, column: 26, scope: !3558)
!13732 = !DILocation(line: 3421, column: 44, scope: !3558)
!13733 = !DILocation(line: 3421, column: 14, scope: !3558)
!13734 = !DILocation(line: 3421, column: 12, scope: !3558)
!13735 = !DILocation(line: 3422, column: 9, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !3558, file: !4, line: 3422, column: 9)
!13737 = !DILocation(line: 3422, column: 16, scope: !13736)
!13738 = !DILocation(line: 3422, column: 9, scope: !3558)
!13739 = !DILocation(line: 3423, column: 9, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13736, file: !4, line: 3422, column: 21)
!13741 = !DILocation(line: 3424, column: 9, scope: !13740)
!13742 = !DILocation(line: 3426, column: 9, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !3558, file: !4, line: 3426, column: 9)
!13744 = !DILocation(line: 3426, column: 9, scope: !3558)
!13745 = !DILocation(line: 3427, column: 39, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13743, file: !4, line: 3426, column: 17)
!13747 = !DILocation(line: 3427, column: 44, scope: !13746)
!13748 = !DILocation(line: 3427, column: 48, scope: !13746)
!13749 = !DILocation(line: 3427, column: 52, scope: !13746)
!13750 = !DILocation(line: 3427, column: 57, scope: !13746)
!13751 = !DILocation(line: 3427, column: 16, scope: !13746)
!13752 = !DILocation(line: 3427, column: 9, scope: !13746)
!13753 = !DILocation(line: 3429, column: 38, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13743, file: !4, line: 3428, column: 12)
!13755 = !DILocation(line: 3429, column: 43, scope: !13754)
!13756 = !DILocation(line: 3429, column: 47, scope: !13754)
!13757 = !DILocation(line: 3429, column: 16, scope: !13754)
!13758 = !DILocation(line: 3429, column: 9, scope: !13754)
!13759 = !DILocation(line: 3431, column: 1, scope: !3558)
!13760 = !DILocation(line: 3802, column: 10, scope: !3589)
!13761 = !DILocation(line: 3802, column: 20, scope: !3589)
!13762 = !DILocation(line: 3802, column: 35, scope: !3589)
!13763 = !DILocation(line: 3802, column: 45, scope: !3589)
!13764 = !DILocation(line: 3817, column: 10, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !3589, file: !4, line: 3817, column: 9)
!13766 = !DILocation(line: 3817, column: 21, scope: !13765)
!13767 = !DILocation(line: 3817, column: 36, scope: !13765)
!13768 = !DILocation(line: 3818, column: 10, scope: !13765)
!13769 = !DILocation(line: 3818, column: 12, scope: !13765)
!13770 = !DILocation(line: 3818, column: 17, scope: !13765)
!13771 = !DILocation(line: 3818, column: 31, scope: !13772)
!13772 = !DILexicalBlockFile(scope: !13765, file: !4, discriminator: 1)
!13773 = !DILocation(line: 3818, column: 36, scope: !13765)
!13774 = !DILocation(line: 3818, column: 33, scope: !13765)
!13775 = !DILocation(line: 3817, column: 9, scope: !3589)
!13776 = !DILocation(line: 3819, column: 9, scope: !13765)
!13777 = !DILocation(line: 3821, column: 9, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !3589, file: !4, line: 3821, column: 9)
!13779 = !DILocation(line: 3821, column: 14, scope: !13778)
!13780 = !DILocation(line: 3821, column: 9, scope: !3589)
!13781 = !DILocation(line: 3822, column: 42, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13778, file: !4, line: 3821, column: 19)
!13783 = !DILocation(line: 3822, column: 31, scope: !13782)
!13784 = !DILocation(line: 3822, column: 9, scope: !13782)
!13785 = !DILocation(line: 3823, column: 5, scope: !13782)
!13786 = !DILocation(line: 3824, column: 42, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13778, file: !4, line: 3823, column: 12)
!13788 = !DILocation(line: 3824, column: 31, scope: !13787)
!13789 = !DILocation(line: 3824, column: 9, scope: !13787)
!13790 = !DILocation(line: 3826, column: 1, scope: !3589)
!13791 = !DILocation(line: 3788, column: 41, scope: !3597)
!13792 = !DILocation(line: 3790, column: 33, scope: !3597)
!13793 = !DILocation(line: 3791, column: 48, scope: !3597)
!13794 = !DILocation(line: 3790, column: 5, scope: !3597)
!13795 = !DILocation(line: 3792, column: 1, scope: !3597)
!13796 = !DILocation(line: 283, column: 31, scope: !3608)
!13797 = !DILocation(line: 285, column: 9, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !3608, file: !4, line: 285, column: 9)
!13799 = !DILocation(line: 285, column: 15, scope: !13798)
!13800 = !{!13801, !3861, i64 72}
!13801 = !{!"", !4102, i64 0, !3861, i64 16, !3861, i64 24, !3861, i64 32, !3861, i64 40, !3861, i64 48, !3862, i64 56, !3861, i64 64, !3861, i64 72, !3861, i64 80, !3861, i64 88, !4103, i64 96}
!13802 = !DILocation(line: 285, column: 24, scope: !13798)
!13803 = !DILocation(line: 285, column: 38, scope: !13798)
!13804 = !DILocation(line: 285, column: 58, scope: !13805)
!13805 = !DILexicalBlockFile(scope: !13798, file: !4, discriminator: 1)
!13806 = !DILocation(line: 285, column: 64, scope: !13798)
!13807 = !DILocation(line: 285, column: 76, scope: !13798)
!13808 = !DILocation(line: 285, column: 87, scope: !13798)
!13809 = !DILocation(line: 285, column: 96, scope: !13798)
!13810 = !DILocation(line: 285, column: 113, scope: !13798)
!13811 = !DILocation(line: 285, column: 9, scope: !3608)
!13812 = !DILocation(line: 286, column: 25, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13798, file: !4, line: 285, column: 120)
!13814 = !DILocation(line: 286, column: 31, scope: !13813)
!13815 = !DILocation(line: 286, column: 43, scope: !13813)
!13816 = !DILocation(line: 286, column: 52, scope: !13813)
!13817 = !DILocation(line: 287, column: 16, scope: !13813)
!13818 = !DILocation(line: 287, column: 22, scope: !13813)
!13819 = !DILocation(line: 287, column: 9, scope: !13813)
!13820 = !DILocation(line: 290, column: 29, scope: !13798)
!13821 = !DILocation(line: 290, column: 35, scope: !13798)
!13822 = !{!13801, !3861, i64 24}
!13823 = !DILocation(line: 290, column: 16, scope: !13798)
!13824 = !DILocation(line: 290, column: 9, scope: !13798)
!13825 = !DILocation(line: 291, column: 1, scope: !3608)
