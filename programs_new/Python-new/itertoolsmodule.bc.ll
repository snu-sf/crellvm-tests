; ModuleID = 'programs_new/Python-new/itertoolsmodule.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.accumulateobject = type { %struct._object, %struct._object*, %struct._object*, %struct._object* }
%struct.combinationsobject = type { %struct._object, %struct._object*, i64*, %struct._object*, i64, i32 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.cwrobject = type { %struct._object, %struct._object*, i64*, %struct._object*, i64, i32 }
%struct.cycleobject = type { %struct._object, %struct._object*, %struct._object*, i32 }
%struct.dropwhileobject = type { %struct._object, %struct._object*, %struct._object*, i64 }
%struct.takewhileobject = type { %struct._object, %struct._object*, %struct._object*, i64 }
%struct.isliceobject = type { %struct._object, %struct._object*, i64, i64, i64, i64 }
%struct.starmapobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.chainobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.compressobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.filterfalseobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.countobject = type { %struct._object, i64, %struct._object*, %struct._object* }
%struct.ziplongestobject = type { %struct._object, i64, i64, %struct._object*, %struct._object*, %struct._object* }
%struct.permutationsobject = type { %struct._object, %struct._object*, i64*, i64*, %struct._object*, i64, i32 }
%struct.productobject = type { %struct._object, %struct._object*, i64*, %struct._object*, i32 }
%struct.repeatobject = type { %struct._object, %struct._object*, i64 }
%struct.groupbyobject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct._grouperobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.teeobject = type { %struct._object, %struct.teedataobject*, i32, %struct._object* }
%struct.teedataobject = type { %struct._object, %struct._object*, i32, %struct._object*, [57 x %struct._object*] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }

@accumulate_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.accumulateobject*)* @accumulate_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @accumulate_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.accumulateobject*, i32 (%struct._object*, i8*)*, i8*)* @accumulate_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.accumulateobject*)* @accumulate_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @accumulate_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @accumulate_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@combinations_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.combinationsobject*)* @combinations_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @combinations_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.combinationsobject*, i32 (%struct._object*, i8*)*, i8*)* @combinations_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*)* @combinations_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @combinations_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @combinations_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@cwr_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.cwrobject*)* @cwr_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([272 x i8], [272 x i8]* @cwr_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.cwrobject*, i32 (%struct._object*, i8*)*, i8*)* @cwr_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.cwrobject*)* @cwr_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @cwr_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cwr_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@cycle_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.cycleobject*)* @cycle_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @cycle_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.cycleobject*, i32 (%struct._object*, i8*)*, i8*)* @cycle_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.cycleobject*)* @cycle_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @cycle_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cycle_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@dropwhile_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.dropwhileobject*)* @dropwhile_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @dropwhile_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.dropwhileobject*, i32 (%struct._object*, i8*)*, i8*)* @dropwhile_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.dropwhileobject*)* @dropwhile_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @dropwhile_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @dropwhile_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@takewhile_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.takewhileobject*)* @takewhile_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @takewhile_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.takewhileobject*, i32 (%struct._object*, i8*)*, i8*)* @takewhile_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.takewhileobject*)* @takewhile_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @takewhile_reduce_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @takewhile_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@islice_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.isliceobject*)* @islice_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([455 x i8], [455 x i8]* @islice_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.isliceobject*, i32 (%struct._object*, i8*)*, i8*)* @islice_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.isliceobject*)* @islice_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @islice_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @islice_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@starmap_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.starmapobject*)* @starmap_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @starmap_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.starmapobject*, i32 (%struct._object*, i8*)*, i8*)* @starmap_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.starmapobject*)* @starmap_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @starmap_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @starmap_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@chain_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.chainobject*)* @chain_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([227 x i8], [227 x i8]* @chain_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.chainobject*, i32 (%struct._object*, i8*)*, i8*)* @chain_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.chainobject*)* @chain_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @chain_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @chain_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@compress_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.compressobject*)* @compress_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([223 x i8], [223 x i8]* @compress_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.compressobject*, i32 (%struct._object*, i8*)*, i8*)* @compress_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.compressobject*)* @compress_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @compress_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @compress_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@filterfalse_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.filterfalseobject*)* @filterfalse_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([184 x i8], [184 x i8]* @filterfalse_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.filterfalseobject*, i32 (%struct._object*, i8*)*, i8*)* @filterfalse_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.filterfalseobject*)* @filterfalse_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @filterfalse_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @filterfalse_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@count_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.countobject*)* @count_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.countobject*)* @count_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([248 x i8], [248 x i8]* @count_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.countobject*, i32 (%struct._object*, i8*)*, i8*)* @count_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.countobject*)* @count_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @count_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @count_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@ziplongest_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.ziplongestobject*)* @zip_longest_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([505 x i8], [505 x i8]* @zip_longest_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.ziplongestobject*, i32 (%struct._object*, i8*)*, i8*)* @zip_longest_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.ziplongestobject*)* @zip_longest_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @zip_longest_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @zip_longest_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@permutations_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.permutationsobject*)* @permutations_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([194 x i8], [194 x i8]* @permutations_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.permutationsobject*, i32 (%struct._object*, i8*)*, i8*)* @permutations_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*)* @permutations_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @permuations_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @permutations_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@product_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.productobject*)* @product_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([732 x i8], [732 x i8]* @product_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.productobject*, i32 (%struct._object*, i8*)*, i8*)* @product_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.productobject*)* @product_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @product_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @product_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@repeat_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.repeatobject*)* @repeat_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @repeat_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.repeatobject*, i32 (%struct._object*, i8*)*, i8*)* @repeat_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @repeat_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @repeat_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@groupby_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.groupbyobject*)* @groupby_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @groupby_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.groupbyobject*, i32 (%struct._object*, i8*)*, i8*)* @groupby_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.groupbyobject*)* @groupby_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @groupby_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @groupby_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_grouper_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct._grouperobject*)* @_grouper_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._grouperobject*, i32 (%struct._object*, i8*)*, i8*)* @_grouper_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct._grouperobject*)* @_grouper_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @_grouper_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @_grouper_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@tee_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.98, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.teeobject*)* @tee_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @teeobject_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.teeobject*, i32 (%struct._object*, i8*)*, i8*)* @tee_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.teeobject*)* @tee_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 32, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.teeobject*)* @tee_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @tee_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @tee_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@teedataobject_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i32 0, i32 0), i64 496, i64 0, void (%struct._object*)* bitcast (void (%struct.teedataobject*)* @teedataobject_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @teedataobject_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.teedataobject*, i32 (%struct._object*, i8*)*, i8*)* @teedataobject_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.teedataobject*)* @teedataobject_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @teedataobject_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @teedataobject_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyInit_itertools.typelist = private unnamed_addr constant [21 x %struct._typeobject*] [%struct._typeobject* @accumulate_type, %struct._typeobject* @combinations_type, %struct._typeobject* @cwr_type, %struct._typeobject* @cycle_type, %struct._typeobject* @dropwhile_type, %struct._typeobject* @takewhile_type, %struct._typeobject* @islice_type, %struct._typeobject* @starmap_type, %struct._typeobject* @chain_type, %struct._typeobject* @compress_type, %struct._typeobject* @filterfalse_type, %struct._typeobject* @count_type, %struct._typeobject* @ziplongest_type, %struct._typeobject* @permutations_type, %struct._typeobject* @product_type, %struct._typeobject* @repeat_type, %struct._typeobject* @groupby_type, %struct._typeobject* @_grouper_type, %struct._typeobject* @tee_type, %struct._typeobject* @teedataobject_type, %struct._typeobject* null], align 16
@PyType_Type = external global %struct._typeobject, align 8
@itertoolsmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([1229 x i8], [1229 x i8]* @module_doc, i32 0, i32 0), i64 -1, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @module_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str = private unnamed_addr constant [21 x i8] c"itertools.accumulate\00", align 1
@accumulate_doc = internal global [122 x i8] c"accumulate(iterable[, func]) --> accumulate object\0A\0AReturn series of accumulated sums (or other binary function results).\00", align 16
@accumulate_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.accumulateobject*)* @accumulate_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.accumulateobject*, %struct._object*)* @accumulate_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@reduce_doc = internal global [39 x i8] c"Return state information for pickling.\00", align 16
@.str.2 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@setstate_doc = internal global [38 x i8] c"Set state information for unpickling.\00", align 16
@.str.3 = private unnamed_addr constant [7 x i8] c"O(OO)O\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@accumulate_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* null], align 16
@.str.4 = private unnamed_addr constant [9 x i8] c"iterable\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"O|O:accumulate\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"itertools.combinations\00", align 1
@combinations_doc = internal global [186 x i8] c"combinations(iterable, r) --> combinations object\0A\0AReturn successive r-length combinations of elements in the iterable.\0A\0Acombinations(range(4), 3) --> (0,1,2), (0,1,3), (0,2,3), (1,2,3)\00", align 16
@combinations_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*)* @combinations_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*, %struct._object*)* @combinations_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*, i8*)* @combinations_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.8 = private unnamed_addr constant [11 x i8] c"__sizeof__\00", align 1
@sizeof_doc = internal global [34 x i8] c"Returns size in memory, in bytes.\00", align 16
@.str.9 = private unnamed_addr constant [6 x i8] c"O(On)\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"O(()n)\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"O(On)N\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.12 = private unnamed_addr constant [18 x i8] c"invalid arguments\00", align 1
@combinations_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* null], align 16
@.str.13 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"On:combinations\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"r must be non-negative\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"itertools.combinations_with_replacement\00", align 1
@cwr_doc = internal global [272 x i8] c"combinations_with_replacement(iterable, r) --> combinations_with_replacement object\0A\0AReturn successive r-length combinations of elements in the iterable\0Aallowing individual elements to have successive repeats.\0Acombinations_with_replacement('ABC', 2) --> AA AB AC BB BC CC\00", align 16
@cwr_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cwrobject*)* @cwr_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cwrobject*, %struct._object*)* @cwr_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cwrobject*, i8*)* @cwr_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@cwr_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* null], align 16
@.str.17 = private unnamed_addr constant [33 x i8] c"On:combinations_with_replacement\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"itertools.cycle\00", align 1
@cycle_doc = internal global [130 x i8] c"cycle(iterable) --> cycle object\0A\0AReturn elements from the iterable until it is exhausted.\0AThen repeat the sequence indefinitely.\00", align 16
@cycle_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cycleobject*)* @cycle_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cycleobject*, %struct._object*)* @cycle_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyExc_StopIteration = external global %struct._object*, align 8
@.str.19 = private unnamed_addr constant [9 x i8] c"O(O)(Oi)\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"Oi\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"cycle()\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"cycle\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"itertools.dropwhile\00", align 1
@dropwhile_doc = internal global [179 x i8] c"dropwhile(predicate, iterable) --> dropwhile object\0A\0ADrop items from the iterable while predicate(item) is true.\0AAfterwards, return every element until the iterable is exhausted.\00", align 16
@dropwhile_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.dropwhileobject*)* @dropwhile_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.dropwhileobject*, %struct._object*)* @dropwhile_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.24 = private unnamed_addr constant [7 x i8] c"O(OO)l\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"dropwhile()\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"dropwhile\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"itertools.takewhile\00", align 1
@takewhile_doc = internal global [156 x i8] c"takewhile(predicate, iterable) --> takewhile object\0A\0AReturn successive entries from an iterable as long as the \0Apredicate evaluates to true for each entry.\00", align 16
@takewhile_reduce_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.takewhileobject*)* @takewhile_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.takewhileobject*, %struct._object*)* @takewhile_reduce_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.28 = private unnamed_addr constant [12 x i8] c"takewhile()\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"takewhile\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"itertools.islice\00", align 1
@islice_doc = internal global [455 x i8] c"islice(iterable, stop) --> islice object\0Aislice(iterable, start, stop[, step]) --> islice object\0A\0AReturn an iterator whose next() method returns selected values from an\0Aiterable.  If start is specified, will skip all preceding elements;\0Aotherwise, start defaults to zero.  Step defaults to one.  If\0Aspecified as another value, step determines how many values are \0Askipped between successive calls.  Works like a slice() on a list\0Abut returns an iterator.\00", align 16
@islice_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.isliceobject*)* @islice_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.isliceobject*, %struct._object*)* @islice_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.31 = private unnamed_addr constant [7 x i8] c"O(Nn)n\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"O(OnNn)n\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"islice()\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"islice\00", align 1
@.str.35 = private unnamed_addr constant [78 x i8] c"Stop argument for islice() must be None or an integer: 0 <= x <= sys.maxsize.\00", align 1
@.str.36 = private unnamed_addr constant [72 x i8] c"Indices for islice() must be None or an integer: 0 <= x <= sys.maxsize.\00", align 1
@.str.37 = private unnamed_addr constant [54 x i8] c"Step for islice() must be a positive integer or None.\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"itertools.starmap\00", align 1
@starmap_doc = internal global [174 x i8] c"starmap(function, sequence) --> starmap object\0A\0AReturn an iterator whose values are returned from the function evaluated\0Awith a argument tuple taken from the given sequence.\00", align 16
@starmap_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.starmapobject*)* @starmap_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyTuple_Type = external global %struct._typeobject, align 8
@.str.39 = private unnamed_addr constant [6 x i8] c"O(OO)\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"starmap()\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"starmap\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"itertools.chain\00", align 1
@chain_doc = internal global [227 x i8] c"chain(*iterables) --> chain object\0A\0AReturn a chain object whose .__next__() method returns elements from the\0Afirst iterable until it is exhausted, then elements from the next\0Aiterable, until all of the iterables are exhausted.\00", align 16
@chain_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._typeobject*, %struct._object*)* @chain_new_from_iterable to %struct._object* (%struct._object*, %struct._object*)*), i32 24, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @chain_from_iterable_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.chainobject*)* @chain_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.chainobject*, %struct._object*)* @chain_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.43 = private unnamed_addr constant [14 x i8] c"from_iterable\00", align 1
@chain_from_iterable_doc = internal global [134 x i8] c"chain.from_iterable(iterable) --> chain object\0A\0AAlternate chain() contructor taking a single iterable argument\0Athat evaluates lazily.\00", align 16
@.str.44 = private unnamed_addr constant [8 x i8] c"O()(OO)\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"O()(O)\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"O()\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"O|O\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"chain()\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"itertools.compress\00", align 1
@compress_doc = internal global [223 x i8] c"compress(data, selectors) --> iterator over selected data\0A\0AReturn data elements corresponding to true selector elements.\0AForms a shorter iterator from selected data elements using the\0Aselectors to choose the data elements.\00", align 16
@compress_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.compressobject*)* @compress_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@compress_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i8* null], align 16
@.str.50 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"selectors\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"OO:compress\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"itertools.filterfalse\00", align 1
@filterfalse_doc = internal global [184 x i8] c"filterfalse(function or None, sequence) --> filterfalse object\0A\0AReturn those items of sequence for which function(item) is false.\0AIf function is None, return the items that are false.\00", align 16
@filterfalse_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.filterfalseobject*)* @filterfalse_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyBool_Type = external global %struct._typeobject, align 8
@.str.54 = private unnamed_addr constant [14 x i8] c"filterfalse()\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"filterfalse\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"itertools.count\00", align 1
@count_doc = internal global [248 x i8] c"count(start=0, step=1) --> count object\0A\0AReturn a count object whose .__next__() method returns consecutive values.\0AEquivalent to:\0A\0A    def count(firstval=0, step=1):\0A        x = firstval\0A        while 1:\0A            yield x\0A            x += step\0A\00", align 16
@count_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.countobject*)* @count_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.57 = private unnamed_addr constant [11 x i8] c"count(%zd)\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"count(%R)\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"count(%R, %R)\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"O(n)\00", align 1
@count_new.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i8* null], align 16
@.str.61 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"|OO:count\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.64 = private unnamed_addr constant [21 x i8] c"a number is required\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"itertools.zip_longest\00", align 1
@zip_longest_doc = internal global [505 x i8] c"zip_longest(iter1 [,iter2 [...]], [fillvalue=None]) --> zip_longest object\0A\0AReturn an zip_longest object whose .__next__() method returns a tuple where\0Athe i-th element comes from the i-th iterable argument.  The .__next__()\0Amethod continues until the longest iterable in the argument sequence\0Ais exhausted and then it raises StopIteration.  When the shorter iterables\0Aare exhausted, the fillvalue is substituted in their place.  The fillvalue\0Adefaults to None or can be specified by a keyword argument.\0A\00", align 16
@zip_longest_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ziplongestobject*)* @zip_longest_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ziplongestobject*, %struct._object*)* @zip_longest_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.66 = private unnamed_addr constant [4 x i8] c"ONO\00", align 1
@PyDict_Type = external global %struct._typeobject, align 8
@.str.67 = private unnamed_addr constant [10 x i8] c"fillvalue\00", align 1
@.str.68 = private unnamed_addr constant [49 x i8] c"zip_longest() got an unexpected keyword argument\00", align 1
@.str.69 = private unnamed_addr constant [49 x i8] c"zip_longest argument #%zd must support iteration\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"itertools.permutations\00", align 1
@permutations_doc = internal global [194 x i8] c"permutations(iterable[, r]) --> permutations object\0A\0AReturn successive r-length permutations of elements in the iterable.\0A\0Apermutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)\00", align 16
@permuations_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*)* @permutations_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*, %struct._object*)* @permutations_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*, i8*)* @permutations_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.71 = private unnamed_addr constant [10 x i8] c"O(On)(NN)\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"O!O!\00", align 1
@permutations_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [17 x i8] c"O|O:permutations\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"Expected int as r\00", align 1
@.str.75 = private unnamed_addr constant [18 x i8] c"itertools.product\00", align 1
@product_doc = internal global [732 x i8] c"product(*iterables, repeat=1) --> product object\0A\0ACartesian product of input iterables.  Equivalent to nested for-loops.\0A\0AFor example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).\0AThe leftmost iterators are in the outermost for-loop, so the output tuples\0Acycle in a manner similar to an odometer (with the rightmost element changing\0Aon every iteration).\0A\0ATo compute the product of an iterable with itself, specify the number\0Aof repetitions with the optional repeat keyword argument. For example,\0Aproduct(A, repeat=4) means the same as product(A, A, A, A).\0A\0Aproduct('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)\0Aproduct((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...\00", align 16
@product_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.productobject*)* @product_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.productobject*, %struct._object*)* @product_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.productobject*, i8*)* @product_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [6 x i8] c"O(())\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"OON\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@product_new.kwlist = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* null], align 16
@.str.80 = private unnamed_addr constant [11 x i8] c"|n:product\00", align 1
@.str.81 = private unnamed_addr constant [35 x i8] c"repeat argument cannot be negative\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"itertools.repeat\00", align 1
@repeat_doc = internal global [155 x i8] c"repeat(object [,times]) -> create an iterator which returns the object\0Afor the specified number of times.  If not specified, returns the object\0Aendlessly.\00", align 16
@repeat_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_len to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @length_hint_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.83 = private unnamed_addr constant [11 x i8] c"repeat(%R)\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"repeat(%R, %zd)\00", align 1
@.str.85 = private unnamed_addr constant [16 x i8] c"__length_hint__\00", align 1
@length_hint_doc = internal global [55 x i8] c"Private method returning an estimate of len(list(it)).\00", align 16
@.str.86 = private unnamed_addr constant [24 x i8] c"len() of unsized object\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"O(O)\00", align 1
@repeat_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* null], align 16
@.str.88 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"O|n:repeat\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"itertools.groupby\00", align 1
@groupby_doc = internal global [123 x i8] c"groupby(iterable[, keyfunc]) -> create an iterator which returns\0A(key, sub-iterator) grouped by each value of key(value).\0A\00", align 16
@groupby_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.groupbyobject*)* @groupby_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.groupbyobject*, %struct._object*)* @groupby_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.92 = private unnamed_addr constant [11 x i8] c"O(OO)(OOO)\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c"OOO\00", align 1
@groupby_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i8* null], align 16
@.str.94 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"O|O:groupby\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"itertools._grouper\00", align 1
@_grouper_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._grouperobject*)* @_grouper_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.97 = private unnamed_addr constant [4 x i8] c"O!O\00", align 1
@.str.98 = private unnamed_addr constant [15 x i8] c"itertools._tee\00", align 1
@teeobject_doc = internal global [37 x i8] c"Iterator wrapped to make it copyable\00", align 16
@tee_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teeobject*)* @tee_copy to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @teecopy_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teeobject*)* @tee_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teeobject*, %struct._object*)* @tee_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.99 = private unnamed_addr constant [9 x i8] c"__copy__\00", align 1
@teecopy_doc = internal global [33 x i8] c"Returns an independent iterator.\00", align 16
@.str.100 = private unnamed_addr constant [10 x i8] c"O(())(Oi)\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"O!i\00", align 1
@.str.102 = private unnamed_addr constant [19 x i8] c"Index out of range\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"_tee\00", align 1
@.str.104 = private unnamed_addr constant [26 x i8] c"itertools._tee_dataobject\00", align 1
@teedataobject_doc = internal global [47 x i8] c"Data container common to multiple tee objects.\00", align 16
@teedataobject_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teedataobject*)* @teedataobject_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.105 = private unnamed_addr constant [7 x i8] c"O(ONO)\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"OO!O\00", align 1
@PyList_Type = external global %struct._typeobject, align 8
@.str.107 = private unnamed_addr constant [18 x i8] c"Invalid arguments\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"itertools\00", align 1
@module_doc = internal global [1229 x i8] c"Functional tools for creating and using iterators.\0A\0AInfinite iterators:\0Acount(start=0, step=1) --> start, start+step, start+2*step, ...\0Acycle(p) --> p0, p1, ... plast, p0, p1, ...\0Arepeat(elem [,n]) --> elem, elem, elem, ... endlessly or up to n times\0A\0AIterators terminating on the shortest input sequence:\0Aaccumulate(p[, func]) --> p0, p0+p1, p0+p1+p2\0Achain(p, q, ...) --> p0, p1, ... plast, q0, q1, ... \0Achain.from_iterable([p, q, ...]) --> p0, p1, ... plast, q0, q1, ... \0Acompress(data, selectors) --> (d[0] if s[0]), (d[1] if s[1]), ...\0Adropwhile(pred, seq) --> seq[n], seq[n+1], starting when pred fails\0Agroupby(iterable[, keyfunc]) --> sub-iterators grouped by value of keyfunc(v)\0Afilterfalse(pred, seq) --> elements of seq where pred(elem) is False\0Aislice(seq, [start,] stop [, step]) --> elements from\0A       seq[start:stop:step]\0Astarmap(fun, seq) --> fun(*seq[0]), fun(*seq[1]), ...\0Atee(it, n=2) --> (it1, it2 , ... itn) splits one iterator into n\0Atakewhile(pred, seq) --> seq[0], seq[1], until pred fails\0Azip_longest(p, q, ...) --> (p[0], q[0]), (p[1], q[1]), ... \0A\0ACombinatoric generators:\0Aproduct(p, q, ... [repeat=1]) --> cartesian product\0Apermutations(p[, r])\0Acombinations(p, r)\0Acombinations_with_replacement(p, r)\0A\00", align 16
@module_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @tee, i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @tee_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.109 = private unnamed_addr constant [4 x i8] c"tee\00", align 1
@tee_doc = internal global [57 x i8] c"tee(iterable, n=2) --> tuple of n independent iterators.\00", align 16
@tee.PyId___copy__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), %struct._object* null }, align 8
@.str.110 = private unnamed_addr constant [4 x i8] c"O|n\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"n must be >= 0\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit_itertools() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %m = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %typelist = alloca [21 x %struct._typeobject*], align 16
  %cleanup.dest.slot = alloca i32
  %0 = bitcast i32* %i to i8*, !dbg !2665
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !2665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !546, metadata !2666), !dbg !2667
  %1 = bitcast %struct._object** %m to i8*, !dbg !2668
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2668
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !547, metadata !2666), !dbg !2669
  %2 = bitcast i8** %name to i8*, !dbg !2670
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2670
  call void @llvm.dbg.declare(metadata i8** %name, metadata !548, metadata !2666), !dbg !2671
  %3 = bitcast [21 x %struct._typeobject*]* %typelist to i8*, !dbg !2672
  call void @llvm.lifetime.start(i64 168, i8* %3) #1, !dbg !2672
  call void @llvm.dbg.declare(metadata [21 x %struct._typeobject*]* %typelist, metadata !549, metadata !2666), !dbg !2673
  %4 = bitcast [21 x %struct._typeobject*]* %typelist to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast ([21 x %struct._typeobject*]* @PyInit_itertools.typelist to i8*), i64 168, i32 16, i1 false), !dbg !2673
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @teedataobject_type, i32 0, i32 0, i32 0, i32 1), align 8, !dbg !2674, !tbaa !2675
  %call = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @itertoolsmodule, i32 1013), !dbg !2681
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !2682, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %m, align 8, !dbg !2684, !tbaa !2683
  %cmp = icmp eq %struct._object* %5, null, !dbg !2686
  br i1 %cmp, label %if.then, label %if.end, !dbg !2687

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2688
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2688

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2689, !tbaa !2691
  br label %for.cond, !dbg !2693

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !2694, !tbaa !2691
  %idxprom = sext i32 %6 to i64, !dbg !2698
  %arrayidx = getelementptr [21 x %struct._typeobject*], [21 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom, !dbg !2698
  %7 = load %struct._typeobject*, %struct._typeobject** %arrayidx, align 8, !dbg !2698, !tbaa !2683
  %cmp1 = icmp ne %struct._typeobject* %7, null, !dbg !2699
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2700

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !2701, !tbaa !2691
  %idxprom2 = sext i32 %8 to i64, !dbg !2704
  %arrayidx3 = getelementptr [21 x %struct._typeobject*], [21 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom2, !dbg !2704
  %9 = load %struct._typeobject*, %struct._typeobject** %arrayidx3, align 8, !dbg !2704, !tbaa !2683
  %call4 = call i32 @PyType_Ready(%struct._typeobject* %9), !dbg !2705
  %cmp5 = icmp slt i32 %call4, 0, !dbg !2706
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !2707

if.then.6:                                        ; preds = %for.body
  store %struct._object* null, %struct._object** %retval, !dbg !2708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2708

if.end.7:                                         ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !2709, !tbaa !2691
  %idxprom8 = sext i32 %10 to i64, !dbg !2710
  %arrayidx9 = getelementptr [21 x %struct._typeobject*], [21 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom8, !dbg !2710
  %11 = load %struct._typeobject*, %struct._typeobject** %arrayidx9, align 8, !dbg !2710, !tbaa !2683
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 1, !dbg !2711
  %12 = load i8*, i8** %tp_name, align 8, !dbg !2711, !tbaa !2712
  %call10 = call i8* @strchr(i8* %12, i32 46) #1, !dbg !2715
  store i8* %call10, i8** %name, align 8, !dbg !2716, !tbaa !2683
  %13 = load i32, i32* %i, align 4, !dbg !2717, !tbaa !2691
  %idxprom11 = sext i32 %13 to i64, !dbg !2718
  %arrayidx12 = getelementptr [21 x %struct._typeobject*], [21 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom11, !dbg !2718
  %14 = load %struct._typeobject*, %struct._typeobject** %arrayidx12, align 8, !dbg !2718, !tbaa !2683
  %15 = bitcast %struct._typeobject* %14 to %struct._object*, !dbg !2719
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !2720
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !2721, !tbaa !2722
  %inc = add i64 %16, 1, !dbg !2721
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2721, !tbaa !2722
  %17 = load %struct._object*, %struct._object** %m, align 8, !dbg !2723, !tbaa !2683
  %18 = load i8*, i8** %name, align 8, !dbg !2724, !tbaa !2683
  %add.ptr = getelementptr i8, i8* %18, i64 1, !dbg !2725
  %19 = load i32, i32* %i, align 4, !dbg !2726, !tbaa !2691
  %idxprom13 = sext i32 %19 to i64, !dbg !2727
  %arrayidx14 = getelementptr [21 x %struct._typeobject*], [21 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom13, !dbg !2727
  %20 = load %struct._typeobject*, %struct._typeobject** %arrayidx14, align 8, !dbg !2727, !tbaa !2683
  %21 = bitcast %struct._typeobject* %20 to %struct._object*, !dbg !2728
  %call15 = call i32 @PyModule_AddObject(%struct._object* %17, i8* %add.ptr, %struct._object* %21), !dbg !2729
  br label %for.inc, !dbg !2730

for.inc:                                          ; preds = %if.end.7
  %22 = load i32, i32* %i, align 4, !dbg !2731, !tbaa !2691
  %inc16 = add i32 %22, 1, !dbg !2731
  store i32 %inc16, i32* %i, align 4, !dbg !2731, !tbaa !2691
  br label %for.cond, !dbg !2732

for.end:                                          ; preds = %for.cond
  %23 = load %struct._object*, %struct._object** %m, align 8, !dbg !2733, !tbaa !2683
  store %struct._object* %23, %struct._object** %retval, !dbg !2734
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2734

cleanup:                                          ; preds = %for.end, %if.then.6, %if.then
  %24 = bitcast [21 x %struct._typeobject*]* %typelist to i8*, !dbg !2735
  call void @llvm.lifetime.end(i64 168, i8* %24) #1, !dbg !2735
  %25 = bitcast i8** %name to i8*, !dbg !2735
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !2735
  %26 = bitcast %struct._object** %m to i8*, !dbg !2735
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !2735
  %27 = bitcast i32* %i to i8*, !dbg !2735
  call void @llvm.lifetime.end(i64 4, i8* %27) #1, !dbg !2735
  %28 = load %struct._object*, %struct._object** %retval, !dbg !2735
  ret %struct._object* %28, !dbg !2735
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyType_Ready(%struct._typeobject*) #3

; Function Attrs: nounwind
declare i8* @strchr(i8*, i32) #4

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal void @accumulate_dealloc(%struct.accumulateobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.accumulateobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_xdecref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  store %struct.accumulateobject* %lz, %struct.accumulateobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.accumulateobject** %lz.addr, metadata !559, metadata !2666), !dbg !2736
  %0 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2737, !tbaa !2683
  %1 = bitcast %struct.accumulateobject* %0 to i8*, !dbg !2737
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !2738
  br label %do.body, !dbg !2739

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2740
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2740
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !560, metadata !2666), !dbg !2742
  %3 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2743, !tbaa !2683
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %3, i32 0, i32 3, !dbg !2744
  %4 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2744, !tbaa !2745
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2742, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2747, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !2748
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !2749

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !2750

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2752
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !2752
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !562, metadata !2666), !dbg !2754
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2755, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !2754, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2756, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2758
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !2759, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !2759
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2759, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !2760
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !2761

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !2762

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2764, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !2766
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2766, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !2767
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2767, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2769, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !2770
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2771
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !2771
  br label %do.cond, !dbg !2773

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2774

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !2776

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2778
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !2778
  br label %do.end.6, !dbg !2781

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !2782

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !2783
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !2783
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !565, metadata !2666), !dbg !2785
  %17 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2786, !tbaa !2683
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %17, i32 0, i32 1, !dbg !2787
  %18 = load %struct._object*, %struct._object** %total, align 8, !dbg !2787, !tbaa !2788
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !2785, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !2789, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !2790
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !2791

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !2792

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !2794
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !2794
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !567, metadata !2666), !dbg !2796
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !2797, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !2796, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !2798, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !2800
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !2801, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !2801
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !2801, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !2802
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !2803

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !2804

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !2806, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !2808
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !2808, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !2809
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !2809, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !2810, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !2811
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !2812
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !2812
  br label %do.cond.21, !dbg !2814

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !2815

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !2817

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !2819
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !2819
  br label %do.end.25, !dbg !2820

do.end.25:                                        ; preds = %if.end.23
  br label %do.body.26, !dbg !2821

do.body.26:                                       ; preds = %do.end.25
  %30 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !2822
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !2822
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp27, metadata !570, metadata !2666), !dbg !2824
  %31 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2825, !tbaa !2683
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %31, i32 0, i32 2, !dbg !2826
  %32 = load %struct._object*, %struct._object** %it, align 8, !dbg !2826, !tbaa !2827
  store %struct._object* %32, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !2824, !tbaa !2683
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !2828, !tbaa !2683
  %cmp28 = icmp ne %struct._object* %33, null, !dbg !2829
  br i1 %cmp28, label %if.then.29, label %if.end.42, !dbg !2830

if.then.29:                                       ; preds = %do.body.26
  br label %do.body.30, !dbg !2831

do.body.30:                                       ; preds = %if.then.29
  %34 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !2833
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !2833
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !572, metadata !2666), !dbg !2835
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !2836, !tbaa !2683
  store %struct._object* %35, %struct._object** %_py_decref_tmp31, align 8, !dbg !2835, !tbaa !2683
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !2837, !tbaa !2683
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !2839
  %37 = load i64, i64* %ob_refcnt32, align 8, !dbg !2840, !tbaa !2722
  %dec33 = add i64 %37, -1, !dbg !2840
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !2840, !tbaa !2722
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !2841
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !2842

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !2843

if.else.36:                                       ; preds = %do.body.30
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !2845, !tbaa !2683
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !2847
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !2847, !tbaa !2675
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !2848
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !2848, !tbaa !2768
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !2849, !tbaa !2683
  call void %40(%struct._object* %41), !dbg !2850
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %42 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !2851
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !2851
  br label %do.cond.40, !dbg !2853

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !2854

do.end.41:                                        ; preds = %do.cond.40
  br label %if.end.42, !dbg !2856

if.end.42:                                        ; preds = %do.end.41, %do.body.26
  %43 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !2858
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !2858
  br label %do.end.44, !dbg !2859

do.end.44:                                        ; preds = %if.end.42
  %44 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2860, !tbaa !2683
  %45 = bitcast %struct.accumulateobject* %44 to %struct._object*, !dbg !2861
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !2862
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !2862, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 38, !dbg !2863
  %47 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !2863, !tbaa !2864
  %48 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2865, !tbaa !2683
  %49 = bitcast %struct.accumulateobject* %48 to i8*, !dbg !2865
  call void %47(i8* %49), !dbg !2866
  ret void, !dbg !2867
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @accumulate_traverse(%struct.accumulateobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.accumulateobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  store %struct.accumulateobject* %lz, %struct.accumulateobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.accumulateobject** %lz.addr, metadata !579, metadata !2666), !dbg !2868
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !580, metadata !2666), !dbg !2869
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !581, metadata !2666), !dbg !2870
  br label %do.body, !dbg !2871

do.body:                                          ; preds = %entry
  %0 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2872, !tbaa !2683
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %0, i32 0, i32 3, !dbg !2874
  %1 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2874, !tbaa !2745
  %tobool = icmp ne %struct._object* %1, null, !dbg !2875
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !2876

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !2877
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !2877
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !582, metadata !2666), !dbg !2879
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2880, !tbaa !2683
  %4 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2881, !tbaa !2683
  %binop1 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %4, i32 0, i32 3, !dbg !2882
  %5 = load %struct._object*, %struct._object** %binop1, align 8, !dbg !2882, !tbaa !2745
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !2883, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !2880
  store i32 %call, i32* %vret, align 4, !dbg !2879, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !2884, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !2884
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !2886

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !2887, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !2889
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2889

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !2890
  br label %cleanup, !dbg !2890

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !2892
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !2892
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !2895

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !2896

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !2899

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2900, !tbaa !2683
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %10, i32 0, i32 2, !dbg !2902
  %11 = load %struct._object*, %struct._object** %it, align 8, !dbg !2902, !tbaa !2827
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !2903
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !2904

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !2905
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !2905
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !586, metadata !2666), !dbg !2907
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2908, !tbaa !2683
  %14 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2909, !tbaa !2683
  %it9 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %14, i32 0, i32 2, !dbg !2910
  %15 = load %struct._object*, %struct._object** %it9, align 8, !dbg !2910, !tbaa !2827
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !2911, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !2908
  store i32 %call10, i32* %vret8, align 4, !dbg !2907, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !2912, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !2912
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !2914

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !2915, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !2917
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !2917

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !2918
  br label %cleanup.14, !dbg !2918

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !2920
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !2920
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !2923

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !2924

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !2927

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2928, !tbaa !2683
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %20, i32 0, i32 1, !dbg !2930
  %21 = load %struct._object*, %struct._object** %total, align 8, !dbg !2930, !tbaa !2788
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !2931
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !2932

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !2933
  call void @llvm.lifetime.start(i64 4, i8* %22) #1, !dbg !2933
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !590, metadata !2666), !dbg !2935
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2936, !tbaa !2683
  %24 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2937, !tbaa !2683
  %total23 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %24, i32 0, i32 1, !dbg !2938
  %25 = load %struct._object*, %struct._object** %total23, align 8, !dbg !2938, !tbaa !2788
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !2939, !tbaa !2683
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !2936
  store i32 %call24, i32* %vret22, align 4, !dbg !2935, !tbaa !2691
  %27 = load i32, i32* %vret22, align 4, !dbg !2940, !tbaa !2691
  %tobool25 = icmp ne i32 %27, 0, !dbg !2940
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !2942

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !2943, !tbaa !2691
  store i32 %28, i32* %retval, !dbg !2945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !2945

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !2946
  br label %cleanup.28, !dbg !2946

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !2948
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !2948
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !2951

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !2952

do.end.32:                                        ; preds = %if.end.31
  store i32 0, i32* %retval, !dbg !2955
  br label %return, !dbg !2955

return:                                           ; preds = %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.32
  %30 = load i32, i32* %retval, !dbg !2956
  ret i32 %30, !dbg !2956
}

declare %struct._object* @PyObject_SelfIter(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_next(%struct.accumulateobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.accumulateobject*, align 8
  %val = alloca %struct._object*, align 8
  %oldtotal = alloca %struct._object*, align 8
  %newtotal = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  store %struct.accumulateobject* %lz, %struct.accumulateobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.accumulateobject** %lz.addr, metadata !598, metadata !2666), !dbg !2957
  %0 = bitcast %struct._object** %val to i8*, !dbg !2958
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2958
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !599, metadata !2666), !dbg !2959
  %1 = bitcast %struct._object** %oldtotal to i8*, !dbg !2958
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2958
  call void @llvm.dbg.declare(metadata %struct._object** %oldtotal, metadata !600, metadata !2666), !dbg !2960
  %2 = bitcast %struct._object** %newtotal to i8*, !dbg !2958
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2958
  call void @llvm.dbg.declare(metadata %struct._object** %newtotal, metadata !601, metadata !2666), !dbg !2961
  %3 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2962, !tbaa !2683
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %3, i32 0, i32 2, !dbg !2963
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !2963, !tbaa !2827
  %call = call %struct._object* @PyIter_Next(%struct._object* %4), !dbg !2964
  store %struct._object* %call, %struct._object** %val, align 8, !dbg !2965, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %val, align 8, !dbg !2966, !tbaa !2683
  %cmp = icmp eq %struct._object* %5, null, !dbg !2968
  br i1 %cmp, label %if.then, label %if.end, !dbg !2969

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2970
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2970

if.end:                                           ; preds = %entry
  %6 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2971, !tbaa !2683
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %6, i32 0, i32 1, !dbg !2973
  %7 = load %struct._object*, %struct._object** %total, align 8, !dbg !2973, !tbaa !2788
  %cmp1 = icmp eq %struct._object* %7, null, !dbg !2974
  br i1 %cmp1, label %if.then.2, label %if.end.5, !dbg !2975

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %val, align 8, !dbg !2976, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2978
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !2979, !tbaa !2722
  %inc = add i64 %9, 1, !dbg !2979
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2979, !tbaa !2722
  %10 = load %struct._object*, %struct._object** %val, align 8, !dbg !2980, !tbaa !2683
  %11 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2981, !tbaa !2683
  %total3 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %11, i32 0, i32 1, !dbg !2982
  store %struct._object* %10, %struct._object** %total3, align 8, !dbg !2983, !tbaa !2788
  %12 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2984, !tbaa !2683
  %total4 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %12, i32 0, i32 1, !dbg !2985
  %13 = load %struct._object*, %struct._object** %total4, align 8, !dbg !2985, !tbaa !2788
  store %struct._object* %13, %struct._object** %retval, !dbg !2986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2986

if.end.5:                                         ; preds = %if.end
  %14 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2987, !tbaa !2683
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %14, i32 0, i32 3, !dbg !2989
  %15 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2989, !tbaa !2745
  %cmp6 = icmp eq %struct._object* %15, null, !dbg !2990
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !2991

if.then.7:                                        ; preds = %if.end.5
  %16 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2992, !tbaa !2683
  %total8 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %16, i32 0, i32 1, !dbg !2993
  %17 = load %struct._object*, %struct._object** %total8, align 8, !dbg !2993, !tbaa !2788
  %18 = load %struct._object*, %struct._object** %val, align 8, !dbg !2994, !tbaa !2683
  %call9 = call %struct._object* @PyNumber_Add(%struct._object* %17, %struct._object* %18), !dbg !2995
  store %struct._object* %call9, %struct._object** %newtotal, align 8, !dbg !2996, !tbaa !2683
  br label %if.end.13, !dbg !2997

if.else:                                          ; preds = %if.end.5
  %19 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !2998, !tbaa !2683
  %binop10 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %19, i32 0, i32 3, !dbg !2999
  %20 = load %struct._object*, %struct._object** %binop10, align 8, !dbg !2999, !tbaa !2745
  %21 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3000, !tbaa !2683
  %total11 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %21, i32 0, i32 1, !dbg !3001
  %22 = load %struct._object*, %struct._object** %total11, align 8, !dbg !3001, !tbaa !2788
  %23 = load %struct._object*, %struct._object** %val, align 8, !dbg !3002, !tbaa !2683
  %call12 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %20, %struct._object* %22, %struct._object* %23, i8* null), !dbg !3003
  store %struct._object* %call12, %struct._object** %newtotal, align 8, !dbg !3004, !tbaa !2683
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.7
  br label %do.body, !dbg !3005

do.body:                                          ; preds = %if.end.13
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3006
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !3006
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !602, metadata !2666), !dbg !3008
  %25 = load %struct._object*, %struct._object** %val, align 8, !dbg !3009, !tbaa !2683
  store %struct._object* %25, %struct._object** %_py_decref_tmp, align 8, !dbg !3008, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3010, !tbaa !2683
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !3012
  %27 = load i64, i64* %ob_refcnt14, align 8, !dbg !3013, !tbaa !2722
  %dec = add i64 %27, -1, !dbg !3013
  store i64 %dec, i64* %ob_refcnt14, align 8, !dbg !3013, !tbaa !2722
  %cmp15 = icmp ne i64 %dec, 0, !dbg !3014
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !3015

if.then.16:                                       ; preds = %do.body
  br label %if.end.18, !dbg !3016

if.else.17:                                       ; preds = %do.body
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3018, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !3020
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3020, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !3021
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3021, !tbaa !2768
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3022, !tbaa !2683
  call void %30(%struct._object* %31), !dbg !3023
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.17, %if.then.16
  %32 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3024
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !3024
  br label %do.cond, !dbg !3026

do.cond:                                          ; preds = %if.end.18
  br label %do.end, !dbg !3027

do.end:                                           ; preds = %do.cond
  %33 = load %struct._object*, %struct._object** %newtotal, align 8, !dbg !3029, !tbaa !2683
  %cmp19 = icmp eq %struct._object* %33, null, !dbg !3031
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !3032

if.then.20:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !3033
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3033

if.end.21:                                        ; preds = %do.end
  %34 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3034, !tbaa !2683
  %total22 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %34, i32 0, i32 1, !dbg !3035
  %35 = load %struct._object*, %struct._object** %total22, align 8, !dbg !3035, !tbaa !2788
  store %struct._object* %35, %struct._object** %oldtotal, align 8, !dbg !3036, !tbaa !2683
  %36 = load %struct._object*, %struct._object** %newtotal, align 8, !dbg !3037, !tbaa !2683
  %37 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3038, !tbaa !2683
  %total23 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %37, i32 0, i32 1, !dbg !3039
  store %struct._object* %36, %struct._object** %total23, align 8, !dbg !3040, !tbaa !2788
  br label %do.body.24, !dbg !3041

do.body.24:                                       ; preds = %if.end.21
  %38 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !3042
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !3042
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp25, metadata !604, metadata !2666), !dbg !3044
  %39 = load %struct._object*, %struct._object** %oldtotal, align 8, !dbg !3045, !tbaa !2683
  store %struct._object* %39, %struct._object** %_py_decref_tmp25, align 8, !dbg !3044, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !3046, !tbaa !2683
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !3048
  %41 = load i64, i64* %ob_refcnt26, align 8, !dbg !3049, !tbaa !2722
  %dec27 = add i64 %41, -1, !dbg !3049
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !3049, !tbaa !2722
  %cmp28 = icmp ne i64 %dec27, 0, !dbg !3050
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !3051

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33, !dbg !3052

if.else.30:                                       ; preds = %do.body.24
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !3054, !tbaa !2683
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !3056
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !3056, !tbaa !2675
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !3057
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !3057, !tbaa !2768
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !3058, !tbaa !2683
  call void %44(%struct._object* %45), !dbg !3059
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  %46 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !3060
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !3060
  br label %do.cond.34, !dbg !3061

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !3062

do.end.35:                                        ; preds = %do.cond.34
  %47 = load %struct._object*, %struct._object** %newtotal, align 8, !dbg !3064, !tbaa !2683
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !3065
  %48 = load i64, i64* %ob_refcnt36, align 8, !dbg !3066, !tbaa !2722
  %inc37 = add i64 %48, 1, !dbg !3066
  store i64 %inc37, i64* %ob_refcnt36, align 8, !dbg !3066, !tbaa !2722
  %49 = load %struct._object*, %struct._object** %newtotal, align 8, !dbg !3067, !tbaa !2683
  store %struct._object* %49, %struct._object** %retval, !dbg !3068
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3068

cleanup:                                          ; preds = %do.end.35, %if.then.20, %if.then.2, %if.then
  %50 = bitcast %struct._object** %newtotal to i8*, !dbg !3069
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !3069
  %51 = bitcast %struct._object** %oldtotal to i8*, !dbg !3069
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !3069
  %52 = bitcast %struct._object** %val to i8*, !dbg !3069
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !3069
  %53 = load %struct._object*, %struct._object** %retval, !dbg !3069
  ret %struct._object* %53, !dbg !3069
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %binop = alloca %struct._object*, align 8
  %lz = alloca %struct.accumulateobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !625, metadata !2666), !dbg !3070
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !626, metadata !2666), !dbg !3071
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !627, metadata !2666), !dbg !3072
  %0 = bitcast %struct._object** %iterable to i8*, !dbg !3073
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3073
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !628, metadata !2666), !dbg !3074
  %1 = bitcast %struct._object** %it to i8*, !dbg !3075
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3075
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !629, metadata !2666), !dbg !3076
  %2 = bitcast %struct._object** %binop to i8*, !dbg !3077
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3077
  call void @llvm.dbg.declare(metadata %struct._object** %binop, metadata !630, metadata !2666), !dbg !3078
  store %struct._object* @_Py_NoneStruct, %struct._object** %binop, align 8, !dbg !3078, !tbaa !2683
  %3 = bitcast %struct.accumulateobject** %lz to i8*, !dbg !3079
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3079
  call void @llvm.dbg.declare(metadata %struct.accumulateobject** %lz, metadata !631, metadata !2666), !dbg !3080
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3081, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3083, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @accumulate_new.kwargs, i32 0, i32 0), %struct._object** %iterable, %struct._object** %binop), !dbg !3084
  %tobool = icmp ne i32 %call, 0, !dbg !3084
  br i1 %tobool, label %if.end, label %if.then, !dbg !3085

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3086
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3086

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !3087, !tbaa !2683
  %call1 = call %struct._object* @PyObject_GetIter(%struct._object* %6), !dbg !3088
  store %struct._object* %call1, %struct._object** %it, align 8, !dbg !3089, !tbaa !2683
  %7 = load %struct._object*, %struct._object** %it, align 8, !dbg !3090, !tbaa !2683
  %cmp = icmp eq %struct._object* %7, null, !dbg !3092
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !3093

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3094
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3094

if.end.3:                                         ; preds = %if.end
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3095, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 36, !dbg !3096
  %9 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3096, !tbaa !3097
  %10 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3098, !tbaa !2683
  %call4 = call %struct._object* %9(%struct._typeobject* %10, i64 0), !dbg !3095
  %11 = bitcast %struct._object* %call4 to %struct.accumulateobject*, !dbg !3099
  store %struct.accumulateobject* %11, %struct.accumulateobject** %lz, align 8, !dbg !3100, !tbaa !2683
  %12 = load %struct.accumulateobject*, %struct.accumulateobject** %lz, align 8, !dbg !3101, !tbaa !2683
  %cmp5 = icmp eq %struct.accumulateobject* %12, null, !dbg !3102
  br i1 %cmp5, label %if.then.6, label %if.end.10, !dbg !3103

if.then.6:                                        ; preds = %if.end.3
  br label %do.body, !dbg !3104

do.body:                                          ; preds = %if.then.6
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3105
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !3105
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !632, metadata !2666), !dbg !3107
  %14 = load %struct._object*, %struct._object** %it, align 8, !dbg !3108, !tbaa !2683
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !3107, !tbaa !2683
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3109, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !3111
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !3112, !tbaa !2722
  %dec = add i64 %16, -1, !dbg !3112
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3112, !tbaa !2722
  %cmp7 = icmp ne i64 %dec, 0, !dbg !3113
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !3114

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !3115

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3117, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !3119
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3119, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !3120
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3120, !tbaa !2768
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3121, !tbaa !2683
  call void %19(%struct._object* %20), !dbg !3122
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3123
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !3123
  br label %do.cond, !dbg !3125

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !3126

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3128
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3128

if.end.10:                                        ; preds = %if.end.3
  %22 = load %struct._object*, %struct._object** %binop, align 8, !dbg !3129, !tbaa !2683
  %cmp11 = icmp ne %struct._object* %22, @_Py_NoneStruct, !dbg !3130
  br i1 %cmp11, label %if.then.12, label %if.end.21, !dbg !3131

if.then.12:                                       ; preds = %if.end.10
  br label %do.body.13, !dbg !3132

do.body.13:                                       ; preds = %if.then.12
  %23 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !3133
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !3133
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !636, metadata !2666), !dbg !3135
  %24 = load %struct._object*, %struct._object** %binop, align 8, !dbg !3136, !tbaa !2683
  store %struct._object* %24, %struct._object** %_py_xincref_tmp, align 8, !dbg !3135, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !3137, !tbaa !2683
  %cmp14 = icmp ne %struct._object* %25, null, !dbg !3139
  br i1 %cmp14, label %if.then.15, label %if.end.17, !dbg !3140

if.then.15:                                       ; preds = %do.body.13
  %26 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !3141, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !3143
  %27 = load i64, i64* %ob_refcnt16, align 8, !dbg !3144, !tbaa !2722
  %inc = add i64 %27, 1, !dbg !3144
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !3144, !tbaa !2722
  br label %if.end.17, !dbg !3145

if.end.17:                                        ; preds = %if.then.15, %do.body.13
  %28 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !3146
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !3146
  br label %do.cond.18, !dbg !3149

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !3150

do.end.19:                                        ; preds = %do.cond.18
  %29 = load %struct._object*, %struct._object** %binop, align 8, !dbg !3152, !tbaa !2683
  %30 = load %struct.accumulateobject*, %struct.accumulateobject** %lz, align 8, !dbg !3153, !tbaa !2683
  %binop20 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %30, i32 0, i32 3, !dbg !3154
  store %struct._object* %29, %struct._object** %binop20, align 8, !dbg !3155, !tbaa !2745
  br label %if.end.21, !dbg !3156

if.end.21:                                        ; preds = %do.end.19, %if.end.10
  %31 = load %struct.accumulateobject*, %struct.accumulateobject** %lz, align 8, !dbg !3157, !tbaa !2683
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %31, i32 0, i32 1, !dbg !3158
  store %struct._object* null, %struct._object** %total, align 8, !dbg !3159, !tbaa !2788
  %32 = load %struct._object*, %struct._object** %it, align 8, !dbg !3160, !tbaa !2683
  %33 = load %struct.accumulateobject*, %struct.accumulateobject** %lz, align 8, !dbg !3161, !tbaa !2683
  %it22 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %33, i32 0, i32 2, !dbg !3162
  store %struct._object* %32, %struct._object** %it22, align 8, !dbg !3163, !tbaa !2827
  %34 = load %struct.accumulateobject*, %struct.accumulateobject** %lz, align 8, !dbg !3164, !tbaa !2683
  %35 = bitcast %struct.accumulateobject* %34 to %struct._object*, !dbg !3165
  store %struct._object* %35, %struct._object** %retval, !dbg !3166
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3166

cleanup:                                          ; preds = %if.end.21, %do.end, %if.then.2, %if.then
  %36 = bitcast %struct.accumulateobject** %lz to i8*, !dbg !3167
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !3167
  %37 = bitcast %struct._object** %binop to i8*, !dbg !3167
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !3167
  %38 = bitcast %struct._object** %it to i8*, !dbg !3167
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3167
  %39 = bitcast %struct._object** %iterable to i8*, !dbg !3167
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !3167
  %40 = load %struct._object*, %struct._object** %retval, !dbg !3167
  ret %struct._object* %40, !dbg !3167
}

declare void @PyObject_GC_Del(i8*) #3

declare void @PyObject_GC_UnTrack(i8*) #3

declare %struct._object* @PyIter_Next(%struct._object*) #3

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_CallFunctionObjArgs(%struct._object*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_reduce(%struct.accumulateobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.accumulateobject*, align 8
  store %struct.accumulateobject* %lz, %struct.accumulateobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.accumulateobject** %lz.addr, metadata !608, metadata !2666), !dbg !3168
  %0 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3169, !tbaa !2683
  %1 = bitcast %struct.accumulateobject* %0 to %struct._object*, !dbg !3170
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !3171
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3171, !tbaa !2675
  %3 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3172, !tbaa !2683
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %3, i32 0, i32 2, !dbg !3173
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !3173, !tbaa !2827
  %5 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3174, !tbaa !2683
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %5, i32 0, i32 3, !dbg !3175
  %6 = load %struct._object*, %struct._object** %binop, align 8, !dbg !3175, !tbaa !2745
  %tobool = icmp ne %struct._object* %6, null, !dbg !3174
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3174

cond.true:                                        ; preds = %entry
  %7 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3176, !tbaa !2683
  %binop1 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %7, i32 0, i32 3, !dbg !3178
  %8 = load %struct._object*, %struct._object** %binop1, align 8, !dbg !3178, !tbaa !2745
  br label %cond.end, !dbg !3174

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %8, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !3174
  %9 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3181, !tbaa !2683
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %9, i32 0, i32 1, !dbg !3182
  %10 = load %struct._object*, %struct._object** %total, align 8, !dbg !3182, !tbaa !2788
  %tobool2 = icmp ne %struct._object* %10, null, !dbg !3181
  br i1 %tobool2, label %cond.true.3, label %cond.false.5, !dbg !3181

cond.true.3:                                      ; preds = %cond.end
  %11 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3183, !tbaa !2683
  %total4 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %11, i32 0, i32 1, !dbg !3184
  %12 = load %struct._object*, %struct._object** %total4, align 8, !dbg !3184, !tbaa !2788
  br label %cond.end.6, !dbg !3181

cond.false.5:                                     ; preds = %cond.end
  br label %cond.end.6, !dbg !3185

cond.end.6:                                       ; preds = %cond.false.5, %cond.true.3
  %cond7 = phi %struct._object* [ %12, %cond.true.3 ], [ @_Py_NoneStruct, %cond.false.5 ], !dbg !3181
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %cond, %struct._object* %cond7), !dbg !3186
  ret %struct._object* %call, !dbg !3187
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_setstate(%struct.accumulateobject* %lz, %struct._object* %state) #0 {
entry:
  %lz.addr = alloca %struct.accumulateobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.accumulateobject* %lz, %struct.accumulateobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.accumulateobject** %lz.addr, metadata !613, metadata !2666), !dbg !3188
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !614, metadata !2666), !dbg !3189
  br label %do.body, !dbg !3190

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3191
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3191
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !615, metadata !2666), !dbg !3193
  %1 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3194, !tbaa !2683
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %1, i32 0, i32 1, !dbg !3195
  %2 = load %struct._object*, %struct._object** %total, align 8, !dbg !3195, !tbaa !2788
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !3193, !tbaa !2683
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3196, !tbaa !2683
  %cmp = icmp ne %struct._object* %3, null, !dbg !3197
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !3198

if.then:                                          ; preds = %do.body
  %4 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3199, !tbaa !2683
  %total1 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %4, i32 0, i32 1, !dbg !3201
  store %struct._object* null, %struct._object** %total1, align 8, !dbg !3202, !tbaa !2788
  br label %do.body.2, !dbg !3203

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3204
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3204
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !617, metadata !2666), !dbg !3206
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3207, !tbaa !2683
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !3206, !tbaa !2683
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3208, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !3210
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !3211, !tbaa !2722
  %dec = add i64 %8, -1, !dbg !3211
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3211, !tbaa !2722
  %cmp3 = icmp ne i64 %dec, 0, !dbg !3212
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3213

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !3214

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3216, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !3218
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3218, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !3219
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3219, !tbaa !2768
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3220, !tbaa !2683
  call void %11(%struct._object* %12), !dbg !3221
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3222
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !3222
  br label %do.cond, !dbg !3224

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3225

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !3227

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3229
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !3229
  br label %do.end.7, !dbg !3232

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !3233, !tbaa !2683
  %16 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3234, !tbaa !2683
  %total8 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %16, i32 0, i32 1, !dbg !3235
  store %struct._object* %15, %struct._object** %total8, align 8, !dbg !3236, !tbaa !2788
  %17 = load %struct.accumulateobject*, %struct.accumulateobject** %lz.addr, align 8, !dbg !3237, !tbaa !2683
  %total9 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %17, i32 0, i32 1, !dbg !3238
  %18 = load %struct._object*, %struct._object** %total9, align 8, !dbg !3238, !tbaa !2788
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !3239
  %19 = load i64, i64* %ob_refcnt10, align 8, !dbg !3240, !tbaa !2722
  %inc = add i64 %19, 1, !dbg !3240
  store i64 %inc, i64* %ob_refcnt10, align 8, !dbg !3240, !tbaa !2722
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3241, !tbaa !2722
  %inc11 = add i64 %20, 1, !dbg !3241
  store i64 %inc11, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3241, !tbaa !2722
  ret %struct._object* @_Py_NoneStruct, !dbg !3242
}

declare %struct._object* @Py_BuildValue(i8*, ...) #3

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #3

declare %struct._object* @PyObject_GetIter(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @combinations_dealloc(%struct.combinationsobject* %co) #0 {
entry:
  %co.addr = alloca %struct.combinationsobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.combinationsobject* %co, %struct.combinationsobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %co.addr, metadata !644, metadata !2666), !dbg !3243
  %0 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3244, !tbaa !2683
  %1 = bitcast %struct.combinationsobject* %0 to i8*, !dbg !3244
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !3245
  br label %do.body, !dbg !3246

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3247
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3247
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !645, metadata !2666), !dbg !3249
  %3 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3250, !tbaa !2683
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %3, i32 0, i32 1, !dbg !3251
  %4 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3251, !tbaa !3252
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3249, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3254, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !3255
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !3256

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !3257

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3259
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !3259
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !647, metadata !2666), !dbg !3261
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3262, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !3261, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3263, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !3265
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !3266, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !3266
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3266, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !3267
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !3268

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !3269

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3271, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !3273
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3273, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !3274
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3274, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3275, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !3276
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3277
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !3277
  br label %do.cond, !dbg !3279

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3280

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !3282

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3284
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !3284
  br label %do.end.6, !dbg !3287

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !3288

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !3289
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !3289
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !650, metadata !2666), !dbg !3291
  %17 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3292, !tbaa !2683
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %17, i32 0, i32 3, !dbg !3293
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !3293, !tbaa !3294
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !3291, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !3295, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !3296
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !3297

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !3298

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !3300
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !3300
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !652, metadata !2666), !dbg !3302
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !3303, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !3302, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !3304, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !3306
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !3307, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !3307
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !3307, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !3308
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !3309

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !3310

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !3312, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !3314
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !3314, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !3315
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !3315, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !3316, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !3317
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !3318
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !3318
  br label %do.cond.21, !dbg !3320

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !3321

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !3323

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !3325
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !3325
  br label %do.end.25, !dbg !3326

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3327, !tbaa !2683
  %indices = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %30, i32 0, i32 2, !dbg !3329
  %31 = load i64*, i64** %indices, align 8, !dbg !3329, !tbaa !3330
  %cmp26 = icmp ne i64* %31, null, !dbg !3331
  br i1 %cmp26, label %if.then.27, label %if.end.29, !dbg !3332

if.then.27:                                       ; preds = %do.end.25
  %32 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3333, !tbaa !2683
  %indices28 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %32, i32 0, i32 2, !dbg !3334
  %33 = load i64*, i64** %indices28, align 8, !dbg !3334, !tbaa !3330
  %34 = bitcast i64* %33 to i8*, !dbg !3333
  call void @PyMem_Free(i8* %34), !dbg !3335
  br label %if.end.29, !dbg !3335

if.end.29:                                        ; preds = %if.then.27, %do.end.25
  %35 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3336, !tbaa !2683
  %36 = bitcast %struct.combinationsobject* %35 to %struct._object*, !dbg !3337
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !3338
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !3338, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 38, !dbg !3339
  %38 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3339, !tbaa !2864
  %39 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3340, !tbaa !2683
  %40 = bitcast %struct.combinationsobject* %39 to i8*, !dbg !3340
  call void %38(i8* %40), !dbg !3341
  ret void, !dbg !3342
}

; Function Attrs: nounwind uwtable
define internal i32 @combinations_traverse(%struct.combinationsobject* %co, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %co.addr = alloca %struct.combinationsobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.combinationsobject* %co, %struct.combinationsobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %co.addr, metadata !659, metadata !2666), !dbg !3343
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !660, metadata !2666), !dbg !3344
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !661, metadata !2666), !dbg !3345
  br label %do.body, !dbg !3346

do.body:                                          ; preds = %entry
  %0 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3347, !tbaa !2683
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %0, i32 0, i32 1, !dbg !3349
  %1 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3349, !tbaa !3252
  %tobool = icmp ne %struct._object* %1, null, !dbg !3350
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !3351

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !3352
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !3352
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !662, metadata !2666), !dbg !3354
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !3355, !tbaa !2683
  %4 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3356, !tbaa !2683
  %pool1 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %4, i32 0, i32 1, !dbg !3357
  %5 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !3357, !tbaa !3252
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !3358, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !3355
  store i32 %call, i32* %vret, align 4, !dbg !3354, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !3359, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !3359
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !3361

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !3362, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !3364
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3364

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !3365
  br label %cleanup, !dbg !3365

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !3367
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !3367
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !3370

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !3371

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !3374

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3375, !tbaa !2683
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %10, i32 0, i32 3, !dbg !3377
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !3377, !tbaa !3294
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !3378
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !3379

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !3380
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !3380
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !666, metadata !2666), !dbg !3382
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !3383, !tbaa !2683
  %14 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3384, !tbaa !2683
  %result9 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %14, i32 0, i32 3, !dbg !3385
  %15 = load %struct._object*, %struct._object** %result9, align 8, !dbg !3385, !tbaa !3294
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !3386, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !3383
  store i32 %call10, i32* %vret8, align 4, !dbg !3382, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !3387, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !3387
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !3389

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !3390, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !3392
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !3392

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !3393
  br label %cleanup.14, !dbg !3393

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !3395
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !3395
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !3398

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !3399

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !3402
  br label %return, !dbg !3402

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !3403
  ret i32 %20, !dbg !3403
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_next(%struct.combinationsobject* %co) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %co.addr = alloca %struct.combinationsobject*, align 8
  %elem = alloca %struct._object*, align 8
  %oldelem = alloca %struct._object*, align 8
  %pool = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %result = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %r = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %index = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %old_result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp79 = alloca %struct._object*, align 8
  store %struct.combinationsobject* %co, %struct.combinationsobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %co.addr, metadata !674, metadata !2666), !dbg !3404
  %0 = bitcast %struct._object** %elem to i8*, !dbg !3405
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3405
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !675, metadata !2666), !dbg !3406
  %1 = bitcast %struct._object** %oldelem to i8*, !dbg !3407
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3407
  call void @llvm.dbg.declare(metadata %struct._object** %oldelem, metadata !676, metadata !2666), !dbg !3408
  %2 = bitcast %struct._object** %pool to i8*, !dbg !3409
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3409
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !677, metadata !2666), !dbg !3410
  %3 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3411, !tbaa !2683
  %pool1 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %3, i32 0, i32 1, !dbg !3412
  %4 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !3412, !tbaa !3252
  store %struct._object* %4, %struct._object** %pool, align 8, !dbg !3410, !tbaa !2683
  %5 = bitcast i64** %indices to i8*, !dbg !3413
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3413
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !678, metadata !2666), !dbg !3414
  %6 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3415, !tbaa !2683
  %indices2 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %6, i32 0, i32 2, !dbg !3416
  %7 = load i64*, i64** %indices2, align 8, !dbg !3416, !tbaa !3330
  store i64* %7, i64** %indices, align 8, !dbg !3414, !tbaa !2683
  %8 = bitcast %struct._object** %result to i8*, !dbg !3417
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !3417
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !679, metadata !2666), !dbg !3418
  %9 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3419, !tbaa !2683
  %result3 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %9, i32 0, i32 3, !dbg !3420
  %10 = load %struct._object*, %struct._object** %result3, align 8, !dbg !3420, !tbaa !3294
  store %struct._object* %10, %struct._object** %result, align 8, !dbg !3418, !tbaa !2683
  %11 = bitcast i64* %n to i8*, !dbg !3421
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !3421
  call void @llvm.dbg.declare(metadata i64* %n, metadata !680, metadata !2666), !dbg !3422
  %12 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3423, !tbaa !2683
  %13 = bitcast %struct._object* %12 to %struct.PyVarObject*, !dbg !3424
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1, !dbg !3425
  %14 = load i64, i64* %ob_size, align 8, !dbg !3425, !tbaa !3426
  store i64 %14, i64* %n, align 8, !dbg !3422, !tbaa !3427
  %15 = bitcast i64* %r to i8*, !dbg !3428
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !3428
  call void @llvm.dbg.declare(metadata i64* %r, metadata !681, metadata !2666), !dbg !3429
  %16 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3430, !tbaa !2683
  %r4 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %16, i32 0, i32 4, !dbg !3431
  %17 = load i64, i64* %r4, align 8, !dbg !3431, !tbaa !3432
  store i64 %17, i64* %r, align 8, !dbg !3429, !tbaa !3427
  %18 = bitcast i64* %i to i8*, !dbg !3433
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !3433
  call void @llvm.dbg.declare(metadata i64* %i, metadata !682, metadata !2666), !dbg !3434
  %19 = bitcast i64* %j to i8*, !dbg !3433
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !3433
  call void @llvm.dbg.declare(metadata i64* %j, metadata !683, metadata !2666), !dbg !3435
  %20 = bitcast i64* %index to i8*, !dbg !3433
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !3433
  call void @llvm.dbg.declare(metadata i64* %index, metadata !684, metadata !2666), !dbg !3436
  %21 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3437, !tbaa !2683
  %stopped = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %21, i32 0, i32 5, !dbg !3439
  %22 = load i32, i32* %stopped, align 4, !dbg !3439, !tbaa !3440
  %tobool = icmp ne i32 %22, 0, !dbg !3437
  br i1 %tobool, label %if.then, label %if.end, !dbg !3441

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3442
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.97, !dbg !3442

if.end:                                           ; preds = %entry
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !3443, !tbaa !2683
  %cmp = icmp eq %struct._object* %23, null, !dbg !3444
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !3445

if.then.5:                                        ; preds = %if.end
  %24 = load i64, i64* %r, align 8, !dbg !3446, !tbaa !3427
  %call = call %struct._object* @PyTuple_New(i64 %24), !dbg !3448
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !3449, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %result, align 8, !dbg !3450, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %25, null, !dbg !3452
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !3453

if.then.7:                                        ; preds = %if.then.5
  br label %empty, !dbg !3454

if.end.8:                                         ; preds = %if.then.5
  %26 = load %struct._object*, %struct._object** %result, align 8, !dbg !3455, !tbaa !2683
  %27 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3456, !tbaa !2683
  %result9 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %27, i32 0, i32 3, !dbg !3457
  store %struct._object* %26, %struct._object** %result9, align 8, !dbg !3458, !tbaa !3294
  store i64 0, i64* %i, align 8, !dbg !3459, !tbaa !3427
  br label %for.cond, !dbg !3461

for.cond:                                         ; preds = %for.inc, %if.end.8
  %28 = load i64, i64* %i, align 8, !dbg !3462, !tbaa !3427
  %29 = load i64, i64* %r, align 8, !dbg !3466, !tbaa !3427
  %cmp10 = icmp slt i64 %28, %29, !dbg !3467
  br i1 %cmp10, label %for.body, label %for.end, !dbg !3468

for.body:                                         ; preds = %for.cond
  %30 = load i64, i64* %i, align 8, !dbg !3469, !tbaa !3427
  %31 = load i64*, i64** %indices, align 8, !dbg !3471, !tbaa !2683
  %arrayidx = getelementptr i64, i64* %31, i64 %30, !dbg !3471
  %32 = load i64, i64* %arrayidx, align 8, !dbg !3471, !tbaa !3427
  store i64 %32, i64* %index, align 8, !dbg !3472, !tbaa !3427
  %33 = load i64, i64* %index, align 8, !dbg !3473, !tbaa !3427
  %34 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3474, !tbaa !2683
  %35 = bitcast %struct._object* %34 to %struct.PyTupleObject*, !dbg !3475
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %35, i32 0, i32 1, !dbg !3476
  %arrayidx11 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %33, !dbg !3477
  %36 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !3477, !tbaa !2683
  store %struct._object* %36, %struct._object** %elem, align 8, !dbg !3478, !tbaa !2683
  %37 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3479, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !3480
  %38 = load i64, i64* %ob_refcnt, align 8, !dbg !3481, !tbaa !2722
  %inc = add i64 %38, 1, !dbg !3481
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3481, !tbaa !2722
  %39 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3482, !tbaa !2683
  %40 = load i64, i64* %i, align 8, !dbg !3483, !tbaa !3427
  %41 = load %struct._object*, %struct._object** %result, align 8, !dbg !3484, !tbaa !2683
  %42 = bitcast %struct._object* %41 to %struct.PyTupleObject*, !dbg !3485
  %ob_item12 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %42, i32 0, i32 1, !dbg !3486
  %arrayidx13 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item12, i32 0, i64 %40, !dbg !3487
  store %struct._object* %39, %struct._object** %arrayidx13, align 8, !dbg !3488, !tbaa !2683
  br label %for.inc, !dbg !3489

for.inc:                                          ; preds = %for.body
  %43 = load i64, i64* %i, align 8, !dbg !3490, !tbaa !3427
  %inc14 = add i64 %43, 1, !dbg !3490
  store i64 %inc14, i64* %i, align 8, !dbg !3490, !tbaa !3427
  br label %for.cond, !dbg !3491

for.end:                                          ; preds = %for.cond
  br label %if.end.93, !dbg !3492

if.else:                                          ; preds = %if.end
  %44 = load %struct._object*, %struct._object** %result, align 8, !dbg !3493, !tbaa !2683
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !3494
  %45 = load i64, i64* %ob_refcnt15, align 8, !dbg !3494, !tbaa !2722
  %cmp16 = icmp sgt i64 %45, 1, !dbg !3495
  br i1 %cmp16, label %if.then.17, label %if.end.40, !dbg !3496

if.then.17:                                       ; preds = %if.else
  %46 = bitcast %struct._object** %old_result to i8*, !dbg !3497
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !3497
  call void @llvm.dbg.declare(metadata %struct._object** %old_result, metadata !685, metadata !2666), !dbg !3498
  %47 = load %struct._object*, %struct._object** %result, align 8, !dbg !3499, !tbaa !2683
  store %struct._object* %47, %struct._object** %old_result, align 8, !dbg !3498, !tbaa !2683
  %48 = load i64, i64* %r, align 8, !dbg !3500, !tbaa !3427
  %call18 = call %struct._object* @PyTuple_New(i64 %48), !dbg !3501
  store %struct._object* %call18, %struct._object** %result, align 8, !dbg !3502, !tbaa !2683
  %49 = load %struct._object*, %struct._object** %result, align 8, !dbg !3503, !tbaa !2683
  %cmp19 = icmp eq %struct._object* %49, null, !dbg !3505
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !3506

if.then.20:                                       ; preds = %if.then.17
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3507

if.end.21:                                        ; preds = %if.then.17
  %50 = load %struct._object*, %struct._object** %result, align 8, !dbg !3508, !tbaa !2683
  %51 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3509, !tbaa !2683
  %result22 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %51, i32 0, i32 3, !dbg !3510
  store %struct._object* %50, %struct._object** %result22, align 8, !dbg !3511, !tbaa !3294
  store i64 0, i64* %i, align 8, !dbg !3512, !tbaa !3427
  br label %for.cond.23, !dbg !3514

for.cond.23:                                      ; preds = %for.inc.32, %if.end.21
  %52 = load i64, i64* %i, align 8, !dbg !3515, !tbaa !3427
  %53 = load i64, i64* %r, align 8, !dbg !3519, !tbaa !3427
  %cmp24 = icmp slt i64 %52, %53, !dbg !3520
  br i1 %cmp24, label %for.body.25, label %for.end.34, !dbg !3521

for.body.25:                                      ; preds = %for.cond.23
  %54 = load i64, i64* %i, align 8, !dbg !3522, !tbaa !3427
  %55 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !3524, !tbaa !2683
  %56 = bitcast %struct._object* %55 to %struct.PyTupleObject*, !dbg !3525
  %ob_item26 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %56, i32 0, i32 1, !dbg !3526
  %arrayidx27 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item26, i32 0, i64 %54, !dbg !3527
  %57 = load %struct._object*, %struct._object** %arrayidx27, align 8, !dbg !3527, !tbaa !2683
  store %struct._object* %57, %struct._object** %elem, align 8, !dbg !3528, !tbaa !2683
  %58 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3529, !tbaa !2683
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !3530
  %59 = load i64, i64* %ob_refcnt28, align 8, !dbg !3531, !tbaa !2722
  %inc29 = add i64 %59, 1, !dbg !3531
  store i64 %inc29, i64* %ob_refcnt28, align 8, !dbg !3531, !tbaa !2722
  %60 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3532, !tbaa !2683
  %61 = load i64, i64* %i, align 8, !dbg !3533, !tbaa !3427
  %62 = load %struct._object*, %struct._object** %result, align 8, !dbg !3534, !tbaa !2683
  %63 = bitcast %struct._object* %62 to %struct.PyTupleObject*, !dbg !3535
  %ob_item30 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %63, i32 0, i32 1, !dbg !3536
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item30, i32 0, i64 %61, !dbg !3537
  store %struct._object* %60, %struct._object** %arrayidx31, align 8, !dbg !3538, !tbaa !2683
  br label %for.inc.32, !dbg !3539

for.inc.32:                                       ; preds = %for.body.25
  %64 = load i64, i64* %i, align 8, !dbg !3540, !tbaa !3427
  %inc33 = add i64 %64, 1, !dbg !3540
  store i64 %inc33, i64* %i, align 8, !dbg !3540, !tbaa !3427
  br label %for.cond.23, !dbg !3541

for.end.34:                                       ; preds = %for.cond.23
  br label %do.body, !dbg !3542

do.body:                                          ; preds = %for.end.34
  %65 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3543
  call void @llvm.lifetime.start(i64 8, i8* %65) #1, !dbg !3543
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !690, metadata !2666), !dbg !3545
  %66 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !3546, !tbaa !2683
  store %struct._object* %66, %struct._object** %_py_decref_tmp, align 8, !dbg !3545, !tbaa !2683
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3547, !tbaa !2683
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0, !dbg !3549
  %68 = load i64, i64* %ob_refcnt35, align 8, !dbg !3550, !tbaa !2722
  %dec = add i64 %68, -1, !dbg !3550
  store i64 %dec, i64* %ob_refcnt35, align 8, !dbg !3550, !tbaa !2722
  %cmp36 = icmp ne i64 %dec, 0, !dbg !3551
  br i1 %cmp36, label %if.then.37, label %if.else.38, !dbg !3552

if.then.37:                                       ; preds = %do.body
  br label %if.end.39, !dbg !3553

if.else.38:                                       ; preds = %do.body
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3555, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !3557
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3557, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4, !dbg !3558
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3558, !tbaa !2768
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3559, !tbaa !2683
  call void %71(%struct._object* %72), !dbg !3560
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.38, %if.then.37
  %73 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3561
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !3561
  br label %do.cond, !dbg !3563

do.cond:                                          ; preds = %if.end.39
  br label %do.end, !dbg !3564

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !3566
  br label %cleanup, !dbg !3566

cleanup:                                          ; preds = %do.end, %if.then.20
  %74 = bitcast %struct._object** %old_result to i8*, !dbg !3567
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !3567
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %empty, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.40, !dbg !3569

if.end.40:                                        ; preds = %cleanup.cont, %if.else
  %75 = load i64, i64* %r, align 8, !dbg !3570, !tbaa !3427
  %sub = sub i64 %75, 1, !dbg !3572
  store i64 %sub, i64* %i, align 8, !dbg !3573, !tbaa !3427
  br label %for.cond.41, !dbg !3574

for.cond.41:                                      ; preds = %for.inc.47, %if.end.40
  %76 = load i64, i64* %i, align 8, !dbg !3575, !tbaa !3427
  %cmp42 = icmp sge i64 %76, 0, !dbg !3579
  br i1 %cmp42, label %land.rhs, label %land.end, !dbg !3580

land.rhs:                                         ; preds = %for.cond.41
  %77 = load i64, i64* %i, align 8, !dbg !3581, !tbaa !3427
  %78 = load i64*, i64** %indices, align 8, !dbg !3583, !tbaa !2683
  %arrayidx43 = getelementptr i64, i64* %78, i64 %77, !dbg !3583
  %79 = load i64, i64* %arrayidx43, align 8, !dbg !3583, !tbaa !3427
  %80 = load i64, i64* %i, align 8, !dbg !3584, !tbaa !3427
  %81 = load i64, i64* %n, align 8, !dbg !3585, !tbaa !3427
  %add = add i64 %80, %81, !dbg !3586
  %82 = load i64, i64* %r, align 8, !dbg !3587, !tbaa !3427
  %sub44 = sub i64 %add, %82, !dbg !3588
  %cmp45 = icmp eq i64 %79, %sub44, !dbg !3589
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.41
  %83 = phi i1 [ false, %for.cond.41 ], [ %cmp45, %land.rhs ]
  br i1 %83, label %for.body.46, label %for.end.49, !dbg !3590

for.body.46:                                      ; preds = %land.end
  br label %for.inc.47, !dbg !3592

for.inc.47:                                       ; preds = %for.body.46
  %84 = load i64, i64* %i, align 8, !dbg !3594, !tbaa !3427
  %dec48 = add i64 %84, -1, !dbg !3594
  store i64 %dec48, i64* %i, align 8, !dbg !3594, !tbaa !3427
  br label %for.cond.41, !dbg !3596

for.end.49:                                       ; preds = %land.end
  %85 = load i64, i64* %i, align 8, !dbg !3597, !tbaa !3427
  %cmp50 = icmp slt i64 %85, 0, !dbg !3599
  br i1 %cmp50, label %if.then.51, label %if.end.52, !dbg !3600

if.then.51:                                       ; preds = %for.end.49
  br label %empty, !dbg !3601

if.end.52:                                        ; preds = %for.end.49
  %86 = load i64, i64* %i, align 8, !dbg !3602, !tbaa !3427
  %87 = load i64*, i64** %indices, align 8, !dbg !3603, !tbaa !2683
  %arrayidx53 = getelementptr i64, i64* %87, i64 %86, !dbg !3603
  %88 = load i64, i64* %arrayidx53, align 8, !dbg !3604, !tbaa !3427
  %inc54 = add i64 %88, 1, !dbg !3604
  store i64 %inc54, i64* %arrayidx53, align 8, !dbg !3604, !tbaa !3427
  %89 = load i64, i64* %i, align 8, !dbg !3605, !tbaa !3427
  %add55 = add i64 %89, 1, !dbg !3607
  store i64 %add55, i64* %j, align 8, !dbg !3608, !tbaa !3427
  br label %for.cond.56, !dbg !3609

for.cond.56:                                      ; preds = %for.inc.63, %if.end.52
  %90 = load i64, i64* %j, align 8, !dbg !3610, !tbaa !3427
  %91 = load i64, i64* %r, align 8, !dbg !3614, !tbaa !3427
  %cmp57 = icmp slt i64 %90, %91, !dbg !3615
  br i1 %cmp57, label %for.body.58, label %for.end.65, !dbg !3616

for.body.58:                                      ; preds = %for.cond.56
  %92 = load i64, i64* %j, align 8, !dbg !3617, !tbaa !3427
  %sub59 = sub i64 %92, 1, !dbg !3618
  %93 = load i64*, i64** %indices, align 8, !dbg !3619, !tbaa !2683
  %arrayidx60 = getelementptr i64, i64* %93, i64 %sub59, !dbg !3619
  %94 = load i64, i64* %arrayidx60, align 8, !dbg !3619, !tbaa !3427
  %add61 = add i64 %94, 1, !dbg !3620
  %95 = load i64, i64* %j, align 8, !dbg !3621, !tbaa !3427
  %96 = load i64*, i64** %indices, align 8, !dbg !3622, !tbaa !2683
  %arrayidx62 = getelementptr i64, i64* %96, i64 %95, !dbg !3622
  store i64 %add61, i64* %arrayidx62, align 8, !dbg !3623, !tbaa !3427
  br label %for.inc.63, !dbg !3622

for.inc.63:                                       ; preds = %for.body.58
  %97 = load i64, i64* %j, align 8, !dbg !3624, !tbaa !3427
  %inc64 = add i64 %97, 1, !dbg !3624
  store i64 %inc64, i64* %j, align 8, !dbg !3624, !tbaa !3427
  br label %for.cond.56, !dbg !3625

for.end.65:                                       ; preds = %for.cond.56
  br label %for.cond.66, !dbg !3626

for.cond.66:                                      ; preds = %for.inc.90, %for.end.65
  %98 = load i64, i64* %i, align 8, !dbg !3627, !tbaa !3427
  %99 = load i64, i64* %r, align 8, !dbg !3630, !tbaa !3427
  %cmp67 = icmp slt i64 %98, %99, !dbg !3631
  br i1 %cmp67, label %for.body.68, label %for.end.92, !dbg !3632

for.body.68:                                      ; preds = %for.cond.66
  %100 = load i64, i64* %i, align 8, !dbg !3633, !tbaa !3427
  %101 = load i64*, i64** %indices, align 8, !dbg !3634, !tbaa !2683
  %arrayidx69 = getelementptr i64, i64* %101, i64 %100, !dbg !3634
  %102 = load i64, i64* %arrayidx69, align 8, !dbg !3634, !tbaa !3427
  store i64 %102, i64* %index, align 8, !dbg !3635, !tbaa !3427
  %103 = load i64, i64* %index, align 8, !dbg !3636, !tbaa !3427
  %104 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3637, !tbaa !2683
  %105 = bitcast %struct._object* %104 to %struct.PyTupleObject*, !dbg !3638
  %ob_item70 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %105, i32 0, i32 1, !dbg !3639
  %arrayidx71 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item70, i32 0, i64 %103, !dbg !3640
  %106 = load %struct._object*, %struct._object** %arrayidx71, align 8, !dbg !3640, !tbaa !2683
  store %struct._object* %106, %struct._object** %elem, align 8, !dbg !3641, !tbaa !2683
  %107 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3642, !tbaa !2683
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !3643
  %108 = load i64, i64* %ob_refcnt72, align 8, !dbg !3644, !tbaa !2722
  %inc73 = add i64 %108, 1, !dbg !3644
  store i64 %inc73, i64* %ob_refcnt72, align 8, !dbg !3644, !tbaa !2722
  %109 = load i64, i64* %i, align 8, !dbg !3645, !tbaa !3427
  %110 = load %struct._object*, %struct._object** %result, align 8, !dbg !3646, !tbaa !2683
  %111 = bitcast %struct._object* %110 to %struct.PyTupleObject*, !dbg !3647
  %ob_item74 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %111, i32 0, i32 1, !dbg !3648
  %arrayidx75 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item74, i32 0, i64 %109, !dbg !3649
  %112 = load %struct._object*, %struct._object** %arrayidx75, align 8, !dbg !3649, !tbaa !2683
  store %struct._object* %112, %struct._object** %oldelem, align 8, !dbg !3650, !tbaa !2683
  %113 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3651, !tbaa !2683
  %114 = load i64, i64* %i, align 8, !dbg !3652, !tbaa !3427
  %115 = load %struct._object*, %struct._object** %result, align 8, !dbg !3653, !tbaa !2683
  %116 = bitcast %struct._object* %115 to %struct.PyTupleObject*, !dbg !3654
  %ob_item76 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %116, i32 0, i32 1, !dbg !3655
  %arrayidx77 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item76, i32 0, i64 %114, !dbg !3656
  store %struct._object* %113, %struct._object** %arrayidx77, align 8, !dbg !3657, !tbaa !2683
  br label %do.body.78, !dbg !3658

do.body.78:                                       ; preds = %for.body.68
  %117 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !3659
  call void @llvm.lifetime.start(i64 8, i8* %117) #1, !dbg !3659
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp79, metadata !692, metadata !2666), !dbg !3661
  %118 = load %struct._object*, %struct._object** %oldelem, align 8, !dbg !3662, !tbaa !2683
  store %struct._object* %118, %struct._object** %_py_decref_tmp79, align 8, !dbg !3661, !tbaa !2683
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !3663, !tbaa !2683
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 0, !dbg !3665
  %120 = load i64, i64* %ob_refcnt80, align 8, !dbg !3666, !tbaa !2722
  %dec81 = add i64 %120, -1, !dbg !3666
  store i64 %dec81, i64* %ob_refcnt80, align 8, !dbg !3666, !tbaa !2722
  %cmp82 = icmp ne i64 %dec81, 0, !dbg !3667
  br i1 %cmp82, label %if.then.83, label %if.else.84, !dbg !3668

if.then.83:                                       ; preds = %do.body.78
  br label %if.end.87, !dbg !3669

if.else.84:                                       ; preds = %do.body.78
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !3671, !tbaa !2683
  %ob_type85 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 1, !dbg !3673
  %122 = load %struct._typeobject*, %struct._typeobject** %ob_type85, align 8, !dbg !3673, !tbaa !2675
  %tp_dealloc86 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %122, i32 0, i32 4, !dbg !3674
  %123 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc86, align 8, !dbg !3674, !tbaa !2768
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !3675, !tbaa !2683
  call void %123(%struct._object* %124), !dbg !3676
  br label %if.end.87

if.end.87:                                        ; preds = %if.else.84, %if.then.83
  %125 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !3677
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !3677
  br label %do.cond.88, !dbg !3679

do.cond.88:                                       ; preds = %if.end.87
  br label %do.end.89, !dbg !3680

do.end.89:                                        ; preds = %do.cond.88
  br label %for.inc.90, !dbg !3682

for.inc.90:                                       ; preds = %do.end.89
  %126 = load i64, i64* %i, align 8, !dbg !3683, !tbaa !3427
  %inc91 = add i64 %126, 1, !dbg !3683
  store i64 %inc91, i64* %i, align 8, !dbg !3683, !tbaa !3427
  br label %for.cond.66, !dbg !3684

for.end.92:                                       ; preds = %for.cond.66
  br label %if.end.93

if.end.93:                                        ; preds = %for.end.92, %for.end
  %127 = load %struct._object*, %struct._object** %result, align 8, !dbg !3685, !tbaa !2683
  %ob_refcnt94 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 0, !dbg !3686
  %128 = load i64, i64* %ob_refcnt94, align 8, !dbg !3687, !tbaa !2722
  %inc95 = add i64 %128, 1, !dbg !3687
  store i64 %inc95, i64* %ob_refcnt94, align 8, !dbg !3687, !tbaa !2722
  %129 = load %struct._object*, %struct._object** %result, align 8, !dbg !3688, !tbaa !2683
  store %struct._object* %129, %struct._object** %retval, !dbg !3689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.97, !dbg !3689

empty:                                            ; preds = %LeafBlock.1, %if.then.51, %if.then.7
  %130 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !3690, !tbaa !2683
  %stopped96 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %130, i32 0, i32 5, !dbg !3691
  store i32 1, i32* %stopped96, align 4, !dbg !3692, !tbaa !3440
  store %struct._object* null, %struct._object** %retval, !dbg !3693
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.97, !dbg !3693

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.97

cleanup.97:                                       ; preds = %NewDefault, %empty, %if.end.93, %if.then
  %131 = bitcast i64* %index to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !3694
  %132 = bitcast i64* %j to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !3694
  %133 = bitcast i64* %i to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !3694
  %134 = bitcast i64* %r to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !3694
  %135 = bitcast i64* %n to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %135) #1, !dbg !3694
  %136 = bitcast %struct._object** %result to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %136) #1, !dbg !3694
  %137 = bitcast i64** %indices to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !3694
  %138 = bitcast %struct._object** %pool to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !3694
  %139 = bitcast %struct._object** %oldelem to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !3694
  %140 = bitcast %struct._object** %elem to i8*, !dbg !3694
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !3694
  %141 = load %struct._object*, %struct._object** %retval, !dbg !3694
  ret %struct._object* %141, !dbg !3694
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %co = alloca %struct.combinationsobject*, align 8
  %n = alloca i64, align 8
  %r = alloca i64, align 8
  %pool = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !747, metadata !2666), !dbg !3695
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !748, metadata !2666), !dbg !3696
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !749, metadata !2666), !dbg !3697
  %0 = bitcast %struct.combinationsobject** %co to i8*, !dbg !3698
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3698
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %co, metadata !750, metadata !2666), !dbg !3699
  %1 = bitcast i64* %n to i8*, !dbg !3700
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3700
  call void @llvm.dbg.declare(metadata i64* %n, metadata !751, metadata !2666), !dbg !3701
  %2 = bitcast i64* %r to i8*, !dbg !3702
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3702
  call void @llvm.dbg.declare(metadata i64* %r, metadata !752, metadata !2666), !dbg !3703
  %3 = bitcast %struct._object** %pool to i8*, !dbg !3704
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3704
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !753, metadata !2666), !dbg !3705
  store %struct._object* null, %struct._object** %pool, align 8, !dbg !3705, !tbaa !2683
  %4 = bitcast %struct._object** %iterable to i8*, !dbg !3706
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3706
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !754, metadata !2666), !dbg !3707
  store %struct._object* null, %struct._object** %iterable, align 8, !dbg !3707, !tbaa !2683
  %5 = bitcast i64** %indices to i8*, !dbg !3708
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3708
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !755, metadata !2666), !dbg !3709
  store i64* null, i64** %indices, align 8, !dbg !3709, !tbaa !2683
  %6 = bitcast i64* %i to i8*, !dbg !3710
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !3710
  call void @llvm.dbg.declare(metadata i64* %i, metadata !756, metadata !2666), !dbg !3711
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3712, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3714, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %7, %struct._object* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @combinations_new.kwargs, i32 0, i32 0), %struct._object** %iterable, i64* %r), !dbg !3715
  %tobool = icmp ne i32 %call, 0, !dbg !3715
  br i1 %tobool, label %if.end, label %if.then, !dbg !3716

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3717

if.end:                                           ; preds = %entry
  %9 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !3718, !tbaa !2683
  %call1 = call %struct._object* @PySequence_Tuple(%struct._object* %9), !dbg !3719
  store %struct._object* %call1, %struct._object** %pool, align 8, !dbg !3720, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3721, !tbaa !2683
  %cmp = icmp eq %struct._object* %10, null, !dbg !3723
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !3724

if.then.2:                                        ; preds = %if.end
  br label %error, !dbg !3725

if.end.3:                                         ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3726, !tbaa !2683
  %12 = bitcast %struct._object* %11 to %struct.PyVarObject*, !dbg !3727
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1, !dbg !3728
  %13 = load i64, i64* %ob_size, align 8, !dbg !3728, !tbaa !3426
  store i64 %13, i64* %n, align 8, !dbg !3729, !tbaa !3427
  %14 = load i64, i64* %r, align 8, !dbg !3730, !tbaa !3427
  %cmp4 = icmp slt i64 %14, 0, !dbg !3732
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !3733

if.then.5:                                        ; preds = %if.end.3
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3734, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0)), !dbg !3736
  br label %error, !dbg !3737

if.end.6:                                         ; preds = %if.end.3
  %16 = load i64, i64* %r, align 8, !dbg !3738, !tbaa !3427
  %mul = mul i64 %16, 8, !dbg !3739
  %call7 = call i8* @PyMem_Malloc(i64 %mul), !dbg !3740
  %17 = bitcast i8* %call7 to i64*, !dbg !3740
  store i64* %17, i64** %indices, align 8, !dbg !3741, !tbaa !2683
  %18 = load i64*, i64** %indices, align 8, !dbg !3742, !tbaa !2683
  %cmp8 = icmp eq i64* %18, null, !dbg !3744
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !3745

if.then.9:                                        ; preds = %if.end.6
  %call10 = call %struct._object* @PyErr_NoMemory(), !dbg !3746
  br label %error, !dbg !3748

if.end.11:                                        ; preds = %if.end.6
  store i64 0, i64* %i, align 8, !dbg !3749, !tbaa !3427
  br label %for.cond, !dbg !3751

for.cond:                                         ; preds = %for.inc, %if.end.11
  %19 = load i64, i64* %i, align 8, !dbg !3752, !tbaa !3427
  %20 = load i64, i64* %r, align 8, !dbg !3756, !tbaa !3427
  %cmp12 = icmp slt i64 %19, %20, !dbg !3757
  br i1 %cmp12, label %for.body, label %for.end, !dbg !3758

for.body:                                         ; preds = %for.cond
  %21 = load i64, i64* %i, align 8, !dbg !3759, !tbaa !3427
  %22 = load i64, i64* %i, align 8, !dbg !3760, !tbaa !3427
  %23 = load i64*, i64** %indices, align 8, !dbg !3761, !tbaa !2683
  %arrayidx = getelementptr i64, i64* %23, i64 %22, !dbg !3761
  store i64 %21, i64* %arrayidx, align 8, !dbg !3762, !tbaa !3427
  br label %for.inc, !dbg !3761

for.inc:                                          ; preds = %for.body
  %24 = load i64, i64* %i, align 8, !dbg !3763, !tbaa !3427
  %inc = add i64 %24, 1, !dbg !3763
  store i64 %inc, i64* %i, align 8, !dbg !3763, !tbaa !3427
  br label %for.cond, !dbg !3764

for.end:                                          ; preds = %for.cond
  %25 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3765, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 36, !dbg !3766
  %26 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3766, !tbaa !3097
  %27 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3767, !tbaa !2683
  %call13 = call %struct._object* %26(%struct._typeobject* %27, i64 0), !dbg !3765
  %28 = bitcast %struct._object* %call13 to %struct.combinationsobject*, !dbg !3768
  store %struct.combinationsobject* %28, %struct.combinationsobject** %co, align 8, !dbg !3769, !tbaa !2683
  %29 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3770, !tbaa !2683
  %cmp14 = icmp eq %struct.combinationsobject* %29, null, !dbg !3772
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !3773

if.then.15:                                       ; preds = %for.end
  br label %error, !dbg !3774

if.end.16:                                        ; preds = %for.end
  %30 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3775, !tbaa !2683
  %31 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3776, !tbaa !2683
  %pool17 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %31, i32 0, i32 1, !dbg !3777
  store %struct._object* %30, %struct._object** %pool17, align 8, !dbg !3778, !tbaa !3252
  %32 = load i64*, i64** %indices, align 8, !dbg !3779, !tbaa !2683
  %33 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3780, !tbaa !2683
  %indices18 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %33, i32 0, i32 2, !dbg !3781
  store i64* %32, i64** %indices18, align 8, !dbg !3782, !tbaa !3330
  %34 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3783, !tbaa !2683
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %34, i32 0, i32 3, !dbg !3784
  store %struct._object* null, %struct._object** %result, align 8, !dbg !3785, !tbaa !3294
  %35 = load i64, i64* %r, align 8, !dbg !3786, !tbaa !3427
  %36 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3787, !tbaa !2683
  %r19 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %36, i32 0, i32 4, !dbg !3788
  store i64 %35, i64* %r19, align 8, !dbg !3789, !tbaa !3432
  %37 = load i64, i64* %r, align 8, !dbg !3790, !tbaa !3427
  %38 = load i64, i64* %n, align 8, !dbg !3791, !tbaa !3427
  %cmp20 = icmp sgt i64 %37, %38, !dbg !3792
  %cond = select i1 %cmp20, i32 1, i32 0, !dbg !3790
  %39 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3793, !tbaa !2683
  %stopped = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %39, i32 0, i32 5, !dbg !3794
  store i32 %cond, i32* %stopped, align 4, !dbg !3795, !tbaa !3440
  %40 = load %struct.combinationsobject*, %struct.combinationsobject** %co, align 8, !dbg !3796, !tbaa !2683
  %41 = bitcast %struct.combinationsobject* %40 to %struct._object*, !dbg !3797
  store %struct._object* %41, %struct._object** %retval, !dbg !3798
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3798

error:                                            ; preds = %if.then.15, %if.then.9, %if.then.5, %if.then.2
  %42 = load i64*, i64** %indices, align 8, !dbg !3799, !tbaa !2683
  %cmp21 = icmp ne i64* %42, null, !dbg !3801
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !3802

if.then.22:                                       ; preds = %error
  %43 = load i64*, i64** %indices, align 8, !dbg !3803, !tbaa !2683
  %44 = bitcast i64* %43 to i8*, !dbg !3803
  call void @PyMem_Free(i8* %44), !dbg !3804
  br label %if.end.23, !dbg !3804

if.end.23:                                        ; preds = %if.then.22, %error
  br label %do.body, !dbg !3805

do.body:                                          ; preds = %if.end.23
  %45 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3806
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !3806
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !757, metadata !2666), !dbg !3808
  %46 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3809, !tbaa !2683
  store %struct._object* %46, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3808, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3810, !tbaa !2683
  %cmp24 = icmp ne %struct._object* %47, null, !dbg !3811
  br i1 %cmp24, label %if.then.25, label %if.end.30, !dbg !3812

if.then.25:                                       ; preds = %do.body
  br label %do.body.26, !dbg !3813

do.body.26:                                       ; preds = %if.then.25
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3815
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !3815
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !759, metadata !2666), !dbg !3817
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3818, !tbaa !2683
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8, !dbg !3817, !tbaa !2683
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3819, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !3821
  %51 = load i64, i64* %ob_refcnt, align 8, !dbg !3822, !tbaa !2722
  %dec = add i64 %51, -1, !dbg !3822
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3822, !tbaa !2722
  %cmp27 = icmp ne i64 %dec, 0, !dbg !3823
  br i1 %cmp27, label %if.then.28, label %if.else, !dbg !3824

if.then.28:                                       ; preds = %do.body.26
  br label %if.end.29, !dbg !3825

if.else:                                          ; preds = %do.body.26
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3827, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !3829
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3829, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !3830
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3830, !tbaa !2768
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3831, !tbaa !2683
  call void %54(%struct._object* %55), !dbg !3832
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.28
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3833
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !3833
  br label %do.cond, !dbg !3835

do.cond:                                          ; preds = %if.end.29
  br label %do.end, !dbg !3836

do.end:                                           ; preds = %do.cond
  br label %if.end.30, !dbg !3838

if.end.30:                                        ; preds = %do.end, %do.body
  %57 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3840
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !3840
  br label %do.cond.31, !dbg !3843

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !3844

do.end.32:                                        ; preds = %do.cond.31
  store %struct._object* null, %struct._object** %retval, !dbg !3846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3846

cleanup:                                          ; preds = %do.end.32, %if.end.16, %if.then
  %58 = bitcast i64* %i to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !3847
  %59 = bitcast i64** %indices to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !3847
  %60 = bitcast %struct._object** %iterable to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !3847
  %61 = bitcast %struct._object** %pool to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !3847
  %62 = bitcast i64* %r to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !3847
  %63 = bitcast i64* %n to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !3847
  %64 = bitcast %struct.combinationsobject** %co to i8*, !dbg !3847
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !3847
  %65 = load %struct._object*, %struct._object** %retval, !dbg !3847
  ret %struct._object* %65, !dbg !3847
}

declare void @PyMem_Free(i8*) #3

declare %struct._object* @PyTuple_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_reduce(%struct.combinationsobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.combinationsobject*, align 8
  %indices = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %index = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.combinationsobject* %lz, %struct.combinationsobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %lz.addr, metadata !699, metadata !2666), !dbg !3848
  %0 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3849, !tbaa !2683
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %0, i32 0, i32 3, !dbg !3850
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !3850, !tbaa !3294
  %cmp = icmp eq %struct._object* %1, null, !dbg !3851
  br i1 %cmp, label %if.then, label %if.else, !dbg !3852

if.then:                                          ; preds = %entry
  %2 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3853, !tbaa !2683
  %3 = bitcast %struct.combinationsobject* %2 to %struct._object*, !dbg !3855
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !3856
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3856, !tbaa !2675
  %5 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3857, !tbaa !2683
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %5, i32 0, i32 1, !dbg !3858
  %6 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3858, !tbaa !3252
  %7 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3859, !tbaa !2683
  %r = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %7, i32 0, i32 4, !dbg !3860
  %8 = load i64, i64* %r, align 8, !dbg !3860, !tbaa !3432
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._typeobject* %4, %struct._object* %6, i64 %8), !dbg !3861
  store %struct._object* %call, %struct._object** %retval, !dbg !3862
  br label %return, !dbg !3862

if.else:                                          ; preds = %entry
  %9 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3863, !tbaa !2683
  %stopped = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %9, i32 0, i32 5, !dbg !3864
  %10 = load i32, i32* %stopped, align 4, !dbg !3864, !tbaa !3440
  %tobool = icmp ne i32 %10, 0, !dbg !3863
  br i1 %tobool, label %if.then.1, label %if.else.5, !dbg !3865

if.then.1:                                        ; preds = %if.else
  %11 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3866, !tbaa !2683
  %12 = bitcast %struct.combinationsobject* %11 to %struct._object*, !dbg !3868
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !3869
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !3869, !tbaa !2675
  %14 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3870, !tbaa !2683
  %r3 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %14, i32 0, i32 4, !dbg !3871
  %15 = load i64, i64* %r3, align 8, !dbg !3871, !tbaa !3432
  %call4 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._typeobject* %13, i64 %15), !dbg !3872
  store %struct._object* %call4, %struct._object** %retval, !dbg !3873
  br label %return, !dbg !3873

if.else.5:                                        ; preds = %if.else
  %16 = bitcast %struct._object** %indices to i8*, !dbg !3874
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !3874
  call void @llvm.dbg.declare(metadata %struct._object** %indices, metadata !700, metadata !2666), !dbg !3875
  %17 = bitcast i64* %i to i8*, !dbg !3876
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !3876
  call void @llvm.dbg.declare(metadata i64* %i, metadata !704, metadata !2666), !dbg !3877
  %18 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3878, !tbaa !2683
  %r6 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %18, i32 0, i32 4, !dbg !3879
  %19 = load i64, i64* %r6, align 8, !dbg !3879, !tbaa !3432
  %call7 = call %struct._object* @PyTuple_New(i64 %19), !dbg !3880
  store %struct._object* %call7, %struct._object** %indices, align 8, !dbg !3881, !tbaa !2683
  %20 = load %struct._object*, %struct._object** %indices, align 8, !dbg !3882, !tbaa !2683
  %tobool8 = icmp ne %struct._object* %20, null, !dbg !3882
  br i1 %tobool8, label %if.end, label %if.then.9, !dbg !3884

if.then.9:                                        ; preds = %if.else.5
  store %struct._object* null, %struct._object** %retval, !dbg !3885
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !3885

if.end:                                           ; preds = %if.else.5
  store i64 0, i64* %i, align 8, !dbg !3886, !tbaa !3427
  br label %for.cond, !dbg !3887

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i64, i64* %i, align 8, !dbg !3888, !tbaa !3427
  %22 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3891, !tbaa !2683
  %r10 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %22, i32 0, i32 4, !dbg !3892
  %23 = load i64, i64* %r10, align 8, !dbg !3892, !tbaa !3432
  %cmp11 = icmp slt i64 %21, %23, !dbg !3893
  br i1 %cmp11, label %for.body, label %for.end, !dbg !3894

for.body:                                         ; preds = %for.cond
  %24 = bitcast %struct._object** %index to i8*, !dbg !3895
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !3895
  call void @llvm.dbg.declare(metadata %struct._object** %index, metadata !705, metadata !2666), !dbg !3896
  %25 = load i64, i64* %i, align 8, !dbg !3897, !tbaa !3427
  %26 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3898, !tbaa !2683
  %indices12 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %26, i32 0, i32 2, !dbg !3899
  %27 = load i64*, i64** %indices12, align 8, !dbg !3899, !tbaa !3330
  %arrayidx = getelementptr i64, i64* %27, i64 %25, !dbg !3898
  %28 = load i64, i64* %arrayidx, align 8, !dbg !3898, !tbaa !3427
  %call13 = call %struct._object* @PyLong_FromSsize_t(i64 %28), !dbg !3900
  store %struct._object* %call13, %struct._object** %index, align 8, !dbg !3896, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %index, align 8, !dbg !3901, !tbaa !2683
  %tobool14 = icmp ne %struct._object* %29, null, !dbg !3901
  br i1 %tobool14, label %if.end.21, label %if.then.15, !dbg !3902

if.then.15:                                       ; preds = %for.body
  br label %do.body, !dbg !3903

do.body:                                          ; preds = %if.then.15
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3904
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !3904
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !709, metadata !2666), !dbg !3906
  %31 = load %struct._object*, %struct._object** %indices, align 8, !dbg !3907, !tbaa !2683
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8, !dbg !3906, !tbaa !2683
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3908, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !3910
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !3911, !tbaa !2722
  %dec = add i64 %33, -1, !dbg !3911
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3911, !tbaa !2722
  %cmp16 = icmp ne i64 %dec, 0, !dbg !3912
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !3913

if.then.17:                                       ; preds = %do.body
  br label %if.end.20, !dbg !3914

if.else.18:                                       ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3916, !tbaa !2683
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !3918
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3918, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !3919
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3919, !tbaa !2768
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3920, !tbaa !2683
  call void %36(%struct._object* %37), !dbg !3921
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.18, %if.then.17
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3922
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3922
  br label %do.cond, !dbg !3924

do.cond:                                          ; preds = %if.end.20
  br label %do.end, !dbg !3925

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3927
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3927

if.end.21:                                        ; preds = %for.body
  %39 = load %struct._object*, %struct._object** %index, align 8, !dbg !3928, !tbaa !2683
  %40 = load i64, i64* %i, align 8, !dbg !3929, !tbaa !3427
  %41 = load %struct._object*, %struct._object** %indices, align 8, !dbg !3930, !tbaa !2683
  %42 = bitcast %struct._object* %41 to %struct.PyTupleObject*, !dbg !3931
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %42, i32 0, i32 1, !dbg !3932
  %arrayidx22 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %40, !dbg !3933
  store %struct._object* %39, %struct._object** %arrayidx22, align 8, !dbg !3934, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !3935
  br label %cleanup, !dbg !3935

cleanup:                                          ; preds = %if.end.21, %do.end
  %43 = bitcast %struct._object** %index to i8*, !dbg !3936
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !3936
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !3937

for.inc:                                          ; preds = %cleanup.cont
  %44 = load i64, i64* %i, align 8, !dbg !3938, !tbaa !3427
  %inc = add i64 %44, 1, !dbg !3938
  store i64 %inc, i64* %i, align 8, !dbg !3938, !tbaa !3427
  br label %for.cond, !dbg !3939

for.end:                                          ; preds = %for.cond
  %45 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3940, !tbaa !2683
  %46 = bitcast %struct.combinationsobject* %45 to %struct._object*, !dbg !3941
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !3942
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !3942, !tbaa !2675
  %48 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3943, !tbaa !2683
  %pool24 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %48, i32 0, i32 1, !dbg !3944
  %49 = load %struct._object*, %struct._object** %pool24, align 8, !dbg !3944, !tbaa !3252
  %50 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3945, !tbaa !2683
  %r25 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %50, i32 0, i32 4, !dbg !3946
  %51 = load i64, i64* %r25, align 8, !dbg !3946, !tbaa !3432
  %52 = load %struct._object*, %struct._object** %indices, align 8, !dbg !3947, !tbaa !2683
  %call26 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), %struct._typeobject* %47, %struct._object* %49, i64 %51, %struct._object* %52), !dbg !3948
  store %struct._object* %call26, %struct._object** %retval, !dbg !3949
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !3949

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.27

cleanup.27:                                       ; preds = %NewDefault, %for.end, %if.then.9
  %53 = bitcast i64* %i to i8*, !dbg !3950
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !3950
  %54 = bitcast %struct._object** %indices to i8*, !dbg !3950
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !3950
  br label %return

return:                                           ; preds = %cleanup.27, %if.then.1, %if.then
  %55 = load %struct._object*, %struct._object** %retval, !dbg !3951
  ret %struct._object* %55, !dbg !3951
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_setstate(%struct.combinationsobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.combinationsobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %max = alloca i64, align 8
  %indexObject = alloca %struct._object*, align 8
  %index = alloca i64, align 8
  %element = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.combinationsobject* %lz, %struct.combinationsobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %lz.addr, metadata !717, metadata !2666), !dbg !3952
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !718, metadata !2666), !dbg !3953
  %0 = bitcast %struct._object** %result to i8*, !dbg !3954
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3954
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !719, metadata !2666), !dbg !3955
  %1 = bitcast i64* %i to i8*, !dbg !3956
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3956
  call void @llvm.dbg.declare(metadata i64* %i, metadata !720, metadata !2666), !dbg !3957
  %2 = bitcast i64* %n to i8*, !dbg !3958
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3958
  call void @llvm.dbg.declare(metadata i64* %n, metadata !721, metadata !2666), !dbg !3959
  %3 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3960, !tbaa !2683
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %3, i32 0, i32 1, !dbg !3961
  %4 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3961, !tbaa !3252
  %5 = bitcast %struct._object* %4 to %struct.PyVarObject*, !dbg !3962
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1, !dbg !3963
  %6 = load i64, i64* %ob_size, align 8, !dbg !3963, !tbaa !3426
  store i64 %6, i64* %n, align 8, !dbg !3959, !tbaa !3427
  %7 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !3964, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !3966
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3966, !tbaa !2675
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !3967
  %9 = load i64, i64* %tp_flags, align 8, !dbg !3967, !tbaa !3968
  %and = and i64 %9, 67108864, !dbg !3969
  %cmp = icmp ne i64 %and, 0, !dbg !3970
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !3971

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !3972, !tbaa !2683
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !3974
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !3975
  %12 = load i64, i64* %ob_size1, align 8, !dbg !3975, !tbaa !3426
  %13 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3976, !tbaa !2683
  %r = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %13, i32 0, i32 4, !dbg !3977
  %14 = load i64, i64* %r, align 8, !dbg !3977, !tbaa !3432
  %cmp2 = icmp ne i64 %12, %14, !dbg !3978
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3979

if.then:                                          ; preds = %lor.lhs.false, %entry
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3980, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0)), !dbg !3982
  store %struct._object* null, %struct._object** %retval, !dbg !3983
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !3983

if.end:                                           ; preds = %lor.lhs.false
  store i64 0, i64* %i, align 8, !dbg !3984, !tbaa !3427
  br label %for.cond, !dbg !3985

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i64, i64* %i, align 8, !dbg !3986, !tbaa !3427
  %17 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !3989, !tbaa !2683
  %r3 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %17, i32 0, i32 4, !dbg !3990
  %18 = load i64, i64* %r3, align 8, !dbg !3990, !tbaa !3432
  %cmp4 = icmp slt i64 %16, %18, !dbg !3991
  br i1 %cmp4, label %for.body, label %for.end, !dbg !3992

for.body:                                         ; preds = %for.cond
  %19 = bitcast i64* %max to i8*, !dbg !3993
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !3993
  call void @llvm.dbg.declare(metadata i64* %max, metadata !722, metadata !2666), !dbg !3994
  %20 = bitcast %struct._object** %indexObject to i8*, !dbg !3995
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !3995
  call void @llvm.dbg.declare(metadata %struct._object** %indexObject, metadata !726, metadata !2666), !dbg !3996
  %21 = load i64, i64* %i, align 8, !dbg !3997, !tbaa !3427
  %22 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !3998, !tbaa !2683
  %23 = bitcast %struct._object* %22 to %struct.PyTupleObject*, !dbg !3999
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %23, i32 0, i32 1, !dbg !4000
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %21, !dbg !4001
  %24 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4001, !tbaa !2683
  store %struct._object* %24, %struct._object** %indexObject, align 8, !dbg !3996, !tbaa !2683
  %25 = bitcast i64* %index to i8*, !dbg !4002
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !4002
  call void @llvm.dbg.declare(metadata i64* %index, metadata !727, metadata !2666), !dbg !4003
  %26 = load %struct._object*, %struct._object** %indexObject, align 8, !dbg !4004, !tbaa !2683
  %call = call i64 @PyLong_AsSsize_t(%struct._object* %26), !dbg !4005
  store i64 %call, i64* %index, align 8, !dbg !4003, !tbaa !3427
  %27 = load i64, i64* %index, align 8, !dbg !4006, !tbaa !3427
  %cmp5 = icmp eq i64 %27, -1, !dbg !4008
  br i1 %cmp5, label %land.lhs.true, label %if.end.8, !dbg !4009

land.lhs.true:                                    ; preds = %for.body
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !4010
  %tobool = icmp ne %struct._object* %call6, null, !dbg !4010
  br i1 %tobool, label %if.then.7, label %if.end.8, !dbg !4012

if.then.7:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !4013
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4013

if.end.8:                                         ; preds = %land.lhs.true, %for.body
  %28 = load i64, i64* %i, align 8, !dbg !4014, !tbaa !3427
  %29 = load i64, i64* %n, align 8, !dbg !4015, !tbaa !3427
  %add = add i64 %28, %29, !dbg !4016
  %30 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4017, !tbaa !2683
  %r9 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %30, i32 0, i32 4, !dbg !4018
  %31 = load i64, i64* %r9, align 8, !dbg !4018, !tbaa !3432
  %sub = sub i64 %add, %31, !dbg !4019
  store i64 %sub, i64* %max, align 8, !dbg !4020, !tbaa !3427
  %32 = load i64, i64* %index, align 8, !dbg !4021, !tbaa !3427
  %33 = load i64, i64* %max, align 8, !dbg !4023, !tbaa !3427
  %cmp10 = icmp sgt i64 %32, %33, !dbg !4024
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !4025

if.then.11:                                       ; preds = %if.end.8
  %34 = load i64, i64* %max, align 8, !dbg !4026, !tbaa !3427
  store i64 %34, i64* %index, align 8, !dbg !4027, !tbaa !3427
  br label %if.end.12, !dbg !4028

if.end.12:                                        ; preds = %if.then.11, %if.end.8
  %35 = load i64, i64* %index, align 8, !dbg !4029, !tbaa !3427
  %cmp13 = icmp slt i64 %35, 0, !dbg !4031
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !4032

if.then.14:                                       ; preds = %if.end.12
  store i64 0, i64* %index, align 8, !dbg !4033, !tbaa !3427
  br label %if.end.15, !dbg !4034

if.end.15:                                        ; preds = %if.then.14, %if.end.12
  %36 = load i64, i64* %index, align 8, !dbg !4035, !tbaa !3427
  %37 = load i64, i64* %i, align 8, !dbg !4036, !tbaa !3427
  %38 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4037, !tbaa !2683
  %indices = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %38, i32 0, i32 2, !dbg !4038
  %39 = load i64*, i64** %indices, align 8, !dbg !4038, !tbaa !3330
  %arrayidx16 = getelementptr i64, i64* %39, i64 %37, !dbg !4037
  store i64 %36, i64* %arrayidx16, align 8, !dbg !4039, !tbaa !3427
  store i32 0, i32* %cleanup.dest.slot, !dbg !4040
  br label %cleanup, !dbg !4040

cleanup:                                          ; preds = %if.end.15, %if.then.7
  %40 = bitcast i64* %index to i8*, !dbg !4041
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !4041
  %41 = bitcast %struct._object** %indexObject to i8*, !dbg !4041
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !4041
  %42 = bitcast i64* %max to i8*, !dbg !4041
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !4041
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !4042

for.inc:                                          ; preds = %cleanup.cont
  %43 = load i64, i64* %i, align 8, !dbg !4043, !tbaa !3427
  %inc = add i64 %43, 1, !dbg !4043
  store i64 %inc, i64* %i, align 8, !dbg !4043, !tbaa !3427
  br label %for.cond, !dbg !4044

for.end:                                          ; preds = %for.cond
  %44 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4045, !tbaa !2683
  %r19 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %44, i32 0, i32 4, !dbg !4046
  %45 = load i64, i64* %r19, align 8, !dbg !4046, !tbaa !3432
  %call20 = call %struct._object* @PyTuple_New(i64 %45), !dbg !4047
  store %struct._object* %call20, %struct._object** %result, align 8, !dbg !4048, !tbaa !2683
  %46 = load %struct._object*, %struct._object** %result, align 8, !dbg !4049, !tbaa !2683
  %cmp21 = icmp eq %struct._object* %46, null, !dbg !4051
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !4052

if.then.22:                                       ; preds = %for.end
  store %struct._object* null, %struct._object** %retval, !dbg !4053
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !4053

if.end.23:                                        ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !4054, !tbaa !3427
  br label %for.cond.24, !dbg !4055

for.cond.24:                                      ; preds = %for.inc.36, %if.end.23
  %47 = load i64, i64* %i, align 8, !dbg !4056, !tbaa !3427
  %48 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4059, !tbaa !2683
  %r25 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %48, i32 0, i32 4, !dbg !4060
  %49 = load i64, i64* %r25, align 8, !dbg !4060, !tbaa !3432
  %cmp26 = icmp slt i64 %47, %49, !dbg !4061
  br i1 %cmp26, label %for.body.27, label %for.end.38, !dbg !4062

for.body.27:                                      ; preds = %for.cond.24
  %50 = bitcast %struct._object** %element to i8*, !dbg !4063
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !4063
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !728, metadata !2666), !dbg !4064
  %51 = load i64, i64* %i, align 8, !dbg !4065, !tbaa !3427
  %52 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4066, !tbaa !2683
  %indices28 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %52, i32 0, i32 2, !dbg !4067
  %53 = load i64*, i64** %indices28, align 8, !dbg !4067, !tbaa !3330
  %arrayidx29 = getelementptr i64, i64* %53, i64 %51, !dbg !4066
  %54 = load i64, i64* %arrayidx29, align 8, !dbg !4066, !tbaa !3427
  %55 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4068, !tbaa !2683
  %pool30 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %55, i32 0, i32 1, !dbg !4069
  %56 = load %struct._object*, %struct._object** %pool30, align 8, !dbg !4069, !tbaa !3252
  %57 = bitcast %struct._object* %56 to %struct.PyTupleObject*, !dbg !4070
  %ob_item31 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %57, i32 0, i32 1, !dbg !4071
  %arrayidx32 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item31, i32 0, i64 %54, !dbg !4072
  %58 = load %struct._object*, %struct._object** %arrayidx32, align 8, !dbg !4072, !tbaa !2683
  store %struct._object* %58, %struct._object** %element, align 8, !dbg !4064, !tbaa !2683
  %59 = load %struct._object*, %struct._object** %element, align 8, !dbg !4073, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !4074
  %60 = load i64, i64* %ob_refcnt, align 8, !dbg !4075, !tbaa !2722
  %inc33 = add i64 %60, 1, !dbg !4075
  store i64 %inc33, i64* %ob_refcnt, align 8, !dbg !4075, !tbaa !2722
  %61 = load %struct._object*, %struct._object** %element, align 8, !dbg !4076, !tbaa !2683
  %62 = load i64, i64* %i, align 8, !dbg !4077, !tbaa !3427
  %63 = load %struct._object*, %struct._object** %result, align 8, !dbg !4078, !tbaa !2683
  %64 = bitcast %struct._object* %63 to %struct.PyTupleObject*, !dbg !4079
  %ob_item34 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %64, i32 0, i32 1, !dbg !4080
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item34, i32 0, i64 %62, !dbg !4081
  store %struct._object* %61, %struct._object** %arrayidx35, align 8, !dbg !4082, !tbaa !2683
  %65 = bitcast %struct._object** %element to i8*, !dbg !4083
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !4083
  br label %for.inc.36, !dbg !4084

for.inc.36:                                       ; preds = %for.body.27
  %66 = load i64, i64* %i, align 8, !dbg !4085, !tbaa !3427
  %inc37 = add i64 %66, 1, !dbg !4085
  store i64 %inc37, i64* %i, align 8, !dbg !4085, !tbaa !3427
  br label %for.cond.24, !dbg !4086

for.end.38:                                       ; preds = %for.cond.24
  br label %do.body, !dbg !4087

do.body:                                          ; preds = %for.end.38
  %67 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4088
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !4088
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !732, metadata !2666), !dbg !4090
  %68 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4091, !tbaa !2683
  %result39 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %68, i32 0, i32 3, !dbg !4092
  %69 = load %struct._object*, %struct._object** %result39, align 8, !dbg !4092, !tbaa !3294
  store %struct._object* %69, %struct._object** %_py_tmp, align 8, !dbg !4090, !tbaa !2683
  %70 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4093, !tbaa !2683
  %cmp40 = icmp ne %struct._object* %70, null, !dbg !4094
  br i1 %cmp40, label %if.then.41, label %if.end.49, !dbg !4095

if.then.41:                                       ; preds = %do.body
  %71 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4096, !tbaa !2683
  %result42 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %71, i32 0, i32 3, !dbg !4098
  store %struct._object* null, %struct._object** %result42, align 8, !dbg !4099, !tbaa !3294
  br label %do.body.43, !dbg !4100

do.body.43:                                       ; preds = %if.then.41
  %72 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4101
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !4101
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !734, metadata !2666), !dbg !4103
  %73 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4104, !tbaa !2683
  store %struct._object* %73, %struct._object** %_py_decref_tmp, align 8, !dbg !4103, !tbaa !2683
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4105, !tbaa !2683
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !4107
  %75 = load i64, i64* %ob_refcnt44, align 8, !dbg !4108, !tbaa !2722
  %dec = add i64 %75, -1, !dbg !4108
  store i64 %dec, i64* %ob_refcnt44, align 8, !dbg !4108, !tbaa !2722
  %cmp45 = icmp ne i64 %dec, 0, !dbg !4109
  br i1 %cmp45, label %if.then.46, label %if.else, !dbg !4110

if.then.46:                                       ; preds = %do.body.43
  br label %if.end.48, !dbg !4111

if.else:                                          ; preds = %do.body.43
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4113, !tbaa !2683
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !4115
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !4115, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !4116
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4116, !tbaa !2768
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4117, !tbaa !2683
  call void %78(%struct._object* %79), !dbg !4118
  br label %if.end.48

if.end.48:                                        ; preds = %if.else, %if.then.46
  %80 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4119
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !4119
  br label %do.cond, !dbg !4121

do.cond:                                          ; preds = %if.end.48
  br label %do.end, !dbg !4122

do.end:                                           ; preds = %do.cond
  br label %if.end.49, !dbg !4124

if.end.49:                                        ; preds = %do.end, %do.body
  %81 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4126
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !4126
  br label %do.cond.50, !dbg !4129

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !4130

do.end.51:                                        ; preds = %do.cond.50
  %82 = load %struct._object*, %struct._object** %result, align 8, !dbg !4132, !tbaa !2683
  %83 = load %struct.combinationsobject*, %struct.combinationsobject** %lz.addr, align 8, !dbg !4133, !tbaa !2683
  %result52 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %83, i32 0, i32 3, !dbg !4134
  store %struct._object* %82, %struct._object** %result52, align 8, !dbg !4135, !tbaa !3294
  %84 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4136, !tbaa !2722
  %inc53 = add i64 %84, 1, !dbg !4136
  store i64 %inc53, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4136, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4137
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !4137

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.54

cleanup.54:                                       ; preds = %NewDefault, %do.end.51, %if.then.22, %if.then
  %85 = bitcast i64* %n to i8*, !dbg !4138
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !4138
  %86 = bitcast i64* %i to i8*, !dbg !4138
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !4138
  %87 = bitcast %struct._object** %result to i8*, !dbg !4138
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !4138
  %88 = load %struct._object*, %struct._object** %retval, !dbg !4138
  ret %struct._object* %88, !dbg !4138
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_sizeof(%struct.combinationsobject* %co, i8* %unused) #0 {
entry:
  %co.addr = alloca %struct.combinationsobject*, align 8
  %unused.addr = alloca i8*, align 8
  %res = alloca i64, align 8
  store %struct.combinationsobject* %co, %struct.combinationsobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.combinationsobject** %co.addr, metadata !742, metadata !2666), !dbg !4139
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !743, metadata !2666), !dbg !4140
  %0 = bitcast i64* %res to i8*, !dbg !4141
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4141
  call void @llvm.dbg.declare(metadata i64* %res, metadata !744, metadata !2666), !dbg !4142
  store i64 56, i64* %res, align 8, !dbg !4143, !tbaa !3427
  %1 = load %struct.combinationsobject*, %struct.combinationsobject** %co.addr, align 8, !dbg !4144, !tbaa !2683
  %r = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %1, i32 0, i32 4, !dbg !4145
  %2 = load i64, i64* %r, align 8, !dbg !4145, !tbaa !3432
  %mul = mul i64 %2, 8, !dbg !4146
  %3 = load i64, i64* %res, align 8, !dbg !4147, !tbaa !3427
  %add = add i64 %3, %mul, !dbg !4147
  store i64 %add, i64* %res, align 8, !dbg !4147, !tbaa !3427
  %4 = load i64, i64* %res, align 8, !dbg !4148, !tbaa !3427
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !4149
  %5 = bitcast i64* %res to i8*, !dbg !4150
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !4150
  ret %struct._object* %call, !dbg !4151
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare i64 @PyLong_AsSsize_t(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare %struct._object* @PySequence_Tuple(%struct._object*) #3

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

; Function Attrs: nounwind uwtable
define internal void @cwr_dealloc(%struct.cwrobject* %co) #0 {
entry:
  %co.addr = alloca %struct.cwrobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.cwrobject* %co, %struct.cwrobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %co.addr, metadata !766, metadata !2666), !dbg !4152
  %0 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4153, !tbaa !2683
  %1 = bitcast %struct.cwrobject* %0 to i8*, !dbg !4153
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !4154
  br label %do.body, !dbg !4155

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4156
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4156
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !767, metadata !2666), !dbg !4158
  %3 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4159, !tbaa !2683
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %3, i32 0, i32 1, !dbg !4160
  %4 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4160, !tbaa !3252
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4158, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4161, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !4162
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !4163

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !4164

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4166
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4166
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !769, metadata !2666), !dbg !4168
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4169, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !4168, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4170, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !4172
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !4173, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !4173
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4173, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !4174
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !4175

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !4176

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4178, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !4180
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4180, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !4181
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4181, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4182, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !4183
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4184
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !4184
  br label %do.cond, !dbg !4186

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4187

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !4189

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4191
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !4191
  br label %do.end.6, !dbg !4194

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !4195

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !4196
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !4196
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !772, metadata !2666), !dbg !4198
  %17 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4199, !tbaa !2683
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %17, i32 0, i32 3, !dbg !4200
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !4200, !tbaa !3294
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !4198, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !4201, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !4202
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !4203

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !4204

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !4206
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !4206
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !774, metadata !2666), !dbg !4208
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !4209, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !4208, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4210, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !4212
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !4213, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !4213
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4213, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !4214
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !4215

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !4216

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4218, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !4220
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4220, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !4221
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4221, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4222, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !4223
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !4224
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !4224
  br label %do.cond.21, !dbg !4226

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !4227

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !4229

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !4231
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !4231
  br label %do.end.25, !dbg !4232

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4233, !tbaa !2683
  %indices = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %30, i32 0, i32 2, !dbg !4235
  %31 = load i64*, i64** %indices, align 8, !dbg !4235, !tbaa !3330
  %cmp26 = icmp ne i64* %31, null, !dbg !4236
  br i1 %cmp26, label %if.then.27, label %if.end.29, !dbg !4237

if.then.27:                                       ; preds = %do.end.25
  %32 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4238, !tbaa !2683
  %indices28 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %32, i32 0, i32 2, !dbg !4239
  %33 = load i64*, i64** %indices28, align 8, !dbg !4239, !tbaa !3330
  %34 = bitcast i64* %33 to i8*, !dbg !4238
  call void @PyMem_Free(i8* %34), !dbg !4240
  br label %if.end.29, !dbg !4240

if.end.29:                                        ; preds = %if.then.27, %do.end.25
  %35 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4241, !tbaa !2683
  %36 = bitcast %struct.cwrobject* %35 to %struct._object*, !dbg !4242
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !4243
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !4243, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 38, !dbg !4244
  %38 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4244, !tbaa !2864
  %39 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4245, !tbaa !2683
  %40 = bitcast %struct.cwrobject* %39 to i8*, !dbg !4245
  call void %38(i8* %40), !dbg !4246
  ret void, !dbg !4247
}

; Function Attrs: nounwind uwtable
define internal i32 @cwr_traverse(%struct.cwrobject* %co, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %co.addr = alloca %struct.cwrobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.cwrobject* %co, %struct.cwrobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %co.addr, metadata !781, metadata !2666), !dbg !4248
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !782, metadata !2666), !dbg !4249
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !783, metadata !2666), !dbg !4250
  br label %do.body, !dbg !4251

do.body:                                          ; preds = %entry
  %0 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4252, !tbaa !2683
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %0, i32 0, i32 1, !dbg !4254
  %1 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4254, !tbaa !3252
  %tobool = icmp ne %struct._object* %1, null, !dbg !4255
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !4256

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !4257
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !4257
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !784, metadata !2666), !dbg !4259
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4260, !tbaa !2683
  %4 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4261, !tbaa !2683
  %pool1 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %4, i32 0, i32 1, !dbg !4262
  %5 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !4262, !tbaa !3252
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !4263, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !4260
  store i32 %call, i32* %vret, align 4, !dbg !4259, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !4264, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !4264
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !4266

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !4267, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !4269
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4269

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !4270
  br label %cleanup, !dbg !4270

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !4272
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !4272
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !4275

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4276

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !4279

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4280, !tbaa !2683
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %10, i32 0, i32 3, !dbg !4282
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !4282, !tbaa !3294
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !4283
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !4284

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !4285
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !4285
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !788, metadata !2666), !dbg !4287
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4288, !tbaa !2683
  %14 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4289, !tbaa !2683
  %result9 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %14, i32 0, i32 3, !dbg !4290
  %15 = load %struct._object*, %struct._object** %result9, align 8, !dbg !4290, !tbaa !3294
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !4291, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !4288
  store i32 %call10, i32* %vret8, align 4, !dbg !4287, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !4292, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !4292
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !4294

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !4295, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !4297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !4297

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !4298
  br label %cleanup.14, !dbg !4298

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !4300
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !4300
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !4303

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !4304

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !4307
  br label %return, !dbg !4307

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !4308
  ret i32 %20, !dbg !4308
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_next(%struct.cwrobject* %co) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %co.addr = alloca %struct.cwrobject*, align 8
  %elem = alloca %struct._object*, align 8
  %oldelem = alloca %struct._object*, align 8
  %pool = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %result = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %r = alloca i64, align 8
  %i = alloca i64, align 8
  %index = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %old_result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  store %struct.cwrobject* %co, %struct.cwrobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %co.addr, metadata !796, metadata !2666), !dbg !4309
  %0 = bitcast %struct._object** %elem to i8*, !dbg !4310
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4310
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !797, metadata !2666), !dbg !4311
  %1 = bitcast %struct._object** %oldelem to i8*, !dbg !4312
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4312
  call void @llvm.dbg.declare(metadata %struct._object** %oldelem, metadata !798, metadata !2666), !dbg !4313
  %2 = bitcast %struct._object** %pool to i8*, !dbg !4314
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4314
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !799, metadata !2666), !dbg !4315
  %3 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4316, !tbaa !2683
  %pool1 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %3, i32 0, i32 1, !dbg !4317
  %4 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !4317, !tbaa !3252
  store %struct._object* %4, %struct._object** %pool, align 8, !dbg !4315, !tbaa !2683
  %5 = bitcast i64** %indices to i8*, !dbg !4318
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4318
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !800, metadata !2666), !dbg !4319
  %6 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4320, !tbaa !2683
  %indices2 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %6, i32 0, i32 2, !dbg !4321
  %7 = load i64*, i64** %indices2, align 8, !dbg !4321, !tbaa !3330
  store i64* %7, i64** %indices, align 8, !dbg !4319, !tbaa !2683
  %8 = bitcast %struct._object** %result to i8*, !dbg !4322
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4322
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !801, metadata !2666), !dbg !4323
  %9 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4324, !tbaa !2683
  %result3 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %9, i32 0, i32 3, !dbg !4325
  %10 = load %struct._object*, %struct._object** %result3, align 8, !dbg !4325, !tbaa !3294
  store %struct._object* %10, %struct._object** %result, align 8, !dbg !4323, !tbaa !2683
  %11 = bitcast i64* %n to i8*, !dbg !4326
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !4326
  call void @llvm.dbg.declare(metadata i64* %n, metadata !802, metadata !2666), !dbg !4327
  %12 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4328, !tbaa !2683
  %13 = bitcast %struct._object* %12 to %struct.PyVarObject*, !dbg !4329
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1, !dbg !4330
  %14 = load i64, i64* %ob_size, align 8, !dbg !4330, !tbaa !3426
  store i64 %14, i64* %n, align 8, !dbg !4327, !tbaa !3427
  %15 = bitcast i64* %r to i8*, !dbg !4331
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !4331
  call void @llvm.dbg.declare(metadata i64* %r, metadata !803, metadata !2666), !dbg !4332
  %16 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4333, !tbaa !2683
  %r4 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %16, i32 0, i32 4, !dbg !4334
  %17 = load i64, i64* %r4, align 8, !dbg !4334, !tbaa !3432
  store i64 %17, i64* %r, align 8, !dbg !4332, !tbaa !3427
  %18 = bitcast i64* %i to i8*, !dbg !4335
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !4335
  call void @llvm.dbg.declare(metadata i64* %i, metadata !804, metadata !2666), !dbg !4336
  %19 = bitcast i64* %index to i8*, !dbg !4335
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !4335
  call void @llvm.dbg.declare(metadata i64* %index, metadata !805, metadata !2666), !dbg !4337
  %20 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4338, !tbaa !2683
  %stopped = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %20, i32 0, i32 5, !dbg !4340
  %21 = load i32, i32* %stopped, align 4, !dbg !4340, !tbaa !3440
  %tobool = icmp ne i32 %21, 0, !dbg !4338
  br i1 %tobool, label %if.then, label %if.end, !dbg !4341

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !4342

if.end:                                           ; preds = %entry
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !4343, !tbaa !2683
  %cmp = icmp eq %struct._object* %22, null, !dbg !4344
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !4345

if.then.5:                                        ; preds = %if.end
  %23 = load i64, i64* %r, align 8, !dbg !4346, !tbaa !3427
  %call = call %struct._object* @PyTuple_New(i64 %23), !dbg !4348
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !4349, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %result, align 8, !dbg !4350, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %24, null, !dbg !4352
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !4353

if.then.7:                                        ; preds = %if.then.5
  br label %empty, !dbg !4354

if.end.8:                                         ; preds = %if.then.5
  %25 = load %struct._object*, %struct._object** %result, align 8, !dbg !4355, !tbaa !2683
  %26 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4356, !tbaa !2683
  %result9 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %26, i32 0, i32 3, !dbg !4357
  store %struct._object* %25, %struct._object** %result9, align 8, !dbg !4358, !tbaa !3294
  %27 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4359, !tbaa !2683
  %28 = bitcast %struct._object* %27 to %struct.PyTupleObject*, !dbg !4360
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %28, i32 0, i32 1, !dbg !4361
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !4362
  %29 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4362, !tbaa !2683
  store %struct._object* %29, %struct._object** %elem, align 8, !dbg !4363, !tbaa !2683
  store i64 0, i64* %i, align 8, !dbg !4364, !tbaa !3427
  br label %for.cond, !dbg !4366

for.cond:                                         ; preds = %for.inc, %if.end.8
  %30 = load i64, i64* %i, align 8, !dbg !4367, !tbaa !3427
  %31 = load i64, i64* %r, align 8, !dbg !4371, !tbaa !3427
  %cmp10 = icmp slt i64 %30, %31, !dbg !4372
  br i1 %cmp10, label %for.body, label %for.end, !dbg !4373

for.body:                                         ; preds = %for.cond
  %32 = load %struct._object*, %struct._object** %elem, align 8, !dbg !4374, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !4376
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !4377, !tbaa !2722
  %inc = add i64 %33, 1, !dbg !4377
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4377, !tbaa !2722
  %34 = load %struct._object*, %struct._object** %elem, align 8, !dbg !4378, !tbaa !2683
  %35 = load i64, i64* %i, align 8, !dbg !4379, !tbaa !3427
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !4380, !tbaa !2683
  %37 = bitcast %struct._object* %36 to %struct.PyTupleObject*, !dbg !4381
  %ob_item11 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %37, i32 0, i32 1, !dbg !4382
  %arrayidx12 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item11, i32 0, i64 %35, !dbg !4383
  store %struct._object* %34, %struct._object** %arrayidx12, align 8, !dbg !4384, !tbaa !2683
  br label %for.inc, !dbg !4385

for.inc:                                          ; preds = %for.body
  %38 = load i64, i64* %i, align 8, !dbg !4386, !tbaa !3427
  %inc13 = add i64 %38, 1, !dbg !4386
  store i64 %inc13, i64* %i, align 8, !dbg !4386, !tbaa !3427
  br label %for.cond, !dbg !4387

for.end:                                          ; preds = %for.cond
  br label %if.end.80, !dbg !4388

if.else:                                          ; preds = %if.end
  %39 = load %struct._object*, %struct._object** %result, align 8, !dbg !4389, !tbaa !2683
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !4390
  %40 = load i64, i64* %ob_refcnt14, align 8, !dbg !4390, !tbaa !2722
  %cmp15 = icmp sgt i64 %40, 1, !dbg !4391
  br i1 %cmp15, label %if.then.16, label %if.end.39, !dbg !4392

if.then.16:                                       ; preds = %if.else
  %41 = bitcast %struct._object** %old_result to i8*, !dbg !4393
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !4393
  call void @llvm.dbg.declare(metadata %struct._object** %old_result, metadata !806, metadata !2666), !dbg !4394
  %42 = load %struct._object*, %struct._object** %result, align 8, !dbg !4395, !tbaa !2683
  store %struct._object* %42, %struct._object** %old_result, align 8, !dbg !4394, !tbaa !2683
  %43 = load i64, i64* %r, align 8, !dbg !4396, !tbaa !3427
  %call17 = call %struct._object* @PyTuple_New(i64 %43), !dbg !4397
  store %struct._object* %call17, %struct._object** %result, align 8, !dbg !4398, !tbaa !2683
  %44 = load %struct._object*, %struct._object** %result, align 8, !dbg !4399, !tbaa !2683
  %cmp18 = icmp eq %struct._object* %44, null, !dbg !4401
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !4402

if.then.19:                                       ; preds = %if.then.16
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4403

if.end.20:                                        ; preds = %if.then.16
  %45 = load %struct._object*, %struct._object** %result, align 8, !dbg !4404, !tbaa !2683
  %46 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4405, !tbaa !2683
  %result21 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %46, i32 0, i32 3, !dbg !4406
  store %struct._object* %45, %struct._object** %result21, align 8, !dbg !4407, !tbaa !3294
  store i64 0, i64* %i, align 8, !dbg !4408, !tbaa !3427
  br label %for.cond.22, !dbg !4410

for.cond.22:                                      ; preds = %for.inc.31, %if.end.20
  %47 = load i64, i64* %i, align 8, !dbg !4411, !tbaa !3427
  %48 = load i64, i64* %r, align 8, !dbg !4415, !tbaa !3427
  %cmp23 = icmp slt i64 %47, %48, !dbg !4416
  br i1 %cmp23, label %for.body.24, label %for.end.33, !dbg !4417

for.body.24:                                      ; preds = %for.cond.22
  %49 = load i64, i64* %i, align 8, !dbg !4418, !tbaa !3427
  %50 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !4420, !tbaa !2683
  %51 = bitcast %struct._object* %50 to %struct.PyTupleObject*, !dbg !4421
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %51, i32 0, i32 1, !dbg !4422
  %arrayidx26 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item25, i32 0, i64 %49, !dbg !4423
  %52 = load %struct._object*, %struct._object** %arrayidx26, align 8, !dbg !4423, !tbaa !2683
  store %struct._object* %52, %struct._object** %elem, align 8, !dbg !4424, !tbaa !2683
  %53 = load %struct._object*, %struct._object** %elem, align 8, !dbg !4425, !tbaa !2683
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !4426
  %54 = load i64, i64* %ob_refcnt27, align 8, !dbg !4427, !tbaa !2722
  %inc28 = add i64 %54, 1, !dbg !4427
  store i64 %inc28, i64* %ob_refcnt27, align 8, !dbg !4427, !tbaa !2722
  %55 = load %struct._object*, %struct._object** %elem, align 8, !dbg !4428, !tbaa !2683
  %56 = load i64, i64* %i, align 8, !dbg !4429, !tbaa !3427
  %57 = load %struct._object*, %struct._object** %result, align 8, !dbg !4430, !tbaa !2683
  %58 = bitcast %struct._object* %57 to %struct.PyTupleObject*, !dbg !4431
  %ob_item29 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %58, i32 0, i32 1, !dbg !4432
  %arrayidx30 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item29, i32 0, i64 %56, !dbg !4433
  store %struct._object* %55, %struct._object** %arrayidx30, align 8, !dbg !4434, !tbaa !2683
  br label %for.inc.31, !dbg !4435

for.inc.31:                                       ; preds = %for.body.24
  %59 = load i64, i64* %i, align 8, !dbg !4436, !tbaa !3427
  %inc32 = add i64 %59, 1, !dbg !4436
  store i64 %inc32, i64* %i, align 8, !dbg !4436, !tbaa !3427
  br label %for.cond.22, !dbg !4437

for.end.33:                                       ; preds = %for.cond.22
  br label %do.body, !dbg !4438

do.body:                                          ; preds = %for.end.33
  %60 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4439
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !4439
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !811, metadata !2666), !dbg !4441
  %61 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !4442, !tbaa !2683
  store %struct._object* %61, %struct._object** %_py_decref_tmp, align 8, !dbg !4441, !tbaa !2683
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4443, !tbaa !2683
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !4445
  %63 = load i64, i64* %ob_refcnt34, align 8, !dbg !4446, !tbaa !2722
  %dec = add i64 %63, -1, !dbg !4446
  store i64 %dec, i64* %ob_refcnt34, align 8, !dbg !4446, !tbaa !2722
  %cmp35 = icmp ne i64 %dec, 0, !dbg !4447
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !4448

if.then.36:                                       ; preds = %do.body
  br label %if.end.38, !dbg !4449

if.else.37:                                       ; preds = %do.body
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4451, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !4453
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4453, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !4454
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4454, !tbaa !2768
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4455, !tbaa !2683
  call void %66(%struct._object* %67), !dbg !4456
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.37, %if.then.36
  %68 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4457
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !4457
  br label %do.cond, !dbg !4459

do.cond:                                          ; preds = %if.end.38
  br label %do.end, !dbg !4460

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !4462
  br label %cleanup, !dbg !4462

cleanup:                                          ; preds = %do.end, %if.then.19
  %69 = bitcast %struct._object** %old_result to i8*, !dbg !4463
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !4463
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %empty, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.39, !dbg !4465

if.end.39:                                        ; preds = %cleanup.cont, %if.else
  %70 = load i64, i64* %r, align 8, !dbg !4466, !tbaa !3427
  %sub = sub i64 %70, 1, !dbg !4468
  store i64 %sub, i64* %i, align 8, !dbg !4469, !tbaa !3427
  br label %for.cond.40, !dbg !4470

for.cond.40:                                      ; preds = %for.inc.46, %if.end.39
  %71 = load i64, i64* %i, align 8, !dbg !4471, !tbaa !3427
  %cmp41 = icmp sge i64 %71, 0, !dbg !4475
  br i1 %cmp41, label %land.rhs, label %land.end, !dbg !4476

land.rhs:                                         ; preds = %for.cond.40
  %72 = load i64, i64* %i, align 8, !dbg !4477, !tbaa !3427
  %73 = load i64*, i64** %indices, align 8, !dbg !4479, !tbaa !2683
  %arrayidx42 = getelementptr i64, i64* %73, i64 %72, !dbg !4479
  %74 = load i64, i64* %arrayidx42, align 8, !dbg !4479, !tbaa !3427
  %75 = load i64, i64* %n, align 8, !dbg !4480, !tbaa !3427
  %sub43 = sub i64 %75, 1, !dbg !4481
  %cmp44 = icmp eq i64 %74, %sub43, !dbg !4482
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.40
  %76 = phi i1 [ false, %for.cond.40 ], [ %cmp44, %land.rhs ]
  br i1 %76, label %for.body.45, label %for.end.48, !dbg !4483

for.body.45:                                      ; preds = %land.end
  br label %for.inc.46, !dbg !4485

for.inc.46:                                       ; preds = %for.body.45
  %77 = load i64, i64* %i, align 8, !dbg !4487, !tbaa !3427
  %dec47 = add i64 %77, -1, !dbg !4487
  store i64 %dec47, i64* %i, align 8, !dbg !4487, !tbaa !3427
  br label %for.cond.40, !dbg !4489

for.end.48:                                       ; preds = %land.end
  %78 = load i64, i64* %i, align 8, !dbg !4490, !tbaa !3427
  %cmp49 = icmp slt i64 %78, 0, !dbg !4492
  br i1 %cmp49, label %if.then.50, label %if.end.51, !dbg !4493

if.then.50:                                       ; preds = %for.end.48
  br label %empty, !dbg !4494

if.end.51:                                        ; preds = %for.end.48
  %79 = load i64, i64* %i, align 8, !dbg !4495, !tbaa !3427
  %80 = load i64*, i64** %indices, align 8, !dbg !4496, !tbaa !2683
  %arrayidx52 = getelementptr i64, i64* %80, i64 %79, !dbg !4496
  %81 = load i64, i64* %arrayidx52, align 8, !dbg !4496, !tbaa !3427
  %add = add i64 %81, 1, !dbg !4497
  store i64 %add, i64* %index, align 8, !dbg !4498, !tbaa !3427
  %82 = load i64, i64* %index, align 8, !dbg !4499, !tbaa !3427
  %83 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4500, !tbaa !2683
  %84 = bitcast %struct._object* %83 to %struct.PyTupleObject*, !dbg !4501
  %ob_item53 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %84, i32 0, i32 1, !dbg !4502
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item53, i32 0, i64 %82, !dbg !4503
  %85 = load %struct._object*, %struct._object** %arrayidx54, align 8, !dbg !4503, !tbaa !2683
  store %struct._object* %85, %struct._object** %elem, align 8, !dbg !4504, !tbaa !2683
  br label %for.cond.55, !dbg !4505

for.cond.55:                                      ; preds = %for.inc.77, %if.end.51
  %86 = load i64, i64* %i, align 8, !dbg !4506, !tbaa !3427
  %87 = load i64, i64* %r, align 8, !dbg !4509, !tbaa !3427
  %cmp56 = icmp slt i64 %86, %87, !dbg !4510
  br i1 %cmp56, label %for.body.57, label %for.end.79, !dbg !4511

for.body.57:                                      ; preds = %for.cond.55
  %88 = load i64, i64* %index, align 8, !dbg !4512, !tbaa !3427
  %89 = load i64, i64* %i, align 8, !dbg !4513, !tbaa !3427
  %90 = load i64*, i64** %indices, align 8, !dbg !4514, !tbaa !2683
  %arrayidx58 = getelementptr i64, i64* %90, i64 %89, !dbg !4514
  store i64 %88, i64* %arrayidx58, align 8, !dbg !4515, !tbaa !3427
  %91 = load %struct._object*, %struct._object** %elem, align 8, !dbg !4516, !tbaa !2683
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !4517
  %92 = load i64, i64* %ob_refcnt59, align 8, !dbg !4518, !tbaa !2722
  %inc60 = add i64 %92, 1, !dbg !4518
  store i64 %inc60, i64* %ob_refcnt59, align 8, !dbg !4518, !tbaa !2722
  %93 = load i64, i64* %i, align 8, !dbg !4519, !tbaa !3427
  %94 = load %struct._object*, %struct._object** %result, align 8, !dbg !4520, !tbaa !2683
  %95 = bitcast %struct._object* %94 to %struct.PyTupleObject*, !dbg !4521
  %ob_item61 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %95, i32 0, i32 1, !dbg !4522
  %arrayidx62 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item61, i32 0, i64 %93, !dbg !4523
  %96 = load %struct._object*, %struct._object** %arrayidx62, align 8, !dbg !4523, !tbaa !2683
  store %struct._object* %96, %struct._object** %oldelem, align 8, !dbg !4524, !tbaa !2683
  %97 = load %struct._object*, %struct._object** %elem, align 8, !dbg !4525, !tbaa !2683
  %98 = load i64, i64* %i, align 8, !dbg !4526, !tbaa !3427
  %99 = load %struct._object*, %struct._object** %result, align 8, !dbg !4527, !tbaa !2683
  %100 = bitcast %struct._object* %99 to %struct.PyTupleObject*, !dbg !4528
  %ob_item63 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %100, i32 0, i32 1, !dbg !4529
  %arrayidx64 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item63, i32 0, i64 %98, !dbg !4530
  store %struct._object* %97, %struct._object** %arrayidx64, align 8, !dbg !4531, !tbaa !2683
  br label %do.body.65, !dbg !4532

do.body.65:                                       ; preds = %for.body.57
  %101 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !4533
  call void @llvm.lifetime.start(i64 8, i8* %101) #1, !dbg !4533
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp66, metadata !813, metadata !2666), !dbg !4535
  %102 = load %struct._object*, %struct._object** %oldelem, align 8, !dbg !4536, !tbaa !2683
  store %struct._object* %102, %struct._object** %_py_decref_tmp66, align 8, !dbg !4535, !tbaa !2683
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !4537, !tbaa !2683
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 0, !dbg !4539
  %104 = load i64, i64* %ob_refcnt67, align 8, !dbg !4540, !tbaa !2722
  %dec68 = add i64 %104, -1, !dbg !4540
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !4540, !tbaa !2722
  %cmp69 = icmp ne i64 %dec68, 0, !dbg !4541
  br i1 %cmp69, label %if.then.70, label %if.else.71, !dbg !4542

if.then.70:                                       ; preds = %do.body.65
  br label %if.end.74, !dbg !4543

if.else.71:                                       ; preds = %do.body.65
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !4545, !tbaa !2683
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1, !dbg !4547
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !4547, !tbaa !2675
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %106, i32 0, i32 4, !dbg !4548
  %107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !4548, !tbaa !2768
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !4549, !tbaa !2683
  call void %107(%struct._object* %108), !dbg !4550
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  %109 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !4551
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !4551
  br label %do.cond.75, !dbg !4553

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !4554

do.end.76:                                        ; preds = %do.cond.75
  br label %for.inc.77, !dbg !4556

for.inc.77:                                       ; preds = %do.end.76
  %110 = load i64, i64* %i, align 8, !dbg !4557, !tbaa !3427
  %inc78 = add i64 %110, 1, !dbg !4557
  store i64 %inc78, i64* %i, align 8, !dbg !4557, !tbaa !3427
  br label %for.cond.55, !dbg !4558

for.end.79:                                       ; preds = %for.cond.55
  br label %if.end.80

if.end.80:                                        ; preds = %for.end.79, %for.end
  %111 = load %struct._object*, %struct._object** %result, align 8, !dbg !4559, !tbaa !2683
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 0, !dbg !4560
  %112 = load i64, i64* %ob_refcnt81, align 8, !dbg !4561, !tbaa !2722
  %inc82 = add i64 %112, 1, !dbg !4561
  store i64 %inc82, i64* %ob_refcnt81, align 8, !dbg !4561, !tbaa !2722
  %113 = load %struct._object*, %struct._object** %result, align 8, !dbg !4562, !tbaa !2683
  store %struct._object* %113, %struct._object** %retval, !dbg !4563
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !4563

empty:                                            ; preds = %LeafBlock.1, %if.then.50, %if.then.7
  %114 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !4564, !tbaa !2683
  %stopped83 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %114, i32 0, i32 5, !dbg !4565
  store i32 1, i32* %stopped83, align 4, !dbg !4566, !tbaa !3440
  store %struct._object* null, %struct._object** %retval, !dbg !4567
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !4567

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.84

cleanup.84:                                       ; preds = %NewDefault, %empty, %if.end.80, %if.then
  %115 = bitcast i64* %index to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !4568
  %116 = bitcast i64* %i to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !4568
  %117 = bitcast i64* %r to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !4568
  %118 = bitcast i64* %n to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !4568
  %119 = bitcast %struct._object** %result to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !4568
  %120 = bitcast i64** %indices to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !4568
  %121 = bitcast %struct._object** %pool to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !4568
  %122 = bitcast %struct._object** %oldelem to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !4568
  %123 = bitcast %struct._object** %elem to i8*, !dbg !4568
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !4568
  %124 = load %struct._object*, %struct._object** %retval, !dbg !4568
  ret %struct._object* %124, !dbg !4568
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %co = alloca %struct.cwrobject*, align 8
  %n = alloca i64, align 8
  %r = alloca i64, align 8
  %pool = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !867, metadata !2666), !dbg !4569
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !868, metadata !2666), !dbg !4570
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !869, metadata !2666), !dbg !4571
  %0 = bitcast %struct.cwrobject** %co to i8*, !dbg !4572
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4572
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %co, metadata !870, metadata !2666), !dbg !4573
  %1 = bitcast i64* %n to i8*, !dbg !4574
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4574
  call void @llvm.dbg.declare(metadata i64* %n, metadata !871, metadata !2666), !dbg !4575
  %2 = bitcast i64* %r to i8*, !dbg !4576
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4576
  call void @llvm.dbg.declare(metadata i64* %r, metadata !872, metadata !2666), !dbg !4577
  %3 = bitcast %struct._object** %pool to i8*, !dbg !4578
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4578
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !873, metadata !2666), !dbg !4579
  store %struct._object* null, %struct._object** %pool, align 8, !dbg !4579, !tbaa !2683
  %4 = bitcast %struct._object** %iterable to i8*, !dbg !4580
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4580
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !874, metadata !2666), !dbg !4581
  store %struct._object* null, %struct._object** %iterable, align 8, !dbg !4581, !tbaa !2683
  %5 = bitcast i64** %indices to i8*, !dbg !4582
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4582
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !875, metadata !2666), !dbg !4583
  store i64* null, i64** %indices, align 8, !dbg !4583, !tbaa !2683
  %6 = bitcast i64* %i to i8*, !dbg !4584
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4584
  call void @llvm.dbg.declare(metadata i64* %i, metadata !876, metadata !2666), !dbg !4585
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4586, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4588, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %7, %struct._object* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @cwr_new.kwargs, i32 0, i32 0), %struct._object** %iterable, i64* %r), !dbg !4589
  %tobool = icmp ne i32 %call, 0, !dbg !4589
  br i1 %tobool, label %if.end, label %if.then, !dbg !4590

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4591

if.end:                                           ; preds = %entry
  %9 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !4592, !tbaa !2683
  %call1 = call %struct._object* @PySequence_Tuple(%struct._object* %9), !dbg !4593
  store %struct._object* %call1, %struct._object** %pool, align 8, !dbg !4594, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4595, !tbaa !2683
  %cmp = icmp eq %struct._object* %10, null, !dbg !4597
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4598

if.then.2:                                        ; preds = %if.end
  br label %error, !dbg !4599

if.end.3:                                         ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4600, !tbaa !2683
  %12 = bitcast %struct._object* %11 to %struct.PyVarObject*, !dbg !4601
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1, !dbg !4602
  %13 = load i64, i64* %ob_size, align 8, !dbg !4602, !tbaa !3426
  store i64 %13, i64* %n, align 8, !dbg !4603, !tbaa !3427
  %14 = load i64, i64* %r, align 8, !dbg !4604, !tbaa !3427
  %cmp4 = icmp slt i64 %14, 0, !dbg !4606
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !4607

if.then.5:                                        ; preds = %if.end.3
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4608, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0)), !dbg !4610
  br label %error, !dbg !4611

if.end.6:                                         ; preds = %if.end.3
  %16 = load i64, i64* %r, align 8, !dbg !4612, !tbaa !3427
  %mul = mul i64 %16, 8, !dbg !4613
  %call7 = call i8* @PyMem_Malloc(i64 %mul), !dbg !4614
  %17 = bitcast i8* %call7 to i64*, !dbg !4614
  store i64* %17, i64** %indices, align 8, !dbg !4615, !tbaa !2683
  %18 = load i64*, i64** %indices, align 8, !dbg !4616, !tbaa !2683
  %cmp8 = icmp eq i64* %18, null, !dbg !4618
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !4619

if.then.9:                                        ; preds = %if.end.6
  %call10 = call %struct._object* @PyErr_NoMemory(), !dbg !4620
  br label %error, !dbg !4622

if.end.11:                                        ; preds = %if.end.6
  store i64 0, i64* %i, align 8, !dbg !4623, !tbaa !3427
  br label %for.cond, !dbg !4625

for.cond:                                         ; preds = %for.inc, %if.end.11
  %19 = load i64, i64* %i, align 8, !dbg !4626, !tbaa !3427
  %20 = load i64, i64* %r, align 8, !dbg !4630, !tbaa !3427
  %cmp12 = icmp slt i64 %19, %20, !dbg !4631
  br i1 %cmp12, label %for.body, label %for.end, !dbg !4632

for.body:                                         ; preds = %for.cond
  %21 = load i64, i64* %i, align 8, !dbg !4633, !tbaa !3427
  %22 = load i64*, i64** %indices, align 8, !dbg !4634, !tbaa !2683
  %arrayidx = getelementptr i64, i64* %22, i64 %21, !dbg !4634
  store i64 0, i64* %arrayidx, align 8, !dbg !4635, !tbaa !3427
  br label %for.inc, !dbg !4634

for.inc:                                          ; preds = %for.body
  %23 = load i64, i64* %i, align 8, !dbg !4636, !tbaa !3427
  %inc = add i64 %23, 1, !dbg !4636
  store i64 %inc, i64* %i, align 8, !dbg !4636, !tbaa !3427
  br label %for.cond, !dbg !4637

for.end:                                          ; preds = %for.cond
  %24 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4638, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 36, !dbg !4639
  %25 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4639, !tbaa !3097
  %26 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4640, !tbaa !2683
  %call13 = call %struct._object* %25(%struct._typeobject* %26, i64 0), !dbg !4638
  %27 = bitcast %struct._object* %call13 to %struct.cwrobject*, !dbg !4641
  store %struct.cwrobject* %27, %struct.cwrobject** %co, align 8, !dbg !4642, !tbaa !2683
  %28 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4643, !tbaa !2683
  %cmp14 = icmp eq %struct.cwrobject* %28, null, !dbg !4645
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !4646

if.then.15:                                       ; preds = %for.end
  br label %error, !dbg !4647

if.end.16:                                        ; preds = %for.end
  %29 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4648, !tbaa !2683
  %30 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4649, !tbaa !2683
  %pool17 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %30, i32 0, i32 1, !dbg !4650
  store %struct._object* %29, %struct._object** %pool17, align 8, !dbg !4651, !tbaa !3252
  %31 = load i64*, i64** %indices, align 8, !dbg !4652, !tbaa !2683
  %32 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4653, !tbaa !2683
  %indices18 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %32, i32 0, i32 2, !dbg !4654
  store i64* %31, i64** %indices18, align 8, !dbg !4655, !tbaa !3330
  %33 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4656, !tbaa !2683
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %33, i32 0, i32 3, !dbg !4657
  store %struct._object* null, %struct._object** %result, align 8, !dbg !4658, !tbaa !3294
  %34 = load i64, i64* %r, align 8, !dbg !4659, !tbaa !3427
  %35 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4660, !tbaa !2683
  %r19 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %35, i32 0, i32 4, !dbg !4661
  store i64 %34, i64* %r19, align 8, !dbg !4662, !tbaa !3432
  %36 = load i64, i64* %n, align 8, !dbg !4663, !tbaa !3427
  %tobool20 = icmp ne i64 %36, 0, !dbg !4663
  br i1 %tobool20, label %land.end, label %land.rhs, !dbg !4664

land.rhs:                                         ; preds = %if.end.16
  %37 = load i64, i64* %r, align 8, !dbg !4665, !tbaa !3427
  %tobool21 = icmp ne i64 %37, 0, !dbg !4664
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.16
  %38 = phi i1 [ false, %if.end.16 ], [ %tobool21, %land.rhs ]
  %land.ext = zext i1 %38 to i32, !dbg !4667
  %39 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4669, !tbaa !2683
  %stopped = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %39, i32 0, i32 5, !dbg !4670
  store i32 %land.ext, i32* %stopped, align 4, !dbg !4671, !tbaa !3440
  %40 = load %struct.cwrobject*, %struct.cwrobject** %co, align 8, !dbg !4672, !tbaa !2683
  %41 = bitcast %struct.cwrobject* %40 to %struct._object*, !dbg !4673
  store %struct._object* %41, %struct._object** %retval, !dbg !4674
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4674

error:                                            ; preds = %if.then.15, %if.then.9, %if.then.5, %if.then.2
  %42 = load i64*, i64** %indices, align 8, !dbg !4675, !tbaa !2683
  %cmp22 = icmp ne i64* %42, null, !dbg !4677
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !4678

if.then.23:                                       ; preds = %error
  %43 = load i64*, i64** %indices, align 8, !dbg !4679, !tbaa !2683
  %44 = bitcast i64* %43 to i8*, !dbg !4679
  call void @PyMem_Free(i8* %44), !dbg !4680
  br label %if.end.24, !dbg !4680

if.end.24:                                        ; preds = %if.then.23, %error
  br label %do.body, !dbg !4681

do.body:                                          ; preds = %if.end.24
  %45 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4682
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !4682
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !877, metadata !2666), !dbg !4684
  %46 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4685, !tbaa !2683
  store %struct._object* %46, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4684, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4686, !tbaa !2683
  %cmp25 = icmp ne %struct._object* %47, null, !dbg !4687
  br i1 %cmp25, label %if.then.26, label %if.end.31, !dbg !4688

if.then.26:                                       ; preds = %do.body
  br label %do.body.27, !dbg !4689

do.body.27:                                       ; preds = %if.then.26
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4691
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !4691
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !879, metadata !2666), !dbg !4693
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4694, !tbaa !2683
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8, !dbg !4693, !tbaa !2683
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4695, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4697
  %51 = load i64, i64* %ob_refcnt, align 8, !dbg !4698, !tbaa !2722
  %dec = add i64 %51, -1, !dbg !4698
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4698, !tbaa !2722
  %cmp28 = icmp ne i64 %dec, 0, !dbg !4699
  br i1 %cmp28, label %if.then.29, label %if.else, !dbg !4700

if.then.29:                                       ; preds = %do.body.27
  br label %if.end.30, !dbg !4701

if.else:                                          ; preds = %do.body.27
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4703, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4705
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4705, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4706
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4706, !tbaa !2768
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4707, !tbaa !2683
  call void %54(%struct._object* %55), !dbg !4708
  br label %if.end.30

if.end.30:                                        ; preds = %if.else, %if.then.29
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4709
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !4709
  br label %do.cond, !dbg !4711

do.cond:                                          ; preds = %if.end.30
  br label %do.end, !dbg !4712

do.end:                                           ; preds = %do.cond
  br label %if.end.31, !dbg !4714

if.end.31:                                        ; preds = %do.end, %do.body
  %57 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4716
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !4716
  br label %do.cond.32, !dbg !4719

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !4720

do.end.33:                                        ; preds = %do.cond.32
  store %struct._object* null, %struct._object** %retval, !dbg !4722
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4722

cleanup:                                          ; preds = %do.end.33, %land.end, %if.then
  %58 = bitcast i64* %i to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !4723
  %59 = bitcast i64** %indices to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !4723
  %60 = bitcast %struct._object** %iterable to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !4723
  %61 = bitcast %struct._object** %pool to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !4723
  %62 = bitcast i64* %r to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !4723
  %63 = bitcast i64* %n to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !4723
  %64 = bitcast %struct.cwrobject** %co to i8*, !dbg !4723
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !4723
  %65 = load %struct._object*, %struct._object** %retval, !dbg !4723
  ret %struct._object* %65, !dbg !4723
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_reduce(%struct.cwrobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.cwrobject*, align 8
  %indices = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %index = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.cwrobject* %lz, %struct.cwrobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %lz.addr, metadata !820, metadata !2666), !dbg !4724
  %0 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4725, !tbaa !2683
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %0, i32 0, i32 3, !dbg !4726
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !4726, !tbaa !3294
  %cmp = icmp eq %struct._object* %1, null, !dbg !4727
  br i1 %cmp, label %if.then, label %if.else, !dbg !4728

if.then:                                          ; preds = %entry
  %2 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4729, !tbaa !2683
  %3 = bitcast %struct.cwrobject* %2 to %struct._object*, !dbg !4731
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !4732
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4732, !tbaa !2675
  %5 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4733, !tbaa !2683
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %5, i32 0, i32 1, !dbg !4734
  %6 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4734, !tbaa !3252
  %7 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4735, !tbaa !2683
  %r = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %7, i32 0, i32 4, !dbg !4736
  %8 = load i64, i64* %r, align 8, !dbg !4736, !tbaa !3432
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._typeobject* %4, %struct._object* %6, i64 %8), !dbg !4737
  store %struct._object* %call, %struct._object** %retval, !dbg !4738
  br label %return, !dbg !4738

if.else:                                          ; preds = %entry
  %9 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4739, !tbaa !2683
  %stopped = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %9, i32 0, i32 5, !dbg !4740
  %10 = load i32, i32* %stopped, align 4, !dbg !4740, !tbaa !3440
  %tobool = icmp ne i32 %10, 0, !dbg !4739
  br i1 %tobool, label %if.then.1, label %if.else.5, !dbg !4741

if.then.1:                                        ; preds = %if.else
  %11 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4742, !tbaa !2683
  %12 = bitcast %struct.cwrobject* %11 to %struct._object*, !dbg !4744
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !4745
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !4745, !tbaa !2675
  %14 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4746, !tbaa !2683
  %r3 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %14, i32 0, i32 4, !dbg !4747
  %15 = load i64, i64* %r3, align 8, !dbg !4747, !tbaa !3432
  %call4 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._typeobject* %13, i64 %15), !dbg !4748
  store %struct._object* %call4, %struct._object** %retval, !dbg !4749
  br label %return, !dbg !4749

if.else.5:                                        ; preds = %if.else
  %16 = bitcast %struct._object** %indices to i8*, !dbg !4750
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !4750
  call void @llvm.dbg.declare(metadata %struct._object** %indices, metadata !821, metadata !2666), !dbg !4751
  %17 = bitcast i64* %i to i8*, !dbg !4752
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !4752
  call void @llvm.dbg.declare(metadata i64* %i, metadata !825, metadata !2666), !dbg !4753
  %18 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4754, !tbaa !2683
  %r6 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %18, i32 0, i32 4, !dbg !4755
  %19 = load i64, i64* %r6, align 8, !dbg !4755, !tbaa !3432
  %call7 = call %struct._object* @PyTuple_New(i64 %19), !dbg !4756
  store %struct._object* %call7, %struct._object** %indices, align 8, !dbg !4757, !tbaa !2683
  %20 = load %struct._object*, %struct._object** %indices, align 8, !dbg !4758, !tbaa !2683
  %tobool8 = icmp ne %struct._object* %20, null, !dbg !4758
  br i1 %tobool8, label %if.end, label %if.then.9, !dbg !4760

if.then.9:                                        ; preds = %if.else.5
  store %struct._object* null, %struct._object** %retval, !dbg !4761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !4761

if.end:                                           ; preds = %if.else.5
  store i64 0, i64* %i, align 8, !dbg !4762, !tbaa !3427
  br label %for.cond, !dbg !4763

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i64, i64* %i, align 8, !dbg !4764, !tbaa !3427
  %22 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4767, !tbaa !2683
  %r10 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %22, i32 0, i32 4, !dbg !4768
  %23 = load i64, i64* %r10, align 8, !dbg !4768, !tbaa !3432
  %cmp11 = icmp slt i64 %21, %23, !dbg !4769
  br i1 %cmp11, label %for.body, label %for.end, !dbg !4770

for.body:                                         ; preds = %for.cond
  %24 = bitcast %struct._object** %index to i8*, !dbg !4771
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !4771
  call void @llvm.dbg.declare(metadata %struct._object** %index, metadata !826, metadata !2666), !dbg !4772
  %25 = load i64, i64* %i, align 8, !dbg !4773, !tbaa !3427
  %26 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4774, !tbaa !2683
  %indices12 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %26, i32 0, i32 2, !dbg !4775
  %27 = load i64*, i64** %indices12, align 8, !dbg !4775, !tbaa !3330
  %arrayidx = getelementptr i64, i64* %27, i64 %25, !dbg !4774
  %28 = load i64, i64* %arrayidx, align 8, !dbg !4774, !tbaa !3427
  %call13 = call %struct._object* @PyLong_FromSsize_t(i64 %28), !dbg !4776
  store %struct._object* %call13, %struct._object** %index, align 8, !dbg !4772, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %index, align 8, !dbg !4777, !tbaa !2683
  %tobool14 = icmp ne %struct._object* %29, null, !dbg !4777
  br i1 %tobool14, label %if.end.21, label %if.then.15, !dbg !4778

if.then.15:                                       ; preds = %for.body
  br label %do.body, !dbg !4779

do.body:                                          ; preds = %if.then.15
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4780
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !4780
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !830, metadata !2666), !dbg !4782
  %31 = load %struct._object*, %struct._object** %indices, align 8, !dbg !4783, !tbaa !2683
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8, !dbg !4782, !tbaa !2683
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4784, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !4786
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !4787, !tbaa !2722
  %dec = add i64 %33, -1, !dbg !4787
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4787, !tbaa !2722
  %cmp16 = icmp ne i64 %dec, 0, !dbg !4788
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !4789

if.then.17:                                       ; preds = %do.body
  br label %if.end.20, !dbg !4790

if.else.18:                                       ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4792, !tbaa !2683
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !4794
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !4794, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !4795
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4795, !tbaa !2768
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4796, !tbaa !2683
  call void %36(%struct._object* %37), !dbg !4797
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.18, %if.then.17
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4798
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !4798
  br label %do.cond, !dbg !4800

do.cond:                                          ; preds = %if.end.20
  br label %do.end, !dbg !4801

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !4803
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4803

if.end.21:                                        ; preds = %for.body
  %39 = load %struct._object*, %struct._object** %index, align 8, !dbg !4804, !tbaa !2683
  %40 = load i64, i64* %i, align 8, !dbg !4805, !tbaa !3427
  %41 = load %struct._object*, %struct._object** %indices, align 8, !dbg !4806, !tbaa !2683
  %42 = bitcast %struct._object* %41 to %struct.PyTupleObject*, !dbg !4807
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %42, i32 0, i32 1, !dbg !4808
  %arrayidx22 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %40, !dbg !4809
  store %struct._object* %39, %struct._object** %arrayidx22, align 8, !dbg !4810, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !4811
  br label %cleanup, !dbg !4811

cleanup:                                          ; preds = %if.end.21, %do.end
  %43 = bitcast %struct._object** %index to i8*, !dbg !4812
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !4812
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !4813

for.inc:                                          ; preds = %cleanup.cont
  %44 = load i64, i64* %i, align 8, !dbg !4814, !tbaa !3427
  %inc = add i64 %44, 1, !dbg !4814
  store i64 %inc, i64* %i, align 8, !dbg !4814, !tbaa !3427
  br label %for.cond, !dbg !4815

for.end:                                          ; preds = %for.cond
  %45 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4816, !tbaa !2683
  %46 = bitcast %struct.cwrobject* %45 to %struct._object*, !dbg !4817
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !4818
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !4818, !tbaa !2675
  %48 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4819, !tbaa !2683
  %pool24 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %48, i32 0, i32 1, !dbg !4820
  %49 = load %struct._object*, %struct._object** %pool24, align 8, !dbg !4820, !tbaa !3252
  %50 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4821, !tbaa !2683
  %r25 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %50, i32 0, i32 4, !dbg !4822
  %51 = load i64, i64* %r25, align 8, !dbg !4822, !tbaa !3432
  %52 = load %struct._object*, %struct._object** %indices, align 8, !dbg !4823, !tbaa !2683
  %call26 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), %struct._typeobject* %47, %struct._object* %49, i64 %51, %struct._object* %52), !dbg !4824
  store %struct._object* %call26, %struct._object** %retval, !dbg !4825
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !4825

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.27

cleanup.27:                                       ; preds = %NewDefault, %for.end, %if.then.9
  %53 = bitcast i64* %i to i8*, !dbg !4826
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !4826
  %54 = bitcast %struct._object** %indices to i8*, !dbg !4826
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !4826
  br label %return

return:                                           ; preds = %cleanup.27, %if.then.1, %if.then
  %55 = load %struct._object*, %struct._object** %retval, !dbg !4827
  ret %struct._object* %55, !dbg !4827
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_setstate(%struct.cwrobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.cwrobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %indexObject = alloca %struct._object*, align 8
  %index = alloca i64, align 8
  %element = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.cwrobject* %lz, %struct.cwrobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %lz.addr, metadata !838, metadata !2666), !dbg !4828
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !839, metadata !2666), !dbg !4829
  %0 = bitcast %struct._object** %result to i8*, !dbg !4830
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4830
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !840, metadata !2666), !dbg !4831
  %1 = bitcast i64* %n to i8*, !dbg !4832
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4832
  call void @llvm.dbg.declare(metadata i64* %n, metadata !841, metadata !2666), !dbg !4833
  %2 = bitcast i64* %i to i8*, !dbg !4832
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4832
  call void @llvm.dbg.declare(metadata i64* %i, metadata !842, metadata !2666), !dbg !4834
  %3 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !4835, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !4837
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4837, !tbaa !2675
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !4838
  %5 = load i64, i64* %tp_flags, align 8, !dbg !4838, !tbaa !3968
  %and = and i64 %5, 67108864, !dbg !4839
  %cmp = icmp ne i64 %and, 0, !dbg !4840
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !4841

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !4842, !tbaa !2683
  %7 = bitcast %struct._object* %6 to %struct.PyVarObject*, !dbg !4844
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1, !dbg !4845
  %8 = load i64, i64* %ob_size, align 8, !dbg !4845, !tbaa !3426
  %9 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4846, !tbaa !2683
  %r = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %9, i32 0, i32 4, !dbg !4847
  %10 = load i64, i64* %r, align 8, !dbg !4847, !tbaa !3432
  %cmp1 = icmp ne i64 %8, %10, !dbg !4848
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4849

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4850, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0)), !dbg !4852
  store %struct._object* null, %struct._object** %retval, !dbg !4853
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !4853

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4854, !tbaa !2683
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %12, i32 0, i32 1, !dbg !4855
  %13 = load %struct._object*, %struct._object** %pool, align 8, !dbg !4855, !tbaa !3252
  %14 = bitcast %struct._object* %13 to %struct.PyVarObject*, !dbg !4856
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1, !dbg !4857
  %15 = load i64, i64* %ob_size2, align 8, !dbg !4857, !tbaa !3426
  store i64 %15, i64* %n, align 8, !dbg !4858, !tbaa !3427
  store i64 0, i64* %i, align 8, !dbg !4859, !tbaa !3427
  br label %for.cond, !dbg !4860

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i64, i64* %i, align 8, !dbg !4861, !tbaa !3427
  %17 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4864, !tbaa !2683
  %r3 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %17, i32 0, i32 4, !dbg !4865
  %18 = load i64, i64* %r3, align 8, !dbg !4865, !tbaa !3432
  %cmp4 = icmp slt i64 %16, %18, !dbg !4866
  br i1 %cmp4, label %for.body, label %for.end, !dbg !4867

for.body:                                         ; preds = %for.cond
  %19 = bitcast %struct._object** %indexObject to i8*, !dbg !4868
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !4868
  call void @llvm.dbg.declare(metadata %struct._object** %indexObject, metadata !843, metadata !2666), !dbg !4869
  %20 = load i64, i64* %i, align 8, !dbg !4870, !tbaa !3427
  %21 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !4871, !tbaa !2683
  %22 = bitcast %struct._object* %21 to %struct.PyTupleObject*, !dbg !4872
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %22, i32 0, i32 1, !dbg !4873
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %20, !dbg !4874
  %23 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4874, !tbaa !2683
  store %struct._object* %23, %struct._object** %indexObject, align 8, !dbg !4869, !tbaa !2683
  %24 = bitcast i64* %index to i8*, !dbg !4875
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !4875
  call void @llvm.dbg.declare(metadata i64* %index, metadata !847, metadata !2666), !dbg !4876
  %25 = load %struct._object*, %struct._object** %indexObject, align 8, !dbg !4877, !tbaa !2683
  %call = call i64 @PyLong_AsSsize_t(%struct._object* %25), !dbg !4878
  store i64 %call, i64* %index, align 8, !dbg !4876, !tbaa !3427
  %26 = load i64, i64* %index, align 8, !dbg !4879, !tbaa !3427
  %cmp5 = icmp slt i64 %26, 0, !dbg !4881
  br i1 %cmp5, label %land.lhs.true, label %if.end.8, !dbg !4882

land.lhs.true:                                    ; preds = %for.body
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !4883
  %tobool = icmp ne %struct._object* %call6, null, !dbg !4883
  br i1 %tobool, label %if.then.7, label %if.end.8, !dbg !4885

if.then.7:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !4886
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4886

if.end.8:                                         ; preds = %land.lhs.true, %for.body
  %27 = load i64, i64* %index, align 8, !dbg !4887, !tbaa !3427
  %cmp9 = icmp slt i64 %27, 0, !dbg !4889
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !4890

if.then.10:                                       ; preds = %if.end.8
  store i64 0, i64* %index, align 8, !dbg !4891, !tbaa !3427
  br label %if.end.15, !dbg !4892

if.else:                                          ; preds = %if.end.8
  %28 = load i64, i64* %index, align 8, !dbg !4893, !tbaa !3427
  %29 = load i64, i64* %n, align 8, !dbg !4895, !tbaa !3427
  %sub = sub i64 %29, 1, !dbg !4896
  %cmp11 = icmp sgt i64 %28, %sub, !dbg !4897
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !4898

if.then.12:                                       ; preds = %if.else
  %30 = load i64, i64* %n, align 8, !dbg !4899, !tbaa !3427
  %sub13 = sub i64 %30, 1, !dbg !4900
  store i64 %sub13, i64* %index, align 8, !dbg !4901, !tbaa !3427
  br label %if.end.14, !dbg !4902

if.end.14:                                        ; preds = %if.then.12, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.10
  %31 = load i64, i64* %index, align 8, !dbg !4903, !tbaa !3427
  %32 = load i64, i64* %i, align 8, !dbg !4904, !tbaa !3427
  %33 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4905, !tbaa !2683
  %indices = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %33, i32 0, i32 2, !dbg !4906
  %34 = load i64*, i64** %indices, align 8, !dbg !4906, !tbaa !3330
  %arrayidx16 = getelementptr i64, i64* %34, i64 %32, !dbg !4905
  store i64 %31, i64* %arrayidx16, align 8, !dbg !4907, !tbaa !3427
  store i32 0, i32* %cleanup.dest.slot, !dbg !4908
  br label %cleanup, !dbg !4908

cleanup:                                          ; preds = %if.end.15, %if.then.7
  %35 = bitcast i64* %index to i8*, !dbg !4909
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !4909
  %36 = bitcast %struct._object** %indexObject to i8*, !dbg !4909
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !4909
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !4910

for.inc:                                          ; preds = %cleanup.cont
  %37 = load i64, i64* %i, align 8, !dbg !4911, !tbaa !3427
  %inc = add i64 %37, 1, !dbg !4911
  store i64 %inc, i64* %i, align 8, !dbg !4911, !tbaa !3427
  br label %for.cond, !dbg !4912

for.end:                                          ; preds = %for.cond
  %38 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4913, !tbaa !2683
  %r18 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %38, i32 0, i32 4, !dbg !4914
  %39 = load i64, i64* %r18, align 8, !dbg !4914, !tbaa !3432
  %call19 = call %struct._object* @PyTuple_New(i64 %39), !dbg !4915
  store %struct._object* %call19, %struct._object** %result, align 8, !dbg !4916, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %result, align 8, !dbg !4917, !tbaa !2683
  %cmp20 = icmp eq %struct._object* %40, null, !dbg !4919
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !4920

if.then.21:                                       ; preds = %for.end
  store %struct._object* null, %struct._object** %retval, !dbg !4921
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !4921

if.end.22:                                        ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !4922, !tbaa !3427
  br label %for.cond.23, !dbg !4923

for.cond.23:                                      ; preds = %for.inc.35, %if.end.22
  %41 = load i64, i64* %i, align 8, !dbg !4924, !tbaa !3427
  %42 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4927, !tbaa !2683
  %r24 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %42, i32 0, i32 4, !dbg !4928
  %43 = load i64, i64* %r24, align 8, !dbg !4928, !tbaa !3432
  %cmp25 = icmp slt i64 %41, %43, !dbg !4929
  br i1 %cmp25, label %for.body.26, label %for.end.37, !dbg !4930

for.body.26:                                      ; preds = %for.cond.23
  %44 = bitcast %struct._object** %element to i8*, !dbg !4931
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !4931
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !848, metadata !2666), !dbg !4932
  %45 = load i64, i64* %i, align 8, !dbg !4933, !tbaa !3427
  %46 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4934, !tbaa !2683
  %indices27 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %46, i32 0, i32 2, !dbg !4935
  %47 = load i64*, i64** %indices27, align 8, !dbg !4935, !tbaa !3330
  %arrayidx28 = getelementptr i64, i64* %47, i64 %45, !dbg !4934
  %48 = load i64, i64* %arrayidx28, align 8, !dbg !4934, !tbaa !3427
  %49 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4936, !tbaa !2683
  %pool29 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %49, i32 0, i32 1, !dbg !4937
  %50 = load %struct._object*, %struct._object** %pool29, align 8, !dbg !4937, !tbaa !3252
  %51 = bitcast %struct._object* %50 to %struct.PyTupleObject*, !dbg !4938
  %ob_item30 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %51, i32 0, i32 1, !dbg !4939
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item30, i32 0, i64 %48, !dbg !4940
  %52 = load %struct._object*, %struct._object** %arrayidx31, align 8, !dbg !4940, !tbaa !2683
  store %struct._object* %52, %struct._object** %element, align 8, !dbg !4932, !tbaa !2683
  %53 = load %struct._object*, %struct._object** %element, align 8, !dbg !4941, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !4942
  %54 = load i64, i64* %ob_refcnt, align 8, !dbg !4943, !tbaa !2722
  %inc32 = add i64 %54, 1, !dbg !4943
  store i64 %inc32, i64* %ob_refcnt, align 8, !dbg !4943, !tbaa !2722
  %55 = load %struct._object*, %struct._object** %element, align 8, !dbg !4944, !tbaa !2683
  %56 = load i64, i64* %i, align 8, !dbg !4945, !tbaa !3427
  %57 = load %struct._object*, %struct._object** %result, align 8, !dbg !4946, !tbaa !2683
  %58 = bitcast %struct._object* %57 to %struct.PyTupleObject*, !dbg !4947
  %ob_item33 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %58, i32 0, i32 1, !dbg !4948
  %arrayidx34 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item33, i32 0, i64 %56, !dbg !4949
  store %struct._object* %55, %struct._object** %arrayidx34, align 8, !dbg !4950, !tbaa !2683
  %59 = bitcast %struct._object** %element to i8*, !dbg !4951
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !4951
  br label %for.inc.35, !dbg !4952

for.inc.35:                                       ; preds = %for.body.26
  %60 = load i64, i64* %i, align 8, !dbg !4953, !tbaa !3427
  %inc36 = add i64 %60, 1, !dbg !4953
  store i64 %inc36, i64* %i, align 8, !dbg !4953, !tbaa !3427
  br label %for.cond.23, !dbg !4954

for.end.37:                                       ; preds = %for.cond.23
  br label %do.body, !dbg !4955

do.body:                                          ; preds = %for.end.37
  %61 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4956
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !4956
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !852, metadata !2666), !dbg !4958
  %62 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4959, !tbaa !2683
  %result38 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %62, i32 0, i32 3, !dbg !4960
  %63 = load %struct._object*, %struct._object** %result38, align 8, !dbg !4960, !tbaa !3294
  store %struct._object* %63, %struct._object** %_py_tmp, align 8, !dbg !4958, !tbaa !2683
  %64 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4961, !tbaa !2683
  %cmp39 = icmp ne %struct._object* %64, null, !dbg !4962
  br i1 %cmp39, label %if.then.40, label %if.end.49, !dbg !4963

if.then.40:                                       ; preds = %do.body
  %65 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !4964, !tbaa !2683
  %result41 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %65, i32 0, i32 3, !dbg !4966
  store %struct._object* null, %struct._object** %result41, align 8, !dbg !4967, !tbaa !3294
  br label %do.body.42, !dbg !4968

do.body.42:                                       ; preds = %if.then.40
  %66 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4969
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !4969
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !854, metadata !2666), !dbg !4971
  %67 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4972, !tbaa !2683
  store %struct._object* %67, %struct._object** %_py_decref_tmp, align 8, !dbg !4971, !tbaa !2683
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4973, !tbaa !2683
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !4975
  %69 = load i64, i64* %ob_refcnt43, align 8, !dbg !4976, !tbaa !2722
  %dec = add i64 %69, -1, !dbg !4976
  store i64 %dec, i64* %ob_refcnt43, align 8, !dbg !4976, !tbaa !2722
  %cmp44 = icmp ne i64 %dec, 0, !dbg !4977
  br i1 %cmp44, label %if.then.45, label %if.else.46, !dbg !4978

if.then.45:                                       ; preds = %do.body.42
  br label %if.end.48, !dbg !4979

if.else.46:                                       ; preds = %do.body.42
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4981, !tbaa !2683
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !4983
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !4983, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !4984
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4984, !tbaa !2768
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4985, !tbaa !2683
  call void %72(%struct._object* %73), !dbg !4986
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.46, %if.then.45
  %74 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4987
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !4987
  br label %do.cond, !dbg !4989

do.cond:                                          ; preds = %if.end.48
  br label %do.end, !dbg !4990

do.end:                                           ; preds = %do.cond
  br label %if.end.49, !dbg !4992

if.end.49:                                        ; preds = %do.end, %do.body
  %75 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4994
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !4994
  br label %do.cond.50, !dbg !4997

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !4998

do.end.51:                                        ; preds = %do.cond.50
  %76 = load %struct._object*, %struct._object** %result, align 8, !dbg !5000, !tbaa !2683
  %77 = load %struct.cwrobject*, %struct.cwrobject** %lz.addr, align 8, !dbg !5001, !tbaa !2683
  %result52 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %77, i32 0, i32 3, !dbg !5002
  store %struct._object* %76, %struct._object** %result52, align 8, !dbg !5003, !tbaa !3294
  %78 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5004, !tbaa !2722
  %inc53 = add i64 %78, 1, !dbg !5004
  store i64 %inc53, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5004, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5005
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !5005

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.54

cleanup.54:                                       ; preds = %NewDefault, %do.end.51, %if.then.21, %if.then
  %79 = bitcast i64* %i to i8*, !dbg !5006
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !5006
  %80 = bitcast i64* %n to i8*, !dbg !5006
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !5006
  %81 = bitcast %struct._object** %result to i8*, !dbg !5006
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !5006
  %82 = load %struct._object*, %struct._object** %retval, !dbg !5006
  ret %struct._object* %82, !dbg !5006
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_sizeof(%struct.cwrobject* %co, i8* %unused) #0 {
entry:
  %co.addr = alloca %struct.cwrobject*, align 8
  %unused.addr = alloca i8*, align 8
  %res = alloca i64, align 8
  store %struct.cwrobject* %co, %struct.cwrobject** %co.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cwrobject** %co.addr, metadata !862, metadata !2666), !dbg !5007
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !863, metadata !2666), !dbg !5008
  %0 = bitcast i64* %res to i8*, !dbg !5009
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5009
  call void @llvm.dbg.declare(metadata i64* %res, metadata !864, metadata !2666), !dbg !5010
  store i64 56, i64* %res, align 8, !dbg !5011, !tbaa !3427
  %1 = load %struct.cwrobject*, %struct.cwrobject** %co.addr, align 8, !dbg !5012, !tbaa !2683
  %r = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %1, i32 0, i32 4, !dbg !5013
  %2 = load i64, i64* %r, align 8, !dbg !5013, !tbaa !3432
  %mul = mul i64 %2, 8, !dbg !5014
  %3 = load i64, i64* %res, align 8, !dbg !5015, !tbaa !3427
  %add = add i64 %3, %mul, !dbg !5015
  store i64 %add, i64* %res, align 8, !dbg !5015, !tbaa !3427
  %4 = load i64, i64* %res, align 8, !dbg !5016, !tbaa !3427
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !5017
  %5 = bitcast i64* %res to i8*, !dbg !5018
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !5018
  ret %struct._object* %call, !dbg !5019
}

; Function Attrs: nounwind uwtable
define internal void @cycle_dealloc(%struct.cycleobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.cycleobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.cycleobject* %lz, %struct.cycleobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cycleobject** %lz.addr, metadata !886, metadata !2666), !dbg !5020
  %0 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5021, !tbaa !2683
  %1 = bitcast %struct.cycleobject* %0 to i8*, !dbg !5021
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !5022
  br label %do.body, !dbg !5023

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5024
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5024
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !887, metadata !2666), !dbg !5026
  %3 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5027, !tbaa !2683
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %3, i32 0, i32 2, !dbg !5028
  %4 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5028, !tbaa !5029
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5026, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5031, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !5032
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !5033

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !5034

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5036
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5036
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !889, metadata !2666), !dbg !5038
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5039, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !5038, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5040, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !5042
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !5043, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !5043
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5043, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !5044
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !5045

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !5046

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5048, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !5050
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5050, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !5051
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5051, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5052, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !5053
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5054
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !5054
  br label %do.cond, !dbg !5056

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5057

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !5059

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5061
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !5061
  br label %do.end.6, !dbg !5064

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !5065

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !5066
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !5066
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !892, metadata !2666), !dbg !5068
  %17 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5069, !tbaa !2683
  %it = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %17, i32 0, i32 1, !dbg !5070
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !5070, !tbaa !5071
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5068, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5072, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !5073
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !5074

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !5075

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5077
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !894, metadata !2666), !dbg !5079
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5080, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !5079, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5081, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !5083
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !5084, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !5084
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5084, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !5085
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !5086

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !5087

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5089, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !5091
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5091, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !5092
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5092, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5093, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !5094
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5095
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5095
  br label %do.cond.21, !dbg !5097

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !5098

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !5100

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !5102
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !5102
  br label %do.end.25, !dbg !5103

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5104, !tbaa !2683
  %31 = bitcast %struct.cycleobject* %30 to %struct._object*, !dbg !5105
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !5106
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !5106, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !5107
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5107, !tbaa !2864
  %34 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5108, !tbaa !2683
  %35 = bitcast %struct.cycleobject* %34 to i8*, !dbg !5108
  call void %33(i8* %35), !dbg !5109
  ret void, !dbg !5110
}

; Function Attrs: nounwind uwtable
define internal i32 @cycle_traverse(%struct.cycleobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.cycleobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.cycleobject* %lz, %struct.cycleobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cycleobject** %lz.addr, metadata !901, metadata !2666), !dbg !5111
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !902, metadata !2666), !dbg !5112
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !903, metadata !2666), !dbg !5113
  br label %do.body, !dbg !5114

do.body:                                          ; preds = %entry
  %0 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5115, !tbaa !2683
  %it = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %0, i32 0, i32 1, !dbg !5117
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !5117, !tbaa !5071
  %tobool = icmp ne %struct._object* %1, null, !dbg !5118
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !5119

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !5120
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !904, metadata !2666), !dbg !5122
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5123, !tbaa !2683
  %4 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5124, !tbaa !2683
  %it1 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %4, i32 0, i32 1, !dbg !5125
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !5125, !tbaa !5071
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !5126, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !5123
  store i32 %call, i32* %vret, align 4, !dbg !5122, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !5127, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !5127
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !5129

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !5130, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !5132
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5132

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !5133
  br label %cleanup, !dbg !5133

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !5135
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !5135
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !5138

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !5139

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !5142

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5143, !tbaa !2683
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %10, i32 0, i32 2, !dbg !5145
  %11 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5145, !tbaa !5029
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !5146
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !5147

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !5148
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !5148
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !908, metadata !2666), !dbg !5150
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5151, !tbaa !2683
  %14 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5152, !tbaa !2683
  %saved9 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %14, i32 0, i32 2, !dbg !5153
  %15 = load %struct._object*, %struct._object** %saved9, align 8, !dbg !5153, !tbaa !5029
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !5154, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !5151
  store i32 %call10, i32* %vret8, align 4, !dbg !5150, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !5155, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !5155
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !5157

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !5158, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !5160
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !5160

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !5161
  br label %cleanup.14, !dbg !5161

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !5163
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !5163
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !5166

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !5167

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !5170
  br label %return, !dbg !5170

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !5171
  ret i32 %20, !dbg !5171
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_next(%struct.cycleobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.cycleobject*, align 8
  %item = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct.cycleobject* %lz, %struct.cycleobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cycleobject** %lz.addr, metadata !916, metadata !2666), !dbg !5172
  %0 = bitcast %struct._object** %item to i8*, !dbg !5173
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5173
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !917, metadata !2666), !dbg !5174
  %1 = bitcast %struct._object** %it to i8*, !dbg !5175
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5175
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !918, metadata !2666), !dbg !5176
  %2 = bitcast %struct._object** %tmp to i8*, !dbg !5177
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5177
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !919, metadata !2666), !dbg !5178
  br label %while.cond, !dbg !5179

while.cond:                                       ; preds = %do.end.44, %entry
  br label %while.body, !dbg !5180

while.body:                                       ; preds = %while.cond
  %3 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5183, !tbaa !2683
  %it1 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %3, i32 0, i32 1, !dbg !5184
  %4 = load %struct._object*, %struct._object** %it1, align 8, !dbg !5184, !tbaa !5071
  %call = call %struct._object* @PyIter_Next(%struct._object* %4), !dbg !5185
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !5186, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %item, align 8, !dbg !5187, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !5188
  br i1 %cmp, label %if.then, label %if.end.9, !dbg !5189

if.then:                                          ; preds = %while.body
  %6 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5190, !tbaa !2683
  %firstpass = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %6, i32 0, i32 3, !dbg !5191
  %7 = load i32, i32* %firstpass, align 4, !dbg !5191, !tbaa !5192
  %tobool = icmp ne i32 %7, 0, !dbg !5190
  br i1 %tobool, label %if.end.8, label %land.lhs.true, !dbg !5193

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5194, !tbaa !2683
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %8, i32 0, i32 2, !dbg !5196
  %9 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5196, !tbaa !5029
  %10 = load %struct._object*, %struct._object** %item, align 8, !dbg !5197, !tbaa !2683
  %call2 = call i32 @PyList_Append(%struct._object* %9, %struct._object* %10), !dbg !5198
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5198
  br i1 %tobool3, label %if.then.4, label %if.end.8, !dbg !5199

if.then.4:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !5200

do.body:                                          ; preds = %if.then.4
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5201
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !5201
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !920, metadata !2666), !dbg !5203
  %12 = load %struct._object*, %struct._object** %item, align 8, !dbg !5204, !tbaa !2683
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !5203, !tbaa !2683
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5205, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !5207
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !5208, !tbaa !2722
  %dec = add i64 %14, -1, !dbg !5208
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5208, !tbaa !2722
  %cmp6 = icmp ne i64 %dec, 0, !dbg !5209
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !5210

if.then.7:                                        ; preds = %do.body
  br label %if.end, !dbg !5211

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5213, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !5215
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5215, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !5216
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5216, !tbaa !2768
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5217, !tbaa !2683
  call void %17(%struct._object* %18), !dbg !5218
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.7
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5219
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !5219
  br label %do.cond, !dbg !5221

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5222

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5224
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5224

if.end.8:                                         ; preds = %land.lhs.true, %if.then
  %20 = load %struct._object*, %struct._object** %item, align 8, !dbg !5225, !tbaa !2683
  store %struct._object* %20, %struct._object** %retval, !dbg !5226
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5226

if.end.9:                                         ; preds = %while.body
  %call10 = call %struct._object* @PyErr_Occurred(), !dbg !5227
  %tobool11 = icmp ne %struct._object* %call10, null, !dbg !5227
  br i1 %tobool11, label %if.then.12, label %if.end.18, !dbg !5229

if.then.12:                                       ; preds = %if.end.9
  %21 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !5230, !tbaa !2683
  %call13 = call i32 @PyErr_ExceptionMatches(%struct._object* %21), !dbg !5233
  %tobool14 = icmp ne i32 %call13, 0, !dbg !5233
  br i1 %tobool14, label %if.then.15, label %if.else.16, !dbg !5234

if.then.15:                                       ; preds = %if.then.12
  call void @PyErr_Clear(), !dbg !5235
  br label %if.end.17, !dbg !5235

if.else.16:                                       ; preds = %if.then.12
  store %struct._object* null, %struct._object** %retval, !dbg !5236
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5236

if.end.17:                                        ; preds = %if.then.15
  br label %if.end.18, !dbg !5237

if.end.18:                                        ; preds = %if.end.17, %if.end.9
  %22 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5238, !tbaa !2683
  %saved19 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %22, i32 0, i32 2, !dbg !5240
  %23 = load %struct._object*, %struct._object** %saved19, align 8, !dbg !5240, !tbaa !5029
  %call20 = call i64 @PyList_Size(%struct._object* %23), !dbg !5241
  %cmp21 = icmp eq i64 %call20, 0, !dbg !5242
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !5243

if.then.22:                                       ; preds = %if.end.18
  store %struct._object* null, %struct._object** %retval, !dbg !5244
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5244

if.end.23:                                        ; preds = %if.end.18
  %24 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5245, !tbaa !2683
  %saved24 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %24, i32 0, i32 2, !dbg !5246
  %25 = load %struct._object*, %struct._object** %saved24, align 8, !dbg !5246, !tbaa !5029
  %call25 = call %struct._object* @PyObject_GetIter(%struct._object* %25), !dbg !5247
  store %struct._object* %call25, %struct._object** %it, align 8, !dbg !5248, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %it, align 8, !dbg !5249, !tbaa !2683
  %cmp26 = icmp eq %struct._object* %26, null, !dbg !5251
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !5252

if.then.27:                                       ; preds = %if.end.23
  store %struct._object* null, %struct._object** %retval, !dbg !5253
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5253

if.end.28:                                        ; preds = %if.end.23
  %27 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5254, !tbaa !2683
  %it29 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %27, i32 0, i32 1, !dbg !5255
  %28 = load %struct._object*, %struct._object** %it29, align 8, !dbg !5255, !tbaa !5071
  store %struct._object* %28, %struct._object** %tmp, align 8, !dbg !5256, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %it, align 8, !dbg !5257, !tbaa !2683
  %30 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5258, !tbaa !2683
  %it30 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %30, i32 0, i32 1, !dbg !5259
  store %struct._object* %29, %struct._object** %it30, align 8, !dbg !5260, !tbaa !5071
  %31 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5261, !tbaa !2683
  %firstpass31 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %31, i32 0, i32 3, !dbg !5262
  store i32 1, i32* %firstpass31, align 4, !dbg !5263, !tbaa !5192
  br label %do.body.32, !dbg !5264

do.body.32:                                       ; preds = %if.end.28
  %32 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !5265
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !5265
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !927, metadata !2666), !dbg !5267
  %33 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5268, !tbaa !2683
  store %struct._object* %33, %struct._object** %_py_decref_tmp34, align 8, !dbg !5267, !tbaa !2683
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !5269, !tbaa !2683
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !5271
  %35 = load i64, i64* %ob_refcnt35, align 8, !dbg !5272, !tbaa !2722
  %dec36 = add i64 %35, -1, !dbg !5272
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !5272, !tbaa !2722
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !5273
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !5274

if.then.38:                                       ; preds = %do.body.32
  br label %if.end.42, !dbg !5275

if.else.39:                                       ; preds = %do.body.32
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !5277, !tbaa !2683
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !5279
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !5279, !tbaa !2675
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !5280
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !5280, !tbaa !2768
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !5281, !tbaa !2683
  call void %38(%struct._object* %39), !dbg !5282
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %40 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !5283
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !5283
  br label %do.cond.43, !dbg !5285

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !5286

do.end.44:                                        ; preds = %do.cond.43
  br label %while.cond, !dbg !5179

cleanup:                                          ; preds = %if.then.27, %if.then.22, %if.else.16, %if.end.8, %do.end
  %41 = bitcast %struct._object** %tmp to i8*, !dbg !5288
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !5288
  %42 = bitcast %struct._object** %it to i8*, !dbg !5288
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !5288
  %43 = bitcast %struct._object** %item to i8*, !dbg !5288
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !5288
  %44 = load %struct._object*, %struct._object** %retval, !dbg !5288
  ret %struct._object* %44, !dbg !5288
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %saved = alloca %struct._object*, align 8
  %lz = alloca %struct.cycleobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !950, metadata !2666), !dbg !5289
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !951, metadata !2666), !dbg !5290
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !952, metadata !2666), !dbg !5291
  %0 = bitcast %struct._object** %it to i8*, !dbg !5292
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5292
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !953, metadata !2666), !dbg !5293
  %1 = bitcast %struct._object** %iterable to i8*, !dbg !5294
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5294
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !954, metadata !2666), !dbg !5295
  %2 = bitcast %struct._object** %saved to i8*, !dbg !5296
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5296
  call void @llvm.dbg.declare(metadata %struct._object** %saved, metadata !955, metadata !2666), !dbg !5297
  %3 = bitcast %struct.cycleobject** %lz to i8*, !dbg !5298
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5298
  call void @llvm.dbg.declare(metadata %struct.cycleobject** %lz, metadata !956, metadata !2666), !dbg !5299
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5300, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %4, @cycle_type, !dbg !5302
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5303

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5304, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), %struct._object* %5), !dbg !5306
  %tobool = icmp ne i32 %call, 0, !dbg !5306
  br i1 %tobool, label %if.end, label %if.then, !dbg !5307

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5308
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5308

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5309, !tbaa !2683
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i64 1, i64 1, %struct._object** %iterable), !dbg !5311
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5311
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !5312

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !5313
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5313

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !5314, !tbaa !2683
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %7), !dbg !5315
  store %struct._object* %call5, %struct._object** %it, align 8, !dbg !5316, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !5317, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %8, null, !dbg !5319
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !5320

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !5321
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5321

if.end.8:                                         ; preds = %if.end.4
  %call9 = call %struct._object* @PyList_New(i64 0), !dbg !5322
  store %struct._object* %call9, %struct._object** %saved, align 8, !dbg !5323, !tbaa !2683
  %9 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5324, !tbaa !2683
  %cmp10 = icmp eq %struct._object* %9, null, !dbg !5325
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !5326

if.then.11:                                       ; preds = %if.end.8
  br label %do.body, !dbg !5327

do.body:                                          ; preds = %if.then.11
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5328
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !5328
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !957, metadata !2666), !dbg !5330
  %11 = load %struct._object*, %struct._object** %it, align 8, !dbg !5331, !tbaa !2683
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !5330, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5332, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !5334
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !5335, !tbaa !2722
  %dec = add i64 %13, -1, !dbg !5335
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5335, !tbaa !2722
  %cmp12 = icmp ne i64 %dec, 0, !dbg !5336
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !5337

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !5338

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5340, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !5342
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5342, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !5343
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5343, !tbaa !2768
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5344, !tbaa !2683
  call void %16(%struct._object* %17), !dbg !5345
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5346
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !5346
  br label %do.cond, !dbg !5348

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !5349

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5351

if.end.15:                                        ; preds = %if.end.8
  %19 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5352, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 36, !dbg !5353
  %20 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5353, !tbaa !3097
  %21 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5354, !tbaa !2683
  %call16 = call %struct._object* %20(%struct._typeobject* %21, i64 0), !dbg !5352
  %22 = bitcast %struct._object* %call16 to %struct.cycleobject*, !dbg !5355
  store %struct.cycleobject* %22, %struct.cycleobject** %lz, align 8, !dbg !5356, !tbaa !2683
  %23 = load %struct.cycleobject*, %struct.cycleobject** %lz, align 8, !dbg !5357, !tbaa !2683
  %cmp17 = icmp eq %struct.cycleobject* %23, null, !dbg !5358
  br i1 %cmp17, label %if.then.18, label %if.end.43, !dbg !5359

if.then.18:                                       ; preds = %if.end.15
  br label %do.body.19, !dbg !5360

do.body.19:                                       ; preds = %if.then.18
  %24 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !5361
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !5361
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp20, metadata !961, metadata !2666), !dbg !5363
  %25 = load %struct._object*, %struct._object** %it, align 8, !dbg !5364, !tbaa !2683
  store %struct._object* %25, %struct._object** %_py_decref_tmp20, align 8, !dbg !5363, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !5365, !tbaa !2683
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !5367
  %27 = load i64, i64* %ob_refcnt21, align 8, !dbg !5368, !tbaa !2722
  %dec22 = add i64 %27, -1, !dbg !5368
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !5368, !tbaa !2722
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !5369
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !5370

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28, !dbg !5371

if.else.25:                                       ; preds = %do.body.19
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !5373, !tbaa !2683
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !5375
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !5375, !tbaa !2675
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !5376
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8, !dbg !5376, !tbaa !2768
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !5377, !tbaa !2683
  call void %30(%struct._object* %31), !dbg !5378
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  %32 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !5379
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !5379
  br label %do.cond.29, !dbg !5381

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !5382

do.end.30:                                        ; preds = %do.cond.29
  br label %do.body.31, !dbg !5384

do.body.31:                                       ; preds = %do.end.30
  %33 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !5385
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !5385
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !965, metadata !2666), !dbg !5387
  %34 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5388, !tbaa !2683
  store %struct._object* %34, %struct._object** %_py_decref_tmp32, align 8, !dbg !5387, !tbaa !2683
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !5389, !tbaa !2683
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !5391
  %36 = load i64, i64* %ob_refcnt33, align 8, !dbg !5392, !tbaa !2722
  %dec34 = add i64 %36, -1, !dbg !5392
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !5392, !tbaa !2722
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !5393
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !5394

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !5395

if.else.37:                                       ; preds = %do.body.31
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !5397, !tbaa !2683
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !5399
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !5399, !tbaa !2675
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !5400
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !5400, !tbaa !2768
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !5401, !tbaa !2683
  call void %39(%struct._object* %40), !dbg !5402
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %41 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !5403
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !5403
  br label %do.cond.41, !dbg !5404

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !5405

do.end.42:                                        ; preds = %do.cond.41
  store %struct._object* null, %struct._object** %retval, !dbg !5407
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5407

if.end.43:                                        ; preds = %if.end.15
  %42 = load %struct._object*, %struct._object** %it, align 8, !dbg !5408, !tbaa !2683
  %43 = load %struct.cycleobject*, %struct.cycleobject** %lz, align 8, !dbg !5409, !tbaa !2683
  %it44 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %43, i32 0, i32 1, !dbg !5410
  store %struct._object* %42, %struct._object** %it44, align 8, !dbg !5411, !tbaa !5071
  %44 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5412, !tbaa !2683
  %45 = load %struct.cycleobject*, %struct.cycleobject** %lz, align 8, !dbg !5413, !tbaa !2683
  %saved45 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %45, i32 0, i32 2, !dbg !5414
  store %struct._object* %44, %struct._object** %saved45, align 8, !dbg !5415, !tbaa !5029
  %46 = load %struct.cycleobject*, %struct.cycleobject** %lz, align 8, !dbg !5416, !tbaa !2683
  %firstpass = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %46, i32 0, i32 3, !dbg !5417
  store i32 0, i32* %firstpass, align 4, !dbg !5418, !tbaa !5192
  %47 = load %struct.cycleobject*, %struct.cycleobject** %lz, align 8, !dbg !5419, !tbaa !2683
  %48 = bitcast %struct.cycleobject* %47 to %struct._object*, !dbg !5420
  store %struct._object* %48, %struct._object** %retval, !dbg !5421
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5421

cleanup:                                          ; preds = %if.end.43, %do.end.42, %do.end, %if.then.7, %if.then.3, %if.then
  %49 = bitcast %struct.cycleobject** %lz to i8*, !dbg !5422
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !5422
  %50 = bitcast %struct._object** %saved to i8*, !dbg !5422
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !5422
  %51 = bitcast %struct._object** %iterable to i8*, !dbg !5422
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !5422
  %52 = bitcast %struct._object** %it to i8*, !dbg !5422
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !5422
  %53 = load %struct._object*, %struct._object** %retval, !dbg !5422
  ret %struct._object* %53, !dbg !5422
}

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

declare i32 @PyErr_ExceptionMatches(%struct._object*) #3

declare void @PyErr_Clear() #3

declare i64 @PyList_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_reduce(%struct.cycleobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.cycleobject*, align 8
  store %struct.cycleobject* %lz, %struct.cycleobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cycleobject** %lz.addr, metadata !931, metadata !2666), !dbg !5423
  %0 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5424, !tbaa !2683
  %1 = bitcast %struct.cycleobject* %0 to %struct._object*, !dbg !5425
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !5426
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5426, !tbaa !2675
  %3 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5427, !tbaa !2683
  %it = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %3, i32 0, i32 1, !dbg !5428
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !5428, !tbaa !5071
  %5 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5429, !tbaa !2683
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %5, i32 0, i32 2, !dbg !5430
  %6 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5430, !tbaa !5029
  %7 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5431, !tbaa !2683
  %firstpass = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %7, i32 0, i32 3, !dbg !5432
  %8 = load i32, i32* %firstpass, align 4, !dbg !5432, !tbaa !5192
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6, i32 %8), !dbg !5433
  ret %struct._object* %call, !dbg !5434
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_setstate(%struct.cycleobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.cycleobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %saved = alloca %struct._object*, align 8
  %firstpass = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.cycleobject* %lz, %struct.cycleobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.cycleobject** %lz.addr, metadata !936, metadata !2666), !dbg !5435
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !937, metadata !2666), !dbg !5436
  %0 = bitcast %struct._object** %saved to i8*, !dbg !5437
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5437
  call void @llvm.dbg.declare(metadata %struct._object** %saved, metadata !938, metadata !2666), !dbg !5438
  store %struct._object* null, %struct._object** %saved, align 8, !dbg !5438, !tbaa !2683
  %1 = bitcast i32* %firstpass to i8*, !dbg !5439
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !5439
  call void @llvm.dbg.declare(metadata i32* %firstpass, metadata !939, metadata !2666), !dbg !5440
  %2 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5441, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), %struct._object** %saved, i32* %firstpass), !dbg !5443
  %tobool = icmp ne i32 %call, 0, !dbg !5443
  br i1 %tobool, label %if.end, label %if.then, !dbg !5444

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5445
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5445

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !5446

do.body:                                          ; preds = %if.end
  %3 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5447
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5447
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !940, metadata !2666), !dbg !5449
  %4 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5450, !tbaa !2683
  %saved1 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %4, i32 0, i32 2, !dbg !5451
  %5 = load %struct._object*, %struct._object** %saved1, align 8, !dbg !5451, !tbaa !5029
  store %struct._object* %5, %struct._object** %_py_tmp, align 8, !dbg !5449, !tbaa !2683
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5452, !tbaa !2683
  %cmp = icmp ne %struct._object* %6, null, !dbg !5453
  br i1 %cmp, label %if.then.2, label %if.end.8, !dbg !5454

if.then.2:                                        ; preds = %do.body
  %7 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5455, !tbaa !2683
  %saved3 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %7, i32 0, i32 2, !dbg !5457
  store %struct._object* null, %struct._object** %saved3, align 8, !dbg !5458, !tbaa !5029
  br label %do.body.4, !dbg !5459

do.body.4:                                        ; preds = %if.then.2
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5460
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5460
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !942, metadata !2666), !dbg !5462
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5463, !tbaa !2683
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !5462, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5464, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !5466
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !5467, !tbaa !2722
  %dec = add i64 %11, -1, !dbg !5467
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5467, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !5468
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !5469

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !5470

if.else:                                          ; preds = %do.body.4
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5472, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !5474
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5474, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !5475
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5475, !tbaa !2768
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5476, !tbaa !2683
  call void %14(%struct._object* %15), !dbg !5477
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5478
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !5478
  br label %do.cond, !dbg !5480

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !5481

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !5483

if.end.8:                                         ; preds = %do.end, %do.body
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5485
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !5485
  br label %do.cond.9, !dbg !5488

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !5489

do.end.10:                                        ; preds = %do.cond.9
  %18 = load %struct._object*, %struct._object** %saved, align 8, !dbg !5491, !tbaa !2683
  %19 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5492, !tbaa !2683
  %saved11 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %19, i32 0, i32 2, !dbg !5493
  store %struct._object* %18, %struct._object** %saved11, align 8, !dbg !5494, !tbaa !5029
  br label %do.body.12, !dbg !5495

do.body.12:                                       ; preds = %do.end.10
  %20 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !5496
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5496
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !946, metadata !2666), !dbg !5498
  %21 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5499, !tbaa !2683
  %saved13 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %21, i32 0, i32 2, !dbg !5500
  %22 = load %struct._object*, %struct._object** %saved13, align 8, !dbg !5500, !tbaa !5029
  store %struct._object* %22, %struct._object** %_py_xincref_tmp, align 8, !dbg !5498, !tbaa !2683
  %23 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !5501, !tbaa !2683
  %cmp14 = icmp ne %struct._object* %23, null, !dbg !5503
  br i1 %cmp14, label %if.then.15, label %if.end.17, !dbg !5504

if.then.15:                                       ; preds = %do.body.12
  %24 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !5505, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !5507
  %25 = load i64, i64* %ob_refcnt16, align 8, !dbg !5508, !tbaa !2722
  %inc = add i64 %25, 1, !dbg !5508
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !5508, !tbaa !2722
  br label %if.end.17, !dbg !5509

if.end.17:                                        ; preds = %if.then.15, %do.body.12
  %26 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !5510
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !5510
  br label %do.cond.18, !dbg !5512

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !5513

do.end.19:                                        ; preds = %do.cond.18
  %27 = load i32, i32* %firstpass, align 4, !dbg !5515, !tbaa !2691
  %cmp20 = icmp ne i32 %27, 0, !dbg !5516
  %conv = zext i1 %cmp20 to i32, !dbg !5516
  %28 = load %struct.cycleobject*, %struct.cycleobject** %lz.addr, align 8, !dbg !5517, !tbaa !2683
  %firstpass21 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %28, i32 0, i32 3, !dbg !5518
  store i32 %conv, i32* %firstpass21, align 4, !dbg !5519, !tbaa !5192
  %29 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5520, !tbaa !2722
  %inc22 = add i64 %29, 1, !dbg !5520
  store i64 %inc22, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5520, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5521
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5521

cleanup:                                          ; preds = %do.end.19, %if.then
  %30 = bitcast i32* %firstpass to i8*, !dbg !5522
  call void @llvm.lifetime.end(i64 4, i8* %30) #1, !dbg !5522
  %31 = bitcast %struct._object** %saved to i8*, !dbg !5522
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !5522
  %32 = load %struct._object*, %struct._object** %retval, !dbg !5522
  ret %struct._object* %32, !dbg !5522
}

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #3

declare i32 @_PyArg_NoKeywords(i8*, %struct._object*) #3

declare i32 @PyArg_UnpackTuple(%struct._object*, i8*, i64, i64, ...) #3

declare %struct._object* @PyList_New(i64) #3

; Function Attrs: nounwind uwtable
define internal void @dropwhile_dealloc(%struct.dropwhileobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.dropwhileobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.dropwhileobject* %lz, %struct.dropwhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.dropwhileobject** %lz.addr, metadata !971, metadata !2666), !dbg !5523
  %0 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5524, !tbaa !2683
  %1 = bitcast %struct.dropwhileobject* %0 to i8*, !dbg !5524
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !5525
  br label %do.body, !dbg !5526

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5527
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5527
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !972, metadata !2666), !dbg !5529
  %3 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5530, !tbaa !2683
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %3, i32 0, i32 1, !dbg !5531
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !5531, !tbaa !5532
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5529, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5534, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !5535
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !5536

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !5537

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5539
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5539
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !974, metadata !2666), !dbg !5541
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5542, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !5541, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5543, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !5545
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !5546, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !5546
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5546, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !5547
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !5548

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !5549

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5551, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !5553
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5553, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !5554
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5554, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5555, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !5556
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5557
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !5557
  br label %do.cond, !dbg !5559

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5560

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !5562

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5564
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !5564
  br label %do.end.6, !dbg !5567

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !5568

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !5569
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !5569
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !977, metadata !2666), !dbg !5571
  %17 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5572, !tbaa !2683
  %it = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %17, i32 0, i32 2, !dbg !5573
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !5573, !tbaa !5574
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5571, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5575, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !5576
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !5577

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !5578

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5580
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5580
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !979, metadata !2666), !dbg !5582
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5583, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !5582, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5584, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !5586
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !5587, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !5587
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5587, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !5588
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !5589

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !5590

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5592, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !5594
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5594, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !5595
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5595, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5596, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !5597
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5598
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5598
  br label %do.cond.21, !dbg !5600

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !5601

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !5603

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !5605
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !5605
  br label %do.end.25, !dbg !5606

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5607, !tbaa !2683
  %31 = bitcast %struct.dropwhileobject* %30 to %struct._object*, !dbg !5608
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !5609
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !5609, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !5610
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5610, !tbaa !2864
  %34 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5611, !tbaa !2683
  %35 = bitcast %struct.dropwhileobject* %34 to i8*, !dbg !5611
  call void %33(i8* %35), !dbg !5612
  ret void, !dbg !5613
}

; Function Attrs: nounwind uwtable
define internal i32 @dropwhile_traverse(%struct.dropwhileobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.dropwhileobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.dropwhileobject* %lz, %struct.dropwhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.dropwhileobject** %lz.addr, metadata !986, metadata !2666), !dbg !5614
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !987, metadata !2666), !dbg !5615
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !988, metadata !2666), !dbg !5616
  br label %do.body, !dbg !5617

do.body:                                          ; preds = %entry
  %0 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5618, !tbaa !2683
  %it = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %0, i32 0, i32 2, !dbg !5620
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !5620, !tbaa !5574
  %tobool = icmp ne %struct._object* %1, null, !dbg !5621
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !5622

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !5623
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !5623
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !989, metadata !2666), !dbg !5625
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5626, !tbaa !2683
  %4 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5627, !tbaa !2683
  %it1 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %4, i32 0, i32 2, !dbg !5628
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !5628, !tbaa !5574
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !5629, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !5626
  store i32 %call, i32* %vret, align 4, !dbg !5625, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !5630, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !5630
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !5632

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !5633, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !5635
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5635

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !5636
  br label %cleanup, !dbg !5636

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !5638
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !5638
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !5641

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !5642

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !5645

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5646, !tbaa !2683
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %10, i32 0, i32 1, !dbg !5648
  %11 = load %struct._object*, %struct._object** %func, align 8, !dbg !5648, !tbaa !5532
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !5649
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !5650

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !5651
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !5651
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !993, metadata !2666), !dbg !5653
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5654, !tbaa !2683
  %14 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5655, !tbaa !2683
  %func9 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %14, i32 0, i32 1, !dbg !5656
  %15 = load %struct._object*, %struct._object** %func9, align 8, !dbg !5656, !tbaa !5532
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !5657, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !5654
  store i32 %call10, i32* %vret8, align 4, !dbg !5653, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !5658, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !5658
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !5660

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !5661, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !5663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !5663

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !5664
  br label %cleanup.14, !dbg !5664

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !5666
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !5666
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !5669

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !5670

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !5673
  br label %return, !dbg !5673

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !5674
  ret i32 %20, !dbg !5674
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_next(%struct.dropwhileobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.dropwhileobject*, align 8
  %item = alloca %struct._object*, align 8
  %good = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %ok = alloca i64, align 8
  %iternext = alloca %struct._object* (%struct._object*)*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp33 = alloca %struct._object*, align 8
  store %struct.dropwhileobject* %lz, %struct.dropwhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.dropwhileobject** %lz.addr, metadata !1001, metadata !2666), !dbg !5675
  %0 = bitcast %struct._object** %item to i8*, !dbg !5676
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5676
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1002, metadata !2666), !dbg !5677
  %1 = bitcast %struct._object** %good to i8*, !dbg !5676
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5676
  call void @llvm.dbg.declare(metadata %struct._object** %good, metadata !1003, metadata !2666), !dbg !5678
  %2 = bitcast %struct._object** %it to i8*, !dbg !5679
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5679
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1004, metadata !2666), !dbg !5680
  %3 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5681, !tbaa !2683
  %it1 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %3, i32 0, i32 2, !dbg !5682
  %4 = load %struct._object*, %struct._object** %it1, align 8, !dbg !5682, !tbaa !5574
  store %struct._object* %4, %struct._object** %it, align 8, !dbg !5680, !tbaa !2683
  %5 = bitcast i64* %ok to i8*, !dbg !5683
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !5683
  call void @llvm.dbg.declare(metadata i64* %ok, metadata !1005, metadata !2666), !dbg !5684
  %6 = bitcast %struct._object* (%struct._object*)** %iternext to i8*, !dbg !5685
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5685
  call void @llvm.dbg.declare(metadata %struct._object* (%struct._object*)** %iternext, metadata !1006, metadata !2666), !dbg !5686
  %7 = load %struct._object*, %struct._object** %it, align 8, !dbg !5687, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5688
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5688, !tbaa !2675
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 26, !dbg !5689
  %9 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !5689, !tbaa !5690
  store %struct._object* (%struct._object*)* %9, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !5691, !tbaa !2683
  br label %for.cond, !dbg !5692

for.cond:                                         ; preds = %if.end.48, %entry
  %10 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !5693, !tbaa !2683
  %11 = load %struct._object*, %struct._object** %it, align 8, !dbg !5694, !tbaa !2683
  %call = call %struct._object* %10(%struct._object* %11), !dbg !5693
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !5695, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %item, align 8, !dbg !5696, !tbaa !2683
  %cmp = icmp eq %struct._object* %12, null, !dbg !5698
  br i1 %cmp, label %if.then, label %if.end, !dbg !5699

if.then:                                          ; preds = %for.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5700
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5700

if.end:                                           ; preds = %for.cond
  %13 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5701, !tbaa !2683
  %start = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %13, i32 0, i32 3, !dbg !5703
  %14 = load i64, i64* %start, align 8, !dbg !5703, !tbaa !5704
  %cmp2 = icmp eq i64 %14, 1, !dbg !5705
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !5706

if.then.3:                                        ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %item, align 8, !dbg !5707, !tbaa !2683
  store %struct._object* %15, %struct._object** %retval, !dbg !5708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5708

if.end.4:                                         ; preds = %if.end
  %16 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5709, !tbaa !2683
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %16, i32 0, i32 1, !dbg !5710
  %17 = load %struct._object*, %struct._object** %func, align 8, !dbg !5710, !tbaa !5532
  %18 = load %struct._object*, %struct._object** %item, align 8, !dbg !5711, !tbaa !2683
  %call5 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %17, %struct._object* %18, i8* null), !dbg !5712
  store %struct._object* %call5, %struct._object** %good, align 8, !dbg !5713, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %good, align 8, !dbg !5714, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %19, null, !dbg !5715
  br i1 %cmp6, label %if.then.7, label %if.end.12, !dbg !5716

if.then.7:                                        ; preds = %if.end.4
  br label %do.body, !dbg !5717

do.body:                                          ; preds = %if.then.7
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5718
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5718
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1007, metadata !2666), !dbg !5720
  %21 = load %struct._object*, %struct._object** %item, align 8, !dbg !5721, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !5720, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5722, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !5724
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !5725, !tbaa !2722
  %dec = add i64 %23, -1, !dbg !5725
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5725, !tbaa !2722
  %cmp8 = icmp ne i64 %dec, 0, !dbg !5726
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !5727

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !5728

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5730, !tbaa !2683
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !5732
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !5732, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !5733
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5733, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5734, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !5735
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.9
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5736
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5736
  br label %do.cond, !dbg !5738

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !5739

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5741
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5741

if.end.12:                                        ; preds = %if.end.4
  %29 = load %struct._object*, %struct._object** %good, align 8, !dbg !5742, !tbaa !2683
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %29), !dbg !5743
  %conv = sext i32 %call13 to i64, !dbg !5743
  store i64 %conv, i64* %ok, align 8, !dbg !5744, !tbaa !3427
  br label %do.body.14, !dbg !5745

do.body.14:                                       ; preds = %if.end.12
  %30 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !5746
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !5746
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1014, metadata !2666), !dbg !5748
  %31 = load %struct._object*, %struct._object** %good, align 8, !dbg !5749, !tbaa !2683
  store %struct._object* %31, %struct._object** %_py_decref_tmp15, align 8, !dbg !5748, !tbaa !2683
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5750, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !5752
  %33 = load i64, i64* %ob_refcnt16, align 8, !dbg !5753, !tbaa !2722
  %dec17 = add i64 %33, -1, !dbg !5753
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !5753, !tbaa !2722
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !5754
  br i1 %cmp18, label %if.then.20, label %if.else.21, !dbg !5755

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24, !dbg !5756

if.else.21:                                       ; preds = %do.body.14
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5758, !tbaa !2683
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !5760
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !5760, !tbaa !2675
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !5761
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !5761, !tbaa !2768
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5762, !tbaa !2683
  call void %36(%struct._object* %37), !dbg !5763
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %38 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !5764
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !5764
  br label %do.cond.25, !dbg !5766

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !5767

do.end.26:                                        ; preds = %do.cond.25
  %39 = load i64, i64* %ok, align 8, !dbg !5769, !tbaa !3427
  %cmp27 = icmp eq i64 %39, 0, !dbg !5771
  br i1 %cmp27, label %if.then.29, label %if.end.31, !dbg !5772

if.then.29:                                       ; preds = %do.end.26
  %40 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5773, !tbaa !2683
  %start30 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %40, i32 0, i32 3, !dbg !5775
  store i64 1, i64* %start30, align 8, !dbg !5776, !tbaa !5704
  %41 = load %struct._object*, %struct._object** %item, align 8, !dbg !5777, !tbaa !2683
  store %struct._object* %41, %struct._object** %retval, !dbg !5778
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5778

if.end.31:                                        ; preds = %do.end.26
  br label %do.body.32, !dbg !5779

do.body.32:                                       ; preds = %if.end.31
  %42 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !5780
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !5780
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp33, metadata !1016, metadata !2666), !dbg !5782
  %43 = load %struct._object*, %struct._object** %item, align 8, !dbg !5783, !tbaa !2683
  store %struct._object* %43, %struct._object** %_py_decref_tmp33, align 8, !dbg !5782, !tbaa !2683
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !5784, !tbaa !2683
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !5786
  %45 = load i64, i64* %ob_refcnt34, align 8, !dbg !5787, !tbaa !2722
  %dec35 = add i64 %45, -1, !dbg !5787
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !5787, !tbaa !2722
  %cmp36 = icmp ne i64 %dec35, 0, !dbg !5788
  br i1 %cmp36, label %if.then.38, label %if.else.39, !dbg !5789

if.then.38:                                       ; preds = %do.body.32
  br label %if.end.42, !dbg !5790

if.else.39:                                       ; preds = %do.body.32
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !5792, !tbaa !2683
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !5794
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !5794, !tbaa !2675
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !5795
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !5795, !tbaa !2768
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !5796, !tbaa !2683
  call void %48(%struct._object* %49), !dbg !5797
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %50 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !5798
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !5798
  br label %do.cond.43, !dbg !5799

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !5800

do.end.44:                                        ; preds = %do.cond.43
  %51 = load i64, i64* %ok, align 8, !dbg !5802, !tbaa !3427
  %cmp45 = icmp slt i64 %51, 0, !dbg !5804
  br i1 %cmp45, label %if.then.47, label %if.end.48, !dbg !5805

if.then.47:                                       ; preds = %do.end.44
  store %struct._object* null, %struct._object** %retval, !dbg !5806
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5806

if.end.48:                                        ; preds = %do.end.44
  br label %for.cond, !dbg !5807

cleanup:                                          ; preds = %if.then.47, %if.then.29, %do.end, %if.then.3, %if.then
  %52 = bitcast %struct._object* (%struct._object*)** %iternext to i8*, !dbg !5808
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !5808
  %53 = bitcast i64* %ok to i8*, !dbg !5808
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !5808
  %54 = bitcast %struct._object** %it to i8*, !dbg !5808
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !5808
  %55 = bitcast %struct._object** %good to i8*, !dbg !5808
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !5808
  %56 = bitcast %struct._object** %item to i8*, !dbg !5808
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !5808
  %57 = load %struct._object*, %struct._object** %retval, !dbg !5808
  ret %struct._object* %57, !dbg !5808
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %lz = alloca %struct.dropwhileobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1030, metadata !2666), !dbg !5809
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1031, metadata !2666), !dbg !5810
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1032, metadata !2666), !dbg !5811
  %0 = bitcast %struct._object** %func to i8*, !dbg !5812
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5812
  call void @llvm.dbg.declare(metadata %struct._object** %func, metadata !1033, metadata !2666), !dbg !5813
  %1 = bitcast %struct._object** %seq to i8*, !dbg !5812
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5812
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1034, metadata !2666), !dbg !5814
  %2 = bitcast %struct._object** %it to i8*, !dbg !5815
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5815
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1035, metadata !2666), !dbg !5816
  %3 = bitcast %struct.dropwhileobject** %lz to i8*, !dbg !5817
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5817
  call void @llvm.dbg.declare(metadata %struct.dropwhileobject** %lz, metadata !1036, metadata !2666), !dbg !5818
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5819, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %4, @dropwhile_type, !dbg !5821
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5822

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5823, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i32 0, i32 0), %struct._object* %5), !dbg !5825
  %tobool = icmp ne i32 %call, 0, !dbg !5825
  br i1 %tobool, label %if.end, label %if.then, !dbg !5826

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5827
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5827

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5828, !tbaa !2683
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i64 2, i64 2, %struct._object** %func, %struct._object** %seq), !dbg !5830
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5830
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !5831

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !5832
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5832

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %seq, align 8, !dbg !5833, !tbaa !2683
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %7), !dbg !5834
  store %struct._object* %call5, %struct._object** %it, align 8, !dbg !5835, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !5836, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %8, null, !dbg !5838
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !5839

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !5840
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5840

if.end.8:                                         ; preds = %if.end.4
  %9 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5841, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 36, !dbg !5842
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5842, !tbaa !3097
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5843, !tbaa !2683
  %call9 = call %struct._object* %10(%struct._typeobject* %11, i64 0), !dbg !5841
  %12 = bitcast %struct._object* %call9 to %struct.dropwhileobject*, !dbg !5844
  store %struct.dropwhileobject* %12, %struct.dropwhileobject** %lz, align 8, !dbg !5845, !tbaa !2683
  %13 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz, align 8, !dbg !5846, !tbaa !2683
  %cmp10 = icmp eq %struct.dropwhileobject* %13, null, !dbg !5847
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !5848

if.then.11:                                       ; preds = %if.end.8
  br label %do.body, !dbg !5849

do.body:                                          ; preds = %if.then.11
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5850
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !5850
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1037, metadata !2666), !dbg !5852
  %15 = load %struct._object*, %struct._object** %it, align 8, !dbg !5853, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !5852, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5854, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !5856
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !5857, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !5857
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5857, !tbaa !2722
  %cmp12 = icmp ne i64 %dec, 0, !dbg !5858
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !5859

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !5860

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5862, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !5864
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5864, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !5865
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5865, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5866, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !5867
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5868
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !5868
  br label %do.cond, !dbg !5870

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !5871

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5873

if.end.15:                                        ; preds = %if.end.8
  %23 = load %struct._object*, %struct._object** %func, align 8, !dbg !5874, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !5875
  %24 = load i64, i64* %ob_refcnt16, align 8, !dbg !5876, !tbaa !2722
  %inc = add i64 %24, 1, !dbg !5876
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !5876, !tbaa !2722
  %25 = load %struct._object*, %struct._object** %func, align 8, !dbg !5877, !tbaa !2683
  %26 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz, align 8, !dbg !5878, !tbaa !2683
  %func17 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %26, i32 0, i32 1, !dbg !5879
  store %struct._object* %25, %struct._object** %func17, align 8, !dbg !5880, !tbaa !5532
  %27 = load %struct._object*, %struct._object** %it, align 8, !dbg !5881, !tbaa !2683
  %28 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz, align 8, !dbg !5882, !tbaa !2683
  %it18 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %28, i32 0, i32 2, !dbg !5883
  store %struct._object* %27, %struct._object** %it18, align 8, !dbg !5884, !tbaa !5574
  %29 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz, align 8, !dbg !5885, !tbaa !2683
  %start = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %29, i32 0, i32 3, !dbg !5886
  store i64 0, i64* %start, align 8, !dbg !5887, !tbaa !5704
  %30 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz, align 8, !dbg !5888, !tbaa !2683
  %31 = bitcast %struct.dropwhileobject* %30 to %struct._object*, !dbg !5889
  store %struct._object* %31, %struct._object** %retval, !dbg !5890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5890

cleanup:                                          ; preds = %if.end.15, %do.end, %if.then.7, %if.then.3, %if.then
  %32 = bitcast %struct.dropwhileobject** %lz to i8*, !dbg !5891
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !5891
  %33 = bitcast %struct._object** %it to i8*, !dbg !5891
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !5891
  %34 = bitcast %struct._object** %seq to i8*, !dbg !5891
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !5891
  %35 = bitcast %struct._object** %func to i8*, !dbg !5891
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !5891
  %36 = load %struct._object*, %struct._object** %retval, !dbg !5891
  ret %struct._object* %36, !dbg !5891
}

declare i32 @PyObject_IsTrue(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_reduce(%struct.dropwhileobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.dropwhileobject*, align 8
  store %struct.dropwhileobject* %lz, %struct.dropwhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.dropwhileobject** %lz.addr, metadata !1020, metadata !2666), !dbg !5892
  %0 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5893, !tbaa !2683
  %1 = bitcast %struct.dropwhileobject* %0 to %struct._object*, !dbg !5894
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !5895
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5895, !tbaa !2675
  %3 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5896, !tbaa !2683
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %3, i32 0, i32 1, !dbg !5897
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !5897, !tbaa !5532
  %5 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5898, !tbaa !2683
  %it = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %5, i32 0, i32 2, !dbg !5899
  %6 = load %struct._object*, %struct._object** %it, align 8, !dbg !5899, !tbaa !5574
  %7 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5900, !tbaa !2683
  %start = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %7, i32 0, i32 3, !dbg !5901
  %8 = load i64, i64* %start, align 8, !dbg !5901, !tbaa !5704
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6, i64 %8), !dbg !5902
  ret %struct._object* %call, !dbg !5903
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_setstate(%struct.dropwhileobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.dropwhileobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %start = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.dropwhileobject* %lz, %struct.dropwhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.dropwhileobject** %lz.addr, metadata !1025, metadata !2666), !dbg !5904
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1026, metadata !2666), !dbg !5905
  %0 = bitcast i32* %start to i8*, !dbg !5906
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !5906
  call void @llvm.dbg.declare(metadata i32* %start, metadata !1027, metadata !2666), !dbg !5907
  %1 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5908, !tbaa !2683
  %call = call i32 @PyObject_IsTrue(%struct._object* %1), !dbg !5909
  store i32 %call, i32* %start, align 4, !dbg !5907, !tbaa !2691
  %2 = load i32, i32* %start, align 4, !dbg !5910, !tbaa !2691
  %cmp = icmp slt i32 %2, 0, !dbg !5912
  br i1 %cmp, label %if.then, label %if.end, !dbg !5913

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5914
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5914

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %start, align 4, !dbg !5915, !tbaa !2691
  %conv = sext i32 %3 to i64, !dbg !5915
  %4 = load %struct.dropwhileobject*, %struct.dropwhileobject** %lz.addr, align 8, !dbg !5916, !tbaa !2683
  %start1 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %4, i32 0, i32 3, !dbg !5917
  store i64 %conv, i64* %start1, align 8, !dbg !5918, !tbaa !5704
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5919, !tbaa !2722
  %inc = add i64 %5, 1, !dbg !5919
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5919, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5920
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5920

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast i32* %start to i8*, !dbg !5921
  call void @llvm.lifetime.end(i64 4, i8* %6) #1, !dbg !5921
  %7 = load %struct._object*, %struct._object** %retval, !dbg !5921
  ret %struct._object* %7, !dbg !5921
}

; Function Attrs: nounwind uwtable
define internal void @takewhile_dealloc(%struct.takewhileobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.takewhileobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.takewhileobject* %lz, %struct.takewhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.takewhileobject** %lz.addr, metadata !1045, metadata !2666), !dbg !5922
  %0 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !5923, !tbaa !2683
  %1 = bitcast %struct.takewhileobject* %0 to i8*, !dbg !5923
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !5924
  br label %do.body, !dbg !5925

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5926
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5926
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1046, metadata !2666), !dbg !5928
  %3 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !5929, !tbaa !2683
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %3, i32 0, i32 1, !dbg !5930
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !5930, !tbaa !5532
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5928, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5931, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !5932
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !5933

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !5934

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5936
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5936
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1048, metadata !2666), !dbg !5938
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5939, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !5938, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5940, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !5942
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !5943, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !5943
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5943, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !5944
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !5945

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !5946

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5948, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !5950
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5950, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !5951
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5951, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5952, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !5953
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5954
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !5954
  br label %do.cond, !dbg !5956

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5957

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !5959

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5961
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !5961
  br label %do.end.6, !dbg !5964

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !5965

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !5966
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !5966
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1051, metadata !2666), !dbg !5968
  %17 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !5969, !tbaa !2683
  %it = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %17, i32 0, i32 2, !dbg !5970
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !5970, !tbaa !5574
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5968, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5971, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !5972
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !5973

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !5974

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5976
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5976
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1053, metadata !2666), !dbg !5978
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !5979, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !5978, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5980, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !5982
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !5983, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !5983
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5983, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !5984
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !5985

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !5986

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5988, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !5990
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5990, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !5991
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5991, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5992, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !5993
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5994
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5994
  br label %do.cond.21, !dbg !5996

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !5997

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !5999

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !6001
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !6001
  br label %do.end.25, !dbg !6002

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6003, !tbaa !2683
  %31 = bitcast %struct.takewhileobject* %30 to %struct._object*, !dbg !6004
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !6005
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !6005, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !6006
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6006, !tbaa !2864
  %34 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6007, !tbaa !2683
  %35 = bitcast %struct.takewhileobject* %34 to i8*, !dbg !6007
  call void %33(i8* %35), !dbg !6008
  ret void, !dbg !6009
}

; Function Attrs: nounwind uwtable
define internal i32 @takewhile_traverse(%struct.takewhileobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.takewhileobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.takewhileobject* %lz, %struct.takewhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.takewhileobject** %lz.addr, metadata !1060, metadata !2666), !dbg !6010
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1061, metadata !2666), !dbg !6011
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1062, metadata !2666), !dbg !6012
  br label %do.body, !dbg !6013

do.body:                                          ; preds = %entry
  %0 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6014, !tbaa !2683
  %it = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %0, i32 0, i32 2, !dbg !6016
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !6016, !tbaa !5574
  %tobool = icmp ne %struct._object* %1, null, !dbg !6017
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !6018

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !6019
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6019
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1063, metadata !2666), !dbg !6021
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6022, !tbaa !2683
  %4 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6023, !tbaa !2683
  %it1 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %4, i32 0, i32 2, !dbg !6024
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !6024, !tbaa !5574
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !6025, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !6022
  store i32 %call, i32* %vret, align 4, !dbg !6021, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !6026, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !6026
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6028

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !6029, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !6031
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6031

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !6032
  br label %cleanup, !dbg !6032

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !6034
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !6034
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !6037

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !6038

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !6041

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6042, !tbaa !2683
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %10, i32 0, i32 1, !dbg !6044
  %11 = load %struct._object*, %struct._object** %func, align 8, !dbg !6044, !tbaa !5532
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !6045
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !6046

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !6047
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !6047
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1067, metadata !2666), !dbg !6049
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6050, !tbaa !2683
  %14 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6051, !tbaa !2683
  %func9 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %14, i32 0, i32 1, !dbg !6052
  %15 = load %struct._object*, %struct._object** %func9, align 8, !dbg !6052, !tbaa !5532
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !6053, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !6050
  store i32 %call10, i32* %vret8, align 4, !dbg !6049, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !6054, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !6054
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !6056

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !6057, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !6059
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !6059

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !6060
  br label %cleanup.14, !dbg !6060

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !6062
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !6062
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !6065

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !6066

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !6069
  br label %return, !dbg !6069

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !6070
  ret i32 %20, !dbg !6070
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_next(%struct.takewhileobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.takewhileobject*, align 8
  %item = alloca %struct._object*, align 8
  %good = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %ok = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  store %struct.takewhileobject* %lz, %struct.takewhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.takewhileobject** %lz.addr, metadata !1075, metadata !2666), !dbg !6071
  %0 = bitcast %struct._object** %item to i8*, !dbg !6072
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6072
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1076, metadata !2666), !dbg !6073
  %1 = bitcast %struct._object** %good to i8*, !dbg !6072
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6072
  call void @llvm.dbg.declare(metadata %struct._object** %good, metadata !1077, metadata !2666), !dbg !6074
  %2 = bitcast %struct._object** %it to i8*, !dbg !6075
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6075
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1078, metadata !2666), !dbg !6076
  %3 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6077, !tbaa !2683
  %it1 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %3, i32 0, i32 2, !dbg !6078
  %4 = load %struct._object*, %struct._object** %it1, align 8, !dbg !6078, !tbaa !5574
  store %struct._object* %4, %struct._object** %it, align 8, !dbg !6076, !tbaa !2683
  %5 = bitcast i64* %ok to i8*, !dbg !6079
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !6079
  call void @llvm.dbg.declare(metadata i64* %ok, metadata !1079, metadata !2666), !dbg !6080
  %6 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6081, !tbaa !2683
  %stop = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %6, i32 0, i32 3, !dbg !6083
  %7 = load i64, i64* %stop, align 8, !dbg !6083, !tbaa !5704
  %cmp = icmp eq i64 %7, 1, !dbg !6084
  br i1 %cmp, label %if.then, label %if.end, !dbg !6085

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6086
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6086

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !6087, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !6088
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6088, !tbaa !2675
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 26, !dbg !6089
  %10 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !6089, !tbaa !5690
  %11 = load %struct._object*, %struct._object** %it, align 8, !dbg !6090, !tbaa !2683
  %call = call %struct._object* %10(%struct._object* %11), !dbg !6091
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !6092, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %item, align 8, !dbg !6093, !tbaa !2683
  %cmp2 = icmp eq %struct._object* %12, null, !dbg !6095
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !6096

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6097

if.end.4:                                         ; preds = %if.end
  %13 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6098, !tbaa !2683
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %13, i32 0, i32 1, !dbg !6099
  %14 = load %struct._object*, %struct._object** %func, align 8, !dbg !6099, !tbaa !5532
  %15 = load %struct._object*, %struct._object** %item, align 8, !dbg !6100, !tbaa !2683
  %call5 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %14, %struct._object* %15, i8* null), !dbg !6101
  store %struct._object* %call5, %struct._object** %good, align 8, !dbg !6102, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %good, align 8, !dbg !6103, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %16, null, !dbg !6104
  br i1 %cmp6, label %if.then.7, label %if.end.12, !dbg !6105

if.then.7:                                        ; preds = %if.end.4
  br label %do.body, !dbg !6106

do.body:                                          ; preds = %if.then.7
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6107
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !6107
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1080, metadata !2666), !dbg !6109
  %18 = load %struct._object*, %struct._object** %item, align 8, !dbg !6110, !tbaa !2683
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !6109, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6111, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !6113
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !6114, !tbaa !2722
  %dec = add i64 %20, -1, !dbg !6114
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6114, !tbaa !2722
  %cmp8 = icmp ne i64 %dec, 0, !dbg !6115
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !6116

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !6117

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6119, !tbaa !2683
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !6121
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !6121, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !6122
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6122, !tbaa !2768
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6123, !tbaa !2683
  call void %23(%struct._object* %24), !dbg !6124
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.9
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6125
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !6125
  br label %do.cond, !dbg !6127

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !6128

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6130
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6130

if.end.12:                                        ; preds = %if.end.4
  %26 = load %struct._object*, %struct._object** %good, align 8, !dbg !6131, !tbaa !2683
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %26), !dbg !6132
  %conv = sext i32 %call13 to i64, !dbg !6132
  store i64 %conv, i64* %ok, align 8, !dbg !6133, !tbaa !3427
  br label %do.body.14, !dbg !6134

do.body.14:                                       ; preds = %if.end.12
  %27 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !6135
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !6135
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1084, metadata !2666), !dbg !6137
  %28 = load %struct._object*, %struct._object** %good, align 8, !dbg !6138, !tbaa !2683
  store %struct._object* %28, %struct._object** %_py_decref_tmp15, align 8, !dbg !6137, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !6139, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !6141
  %30 = load i64, i64* %ob_refcnt16, align 8, !dbg !6142, !tbaa !2722
  %dec17 = add i64 %30, -1, !dbg !6142
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !6142, !tbaa !2722
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !6143
  br i1 %cmp18, label %if.then.20, label %if.else.21, !dbg !6144

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24, !dbg !6145

if.else.21:                                       ; preds = %do.body.14
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !6147, !tbaa !2683
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !6149
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !6149, !tbaa !2675
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !6150
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !6150, !tbaa !2768
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !6151, !tbaa !2683
  call void %33(%struct._object* %34), !dbg !6152
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %35 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !6153
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !6153
  br label %do.cond.25, !dbg !6155

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !6156

do.end.26:                                        ; preds = %do.cond.25
  %36 = load i64, i64* %ok, align 8, !dbg !6158, !tbaa !3427
  %cmp27 = icmp eq i64 %36, 1, !dbg !6160
  br i1 %cmp27, label %if.then.29, label %if.end.30, !dbg !6161

if.then.29:                                       ; preds = %do.end.26
  %37 = load %struct._object*, %struct._object** %item, align 8, !dbg !6162, !tbaa !2683
  store %struct._object* %37, %struct._object** %retval, !dbg !6163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6163

if.end.30:                                        ; preds = %do.end.26
  br label %do.body.31, !dbg !6164

do.body.31:                                       ; preds = %if.end.30
  %38 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !6165
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !6165
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !1086, metadata !2666), !dbg !6167
  %39 = load %struct._object*, %struct._object** %item, align 8, !dbg !6168, !tbaa !2683
  store %struct._object* %39, %struct._object** %_py_decref_tmp32, align 8, !dbg !6167, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !6169, !tbaa !2683
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !6171
  %41 = load i64, i64* %ob_refcnt33, align 8, !dbg !6172, !tbaa !2722
  %dec34 = add i64 %41, -1, !dbg !6172
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !6172, !tbaa !2722
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !6173
  br i1 %cmp35, label %if.then.37, label %if.else.38, !dbg !6174

if.then.37:                                       ; preds = %do.body.31
  br label %if.end.41, !dbg !6175

if.else.38:                                       ; preds = %do.body.31
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !6177, !tbaa !2683
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !6179
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !6179, !tbaa !2675
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !6180
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !6180, !tbaa !2768
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !6181, !tbaa !2683
  call void %44(%struct._object* %45), !dbg !6182
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.38, %if.then.37
  %46 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !6183
  br label %do.cond.42, !dbg !6184

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !6185

do.end.43:                                        ; preds = %do.cond.42
  %47 = load i64, i64* %ok, align 8, !dbg !6187, !tbaa !3427
  %cmp44 = icmp eq i64 %47, 0, !dbg !6189
  br i1 %cmp44, label %if.then.46, label %if.end.48, !dbg !6190

if.then.46:                                       ; preds = %do.end.43
  %48 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6191, !tbaa !2683
  %stop47 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %48, i32 0, i32 3, !dbg !6192
  store i64 1, i64* %stop47, align 8, !dbg !6193, !tbaa !5704
  br label %if.end.48, !dbg !6191

if.end.48:                                        ; preds = %if.then.46, %do.end.43
  store %struct._object* null, %struct._object** %retval, !dbg !6194
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6194

cleanup:                                          ; preds = %if.end.48, %if.then.29, %do.end, %if.then.3, %if.then
  %49 = bitcast i64* %ok to i8*, !dbg !6195
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !6195
  %50 = bitcast %struct._object** %it to i8*, !dbg !6195
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !6195
  %51 = bitcast %struct._object** %good to i8*, !dbg !6195
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !6195
  %52 = bitcast %struct._object** %item to i8*, !dbg !6195
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !6195
  %53 = load %struct._object*, %struct._object** %retval, !dbg !6195
  ret %struct._object* %53, !dbg !6195
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %lz = alloca %struct.takewhileobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1100, metadata !2666), !dbg !6196
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1101, metadata !2666), !dbg !6197
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1102, metadata !2666), !dbg !6198
  %0 = bitcast %struct._object** %func to i8*, !dbg !6199
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6199
  call void @llvm.dbg.declare(metadata %struct._object** %func, metadata !1103, metadata !2666), !dbg !6200
  %1 = bitcast %struct._object** %seq to i8*, !dbg !6199
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6199
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1104, metadata !2666), !dbg !6201
  %2 = bitcast %struct._object** %it to i8*, !dbg !6202
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6202
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1105, metadata !2666), !dbg !6203
  %3 = bitcast %struct.takewhileobject** %lz to i8*, !dbg !6204
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6204
  call void @llvm.dbg.declare(metadata %struct.takewhileobject** %lz, metadata !1106, metadata !2666), !dbg !6205
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6206, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %4, @takewhile_type, !dbg !6208
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6209

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6210, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), %struct._object* %5), !dbg !6212
  %tobool = icmp ne i32 %call, 0, !dbg !6212
  br i1 %tobool, label %if.end, label %if.then, !dbg !6213

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !6214
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6214

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6215, !tbaa !2683
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i64 2, i64 2, %struct._object** %func, %struct._object** %seq), !dbg !6217
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6217
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !6218

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6219
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6219

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %seq, align 8, !dbg !6220, !tbaa !2683
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %7), !dbg !6221
  store %struct._object* %call5, %struct._object** %it, align 8, !dbg !6222, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !6223, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %8, null, !dbg !6225
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !6226

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !6227
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6227

if.end.8:                                         ; preds = %if.end.4
  %9 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6228, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 36, !dbg !6229
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6229, !tbaa !3097
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6230, !tbaa !2683
  %call9 = call %struct._object* %10(%struct._typeobject* %11, i64 0), !dbg !6228
  %12 = bitcast %struct._object* %call9 to %struct.takewhileobject*, !dbg !6231
  store %struct.takewhileobject* %12, %struct.takewhileobject** %lz, align 8, !dbg !6232, !tbaa !2683
  %13 = load %struct.takewhileobject*, %struct.takewhileobject** %lz, align 8, !dbg !6233, !tbaa !2683
  %cmp10 = icmp eq %struct.takewhileobject* %13, null, !dbg !6234
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !6235

if.then.11:                                       ; preds = %if.end.8
  br label %do.body, !dbg !6236

do.body:                                          ; preds = %if.then.11
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6237
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !6237
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1107, metadata !2666), !dbg !6239
  %15 = load %struct._object*, %struct._object** %it, align 8, !dbg !6240, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !6239, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6241, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !6243
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !6244, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !6244
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6244, !tbaa !2722
  %cmp12 = icmp ne i64 %dec, 0, !dbg !6245
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !6246

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !6247

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6249, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6251
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6251, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !6252
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6252, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6253, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !6254
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6255
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !6255
  br label %do.cond, !dbg !6257

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !6258

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6260
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6260

if.end.15:                                        ; preds = %if.end.8
  %23 = load %struct._object*, %struct._object** %func, align 8, !dbg !6261, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6262
  %24 = load i64, i64* %ob_refcnt16, align 8, !dbg !6263, !tbaa !2722
  %inc = add i64 %24, 1, !dbg !6263
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !6263, !tbaa !2722
  %25 = load %struct._object*, %struct._object** %func, align 8, !dbg !6264, !tbaa !2683
  %26 = load %struct.takewhileobject*, %struct.takewhileobject** %lz, align 8, !dbg !6265, !tbaa !2683
  %func17 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %26, i32 0, i32 1, !dbg !6266
  store %struct._object* %25, %struct._object** %func17, align 8, !dbg !6267, !tbaa !5532
  %27 = load %struct._object*, %struct._object** %it, align 8, !dbg !6268, !tbaa !2683
  %28 = load %struct.takewhileobject*, %struct.takewhileobject** %lz, align 8, !dbg !6269, !tbaa !2683
  %it18 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %28, i32 0, i32 2, !dbg !6270
  store %struct._object* %27, %struct._object** %it18, align 8, !dbg !6271, !tbaa !5574
  %29 = load %struct.takewhileobject*, %struct.takewhileobject** %lz, align 8, !dbg !6272, !tbaa !2683
  %stop = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %29, i32 0, i32 3, !dbg !6273
  store i64 0, i64* %stop, align 8, !dbg !6274, !tbaa !5704
  %30 = load %struct.takewhileobject*, %struct.takewhileobject** %lz, align 8, !dbg !6275, !tbaa !2683
  %31 = bitcast %struct.takewhileobject* %30 to %struct._object*, !dbg !6276
  store %struct._object* %31, %struct._object** %retval, !dbg !6277
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6277

cleanup:                                          ; preds = %if.end.15, %do.end, %if.then.7, %if.then.3, %if.then
  %32 = bitcast %struct.takewhileobject** %lz to i8*, !dbg !6278
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !6278
  %33 = bitcast %struct._object** %it to i8*, !dbg !6278
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !6278
  %34 = bitcast %struct._object** %seq to i8*, !dbg !6278
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !6278
  %35 = bitcast %struct._object** %func to i8*, !dbg !6278
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !6278
  %36 = load %struct._object*, %struct._object** %retval, !dbg !6278
  ret %struct._object* %36, !dbg !6278
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_reduce(%struct.takewhileobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.takewhileobject*, align 8
  store %struct.takewhileobject* %lz, %struct.takewhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.takewhileobject** %lz.addr, metadata !1090, metadata !2666), !dbg !6279
  %0 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6280, !tbaa !2683
  %1 = bitcast %struct.takewhileobject* %0 to %struct._object*, !dbg !6281
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !6282
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6282, !tbaa !2675
  %3 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6283, !tbaa !2683
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %3, i32 0, i32 1, !dbg !6284
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !6284, !tbaa !5532
  %5 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6285, !tbaa !2683
  %it = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %5, i32 0, i32 2, !dbg !6286
  %6 = load %struct._object*, %struct._object** %it, align 8, !dbg !6286, !tbaa !5574
  %7 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6287, !tbaa !2683
  %stop = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %7, i32 0, i32 3, !dbg !6288
  %8 = load i64, i64* %stop, align 8, !dbg !6288, !tbaa !5704
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6, i64 %8), !dbg !6289
  ret %struct._object* %call, !dbg !6290
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_reduce_setstate(%struct.takewhileobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.takewhileobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %stop = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.takewhileobject* %lz, %struct.takewhileobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.takewhileobject** %lz.addr, metadata !1095, metadata !2666), !dbg !6291
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1096, metadata !2666), !dbg !6292
  %0 = bitcast i32* %stop to i8*, !dbg !6293
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !6293
  call void @llvm.dbg.declare(metadata i32* %stop, metadata !1097, metadata !2666), !dbg !6294
  %1 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6295, !tbaa !2683
  %call = call i32 @PyObject_IsTrue(%struct._object* %1), !dbg !6296
  store i32 %call, i32* %stop, align 4, !dbg !6294, !tbaa !2691
  %2 = load i32, i32* %stop, align 4, !dbg !6297, !tbaa !2691
  %cmp = icmp slt i32 %2, 0, !dbg !6299
  br i1 %cmp, label %if.then, label %if.end, !dbg !6300

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6301
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6301

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %stop, align 4, !dbg !6302, !tbaa !2691
  %conv = sext i32 %3 to i64, !dbg !6302
  %4 = load %struct.takewhileobject*, %struct.takewhileobject** %lz.addr, align 8, !dbg !6303, !tbaa !2683
  %stop1 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %4, i32 0, i32 3, !dbg !6304
  store i64 %conv, i64* %stop1, align 8, !dbg !6305, !tbaa !5704
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6306, !tbaa !2722
  %inc = add i64 %5, 1, !dbg !6306
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6306, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6307
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6307

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast i32* %stop to i8*, !dbg !6308
  call void @llvm.lifetime.end(i64 4, i8* %6) #1, !dbg !6308
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6308
  ret %struct._object* %7, !dbg !6308
}

; Function Attrs: nounwind uwtable
define internal void @islice_dealloc(%struct.isliceobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.isliceobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.isliceobject* %lz, %struct.isliceobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.isliceobject** %lz.addr, metadata !1115, metadata !2666), !dbg !6309
  %0 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6310, !tbaa !2683
  %1 = bitcast %struct.isliceobject* %0 to i8*, !dbg !6310
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !6311
  br label %do.body, !dbg !6312

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6313
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6313
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1116, metadata !2666), !dbg !6315
  %3 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6316, !tbaa !2683
  %it = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %3, i32 0, i32 1, !dbg !6317
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !6317, !tbaa !6318
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6315, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6320, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !6321
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !6322

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !6323

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6325
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6325
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1118, metadata !2666), !dbg !6327
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6328, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !6327, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6329, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !6331
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !6332, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !6332
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6332, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !6333
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !6334

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !6335

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6337, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6339
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6339, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !6340
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6340, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6341, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !6342
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6343
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !6343
  br label %do.cond, !dbg !6345

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6346

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !6348

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6350
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !6350
  br label %do.end.6, !dbg !6353

do.end.6:                                         ; preds = %if.end.4
  %16 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6354, !tbaa !2683
  %17 = bitcast %struct.isliceobject* %16 to %struct._object*, !dbg !6355
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !6356
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !6356, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 38, !dbg !6357
  %19 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6357, !tbaa !2864
  %20 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6358, !tbaa !2683
  %21 = bitcast %struct.isliceobject* %20 to i8*, !dbg !6358
  call void %19(i8* %21), !dbg !6359
  ret void, !dbg !6360
}

; Function Attrs: nounwind uwtable
define internal i32 @islice_traverse(%struct.isliceobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.isliceobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.isliceobject* %lz, %struct.isliceobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.isliceobject** %lz.addr, metadata !1125, metadata !2666), !dbg !6361
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1126, metadata !2666), !dbg !6362
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1127, metadata !2666), !dbg !6363
  br label %do.body, !dbg !6364

do.body:                                          ; preds = %entry
  %0 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6365, !tbaa !2683
  %it = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %0, i32 0, i32 1, !dbg !6367
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !6367, !tbaa !6318
  %tobool = icmp ne %struct._object* %1, null, !dbg !6368
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !6369

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !6370
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6370
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1128, metadata !2666), !dbg !6372
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6373, !tbaa !2683
  %4 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6374, !tbaa !2683
  %it1 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %4, i32 0, i32 1, !dbg !6375
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !6375, !tbaa !6318
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !6376, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !6373
  store i32 %call, i32* %vret, align 4, !dbg !6372, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !6377, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !6377
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6379

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !6380, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !6382
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6382

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !6383
  br label %cleanup, !dbg !6383

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !6385
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !6385
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !6388

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !6389

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval, !dbg !6392
  br label %return, !dbg !6392

return:                                           ; preds = %LeafBlock, %do.end
  %10 = load i32, i32* %retval, !dbg !6393
  ret i32 %10, !dbg !6393
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_next(%struct.isliceobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.isliceobject*, align 8
  %item = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %stop = alloca i64, align 8
  %oldnext = alloca i64, align 8
  %iternext = alloca %struct._object* (%struct._object*)*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  store %struct.isliceobject* %lz, %struct.isliceobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.isliceobject** %lz.addr, metadata !1136, metadata !2666), !dbg !6394
  %0 = bitcast %struct._object** %item to i8*, !dbg !6395
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6395
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1137, metadata !2666), !dbg !6396
  %1 = bitcast %struct._object** %it to i8*, !dbg !6397
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6397
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1138, metadata !2666), !dbg !6398
  %2 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6399, !tbaa !2683
  %it1 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %2, i32 0, i32 1, !dbg !6400
  %3 = load %struct._object*, %struct._object** %it1, align 8, !dbg !6400, !tbaa !6318
  store %struct._object* %3, %struct._object** %it, align 8, !dbg !6398, !tbaa !2683
  %4 = bitcast i64* %stop to i8*, !dbg !6401
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6401
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !1139, metadata !2666), !dbg !6402
  %5 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6403, !tbaa !2683
  %stop2 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %5, i32 0, i32 3, !dbg !6404
  %6 = load i64, i64* %stop2, align 8, !dbg !6404, !tbaa !6405
  store i64 %6, i64* %stop, align 8, !dbg !6402, !tbaa !3427
  %7 = bitcast i64* %oldnext to i8*, !dbg !6406
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6406
  call void @llvm.dbg.declare(metadata i64* %oldnext, metadata !1140, metadata !2666), !dbg !6407
  %8 = bitcast %struct._object* (%struct._object*)** %iternext to i8*, !dbg !6408
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !6408
  call void @llvm.dbg.declare(metadata %struct._object* (%struct._object*)** %iternext, metadata !1141, metadata !2666), !dbg !6409
  %9 = load %struct._object*, %struct._object** %it, align 8, !dbg !6410, !tbaa !2683
  %cmp = icmp eq %struct._object* %9, null, !dbg !6412
  br i1 %cmp, label %if.then, label %if.end, !dbg !6413

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6414

if.end:                                           ; preds = %entry
  %10 = load %struct._object*, %struct._object** %it, align 8, !dbg !6415, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6416
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6416, !tbaa !2675
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 26, !dbg !6417
  %12 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !6417, !tbaa !5690
  store %struct._object* (%struct._object*)* %12, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !6418, !tbaa !2683
  br label %while.cond, !dbg !6419

while.cond:                                       ; preds = %do.end, %if.end
  %13 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6420, !tbaa !2683
  %cnt = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %13, i32 0, i32 5, !dbg !6423
  %14 = load i64, i64* %cnt, align 8, !dbg !6423, !tbaa !6424
  %15 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6425, !tbaa !2683
  %next = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %15, i32 0, i32 2, !dbg !6426
  %16 = load i64, i64* %next, align 8, !dbg !6426, !tbaa !6427
  %cmp3 = icmp slt i64 %14, %16, !dbg !6428
  br i1 %cmp3, label %while.body, label %while.end, !dbg !6419

while.body:                                       ; preds = %while.cond
  %17 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !6429, !tbaa !2683
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !6430, !tbaa !2683
  %call = call %struct._object* %17(%struct._object* %18), !dbg !6429
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !6431, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %item, align 8, !dbg !6432, !tbaa !2683
  %cmp4 = icmp eq %struct._object* %19, null, !dbg !6434
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !6435

if.then.5:                                        ; preds = %while.body
  br label %empty, !dbg !6436

if.end.6:                                         ; preds = %while.body
  br label %do.body, !dbg !6437

do.body:                                          ; preds = %if.end.6
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6438
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !6438
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1142, metadata !2666), !dbg !6440
  %21 = load %struct._object*, %struct._object** %item, align 8, !dbg !6441, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !6440, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6442, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !6444
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !6445, !tbaa !2722
  %dec = add i64 %23, -1, !dbg !6445
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6445, !tbaa !2722
  %cmp7 = icmp ne i64 %dec, 0, !dbg !6446
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !6447

if.then.8:                                        ; preds = %do.body
  br label %if.end.10, !dbg !6448

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6450, !tbaa !2683
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !6452
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !6452, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !6453
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6453, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6454, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !6455
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.8
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6456
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !6456
  br label %do.cond, !dbg !6458

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !6459

do.end:                                           ; preds = %do.cond
  %29 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6461, !tbaa !2683
  %cnt11 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %29, i32 0, i32 5, !dbg !6462
  %30 = load i64, i64* %cnt11, align 8, !dbg !6463, !tbaa !6424
  %inc = add i64 %30, 1, !dbg !6463
  store i64 %inc, i64* %cnt11, align 8, !dbg !6463, !tbaa !6424
  br label %while.cond, !dbg !6419

while.end:                                        ; preds = %while.cond
  %31 = load i64, i64* %stop, align 8, !dbg !6464, !tbaa !3427
  %cmp12 = icmp ne i64 %31, -1, !dbg !6466
  br i1 %cmp12, label %land.lhs.true, label %if.end.16, !dbg !6467

land.lhs.true:                                    ; preds = %while.end
  %32 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6468, !tbaa !2683
  %cnt13 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %32, i32 0, i32 5, !dbg !6470
  %33 = load i64, i64* %cnt13, align 8, !dbg !6470, !tbaa !6424
  %34 = load i64, i64* %stop, align 8, !dbg !6471, !tbaa !3427
  %cmp14 = icmp sge i64 %33, %34, !dbg !6472
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !6473

if.then.15:                                       ; preds = %land.lhs.true
  br label %empty, !dbg !6474

if.end.16:                                        ; preds = %land.lhs.true, %while.end
  %35 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !6475, !tbaa !2683
  %36 = load %struct._object*, %struct._object** %it, align 8, !dbg !6476, !tbaa !2683
  %call17 = call %struct._object* %35(%struct._object* %36), !dbg !6475
  store %struct._object* %call17, %struct._object** %item, align 8, !dbg !6477, !tbaa !2683
  %37 = load %struct._object*, %struct._object** %item, align 8, !dbg !6478, !tbaa !2683
  %cmp18 = icmp eq %struct._object* %37, null, !dbg !6480
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !6481

if.then.19:                                       ; preds = %if.end.16
  br label %empty, !dbg !6482

if.end.20:                                        ; preds = %if.end.16
  %38 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6483, !tbaa !2683
  %cnt21 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %38, i32 0, i32 5, !dbg !6484
  %39 = load i64, i64* %cnt21, align 8, !dbg !6485, !tbaa !6424
  %inc22 = add i64 %39, 1, !dbg !6485
  store i64 %inc22, i64* %cnt21, align 8, !dbg !6485, !tbaa !6424
  %40 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6486, !tbaa !2683
  %next23 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %40, i32 0, i32 2, !dbg !6487
  %41 = load i64, i64* %next23, align 8, !dbg !6487, !tbaa !6427
  store i64 %41, i64* %oldnext, align 8, !dbg !6488, !tbaa !3427
  %42 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6489, !tbaa !2683
  %step = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %42, i32 0, i32 4, !dbg !6490
  %43 = load i64, i64* %step, align 8, !dbg !6490, !tbaa !6491
  %44 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6492, !tbaa !2683
  %next24 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %44, i32 0, i32 2, !dbg !6493
  %45 = load i64, i64* %next24, align 8, !dbg !6494, !tbaa !6427
  %add = add i64 %45, %43, !dbg !6494
  store i64 %add, i64* %next24, align 8, !dbg !6494, !tbaa !6427
  %46 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6495, !tbaa !2683
  %next25 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %46, i32 0, i32 2, !dbg !6497
  %47 = load i64, i64* %next25, align 8, !dbg !6497, !tbaa !6427
  %48 = load i64, i64* %oldnext, align 8, !dbg !6498, !tbaa !3427
  %cmp26 = icmp slt i64 %47, %48, !dbg !6499
  br i1 %cmp26, label %if.then.31, label %lor.lhs.false, !dbg !6500

lor.lhs.false:                                    ; preds = %if.end.20
  %49 = load i64, i64* %stop, align 8, !dbg !6501, !tbaa !3427
  %cmp27 = icmp ne i64 %49, -1, !dbg !6503
  br i1 %cmp27, label %land.lhs.true.28, label %if.end.33, !dbg !6504

land.lhs.true.28:                                 ; preds = %lor.lhs.false
  %50 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6505, !tbaa !2683
  %next29 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %50, i32 0, i32 2, !dbg !6507
  %51 = load i64, i64* %next29, align 8, !dbg !6507, !tbaa !6427
  %52 = load i64, i64* %stop, align 8, !dbg !6508, !tbaa !3427
  %cmp30 = icmp sgt i64 %51, %52, !dbg !6509
  br i1 %cmp30, label %if.then.31, label %if.end.33, !dbg !6510

if.then.31:                                       ; preds = %land.lhs.true.28, %if.end.20
  %53 = load i64, i64* %stop, align 8, !dbg !6511, !tbaa !3427
  %54 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6512, !tbaa !2683
  %next32 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %54, i32 0, i32 2, !dbg !6513
  store i64 %53, i64* %next32, align 8, !dbg !6514, !tbaa !6427
  br label %if.end.33, !dbg !6512

if.end.33:                                        ; preds = %if.then.31, %land.lhs.true.28, %lor.lhs.false
  %55 = load %struct._object*, %struct._object** %item, align 8, !dbg !6515, !tbaa !2683
  store %struct._object* %55, %struct._object** %retval, !dbg !6516
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6516

empty:                                            ; preds = %if.then.19, %if.then.15, %if.then.5
  br label %do.body.34, !dbg !6517

do.body.34:                                       ; preds = %empty
  %56 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6518
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !6518
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1145, metadata !2666), !dbg !6520
  %57 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6521, !tbaa !2683
  %it35 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %57, i32 0, i32 1, !dbg !6522
  %58 = load %struct._object*, %struct._object** %it35, align 8, !dbg !6522, !tbaa !6318
  store %struct._object* %58, %struct._object** %_py_tmp, align 8, !dbg !6520, !tbaa !2683
  %59 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6523, !tbaa !2683
  %cmp36 = icmp ne %struct._object* %59, null, !dbg !6524
  br i1 %cmp36, label %if.then.37, label %if.end.51, !dbg !6525

if.then.37:                                       ; preds = %do.body.34
  %60 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6526, !tbaa !2683
  %it38 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %60, i32 0, i32 1, !dbg !6528
  store %struct._object* null, %struct._object** %it38, align 8, !dbg !6529, !tbaa !6318
  br label %do.body.39, !dbg !6530

do.body.39:                                       ; preds = %if.then.37
  %61 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !6531
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !6531
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1147, metadata !2666), !dbg !6533
  %62 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6534, !tbaa !2683
  store %struct._object* %62, %struct._object** %_py_decref_tmp40, align 8, !dbg !6533, !tbaa !2683
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !6535, !tbaa !2683
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !6537
  %64 = load i64, i64* %ob_refcnt41, align 8, !dbg !6538, !tbaa !2722
  %dec42 = add i64 %64, -1, !dbg !6538
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !6538, !tbaa !2722
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !6539
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !6540

if.then.44:                                       ; preds = %do.body.39
  br label %if.end.48, !dbg !6541

if.else.45:                                       ; preds = %do.body.39
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !6543, !tbaa !2683
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !6545
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !6545, !tbaa !2675
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !6546
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !6546, !tbaa !2768
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !6547, !tbaa !2683
  call void %67(%struct._object* %68), !dbg !6548
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %69 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !6549
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !6549
  br label %do.cond.49, !dbg !6551

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !6552

do.end.50:                                        ; preds = %do.cond.49
  br label %if.end.51, !dbg !6554

if.end.51:                                        ; preds = %do.end.50, %do.body.34
  %70 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6556
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !6556
  br label %do.cond.52, !dbg !6559

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !6560

do.end.53:                                        ; preds = %do.cond.52
  store %struct._object* null, %struct._object** %retval, !dbg !6562
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6562

cleanup:                                          ; preds = %do.end.53, %if.end.33, %if.then
  %71 = bitcast %struct._object* (%struct._object*)** %iternext to i8*, !dbg !6563
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !6563
  %72 = bitcast i64* %oldnext to i8*, !dbg !6563
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !6563
  %73 = bitcast i64* %stop to i8*, !dbg !6563
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !6563
  %74 = bitcast %struct._object** %it to i8*, !dbg !6563
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !6563
  %75 = bitcast %struct._object** %item to i8*, !dbg !6563
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !6563
  %76 = load %struct._object*, %struct._object** %retval, !dbg !6563
  ret %struct._object* %76, !dbg !6563
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %it = alloca %struct._object*, align 8
  %a1 = alloca %struct._object*, align 8
  %a2 = alloca %struct._object*, align 8
  %a3 = alloca %struct._object*, align 8
  %numargs = alloca i64, align 8
  %lz = alloca %struct.isliceobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1170, metadata !2666), !dbg !6564
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1171, metadata !2666), !dbg !6565
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1172, metadata !2666), !dbg !6566
  %0 = bitcast %struct._object** %seq to i8*, !dbg !6567
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6567
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1173, metadata !2666), !dbg !6568
  %1 = bitcast i64* %start to i8*, !dbg !6569
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6569
  call void @llvm.dbg.declare(metadata i64* %start, metadata !1174, metadata !2666), !dbg !6570
  store i64 0, i64* %start, align 8, !dbg !6570, !tbaa !3427
  %2 = bitcast i64* %stop to i8*, !dbg !6569
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6569
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !1175, metadata !2666), !dbg !6571
  store i64 -1, i64* %stop, align 8, !dbg !6571, !tbaa !3427
  %3 = bitcast i64* %step to i8*, !dbg !6569
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6569
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1176, metadata !2666), !dbg !6572
  store i64 1, i64* %step, align 8, !dbg !6572, !tbaa !3427
  %4 = bitcast %struct._object** %it to i8*, !dbg !6573
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6573
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1177, metadata !2666), !dbg !6574
  %5 = bitcast %struct._object** %a1 to i8*, !dbg !6573
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !6573
  call void @llvm.dbg.declare(metadata %struct._object** %a1, metadata !1178, metadata !2666), !dbg !6575
  store %struct._object* null, %struct._object** %a1, align 8, !dbg !6575, !tbaa !2683
  %6 = bitcast %struct._object** %a2 to i8*, !dbg !6573
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6573
  call void @llvm.dbg.declare(metadata %struct._object** %a2, metadata !1179, metadata !2666), !dbg !6576
  store %struct._object* null, %struct._object** %a2, align 8, !dbg !6576, !tbaa !2683
  %7 = bitcast %struct._object** %a3 to i8*, !dbg !6573
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6573
  call void @llvm.dbg.declare(metadata %struct._object** %a3, metadata !1180, metadata !2666), !dbg !6577
  store %struct._object* null, %struct._object** %a3, align 8, !dbg !6577, !tbaa !2683
  %8 = bitcast i64* %numargs to i8*, !dbg !6578
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !6578
  call void @llvm.dbg.declare(metadata i64* %numargs, metadata !1181, metadata !2666), !dbg !6579
  %9 = bitcast %struct.isliceobject** %lz to i8*, !dbg !6580
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !6580
  call void @llvm.dbg.declare(metadata %struct.isliceobject** %lz, metadata !1182, metadata !2666), !dbg !6581
  %10 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6582, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %10, @islice_type, !dbg !6584
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6585

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6586, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), %struct._object* %11), !dbg !6588
  %tobool = icmp ne i32 %call, 0, !dbg !6588
  br i1 %tobool, label %if.end, label %if.then, !dbg !6589

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !6590
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6590

if.end:                                           ; preds = %land.lhs.true, %entry
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6591, !tbaa !2683
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0), i64 2, i64 4, %struct._object** %seq, %struct._object** %a1, %struct._object** %a2, %struct._object** %a3), !dbg !6593
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6593
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !6594

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6595
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6595

if.end.4:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6596, !tbaa !2683
  %call5 = call i64 @PyTuple_Size(%struct._object* %13), !dbg !6597
  store i64 %call5, i64* %numargs, align 8, !dbg !6598, !tbaa !3427
  %14 = load i64, i64* %numargs, align 8, !dbg !6599, !tbaa !3427
  %cmp6 = icmp eq i64 %14, 2, !dbg !6601
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !6602

if.then.7:                                        ; preds = %if.end.4
  %15 = load %struct._object*, %struct._object** %a1, align 8, !dbg !6603, !tbaa !2683
  %cmp8 = icmp ne %struct._object* %15, @_Py_NoneStruct, !dbg !6606
  br i1 %cmp8, label %if.then.9, label %if.end.18, !dbg !6607

if.then.9:                                        ; preds = %if.then.7
  %16 = load %struct._object*, %struct._object** %a1, align 8, !dbg !6608, !tbaa !2683
  %call10 = call i64 @PyLong_AsSsize_t(%struct._object* %16), !dbg !6610
  store i64 %call10, i64* %stop, align 8, !dbg !6611, !tbaa !3427
  %17 = load i64, i64* %stop, align 8, !dbg !6612, !tbaa !3427
  %cmp11 = icmp eq i64 %17, -1, !dbg !6614
  br i1 %cmp11, label %if.then.12, label %if.end.17, !dbg !6615

if.then.12:                                       ; preds = %if.then.9
  %call13 = call %struct._object* @PyErr_Occurred(), !dbg !6616
  %tobool14 = icmp ne %struct._object* %call13, null, !dbg !6616
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !6619

if.then.15:                                       ; preds = %if.then.12
  call void @PyErr_Clear(), !dbg !6620
  br label %if.end.16, !dbg !6620

if.end.16:                                        ; preds = %if.then.15, %if.then.12
  %18 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6621, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %18, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i32 0, i32 0)), !dbg !6622
  store %struct._object* null, %struct._object** %retval, !dbg !6623
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6623

if.end.17:                                        ; preds = %if.then.9
  br label %if.end.18, !dbg !6624

if.end.18:                                        ; preds = %if.end.17, %if.then.7
  br label %if.end.40, !dbg !6625

if.else:                                          ; preds = %if.end.4
  %19 = load %struct._object*, %struct._object** %a1, align 8, !dbg !6626, !tbaa !2683
  %cmp19 = icmp ne %struct._object* %19, @_Py_NoneStruct, !dbg !6629
  br i1 %cmp19, label %if.then.20, label %if.end.22, !dbg !6630

if.then.20:                                       ; preds = %if.else
  %20 = load %struct._object*, %struct._object** %a1, align 8, !dbg !6631, !tbaa !2683
  %call21 = call i64 @PyLong_AsSsize_t(%struct._object* %20), !dbg !6632
  store i64 %call21, i64* %start, align 8, !dbg !6633, !tbaa !3427
  br label %if.end.22, !dbg !6634

if.end.22:                                        ; preds = %if.then.20, %if.else
  %21 = load i64, i64* %start, align 8, !dbg !6635, !tbaa !3427
  %cmp23 = icmp eq i64 %21, -1, !dbg !6637
  br i1 %cmp23, label %land.lhs.true.24, label %if.end.28, !dbg !6638

land.lhs.true.24:                                 ; preds = %if.end.22
  %call25 = call %struct._object* @PyErr_Occurred(), !dbg !6639
  %tobool26 = icmp ne %struct._object* %call25, null, !dbg !6639
  br i1 %tobool26, label %if.then.27, label %if.end.28, !dbg !6641

if.then.27:                                       ; preds = %land.lhs.true.24
  call void @PyErr_Clear(), !dbg !6642
  br label %if.end.28, !dbg !6642

if.end.28:                                        ; preds = %if.then.27, %land.lhs.true.24, %if.end.22
  %22 = load %struct._object*, %struct._object** %a2, align 8, !dbg !6643, !tbaa !2683
  %cmp29 = icmp ne %struct._object* %22, @_Py_NoneStruct, !dbg !6645
  br i1 %cmp29, label %if.then.30, label %if.end.39, !dbg !6646

if.then.30:                                       ; preds = %if.end.28
  %23 = load %struct._object*, %struct._object** %a2, align 8, !dbg !6647, !tbaa !2683
  %call31 = call i64 @PyLong_AsSsize_t(%struct._object* %23), !dbg !6649
  store i64 %call31, i64* %stop, align 8, !dbg !6650, !tbaa !3427
  %24 = load i64, i64* %stop, align 8, !dbg !6651, !tbaa !3427
  %cmp32 = icmp eq i64 %24, -1, !dbg !6653
  br i1 %cmp32, label %if.then.33, label %if.end.38, !dbg !6654

if.then.33:                                       ; preds = %if.then.30
  %call34 = call %struct._object* @PyErr_Occurred(), !dbg !6655
  %tobool35 = icmp ne %struct._object* %call34, null, !dbg !6655
  br i1 %tobool35, label %if.then.36, label %if.end.37, !dbg !6658

if.then.36:                                       ; preds = %if.then.33
  call void @PyErr_Clear(), !dbg !6659
  br label %if.end.37, !dbg !6659

if.end.37:                                        ; preds = %if.then.36, %if.then.33
  %25 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6660, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i32 0, i32 0)), !dbg !6661
  store %struct._object* null, %struct._object** %retval, !dbg !6662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6662

if.end.38:                                        ; preds = %if.then.30
  br label %if.end.39, !dbg !6663

if.end.39:                                        ; preds = %if.end.38, %if.end.28
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39, %if.end.18
  %26 = load i64, i64* %start, align 8, !dbg !6664, !tbaa !3427
  %cmp41 = icmp slt i64 %26, 0, !dbg !6666
  br i1 %cmp41, label %if.then.43, label %lor.lhs.false, !dbg !6667

lor.lhs.false:                                    ; preds = %if.end.40
  %27 = load i64, i64* %stop, align 8, !dbg !6668, !tbaa !3427
  %cmp42 = icmp slt i64 %27, -1, !dbg !6670
  br i1 %cmp42, label %if.then.43, label %if.end.44, !dbg !6671

if.then.43:                                       ; preds = %lor.lhs.false, %if.end.40
  %28 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6672, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %28, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.36, i32 0, i32 0)), !dbg !6674
  store %struct._object* null, %struct._object** %retval, !dbg !6675
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6675

if.end.44:                                        ; preds = %lor.lhs.false
  %29 = load %struct._object*, %struct._object** %a3, align 8, !dbg !6676, !tbaa !2683
  %cmp45 = icmp ne %struct._object* %29, null, !dbg !6678
  br i1 %cmp45, label %if.then.46, label %if.end.57, !dbg !6679

if.then.46:                                       ; preds = %if.end.44
  %30 = load %struct._object*, %struct._object** %a3, align 8, !dbg !6680, !tbaa !2683
  %cmp47 = icmp ne %struct._object* %30, @_Py_NoneStruct, !dbg !6683
  br i1 %cmp47, label %if.then.48, label %if.end.50, !dbg !6684

if.then.48:                                       ; preds = %if.then.46
  %31 = load %struct._object*, %struct._object** %a3, align 8, !dbg !6685, !tbaa !2683
  %call49 = call i64 @PyLong_AsSsize_t(%struct._object* %31), !dbg !6686
  store i64 %call49, i64* %step, align 8, !dbg !6687, !tbaa !3427
  br label %if.end.50, !dbg !6688

if.end.50:                                        ; preds = %if.then.48, %if.then.46
  %32 = load i64, i64* %step, align 8, !dbg !6689, !tbaa !3427
  %cmp51 = icmp eq i64 %32, -1, !dbg !6691
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.56, !dbg !6692

land.lhs.true.52:                                 ; preds = %if.end.50
  %call53 = call %struct._object* @PyErr_Occurred(), !dbg !6693
  %tobool54 = icmp ne %struct._object* %call53, null, !dbg !6693
  br i1 %tobool54, label %if.then.55, label %if.end.56, !dbg !6695

if.then.55:                                       ; preds = %land.lhs.true.52
  call void @PyErr_Clear(), !dbg !6696
  br label %if.end.56, !dbg !6696

if.end.56:                                        ; preds = %if.then.55, %land.lhs.true.52, %if.end.50
  br label %if.end.57, !dbg !6697

if.end.57:                                        ; preds = %if.end.56, %if.end.44
  %33 = load i64, i64* %step, align 8, !dbg !6698, !tbaa !3427
  %cmp58 = icmp slt i64 %33, 1, !dbg !6700
  br i1 %cmp58, label %if.then.59, label %if.end.60, !dbg !6701

if.then.59:                                       ; preds = %if.end.57
  %34 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6702, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %34, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i32 0, i32 0)), !dbg !6704
  store %struct._object* null, %struct._object** %retval, !dbg !6705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6705

if.end.60:                                        ; preds = %if.end.57
  %35 = load %struct._object*, %struct._object** %seq, align 8, !dbg !6706, !tbaa !2683
  %call61 = call %struct._object* @PyObject_GetIter(%struct._object* %35), !dbg !6707
  store %struct._object* %call61, %struct._object** %it, align 8, !dbg !6708, !tbaa !2683
  %36 = load %struct._object*, %struct._object** %it, align 8, !dbg !6709, !tbaa !2683
  %cmp62 = icmp eq %struct._object* %36, null, !dbg !6711
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !6712

if.then.63:                                       ; preds = %if.end.60
  store %struct._object* null, %struct._object** %retval, !dbg !6713
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6713

if.end.64:                                        ; preds = %if.end.60
  %37 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6714, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 36, !dbg !6715
  %38 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6715, !tbaa !3097
  %39 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6716, !tbaa !2683
  %call65 = call %struct._object* %38(%struct._typeobject* %39, i64 0), !dbg !6714
  %40 = bitcast %struct._object* %call65 to %struct.isliceobject*, !dbg !6717
  store %struct.isliceobject* %40, %struct.isliceobject** %lz, align 8, !dbg !6718, !tbaa !2683
  %41 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6719, !tbaa !2683
  %cmp66 = icmp eq %struct.isliceobject* %41, null, !dbg !6720
  br i1 %cmp66, label %if.then.67, label %if.end.72, !dbg !6721

if.then.67:                                       ; preds = %if.end.64
  br label %do.body, !dbg !6722

do.body:                                          ; preds = %if.then.67
  %42 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6723
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !6723
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1183, metadata !2666), !dbg !6725
  %43 = load %struct._object*, %struct._object** %it, align 8, !dbg !6726, !tbaa !2683
  store %struct._object* %43, %struct._object** %_py_decref_tmp, align 8, !dbg !6725, !tbaa !2683
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6727, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !6729
  %45 = load i64, i64* %ob_refcnt, align 8, !dbg !6730, !tbaa !2722
  %dec = add i64 %45, -1, !dbg !6730
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6730, !tbaa !2722
  %cmp68 = icmp ne i64 %dec, 0, !dbg !6731
  br i1 %cmp68, label %if.then.69, label %if.else.70, !dbg !6732

if.then.69:                                       ; preds = %do.body
  br label %if.end.71, !dbg !6733

if.else.70:                                       ; preds = %do.body
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6735, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !6737
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6737, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !6738
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6738, !tbaa !2768
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6739, !tbaa !2683
  call void %48(%struct._object* %49), !dbg !6740
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.70, %if.then.69
  %50 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6741
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !6741
  br label %do.cond, !dbg !6743

do.cond:                                          ; preds = %if.end.71
  br label %do.end, !dbg !6744

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6746
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6746

if.end.72:                                        ; preds = %if.end.64
  %51 = load %struct._object*, %struct._object** %it, align 8, !dbg !6747, !tbaa !2683
  %52 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6748, !tbaa !2683
  %it73 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %52, i32 0, i32 1, !dbg !6749
  store %struct._object* %51, %struct._object** %it73, align 8, !dbg !6750, !tbaa !6318
  %53 = load i64, i64* %start, align 8, !dbg !6751, !tbaa !3427
  %54 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6752, !tbaa !2683
  %next = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %54, i32 0, i32 2, !dbg !6753
  store i64 %53, i64* %next, align 8, !dbg !6754, !tbaa !6427
  %55 = load i64, i64* %stop, align 8, !dbg !6755, !tbaa !3427
  %56 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6756, !tbaa !2683
  %stop74 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %56, i32 0, i32 3, !dbg !6757
  store i64 %55, i64* %stop74, align 8, !dbg !6758, !tbaa !6405
  %57 = load i64, i64* %step, align 8, !dbg !6759, !tbaa !3427
  %58 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6760, !tbaa !2683
  %step75 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %58, i32 0, i32 4, !dbg !6761
  store i64 %57, i64* %step75, align 8, !dbg !6762, !tbaa !6491
  %59 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6763, !tbaa !2683
  %cnt = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %59, i32 0, i32 5, !dbg !6764
  store i64 0, i64* %cnt, align 8, !dbg !6765, !tbaa !6424
  %60 = load %struct.isliceobject*, %struct.isliceobject** %lz, align 8, !dbg !6766, !tbaa !2683
  %61 = bitcast %struct.isliceobject* %60 to %struct._object*, !dbg !6767
  store %struct._object* %61, %struct._object** %retval, !dbg !6768
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6768

cleanup:                                          ; preds = %if.end.72, %do.end, %if.then.63, %if.then.59, %if.then.43, %if.end.37, %if.end.16, %if.then.3, %if.then
  %62 = bitcast %struct.isliceobject** %lz to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !6769
  %63 = bitcast i64* %numargs to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !6769
  %64 = bitcast %struct._object** %a3 to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !6769
  %65 = bitcast %struct._object** %a2 to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !6769
  %66 = bitcast %struct._object** %a1 to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !6769
  %67 = bitcast %struct._object** %it to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !6769
  %68 = bitcast i64* %step to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !6769
  %69 = bitcast i64* %stop to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !6769
  %70 = bitcast i64* %start to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !6769
  %71 = bitcast %struct._object** %seq to i8*, !dbg !6769
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !6769
  %72 = load %struct._object*, %struct._object** %retval, !dbg !6769
  ret %struct._object* %72, !dbg !6769
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_reduce(%struct.isliceobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.isliceobject*, align 8
  %stop = alloca %struct._object*, align 8
  %empty_list = alloca %struct._object*, align 8
  %empty_it = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.isliceobject* %lz, %struct.isliceobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.isliceobject** %lz.addr, metadata !1153, metadata !2666), !dbg !6770
  %0 = bitcast %struct._object** %stop to i8*, !dbg !6771
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6771
  call void @llvm.dbg.declare(metadata %struct._object** %stop, metadata !1154, metadata !2666), !dbg !6772
  %1 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6773, !tbaa !2683
  %it = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %1, i32 0, i32 1, !dbg !6774
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !6774, !tbaa !6318
  %cmp = icmp eq %struct._object* %2, null, !dbg !6775
  br i1 %cmp, label %if.then, label %if.end.13, !dbg !6776

if.then:                                          ; preds = %entry
  %3 = bitcast %struct._object** %empty_list to i8*, !dbg !6777
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6777
  call void @llvm.dbg.declare(metadata %struct._object** %empty_list, metadata !1155, metadata !2666), !dbg !6778
  %4 = bitcast %struct._object** %empty_it to i8*, !dbg !6779
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6779
  call void @llvm.dbg.declare(metadata %struct._object** %empty_it, metadata !1158, metadata !2666), !dbg !6780
  %call = call %struct._object* @PyList_New(i64 0), !dbg !6781
  store %struct._object* %call, %struct._object** %empty_list, align 8, !dbg !6782, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %empty_list, align 8, !dbg !6783, !tbaa !2683
  %cmp1 = icmp eq %struct._object* %5, null, !dbg !6785
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !6786

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !6787
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6787

if.end:                                           ; preds = %if.then
  %6 = load %struct._object*, %struct._object** %empty_list, align 8, !dbg !6788, !tbaa !2683
  %call3 = call %struct._object* @PyObject_GetIter(%struct._object* %6), !dbg !6789
  store %struct._object* %call3, %struct._object** %empty_it, align 8, !dbg !6790, !tbaa !2683
  br label %do.body, !dbg !6791

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6792
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6792
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1159, metadata !2666), !dbg !6794
  %8 = load %struct._object*, %struct._object** %empty_list, align 8, !dbg !6795, !tbaa !2683
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !6794, !tbaa !2683
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6796, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !6798
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !6799, !tbaa !2722
  %dec = add i64 %10, -1, !dbg !6799
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6799, !tbaa !2722
  %cmp4 = icmp ne i64 %dec, 0, !dbg !6800
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !6801

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !6802

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6804, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6806
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6806, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !6807
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6807, !tbaa !2768
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6808, !tbaa !2683
  call void %13(%struct._object* %14), !dbg !6809
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6810
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !6810
  br label %do.cond, !dbg !6812

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !6813

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %empty_it, align 8, !dbg !6815, !tbaa !2683
  %cmp7 = icmp eq %struct._object* %16, null, !dbg !6817
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !6818

if.then.8:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !6819
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6819

if.end.9:                                         ; preds = %do.end
  %17 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6820, !tbaa !2683
  %18 = bitcast %struct.isliceobject* %17 to %struct._object*, !dbg !6821
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6822
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !6822, !tbaa !2675
  %20 = load %struct._object*, %struct._object** %empty_it, align 8, !dbg !6823, !tbaa !2683
  %call11 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), %struct._typeobject* %19, %struct._object* %20, i32 0, i32 0), !dbg !6824
  store %struct._object* %call11, %struct._object** %retval, !dbg !6825
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6825

cleanup:                                          ; preds = %if.end.9, %if.then.8, %if.then.2
  %21 = bitcast %struct._object** %empty_it to i8*, !dbg !6826
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !6826
  %22 = bitcast %struct._object** %empty_list to i8*, !dbg !6826
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !6826
  br label %cleanup.28

if.end.13:                                        ; preds = %entry
  %23 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6827, !tbaa !2683
  %stop14 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %23, i32 0, i32 3, !dbg !6829
  %24 = load i64, i64* %stop14, align 8, !dbg !6829, !tbaa !6405
  %cmp15 = icmp eq i64 %24, -1, !dbg !6830
  br i1 %cmp15, label %if.then.16, label %if.else.18, !dbg !6831

if.then.16:                                       ; preds = %if.end.13
  store %struct._object* @_Py_NoneStruct, %struct._object** %stop, align 8, !dbg !6832, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %stop, align 8, !dbg !6834, !tbaa !2683
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !6835
  %26 = load i64, i64* %ob_refcnt17, align 8, !dbg !6836, !tbaa !2722
  %inc = add i64 %26, 1, !dbg !6836
  store i64 %inc, i64* %ob_refcnt17, align 8, !dbg !6836, !tbaa !2722
  br label %if.end.24, !dbg !6837

if.else.18:                                       ; preds = %if.end.13
  %27 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6838, !tbaa !2683
  %stop19 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %27, i32 0, i32 3, !dbg !6840
  %28 = load i64, i64* %stop19, align 8, !dbg !6840, !tbaa !6405
  %call20 = call %struct._object* @PyLong_FromSsize_t(i64 %28), !dbg !6841
  store %struct._object* %call20, %struct._object** %stop, align 8, !dbg !6842, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %stop, align 8, !dbg !6843, !tbaa !2683
  %cmp21 = icmp eq %struct._object* %29, null, !dbg !6845
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !6846

if.then.22:                                       ; preds = %if.else.18
  store %struct._object* null, %struct._object** %retval, !dbg !6847
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !6847

if.end.23:                                        ; preds = %if.else.18
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.then.16
  %30 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6848, !tbaa !2683
  %31 = bitcast %struct.isliceobject* %30 to %struct._object*, !dbg !6849
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !6850
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !6850, !tbaa !2675
  %33 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6851, !tbaa !2683
  %it26 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %33, i32 0, i32 1, !dbg !6852
  %34 = load %struct._object*, %struct._object** %it26, align 8, !dbg !6852, !tbaa !6318
  %35 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6853, !tbaa !2683
  %next = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %35, i32 0, i32 2, !dbg !6854
  %36 = load i64, i64* %next, align 8, !dbg !6854, !tbaa !6427
  %37 = load %struct._object*, %struct._object** %stop, align 8, !dbg !6855, !tbaa !2683
  %38 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6856, !tbaa !2683
  %step = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %38, i32 0, i32 4, !dbg !6857
  %39 = load i64, i64* %step, align 8, !dbg !6857, !tbaa !6491
  %40 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6858, !tbaa !2683
  %cnt = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %40, i32 0, i32 5, !dbg !6859
  %41 = load i64, i64* %cnt, align 8, !dbg !6859, !tbaa !6424
  %call27 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), %struct._typeobject* %32, %struct._object* %34, i64 %36, %struct._object* %37, i64 %39, i64 %41), !dbg !6860
  store %struct._object* %call27, %struct._object** %retval, !dbg !6861
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !6861

cleanup.28:                                       ; preds = %if.end.24, %if.then.22, %cleanup
  %42 = bitcast %struct._object** %stop to i8*, !dbg !6862
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !6862
  %43 = load %struct._object*, %struct._object** %retval, !dbg !6862
  ret %struct._object* %43, !dbg !6862
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_setstate(%struct.isliceobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.isliceobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %cnt = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.isliceobject* %lz, %struct.isliceobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.isliceobject** %lz.addr, metadata !1165, metadata !2666), !dbg !6863
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1166, metadata !2666), !dbg !6864
  %0 = bitcast i64* %cnt to i8*, !dbg !6865
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6865
  call void @llvm.dbg.declare(metadata i64* %cnt, metadata !1167, metadata !2666), !dbg !6866
  %1 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6867, !tbaa !2683
  %call = call i64 @PyLong_AsSsize_t(%struct._object* %1), !dbg !6868
  store i64 %call, i64* %cnt, align 8, !dbg !6866, !tbaa !3427
  %2 = load i64, i64* %cnt, align 8, !dbg !6869, !tbaa !3427
  %cmp = icmp eq i64 %2, -1, !dbg !6871
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6872

land.lhs.true:                                    ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !6873
  %tobool = icmp ne %struct._object* %call1, null, !dbg !6873
  br i1 %tobool, label %if.then, label %if.end, !dbg !6875

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !6876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6876

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i64, i64* %cnt, align 8, !dbg !6877, !tbaa !3427
  %4 = load %struct.isliceobject*, %struct.isliceobject** %lz.addr, align 8, !dbg !6878, !tbaa !2683
  %cnt2 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %4, i32 0, i32 5, !dbg !6879
  store i64 %3, i64* %cnt2, align 8, !dbg !6880, !tbaa !6424
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6881, !tbaa !2722
  %inc = add i64 %5, 1, !dbg !6881
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6881, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6882
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6882

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast i64* %cnt to i8*, !dbg !6883
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !6883
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6883
  ret %struct._object* %7, !dbg !6883
}

declare i64 @PyTuple_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @starmap_dealloc(%struct.starmapobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.starmapobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.starmapobject* %lz, %struct.starmapobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.starmapobject** %lz.addr, metadata !1191, metadata !2666), !dbg !6884
  %0 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6885, !tbaa !2683
  %1 = bitcast %struct.starmapobject* %0 to i8*, !dbg !6885
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !6886
  br label %do.body, !dbg !6887

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6888
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6888
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1192, metadata !2666), !dbg !6890
  %3 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6891, !tbaa !2683
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %3, i32 0, i32 1, !dbg !6892
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !6892, !tbaa !6893
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6890, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6895, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !6896
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !6897

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !6898

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6900
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6900
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1194, metadata !2666), !dbg !6902
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6903, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !6902, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6904, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !6906
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !6907, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !6907
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6907, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !6908
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !6909

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !6910

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6912, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6914
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6914, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !6915
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6915, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6916, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !6917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6918
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !6918
  br label %do.cond, !dbg !6920

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6921

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !6923

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !6925
  br label %do.end.6, !dbg !6928

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !6929

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !6930
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !6930
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1197, metadata !2666), !dbg !6932
  %17 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6933, !tbaa !2683
  %it = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %17, i32 0, i32 2, !dbg !6934
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !6934, !tbaa !6935
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !6932, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !6936, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !6937
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !6938

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !6939

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !6941
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !6941
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1199, metadata !2666), !dbg !6943
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !6944, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !6943, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6945, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !6947
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !6948, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !6948
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !6948, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !6949
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !6950

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !6951

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6953, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !6955
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !6955, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !6956
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !6956, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6957, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !6958
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !6959
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !6959
  br label %do.cond.21, !dbg !6961

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !6962

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !6964

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !6966
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !6966
  br label %do.end.25, !dbg !6967

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6968, !tbaa !2683
  %31 = bitcast %struct.starmapobject* %30 to %struct._object*, !dbg !6969
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !6970
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !6970, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !6971
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6971, !tbaa !2864
  %34 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6972, !tbaa !2683
  %35 = bitcast %struct.starmapobject* %34 to i8*, !dbg !6972
  call void %33(i8* %35), !dbg !6973
  ret void, !dbg !6974
}

; Function Attrs: nounwind uwtable
define internal i32 @starmap_traverse(%struct.starmapobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.starmapobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.starmapobject* %lz, %struct.starmapobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.starmapobject** %lz.addr, metadata !1206, metadata !2666), !dbg !6975
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1207, metadata !2666), !dbg !6976
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1208, metadata !2666), !dbg !6977
  br label %do.body, !dbg !6978

do.body:                                          ; preds = %entry
  %0 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6979, !tbaa !2683
  %it = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %0, i32 0, i32 2, !dbg !6981
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !6981, !tbaa !6935
  %tobool = icmp ne %struct._object* %1, null, !dbg !6982
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !6983

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !6984
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6984
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1209, metadata !2666), !dbg !6986
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6987, !tbaa !2683
  %4 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !6988, !tbaa !2683
  %it1 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %4, i32 0, i32 2, !dbg !6989
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !6989, !tbaa !6935
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !6990, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !6987
  store i32 %call, i32* %vret, align 4, !dbg !6986, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !6991, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !6991
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6993

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !6994, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !6996
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6996

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !6997
  br label %cleanup, !dbg !6997

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !6999
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !6999
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !7002

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7003

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !7006

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7007, !tbaa !2683
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %10, i32 0, i32 1, !dbg !7009
  %11 = load %struct._object*, %struct._object** %func, align 8, !dbg !7009, !tbaa !6893
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !7010
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !7011

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !7012
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !7012
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1213, metadata !2666), !dbg !7014
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7015, !tbaa !2683
  %14 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7016, !tbaa !2683
  %func9 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %14, i32 0, i32 1, !dbg !7017
  %15 = load %struct._object*, %struct._object** %func9, align 8, !dbg !7017, !tbaa !6893
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !7018, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !7015
  store i32 %call10, i32* %vret8, align 4, !dbg !7014, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !7019, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !7019
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !7021

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !7022, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !7024
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !7024

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !7025
  br label %cleanup.14, !dbg !7025

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !7027
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !7027
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !7030

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !7031

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !7034
  br label %return, !dbg !7034

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !7035
  ret i32 %20, !dbg !7035
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @starmap_next(%struct.starmapobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.starmapobject*, align 8
  %args = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %newargs = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  store %struct.starmapobject* %lz, %struct.starmapobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.starmapobject** %lz.addr, metadata !1221, metadata !2666), !dbg !7036
  %0 = bitcast %struct._object** %args to i8*, !dbg !7037
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7037
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1222, metadata !2666), !dbg !7038
  %1 = bitcast %struct._object** %result to i8*, !dbg !7039
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7039
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1223, metadata !2666), !dbg !7040
  %2 = bitcast %struct._object** %it to i8*, !dbg !7041
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7041
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1224, metadata !2666), !dbg !7042
  %3 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7043, !tbaa !2683
  %it1 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %3, i32 0, i32 2, !dbg !7044
  %4 = load %struct._object*, %struct._object** %it1, align 8, !dbg !7044, !tbaa !6935
  store %struct._object* %4, %struct._object** %it, align 8, !dbg !7042, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %it, align 8, !dbg !7045, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !7046
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7046, !tbaa !2675
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 26, !dbg !7047
  %7 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !7047, !tbaa !5690
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !7048, !tbaa !2683
  %call = call %struct._object* %7(%struct._object* %8), !dbg !7049
  store %struct._object* %call, %struct._object** %args, align 8, !dbg !7050, !tbaa !2683
  %9 = load %struct._object*, %struct._object** %args, align 8, !dbg !7051, !tbaa !2683
  %cmp = icmp eq %struct._object* %9, null, !dbg !7053
  br i1 %cmp, label %if.then, label %if.end, !dbg !7054

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7055
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !7055

if.end:                                           ; preds = %entry
  %10 = load %struct._object*, %struct._object** %args, align 8, !dbg !7056, !tbaa !2683
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !7057
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !7057, !tbaa !2675
  %cmp3 = icmp eq %struct._typeobject* %11, @PyTuple_Type, !dbg !7058
  br i1 %cmp3, label %if.end.13, label %if.then.4, !dbg !7059

if.then.4:                                        ; preds = %if.end
  %12 = bitcast %struct._object** %newargs to i8*, !dbg !7060
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !7060
  call void @llvm.dbg.declare(metadata %struct._object** %newargs, metadata !1225, metadata !2666), !dbg !7061
  %13 = load %struct._object*, %struct._object** %args, align 8, !dbg !7062, !tbaa !2683
  %call5 = call %struct._object* @PySequence_Tuple(%struct._object* %13), !dbg !7063
  store %struct._object* %call5, %struct._object** %newargs, align 8, !dbg !7061, !tbaa !2683
  br label %do.body, !dbg !7064

do.body:                                          ; preds = %if.then.4
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7065
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !7065
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1228, metadata !2666), !dbg !7067
  %15 = load %struct._object*, %struct._object** %args, align 8, !dbg !7068, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !7067, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7069, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !7071
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !7072, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !7072
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7072, !tbaa !2722
  %cmp6 = icmp ne i64 %dec, 0, !dbg !7073
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !7074

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !7075

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7077, !tbaa !2683
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7079
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !7079, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !7080
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7080, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7081, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !7082
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.7
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7083
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !7083
  br label %do.cond, !dbg !7085

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !7086

do.end:                                           ; preds = %do.cond
  %23 = load %struct._object*, %struct._object** %newargs, align 8, !dbg !7088, !tbaa !2683
  %cmp10 = icmp eq %struct._object* %23, null, !dbg !7090
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !7091

if.then.11:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !7092
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7092

if.end.12:                                        ; preds = %do.end
  %24 = load %struct._object*, %struct._object** %newargs, align 8, !dbg !7093, !tbaa !2683
  store %struct._object* %24, %struct._object** %args, align 8, !dbg !7094, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !7095
  br label %cleanup, !dbg !7095

cleanup:                                          ; preds = %if.end.12, %if.then.11
  %25 = bitcast %struct._object** %newargs to i8*, !dbg !7096
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !7096
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.13, !dbg !7098

if.end.13:                                        ; preds = %cleanup.cont, %if.end
  %26 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7099, !tbaa !2683
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %26, i32 0, i32 1, !dbg !7100
  %27 = load %struct._object*, %struct._object** %func, align 8, !dbg !7100, !tbaa !6893
  %28 = load %struct._object*, %struct._object** %args, align 8, !dbg !7101, !tbaa !2683
  %call14 = call %struct._object* @PyObject_Call(%struct._object* %27, %struct._object* %28, %struct._object* null), !dbg !7102
  store %struct._object* %call14, %struct._object** %result, align 8, !dbg !7103, !tbaa !2683
  br label %do.body.15, !dbg !7104

do.body.15:                                       ; preds = %if.end.13
  %29 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !7105
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !7105
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !1230, metadata !2666), !dbg !7107
  %30 = load %struct._object*, %struct._object** %args, align 8, !dbg !7108, !tbaa !2683
  store %struct._object* %30, %struct._object** %_py_decref_tmp16, align 8, !dbg !7107, !tbaa !2683
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !7109, !tbaa !2683
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !7111
  %32 = load i64, i64* %ob_refcnt17, align 8, !dbg !7112, !tbaa !2722
  %dec18 = add i64 %32, -1, !dbg !7112
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !7112, !tbaa !2722
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !7113
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !7114

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !7115

if.else.21:                                       ; preds = %do.body.15
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !7117, !tbaa !2683
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !7119
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !7119, !tbaa !2675
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !7120
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !7120, !tbaa !2768
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !7121, !tbaa !2683
  call void %35(%struct._object* %36), !dbg !7122
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %37 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !7123
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !7123
  br label %do.cond.25, !dbg !7125

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !7126

do.end.26:                                        ; preds = %do.cond.25
  %38 = load %struct._object*, %struct._object** %result, align 8, !dbg !7128, !tbaa !2683
  store %struct._object* %38, %struct._object** %retval, !dbg !7129
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !7129

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.27

cleanup.27:                                       ; preds = %NewDefault, %do.end.26, %if.then
  %39 = bitcast %struct._object** %it to i8*, !dbg !7130
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !7130
  %40 = bitcast %struct._object** %result to i8*, !dbg !7130
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !7130
  %41 = bitcast %struct._object** %args to i8*, !dbg !7130
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !7130
  %42 = load %struct._object*, %struct._object** %retval, !dbg !7130
  ret %struct._object* %42, !dbg !7130
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @starmap_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %lz = alloca %struct.starmapobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1237, metadata !2666), !dbg !7131
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1238, metadata !2666), !dbg !7132
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1239, metadata !2666), !dbg !7133
  %0 = bitcast %struct._object** %func to i8*, !dbg !7134
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7134
  call void @llvm.dbg.declare(metadata %struct._object** %func, metadata !1240, metadata !2666), !dbg !7135
  %1 = bitcast %struct._object** %seq to i8*, !dbg !7134
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7134
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1241, metadata !2666), !dbg !7136
  %2 = bitcast %struct._object** %it to i8*, !dbg !7137
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7137
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1242, metadata !2666), !dbg !7138
  %3 = bitcast %struct.starmapobject** %lz to i8*, !dbg !7139
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7139
  call void @llvm.dbg.declare(metadata %struct.starmapobject** %lz, metadata !1243, metadata !2666), !dbg !7140
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7141, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %4, @starmap_type, !dbg !7143
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7144

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7145, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct._object* %5), !dbg !7147
  %tobool = icmp ne i32 %call, 0, !dbg !7147
  br i1 %tobool, label %if.end, label %if.then, !dbg !7148

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !7149
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7149

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7150, !tbaa !2683
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), i64 2, i64 2, %struct._object** %func, %struct._object** %seq), !dbg !7152
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7152
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !7153

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7154
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7154

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %seq, align 8, !dbg !7155, !tbaa !2683
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %7), !dbg !7156
  store %struct._object* %call5, %struct._object** %it, align 8, !dbg !7157, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !7158, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %8, null, !dbg !7160
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !7161

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !7162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7162

if.end.8:                                         ; preds = %if.end.4
  %9 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7163, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 36, !dbg !7164
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !7164, !tbaa !3097
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7165, !tbaa !2683
  %call9 = call %struct._object* %10(%struct._typeobject* %11, i64 0), !dbg !7163
  %12 = bitcast %struct._object* %call9 to %struct.starmapobject*, !dbg !7166
  store %struct.starmapobject* %12, %struct.starmapobject** %lz, align 8, !dbg !7167, !tbaa !2683
  %13 = load %struct.starmapobject*, %struct.starmapobject** %lz, align 8, !dbg !7168, !tbaa !2683
  %cmp10 = icmp eq %struct.starmapobject* %13, null, !dbg !7169
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !7170

if.then.11:                                       ; preds = %if.end.8
  br label %do.body, !dbg !7171

do.body:                                          ; preds = %if.then.11
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7172
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !7172
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1244, metadata !2666), !dbg !7174
  %15 = load %struct._object*, %struct._object** %it, align 8, !dbg !7175, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !7174, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7176, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !7178
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !7179, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !7179
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7179, !tbaa !2722
  %cmp12 = icmp ne i64 %dec, 0, !dbg !7180
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !7181

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !7182

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7184, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7186
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7186, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !7187
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7187, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7188, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !7189
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7190
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !7190
  br label %do.cond, !dbg !7192

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !7193

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7195
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7195

if.end.15:                                        ; preds = %if.end.8
  %23 = load %struct._object*, %struct._object** %func, align 8, !dbg !7196, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !7197
  %24 = load i64, i64* %ob_refcnt16, align 8, !dbg !7198, !tbaa !2722
  %inc = add i64 %24, 1, !dbg !7198
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !7198, !tbaa !2722
  %25 = load %struct._object*, %struct._object** %func, align 8, !dbg !7199, !tbaa !2683
  %26 = load %struct.starmapobject*, %struct.starmapobject** %lz, align 8, !dbg !7200, !tbaa !2683
  %func17 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %26, i32 0, i32 1, !dbg !7201
  store %struct._object* %25, %struct._object** %func17, align 8, !dbg !7202, !tbaa !6893
  %27 = load %struct._object*, %struct._object** %it, align 8, !dbg !7203, !tbaa !2683
  %28 = load %struct.starmapobject*, %struct.starmapobject** %lz, align 8, !dbg !7204, !tbaa !2683
  %it18 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %28, i32 0, i32 2, !dbg !7205
  store %struct._object* %27, %struct._object** %it18, align 8, !dbg !7206, !tbaa !6935
  %29 = load %struct.starmapobject*, %struct.starmapobject** %lz, align 8, !dbg !7207, !tbaa !2683
  %30 = bitcast %struct.starmapobject* %29 to %struct._object*, !dbg !7208
  store %struct._object* %30, %struct._object** %retval, !dbg !7209
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7209

cleanup:                                          ; preds = %if.end.15, %do.end, %if.then.7, %if.then.3, %if.then
  %31 = bitcast %struct.starmapobject** %lz to i8*, !dbg !7210
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !7210
  %32 = bitcast %struct._object** %it to i8*, !dbg !7210
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !7210
  %33 = bitcast %struct._object** %seq to i8*, !dbg !7210
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !7210
  %34 = bitcast %struct._object** %func to i8*, !dbg !7210
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !7210
  %35 = load %struct._object*, %struct._object** %retval, !dbg !7210
  ret %struct._object* %35, !dbg !7210
}

declare %struct._object* @PyObject_Call(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @starmap_reduce(%struct.starmapobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.starmapobject*, align 8
  store %struct.starmapobject* %lz, %struct.starmapobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.starmapobject** %lz.addr, metadata !1234, metadata !2666), !dbg !7211
  %0 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7212, !tbaa !2683
  %1 = bitcast %struct.starmapobject* %0 to %struct._object*, !dbg !7213
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !7214
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7214, !tbaa !2675
  %3 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7215, !tbaa !2683
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %3, i32 0, i32 1, !dbg !7216
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !7216, !tbaa !6893
  %5 = load %struct.starmapobject*, %struct.starmapobject** %lz.addr, align 8, !dbg !7217, !tbaa !2683
  %it = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %5, i32 0, i32 2, !dbg !7218
  %6 = load %struct._object*, %struct._object** %it, align 8, !dbg !7218, !tbaa !6935
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6), !dbg !7219
  ret %struct._object* %call, !dbg !7220
}

; Function Attrs: nounwind uwtable
define internal void @chain_dealloc(%struct.chainobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.chainobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.chainobject* %lz, %struct.chainobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.chainobject** %lz.addr, metadata !1252, metadata !2666), !dbg !7221
  %0 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7222, !tbaa !2683
  %1 = bitcast %struct.chainobject* %0 to i8*, !dbg !7222
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !7223
  br label %do.body, !dbg !7224

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7225
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7225
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1253, metadata !2666), !dbg !7227
  %3 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7228, !tbaa !2683
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %3, i32 0, i32 2, !dbg !7229
  %4 = load %struct._object*, %struct._object** %active, align 8, !dbg !7229, !tbaa !6935
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7227, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7230, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !7231
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !7232

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !7233

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7235
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !7235
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1255, metadata !2666), !dbg !7237
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7238, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !7237, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7239, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !7241
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !7242, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !7242
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7242, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !7243
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !7244

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !7245

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7247, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !7249
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7249, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !7250
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7250, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7251, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !7252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7253
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !7253
  br label %do.cond, !dbg !7255

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7256

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !7258

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7260
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !7260
  br label %do.end.6, !dbg !7263

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !7264

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !7265
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !7265
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1258, metadata !2666), !dbg !7267
  %17 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7268, !tbaa !2683
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %17, i32 0, i32 1, !dbg !7269
  %18 = load %struct._object*, %struct._object** %source, align 8, !dbg !7269, !tbaa !6893
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7267, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7270, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !7271
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !7272

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !7273

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7275
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !7275
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1260, metadata !2666), !dbg !7277
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7278, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !7277, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7279, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7281
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !7282, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !7282
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !7282, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !7283
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !7284

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !7285

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7287, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7289
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !7289, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7290
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !7290, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7291, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !7292
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7293
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !7293
  br label %do.cond.21, !dbg !7295

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !7296

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !7298

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !7300
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !7300
  br label %do.end.25, !dbg !7301

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7302, !tbaa !2683
  %31 = bitcast %struct.chainobject* %30 to %struct._object*, !dbg !7303
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !7304
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !7304, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !7305
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !7305, !tbaa !2864
  %34 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7306, !tbaa !2683
  %35 = bitcast %struct.chainobject* %34 to i8*, !dbg !7306
  call void %33(i8* %35), !dbg !7307
  ret void, !dbg !7308
}

; Function Attrs: nounwind uwtable
define internal i32 @chain_traverse(%struct.chainobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.chainobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.chainobject* %lz, %struct.chainobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.chainobject** %lz.addr, metadata !1267, metadata !2666), !dbg !7309
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1268, metadata !2666), !dbg !7310
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1269, metadata !2666), !dbg !7311
  br label %do.body, !dbg !7312

do.body:                                          ; preds = %entry
  %0 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7313, !tbaa !2683
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %0, i32 0, i32 1, !dbg !7315
  %1 = load %struct._object*, %struct._object** %source, align 8, !dbg !7315, !tbaa !6893
  %tobool = icmp ne %struct._object* %1, null, !dbg !7316
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7317

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !7318
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !7318
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1270, metadata !2666), !dbg !7320
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7321, !tbaa !2683
  %4 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7322, !tbaa !2683
  %source1 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %4, i32 0, i32 1, !dbg !7323
  %5 = load %struct._object*, %struct._object** %source1, align 8, !dbg !7323, !tbaa !6893
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7324, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !7321
  store i32 %call, i32* %vret, align 4, !dbg !7320, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !7325, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !7325
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7327

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !7328, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !7330
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7330

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !7331
  br label %cleanup, !dbg !7331

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !7333
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !7333
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !7336

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7337

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !7340

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7341, !tbaa !2683
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %10, i32 0, i32 2, !dbg !7343
  %11 = load %struct._object*, %struct._object** %active, align 8, !dbg !7343, !tbaa !6935
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !7344
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !7345

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !7346
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !7346
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1274, metadata !2666), !dbg !7348
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7349, !tbaa !2683
  %14 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7350, !tbaa !2683
  %active9 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %14, i32 0, i32 2, !dbg !7351
  %15 = load %struct._object*, %struct._object** %active9, align 8, !dbg !7351, !tbaa !6935
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !7352, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !7349
  store i32 %call10, i32* %vret8, align 4, !dbg !7348, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !7353, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !7353
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !7355

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !7356, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !7358
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !7358

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !7359
  br label %cleanup.14, !dbg !7359

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !7361
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !7361
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !7364

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !7365

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !7368
  br label %return, !dbg !7368

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !7369
  ret i32 %20, !dbg !7369
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_next(%struct.chainobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.chainobject*, align 8
  %item = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %iterable = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_tmp72 = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  store %struct.chainobject* %lz, %struct.chainobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.chainobject** %lz.addr, metadata !1282, metadata !2666), !dbg !7370
  %0 = bitcast %struct._object** %item to i8*, !dbg !7371
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7371
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1283, metadata !2666), !dbg !7372
  %1 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7373, !tbaa !2683
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %1, i32 0, i32 1, !dbg !7375
  %2 = load %struct._object*, %struct._object** %source, align 8, !dbg !7375, !tbaa !6893
  %cmp = icmp eq %struct._object* %2, null, !dbg !7376
  br i1 %cmp, label %if.then, label %if.end, !dbg !7377

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7378
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93, !dbg !7378

if.end:                                           ; preds = %entry
  %3 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7379, !tbaa !2683
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %3, i32 0, i32 2, !dbg !7380
  %4 = load %struct._object*, %struct._object** %active, align 8, !dbg !7380, !tbaa !6935
  %cmp1 = icmp eq %struct._object* %4, null, !dbg !7381
  br i1 %cmp1, label %if.then.2, label %if.end.57, !dbg !7382

if.then.2:                                        ; preds = %if.end
  %5 = bitcast %struct._object** %iterable to i8*, !dbg !7383
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !7383
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !1284, metadata !2666), !dbg !7384
  %6 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7385, !tbaa !2683
  %source3 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %6, i32 0, i32 1, !dbg !7386
  %7 = load %struct._object*, %struct._object** %source3, align 8, !dbg !7386, !tbaa !6893
  %call = call %struct._object* @PyIter_Next(%struct._object* %7), !dbg !7387
  store %struct._object* %call, %struct._object** %iterable, align 8, !dbg !7384, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !7388, !tbaa !2683
  %cmp4 = icmp eq %struct._object* %8, null, !dbg !7389
  br i1 %cmp4, label %if.then.5, label %if.end.17, !dbg !7390

if.then.5:                                        ; preds = %if.then.2
  br label %do.body, !dbg !7391

do.body:                                          ; preds = %if.then.5
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7392
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !7392
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1287, metadata !2666), !dbg !7394
  %10 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7395, !tbaa !2683
  %source6 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %10, i32 0, i32 1, !dbg !7396
  %11 = load %struct._object*, %struct._object** %source6, align 8, !dbg !7396, !tbaa !6893
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !7394, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7397, !tbaa !2683
  %cmp7 = icmp ne %struct._object* %12, null, !dbg !7398
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !7399

if.then.8:                                        ; preds = %do.body
  %13 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7400, !tbaa !2683
  %source9 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %13, i32 0, i32 1, !dbg !7402
  store %struct._object* null, %struct._object** %source9, align 8, !dbg !7403, !tbaa !6893
  br label %do.body.10, !dbg !7404

do.body.10:                                       ; preds = %if.then.8
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7405
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !7405
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1291, metadata !2666), !dbg !7407
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7408, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !7407, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7409, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !7411
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !7412, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !7412
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7412, !tbaa !2722
  %cmp11 = icmp ne i64 %dec, 0, !dbg !7413
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !7414

if.then.12:                                       ; preds = %do.body.10
  br label %if.end.13, !dbg !7415

if.else:                                          ; preds = %do.body.10
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7417, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7419
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7419, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !7420
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7420, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7421, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !7422
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7423
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !7423
  br label %do.cond, !dbg !7425

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !7426

do.end:                                           ; preds = %do.cond
  br label %if.end.14, !dbg !7428

if.end.14:                                        ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7430
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !7430
  br label %do.cond.15, !dbg !7433

do.cond.15:                                       ; preds = %if.end.14
  br label %do.end.16, !dbg !7434

do.end.16:                                        ; preds = %do.cond.15
  store %struct._object* null, %struct._object** %retval, !dbg !7436
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7436

if.end.17:                                        ; preds = %if.then.2
  %24 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !7437, !tbaa !2683
  %call18 = call %struct._object* @PyObject_GetIter(%struct._object* %24), !dbg !7438
  %25 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7439, !tbaa !2683
  %active19 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %25, i32 0, i32 2, !dbg !7440
  store %struct._object* %call18, %struct._object** %active19, align 8, !dbg !7441, !tbaa !6935
  br label %do.body.20, !dbg !7442

do.body.20:                                       ; preds = %if.end.17
  %26 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !7443
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !7443
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp21, metadata !1295, metadata !2666), !dbg !7445
  %27 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !7446, !tbaa !2683
  store %struct._object* %27, %struct._object** %_py_decref_tmp21, align 8, !dbg !7445, !tbaa !2683
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !7447, !tbaa !2683
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !7449
  %29 = load i64, i64* %ob_refcnt22, align 8, !dbg !7450, !tbaa !2722
  %dec23 = add i64 %29, -1, !dbg !7450
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !7450, !tbaa !2722
  %cmp24 = icmp ne i64 %dec23, 0, !dbg !7451
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !7452

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29, !dbg !7453

if.else.26:                                       ; preds = %do.body.20
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !7455, !tbaa !2683
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !7457
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !7457, !tbaa !2675
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !7458
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !7458, !tbaa !2768
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !7459, !tbaa !2683
  call void %32(%struct._object* %33), !dbg !7460
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %34 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !7461
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !7461
  br label %do.cond.30, !dbg !7463

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !7464

do.end.31:                                        ; preds = %do.cond.30
  %35 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7466, !tbaa !2683
  %active32 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %35, i32 0, i32 2, !dbg !7467
  %36 = load %struct._object*, %struct._object** %active32, align 8, !dbg !7467, !tbaa !6935
  %cmp33 = icmp eq %struct._object* %36, null, !dbg !7468
  br i1 %cmp33, label %if.then.34, label %if.end.56, !dbg !7469

if.then.34:                                       ; preds = %do.end.31
  br label %do.body.35, !dbg !7470

do.body.35:                                       ; preds = %if.then.34
  %37 = bitcast %struct._object** %_py_tmp36 to i8*, !dbg !7471
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !7471
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp36, metadata !1297, metadata !2666), !dbg !7473
  %38 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7474, !tbaa !2683
  %source37 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %38, i32 0, i32 1, !dbg !7475
  %39 = load %struct._object*, %struct._object** %source37, align 8, !dbg !7475, !tbaa !6893
  store %struct._object* %39, %struct._object** %_py_tmp36, align 8, !dbg !7473, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %_py_tmp36, align 8, !dbg !7476, !tbaa !2683
  %cmp38 = icmp ne %struct._object* %40, null, !dbg !7477
  br i1 %cmp38, label %if.then.39, label %if.end.53, !dbg !7478

if.then.39:                                       ; preds = %do.body.35
  %41 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7479, !tbaa !2683
  %source40 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %41, i32 0, i32 1, !dbg !7481
  store %struct._object* null, %struct._object** %source40, align 8, !dbg !7482, !tbaa !6893
  br label %do.body.41, !dbg !7483

do.body.41:                                       ; preds = %if.then.39
  %42 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !7484
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !7484
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !1301, metadata !2666), !dbg !7486
  %43 = load %struct._object*, %struct._object** %_py_tmp36, align 8, !dbg !7487, !tbaa !2683
  store %struct._object* %43, %struct._object** %_py_decref_tmp42, align 8, !dbg !7486, !tbaa !2683
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !7488, !tbaa !2683
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !7490
  %45 = load i64, i64* %ob_refcnt43, align 8, !dbg !7491, !tbaa !2722
  %dec44 = add i64 %45, -1, !dbg !7491
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !7491, !tbaa !2722
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !7492
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !7493

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !7494

if.else.47:                                       ; preds = %do.body.41
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !7496, !tbaa !2683
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !7498
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !7498, !tbaa !2675
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !7499
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !7499, !tbaa !2768
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !7500, !tbaa !2683
  call void %48(%struct._object* %49), !dbg !7501
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %50 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !7502
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !7502
  br label %do.cond.51, !dbg !7504

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !7505

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53, !dbg !7507

if.end.53:                                        ; preds = %do.end.52, %do.body.35
  %51 = bitcast %struct._object** %_py_tmp36 to i8*, !dbg !7509
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !7509
  br label %do.cond.54, !dbg !7512

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !7513

do.end.55:                                        ; preds = %do.cond.54
  store %struct._object* null, %struct._object** %retval, !dbg !7515
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7515

if.end.56:                                        ; preds = %do.end.31
  store i32 0, i32* %cleanup.dest.slot, !dbg !7516
  br label %cleanup, !dbg !7516

cleanup:                                          ; preds = %if.end.56, %do.end.55, %do.end.16
  %52 = bitcast %struct._object** %iterable to i8*, !dbg !7517
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !7517
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.57, !dbg !7519

if.end.57:                                        ; preds = %cleanup.cont, %if.end
  %53 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7520, !tbaa !2683
  %active58 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %53, i32 0, i32 2, !dbg !7521
  %54 = load %struct._object*, %struct._object** %active58, align 8, !dbg !7521, !tbaa !6935
  %call59 = call %struct._object* @PyIter_Next(%struct._object* %54), !dbg !7522
  store %struct._object* %call59, %struct._object** %item, align 8, !dbg !7523, !tbaa !2683
  %55 = load %struct._object*, %struct._object** %item, align 8, !dbg !7524, !tbaa !2683
  %cmp60 = icmp ne %struct._object* %55, null, !dbg !7526
  br i1 %cmp60, label %if.then.61, label %if.end.62, !dbg !7527

if.then.61:                                       ; preds = %if.end.57
  %56 = load %struct._object*, %struct._object** %item, align 8, !dbg !7528, !tbaa !2683
  store %struct._object* %56, %struct._object** %retval, !dbg !7529
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93, !dbg !7529

if.end.62:                                        ; preds = %if.end.57
  %call63 = call %struct._object* @PyErr_Occurred(), !dbg !7530
  %tobool = icmp ne %struct._object* %call63, null, !dbg !7530
  br i1 %tobool, label %if.then.64, label %if.end.70, !dbg !7532

if.then.64:                                       ; preds = %if.end.62
  %57 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !7533, !tbaa !2683
  %call65 = call i32 @PyErr_ExceptionMatches(%struct._object* %57), !dbg !7536
  %tobool66 = icmp ne i32 %call65, 0, !dbg !7536
  br i1 %tobool66, label %if.then.67, label %if.else.68, !dbg !7537

if.then.67:                                       ; preds = %if.then.64
  call void @PyErr_Clear(), !dbg !7538
  br label %if.end.69, !dbg !7538

if.else.68:                                       ; preds = %if.then.64
  store %struct._object* null, %struct._object** %retval, !dbg !7539
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93, !dbg !7539

if.end.69:                                        ; preds = %if.then.67
  br label %if.end.70, !dbg !7540

if.end.70:                                        ; preds = %if.end.69, %if.end.62
  br label %do.body.71, !dbg !7541

do.body.71:                                       ; preds = %if.end.70
  %58 = bitcast %struct._object** %_py_tmp72 to i8*, !dbg !7542
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !7542
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp72, metadata !1305, metadata !2666), !dbg !7544
  %59 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7545, !tbaa !2683
  %active73 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %59, i32 0, i32 2, !dbg !7546
  %60 = load %struct._object*, %struct._object** %active73, align 8, !dbg !7546, !tbaa !6935
  store %struct._object* %60, %struct._object** %_py_tmp72, align 8, !dbg !7544, !tbaa !2683
  %61 = load %struct._object*, %struct._object** %_py_tmp72, align 8, !dbg !7547, !tbaa !2683
  %cmp74 = icmp ne %struct._object* %61, null, !dbg !7548
  br i1 %cmp74, label %if.then.75, label %if.end.89, !dbg !7549

if.then.75:                                       ; preds = %do.body.71
  %62 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7550, !tbaa !2683
  %active76 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %62, i32 0, i32 2, !dbg !7552
  store %struct._object* null, %struct._object** %active76, align 8, !dbg !7553, !tbaa !6935
  br label %do.body.77, !dbg !7554

do.body.77:                                       ; preds = %if.then.75
  %63 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !7555
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !7555
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !1307, metadata !2666), !dbg !7557
  %64 = load %struct._object*, %struct._object** %_py_tmp72, align 8, !dbg !7558, !tbaa !2683
  store %struct._object* %64, %struct._object** %_py_decref_tmp78, align 8, !dbg !7557, !tbaa !2683
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !7559, !tbaa !2683
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !7561
  %66 = load i64, i64* %ob_refcnt79, align 8, !dbg !7562, !tbaa !2722
  %dec80 = add i64 %66, -1, !dbg !7562
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !7562, !tbaa !2722
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !7563
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !7564

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86, !dbg !7565

if.else.83:                                       ; preds = %do.body.77
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !7567, !tbaa !2683
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !7569
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !7569, !tbaa !2675
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !7570
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !7570, !tbaa !2768
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !7571, !tbaa !2683
  call void %69(%struct._object* %70), !dbg !7572
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %71 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !7573
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !7573
  br label %do.cond.87, !dbg !7575

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !7576

do.end.88:                                        ; preds = %do.cond.87
  br label %if.end.89, !dbg !7578

if.end.89:                                        ; preds = %do.end.88, %do.body.71
  %72 = bitcast %struct._object** %_py_tmp72 to i8*, !dbg !7580
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !7580
  br label %do.cond.90, !dbg !7583

do.cond.90:                                       ; preds = %if.end.89
  br label %do.end.91, !dbg !7584

do.end.91:                                        ; preds = %do.cond.90
  %73 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7586, !tbaa !2683
  %call92 = call %struct._object* @chain_next(%struct.chainobject* %73), !dbg !7587
  store %struct._object* %call92, %struct._object** %retval, !dbg !7588
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93, !dbg !7588

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.93

cleanup.93:                                       ; preds = %NewDefault, %do.end.91, %if.else.68, %if.then.61, %if.then
  %74 = bitcast %struct._object** %item to i8*, !dbg !7589
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !7589
  %75 = load %struct._object*, %struct._object** %retval, !dbg !7589
  ret %struct._object* %75, !dbg !7589
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %source = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1354, metadata !2666), !dbg !7590
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1355, metadata !2666), !dbg !7591
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1356, metadata !2666), !dbg !7592
  %0 = bitcast %struct._object** %source to i8*, !dbg !7593
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7593
  call void @llvm.dbg.declare(metadata %struct._object** %source, metadata !1357, metadata !2666), !dbg !7594
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7595, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %1, @chain_type, !dbg !7597
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7598

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7599, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i32 0, i32 0), %struct._object* %2), !dbg !7601
  %tobool = icmp ne i32 %call, 0, !dbg !7601
  br i1 %tobool, label %if.end, label %if.then, !dbg !7602

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !7603
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7603

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7604, !tbaa !2683
  %call1 = call %struct._object* @PyObject_GetIter(%struct._object* %3), !dbg !7605
  store %struct._object* %call1, %struct._object** %source, align 8, !dbg !7606, !tbaa !2683
  %4 = load %struct._object*, %struct._object** %source, align 8, !dbg !7607, !tbaa !2683
  %cmp2 = icmp eq %struct._object* %4, null, !dbg !7609
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !7610

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7611
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7611

if.end.4:                                         ; preds = %if.end
  %5 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7612, !tbaa !2683
  %6 = load %struct._object*, %struct._object** %source, align 8, !dbg !7613, !tbaa !2683
  %call5 = call %struct._object* @chain_new_internal(%struct._typeobject* %5, %struct._object* %6), !dbg !7614
  store %struct._object* %call5, %struct._object** %retval, !dbg !7615
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7615

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %7 = bitcast %struct._object** %source to i8*, !dbg !7616
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !7616
  %8 = load %struct._object*, %struct._object** %retval, !dbg !7616
  ret %struct._object* %8, !dbg !7616
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_new_from_iterable(%struct._typeobject* %type, %struct._object* %arg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %source = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1315, metadata !2666), !dbg !7617
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1316, metadata !2666), !dbg !7618
  %0 = bitcast %struct._object** %source to i8*, !dbg !7619
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7619
  call void @llvm.dbg.declare(metadata %struct._object** %source, metadata !1317, metadata !2666), !dbg !7620
  %1 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !7621, !tbaa !2683
  %call = call %struct._object* @PyObject_GetIter(%struct._object* %1), !dbg !7622
  store %struct._object* %call, %struct._object** %source, align 8, !dbg !7623, !tbaa !2683
  %2 = load %struct._object*, %struct._object** %source, align 8, !dbg !7624, !tbaa !2683
  %cmp = icmp eq %struct._object* %2, null, !dbg !7626
  br i1 %cmp, label %if.then, label %if.end, !dbg !7627

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7628
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7628

if.end:                                           ; preds = %entry
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7629, !tbaa !2683
  %4 = load %struct._object*, %struct._object** %source, align 8, !dbg !7630, !tbaa !2683
  %call1 = call %struct._object* @chain_new_internal(%struct._typeobject* %3, %struct._object* %4), !dbg !7631
  store %struct._object* %call1, %struct._object** %retval, !dbg !7632
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7632

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast %struct._object** %source to i8*, !dbg !7633
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !7633
  %6 = load %struct._object*, %struct._object** %retval, !dbg !7633
  ret %struct._object* %6, !dbg !7633
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_reduce(%struct.chainobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.chainobject*, align 8
  store %struct.chainobject* %lz, %struct.chainobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.chainobject** %lz.addr, metadata !1329, metadata !2666), !dbg !7634
  %0 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7635, !tbaa !2683
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %0, i32 0, i32 1, !dbg !7637
  %1 = load %struct._object*, %struct._object** %source, align 8, !dbg !7637, !tbaa !6893
  %tobool = icmp ne %struct._object* %1, null, !dbg !7635
  br i1 %tobool, label %if.then, label %if.else.8, !dbg !7638

if.then:                                          ; preds = %entry
  %2 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7639, !tbaa !2683
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %2, i32 0, i32 2, !dbg !7642
  %3 = load %struct._object*, %struct._object** %active, align 8, !dbg !7642, !tbaa !6935
  %tobool1 = icmp ne %struct._object* %3, null, !dbg !7639
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !7643

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7644, !tbaa !2683
  %5 = bitcast %struct.chainobject* %4 to %struct._object*, !dbg !7646
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !7647
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7647, !tbaa !2675
  %7 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7648, !tbaa !2683
  %source3 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %7, i32 0, i32 1, !dbg !7649
  %8 = load %struct._object*, %struct._object** %source3, align 8, !dbg !7649, !tbaa !6893
  %9 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7650, !tbaa !2683
  %active4 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %9, i32 0, i32 2, !dbg !7651
  %10 = load %struct._object*, %struct._object** %active4, align 8, !dbg !7651, !tbaa !6935
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), %struct._typeobject* %6, %struct._object* %8, %struct._object* %10), !dbg !7652
  store %struct._object* %call, %struct._object** %retval, !dbg !7653
  br label %return, !dbg !7653

if.else:                                          ; preds = %if.then
  %11 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7654, !tbaa !2683
  %12 = bitcast %struct.chainobject* %11 to %struct._object*, !dbg !7656
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !7657
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !7657, !tbaa !2675
  %14 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7658, !tbaa !2683
  %source6 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %14, i32 0, i32 1, !dbg !7659
  %15 = load %struct._object*, %struct._object** %source6, align 8, !dbg !7659, !tbaa !6893
  %call7 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), %struct._typeobject* %13, %struct._object* %15), !dbg !7660
  store %struct._object* %call7, %struct._object** %retval, !dbg !7661
  br label %return, !dbg !7661

if.else.8:                                        ; preds = %entry
  %16 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7662, !tbaa !2683
  %17 = bitcast %struct.chainobject* %16 to %struct._object*, !dbg !7664
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !7665
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !7665, !tbaa !2675
  %call10 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), %struct._typeobject* %18), !dbg !7666
  store %struct._object* %call10, %struct._object** %retval, !dbg !7667
  br label %return, !dbg !7667

return:                                           ; preds = %if.else.8, %if.else, %if.then.2
  %19 = load %struct._object*, %struct._object** %retval, !dbg !7668
  ret %struct._object* %19, !dbg !7668
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_setstate(%struct.chainobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.chainobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %source = alloca %struct._object*, align 8
  %active = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.chainobject* %lz, %struct.chainobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.chainobject** %lz.addr, metadata !1334, metadata !2666), !dbg !7669
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1335, metadata !2666), !dbg !7670
  %0 = bitcast %struct._object** %source to i8*, !dbg !7671
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7671
  call void @llvm.dbg.declare(metadata %struct._object** %source, metadata !1336, metadata !2666), !dbg !7672
  %1 = bitcast %struct._object** %active to i8*, !dbg !7671
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7671
  call void @llvm.dbg.declare(metadata %struct._object** %active, metadata !1337, metadata !2666), !dbg !7673
  store %struct._object* null, %struct._object** %active, align 8, !dbg !7673, !tbaa !2683
  %2 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !7674, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), %struct._object** %source, %struct._object** %active), !dbg !7676
  %tobool = icmp ne i32 %call, 0, !dbg !7676
  br i1 %tobool, label %if.end, label %if.then, !dbg !7677

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7678
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7678

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !7679

do.body:                                          ; preds = %if.end
  %3 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7680
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7680
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1338, metadata !2666), !dbg !7682
  %4 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7683, !tbaa !2683
  %source1 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %4, i32 0, i32 1, !dbg !7684
  %5 = load %struct._object*, %struct._object** %source1, align 8, !dbg !7684, !tbaa !6893
  store %struct._object* %5, %struct._object** %_py_tmp, align 8, !dbg !7682, !tbaa !2683
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7685, !tbaa !2683
  %cmp = icmp ne %struct._object* %6, null, !dbg !7686
  br i1 %cmp, label %if.then.2, label %if.end.8, !dbg !7687

if.then.2:                                        ; preds = %do.body
  %7 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7688, !tbaa !2683
  %source3 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %7, i32 0, i32 1, !dbg !7690
  store %struct._object* null, %struct._object** %source3, align 8, !dbg !7691, !tbaa !6893
  br label %do.body.4, !dbg !7692

do.body.4:                                        ; preds = %if.then.2
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7693
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !7693
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1340, metadata !2666), !dbg !7695
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7696, !tbaa !2683
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !7695, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7697, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !7699
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !7700, !tbaa !2722
  %dec = add i64 %11, -1, !dbg !7700
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7700, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !7701
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !7702

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !7703

if.else:                                          ; preds = %do.body.4
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7705, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !7707
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7707, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !7708
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7708, !tbaa !2768
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7709, !tbaa !2683
  call void %14(%struct._object* %15), !dbg !7710
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7711
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !7711
  br label %do.cond, !dbg !7713

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !7714

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !7716

if.end.8:                                         ; preds = %do.end, %do.body
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7718
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !7718
  br label %do.cond.9, !dbg !7721

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !7722

do.end.10:                                        ; preds = %do.cond.9
  %18 = load %struct._object*, %struct._object** %source, align 8, !dbg !7724, !tbaa !2683
  %19 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7725, !tbaa !2683
  %source11 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %19, i32 0, i32 1, !dbg !7726
  store %struct._object* %18, %struct._object** %source11, align 8, !dbg !7727, !tbaa !6893
  %20 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7728, !tbaa !2683
  %source12 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %20, i32 0, i32 1, !dbg !7729
  %21 = load %struct._object*, %struct._object** %source12, align 8, !dbg !7729, !tbaa !6893
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !7730
  %22 = load i64, i64* %ob_refcnt13, align 8, !dbg !7731, !tbaa !2722
  %inc = add i64 %22, 1, !dbg !7731
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !7731, !tbaa !2722
  br label %do.body.14, !dbg !7732

do.body.14:                                       ; preds = %do.end.10
  %23 = bitcast %struct._object** %_py_tmp15 to i8*, !dbg !7733
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !7733
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp15, metadata !1344, metadata !2666), !dbg !7735
  %24 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7736, !tbaa !2683
  %active16 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %24, i32 0, i32 2, !dbg !7737
  %25 = load %struct._object*, %struct._object** %active16, align 8, !dbg !7737, !tbaa !6935
  store %struct._object* %25, %struct._object** %_py_tmp15, align 8, !dbg !7735, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %_py_tmp15, align 8, !dbg !7738, !tbaa !2683
  %cmp17 = icmp ne %struct._object* %26, null, !dbg !7739
  br i1 %cmp17, label %if.then.18, label %if.end.32, !dbg !7740

if.then.18:                                       ; preds = %do.body.14
  %27 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7741, !tbaa !2683
  %active19 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %27, i32 0, i32 2, !dbg !7743
  store %struct._object* null, %struct._object** %active19, align 8, !dbg !7744, !tbaa !6935
  br label %do.body.20, !dbg !7745

do.body.20:                                       ; preds = %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !7746
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !7746
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp21, metadata !1346, metadata !2666), !dbg !7748
  %29 = load %struct._object*, %struct._object** %_py_tmp15, align 8, !dbg !7749, !tbaa !2683
  store %struct._object* %29, %struct._object** %_py_decref_tmp21, align 8, !dbg !7748, !tbaa !2683
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !7750, !tbaa !2683
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !7752
  %31 = load i64, i64* %ob_refcnt22, align 8, !dbg !7753, !tbaa !2722
  %dec23 = add i64 %31, -1, !dbg !7753
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !7753, !tbaa !2722
  %cmp24 = icmp ne i64 %dec23, 0, !dbg !7754
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !7755

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29, !dbg !7756

if.else.26:                                       ; preds = %do.body.20
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !7758, !tbaa !2683
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !7760
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !7760, !tbaa !2675
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !7761
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !7761, !tbaa !2768
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !7762, !tbaa !2683
  call void %34(%struct._object* %35), !dbg !7763
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %36 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !7764
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !7764
  br label %do.cond.30, !dbg !7766

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !7767

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.32, !dbg !7769

if.end.32:                                        ; preds = %do.end.31, %do.body.14
  %37 = bitcast %struct._object** %_py_tmp15 to i8*, !dbg !7771
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !7771
  br label %do.cond.33, !dbg !7772

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !7773

do.end.34:                                        ; preds = %do.cond.33
  %38 = load %struct._object*, %struct._object** %active, align 8, !dbg !7775, !tbaa !2683
  %39 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7776, !tbaa !2683
  %active35 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %39, i32 0, i32 2, !dbg !7777
  store %struct._object* %38, %struct._object** %active35, align 8, !dbg !7778, !tbaa !6935
  br label %do.body.36, !dbg !7779

do.body.36:                                       ; preds = %do.end.34
  %40 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7780
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !7780
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1350, metadata !2666), !dbg !7782
  %41 = load %struct.chainobject*, %struct.chainobject** %lz.addr, align 8, !dbg !7783, !tbaa !2683
  %active37 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %41, i32 0, i32 2, !dbg !7784
  %42 = load %struct._object*, %struct._object** %active37, align 8, !dbg !7784, !tbaa !6935
  store %struct._object* %42, %struct._object** %_py_xincref_tmp, align 8, !dbg !7782, !tbaa !2683
  %43 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7785, !tbaa !2683
  %cmp38 = icmp ne %struct._object* %43, null, !dbg !7787
  br i1 %cmp38, label %if.then.39, label %if.end.42, !dbg !7788

if.then.39:                                       ; preds = %do.body.36
  %44 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7789, !tbaa !2683
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !7791
  %45 = load i64, i64* %ob_refcnt40, align 8, !dbg !7792, !tbaa !2722
  %inc41 = add i64 %45, 1, !dbg !7792
  store i64 %inc41, i64* %ob_refcnt40, align 8, !dbg !7792, !tbaa !2722
  br label %if.end.42, !dbg !7793

if.end.42:                                        ; preds = %if.then.39, %do.body.36
  %46 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7794
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !7794
  br label %do.cond.43, !dbg !7796

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !7797

do.end.44:                                        ; preds = %do.cond.43
  %47 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7799, !tbaa !2722
  %inc45 = add i64 %47, 1, !dbg !7799
  store i64 %inc45, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7799, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7800
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7800

cleanup:                                          ; preds = %do.end.44, %if.then
  %48 = bitcast %struct._object** %active to i8*, !dbg !7801
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !7801
  %49 = bitcast %struct._object** %source to i8*, !dbg !7801
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !7801
  %50 = load %struct._object*, %struct._object** %retval, !dbg !7801
  ret %struct._object* %50, !dbg !7801
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_new_internal(%struct._typeobject* %type, %struct._object* %source) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %source.addr = alloca %struct._object*, align 8
  %lz = alloca %struct.chainobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1320, metadata !2666), !dbg !7802
  store %struct._object* %source, %struct._object** %source.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %source.addr, metadata !1321, metadata !2666), !dbg !7803
  %0 = bitcast %struct.chainobject** %lz to i8*, !dbg !7804
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7804
  call void @llvm.dbg.declare(metadata %struct.chainobject** %lz, metadata !1322, metadata !2666), !dbg !7805
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7806, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 36, !dbg !7807
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !7807, !tbaa !3097
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7808, !tbaa !2683
  %call = call %struct._object* %2(%struct._typeobject* %3, i64 0), !dbg !7806
  %4 = bitcast %struct._object* %call to %struct.chainobject*, !dbg !7809
  store %struct.chainobject* %4, %struct.chainobject** %lz, align 8, !dbg !7810, !tbaa !2683
  %5 = load %struct.chainobject*, %struct.chainobject** %lz, align 8, !dbg !7811, !tbaa !2683
  %cmp = icmp eq %struct.chainobject* %5, null, !dbg !7812
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !7813

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7814

do.body:                                          ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7815
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !7815
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1323, metadata !2666), !dbg !7817
  %7 = load %struct._object*, %struct._object** %source.addr, align 8, !dbg !7818, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !7817, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7819, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !7821
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !7822, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !7822
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7822, !tbaa !2722
  %cmp1 = icmp ne i64 %dec, 0, !dbg !7823
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !7824

if.then.2:                                        ; preds = %do.body
  br label %if.end, !dbg !7825

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7827, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !7829
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7829, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !7830
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7830, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7831, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !7832
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7833
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !7833
  br label %do.cond, !dbg !7835

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7836

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7838
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7838

if.end.3:                                         ; preds = %entry
  %15 = load %struct._object*, %struct._object** %source.addr, align 8, !dbg !7839, !tbaa !2683
  %16 = load %struct.chainobject*, %struct.chainobject** %lz, align 8, !dbg !7840, !tbaa !2683
  %source4 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %16, i32 0, i32 1, !dbg !7841
  store %struct._object* %15, %struct._object** %source4, align 8, !dbg !7842, !tbaa !6893
  %17 = load %struct.chainobject*, %struct.chainobject** %lz, align 8, !dbg !7843, !tbaa !2683
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %17, i32 0, i32 2, !dbg !7844
  store %struct._object* null, %struct._object** %active, align 8, !dbg !7845, !tbaa !6935
  %18 = load %struct.chainobject*, %struct.chainobject** %lz, align 8, !dbg !7846, !tbaa !2683
  %19 = bitcast %struct.chainobject* %18 to %struct._object*, !dbg !7847
  store %struct._object* %19, %struct._object** %retval, !dbg !7848
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7848

cleanup:                                          ; preds = %if.end.3, %do.end
  %20 = bitcast %struct.chainobject** %lz to i8*, !dbg !7849
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !7849
  %21 = load %struct._object*, %struct._object** %retval, !dbg !7849
  ret %struct._object* %21, !dbg !7849
}

; Function Attrs: nounwind uwtable
define internal void @compress_dealloc(%struct.compressobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.compressobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.compressobject* %lz, %struct.compressobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.compressobject** %lz.addr, metadata !1362, metadata !2666), !dbg !7850
  %0 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7851, !tbaa !2683
  %1 = bitcast %struct.compressobject* %0 to i8*, !dbg !7851
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !7852
  br label %do.body, !dbg !7853

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7854
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7854
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1363, metadata !2666), !dbg !7856
  %3 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7857, !tbaa !2683
  %data = getelementptr inbounds %struct.compressobject, %struct.compressobject* %3, i32 0, i32 1, !dbg !7858
  %4 = load %struct._object*, %struct._object** %data, align 8, !dbg !7858, !tbaa !6893
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7856, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7859, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !7860
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !7861

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !7862

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7864
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !7864
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1365, metadata !2666), !dbg !7866
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7867, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !7866, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7868, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !7870
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !7871, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !7871
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7871, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !7872
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !7873

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !7874

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7876, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !7878
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7878, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !7879
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7879, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7880, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !7881
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7882
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !7882
  br label %do.cond, !dbg !7884

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7885

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !7887

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7889
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !7889
  br label %do.end.6, !dbg !7892

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !7893

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !7894
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !7894
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1368, metadata !2666), !dbg !7896
  %17 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7897, !tbaa !2683
  %selectors = getelementptr inbounds %struct.compressobject, %struct.compressobject* %17, i32 0, i32 2, !dbg !7898
  %18 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !7898, !tbaa !6935
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7896, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7899, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !7900
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !7901

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !7902

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7904
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !7904
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1370, metadata !2666), !dbg !7906
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7907, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !7906, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7908, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7910
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !7911, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !7911
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !7911, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !7912
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !7913

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !7914

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7916, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7918
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !7918, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7919
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !7919, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7920, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !7921
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7922
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !7922
  br label %do.cond.21, !dbg !7924

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !7925

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !7927

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !7929
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !7929
  br label %do.end.25, !dbg !7930

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7931, !tbaa !2683
  %31 = bitcast %struct.compressobject* %30 to %struct._object*, !dbg !7932
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !7933
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !7933, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !7934
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !7934, !tbaa !2864
  %34 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7935, !tbaa !2683
  %35 = bitcast %struct.compressobject* %34 to i8*, !dbg !7935
  call void %33(i8* %35), !dbg !7936
  ret void, !dbg !7937
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_traverse(%struct.compressobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.compressobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.compressobject* %lz, %struct.compressobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.compressobject** %lz.addr, metadata !1377, metadata !2666), !dbg !7938
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1378, metadata !2666), !dbg !7939
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1379, metadata !2666), !dbg !7940
  br label %do.body, !dbg !7941

do.body:                                          ; preds = %entry
  %0 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7942, !tbaa !2683
  %data = getelementptr inbounds %struct.compressobject, %struct.compressobject* %0, i32 0, i32 1, !dbg !7944
  %1 = load %struct._object*, %struct._object** %data, align 8, !dbg !7944, !tbaa !6893
  %tobool = icmp ne %struct._object* %1, null, !dbg !7945
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7946

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !7947
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !7947
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1380, metadata !2666), !dbg !7949
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7950, !tbaa !2683
  %4 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7951, !tbaa !2683
  %data1 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %4, i32 0, i32 1, !dbg !7952
  %5 = load %struct._object*, %struct._object** %data1, align 8, !dbg !7952, !tbaa !6893
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7953, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !7950
  store i32 %call, i32* %vret, align 4, !dbg !7949, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !7954, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !7954
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7956

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !7957, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !7959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7959

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !7960
  br label %cleanup, !dbg !7960

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !7962
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !7962
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !7965

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7966

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !7969

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7970, !tbaa !2683
  %selectors = getelementptr inbounds %struct.compressobject, %struct.compressobject* %10, i32 0, i32 2, !dbg !7972
  %11 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !7972, !tbaa !6935
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !7973
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !7974

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !7975
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !7975
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1384, metadata !2666), !dbg !7977
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7978, !tbaa !2683
  %14 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !7979, !tbaa !2683
  %selectors9 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %14, i32 0, i32 2, !dbg !7980
  %15 = load %struct._object*, %struct._object** %selectors9, align 8, !dbg !7980, !tbaa !6935
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !7981, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !7978
  store i32 %call10, i32* %vret8, align 4, !dbg !7977, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !7982, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !7982
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !7984

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !7985, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !7987
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !7987

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !7988
  br label %cleanup.14, !dbg !7988

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !7990
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !7990
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !7993

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !7994

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !7997
  br label %return, !dbg !7997

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !7998
  ret i32 %20, !dbg !7998
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @compress_next(%struct.compressobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.compressobject*, align 8
  %data = alloca %struct._object*, align 8
  %selectors = alloca %struct._object*, align 8
  %datum = alloca %struct._object*, align 8
  %selector = alloca %struct._object*, align 8
  %datanext = alloca %struct._object* (%struct._object*)*, align 8
  %selectornext = alloca %struct._object* (%struct._object*)*, align 8
  %ok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp30 = alloca %struct._object*, align 8
  store %struct.compressobject* %lz, %struct.compressobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.compressobject** %lz.addr, metadata !1392, metadata !2666), !dbg !7999
  %0 = bitcast %struct._object** %data to i8*, !dbg !8000
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8000
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !1393, metadata !2666), !dbg !8001
  %1 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !8002, !tbaa !2683
  %data1 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %1, i32 0, i32 1, !dbg !8003
  %2 = load %struct._object*, %struct._object** %data1, align 8, !dbg !8003, !tbaa !6893
  store %struct._object* %2, %struct._object** %data, align 8, !dbg !8001, !tbaa !2683
  %3 = bitcast %struct._object** %selectors to i8*, !dbg !8000
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8000
  call void @llvm.dbg.declare(metadata %struct._object** %selectors, metadata !1394, metadata !2666), !dbg !8004
  %4 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !8005, !tbaa !2683
  %selectors2 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %4, i32 0, i32 2, !dbg !8006
  %5 = load %struct._object*, %struct._object** %selectors2, align 8, !dbg !8006, !tbaa !6935
  store %struct._object* %5, %struct._object** %selectors, align 8, !dbg !8004, !tbaa !2683
  %6 = bitcast %struct._object** %datum to i8*, !dbg !8007
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8007
  call void @llvm.dbg.declare(metadata %struct._object** %datum, metadata !1395, metadata !2666), !dbg !8008
  %7 = bitcast %struct._object** %selector to i8*, !dbg !8007
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !8007
  call void @llvm.dbg.declare(metadata %struct._object** %selector, metadata !1396, metadata !2666), !dbg !8009
  %8 = bitcast %struct._object* (%struct._object*)** %datanext to i8*, !dbg !8010
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !8010
  call void @llvm.dbg.declare(metadata %struct._object* (%struct._object*)** %datanext, metadata !1397, metadata !2666), !dbg !8011
  %9 = load %struct._object*, %struct._object** %data, align 8, !dbg !8012, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !8013
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8013, !tbaa !2675
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 26, !dbg !8014
  %11 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !8014, !tbaa !5690
  store %struct._object* (%struct._object*)* %11, %struct._object* (%struct._object*)** %datanext, align 8, !dbg !8011, !tbaa !2683
  %12 = bitcast %struct._object* (%struct._object*)** %selectornext to i8*, !dbg !8015
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !8015
  call void @llvm.dbg.declare(metadata %struct._object* (%struct._object*)** %selectornext, metadata !1398, metadata !2666), !dbg !8016
  %13 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !8017, !tbaa !2683
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !8018
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !8018, !tbaa !2675
  %tp_iternext4 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 26, !dbg !8019
  %15 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext4, align 8, !dbg !8019, !tbaa !5690
  store %struct._object* (%struct._object*)* %15, %struct._object* (%struct._object*)** %selectornext, align 8, !dbg !8016, !tbaa !2683
  %16 = bitcast i32* %ok to i8*, !dbg !8020
  call void @llvm.lifetime.start(i64 4, i8* %16) #1, !dbg !8020
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !1399, metadata !2666), !dbg !8021
  br label %while.cond, !dbg !8022

while.cond:                                       ; preds = %if.end.43, %entry
  br label %while.body, !dbg !8023

while.body:                                       ; preds = %while.cond
  %17 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %datanext, align 8, !dbg !8026, !tbaa !2683
  %18 = load %struct._object*, %struct._object** %data, align 8, !dbg !8027, !tbaa !2683
  %call = call %struct._object* %17(%struct._object* %18), !dbg !8026
  store %struct._object* %call, %struct._object** %datum, align 8, !dbg !8028, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %datum, align 8, !dbg !8029, !tbaa !2683
  %cmp = icmp eq %struct._object* %19, null, !dbg !8031
  br i1 %cmp, label %if.then, label %if.end, !dbg !8032

if.then:                                          ; preds = %while.body
  store %struct._object* null, %struct._object** %retval, !dbg !8033
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8033

if.end:                                           ; preds = %while.body
  %20 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %selectornext, align 8, !dbg !8034, !tbaa !2683
  %21 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !8035, !tbaa !2683
  %call5 = call %struct._object* %20(%struct._object* %21), !dbg !8034
  store %struct._object* %call5, %struct._object** %selector, align 8, !dbg !8036, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %selector, align 8, !dbg !8037, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %22, null, !dbg !8038
  br i1 %cmp6, label %if.then.7, label %if.end.12, !dbg !8039

if.then.7:                                        ; preds = %if.end
  br label %do.body, !dbg !8040

do.body:                                          ; preds = %if.then.7
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8041
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !8041
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1400, metadata !2666), !dbg !8043
  %24 = load %struct._object*, %struct._object** %datum, align 8, !dbg !8044, !tbaa !2683
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !8043, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8045, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !8047
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !8048, !tbaa !2722
  %dec = add i64 %26, -1, !dbg !8048
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8048, !tbaa !2722
  %cmp8 = icmp ne i64 %dec, 0, !dbg !8049
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !8050

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !8051

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8053, !tbaa !2683
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !8055
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !8055, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !8056
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8056, !tbaa !2768
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8057, !tbaa !2683
  call void %29(%struct._object* %30), !dbg !8058
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.9
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8059
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !8059
  br label %do.cond, !dbg !8061

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !8062

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8064
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8064

if.end.12:                                        ; preds = %if.end
  %32 = load %struct._object*, %struct._object** %selector, align 8, !dbg !8065, !tbaa !2683
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %32), !dbg !8066
  store i32 %call13, i32* %ok, align 4, !dbg !8067, !tbaa !2691
  br label %do.body.14, !dbg !8068

do.body.14:                                       ; preds = %if.end.12
  %33 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8069
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !8069
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1405, metadata !2666), !dbg !8071
  %34 = load %struct._object*, %struct._object** %selector, align 8, !dbg !8072, !tbaa !2683
  store %struct._object* %34, %struct._object** %_py_decref_tmp15, align 8, !dbg !8071, !tbaa !2683
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8073, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !8075
  %36 = load i64, i64* %ob_refcnt16, align 8, !dbg !8076, !tbaa !2722
  %dec17 = add i64 %36, -1, !dbg !8076
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !8076, !tbaa !2722
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !8077
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !8078

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !8079

if.else.20:                                       ; preds = %do.body.14
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8081, !tbaa !2683
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !8083
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !8083, !tbaa !2675
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !8084
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !8084, !tbaa !2768
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8085, !tbaa !2683
  call void %39(%struct._object* %40), !dbg !8086
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %41 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8087
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !8087
  br label %do.cond.24, !dbg !8089

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !8090

do.end.25:                                        ; preds = %do.cond.24
  %42 = load i32, i32* %ok, align 4, !dbg !8092, !tbaa !2691
  %cmp26 = icmp eq i32 %42, 1, !dbg !8094
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !8095

if.then.27:                                       ; preds = %do.end.25
  %43 = load %struct._object*, %struct._object** %datum, align 8, !dbg !8096, !tbaa !2683
  store %struct._object* %43, %struct._object** %retval, !dbg !8097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8097

if.end.28:                                        ; preds = %do.end.25
  br label %do.body.29, !dbg !8098

do.body.29:                                       ; preds = %if.end.28
  %44 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !8099
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !8099
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp30, metadata !1407, metadata !2666), !dbg !8101
  %45 = load %struct._object*, %struct._object** %datum, align 8, !dbg !8102, !tbaa !2683
  store %struct._object* %45, %struct._object** %_py_decref_tmp30, align 8, !dbg !8101, !tbaa !2683
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !8103, !tbaa !2683
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !8105
  %47 = load i64, i64* %ob_refcnt31, align 8, !dbg !8106, !tbaa !2722
  %dec32 = add i64 %47, -1, !dbg !8106
  store i64 %dec32, i64* %ob_refcnt31, align 8, !dbg !8106, !tbaa !2722
  %cmp33 = icmp ne i64 %dec32, 0, !dbg !8107
  br i1 %cmp33, label %if.then.34, label %if.else.35, !dbg !8108

if.then.34:                                       ; preds = %do.body.29
  br label %if.end.38, !dbg !8109

if.else.35:                                       ; preds = %do.body.29
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !8111, !tbaa !2683
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !8113
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !8113, !tbaa !2675
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !8114
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8, !dbg !8114, !tbaa !2768
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !8115, !tbaa !2683
  call void %50(%struct._object* %51), !dbg !8116
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.34
  %52 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !8117
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !8117
  br label %do.cond.39, !dbg !8118

do.cond.39:                                       ; preds = %if.end.38
  br label %do.end.40, !dbg !8119

do.end.40:                                        ; preds = %do.cond.39
  %53 = load i32, i32* %ok, align 4, !dbg !8121, !tbaa !2691
  %cmp41 = icmp slt i32 %53, 0, !dbg !8123
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !8124

if.then.42:                                       ; preds = %do.end.40
  store %struct._object* null, %struct._object** %retval, !dbg !8125
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8125

if.end.43:                                        ; preds = %do.end.40
  br label %while.cond, !dbg !8022

cleanup:                                          ; preds = %if.then.42, %if.then.27, %do.end, %if.then
  %54 = bitcast i32* %ok to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 4, i8* %54) #1, !dbg !8126
  %55 = bitcast %struct._object* (%struct._object*)** %selectornext to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !8126
  %56 = bitcast %struct._object* (%struct._object*)** %datanext to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !8126
  %57 = bitcast %struct._object** %selector to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !8126
  %58 = bitcast %struct._object** %datum to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !8126
  %59 = bitcast %struct._object** %selectors to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !8126
  %60 = bitcast %struct._object** %data to i8*, !dbg !8126
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !8126
  %61 = load %struct._object*, %struct._object** %retval, !dbg !8126
  ret %struct._object* %61, !dbg !8126
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @compress_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %seq1 = alloca %struct._object*, align 8
  %seq2 = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  %selectors = alloca %struct._object*, align 8
  %lz = alloca %struct.compressobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1414, metadata !2666), !dbg !8127
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1415, metadata !2666), !dbg !8128
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1416, metadata !2666), !dbg !8129
  %0 = bitcast %struct._object** %seq1 to i8*, !dbg !8130
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8130
  call void @llvm.dbg.declare(metadata %struct._object** %seq1, metadata !1417, metadata !2666), !dbg !8131
  %1 = bitcast %struct._object** %seq2 to i8*, !dbg !8130
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8130
  call void @llvm.dbg.declare(metadata %struct._object** %seq2, metadata !1418, metadata !2666), !dbg !8132
  %2 = bitcast %struct._object** %data to i8*, !dbg !8133
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8133
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !1419, metadata !2666), !dbg !8134
  store %struct._object* null, %struct._object** %data, align 8, !dbg !8134, !tbaa !2683
  %3 = bitcast %struct._object** %selectors to i8*, !dbg !8133
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8133
  call void @llvm.dbg.declare(metadata %struct._object** %selectors, metadata !1420, metadata !2666), !dbg !8135
  store %struct._object* null, %struct._object** %selectors, align 8, !dbg !8135, !tbaa !2683
  %4 = bitcast %struct.compressobject** %lz to i8*, !dbg !8136
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8136
  call void @llvm.dbg.declare(metadata %struct.compressobject** %lz, metadata !1421, metadata !2666), !dbg !8137
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8138, !tbaa !2683
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8140, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %5, %struct._object* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @compress_new.kwargs, i32 0, i32 0), %struct._object** %seq1, %struct._object** %seq2), !dbg !8141
  %tobool = icmp ne i32 %call, 0, !dbg !8141
  br i1 %tobool, label %if.end, label %if.then, !dbg !8142

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8143
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8143

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %seq1, align 8, !dbg !8144, !tbaa !2683
  %call1 = call %struct._object* @PyObject_GetIter(%struct._object* %7), !dbg !8145
  store %struct._object* %call1, %struct._object** %data, align 8, !dbg !8146, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %data, align 8, !dbg !8147, !tbaa !2683
  %cmp = icmp eq %struct._object* %8, null, !dbg !8149
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !8150

if.then.2:                                        ; preds = %if.end
  br label %fail, !dbg !8151

if.end.3:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %seq2, align 8, !dbg !8152, !tbaa !2683
  %call4 = call %struct._object* @PyObject_GetIter(%struct._object* %9), !dbg !8153
  store %struct._object* %call4, %struct._object** %selectors, align 8, !dbg !8154, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !8155, !tbaa !2683
  %cmp5 = icmp eq %struct._object* %10, null, !dbg !8157
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !8158

if.then.6:                                        ; preds = %if.end.3
  br label %fail, !dbg !8159

if.end.7:                                         ; preds = %if.end.3
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8160, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 36, !dbg !8161
  %12 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !8161, !tbaa !3097
  %13 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8162, !tbaa !2683
  %call8 = call %struct._object* %12(%struct._typeobject* %13, i64 0), !dbg !8160
  %14 = bitcast %struct._object* %call8 to %struct.compressobject*, !dbg !8163
  store %struct.compressobject* %14, %struct.compressobject** %lz, align 8, !dbg !8164, !tbaa !2683
  %15 = load %struct.compressobject*, %struct.compressobject** %lz, align 8, !dbg !8165, !tbaa !2683
  %cmp9 = icmp eq %struct.compressobject* %15, null, !dbg !8167
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !8168

if.then.10:                                       ; preds = %if.end.7
  br label %fail, !dbg !8169

if.end.11:                                        ; preds = %if.end.7
  %16 = load %struct._object*, %struct._object** %data, align 8, !dbg !8170, !tbaa !2683
  %17 = load %struct.compressobject*, %struct.compressobject** %lz, align 8, !dbg !8171, !tbaa !2683
  %data12 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %17, i32 0, i32 1, !dbg !8172
  store %struct._object* %16, %struct._object** %data12, align 8, !dbg !8173, !tbaa !6893
  %18 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !8174, !tbaa !2683
  %19 = load %struct.compressobject*, %struct.compressobject** %lz, align 8, !dbg !8175, !tbaa !2683
  %selectors13 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %19, i32 0, i32 2, !dbg !8176
  store %struct._object* %18, %struct._object** %selectors13, align 8, !dbg !8177, !tbaa !6935
  %20 = load %struct.compressobject*, %struct.compressobject** %lz, align 8, !dbg !8178, !tbaa !2683
  %21 = bitcast %struct.compressobject* %20 to %struct._object*, !dbg !8179
  store %struct._object* %21, %struct._object** %retval, !dbg !8180
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8180

fail:                                             ; preds = %if.then.10, %if.then.6, %if.then.2
  br label %do.body, !dbg !8181

do.body:                                          ; preds = %fail
  %22 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8182
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !8182
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1422, metadata !2666), !dbg !8184
  %23 = load %struct._object*, %struct._object** %data, align 8, !dbg !8185, !tbaa !2683
  store %struct._object* %23, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8184, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8186, !tbaa !2683
  %cmp14 = icmp ne %struct._object* %24, null, !dbg !8187
  br i1 %cmp14, label %if.then.15, label %if.end.20, !dbg !8188

if.then.15:                                       ; preds = %do.body
  br label %do.body.16, !dbg !8189

do.body.16:                                       ; preds = %if.then.15
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8191
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !8191
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1424, metadata !2666), !dbg !8193
  %26 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8194, !tbaa !2683
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !8193, !tbaa !2683
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8195, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !8197
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !8198, !tbaa !2722
  %dec = add i64 %28, -1, !dbg !8198
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8198, !tbaa !2722
  %cmp17 = icmp ne i64 %dec, 0, !dbg !8199
  br i1 %cmp17, label %if.then.18, label %if.else, !dbg !8200

if.then.18:                                       ; preds = %do.body.16
  br label %if.end.19, !dbg !8201

if.else:                                          ; preds = %do.body.16
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8203, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !8205
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8205, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !8206
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8206, !tbaa !2768
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8207, !tbaa !2683
  call void %31(%struct._object* %32), !dbg !8208
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.18
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8209
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !8209
  br label %do.cond, !dbg !8211

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !8212

do.end:                                           ; preds = %do.cond
  br label %if.end.20, !dbg !8214

if.end.20:                                        ; preds = %do.end, %do.body
  %34 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8216
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !8216
  br label %do.cond.21, !dbg !8219

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !8220

do.end.22:                                        ; preds = %do.cond.21
  br label %do.body.23, !dbg !8222

do.body.23:                                       ; preds = %do.end.22
  %35 = bitcast %struct._object** %_py_xdecref_tmp24 to i8*, !dbg !8223
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !8223
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp24, metadata !1427, metadata !2666), !dbg !8225
  %36 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !8226, !tbaa !2683
  store %struct._object* %36, %struct._object** %_py_xdecref_tmp24, align 8, !dbg !8225, !tbaa !2683
  %37 = load %struct._object*, %struct._object** %_py_xdecref_tmp24, align 8, !dbg !8227, !tbaa !2683
  %cmp25 = icmp ne %struct._object* %37, null, !dbg !8228
  br i1 %cmp25, label %if.then.26, label %if.end.39, !dbg !8229

if.then.26:                                       ; preds = %do.body.23
  br label %do.body.27, !dbg !8230

do.body.27:                                       ; preds = %if.then.26
  %38 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !8232
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !8232
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp28, metadata !1429, metadata !2666), !dbg !8234
  %39 = load %struct._object*, %struct._object** %_py_xdecref_tmp24, align 8, !dbg !8235, !tbaa !2683
  store %struct._object* %39, %struct._object** %_py_decref_tmp28, align 8, !dbg !8234, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !8236, !tbaa !2683
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !8238
  %41 = load i64, i64* %ob_refcnt29, align 8, !dbg !8239, !tbaa !2722
  %dec30 = add i64 %41, -1, !dbg !8239
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !8239, !tbaa !2722
  %cmp31 = icmp ne i64 %dec30, 0, !dbg !8240
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !8241

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36, !dbg !8242

if.else.33:                                       ; preds = %do.body.27
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !8244, !tbaa !2683
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !8246
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !8246, !tbaa !2675
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !8247
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !8247, !tbaa !2768
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !8248, !tbaa !2683
  call void %44(%struct._object* %45), !dbg !8249
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %46 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !8250
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !8250
  br label %do.cond.37, !dbg !8252

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !8253

do.end.38:                                        ; preds = %do.cond.37
  br label %if.end.39, !dbg !8255

if.end.39:                                        ; preds = %do.end.38, %do.body.23
  %47 = bitcast %struct._object** %_py_xdecref_tmp24 to i8*, !dbg !8257
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !8257
  br label %do.cond.40, !dbg !8258

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !8259

do.end.41:                                        ; preds = %do.cond.40
  store %struct._object* null, %struct._object** %retval, !dbg !8261
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8261

cleanup:                                          ; preds = %do.end.41, %if.end.11, %if.then
  %48 = bitcast %struct.compressobject** %lz to i8*, !dbg !8262
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !8262
  %49 = bitcast %struct._object** %selectors to i8*, !dbg !8262
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !8262
  %50 = bitcast %struct._object** %data to i8*, !dbg !8262
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !8262
  %51 = bitcast %struct._object** %seq2 to i8*, !dbg !8262
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !8262
  %52 = bitcast %struct._object** %seq1 to i8*, !dbg !8262
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !8262
  %53 = load %struct._object*, %struct._object** %retval, !dbg !8262
  ret %struct._object* %53, !dbg !8262
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @compress_reduce(%struct.compressobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.compressobject*, align 8
  store %struct.compressobject* %lz, %struct.compressobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.compressobject** %lz.addr, metadata !1411, metadata !2666), !dbg !8263
  %0 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !8264, !tbaa !2683
  %1 = bitcast %struct.compressobject* %0 to %struct._object*, !dbg !8265
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8266
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8266, !tbaa !2675
  %3 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !8267, !tbaa !2683
  %data = getelementptr inbounds %struct.compressobject, %struct.compressobject* %3, i32 0, i32 1, !dbg !8268
  %4 = load %struct._object*, %struct._object** %data, align 8, !dbg !8268, !tbaa !6893
  %5 = load %struct.compressobject*, %struct.compressobject** %lz.addr, align 8, !dbg !8269, !tbaa !2683
  %selectors = getelementptr inbounds %struct.compressobject, %struct.compressobject* %5, i32 0, i32 2, !dbg !8270
  %6 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !8270, !tbaa !6935
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6), !dbg !8271
  ret %struct._object* %call, !dbg !8272
}

; Function Attrs: nounwind uwtable
define internal void @filterfalse_dealloc(%struct.filterfalseobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.filterfalseobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.filterfalseobject* %lz, %struct.filterfalseobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.filterfalseobject** %lz.addr, metadata !1436, metadata !2666), !dbg !8273
  %0 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8274, !tbaa !2683
  %1 = bitcast %struct.filterfalseobject* %0 to i8*, !dbg !8274
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !8275
  br label %do.body, !dbg !8276

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8277
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8277
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1437, metadata !2666), !dbg !8279
  %3 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8280, !tbaa !2683
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %3, i32 0, i32 1, !dbg !8281
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !8281, !tbaa !6893
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8279, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8282, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !8283
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !8284

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !8285

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8287
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8287
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1439, metadata !2666), !dbg !8289
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8290, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !8289, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8291, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !8293
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8294, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !8294
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8294, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !8295
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !8296

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !8297

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8299, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !8301
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8301, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !8302
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8302, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8303, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !8304
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8305
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !8305
  br label %do.cond, !dbg !8307

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8308

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !8310

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8312
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !8312
  br label %do.end.6, !dbg !8315

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !8316

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !8317
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !8317
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1442, metadata !2666), !dbg !8319
  %17 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8320, !tbaa !2683
  %it = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %17, i32 0, i32 2, !dbg !8321
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !8321, !tbaa !6935
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !8319, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !8322, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !8323
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !8324

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !8325

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !8327
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !8327
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1444, metadata !2666), !dbg !8329
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !8330, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !8329, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !8331, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !8333
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !8334, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !8334
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !8334, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !8335
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !8336

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !8337

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !8339, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !8341
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !8341, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !8342
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !8342, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !8343, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !8344
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !8345
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !8345
  br label %do.cond.21, !dbg !8347

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !8348

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !8350

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !8352
  br label %do.end.25, !dbg !8353

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8354, !tbaa !2683
  %31 = bitcast %struct.filterfalseobject* %30 to %struct._object*, !dbg !8355
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !8356
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !8356, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !8357
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !8357, !tbaa !2864
  %34 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8358, !tbaa !2683
  %35 = bitcast %struct.filterfalseobject* %34 to i8*, !dbg !8358
  call void %33(i8* %35), !dbg !8359
  ret void, !dbg !8360
}

; Function Attrs: nounwind uwtable
define internal i32 @filterfalse_traverse(%struct.filterfalseobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.filterfalseobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.filterfalseobject* %lz, %struct.filterfalseobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.filterfalseobject** %lz.addr, metadata !1451, metadata !2666), !dbg !8361
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1452, metadata !2666), !dbg !8362
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1453, metadata !2666), !dbg !8363
  br label %do.body, !dbg !8364

do.body:                                          ; preds = %entry
  %0 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8365, !tbaa !2683
  %it = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %0, i32 0, i32 2, !dbg !8367
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !8367, !tbaa !6935
  %tobool = icmp ne %struct._object* %1, null, !dbg !8368
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !8369

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !8370
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !8370
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1454, metadata !2666), !dbg !8372
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !8373, !tbaa !2683
  %4 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8374, !tbaa !2683
  %it1 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %4, i32 0, i32 2, !dbg !8375
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !8375, !tbaa !6935
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !8376, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !8373
  store i32 %call, i32* %vret, align 4, !dbg !8372, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !8377, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !8377
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !8379

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !8380, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !8382
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8382

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !8383
  br label %cleanup, !dbg !8383

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !8385
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !8385
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !8388

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !8389

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !8392

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8393, !tbaa !2683
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %10, i32 0, i32 1, !dbg !8395
  %11 = load %struct._object*, %struct._object** %func, align 8, !dbg !8395, !tbaa !6893
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !8396
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !8397

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !8398
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !8398
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1458, metadata !2666), !dbg !8400
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !8401, !tbaa !2683
  %14 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8402, !tbaa !2683
  %func9 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %14, i32 0, i32 1, !dbg !8403
  %15 = load %struct._object*, %struct._object** %func9, align 8, !dbg !8403, !tbaa !6893
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !8404, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !8401
  store i32 %call10, i32* %vret8, align 4, !dbg !8400, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !8405, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !8405
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !8407

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !8408, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !8410
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !8410

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !8411
  br label %cleanup.14, !dbg !8411

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !8413
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !8413
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !8416

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !8417

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !8420
  br label %return, !dbg !8420

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !8421
  ret i32 %20, !dbg !8421
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @filterfalse_next(%struct.filterfalseobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.filterfalseobject*, align 8
  %item = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %ok = alloca i64, align 8
  %iternext = alloca %struct._object* (%struct._object*)*, align 8
  %cleanup.dest.slot = alloca i32
  %good = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  store %struct.filterfalseobject* %lz, %struct.filterfalseobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.filterfalseobject** %lz.addr, metadata !1466, metadata !2666), !dbg !8422
  %0 = bitcast %struct._object** %item to i8*, !dbg !8423
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8423
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1467, metadata !2666), !dbg !8424
  %1 = bitcast %struct._object** %it to i8*, !dbg !8425
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8425
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1468, metadata !2666), !dbg !8426
  %2 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8427, !tbaa !2683
  %it1 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %2, i32 0, i32 2, !dbg !8428
  %3 = load %struct._object*, %struct._object** %it1, align 8, !dbg !8428, !tbaa !6935
  store %struct._object* %3, %struct._object** %it, align 8, !dbg !8426, !tbaa !2683
  %4 = bitcast i64* %ok to i8*, !dbg !8429
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8429
  call void @llvm.dbg.declare(metadata i64* %ok, metadata !1469, metadata !2666), !dbg !8430
  %5 = bitcast %struct._object* (%struct._object*)** %iternext to i8*, !dbg !8431
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8431
  call void @llvm.dbg.declare(metadata %struct._object* (%struct._object*)** %iternext, metadata !1470, metadata !2666), !dbg !8432
  %6 = load %struct._object*, %struct._object** %it, align 8, !dbg !8433, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !8434
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8434, !tbaa !2675
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 26, !dbg !8435
  %8 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !8435, !tbaa !5690
  store %struct._object* (%struct._object*)* %8, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !8436, !tbaa !2683
  br label %for.cond, !dbg !8437

for.cond:                                         ; preds = %if.end.55, %entry
  %9 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %iternext, align 8, !dbg !8438, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %it, align 8, !dbg !8439, !tbaa !2683
  %call = call %struct._object* %9(%struct._object* %10), !dbg !8438
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !8440, !tbaa !2683
  %11 = load %struct._object*, %struct._object** %item, align 8, !dbg !8441, !tbaa !2683
  %cmp = icmp eq %struct._object* %11, null, !dbg !8443
  br i1 %cmp, label %if.then, label %if.end, !dbg !8444

if.then:                                          ; preds = %for.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8445
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !8445

if.end:                                           ; preds = %for.cond
  %12 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8446, !tbaa !2683
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %12, i32 0, i32 1, !dbg !8447
  %13 = load %struct._object*, %struct._object** %func, align 8, !dbg !8447, !tbaa !6893
  %cmp2 = icmp eq %struct._object* %13, @_Py_NoneStruct, !dbg !8448
  br i1 %cmp2, label %if.then.5, label %lor.lhs.false, !dbg !8449

lor.lhs.false:                                    ; preds = %if.end
  %14 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8450, !tbaa !2683
  %func3 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %14, i32 0, i32 1, !dbg !8452
  %15 = load %struct._object*, %struct._object** %func3, align 8, !dbg !8452, !tbaa !6893
  %cmp4 = icmp eq %struct._object* %15, getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyBool_Type, i32 0, i32 0, i32 0), !dbg !8453
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !8454

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %16 = load %struct._object*, %struct._object** %item, align 8, !dbg !8455, !tbaa !2683
  %call6 = call i32 @PyObject_IsTrue(%struct._object* %16), !dbg !8457
  %conv = sext i32 %call6 to i64, !dbg !8457
  store i64 %conv, i64* %ok, align 8, !dbg !8458, !tbaa !3427
  br label %if.end.34, !dbg !8459

if.else:                                          ; preds = %lor.lhs.false
  %17 = bitcast %struct._object** %good to i8*, !dbg !8460
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !8460
  call void @llvm.dbg.declare(metadata %struct._object** %good, metadata !1471, metadata !2666), !dbg !8461
  %18 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8462, !tbaa !2683
  %func7 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %18, i32 0, i32 1, !dbg !8463
  %19 = load %struct._object*, %struct._object** %func7, align 8, !dbg !8463, !tbaa !6893
  %20 = load %struct._object*, %struct._object** %item, align 8, !dbg !8464, !tbaa !2683
  %call8 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %19, %struct._object* %20, i8* null), !dbg !8465
  store %struct._object* %call8, %struct._object** %good, align 8, !dbg !8466, !tbaa !2683
  %21 = load %struct._object*, %struct._object** %good, align 8, !dbg !8467, !tbaa !2683
  %cmp9 = icmp eq %struct._object* %21, null, !dbg !8468
  br i1 %cmp9, label %if.then.11, label %if.end.18, !dbg !8469

if.then.11:                                       ; preds = %if.else
  br label %do.body, !dbg !8470

do.body:                                          ; preds = %if.then.11
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8471
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !8471
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1477, metadata !2666), !dbg !8473
  %23 = load %struct._object*, %struct._object** %item, align 8, !dbg !8474, !tbaa !2683
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !8473, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8475, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !8477
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !8478, !tbaa !2722
  %dec = add i64 %25, -1, !dbg !8478
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8478, !tbaa !2722
  %cmp12 = icmp ne i64 %dec, 0, !dbg !8479
  br i1 %cmp12, label %if.then.14, label %if.else.15, !dbg !8480

if.then.14:                                       ; preds = %do.body
  br label %if.end.17, !dbg !8481

if.else.15:                                       ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8483, !tbaa !2683
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !8485
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !8485, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !8486
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8486, !tbaa !2768
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8487, !tbaa !2683
  call void %28(%struct._object* %29), !dbg !8488
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.15, %if.then.14
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8489
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !8489
  br label %do.cond, !dbg !8491

do.cond:                                          ; preds = %if.end.17
  br label %do.end, !dbg !8492

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8494
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8494

if.end.18:                                        ; preds = %if.else
  %31 = load %struct._object*, %struct._object** %good, align 8, !dbg !8495, !tbaa !2683
  %call19 = call i32 @PyObject_IsTrue(%struct._object* %31), !dbg !8496
  %conv20 = sext i32 %call19 to i64, !dbg !8496
  store i64 %conv20, i64* %ok, align 8, !dbg !8497, !tbaa !3427
  br label %do.body.21, !dbg !8498

do.body.21:                                       ; preds = %if.end.18
  %32 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !8499
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !8499
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !1481, metadata !2666), !dbg !8501
  %33 = load %struct._object*, %struct._object** %good, align 8, !dbg !8502, !tbaa !2683
  store %struct._object* %33, %struct._object** %_py_decref_tmp22, align 8, !dbg !8501, !tbaa !2683
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !8503, !tbaa !2683
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !8505
  %35 = load i64, i64* %ob_refcnt23, align 8, !dbg !8506, !tbaa !2722
  %dec24 = add i64 %35, -1, !dbg !8506
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !8506, !tbaa !2722
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !8507
  br i1 %cmp25, label %if.then.27, label %if.else.28, !dbg !8508

if.then.27:                                       ; preds = %do.body.21
  br label %if.end.31, !dbg !8509

if.else.28:                                       ; preds = %do.body.21
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !8511, !tbaa !2683
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !8513
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !8513, !tbaa !2675
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !8514
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !8514, !tbaa !2768
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !8515, !tbaa !2683
  call void %38(%struct._object* %39), !dbg !8516
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %40 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !8517
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !8517
  br label %do.cond.32, !dbg !8519

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !8520

do.end.33:                                        ; preds = %do.cond.32
  store i32 0, i32* %cleanup.dest.slot, !dbg !8522
  br label %cleanup, !dbg !8522

cleanup:                                          ; preds = %do.end.33, %do.end
  %41 = bitcast %struct._object** %good to i8*, !dbg !8523
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !8523
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.34

if.end.34:                                        ; preds = %cleanup.cont, %if.then.5
  %42 = load i64, i64* %ok, align 8, !dbg !8524, !tbaa !3427
  %cmp35 = icmp eq i64 %42, 0, !dbg !8526
  br i1 %cmp35, label %if.then.37, label %if.end.38, !dbg !8527

if.then.37:                                       ; preds = %if.end.34
  %43 = load %struct._object*, %struct._object** %item, align 8, !dbg !8528, !tbaa !2683
  store %struct._object* %43, %struct._object** %retval, !dbg !8529
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !8529

if.end.38:                                        ; preds = %if.end.34
  br label %do.body.39, !dbg !8530

do.body.39:                                       ; preds = %if.end.38
  %44 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !8531
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !8531
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1483, metadata !2666), !dbg !8533
  %45 = load %struct._object*, %struct._object** %item, align 8, !dbg !8534, !tbaa !2683
  store %struct._object* %45, %struct._object** %_py_decref_tmp40, align 8, !dbg !8533, !tbaa !2683
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !8535, !tbaa !2683
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !8537
  %47 = load i64, i64* %ob_refcnt41, align 8, !dbg !8538, !tbaa !2722
  %dec42 = add i64 %47, -1, !dbg !8538
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !8538, !tbaa !2722
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !8539
  br i1 %cmp43, label %if.then.45, label %if.else.46, !dbg !8540

if.then.45:                                       ; preds = %do.body.39
  br label %if.end.49, !dbg !8541

if.else.46:                                       ; preds = %do.body.39
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !8543, !tbaa !2683
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !8545
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !8545, !tbaa !2675
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !8546
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !8546, !tbaa !2768
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !8547, !tbaa !2683
  call void %50(%struct._object* %51), !dbg !8548
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.45
  %52 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !8549
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !8549
  br label %do.cond.50, !dbg !8551

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !8552

do.end.51:                                        ; preds = %do.cond.50
  %53 = load i64, i64* %ok, align 8, !dbg !8554, !tbaa !3427
  %cmp52 = icmp slt i64 %53, 0, !dbg !8556
  br i1 %cmp52, label %if.then.54, label %if.end.55, !dbg !8557

if.then.54:                                       ; preds = %do.end.51
  store %struct._object* null, %struct._object** %retval, !dbg !8558
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !8558

if.end.55:                                        ; preds = %do.end.51
  br label %for.cond, !dbg !8559

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.56

cleanup.56:                                       ; preds = %NewDefault, %if.then.54, %if.then.37, %if.then
  %54 = bitcast %struct._object* (%struct._object*)** %iternext to i8*, !dbg !8560
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !8560
  %55 = bitcast i64* %ok to i8*, !dbg !8560
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !8560
  %56 = bitcast %struct._object** %it to i8*, !dbg !8560
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !8560
  %57 = bitcast %struct._object** %item to i8*, !dbg !8560
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !8560
  %58 = load %struct._object*, %struct._object** %retval, !dbg !8560
  ret %struct._object* %58, !dbg !8560
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @filterfalse_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %lz = alloca %struct.filterfalseobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1490, metadata !2666), !dbg !8561
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1491, metadata !2666), !dbg !8562
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1492, metadata !2666), !dbg !8563
  %0 = bitcast %struct._object** %func to i8*, !dbg !8564
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8564
  call void @llvm.dbg.declare(metadata %struct._object** %func, metadata !1493, metadata !2666), !dbg !8565
  %1 = bitcast %struct._object** %seq to i8*, !dbg !8564
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8564
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1494, metadata !2666), !dbg !8566
  %2 = bitcast %struct._object** %it to i8*, !dbg !8567
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8567
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1495, metadata !2666), !dbg !8568
  %3 = bitcast %struct.filterfalseobject** %lz to i8*, !dbg !8569
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8569
  call void @llvm.dbg.declare(metadata %struct.filterfalseobject** %lz, metadata !1496, metadata !2666), !dbg !8570
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8571, !tbaa !2683
  %cmp = icmp eq %struct._typeobject* %4, @filterfalse_type, !dbg !8573
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8574

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8575, !tbaa !2683
  %call = call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0), %struct._object* %5), !dbg !8576
  %tobool = icmp ne i32 %call, 0, !dbg !8576
  br i1 %tobool, label %if.end, label %if.then, !dbg !8577

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !8578
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8578

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8579, !tbaa !2683
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i64 2, i64 2, %struct._object** %func, %struct._object** %seq), !dbg !8581
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8581
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !8582

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8583
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8583

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8584, !tbaa !2683
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %7), !dbg !8585
  store %struct._object* %call5, %struct._object** %it, align 8, !dbg !8586, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !8587, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %8, null, !dbg !8589
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !8590

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !8591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8591

if.end.8:                                         ; preds = %if.end.4
  %9 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8592, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 36, !dbg !8593
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !8593, !tbaa !3097
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8594, !tbaa !2683
  %call9 = call %struct._object* %10(%struct._typeobject* %11, i64 0), !dbg !8592
  %12 = bitcast %struct._object* %call9 to %struct.filterfalseobject*, !dbg !8595
  store %struct.filterfalseobject* %12, %struct.filterfalseobject** %lz, align 8, !dbg !8596, !tbaa !2683
  %13 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz, align 8, !dbg !8597, !tbaa !2683
  %cmp10 = icmp eq %struct.filterfalseobject* %13, null, !dbg !8598
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !8599

if.then.11:                                       ; preds = %if.end.8
  br label %do.body, !dbg !8600

do.body:                                          ; preds = %if.then.11
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8601
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !8601
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1497, metadata !2666), !dbg !8603
  %15 = load %struct._object*, %struct._object** %it, align 8, !dbg !8604, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !8603, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8605, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !8607
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !8608, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !8608
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8608, !tbaa !2722
  %cmp12 = icmp ne i64 %dec, 0, !dbg !8609
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !8610

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !8611

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8613, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !8615
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8615, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !8616
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8616, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8617, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !8618
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8619
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !8619
  br label %do.cond, !dbg !8621

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !8622

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8624
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8624

if.end.15:                                        ; preds = %if.end.8
  %23 = load %struct._object*, %struct._object** %func, align 8, !dbg !8625, !tbaa !2683
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !8626
  %24 = load i64, i64* %ob_refcnt16, align 8, !dbg !8627, !tbaa !2722
  %inc = add i64 %24, 1, !dbg !8627
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !8627, !tbaa !2722
  %25 = load %struct._object*, %struct._object** %func, align 8, !dbg !8628, !tbaa !2683
  %26 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz, align 8, !dbg !8629, !tbaa !2683
  %func17 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %26, i32 0, i32 1, !dbg !8630
  store %struct._object* %25, %struct._object** %func17, align 8, !dbg !8631, !tbaa !6893
  %27 = load %struct._object*, %struct._object** %it, align 8, !dbg !8632, !tbaa !2683
  %28 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz, align 8, !dbg !8633, !tbaa !2683
  %it18 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %28, i32 0, i32 2, !dbg !8634
  store %struct._object* %27, %struct._object** %it18, align 8, !dbg !8635, !tbaa !6935
  %29 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz, align 8, !dbg !8636, !tbaa !2683
  %30 = bitcast %struct.filterfalseobject* %29 to %struct._object*, !dbg !8637
  store %struct._object* %30, %struct._object** %retval, !dbg !8638
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8638

cleanup:                                          ; preds = %if.end.15, %do.end, %if.then.7, %if.then.3, %if.then
  %31 = bitcast %struct.filterfalseobject** %lz to i8*, !dbg !8639
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !8639
  %32 = bitcast %struct._object** %it to i8*, !dbg !8639
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !8639
  %33 = bitcast %struct._object** %seq to i8*, !dbg !8639
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !8639
  %34 = bitcast %struct._object** %func to i8*, !dbg !8639
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !8639
  %35 = load %struct._object*, %struct._object** %retval, !dbg !8639
  ret %struct._object* %35, !dbg !8639
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @filterfalse_reduce(%struct.filterfalseobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.filterfalseobject*, align 8
  store %struct.filterfalseobject* %lz, %struct.filterfalseobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.filterfalseobject** %lz.addr, metadata !1487, metadata !2666), !dbg !8640
  %0 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8641, !tbaa !2683
  %1 = bitcast %struct.filterfalseobject* %0 to %struct._object*, !dbg !8642
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8643
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8643, !tbaa !2675
  %3 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8644, !tbaa !2683
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %3, i32 0, i32 1, !dbg !8645
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !8645, !tbaa !6893
  %5 = load %struct.filterfalseobject*, %struct.filterfalseobject** %lz.addr, align 8, !dbg !8646, !tbaa !2683
  %it = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %5, i32 0, i32 2, !dbg !8647
  %6 = load %struct._object*, %struct._object** %it, align 8, !dbg !8647, !tbaa !6935
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6), !dbg !8648
  ret %struct._object* %call, !dbg !8649
}

; Function Attrs: nounwind uwtable
define internal void @count_dealloc(%struct.countobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.countobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.countobject* %lz, %struct.countobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz.addr, metadata !1505, metadata !2666), !dbg !8650
  %0 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8651, !tbaa !2683
  %1 = bitcast %struct.countobject* %0 to i8*, !dbg !8651
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !8652
  br label %do.body, !dbg !8653

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8654
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8654
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1506, metadata !2666), !dbg !8656
  %3 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8657, !tbaa !2683
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %3, i32 0, i32 2, !dbg !8658
  %4 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8658, !tbaa !8659
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8656, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8661, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !8662
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !8663

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !8664

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8666
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8666
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1508, metadata !2666), !dbg !8668
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8669, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !8668, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8670, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !8672
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8673, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !8673
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8673, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !8674
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !8675

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !8676

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8678, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !8680
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8680, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !8681
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8681, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8682, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !8683
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8684
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !8684
  br label %do.cond, !dbg !8686

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8687

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !8689

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8691
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !8691
  br label %do.end.6, !dbg !8694

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !8695

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !8696
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !8696
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1511, metadata !2666), !dbg !8698
  %17 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8699, !tbaa !2683
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %17, i32 0, i32 3, !dbg !8700
  %18 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8700, !tbaa !8701
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !8698, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !8702, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !8703
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !8704

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !8705

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !8707
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !8707
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1513, metadata !2666), !dbg !8709
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !8710, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !8709, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !8711, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !8713
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !8714, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !8714
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !8714, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !8715
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !8716

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !8717

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !8719, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !8721
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !8721, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !8722
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !8722, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !8723, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !8724
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !8725
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !8725
  br label %do.cond.21, !dbg !8727

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !8728

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !8730

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !8732
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !8732
  br label %do.end.25, !dbg !8733

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8734, !tbaa !2683
  %31 = bitcast %struct.countobject* %30 to %struct._object*, !dbg !8735
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !8736
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !8736, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !8737
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !8737, !tbaa !2864
  %34 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8738, !tbaa !2683
  %35 = bitcast %struct.countobject* %34 to i8*, !dbg !8738
  call void %33(i8* %35), !dbg !8739
  ret void, !dbg !8740
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_repr(%struct.countobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.countobject*, align 8
  %step = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.countobject* %lz, %struct.countobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz.addr, metadata !1520, metadata !2666), !dbg !8741
  %0 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8742, !tbaa !2683
  %cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %0, i32 0, i32 1, !dbg !8744
  %1 = load i64, i64* %cnt, align 8, !dbg !8744, !tbaa !8745
  %cmp = icmp ne i64 %1, 9223372036854775807, !dbg !8746
  br i1 %cmp, label %if.then, label %if.end, !dbg !8747

if.then:                                          ; preds = %entry
  %2 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8748, !tbaa !2683
  %cnt1 = getelementptr inbounds %struct.countobject, %struct.countobject* %2, i32 0, i32 1, !dbg !8749
  %3 = load i64, i64* %cnt1, align 8, !dbg !8749, !tbaa !8745
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i32 0, i32 0), i64 %3), !dbg !8750
  store %struct._object* %call, %struct._object** %retval, !dbg !8751
  br label %return, !dbg !8751

if.end:                                           ; preds = %entry
  %4 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8752, !tbaa !2683
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %4, i32 0, i32 3, !dbg !8753
  %5 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8753, !tbaa !8701
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !8754
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8754, !tbaa !2675
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !8755
  %7 = load i64, i64* %tp_flags, align 8, !dbg !8755, !tbaa !3968
  %and = and i64 %7, 16777216, !dbg !8756
  %cmp2 = icmp ne i64 %and, 0, !dbg !8757
  br i1 %cmp2, label %if.then.3, label %if.end.14, !dbg !8758

if.then.3:                                        ; preds = %if.end
  %8 = bitcast i64* %step to i8*, !dbg !8759
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !8759
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1521, metadata !2666), !dbg !8760
  %9 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8761, !tbaa !2683
  %long_step4 = getelementptr inbounds %struct.countobject, %struct.countobject* %9, i32 0, i32 3, !dbg !8762
  %10 = load %struct._object*, %struct._object** %long_step4, align 8, !dbg !8762, !tbaa !8701
  %call5 = call i64 @PyLong_AsLong(%struct._object* %10), !dbg !8763
  store i64 %call5, i64* %step, align 8, !dbg !8760, !tbaa !3427
  %11 = load i64, i64* %step, align 8, !dbg !8764, !tbaa !3427
  %cmp6 = icmp eq i64 %11, -1, !dbg !8766
  br i1 %cmp6, label %land.lhs.true, label %if.end.9, !dbg !8767

land.lhs.true:                                    ; preds = %if.then.3
  %call7 = call %struct._object* @PyErr_Occurred(), !dbg !8768
  %tobool = icmp ne %struct._object* %call7, null, !dbg !8768
  br i1 %tobool, label %if.then.8, label %if.end.9, !dbg !8770

if.then.8:                                        ; preds = %land.lhs.true
  call void @PyErr_Clear(), !dbg !8771
  br label %if.end.9, !dbg !8773

if.end.9:                                         ; preds = %if.then.8, %land.lhs.true, %if.then.3
  %12 = load i64, i64* %step, align 8, !dbg !8774, !tbaa !3427
  %cmp10 = icmp eq i64 %12, 1, !dbg !8776
  br i1 %cmp10, label %if.then.11, label %if.end.13, !dbg !8777

if.then.11:                                       ; preds = %if.end.9
  %13 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8778, !tbaa !2683
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %13, i32 0, i32 2, !dbg !8780
  %14 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8780, !tbaa !8659
  %call12 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i32 0, i32 0), %struct._object* %14), !dbg !8781
  store %struct._object* %call12, %struct._object** %retval, !dbg !8782
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8782

if.end.13:                                        ; preds = %if.end.9
  store i32 0, i32* %cleanup.dest.slot, !dbg !8783
  br label %cleanup, !dbg !8783

cleanup:                                          ; preds = %if.end.13, %if.then.11
  %15 = bitcast i64* %step to i8*, !dbg !8784
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !8784
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.14, !dbg !8786

if.end.14:                                        ; preds = %cleanup.cont, %if.end
  %16 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8787, !tbaa !2683
  %long_cnt15 = getelementptr inbounds %struct.countobject, %struct.countobject* %16, i32 0, i32 2, !dbg !8788
  %17 = load %struct._object*, %struct._object** %long_cnt15, align 8, !dbg !8788, !tbaa !8659
  %18 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8789, !tbaa !2683
  %long_step16 = getelementptr inbounds %struct.countobject, %struct.countobject* %18, i32 0, i32 3, !dbg !8790
  %19 = load %struct._object*, %struct._object** %long_step16, align 8, !dbg !8790, !tbaa !8701
  %call17 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i32 0, i32 0), %struct._object* %17, %struct._object* %19), !dbg !8791
  store %struct._object* %call17, %struct._object** %retval, !dbg !8792
  br label %return, !dbg !8792

return:                                           ; preds = %LeafBlock, %if.end.14, %if.then
  %20 = load %struct._object*, %struct._object** %retval, !dbg !8793
  ret %struct._object* %20, !dbg !8793
}

; Function Attrs: nounwind uwtable
define internal i32 @count_traverse(%struct.countobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.countobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.countobject* %lz, %struct.countobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz.addr, metadata !1528, metadata !2666), !dbg !8794
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1529, metadata !2666), !dbg !8795
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1530, metadata !2666), !dbg !8796
  br label %do.body, !dbg !8797

do.body:                                          ; preds = %entry
  %0 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8798, !tbaa !2683
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %0, i32 0, i32 2, !dbg !8800
  %1 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8800, !tbaa !8659
  %tobool = icmp ne %struct._object* %1, null, !dbg !8801
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !8802

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !8803
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !8803
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1531, metadata !2666), !dbg !8805
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !8806, !tbaa !2683
  %4 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8807, !tbaa !2683
  %long_cnt1 = getelementptr inbounds %struct.countobject, %struct.countobject* %4, i32 0, i32 2, !dbg !8808
  %5 = load %struct._object*, %struct._object** %long_cnt1, align 8, !dbg !8808, !tbaa !8659
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !8809, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !8806
  store i32 %call, i32* %vret, align 4, !dbg !8805, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !8810, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !8810
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !8812

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !8813, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !8815
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8815

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !8816
  br label %cleanup, !dbg !8816

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !8818
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !8818
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !8821

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !8822

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !8825

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8826, !tbaa !2683
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %10, i32 0, i32 3, !dbg !8828
  %11 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8828, !tbaa !8701
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !8829
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !8830

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !8831
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !8831
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1535, metadata !2666), !dbg !8833
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !8834, !tbaa !2683
  %14 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8835, !tbaa !2683
  %long_step9 = getelementptr inbounds %struct.countobject, %struct.countobject* %14, i32 0, i32 3, !dbg !8836
  %15 = load %struct._object*, %struct._object** %long_step9, align 8, !dbg !8836, !tbaa !8701
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !8837, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !8834
  store i32 %call10, i32* %vret8, align 4, !dbg !8833, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !8838, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !8838
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !8840

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !8841, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !8843
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !8843

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !8844
  br label %cleanup.14, !dbg !8844

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !8846
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !8846
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !8849

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !8850

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !8853
  br label %return, !dbg !8853

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !8854
  ret i32 %20, !dbg !8854
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_next(%struct.countobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.countobject*, align 8
  store %struct.countobject* %lz, %struct.countobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz.addr, metadata !1541, metadata !2666), !dbg !8855
  %0 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8856, !tbaa !2683
  %cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %0, i32 0, i32 1, !dbg !8858
  %1 = load i64, i64* %cnt, align 8, !dbg !8858, !tbaa !8745
  %cmp = icmp eq i64 %1, 9223372036854775807, !dbg !8859
  br i1 %cmp, label %if.then, label %if.end, !dbg !8860

if.then:                                          ; preds = %entry
  %2 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8861, !tbaa !2683
  %call = call %struct._object* @count_nextlong(%struct.countobject* %2), !dbg !8862
  store %struct._object* %call, %struct._object** %retval, !dbg !8863
  br label %return, !dbg !8863

if.end:                                           ; preds = %entry
  %3 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !8864, !tbaa !2683
  %cnt1 = getelementptr inbounds %struct.countobject, %struct.countobject* %3, i32 0, i32 1, !dbg !8865
  %4 = load i64, i64* %cnt1, align 8, !dbg !8866, !tbaa !8745
  %inc = add i64 %4, 1, !dbg !8866
  store i64 %inc, i64* %cnt1, align 8, !dbg !8866, !tbaa !8745
  %call2 = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !8867
  store %struct._object* %call2, %struct._object** %retval, !dbg !8868
  br label %return, !dbg !8868

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct._object*, %struct._object** %retval, !dbg !8869
  ret %struct._object* %5, !dbg !8869
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %lz = alloca %struct.countobject*, align 8
  %slow_mode = alloca i32, align 4
  %cnt = alloca i64, align 8
  %long_cnt = alloca %struct._object*, align 8
  %long_step = alloca %struct._object*, align 8
  %step = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp77 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1552, metadata !2666), !dbg !8870
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1553, metadata !2666), !dbg !8871
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1554, metadata !2666), !dbg !8872
  %0 = bitcast %struct.countobject** %lz to i8*, !dbg !8873
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8873
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz, metadata !1555, metadata !2666), !dbg !8874
  %1 = bitcast i32* %slow_mode to i8*, !dbg !8875
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !8875
  call void @llvm.dbg.declare(metadata i32* %slow_mode, metadata !1556, metadata !2666), !dbg !8876
  store i32 0, i32* %slow_mode, align 4, !dbg !8876, !tbaa !2691
  %2 = bitcast i64* %cnt to i8*, !dbg !8877
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8877
  call void @llvm.dbg.declare(metadata i64* %cnt, metadata !1557, metadata !2666), !dbg !8878
  store i64 0, i64* %cnt, align 8, !dbg !8878, !tbaa !3427
  %3 = bitcast %struct._object** %long_cnt to i8*, !dbg !8879
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8879
  call void @llvm.dbg.declare(metadata %struct._object** %long_cnt, metadata !1558, metadata !2666), !dbg !8880
  store %struct._object* null, %struct._object** %long_cnt, align 8, !dbg !8880, !tbaa !2683
  %4 = bitcast %struct._object** %long_step to i8*, !dbg !8881
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8881
  call void @llvm.dbg.declare(metadata %struct._object** %long_step, metadata !1559, metadata !2666), !dbg !8882
  store %struct._object* null, %struct._object** %long_step, align 8, !dbg !8882, !tbaa !2683
  %5 = bitcast i64* %step to i8*, !dbg !8883
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8883
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1560, metadata !2666), !dbg !8884
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8885, !tbaa !2683
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8887, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @count_new.kwlist, i32 0, i32 0), %struct._object** %long_cnt, %struct._object** %long_step), !dbg !8888
  %tobool = icmp ne i32 %call, 0, !dbg !8888
  br i1 %tobool, label %if.end, label %if.then, !dbg !8889

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8890

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8891, !tbaa !2683
  %cmp = icmp ne %struct._object* %8, null, !dbg !8893
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8894

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8895, !tbaa !2683
  %call1 = call i32 @PyNumber_Check(%struct._object* %9), !dbg !8897
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8897
  br i1 %tobool2, label %lor.lhs.false, label %if.then.7, !dbg !8898

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %10 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8899, !tbaa !2683
  %cmp3 = icmp ne %struct._object* %10, null, !dbg !8900
  br i1 %cmp3, label %land.lhs.true.4, label %if.end.8, !dbg !8901

land.lhs.true.4:                                  ; preds = %lor.lhs.false
  %11 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8902, !tbaa !2683
  %call5 = call i32 @PyNumber_Check(%struct._object* %11), !dbg !8903
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8903
  br i1 %tobool6, label %if.end.8, label %if.then.7, !dbg !8904

if.then.7:                                        ; preds = %land.lhs.true.4, %land.lhs.true
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8905, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i32 0, i32 0)), !dbg !8907
  store %struct._object* null, %struct._object** %retval, !dbg !8908
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8908

if.end.8:                                         ; preds = %land.lhs.true.4, %lor.lhs.false
  %13 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8909, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %13, null, !dbg !8911
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !8912

if.then.10:                                       ; preds = %if.end.8
  %14 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8913, !tbaa !2683
  %call11 = call i64 @PyLong_AsSsize_t(%struct._object* %14), !dbg !8915
  store i64 %call11, i64* %cnt, align 8, !dbg !8916, !tbaa !3427
  %15 = load i64, i64* %cnt, align 8, !dbg !8917, !tbaa !3427
  %cmp12 = icmp eq i64 %15, -1, !dbg !8919
  br i1 %cmp12, label %land.lhs.true.13, label %lor.lhs.false.16, !dbg !8920

land.lhs.true.13:                                 ; preds = %if.then.10
  %call14 = call %struct._object* @PyErr_Occurred(), !dbg !8921
  %tobool15 = icmp ne %struct._object* %call14, null, !dbg !8921
  br i1 %tobool15, label %if.then.18, label %lor.lhs.false.16, !dbg !8923

lor.lhs.false.16:                                 ; preds = %land.lhs.true.13, %if.then.10
  %16 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8924, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8927
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8927, !tbaa !2675
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 19, !dbg !8928
  %18 = load i64, i64* %tp_flags, align 8, !dbg !8928, !tbaa !3968
  %and = and i64 %18, 16777216, !dbg !8929
  %cmp17 = icmp ne i64 %and, 0, !dbg !8930
  br i1 %cmp17, label %if.end.19, label %if.then.18, !dbg !8931

if.then.18:                                       ; preds = %lor.lhs.false.16, %land.lhs.true.13
  call void @PyErr_Clear(), !dbg !8932
  store i32 1, i32* %slow_mode, align 4, !dbg !8934, !tbaa !2691
  br label %if.end.19, !dbg !8935

if.end.19:                                        ; preds = %if.then.18, %lor.lhs.false.16
  %19 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8936, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !8937
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !8938, !tbaa !2722
  %inc = add i64 %20, 1, !dbg !8938
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8938, !tbaa !2722
  br label %if.end.21, !dbg !8939

if.else:                                          ; preds = %if.end.8
  store i64 0, i64* %cnt, align 8, !dbg !8940, !tbaa !3427
  %call20 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !8942
  store %struct._object* %call20, %struct._object** %long_cnt, align 8, !dbg !8943, !tbaa !2683
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.end.19
  %21 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8944, !tbaa !2683
  %cmp22 = icmp eq %struct._object* %21, null, !dbg !8945
  br i1 %cmp22, label %if.then.23, label %if.else.34, !dbg !8946

if.then.23:                                       ; preds = %if.end.21
  %call24 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !8947
  store %struct._object* %call24, %struct._object** %long_step, align 8, !dbg !8948, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8949, !tbaa !2683
  %cmp25 = icmp eq %struct._object* %22, null, !dbg !8950
  br i1 %cmp25, label %if.then.26, label %if.end.33, !dbg !8951

if.then.26:                                       ; preds = %if.then.23
  br label %do.body, !dbg !8952

do.body:                                          ; preds = %if.then.26
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8953
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !8953
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1561, metadata !2666), !dbg !8955
  %24 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !8956, !tbaa !2683
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !8955, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8957, !tbaa !2683
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !8959
  %26 = load i64, i64* %ob_refcnt27, align 8, !dbg !8960, !tbaa !2722
  %dec = add i64 %26, -1, !dbg !8960
  store i64 %dec, i64* %ob_refcnt27, align 8, !dbg !8960, !tbaa !2722
  %cmp28 = icmp ne i64 %dec, 0, !dbg !8961
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !8962

if.then.29:                                       ; preds = %do.body
  br label %if.end.32, !dbg !8963

if.else.30:                                       ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8965, !tbaa !2683
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !8967
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !8967, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !8968
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8968, !tbaa !2768
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8969, !tbaa !2683
  call void %29(%struct._object* %30), !dbg !8970
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.30, %if.then.29
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8971
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !8971
  br label %do.cond, !dbg !8973

do.cond:                                          ; preds = %if.end.32
  br label %do.end, !dbg !8974

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8976
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8976

if.end.33:                                        ; preds = %if.then.23
  br label %if.end.37, !dbg !8977

if.else.34:                                       ; preds = %if.end.21
  %32 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8978, !tbaa !2683
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !8979
  %33 = load i64, i64* %ob_refcnt35, align 8, !dbg !8980, !tbaa !2722
  %inc36 = add i64 %33, 1, !dbg !8980
  store i64 %inc36, i64* %ob_refcnt35, align 8, !dbg !8980, !tbaa !2722
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.end.33
  %34 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !8981, !tbaa !2683
  %call38 = call i64 @PyLong_AsLong(%struct._object* %34), !dbg !8982
  store i64 %call38, i64* %step, align 8, !dbg !8983, !tbaa !3427
  %35 = load i64, i64* %step, align 8, !dbg !8984, !tbaa !3427
  %cmp39 = icmp ne i64 %35, 1, !dbg !8986
  br i1 %cmp39, label %if.then.40, label %if.end.47, !dbg !8987

if.then.40:                                       ; preds = %if.end.37
  store i32 1, i32* %slow_mode, align 4, !dbg !8988, !tbaa !2691
  %36 = load i64, i64* %step, align 8, !dbg !8990, !tbaa !3427
  %cmp41 = icmp eq i64 %36, -1, !dbg !8992
  br i1 %cmp41, label %land.lhs.true.42, label %if.end.46, !dbg !8993

land.lhs.true.42:                                 ; preds = %if.then.40
  %call43 = call %struct._object* @PyErr_Occurred(), !dbg !8994
  %tobool44 = icmp ne %struct._object* %call43, null, !dbg !8994
  br i1 %tobool44, label %if.then.45, label %if.end.46, !dbg !8996

if.then.45:                                       ; preds = %land.lhs.true.42
  call void @PyErr_Clear(), !dbg !8997
  br label %if.end.46, !dbg !8997

if.end.46:                                        ; preds = %if.then.45, %land.lhs.true.42, %if.then.40
  br label %if.end.47, !dbg !8998

if.end.47:                                        ; preds = %if.end.46, %if.end.37
  %37 = load i32, i32* %slow_mode, align 4, !dbg !8999, !tbaa !2691
  %tobool48 = icmp ne i32 %37, 0, !dbg !8999
  br i1 %tobool48, label %if.then.49, label %if.else.50, !dbg !9000

if.then.49:                                       ; preds = %if.end.47
  store i64 9223372036854775807, i64* %cnt, align 8, !dbg !9001, !tbaa !3427
  br label %if.end.69, !dbg !9002

if.else.50:                                       ; preds = %if.end.47
  br label %do.body.51, !dbg !9003

do.body.51:                                       ; preds = %if.else.50
  %38 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9004
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !9004
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1567, metadata !2666), !dbg !9006
  %39 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9007, !tbaa !2683
  store %struct._object* %39, %struct._object** %_py_tmp, align 8, !dbg !9006, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9008, !tbaa !2683
  %cmp52 = icmp ne %struct._object* %40, null, !dbg !9009
  br i1 %cmp52, label %if.then.53, label %if.end.66, !dbg !9010

if.then.53:                                       ; preds = %do.body.51
  store %struct._object* null, %struct._object** %long_cnt, align 8, !dbg !9011, !tbaa !2683
  br label %do.body.54, !dbg !9013

do.body.54:                                       ; preds = %if.then.53
  %41 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !9014
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !9014
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !1570, metadata !2666), !dbg !9016
  %42 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9017, !tbaa !2683
  store %struct._object* %42, %struct._object** %_py_decref_tmp55, align 8, !dbg !9016, !tbaa !2683
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !9018, !tbaa !2683
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !9020
  %44 = load i64, i64* %ob_refcnt56, align 8, !dbg !9021, !tbaa !2722
  %dec57 = add i64 %44, -1, !dbg !9021
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !9021, !tbaa !2722
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !9022
  br i1 %cmp58, label %if.then.59, label %if.else.60, !dbg !9023

if.then.59:                                       ; preds = %do.body.54
  br label %if.end.63, !dbg !9024

if.else.60:                                       ; preds = %do.body.54
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !9026, !tbaa !2683
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !9028
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !9028, !tbaa !2675
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !9029
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !9029, !tbaa !2768
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !9030, !tbaa !2683
  call void %47(%struct._object* %48), !dbg !9031
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %49 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !9032
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !9032
  br label %do.cond.64, !dbg !9034

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !9035

do.end.65:                                        ; preds = %do.cond.64
  br label %if.end.66, !dbg !9037

if.end.66:                                        ; preds = %do.end.65, %do.body.51
  %50 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9039
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !9039
  br label %do.cond.67, !dbg !9042

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !9043

do.end.68:                                        ; preds = %do.cond.67
  br label %if.end.69

if.end.69:                                        ; preds = %do.end.68, %if.then.49
  %51 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !9045, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 36, !dbg !9046
  %52 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !9046, !tbaa !3097
  %53 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !9047, !tbaa !2683
  %call70 = call %struct._object* %52(%struct._typeobject* %53, i64 0), !dbg !9045
  %54 = bitcast %struct._object* %call70 to %struct.countobject*, !dbg !9048
  store %struct.countobject* %54, %struct.countobject** %lz, align 8, !dbg !9049, !tbaa !2683
  %55 = load %struct.countobject*, %struct.countobject** %lz, align 8, !dbg !9050, !tbaa !2683
  %cmp71 = icmp eq %struct.countobject* %55, null, !dbg !9051
  br i1 %cmp71, label %if.then.72, label %if.end.91, !dbg !9052

if.then.72:                                       ; preds = %if.end.69
  br label %do.body.73, !dbg !9053

do.body.73:                                       ; preds = %if.then.72
  %56 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9054
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !9054
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1574, metadata !2666), !dbg !9056
  %57 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9057, !tbaa !2683
  store %struct._object* %57, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9056, !tbaa !2683
  %58 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9058, !tbaa !2683
  %cmp74 = icmp ne %struct._object* %58, null, !dbg !9059
  br i1 %cmp74, label %if.then.75, label %if.end.88, !dbg !9060

if.then.75:                                       ; preds = %do.body.73
  br label %do.body.76, !dbg !9061

do.body.76:                                       ; preds = %if.then.75
  %59 = bitcast %struct._object** %_py_decref_tmp77 to i8*, !dbg !9063
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !9063
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp77, metadata !1578, metadata !2666), !dbg !9065
  %60 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9066, !tbaa !2683
  store %struct._object* %60, %struct._object** %_py_decref_tmp77, align 8, !dbg !9065, !tbaa !2683
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !9067, !tbaa !2683
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !9069
  %62 = load i64, i64* %ob_refcnt78, align 8, !dbg !9070, !tbaa !2722
  %dec79 = add i64 %62, -1, !dbg !9070
  store i64 %dec79, i64* %ob_refcnt78, align 8, !dbg !9070, !tbaa !2722
  %cmp80 = icmp ne i64 %dec79, 0, !dbg !9071
  br i1 %cmp80, label %if.then.81, label %if.else.82, !dbg !9072

if.then.81:                                       ; preds = %do.body.76
  br label %if.end.85, !dbg !9073

if.else.82:                                       ; preds = %do.body.76
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !9075, !tbaa !2683
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !9077
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !9077, !tbaa !2675
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !9078
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !9078, !tbaa !2768
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !9079, !tbaa !2683
  call void %65(%struct._object* %66), !dbg !9080
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  %67 = bitcast %struct._object** %_py_decref_tmp77 to i8*, !dbg !9081
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !9081
  br label %do.cond.86, !dbg !9083

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !9084

do.end.87:                                        ; preds = %do.cond.86
  br label %if.end.88, !dbg !9086

if.end.88:                                        ; preds = %do.end.87, %do.body.73
  %68 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9088
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !9088
  br label %do.cond.89, !dbg !9091

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !9092

do.end.90:                                        ; preds = %do.cond.89
  store %struct._object* null, %struct._object** %retval, !dbg !9094
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9094

if.end.91:                                        ; preds = %if.end.69
  %69 = load i64, i64* %cnt, align 8, !dbg !9095, !tbaa !3427
  %70 = load %struct.countobject*, %struct.countobject** %lz, align 8, !dbg !9096, !tbaa !2683
  %cnt92 = getelementptr inbounds %struct.countobject, %struct.countobject* %70, i32 0, i32 1, !dbg !9097
  store i64 %69, i64* %cnt92, align 8, !dbg !9098, !tbaa !8745
  %71 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9099, !tbaa !2683
  %72 = load %struct.countobject*, %struct.countobject** %lz, align 8, !dbg !9100, !tbaa !2683
  %long_cnt93 = getelementptr inbounds %struct.countobject, %struct.countobject* %72, i32 0, i32 2, !dbg !9101
  store %struct._object* %71, %struct._object** %long_cnt93, align 8, !dbg !9102, !tbaa !8659
  %73 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !9103, !tbaa !2683
  %74 = load %struct.countobject*, %struct.countobject** %lz, align 8, !dbg !9104, !tbaa !2683
  %long_step94 = getelementptr inbounds %struct.countobject, %struct.countobject* %74, i32 0, i32 3, !dbg !9105
  store %struct._object* %73, %struct._object** %long_step94, align 8, !dbg !9106, !tbaa !8701
  %75 = load %struct.countobject*, %struct.countobject** %lz, align 8, !dbg !9107, !tbaa !2683
  %76 = bitcast %struct.countobject* %75 to %struct._object*, !dbg !9108
  store %struct._object* %76, %struct._object** %retval, !dbg !9109
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9109

cleanup:                                          ; preds = %if.end.91, %do.end.90, %do.end, %if.then.7, %if.then
  %77 = bitcast i64* %step to i8*, !dbg !9110
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !9110
  %78 = bitcast %struct._object** %long_step to i8*, !dbg !9110
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !9110
  %79 = bitcast %struct._object** %long_cnt to i8*, !dbg !9110
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !9110
  %80 = bitcast i64* %cnt to i8*, !dbg !9110
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !9110
  %81 = bitcast i32* %slow_mode to i8*, !dbg !9110
  call void @llvm.lifetime.end(i64 4, i8* %81) #1, !dbg !9110
  %82 = bitcast %struct.countobject** %lz to i8*, !dbg !9110
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !9110
  %83 = load %struct._object*, %struct._object** %retval, !dbg !9110
  ret %struct._object* %83, !dbg !9110
}

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare i64 @PyLong_AsLong(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_nextlong(%struct.countobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.countobject*, align 8
  %long_cnt = alloca %struct._object*, align 8
  %stepped_up = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.countobject* %lz, %struct.countobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz.addr, metadata !1544, metadata !2666), !dbg !9111
  %0 = bitcast %struct._object** %long_cnt to i8*, !dbg !9112
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9112
  call void @llvm.dbg.declare(metadata %struct._object** %long_cnt, metadata !1545, metadata !2666), !dbg !9113
  %1 = bitcast %struct._object** %stepped_up to i8*, !dbg !9114
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9114
  call void @llvm.dbg.declare(metadata %struct._object** %stepped_up, metadata !1546, metadata !2666), !dbg !9115
  %2 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9116, !tbaa !2683
  %long_cnt1 = getelementptr inbounds %struct.countobject, %struct.countobject* %2, i32 0, i32 2, !dbg !9117
  %3 = load %struct._object*, %struct._object** %long_cnt1, align 8, !dbg !9117, !tbaa !8659
  store %struct._object* %3, %struct._object** %long_cnt, align 8, !dbg !9118, !tbaa !2683
  %4 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9119, !tbaa !2683
  %cmp = icmp eq %struct._object* %4, null, !dbg !9121
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !9122

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyLong_FromSsize_t(i64 9223372036854775807), !dbg !9123
  store %struct._object* %call, %struct._object** %long_cnt, align 8, !dbg !9125, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9126, !tbaa !2683
  %cmp2 = icmp eq %struct._object* %5, null, !dbg !9128
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !9129

if.then.3:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !9130
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9130

if.end:                                           ; preds = %if.then
  br label %if.end.4, !dbg !9131

if.end.4:                                         ; preds = %if.end, %entry
  %6 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9132, !tbaa !2683
  %7 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9133, !tbaa !2683
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %7, i32 0, i32 3, !dbg !9134
  %8 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !9134, !tbaa !8701
  %call5 = call %struct._object* @PyNumber_Add(%struct._object* %6, %struct._object* %8), !dbg !9135
  store %struct._object* %call5, %struct._object** %stepped_up, align 8, !dbg !9136, !tbaa !2683
  %9 = load %struct._object*, %struct._object** %stepped_up, align 8, !dbg !9137, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %9, null, !dbg !9139
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !9140

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !9141
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9141

if.end.8:                                         ; preds = %if.end.4
  %10 = load %struct._object*, %struct._object** %stepped_up, align 8, !dbg !9142, !tbaa !2683
  %11 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9143, !tbaa !2683
  %long_cnt9 = getelementptr inbounds %struct.countobject, %struct.countobject* %11, i32 0, i32 2, !dbg !9144
  store %struct._object* %10, %struct._object** %long_cnt9, align 8, !dbg !9145, !tbaa !8659
  %12 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9146, !tbaa !2683
  store %struct._object* %12, %struct._object** %retval, !dbg !9147
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9147

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then.3
  %13 = bitcast %struct._object** %stepped_up to i8*, !dbg !9148
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !9148
  %14 = bitcast %struct._object** %long_cnt to i8*, !dbg !9148
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !9148
  %15 = load %struct._object*, %struct._object** %retval, !dbg !9148
  ret %struct._object* %15, !dbg !9148
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_reduce(%struct.countobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.countobject*, align 8
  store %struct.countobject* %lz, %struct.countobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.countobject** %lz.addr, metadata !1549, metadata !2666), !dbg !9149
  %0 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9150, !tbaa !2683
  %cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %0, i32 0, i32 1, !dbg !9152
  %1 = load i64, i64* %cnt, align 8, !dbg !9152, !tbaa !8745
  %cmp = icmp eq i64 %1, 9223372036854775807, !dbg !9153
  br i1 %cmp, label %if.then, label %if.end, !dbg !9154

if.then:                                          ; preds = %entry
  %2 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9155, !tbaa !2683
  %3 = bitcast %struct.countobject* %2 to %struct._object*, !dbg !9156
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !9157
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9157, !tbaa !2675
  %5 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9158, !tbaa !2683
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %5, i32 0, i32 2, !dbg !9159
  %6 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !9159, !tbaa !8659
  %7 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9160, !tbaa !2683
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %7, i32 0, i32 3, !dbg !9161
  %8 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !9161, !tbaa !8701
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._typeobject* %4, %struct._object* %6, %struct._object* %8), !dbg !9162
  store %struct._object* %call, %struct._object** %retval, !dbg !9163
  br label %return, !dbg !9163

if.end:                                           ; preds = %entry
  %9 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9164, !tbaa !2683
  %10 = bitcast %struct.countobject* %9 to %struct._object*, !dbg !9165
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !9166
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !9166, !tbaa !2675
  %12 = load %struct.countobject*, %struct.countobject** %lz.addr, align 8, !dbg !9167, !tbaa !2683
  %cnt2 = getelementptr inbounds %struct.countobject, %struct.countobject* %12, i32 0, i32 1, !dbg !9168
  %13 = load i64, i64* %cnt2, align 8, !dbg !9168, !tbaa !8745
  %call3 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), %struct._typeobject* %11, i64 %13), !dbg !9169
  store %struct._object* %call3, %struct._object** %retval, !dbg !9170
  br label %return, !dbg !9170

return:                                           ; preds = %if.end, %if.then
  %14 = load %struct._object*, %struct._object** %retval, !dbg !9171
  ret %struct._object* %14, !dbg !9171
}

declare i32 @PyNumber_Check(%struct._object*) #3

declare %struct._object* @PyLong_FromLong(i64) #3

; Function Attrs: nounwind uwtable
define internal void @zip_longest_dealloc(%struct.ziplongestobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.ziplongestobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_xdecref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  store %struct.ziplongestobject* %lz, %struct.ziplongestobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.ziplongestobject** %lz.addr, metadata !1585, metadata !2666), !dbg !9172
  %0 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9173, !tbaa !2683
  %1 = bitcast %struct.ziplongestobject* %0 to i8*, !dbg !9173
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !9174
  br label %do.body, !dbg !9175

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9176
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9176
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1586, metadata !2666), !dbg !9178
  %3 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9179, !tbaa !2683
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %3, i32 0, i32 3, !dbg !9180
  %4 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9180, !tbaa !9181
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9178, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9183, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !9184
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !9185

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !9186

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9188
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !9188
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1588, metadata !2666), !dbg !9190
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9191, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !9190, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9192, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !9194
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !9195, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !9195
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9195, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !9196
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !9197

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !9198

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9200, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !9202
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9202, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !9203
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9203, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9204, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !9205
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9206
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !9206
  br label %do.cond, !dbg !9208

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !9209

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !9211

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9213
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !9213
  br label %do.end.6, !dbg !9216

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !9217

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !9218
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !9218
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1591, metadata !2666), !dbg !9220
  %17 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9221, !tbaa !2683
  %result = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %17, i32 0, i32 4, !dbg !9222
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !9222, !tbaa !9223
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !9220, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !9224, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !9225
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !9226

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !9227

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !9229
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !9229
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1593, metadata !2666), !dbg !9231
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !9232, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !9231, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !9233, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !9235
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !9236, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !9236
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !9236, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !9237
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !9238

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !9239

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !9241, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !9243
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !9243, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !9244
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !9244, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !9245, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !9246
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !9247
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !9247
  br label %do.cond.21, !dbg !9249

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !9250

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !9252

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !9254
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !9254
  br label %do.end.25, !dbg !9255

do.end.25:                                        ; preds = %if.end.23
  br label %do.body.26, !dbg !9256

do.body.26:                                       ; preds = %do.end.25
  %30 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !9257
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !9257
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp27, metadata !1596, metadata !2666), !dbg !9259
  %31 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9260, !tbaa !2683
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %31, i32 0, i32 5, !dbg !9261
  %32 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !9261, !tbaa !9262
  store %struct._object* %32, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !9259, !tbaa !2683
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !9263, !tbaa !2683
  %cmp28 = icmp ne %struct._object* %33, null, !dbg !9264
  br i1 %cmp28, label %if.then.29, label %if.end.42, !dbg !9265

if.then.29:                                       ; preds = %do.body.26
  br label %do.body.30, !dbg !9266

do.body.30:                                       ; preds = %if.then.29
  %34 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !9268
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !9268
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !1598, metadata !2666), !dbg !9270
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !9271, !tbaa !2683
  store %struct._object* %35, %struct._object** %_py_decref_tmp31, align 8, !dbg !9270, !tbaa !2683
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !9272, !tbaa !2683
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !9274
  %37 = load i64, i64* %ob_refcnt32, align 8, !dbg !9275, !tbaa !2722
  %dec33 = add i64 %37, -1, !dbg !9275
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !9275, !tbaa !2722
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !9276
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !9277

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !9278

if.else.36:                                       ; preds = %do.body.30
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !9280, !tbaa !2683
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !9282
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !9282, !tbaa !2675
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !9283
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !9283, !tbaa !2768
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !9284, !tbaa !2683
  call void %40(%struct._object* %41), !dbg !9285
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %42 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !9286
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !9286
  br label %do.cond.40, !dbg !9288

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !9289

do.end.41:                                        ; preds = %do.cond.40
  br label %if.end.42, !dbg !9291

if.end.42:                                        ; preds = %do.end.41, %do.body.26
  %43 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !9293
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !9293
  br label %do.end.44, !dbg !9294

do.end.44:                                        ; preds = %if.end.42
  %44 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9295, !tbaa !2683
  %45 = bitcast %struct.ziplongestobject* %44 to %struct._object*, !dbg !9296
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !9297
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !9297, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 38, !dbg !9298
  %47 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !9298, !tbaa !2864
  %48 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9299, !tbaa !2683
  %49 = bitcast %struct.ziplongestobject* %48 to i8*, !dbg !9299
  call void %47(i8* %49), !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: nounwind uwtable
define internal i32 @zip_longest_traverse(%struct.ziplongestobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.ziplongestobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  store %struct.ziplongestobject* %lz, %struct.ziplongestobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.ziplongestobject** %lz.addr, metadata !1605, metadata !2666), !dbg !9302
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1606, metadata !2666), !dbg !9303
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1607, metadata !2666), !dbg !9304
  br label %do.body, !dbg !9305

do.body:                                          ; preds = %entry
  %0 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9306, !tbaa !2683
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %0, i32 0, i32 3, !dbg !9308
  %1 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9308, !tbaa !9181
  %tobool = icmp ne %struct._object* %1, null, !dbg !9309
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !9310

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !9311
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1608, metadata !2666), !dbg !9313
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9314, !tbaa !2683
  %4 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9315, !tbaa !2683
  %ittuple1 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %4, i32 0, i32 3, !dbg !9316
  %5 = load %struct._object*, %struct._object** %ittuple1, align 8, !dbg !9316, !tbaa !9181
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !9317, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !9314
  store i32 %call, i32* %vret, align 4, !dbg !9313, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !9318, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !9318
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !9320

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !9321, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !9323
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9323

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !9324
  br label %cleanup, !dbg !9324

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !9326
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !9326
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !9329

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !9330

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !9333

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9334, !tbaa !2683
  %result = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %10, i32 0, i32 4, !dbg !9336
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !9336, !tbaa !9223
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !9337
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !9338

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !9339
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !9339
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1612, metadata !2666), !dbg !9341
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9342, !tbaa !2683
  %14 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9343, !tbaa !2683
  %result9 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %14, i32 0, i32 4, !dbg !9344
  %15 = load %struct._object*, %struct._object** %result9, align 8, !dbg !9344, !tbaa !9223
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !9345, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !9342
  store i32 %call10, i32* %vret8, align 4, !dbg !9341, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !9346, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !9346
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !9348

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !9349, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !9351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !9351

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !9352
  br label %cleanup.14, !dbg !9352

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !9354
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !9354
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !9357

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !9358

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !9361

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9362, !tbaa !2683
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %20, i32 0, i32 5, !dbg !9364
  %21 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !9364, !tbaa !9262
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !9365
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !9366

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !9367
  call void @llvm.lifetime.start(i64 4, i8* %22) #1, !dbg !9367
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1616, metadata !2666), !dbg !9369
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9370, !tbaa !2683
  %24 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9371, !tbaa !2683
  %fillvalue23 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %24, i32 0, i32 5, !dbg !9372
  %25 = load %struct._object*, %struct._object** %fillvalue23, align 8, !dbg !9372, !tbaa !9262
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !9373, !tbaa !2683
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !9370
  store i32 %call24, i32* %vret22, align 4, !dbg !9369, !tbaa !2691
  %27 = load i32, i32* %vret22, align 4, !dbg !9374, !tbaa !2691
  %tobool25 = icmp ne i32 %27, 0, !dbg !9374
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !9376

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !9377, !tbaa !2691
  store i32 %28, i32* %retval, !dbg !9379
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !9379

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !9380
  br label %cleanup.28, !dbg !9380

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !9382
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !9382
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !9385

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !9386

do.end.32:                                        ; preds = %if.end.31
  store i32 0, i32* %retval, !dbg !9389
  br label %return, !dbg !9389

return:                                           ; preds = %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.32
  %30 = load i32, i32* %retval, !dbg !9390
  ret i32 %30, !dbg !9390
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_next(%struct.ziplongestobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.ziplongestobject*, align 8
  %i = alloca i64, align 8
  %tuplesize = alloca i64, align 8
  %result = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %olditem = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp99 = alloca %struct._object*, align 8
  %_py_decref_tmp119 = alloca %struct._object*, align 8
  store %struct.ziplongestobject* %lz, %struct.ziplongestobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.ziplongestobject** %lz.addr, metadata !1624, metadata !2666), !dbg !9391
  %0 = bitcast i64* %i to i8*, !dbg !9392
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9392
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1625, metadata !2666), !dbg !9393
  %1 = bitcast i64* %tuplesize to i8*, !dbg !9394
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9394
  call void @llvm.dbg.declare(metadata i64* %tuplesize, metadata !1626, metadata !2666), !dbg !9395
  %2 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9396, !tbaa !2683
  %tuplesize1 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %2, i32 0, i32 1, !dbg !9397
  %3 = load i64, i64* %tuplesize1, align 8, !dbg !9397, !tbaa !9398
  store i64 %3, i64* %tuplesize, align 8, !dbg !9395, !tbaa !3427
  %4 = bitcast %struct._object** %result to i8*, !dbg !9399
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !9399
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1627, metadata !2666), !dbg !9400
  %5 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9401, !tbaa !2683
  %result2 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %5, i32 0, i32 4, !dbg !9402
  %6 = load %struct._object*, %struct._object** %result2, align 8, !dbg !9402, !tbaa !9223
  store %struct._object* %6, %struct._object** %result, align 8, !dbg !9400, !tbaa !2683
  %7 = bitcast %struct._object** %it to i8*, !dbg !9403
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !9403
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1628, metadata !2666), !dbg !9404
  %8 = bitcast %struct._object** %item to i8*, !dbg !9405
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !9405
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1629, metadata !2666), !dbg !9406
  %9 = bitcast %struct._object** %olditem to i8*, !dbg !9407
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !9407
  call void @llvm.dbg.declare(metadata %struct._object** %olditem, metadata !1630, metadata !2666), !dbg !9408
  %10 = load i64, i64* %tuplesize, align 8, !dbg !9409, !tbaa !3427
  %cmp = icmp eq i64 %10, 0, !dbg !9411
  br i1 %cmp, label %if.then, label %if.end, !dbg !9412

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9413
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9413

if.end:                                           ; preds = %entry
  %11 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9414, !tbaa !2683
  %numactive = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %11, i32 0, i32 2, !dbg !9416
  %12 = load i64, i64* %numactive, align 8, !dbg !9416, !tbaa !9417
  %cmp3 = icmp eq i64 %12, 0, !dbg !9418
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !9419

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !9420
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9420

if.end.5:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %result, align 8, !dbg !9421, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !9422
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !9422, !tbaa !2722
  %cmp6 = icmp eq i64 %14, 1, !dbg !9423
  br i1 %cmp6, label %if.then.7, label %if.else.68, !dbg !9424

if.then.7:                                        ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %result, align 8, !dbg !9425, !tbaa !2683
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !9426
  %16 = load i64, i64* %ob_refcnt8, align 8, !dbg !9427, !tbaa !2722
  %inc = add i64 %16, 1, !dbg !9427
  store i64 %inc, i64* %ob_refcnt8, align 8, !dbg !9427, !tbaa !2722
  store i64 0, i64* %i, align 8, !dbg !9428, !tbaa !3427
  br label %for.cond, !dbg !9429

for.cond:                                         ; preds = %for.inc, %if.then.7
  %17 = load i64, i64* %i, align 8, !dbg !9430, !tbaa !3427
  %18 = load i64, i64* %tuplesize, align 8, !dbg !9433, !tbaa !3427
  %cmp9 = icmp slt i64 %17, %18, !dbg !9434
  br i1 %cmp9, label %for.body, label %for.end, !dbg !9435

for.body:                                         ; preds = %for.cond
  %19 = load i64, i64* %i, align 8, !dbg !9436, !tbaa !3427
  %20 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9437, !tbaa !2683
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %20, i32 0, i32 3, !dbg !9438
  %21 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9438, !tbaa !9181
  %22 = bitcast %struct._object* %21 to %struct.PyTupleObject*, !dbg !9439
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %22, i32 0, i32 1, !dbg !9440
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %19, !dbg !9441
  %23 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9441, !tbaa !2683
  store %struct._object* %23, %struct._object** %it, align 8, !dbg !9442, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %it, align 8, !dbg !9443, !tbaa !2683
  %cmp10 = icmp eq %struct._object* %24, null, !dbg !9444
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !9445

if.then.11:                                       ; preds = %for.body
  %25 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9446, !tbaa !2683
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %25, i32 0, i32 5, !dbg !9448
  %26 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !9448, !tbaa !9262
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !9449
  %27 = load i64, i64* %ob_refcnt12, align 8, !dbg !9450, !tbaa !2722
  %inc13 = add i64 %27, 1, !dbg !9450
  store i64 %inc13, i64* %ob_refcnt12, align 8, !dbg !9450, !tbaa !2722
  %28 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9451, !tbaa !2683
  %fillvalue14 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %28, i32 0, i32 5, !dbg !9452
  %29 = load %struct._object*, %struct._object** %fillvalue14, align 8, !dbg !9452, !tbaa !9262
  store %struct._object* %29, %struct._object** %item, align 8, !dbg !9453, !tbaa !2683
  br label %if.end.50, !dbg !9454

if.else:                                          ; preds = %for.body
  %30 = load %struct._object*, %struct._object** %it, align 8, !dbg !9455, !tbaa !2683
  %call = call %struct._object* @PyIter_Next(%struct._object* %30), !dbg !9456
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !9457, !tbaa !2683
  %31 = load %struct._object*, %struct._object** %item, align 8, !dbg !9458, !tbaa !2683
  %cmp15 = icmp eq %struct._object* %31, null, !dbg !9459
  br i1 %cmp15, label %if.then.16, label %if.end.49, !dbg !9460

if.then.16:                                       ; preds = %if.else
  %32 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9461, !tbaa !2683
  %numactive17 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %32, i32 0, i32 2, !dbg !9462
  %33 = load i64, i64* %numactive17, align 8, !dbg !9463, !tbaa !9417
  %sub = sub i64 %33, 1, !dbg !9463
  store i64 %sub, i64* %numactive17, align 8, !dbg !9463, !tbaa !9417
  %34 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9464, !tbaa !2683
  %numactive18 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %34, i32 0, i32 2, !dbg !9465
  %35 = load i64, i64* %numactive18, align 8, !dbg !9465, !tbaa !9417
  %cmp19 = icmp eq i64 %35, 0, !dbg !9466
  br i1 %cmp19, label %if.then.21, label %lor.lhs.false, !dbg !9467

lor.lhs.false:                                    ; preds = %if.then.16
  %call20 = call %struct._object* @PyErr_Occurred(), !dbg !9468
  %tobool = icmp ne %struct._object* %call20, null, !dbg !9468
  br i1 %tobool, label %if.then.21, label %if.else.28, !dbg !9470

if.then.21:                                       ; preds = %lor.lhs.false, %if.then.16
  %36 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9471, !tbaa !2683
  %numactive22 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %36, i32 0, i32 2, !dbg !9472
  store i64 0, i64* %numactive22, align 8, !dbg !9473, !tbaa !9417
  br label %do.body, !dbg !9474

do.body:                                          ; preds = %if.then.21
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9475
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !9475
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1631, metadata !2666), !dbg !9477
  %38 = load %struct._object*, %struct._object** %result, align 8, !dbg !9478, !tbaa !2683
  store %struct._object* %38, %struct._object** %_py_decref_tmp, align 8, !dbg !9477, !tbaa !2683
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9479, !tbaa !2683
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !9481
  %40 = load i64, i64* %ob_refcnt23, align 8, !dbg !9482, !tbaa !2722
  %dec = add i64 %40, -1, !dbg !9482
  store i64 %dec, i64* %ob_refcnt23, align 8, !dbg !9482, !tbaa !2722
  %cmp24 = icmp ne i64 %dec, 0, !dbg !9483
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !9484

if.then.25:                                       ; preds = %do.body
  br label %if.end.27, !dbg !9485

if.else.26:                                       ; preds = %do.body
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9487, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !9489
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9489, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !9490
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9490, !tbaa !2768
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9491, !tbaa !2683
  call void %43(%struct._object* %44), !dbg !9492
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.26, %if.then.25
  %45 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9493
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !9493
  br label %do.cond, !dbg !9495

do.cond:                                          ; preds = %if.end.27
  br label %do.end, !dbg !9496

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !9498
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9498

if.else.28:                                       ; preds = %lor.lhs.false
  %46 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9499, !tbaa !2683
  %fillvalue29 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %46, i32 0, i32 5, !dbg !9500
  %47 = load %struct._object*, %struct._object** %fillvalue29, align 8, !dbg !9500, !tbaa !9262
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !9501
  %48 = load i64, i64* %ob_refcnt30, align 8, !dbg !9502, !tbaa !2722
  %inc31 = add i64 %48, 1, !dbg !9502
  store i64 %inc31, i64* %ob_refcnt30, align 8, !dbg !9502, !tbaa !2722
  %49 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9503, !tbaa !2683
  %fillvalue32 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %49, i32 0, i32 5, !dbg !9504
  %50 = load %struct._object*, %struct._object** %fillvalue32, align 8, !dbg !9504, !tbaa !9262
  store %struct._object* %50, %struct._object** %item, align 8, !dbg !9505, !tbaa !2683
  %51 = load i64, i64* %i, align 8, !dbg !9506, !tbaa !3427
  %52 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9507, !tbaa !2683
  %ittuple33 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %52, i32 0, i32 3, !dbg !9508
  %53 = load %struct._object*, %struct._object** %ittuple33, align 8, !dbg !9508, !tbaa !9181
  %54 = bitcast %struct._object* %53 to %struct.PyTupleObject*, !dbg !9509
  %ob_item34 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %54, i32 0, i32 1, !dbg !9510
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item34, i32 0, i64 %51, !dbg !9511
  store %struct._object* null, %struct._object** %arrayidx35, align 8, !dbg !9512, !tbaa !2683
  br label %do.body.36, !dbg !9513

do.body.36:                                       ; preds = %if.else.28
  %55 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !9514
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !9514
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !1644, metadata !2666), !dbg !9516
  %56 = load %struct._object*, %struct._object** %it, align 8, !dbg !9517, !tbaa !2683
  store %struct._object* %56, %struct._object** %_py_decref_tmp37, align 8, !dbg !9516, !tbaa !2683
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !9518, !tbaa !2683
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !9520
  %58 = load i64, i64* %ob_refcnt38, align 8, !dbg !9521, !tbaa !2722
  %dec39 = add i64 %58, -1, !dbg !9521
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !9521, !tbaa !2722
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !9522
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !9523

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45, !dbg !9524

if.else.42:                                       ; preds = %do.body.36
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !9526, !tbaa !2683
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !9528
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !9528, !tbaa !2675
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !9529
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !9529, !tbaa !2768
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !9530, !tbaa !2683
  call void %61(%struct._object* %62), !dbg !9531
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %63 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !9532
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !9532
  br label %do.cond.46, !dbg !9534

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !9535

do.end.47:                                        ; preds = %do.cond.46
  br label %if.end.48

if.end.48:                                        ; preds = %do.end.47
  br label %if.end.49, !dbg !9537

if.end.49:                                        ; preds = %if.end.48, %if.else
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.then.11
  %64 = load i64, i64* %i, align 8, !dbg !9538, !tbaa !3427
  %65 = load %struct._object*, %struct._object** %result, align 8, !dbg !9539, !tbaa !2683
  %66 = bitcast %struct._object* %65 to %struct.PyTupleObject*, !dbg !9540
  %ob_item51 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %66, i32 0, i32 1, !dbg !9541
  %arrayidx52 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item51, i32 0, i64 %64, !dbg !9542
  %67 = load %struct._object*, %struct._object** %arrayidx52, align 8, !dbg !9542, !tbaa !2683
  store %struct._object* %67, %struct._object** %olditem, align 8, !dbg !9543, !tbaa !2683
  %68 = load %struct._object*, %struct._object** %item, align 8, !dbg !9544, !tbaa !2683
  %69 = load i64, i64* %i, align 8, !dbg !9545, !tbaa !3427
  %70 = load %struct._object*, %struct._object** %result, align 8, !dbg !9546, !tbaa !2683
  %71 = bitcast %struct._object* %70 to %struct.PyTupleObject*, !dbg !9547
  %ob_item53 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %71, i32 0, i32 1, !dbg !9548
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item53, i32 0, i64 %69, !dbg !9549
  store %struct._object* %68, %struct._object** %arrayidx54, align 8, !dbg !9550, !tbaa !2683
  br label %do.body.55, !dbg !9551

do.body.55:                                       ; preds = %if.end.50
  %72 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !9552
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !9552
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !1647, metadata !2666), !dbg !9554
  %73 = load %struct._object*, %struct._object** %olditem, align 8, !dbg !9555, !tbaa !2683
  store %struct._object* %73, %struct._object** %_py_decref_tmp56, align 8, !dbg !9554, !tbaa !2683
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !9556, !tbaa !2683
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !9558
  %75 = load i64, i64* %ob_refcnt57, align 8, !dbg !9559, !tbaa !2722
  %dec58 = add i64 %75, -1, !dbg !9559
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !9559, !tbaa !2722
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !9560
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !9561

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64, !dbg !9562

if.else.61:                                       ; preds = %do.body.55
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !9564, !tbaa !2683
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !9566
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !9566, !tbaa !2675
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !9567
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !9567, !tbaa !2768
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !9568, !tbaa !2683
  call void %78(%struct._object* %79), !dbg !9569
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %80 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !9570
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !9570
  br label %do.cond.65, !dbg !9572

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !9573

do.end.66:                                        ; preds = %do.cond.65
  br label %for.inc, !dbg !9575

for.inc:                                          ; preds = %do.end.66
  %81 = load i64, i64* %i, align 8, !dbg !9576, !tbaa !3427
  %inc67 = add i64 %81, 1, !dbg !9576
  store i64 %inc67, i64* %i, align 8, !dbg !9576, !tbaa !3427
  br label %for.cond, !dbg !9577

for.end:                                          ; preds = %for.cond
  br label %if.end.138, !dbg !9578

if.else.68:                                       ; preds = %if.end.5
  %82 = load i64, i64* %tuplesize, align 8, !dbg !9579, !tbaa !3427
  %call69 = call %struct._object* @PyTuple_New(i64 %82), !dbg !9580
  store %struct._object* %call69, %struct._object** %result, align 8, !dbg !9581, !tbaa !2683
  %83 = load %struct._object*, %struct._object** %result, align 8, !dbg !9582, !tbaa !2683
  %cmp70 = icmp eq %struct._object* %83, null, !dbg !9584
  br i1 %cmp70, label %if.then.71, label %if.end.72, !dbg !9585

if.then.71:                                       ; preds = %if.else.68
  store %struct._object* null, %struct._object** %retval, !dbg !9586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9586

if.end.72:                                        ; preds = %if.else.68
  store i64 0, i64* %i, align 8, !dbg !9587, !tbaa !3427
  br label %for.cond.73, !dbg !9588

for.cond.73:                                      ; preds = %for.inc.135, %if.end.72
  %84 = load i64, i64* %i, align 8, !dbg !9589, !tbaa !3427
  %85 = load i64, i64* %tuplesize, align 8, !dbg !9592, !tbaa !3427
  %cmp74 = icmp slt i64 %84, %85, !dbg !9593
  br i1 %cmp74, label %for.body.75, label %for.end.137, !dbg !9594

for.body.75:                                      ; preds = %for.cond.73
  %86 = load i64, i64* %i, align 8, !dbg !9595, !tbaa !3427
  %87 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9596, !tbaa !2683
  %ittuple76 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %87, i32 0, i32 3, !dbg !9597
  %88 = load %struct._object*, %struct._object** %ittuple76, align 8, !dbg !9597, !tbaa !9181
  %89 = bitcast %struct._object* %88 to %struct.PyTupleObject*, !dbg !9598
  %ob_item77 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %89, i32 0, i32 1, !dbg !9599
  %arrayidx78 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item77, i32 0, i64 %86, !dbg !9600
  %90 = load %struct._object*, %struct._object** %arrayidx78, align 8, !dbg !9600, !tbaa !2683
  store %struct._object* %90, %struct._object** %it, align 8, !dbg !9601, !tbaa !2683
  %91 = load %struct._object*, %struct._object** %it, align 8, !dbg !9602, !tbaa !2683
  %cmp79 = icmp eq %struct._object* %91, null, !dbg !9603
  br i1 %cmp79, label %if.then.80, label %if.else.85, !dbg !9604

if.then.80:                                       ; preds = %for.body.75
  %92 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9605, !tbaa !2683
  %fillvalue81 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %92, i32 0, i32 5, !dbg !9607
  %93 = load %struct._object*, %struct._object** %fillvalue81, align 8, !dbg !9607, !tbaa !9262
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !9608
  %94 = load i64, i64* %ob_refcnt82, align 8, !dbg !9609, !tbaa !2722
  %inc83 = add i64 %94, 1, !dbg !9609
  store i64 %inc83, i64* %ob_refcnt82, align 8, !dbg !9609, !tbaa !2722
  %95 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9610, !tbaa !2683
  %fillvalue84 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %95, i32 0, i32 5, !dbg !9611
  %96 = load %struct._object*, %struct._object** %fillvalue84, align 8, !dbg !9611, !tbaa !9262
  store %struct._object* %96, %struct._object** %item, align 8, !dbg !9612, !tbaa !2683
  br label %if.end.132, !dbg !9613

if.else.85:                                       ; preds = %for.body.75
  %97 = load %struct._object*, %struct._object** %it, align 8, !dbg !9614, !tbaa !2683
  %call86 = call %struct._object* @PyIter_Next(%struct._object* %97), !dbg !9615
  store %struct._object* %call86, %struct._object** %item, align 8, !dbg !9616, !tbaa !2683
  %98 = load %struct._object*, %struct._object** %item, align 8, !dbg !9617, !tbaa !2683
  %cmp87 = icmp eq %struct._object* %98, null, !dbg !9618
  br i1 %cmp87, label %if.then.88, label %if.end.131, !dbg !9619

if.then.88:                                       ; preds = %if.else.85
  %99 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9620, !tbaa !2683
  %numactive89 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %99, i32 0, i32 2, !dbg !9621
  %100 = load i64, i64* %numactive89, align 8, !dbg !9622, !tbaa !9417
  %sub90 = sub i64 %100, 1, !dbg !9622
  store i64 %sub90, i64* %numactive89, align 8, !dbg !9622, !tbaa !9417
  %101 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9623, !tbaa !2683
  %numactive91 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %101, i32 0, i32 2, !dbg !9624
  %102 = load i64, i64* %numactive91, align 8, !dbg !9624, !tbaa !9417
  %cmp92 = icmp eq i64 %102, 0, !dbg !9625
  br i1 %cmp92, label %if.then.96, label %lor.lhs.false.93, !dbg !9626

lor.lhs.false.93:                                 ; preds = %if.then.88
  %call94 = call %struct._object* @PyErr_Occurred(), !dbg !9627
  %tobool95 = icmp ne %struct._object* %call94, null, !dbg !9627
  br i1 %tobool95, label %if.then.96, label %if.else.110, !dbg !9629

if.then.96:                                       ; preds = %lor.lhs.false.93, %if.then.88
  %103 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9630, !tbaa !2683
  %numactive97 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %103, i32 0, i32 2, !dbg !9631
  store i64 0, i64* %numactive97, align 8, !dbg !9632, !tbaa !9417
  br label %do.body.98, !dbg !9633

do.body.98:                                       ; preds = %if.then.96
  %104 = bitcast %struct._object** %_py_decref_tmp99 to i8*, !dbg !9634
  call void @llvm.lifetime.start(i64 8, i8* %104) #1, !dbg !9634
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp99, metadata !1649, metadata !2666), !dbg !9636
  %105 = load %struct._object*, %struct._object** %result, align 8, !dbg !9637, !tbaa !2683
  store %struct._object* %105, %struct._object** %_py_decref_tmp99, align 8, !dbg !9636, !tbaa !2683
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !9638, !tbaa !2683
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 0, !dbg !9640
  %107 = load i64, i64* %ob_refcnt100, align 8, !dbg !9641, !tbaa !2722
  %dec101 = add i64 %107, -1, !dbg !9641
  store i64 %dec101, i64* %ob_refcnt100, align 8, !dbg !9641, !tbaa !2722
  %cmp102 = icmp ne i64 %dec101, 0, !dbg !9642
  br i1 %cmp102, label %if.then.103, label %if.else.104, !dbg !9643

if.then.103:                                      ; preds = %do.body.98
  br label %if.end.107, !dbg !9644

if.else.104:                                      ; preds = %do.body.98
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !9646, !tbaa !2683
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 1, !dbg !9648
  %109 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !9648, !tbaa !2675
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %109, i32 0, i32 4, !dbg !9649
  %110 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8, !dbg !9649, !tbaa !2768
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !9650, !tbaa !2683
  call void %110(%struct._object* %111), !dbg !9651
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  %112 = bitcast %struct._object** %_py_decref_tmp99 to i8*, !dbg !9652
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !9652
  br label %do.cond.108, !dbg !9654

do.cond.108:                                      ; preds = %if.end.107
  br label %do.end.109, !dbg !9655

do.end.109:                                       ; preds = %do.cond.108
  store %struct._object* null, %struct._object** %retval, !dbg !9657
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9657

if.else.110:                                      ; preds = %lor.lhs.false.93
  %113 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9658, !tbaa !2683
  %fillvalue111 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %113, i32 0, i32 5, !dbg !9659
  %114 = load %struct._object*, %struct._object** %fillvalue111, align 8, !dbg !9659, !tbaa !9262
  %ob_refcnt112 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 0, !dbg !9660
  %115 = load i64, i64* %ob_refcnt112, align 8, !dbg !9661, !tbaa !2722
  %inc113 = add i64 %115, 1, !dbg !9661
  store i64 %inc113, i64* %ob_refcnt112, align 8, !dbg !9661, !tbaa !2722
  %116 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9662, !tbaa !2683
  %fillvalue114 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %116, i32 0, i32 5, !dbg !9663
  %117 = load %struct._object*, %struct._object** %fillvalue114, align 8, !dbg !9663, !tbaa !9262
  store %struct._object* %117, %struct._object** %item, align 8, !dbg !9664, !tbaa !2683
  %118 = load i64, i64* %i, align 8, !dbg !9665, !tbaa !3427
  %119 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9666, !tbaa !2683
  %ittuple115 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %119, i32 0, i32 3, !dbg !9667
  %120 = load %struct._object*, %struct._object** %ittuple115, align 8, !dbg !9667, !tbaa !9181
  %121 = bitcast %struct._object* %120 to %struct.PyTupleObject*, !dbg !9668
  %ob_item116 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %121, i32 0, i32 1, !dbg !9669
  %arrayidx117 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item116, i32 0, i64 %118, !dbg !9670
  store %struct._object* null, %struct._object** %arrayidx117, align 8, !dbg !9671, !tbaa !2683
  br label %do.body.118, !dbg !9672

do.body.118:                                      ; preds = %if.else.110
  %122 = bitcast %struct._object** %_py_decref_tmp119 to i8*, !dbg !9673
  call void @llvm.lifetime.start(i64 8, i8* %122) #1, !dbg !9673
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp119, metadata !1661, metadata !2666), !dbg !9675
  %123 = load %struct._object*, %struct._object** %it, align 8, !dbg !9676, !tbaa !2683
  store %struct._object* %123, %struct._object** %_py_decref_tmp119, align 8, !dbg !9675, !tbaa !2683
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8, !dbg !9677, !tbaa !2683
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 0, !dbg !9679
  %125 = load i64, i64* %ob_refcnt120, align 8, !dbg !9680, !tbaa !2722
  %dec121 = add i64 %125, -1, !dbg !9680
  store i64 %dec121, i64* %ob_refcnt120, align 8, !dbg !9680, !tbaa !2722
  %cmp122 = icmp ne i64 %dec121, 0, !dbg !9681
  br i1 %cmp122, label %if.then.123, label %if.else.124, !dbg !9682

if.then.123:                                      ; preds = %do.body.118
  br label %if.end.127, !dbg !9683

if.else.124:                                      ; preds = %do.body.118
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8, !dbg !9685, !tbaa !2683
  %ob_type125 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 1, !dbg !9687
  %127 = load %struct._typeobject*, %struct._typeobject** %ob_type125, align 8, !dbg !9687, !tbaa !2675
  %tp_dealloc126 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %127, i32 0, i32 4, !dbg !9688
  %128 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc126, align 8, !dbg !9688, !tbaa !2768
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8, !dbg !9689, !tbaa !2683
  call void %128(%struct._object* %129), !dbg !9690
  br label %if.end.127

if.end.127:                                       ; preds = %if.else.124, %if.then.123
  %130 = bitcast %struct._object** %_py_decref_tmp119 to i8*, !dbg !9691
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !9691
  br label %do.cond.128, !dbg !9693

do.cond.128:                                      ; preds = %if.end.127
  br label %do.end.129, !dbg !9694

do.end.129:                                       ; preds = %do.cond.128
  br label %if.end.130

if.end.130:                                       ; preds = %do.end.129
  br label %if.end.131, !dbg !9696

if.end.131:                                       ; preds = %if.end.130, %if.else.85
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %if.then.80
  %131 = load %struct._object*, %struct._object** %item, align 8, !dbg !9697, !tbaa !2683
  %132 = load i64, i64* %i, align 8, !dbg !9698, !tbaa !3427
  %133 = load %struct._object*, %struct._object** %result, align 8, !dbg !9699, !tbaa !2683
  %134 = bitcast %struct._object* %133 to %struct.PyTupleObject*, !dbg !9700
  %ob_item133 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %134, i32 0, i32 1, !dbg !9701
  %arrayidx134 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item133, i32 0, i64 %132, !dbg !9702
  store %struct._object* %131, %struct._object** %arrayidx134, align 8, !dbg !9703, !tbaa !2683
  br label %for.inc.135, !dbg !9704

for.inc.135:                                      ; preds = %if.end.132
  %135 = load i64, i64* %i, align 8, !dbg !9705, !tbaa !3427
  %inc136 = add i64 %135, 1, !dbg !9705
  store i64 %inc136, i64* %i, align 8, !dbg !9705, !tbaa !3427
  br label %for.cond.73, !dbg !9706

for.end.137:                                      ; preds = %for.cond.73
  br label %if.end.138

if.end.138:                                       ; preds = %for.end.137, %for.end
  %136 = load %struct._object*, %struct._object** %result, align 8, !dbg !9707, !tbaa !2683
  store %struct._object* %136, %struct._object** %retval, !dbg !9708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9708

cleanup:                                          ; preds = %if.end.138, %do.end.109, %if.then.71, %do.end, %if.then.4, %if.then
  %137 = bitcast %struct._object** %olditem to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !9709
  %138 = bitcast %struct._object** %item to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !9709
  %139 = bitcast %struct._object** %it to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !9709
  %140 = bitcast %struct._object** %result to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !9709
  %141 = bitcast i64* %tuplesize to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !9709
  %142 = bitcast i64* %i to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %142) #1, !dbg !9709
  %143 = load %struct._object*, %struct._object** %retval, !dbg !9709
  ret %struct._object* %143, !dbg !9709
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %lz = alloca %struct.ziplongestobject*, align 8
  %i = alloca i64, align 8
  %ittuple = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %fillvalue = alloca %struct._object*, align 8
  %tuplesize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct._object*, align 8
  %it = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1693, metadata !2666), !dbg !9710
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1694, metadata !2666), !dbg !9711
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1695, metadata !2666), !dbg !9712
  %0 = bitcast %struct.ziplongestobject** %lz to i8*, !dbg !9713
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9713
  call void @llvm.dbg.declare(metadata %struct.ziplongestobject** %lz, metadata !1696, metadata !2666), !dbg !9714
  %1 = bitcast i64* %i to i8*, !dbg !9715
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9715
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1697, metadata !2666), !dbg !9716
  %2 = bitcast %struct._object** %ittuple to i8*, !dbg !9717
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9717
  call void @llvm.dbg.declare(metadata %struct._object** %ittuple, metadata !1698, metadata !2666), !dbg !9718
  %3 = bitcast %struct._object** %result to i8*, !dbg !9719
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9719
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1699, metadata !2666), !dbg !9720
  %4 = bitcast %struct._object** %fillvalue to i8*, !dbg !9721
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !9721
  call void @llvm.dbg.declare(metadata %struct._object** %fillvalue, metadata !1700, metadata !2666), !dbg !9722
  store %struct._object* @_Py_NoneStruct, %struct._object** %fillvalue, align 8, !dbg !9722, !tbaa !2683
  %5 = bitcast i64* %tuplesize to i8*, !dbg !9723
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !9723
  call void @llvm.dbg.declare(metadata i64* %tuplesize, metadata !1701, metadata !2666), !dbg !9724
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9725, !tbaa !2683
  %call = call i64 @PySequence_Size(%struct._object* %6), !dbg !9726
  store i64 %call, i64* %tuplesize, align 8, !dbg !9724, !tbaa !3427
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9727, !tbaa !2683
  %cmp = icmp ne %struct._object* %7, null, !dbg !9729
  br i1 %cmp, label %land.lhs.true, label %if.end.10, !dbg !9730

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9731, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !9733
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9733, !tbaa !2675
  %cmp1 = icmp eq %struct._typeobject* %9, @PyDict_Type, !dbg !9734
  br i1 %cmp1, label %land.lhs.true.2, label %if.end.10, !dbg !9735

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9736, !tbaa !2683
  %call3 = call i64 @PyDict_Size(%struct._object* %10), !dbg !9738
  %cmp4 = icmp sgt i64 %call3, 0, !dbg !9739
  br i1 %cmp4, label %if.then, label %if.end.10, !dbg !9740

if.then:                                          ; preds = %land.lhs.true.2
  %11 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9741, !tbaa !2683
  %call5 = call %struct._object* @PyDict_GetItemString(%struct._object* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0)), !dbg !9743
  store %struct._object* %call5, %struct._object** %fillvalue, align 8, !dbg !9744, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !9745, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %12, null, !dbg !9747
  br i1 %cmp6, label %if.then.9, label %lor.lhs.false, !dbg !9748

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9749, !tbaa !2683
  %call7 = call i64 @PyDict_Size(%struct._object* %13), !dbg !9751
  %cmp8 = icmp sgt i64 %call7, 1, !dbg !9752
  br i1 %cmp8, label %if.then.9, label %if.end, !dbg !9753

if.then.9:                                        ; preds = %lor.lhs.false, %if.then
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9754, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.68, i32 0, i32 0)), !dbg !9756
  store %struct._object* null, %struct._object** %retval, !dbg !9757
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !9757

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end.10, !dbg !9758

if.end.10:                                        ; preds = %if.end, %land.lhs.true.2, %land.lhs.true, %entry
  %15 = load i64, i64* %tuplesize, align 8, !dbg !9759, !tbaa !3427
  %call11 = call %struct._object* @PyTuple_New(i64 %15), !dbg !9760
  store %struct._object* %call11, %struct._object** %ittuple, align 8, !dbg !9761, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9762, !tbaa !2683
  %cmp12 = icmp eq %struct._object* %16, null, !dbg !9764
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !9765

if.then.13:                                       ; preds = %if.end.10
  store %struct._object* null, %struct._object** %retval, !dbg !9766
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !9766

if.end.14:                                        ; preds = %if.end.10
  store i64 0, i64* %i, align 8, !dbg !9767, !tbaa !3427
  br label %for.cond, !dbg !9768

for.cond:                                         ; preds = %for.inc, %if.end.14
  %17 = load i64, i64* %i, align 8, !dbg !9769, !tbaa !3427
  %18 = load i64, i64* %tuplesize, align 8, !dbg !9772, !tbaa !3427
  %cmp15 = icmp slt i64 %17, %18, !dbg !9773
  br i1 %cmp15, label %for.body, label %for.end, !dbg !9774

for.body:                                         ; preds = %for.cond
  %19 = bitcast %struct._object** %item to i8*, !dbg !9775
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !9775
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1702, metadata !2666), !dbg !9776
  %20 = load i64, i64* %i, align 8, !dbg !9777, !tbaa !3427
  %21 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9778, !tbaa !2683
  %22 = bitcast %struct._object* %21 to %struct.PyTupleObject*, !dbg !9779
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %22, i32 0, i32 1, !dbg !9780
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %20, !dbg !9781
  %23 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9781, !tbaa !2683
  store %struct._object* %23, %struct._object** %item, align 8, !dbg !9776, !tbaa !2683
  %24 = bitcast %struct._object** %it to i8*, !dbg !9782
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !9782
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !1706, metadata !2666), !dbg !9783
  %25 = load %struct._object*, %struct._object** %item, align 8, !dbg !9784, !tbaa !2683
  %call16 = call %struct._object* @PyObject_GetIter(%struct._object* %25), !dbg !9785
  store %struct._object* %call16, %struct._object** %it, align 8, !dbg !9783, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %it, align 8, !dbg !9786, !tbaa !2683
  %cmp17 = icmp eq %struct._object* %26, null, !dbg !9787
  br i1 %cmp17, label %if.then.18, label %if.end.27, !dbg !9788

if.then.18:                                       ; preds = %for.body
  %27 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9789, !tbaa !2683
  %call19 = call i32 @PyErr_ExceptionMatches(%struct._object* %27), !dbg !9791
  %tobool = icmp ne i32 %call19, 0, !dbg !9791
  br i1 %tobool, label %if.then.20, label %if.end.22, !dbg !9792

if.then.20:                                       ; preds = %if.then.18
  %28 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9793, !tbaa !2683
  %29 = load i64, i64* %i, align 8, !dbg !9794, !tbaa !3427
  %add = add i64 %29, 1, !dbg !9795
  %call21 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %28, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.69, i32 0, i32 0), i64 %add), !dbg !9796
  br label %if.end.22, !dbg !9796

if.end.22:                                        ; preds = %if.then.20, %if.then.18
  br label %do.body, !dbg !9797

do.body:                                          ; preds = %if.end.22
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9798
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !9798
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1707, metadata !2666), !dbg !9800
  %31 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9801, !tbaa !2683
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8, !dbg !9800, !tbaa !2683
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9802, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !9804
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !9805, !tbaa !2722
  %dec = add i64 %33, -1, !dbg !9805
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9805, !tbaa !2722
  %cmp23 = icmp ne i64 %dec, 0, !dbg !9806
  br i1 %cmp23, label %if.then.24, label %if.else, !dbg !9807

if.then.24:                                       ; preds = %do.body
  br label %if.end.26, !dbg !9808

if.else:                                          ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9810, !tbaa !2683
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !9812
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !9812, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !9813
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9813, !tbaa !2768
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9814, !tbaa !2683
  call void %36(%struct._object* %37), !dbg !9815
  br label %if.end.26

if.end.26:                                        ; preds = %if.else, %if.then.24
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9816
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !9816
  br label %do.cond, !dbg !9818

do.cond:                                          ; preds = %if.end.26
  br label %do.end, !dbg !9819

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !9821
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9821

if.end.27:                                        ; preds = %for.body
  %39 = load %struct._object*, %struct._object** %it, align 8, !dbg !9822, !tbaa !2683
  %40 = load i64, i64* %i, align 8, !dbg !9823, !tbaa !3427
  %41 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9824, !tbaa !2683
  %42 = bitcast %struct._object* %41 to %struct.PyTupleObject*, !dbg !9825
  %ob_item28 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %42, i32 0, i32 1, !dbg !9826
  %arrayidx29 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item28, i32 0, i64 %40, !dbg !9827
  store %struct._object* %39, %struct._object** %arrayidx29, align 8, !dbg !9828, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !9829
  br label %cleanup, !dbg !9829

cleanup:                                          ; preds = %if.end.27, %do.end
  %43 = bitcast %struct._object** %it to i8*, !dbg !9830
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !9830
  %44 = bitcast %struct._object** %item to i8*, !dbg !9830
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !9830
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !9831

for.inc:                                          ; preds = %cleanup.cont
  %45 = load i64, i64* %i, align 8, !dbg !9832, !tbaa !3427
  %inc = add i64 %45, 1, !dbg !9832
  store i64 %inc, i64* %i, align 8, !dbg !9832, !tbaa !3427
  br label %for.cond, !dbg !9833

for.end:                                          ; preds = %for.cond
  %46 = load i64, i64* %tuplesize, align 8, !dbg !9834, !tbaa !3427
  %call31 = call %struct._object* @PyTuple_New(i64 %46), !dbg !9835
  store %struct._object* %call31, %struct._object** %result, align 8, !dbg !9836, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %result, align 8, !dbg !9837, !tbaa !2683
  %cmp32 = icmp eq %struct._object* %47, null, !dbg !9838
  br i1 %cmp32, label %if.then.33, label %if.end.46, !dbg !9839

if.then.33:                                       ; preds = %for.end
  br label %do.body.34, !dbg !9840

do.body.34:                                       ; preds = %if.then.33
  %48 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !9841
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !9841
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp35, metadata !1711, metadata !2666), !dbg !9843
  %49 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9844, !tbaa !2683
  store %struct._object* %49, %struct._object** %_py_decref_tmp35, align 8, !dbg !9843, !tbaa !2683
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !9845, !tbaa !2683
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !9847
  %51 = load i64, i64* %ob_refcnt36, align 8, !dbg !9848, !tbaa !2722
  %dec37 = add i64 %51, -1, !dbg !9848
  store i64 %dec37, i64* %ob_refcnt36, align 8, !dbg !9848, !tbaa !2722
  %cmp38 = icmp ne i64 %dec37, 0, !dbg !9849
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !9850

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43, !dbg !9851

if.else.40:                                       ; preds = %do.body.34
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !9853, !tbaa !2683
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !9855
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !9855, !tbaa !2675
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !9856
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !9856, !tbaa !2768
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !9857, !tbaa !2683
  call void %54(%struct._object* %55), !dbg !9858
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  %56 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !9859
  br label %do.cond.44, !dbg !9861

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !9862

do.end.45:                                        ; preds = %do.cond.44
  store %struct._object* null, %struct._object** %retval, !dbg !9864
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !9864

if.end.46:                                        ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !9865, !tbaa !3427
  br label %for.cond.47, !dbg !9867

for.cond.47:                                      ; preds = %for.inc.53, %if.end.46
  %57 = load i64, i64* %i, align 8, !dbg !9868, !tbaa !3427
  %58 = load i64, i64* %tuplesize, align 8, !dbg !9872, !tbaa !3427
  %cmp48 = icmp slt i64 %57, %58, !dbg !9873
  br i1 %cmp48, label %for.body.49, label %for.end.55, !dbg !9874

for.body.49:                                      ; preds = %for.cond.47
  %59 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9875, !tbaa !2722
  %inc50 = add i64 %59, 1, !dbg !9875
  store i64 %inc50, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9875, !tbaa !2722
  %60 = load i64, i64* %i, align 8, !dbg !9877, !tbaa !3427
  %61 = load %struct._object*, %struct._object** %result, align 8, !dbg !9878, !tbaa !2683
  %62 = bitcast %struct._object* %61 to %struct.PyTupleObject*, !dbg !9879
  %ob_item51 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %62, i32 0, i32 1, !dbg !9880
  %arrayidx52 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item51, i32 0, i64 %60, !dbg !9881
  store %struct._object* @_Py_NoneStruct, %struct._object** %arrayidx52, align 8, !dbg !9882, !tbaa !2683
  br label %for.inc.53, !dbg !9883

for.inc.53:                                       ; preds = %for.body.49
  %63 = load i64, i64* %i, align 8, !dbg !9884, !tbaa !3427
  %inc54 = add i64 %63, 1, !dbg !9884
  store i64 %inc54, i64* %i, align 8, !dbg !9884, !tbaa !3427
  br label %for.cond.47, !dbg !9885

for.end.55:                                       ; preds = %for.cond.47
  %64 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !9886, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 36, !dbg !9887
  %65 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !9887, !tbaa !3097
  %66 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !9888, !tbaa !2683
  %call56 = call %struct._object* %65(%struct._typeobject* %66, i64 0), !dbg !9886
  %67 = bitcast %struct._object* %call56 to %struct.ziplongestobject*, !dbg !9889
  store %struct.ziplongestobject* %67, %struct.ziplongestobject** %lz, align 8, !dbg !9890, !tbaa !2683
  %68 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9891, !tbaa !2683
  %cmp57 = icmp eq %struct.ziplongestobject* %68, null, !dbg !9892
  br i1 %cmp57, label %if.then.58, label %if.end.83, !dbg !9893

if.then.58:                                       ; preds = %for.end.55
  br label %do.body.59, !dbg !9894

do.body.59:                                       ; preds = %if.then.58
  %69 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !9895
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !9895
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !1715, metadata !2666), !dbg !9897
  %70 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9898, !tbaa !2683
  store %struct._object* %70, %struct._object** %_py_decref_tmp60, align 8, !dbg !9897, !tbaa !2683
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !9899, !tbaa !2683
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !9901
  %72 = load i64, i64* %ob_refcnt61, align 8, !dbg !9902, !tbaa !2722
  %dec62 = add i64 %72, -1, !dbg !9902
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !9902, !tbaa !2722
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !9903
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !9904

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68, !dbg !9905

if.else.65:                                       ; preds = %do.body.59
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !9907, !tbaa !2683
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !9909
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !9909, !tbaa !2675
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !9910
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !9910, !tbaa !2768
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !9911, !tbaa !2683
  call void %75(%struct._object* %76), !dbg !9912
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  %77 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !9913
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !9913
  br label %do.cond.69, !dbg !9915

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !9916

do.end.70:                                        ; preds = %do.cond.69
  br label %do.body.71, !dbg !9918

do.body.71:                                       ; preds = %do.end.70
  %78 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !9919
  call void @llvm.lifetime.start(i64 8, i8* %78) #1, !dbg !9919
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp72, metadata !1719, metadata !2666), !dbg !9921
  %79 = load %struct._object*, %struct._object** %result, align 8, !dbg !9922, !tbaa !2683
  store %struct._object* %79, %struct._object** %_py_decref_tmp72, align 8, !dbg !9921, !tbaa !2683
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !9923, !tbaa !2683
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !9925
  %81 = load i64, i64* %ob_refcnt73, align 8, !dbg !9926, !tbaa !2722
  %dec74 = add i64 %81, -1, !dbg !9926
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !9926, !tbaa !2722
  %cmp75 = icmp ne i64 %dec74, 0, !dbg !9927
  br i1 %cmp75, label %if.then.76, label %if.else.77, !dbg !9928

if.then.76:                                       ; preds = %do.body.71
  br label %if.end.80, !dbg !9929

if.else.77:                                       ; preds = %do.body.71
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !9931, !tbaa !2683
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !9933
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !9933, !tbaa !2675
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !9934
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !9934, !tbaa !2768
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !9935, !tbaa !2683
  call void %84(%struct._object* %85), !dbg !9936
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %86 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !9937
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !9937
  br label %do.cond.81, !dbg !9938

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !9939

do.end.82:                                        ; preds = %do.cond.81
  store %struct._object* null, %struct._object** %retval, !dbg !9941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !9941

if.end.83:                                        ; preds = %for.end.55
  %87 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9942, !tbaa !2683
  %88 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9943, !tbaa !2683
  %ittuple84 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %88, i32 0, i32 3, !dbg !9944
  store %struct._object* %87, %struct._object** %ittuple84, align 8, !dbg !9945, !tbaa !9181
  %89 = load i64, i64* %tuplesize, align 8, !dbg !9946, !tbaa !3427
  %90 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9947, !tbaa !2683
  %tuplesize85 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %90, i32 0, i32 1, !dbg !9948
  store i64 %89, i64* %tuplesize85, align 8, !dbg !9949, !tbaa !9398
  %91 = load i64, i64* %tuplesize, align 8, !dbg !9950, !tbaa !3427
  %92 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9951, !tbaa !2683
  %numactive = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %92, i32 0, i32 2, !dbg !9952
  store i64 %91, i64* %numactive, align 8, !dbg !9953, !tbaa !9417
  %93 = load %struct._object*, %struct._object** %result, align 8, !dbg !9954, !tbaa !2683
  %94 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9955, !tbaa !2683
  %result86 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %94, i32 0, i32 4, !dbg !9956
  store %struct._object* %93, %struct._object** %result86, align 8, !dbg !9957, !tbaa !9223
  %95 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !9958, !tbaa !2683
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !9959
  %96 = load i64, i64* %ob_refcnt87, align 8, !dbg !9960, !tbaa !2722
  %inc88 = add i64 %96, 1, !dbg !9960
  store i64 %inc88, i64* %ob_refcnt87, align 8, !dbg !9960, !tbaa !2722
  %97 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !9961, !tbaa !2683
  %98 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9962, !tbaa !2683
  %fillvalue89 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %98, i32 0, i32 5, !dbg !9963
  store %struct._object* %97, %struct._object** %fillvalue89, align 8, !dbg !9964, !tbaa !9262
  %99 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz, align 8, !dbg !9965, !tbaa !2683
  %100 = bitcast %struct.ziplongestobject* %99 to %struct._object*, !dbg !9966
  store %struct._object* %100, %struct._object** %retval, !dbg !9967
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !9967

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.90

cleanup.90:                                       ; preds = %NewDefault, %if.end.83, %do.end.82, %do.end.45, %if.then.13, %if.then.9
  %101 = bitcast i64* %tuplesize to i8*, !dbg !9968
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !9968
  %102 = bitcast %struct._object** %fillvalue to i8*, !dbg !9968
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !9968
  %103 = bitcast %struct._object** %result to i8*, !dbg !9968
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !9968
  %104 = bitcast %struct._object** %ittuple to i8*, !dbg !9968
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !9968
  %105 = bitcast i64* %i to i8*, !dbg !9968
  call void @llvm.lifetime.end(i64 8, i8* %105) #1, !dbg !9968
  %106 = bitcast %struct.ziplongestobject** %lz to i8*, !dbg !9968
  call void @llvm.lifetime.end(i64 8, i8* %106) #1, !dbg !9968
  %107 = load %struct._object*, %struct._object** %retval, !dbg !9968
  ret %struct._object* %107, !dbg !9968
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_reduce(%struct.ziplongestobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.ziplongestobject*, align 8
  %i = alloca i32, align 4
  %args = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %elem = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ziplongestobject* %lz, %struct.ziplongestobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.ziplongestobject** %lz.addr, metadata !1666, metadata !2666), !dbg !9969
  %0 = bitcast i32* %i to i8*, !dbg !9970
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1667, metadata !2666), !dbg !9971
  %1 = bitcast %struct._object** %args to i8*, !dbg !9972
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9972
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1668, metadata !2666), !dbg !9973
  %2 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9974, !tbaa !2683
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %2, i32 0, i32 3, !dbg !9975
  %3 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !9975, !tbaa !9181
  %4 = bitcast %struct._object* %3 to %struct.PyVarObject*, !dbg !9976
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1, !dbg !9977
  %5 = load i64, i64* %ob_size, align 8, !dbg !9977, !tbaa !3426
  %call = call %struct._object* @PyTuple_New(i64 %5), !dbg !9978
  store %struct._object* %call, %struct._object** %args, align 8, !dbg !9973, !tbaa !2683
  %6 = load %struct._object*, %struct._object** %args, align 8, !dbg !9979, !tbaa !2683
  %cmp = icmp eq %struct._object* %6, null, !dbg !9981
  br i1 %cmp, label %if.then, label %if.end, !dbg !9982

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9983
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !9983

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9984, !tbaa !2691
  br label %for.cond, !dbg !9985

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !9986, !tbaa !2691
  %conv = sext i32 %7 to i64, !dbg !9986
  %8 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9989, !tbaa !2683
  %ittuple1 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %8, i32 0, i32 3, !dbg !9990
  %9 = load %struct._object*, %struct._object** %ittuple1, align 8, !dbg !9990, !tbaa !9181
  %10 = bitcast %struct._object* %9 to %struct.PyVarObject*, !dbg !9991
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1, !dbg !9992
  %11 = load i64, i64* %ob_size2, align 8, !dbg !9992, !tbaa !3426
  %cmp3 = icmp slt i64 %conv, %11, !dbg !9993
  br i1 %cmp3, label %for.body, label %for.end, !dbg !9994

for.body:                                         ; preds = %for.cond
  %12 = bitcast %struct._object** %elem to i8*, !dbg !9995
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !9995
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !1669, metadata !2666), !dbg !9996
  %13 = load i32, i32* %i, align 4, !dbg !9997, !tbaa !2691
  %idxprom = sext i32 %13 to i64, !dbg !9998
  %14 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !9999, !tbaa !2683
  %ittuple5 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %14, i32 0, i32 3, !dbg !10000
  %15 = load %struct._object*, %struct._object** %ittuple5, align 8, !dbg !10000, !tbaa !9181
  %16 = bitcast %struct._object* %15 to %struct.PyTupleObject*, !dbg !10001
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %16, i32 0, i32 1, !dbg !10002
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom, !dbg !9998
  %17 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9998, !tbaa !2683
  store %struct._object* %17, %struct._object** %elem, align 8, !dbg !9996, !tbaa !2683
  %18 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10003, !tbaa !2683
  %cmp6 = icmp eq %struct._object* %18, null, !dbg !10004
  br i1 %cmp6, label %if.then.8, label %if.else.18, !dbg !10005

if.then.8:                                        ; preds = %for.body
  %call9 = call %struct._object* @PyTuple_New(i64 0), !dbg !10006
  store %struct._object* %call9, %struct._object** %elem, align 8, !dbg !10007, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10008, !tbaa !2683
  %cmp10 = icmp eq %struct._object* %19, null, !dbg !10009
  br i1 %cmp10, label %if.then.12, label %if.end.17, !dbg !10010

if.then.12:                                       ; preds = %if.then.8
  br label %do.body, !dbg !10011

do.body:                                          ; preds = %if.then.12
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10012
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !10012
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1673, metadata !2666), !dbg !10014
  %21 = load %struct._object*, %struct._object** %args, align 8, !dbg !10015, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !10014, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10016, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !10018
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !10019, !tbaa !2722
  %dec = add i64 %23, -1, !dbg !10019
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10019, !tbaa !2722
  %cmp13 = icmp ne i64 %dec, 0, !dbg !10020
  br i1 %cmp13, label %if.then.15, label %if.else, !dbg !10021

if.then.15:                                       ; preds = %do.body
  br label %if.end.16, !dbg !10022

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10024, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !10026
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10026, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !10027
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10027, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10028, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !10029
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10030
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !10030
  br label %do.cond, !dbg !10032

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !10033

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !10035
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10035

if.end.17:                                        ; preds = %if.then.8
  br label %if.end.20, !dbg !10036

if.else.18:                                       ; preds = %for.body
  %29 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10037, !tbaa !2683
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !10038
  %30 = load i64, i64* %ob_refcnt19, align 8, !dbg !10039, !tbaa !2722
  %inc = add i64 %30, 1, !dbg !10039
  store i64 %inc, i64* %ob_refcnt19, align 8, !dbg !10039, !tbaa !2722
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.18, %if.end.17
  %31 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10040, !tbaa !2683
  %32 = load i32, i32* %i, align 4, !dbg !10041, !tbaa !2691
  %idxprom21 = sext i32 %32 to i64, !dbg !10042
  %33 = load %struct._object*, %struct._object** %args, align 8, !dbg !10043, !tbaa !2683
  %34 = bitcast %struct._object* %33 to %struct.PyTupleObject*, !dbg !10044
  %ob_item22 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %34, i32 0, i32 1, !dbg !10045
  %arrayidx23 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item22, i32 0, i64 %idxprom21, !dbg !10042
  store %struct._object* %31, %struct._object** %arrayidx23, align 8, !dbg !10046, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !10047
  br label %cleanup, !dbg !10047

cleanup:                                          ; preds = %if.end.20, %do.end
  %35 = bitcast %struct._object** %elem to i8*, !dbg !10048
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !10048
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !10049

for.inc:                                          ; preds = %cleanup.cont
  %36 = load i32, i32* %i, align 4, !dbg !10050, !tbaa !2691
  %inc24 = add i32 %36, 1, !dbg !10050
  store i32 %inc24, i32* %i, align 4, !dbg !10050, !tbaa !2691
  br label %for.cond, !dbg !10051

for.end:                                          ; preds = %for.cond
  %37 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !10052, !tbaa !2683
  %38 = bitcast %struct.ziplongestobject* %37 to %struct._object*, !dbg !10053
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !10054
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !10054, !tbaa !2675
  %40 = load %struct._object*, %struct._object** %args, align 8, !dbg !10055, !tbaa !2683
  %41 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !10056, !tbaa !2683
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %41, i32 0, i32 5, !dbg !10057
  %42 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !10057, !tbaa !9262
  %call26 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), %struct._typeobject* %39, %struct._object* %40, %struct._object* %42), !dbg !10058
  store %struct._object* %call26, %struct._object** %retval, !dbg !10059
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27, !dbg !10059

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.27

cleanup.27:                                       ; preds = %NewDefault, %for.end, %if.then
  %43 = bitcast %struct._object** %args to i8*, !dbg !10060
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !10060
  %44 = bitcast i32* %i to i8*, !dbg !10060
  call void @llvm.lifetime.end(i64 4, i8* %44) #1, !dbg !10060
  %45 = load %struct._object*, %struct._object** %retval, !dbg !10060
  ret %struct._object* %45, !dbg !10060
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_setstate(%struct.ziplongestobject* %lz, %struct._object* %state) #0 {
entry:
  %lz.addr = alloca %struct.ziplongestobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ziplongestobject* %lz, %struct.ziplongestobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.ziplongestobject** %lz.addr, metadata !1683, metadata !2666), !dbg !10061
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1684, metadata !2666), !dbg !10062
  br label %do.body, !dbg !10063

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10064
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10064
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1685, metadata !2666), !dbg !10066
  %1 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !10067, !tbaa !2683
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %1, i32 0, i32 5, !dbg !10068
  %2 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !10068, !tbaa !9262
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !10066, !tbaa !2683
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10069, !tbaa !2683
  %cmp = icmp ne %struct._object* %3, null, !dbg !10070
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !10071

if.then:                                          ; preds = %do.body
  %4 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !10072, !tbaa !2683
  %fillvalue1 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %4, i32 0, i32 5, !dbg !10074
  store %struct._object* null, %struct._object** %fillvalue1, align 8, !dbg !10075, !tbaa !9262
  br label %do.body.2, !dbg !10076

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10077
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1687, metadata !2666), !dbg !10079
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10080, !tbaa !2683
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !10079, !tbaa !2683
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10081, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !10083
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !10084, !tbaa !2722
  %dec = add i64 %8, -1, !dbg !10084
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10084, !tbaa !2722
  %cmp3 = icmp ne i64 %dec, 0, !dbg !10085
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !10086

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !10087

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10089, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !10091
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10091, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !10092
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10092, !tbaa !2768
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10093, !tbaa !2683
  call void %11(%struct._object* %12), !dbg !10094
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10095
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !10095
  br label %do.cond, !dbg !10097

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10098

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !10100

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10102
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !10102
  br label %do.end.7, !dbg !10105

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !10106, !tbaa !2683
  %16 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !10107, !tbaa !2683
  %fillvalue8 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %16, i32 0, i32 5, !dbg !10108
  store %struct._object* %15, %struct._object** %fillvalue8, align 8, !dbg !10109, !tbaa !9262
  %17 = load %struct.ziplongestobject*, %struct.ziplongestobject** %lz.addr, align 8, !dbg !10110, !tbaa !2683
  %fillvalue9 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %17, i32 0, i32 5, !dbg !10111
  %18 = load %struct._object*, %struct._object** %fillvalue9, align 8, !dbg !10111, !tbaa !9262
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !10112
  %19 = load i64, i64* %ob_refcnt10, align 8, !dbg !10113, !tbaa !2722
  %inc = add i64 %19, 1, !dbg !10113
  store i64 %inc, i64* %ob_refcnt10, align 8, !dbg !10113, !tbaa !2722
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10114, !tbaa !2722
  %inc11 = add i64 %20, 1, !dbg !10114
  store i64 %inc11, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10114, !tbaa !2722
  ret %struct._object* @_Py_NoneStruct, !dbg !10115
}

declare i64 @PySequence_Size(%struct._object*) #3

declare i64 @PyDict_Size(%struct._object*) #3

declare %struct._object* @PyDict_GetItemString(%struct._object*, i8*) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @permutations_dealloc(%struct.permutationsobject* %po) #0 {
entry:
  %po.addr = alloca %struct.permutationsobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.permutationsobject* %po, %struct.permutationsobject** %po.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po.addr, metadata !1725, metadata !2666), !dbg !10116
  %0 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10117, !tbaa !2683
  %1 = bitcast %struct.permutationsobject* %0 to i8*, !dbg !10117
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !10118
  br label %do.body, !dbg !10119

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10120
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10120
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1726, metadata !2666), !dbg !10122
  %3 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10123, !tbaa !2683
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %3, i32 0, i32 1, !dbg !10124
  %4 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10124, !tbaa !10125
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10122, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10127, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !10128
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !10129

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !10130

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10132
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !10132
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1728, metadata !2666), !dbg !10134
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10135, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !10134, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10136, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !10138
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !10139, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !10139
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10139, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !10140
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !10141

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !10142

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10144, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !10146
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10146, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !10147
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10147, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10148, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !10149
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10150
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !10150
  br label %do.cond, !dbg !10152

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10153

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !10155

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10157
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !10157
  br label %do.end.6, !dbg !10160

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !10161

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !10162
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !10162
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1731, metadata !2666), !dbg !10164
  %17 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10165, !tbaa !2683
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %17, i32 0, i32 4, !dbg !10166
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !10166, !tbaa !10167
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !10164, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !10168, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !10169
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !10170

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !10171

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !10173
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !10173
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1733, metadata !2666), !dbg !10175
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !10176, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !10175, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !10177, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !10179
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !10180, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !10180
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !10180, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !10181
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !10182

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !10183

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !10185, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !10187
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !10187, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !10188
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !10188, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !10189, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !10190
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !10191
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !10191
  br label %do.cond.21, !dbg !10193

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !10194

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !10196

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !10198
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !10198
  br label %do.end.25, !dbg !10199

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10200, !tbaa !2683
  %indices = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %30, i32 0, i32 2, !dbg !10201
  %31 = load i64*, i64** %indices, align 8, !dbg !10201, !tbaa !10202
  %32 = bitcast i64* %31 to i8*, !dbg !10200
  call void @PyMem_Free(i8* %32), !dbg !10203
  %33 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10204, !tbaa !2683
  %cycles = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %33, i32 0, i32 3, !dbg !10205
  %34 = load i64*, i64** %cycles, align 8, !dbg !10205, !tbaa !10206
  %35 = bitcast i64* %34 to i8*, !dbg !10204
  call void @PyMem_Free(i8* %35), !dbg !10207
  %36 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10208, !tbaa !2683
  %37 = bitcast %struct.permutationsobject* %36 to %struct._object*, !dbg !10209
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !10210
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !10210, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 38, !dbg !10211
  %39 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !10211, !tbaa !2864
  %40 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10212, !tbaa !2683
  %41 = bitcast %struct.permutationsobject* %40 to i8*, !dbg !10212
  call void %39(i8* %41), !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: nounwind uwtable
define internal i32 @permutations_traverse(%struct.permutationsobject* %po, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %po.addr = alloca %struct.permutationsobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.permutationsobject* %po, %struct.permutationsobject** %po.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po.addr, metadata !1740, metadata !2666), !dbg !10215
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1741, metadata !2666), !dbg !10216
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1742, metadata !2666), !dbg !10217
  br label %do.body, !dbg !10218

do.body:                                          ; preds = %entry
  %0 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10219, !tbaa !2683
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %0, i32 0, i32 1, !dbg !10221
  %1 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10221, !tbaa !10125
  %tobool = icmp ne %struct._object* %1, null, !dbg !10222
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !10223

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !10224
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !10224
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1743, metadata !2666), !dbg !10226
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !10227, !tbaa !2683
  %4 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10228, !tbaa !2683
  %pool1 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %4, i32 0, i32 1, !dbg !10229
  %5 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !10229, !tbaa !10125
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !10230, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !10227
  store i32 %call, i32* %vret, align 4, !dbg !10226, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !10231, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !10231
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !10233

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !10234, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !10236
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10236

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !10237
  br label %cleanup, !dbg !10237

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !10239
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !10239
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !10242

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !10243

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !10246

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10247, !tbaa !2683
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %10, i32 0, i32 4, !dbg !10249
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !10249, !tbaa !10167
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !10250
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !10251

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !10252
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !10252
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1747, metadata !2666), !dbg !10254
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !10255, !tbaa !2683
  %14 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10256, !tbaa !2683
  %result9 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %14, i32 0, i32 4, !dbg !10257
  %15 = load %struct._object*, %struct._object** %result9, align 8, !dbg !10257, !tbaa !10167
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !10258, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !10255
  store i32 %call10, i32* %vret8, align 4, !dbg !10254, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !10259, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !10259
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !10261

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !10262, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !10264
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !10264

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !10265
  br label %cleanup.14, !dbg !10265

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !10267
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !10267
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !10270

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !10271

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !10274
  br label %return, !dbg !10274

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !10275
  ret i32 %20, !dbg !10275
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_next(%struct.permutationsobject* %po) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %po.addr = alloca %struct.permutationsobject*, align 8
  %elem = alloca %struct._object*, align 8
  %oldelem = alloca %struct._object*, align 8
  %pool = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %cycles = alloca i64*, align 8
  %result = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %r = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %k = alloca i64, align 8
  %index = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %old_result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  store %struct.permutationsobject* %po, %struct.permutationsobject** %po.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po.addr, metadata !1755, metadata !2666), !dbg !10276
  %0 = bitcast %struct._object** %elem to i8*, !dbg !10277
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10277
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !1756, metadata !2666), !dbg !10278
  %1 = bitcast %struct._object** %oldelem to i8*, !dbg !10279
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10279
  call void @llvm.dbg.declare(metadata %struct._object** %oldelem, metadata !1757, metadata !2666), !dbg !10280
  %2 = bitcast %struct._object** %pool to i8*, !dbg !10281
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10281
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !1758, metadata !2666), !dbg !10282
  %3 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10283, !tbaa !2683
  %pool1 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %3, i32 0, i32 1, !dbg !10284
  %4 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !10284, !tbaa !10125
  store %struct._object* %4, %struct._object** %pool, align 8, !dbg !10282, !tbaa !2683
  %5 = bitcast i64** %indices to i8*, !dbg !10285
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10285
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !1759, metadata !2666), !dbg !10286
  %6 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10287, !tbaa !2683
  %indices2 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %6, i32 0, i32 2, !dbg !10288
  %7 = load i64*, i64** %indices2, align 8, !dbg !10288, !tbaa !10202
  store i64* %7, i64** %indices, align 8, !dbg !10286, !tbaa !2683
  %8 = bitcast i64** %cycles to i8*, !dbg !10289
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !10289
  call void @llvm.dbg.declare(metadata i64** %cycles, metadata !1760, metadata !2666), !dbg !10290
  %9 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10291, !tbaa !2683
  %cycles3 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %9, i32 0, i32 3, !dbg !10292
  %10 = load i64*, i64** %cycles3, align 8, !dbg !10292, !tbaa !10206
  store i64* %10, i64** %cycles, align 8, !dbg !10290, !tbaa !2683
  %11 = bitcast %struct._object** %result to i8*, !dbg !10293
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !10293
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1761, metadata !2666), !dbg !10294
  %12 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10295, !tbaa !2683
  %result4 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %12, i32 0, i32 4, !dbg !10296
  %13 = load %struct._object*, %struct._object** %result4, align 8, !dbg !10296, !tbaa !10167
  store %struct._object* %13, %struct._object** %result, align 8, !dbg !10294, !tbaa !2683
  %14 = bitcast i64* %n to i8*, !dbg !10297
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !10297
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1762, metadata !2666), !dbg !10298
  %15 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10299, !tbaa !2683
  %16 = bitcast %struct._object* %15 to %struct.PyVarObject*, !dbg !10300
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1, !dbg !10301
  %17 = load i64, i64* %ob_size, align 8, !dbg !10301, !tbaa !3426
  store i64 %17, i64* %n, align 8, !dbg !10298, !tbaa !3427
  %18 = bitcast i64* %r to i8*, !dbg !10302
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !10302
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1763, metadata !2666), !dbg !10303
  %19 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10304, !tbaa !2683
  %r5 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %19, i32 0, i32 5, !dbg !10305
  %20 = load i64, i64* %r5, align 8, !dbg !10305, !tbaa !10306
  store i64 %20, i64* %r, align 8, !dbg !10303, !tbaa !3427
  %21 = bitcast i64* %i to i8*, !dbg !10307
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !10307
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1764, metadata !2666), !dbg !10308
  %22 = bitcast i64* %j to i8*, !dbg !10307
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !10307
  call void @llvm.dbg.declare(metadata i64* %j, metadata !1765, metadata !2666), !dbg !10309
  %23 = bitcast i64* %k to i8*, !dbg !10307
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !10307
  call void @llvm.dbg.declare(metadata i64* %k, metadata !1766, metadata !2666), !dbg !10310
  %24 = bitcast i64* %index to i8*, !dbg !10307
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !10307
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1767, metadata !2666), !dbg !10311
  %25 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10312, !tbaa !2683
  %stopped = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %25, i32 0, i32 6, !dbg !10314
  %26 = load i32, i32* %stopped, align 4, !dbg !10314, !tbaa !10315
  %tobool = icmp ne i32 %26, 0, !dbg !10312
  br i1 %tobool, label %if.then, label %if.end, !dbg !10316

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !10317
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113, !dbg !10317

if.end:                                           ; preds = %entry
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !10318, !tbaa !2683
  %cmp = icmp eq %struct._object* %27, null, !dbg !10319
  br i1 %cmp, label %if.then.6, label %if.else, !dbg !10320

if.then.6:                                        ; preds = %if.end
  %28 = load i64, i64* %r, align 8, !dbg !10321, !tbaa !3427
  %call = call %struct._object* @PyTuple_New(i64 %28), !dbg !10323
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !10324, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %result, align 8, !dbg !10325, !tbaa !2683
  %cmp7 = icmp eq %struct._object* %29, null, !dbg !10327
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !10328

if.then.8:                                        ; preds = %if.then.6
  br label %empty, !dbg !10329

if.end.9:                                         ; preds = %if.then.6
  %30 = load %struct._object*, %struct._object** %result, align 8, !dbg !10330, !tbaa !2683
  %31 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10331, !tbaa !2683
  %result10 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %31, i32 0, i32 4, !dbg !10332
  store %struct._object* %30, %struct._object** %result10, align 8, !dbg !10333, !tbaa !10167
  store i64 0, i64* %i, align 8, !dbg !10334, !tbaa !3427
  br label %for.cond, !dbg !10336

for.cond:                                         ; preds = %for.inc, %if.end.9
  %32 = load i64, i64* %i, align 8, !dbg !10337, !tbaa !3427
  %33 = load i64, i64* %r, align 8, !dbg !10341, !tbaa !3427
  %cmp11 = icmp slt i64 %32, %33, !dbg !10342
  br i1 %cmp11, label %for.body, label %for.end, !dbg !10343

for.body:                                         ; preds = %for.cond
  %34 = load i64, i64* %i, align 8, !dbg !10344, !tbaa !3427
  %35 = load i64*, i64** %indices, align 8, !dbg !10346, !tbaa !2683
  %arrayidx = getelementptr i64, i64* %35, i64 %34, !dbg !10346
  %36 = load i64, i64* %arrayidx, align 8, !dbg !10346, !tbaa !3427
  store i64 %36, i64* %index, align 8, !dbg !10347, !tbaa !3427
  %37 = load i64, i64* %index, align 8, !dbg !10348, !tbaa !3427
  %38 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10349, !tbaa !2683
  %39 = bitcast %struct._object* %38 to %struct.PyTupleObject*, !dbg !10350
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %39, i32 0, i32 1, !dbg !10351
  %arrayidx12 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %37, !dbg !10352
  %40 = load %struct._object*, %struct._object** %arrayidx12, align 8, !dbg !10352, !tbaa !2683
  store %struct._object* %40, %struct._object** %elem, align 8, !dbg !10353, !tbaa !2683
  %41 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10354, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !10355
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !10356, !tbaa !2722
  %inc = add i64 %42, 1, !dbg !10356
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !10356, !tbaa !2722
  %43 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10357, !tbaa !2683
  %44 = load i64, i64* %i, align 8, !dbg !10358, !tbaa !3427
  %45 = load %struct._object*, %struct._object** %result, align 8, !dbg !10359, !tbaa !2683
  %46 = bitcast %struct._object* %45 to %struct.PyTupleObject*, !dbg !10360
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %46, i32 0, i32 1, !dbg !10361
  %arrayidx14 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item13, i32 0, i64 %44, !dbg !10362
  store %struct._object* %43, %struct._object** %arrayidx14, align 8, !dbg !10363, !tbaa !2683
  br label %for.inc, !dbg !10364

for.inc:                                          ; preds = %for.body
  %47 = load i64, i64* %i, align 8, !dbg !10365, !tbaa !3427
  %inc15 = add i64 %47, 1, !dbg !10365
  store i64 %inc15, i64* %i, align 8, !dbg !10365, !tbaa !3427
  br label %for.cond, !dbg !10366

for.end:                                          ; preds = %for.cond
  br label %if.end.109, !dbg !10367

if.else:                                          ; preds = %if.end
  %48 = load i64, i64* %n, align 8, !dbg !10368, !tbaa !3427
  %cmp16 = icmp eq i64 %48, 0, !dbg !10370
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !10371

if.then.17:                                       ; preds = %if.else
  br label %empty, !dbg !10372

if.end.18:                                        ; preds = %if.else
  %49 = load %struct._object*, %struct._object** %result, align 8, !dbg !10373, !tbaa !2683
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !10374
  %50 = load i64, i64* %ob_refcnt19, align 8, !dbg !10374, !tbaa !2722
  %cmp20 = icmp sgt i64 %50, 1, !dbg !10375
  br i1 %cmp20, label %if.then.21, label %if.end.44, !dbg !10376

if.then.21:                                       ; preds = %if.end.18
  %51 = bitcast %struct._object** %old_result to i8*, !dbg !10377
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !10377
  call void @llvm.dbg.declare(metadata %struct._object** %old_result, metadata !1768, metadata !2666), !dbg !10378
  %52 = load %struct._object*, %struct._object** %result, align 8, !dbg !10379, !tbaa !2683
  store %struct._object* %52, %struct._object** %old_result, align 8, !dbg !10378, !tbaa !2683
  %53 = load i64, i64* %r, align 8, !dbg !10380, !tbaa !3427
  %call22 = call %struct._object* @PyTuple_New(i64 %53), !dbg !10381
  store %struct._object* %call22, %struct._object** %result, align 8, !dbg !10382, !tbaa !2683
  %54 = load %struct._object*, %struct._object** %result, align 8, !dbg !10383, !tbaa !2683
  %cmp23 = icmp eq %struct._object* %54, null, !dbg !10385
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !10386

if.then.24:                                       ; preds = %if.then.21
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10387

if.end.25:                                        ; preds = %if.then.21
  %55 = load %struct._object*, %struct._object** %result, align 8, !dbg !10388, !tbaa !2683
  %56 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10389, !tbaa !2683
  %result26 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %56, i32 0, i32 4, !dbg !10390
  store %struct._object* %55, %struct._object** %result26, align 8, !dbg !10391, !tbaa !10167
  store i64 0, i64* %i, align 8, !dbg !10392, !tbaa !3427
  br label %for.cond.27, !dbg !10394

for.cond.27:                                      ; preds = %for.inc.36, %if.end.25
  %57 = load i64, i64* %i, align 8, !dbg !10395, !tbaa !3427
  %58 = load i64, i64* %r, align 8, !dbg !10399, !tbaa !3427
  %cmp28 = icmp slt i64 %57, %58, !dbg !10400
  br i1 %cmp28, label %for.body.29, label %for.end.38, !dbg !10401

for.body.29:                                      ; preds = %for.cond.27
  %59 = load i64, i64* %i, align 8, !dbg !10402, !tbaa !3427
  %60 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !10404, !tbaa !2683
  %61 = bitcast %struct._object* %60 to %struct.PyTupleObject*, !dbg !10405
  %ob_item30 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %61, i32 0, i32 1, !dbg !10406
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item30, i32 0, i64 %59, !dbg !10407
  %62 = load %struct._object*, %struct._object** %arrayidx31, align 8, !dbg !10407, !tbaa !2683
  store %struct._object* %62, %struct._object** %elem, align 8, !dbg !10408, !tbaa !2683
  %63 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10409, !tbaa !2683
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !10410
  %64 = load i64, i64* %ob_refcnt32, align 8, !dbg !10411, !tbaa !2722
  %inc33 = add i64 %64, 1, !dbg !10411
  store i64 %inc33, i64* %ob_refcnt32, align 8, !dbg !10411, !tbaa !2722
  %65 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10412, !tbaa !2683
  %66 = load i64, i64* %i, align 8, !dbg !10413, !tbaa !3427
  %67 = load %struct._object*, %struct._object** %result, align 8, !dbg !10414, !tbaa !2683
  %68 = bitcast %struct._object* %67 to %struct.PyTupleObject*, !dbg !10415
  %ob_item34 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %68, i32 0, i32 1, !dbg !10416
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item34, i32 0, i64 %66, !dbg !10417
  store %struct._object* %65, %struct._object** %arrayidx35, align 8, !dbg !10418, !tbaa !2683
  br label %for.inc.36, !dbg !10419

for.inc.36:                                       ; preds = %for.body.29
  %69 = load i64, i64* %i, align 8, !dbg !10420, !tbaa !3427
  %inc37 = add i64 %69, 1, !dbg !10420
  store i64 %inc37, i64* %i, align 8, !dbg !10420, !tbaa !3427
  br label %for.cond.27, !dbg !10421

for.end.38:                                       ; preds = %for.cond.27
  br label %do.body, !dbg !10422

do.body:                                          ; preds = %for.end.38
  %70 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10423
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !10423
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1773, metadata !2666), !dbg !10425
  %71 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !10426, !tbaa !2683
  store %struct._object* %71, %struct._object** %_py_decref_tmp, align 8, !dbg !10425, !tbaa !2683
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10427, !tbaa !2683
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !10429
  %73 = load i64, i64* %ob_refcnt39, align 8, !dbg !10430, !tbaa !2722
  %dec = add i64 %73, -1, !dbg !10430
  store i64 %dec, i64* %ob_refcnt39, align 8, !dbg !10430, !tbaa !2722
  %cmp40 = icmp ne i64 %dec, 0, !dbg !10431
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !10432

if.then.41:                                       ; preds = %do.body
  br label %if.end.43, !dbg !10433

if.else.42:                                       ; preds = %do.body
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10435, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !10437
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10437, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !10438
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10438, !tbaa !2768
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10439, !tbaa !2683
  call void %76(%struct._object* %77), !dbg !10440
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.42, %if.then.41
  %78 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10441
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !10441
  br label %do.cond, !dbg !10443

do.cond:                                          ; preds = %if.end.43
  br label %do.end, !dbg !10444

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !10446
  br label %cleanup, !dbg !10446

cleanup:                                          ; preds = %do.end, %if.then.24
  %79 = bitcast %struct._object** %old_result to i8*, !dbg !10447
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !10447
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %empty, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.44, !dbg !10449

if.end.44:                                        ; preds = %cleanup.cont, %if.end.18
  %80 = load i64, i64* %r, align 8, !dbg !10450, !tbaa !3427
  %sub = sub i64 %80, 1, !dbg !10451
  store i64 %sub, i64* %i, align 8, !dbg !10452, !tbaa !3427
  br label %for.cond.45, !dbg !10453

for.cond.45:                                      ; preds = %for.inc.103, %if.end.44
  %81 = load i64, i64* %i, align 8, !dbg !10454, !tbaa !3427
  %cmp46 = icmp sge i64 %81, 0, !dbg !10457
  br i1 %cmp46, label %for.body.47, label %for.end.105, !dbg !10458

for.body.47:                                      ; preds = %for.cond.45
  %82 = load i64, i64* %i, align 8, !dbg !10459, !tbaa !3427
  %83 = load i64*, i64** %cycles, align 8, !dbg !10460, !tbaa !2683
  %arrayidx48 = getelementptr i64, i64* %83, i64 %82, !dbg !10460
  %84 = load i64, i64* %arrayidx48, align 8, !dbg !10461, !tbaa !3427
  %sub49 = sub i64 %84, 1, !dbg !10461
  store i64 %sub49, i64* %arrayidx48, align 8, !dbg !10461, !tbaa !3427
  %85 = load i64, i64* %i, align 8, !dbg !10462, !tbaa !3427
  %86 = load i64*, i64** %cycles, align 8, !dbg !10463, !tbaa !2683
  %arrayidx50 = getelementptr i64, i64* %86, i64 %85, !dbg !10463
  %87 = load i64, i64* %arrayidx50, align 8, !dbg !10463, !tbaa !3427
  %cmp51 = icmp eq i64 %87, 0, !dbg !10464
  br i1 %cmp51, label %if.then.52, label %if.else.67, !dbg !10465

if.then.52:                                       ; preds = %for.body.47
  %88 = load i64, i64* %i, align 8, !dbg !10466, !tbaa !3427
  %89 = load i64*, i64** %indices, align 8, !dbg !10468, !tbaa !2683
  %arrayidx53 = getelementptr i64, i64* %89, i64 %88, !dbg !10468
  %90 = load i64, i64* %arrayidx53, align 8, !dbg !10468, !tbaa !3427
  store i64 %90, i64* %index, align 8, !dbg !10469, !tbaa !3427
  %91 = load i64, i64* %i, align 8, !dbg !10470, !tbaa !3427
  store i64 %91, i64* %j, align 8, !dbg !10472, !tbaa !3427
  br label %for.cond.54, !dbg !10473

for.cond.54:                                      ; preds = %for.inc.60, %if.then.52
  %92 = load i64, i64* %j, align 8, !dbg !10474, !tbaa !3427
  %93 = load i64, i64* %n, align 8, !dbg !10478, !tbaa !3427
  %sub55 = sub i64 %93, 1, !dbg !10479
  %cmp56 = icmp slt i64 %92, %sub55, !dbg !10480
  br i1 %cmp56, label %for.body.57, label %for.end.62, !dbg !10481

for.body.57:                                      ; preds = %for.cond.54
  %94 = load i64, i64* %j, align 8, !dbg !10482, !tbaa !3427
  %add = add i64 %94, 1, !dbg !10483
  %95 = load i64*, i64** %indices, align 8, !dbg !10484, !tbaa !2683
  %arrayidx58 = getelementptr i64, i64* %95, i64 %add, !dbg !10484
  %96 = load i64, i64* %arrayidx58, align 8, !dbg !10484, !tbaa !3427
  %97 = load i64, i64* %j, align 8, !dbg !10485, !tbaa !3427
  %98 = load i64*, i64** %indices, align 8, !dbg !10486, !tbaa !2683
  %arrayidx59 = getelementptr i64, i64* %98, i64 %97, !dbg !10486
  store i64 %96, i64* %arrayidx59, align 8, !dbg !10487, !tbaa !3427
  br label %for.inc.60, !dbg !10486

for.inc.60:                                       ; preds = %for.body.57
  %99 = load i64, i64* %j, align 8, !dbg !10488, !tbaa !3427
  %inc61 = add i64 %99, 1, !dbg !10488
  store i64 %inc61, i64* %j, align 8, !dbg !10488, !tbaa !3427
  br label %for.cond.54, !dbg !10489

for.end.62:                                       ; preds = %for.cond.54
  %100 = load i64, i64* %index, align 8, !dbg !10490, !tbaa !3427
  %101 = load i64, i64* %n, align 8, !dbg !10491, !tbaa !3427
  %sub63 = sub i64 %101, 1, !dbg !10492
  %102 = load i64*, i64** %indices, align 8, !dbg !10493, !tbaa !2683
  %arrayidx64 = getelementptr i64, i64* %102, i64 %sub63, !dbg !10493
  store i64 %100, i64* %arrayidx64, align 8, !dbg !10494, !tbaa !3427
  %103 = load i64, i64* %n, align 8, !dbg !10495, !tbaa !3427
  %104 = load i64, i64* %i, align 8, !dbg !10496, !tbaa !3427
  %sub65 = sub i64 %103, %104, !dbg !10497
  %105 = load i64, i64* %i, align 8, !dbg !10498, !tbaa !3427
  %106 = load i64*, i64** %cycles, align 8, !dbg !10499, !tbaa !2683
  %arrayidx66 = getelementptr i64, i64* %106, i64 %105, !dbg !10499
  store i64 %sub65, i64* %arrayidx66, align 8, !dbg !10500, !tbaa !3427
  br label %if.end.102, !dbg !10501

if.else.67:                                       ; preds = %for.body.47
  %107 = load i64, i64* %i, align 8, !dbg !10502, !tbaa !3427
  %108 = load i64*, i64** %cycles, align 8, !dbg !10503, !tbaa !2683
  %arrayidx68 = getelementptr i64, i64* %108, i64 %107, !dbg !10503
  %109 = load i64, i64* %arrayidx68, align 8, !dbg !10503, !tbaa !3427
  store i64 %109, i64* %j, align 8, !dbg !10504, !tbaa !3427
  %110 = load i64, i64* %i, align 8, !dbg !10505, !tbaa !3427
  %111 = load i64*, i64** %indices, align 8, !dbg !10506, !tbaa !2683
  %arrayidx69 = getelementptr i64, i64* %111, i64 %110, !dbg !10506
  %112 = load i64, i64* %arrayidx69, align 8, !dbg !10506, !tbaa !3427
  store i64 %112, i64* %index, align 8, !dbg !10507, !tbaa !3427
  %113 = load i64, i64* %n, align 8, !dbg !10508, !tbaa !3427
  %114 = load i64, i64* %j, align 8, !dbg !10509, !tbaa !3427
  %sub70 = sub i64 %113, %114, !dbg !10510
  %115 = load i64*, i64** %indices, align 8, !dbg !10511, !tbaa !2683
  %arrayidx71 = getelementptr i64, i64* %115, i64 %sub70, !dbg !10511
  %116 = load i64, i64* %arrayidx71, align 8, !dbg !10511, !tbaa !3427
  %117 = load i64, i64* %i, align 8, !dbg !10512, !tbaa !3427
  %118 = load i64*, i64** %indices, align 8, !dbg !10513, !tbaa !2683
  %arrayidx72 = getelementptr i64, i64* %118, i64 %117, !dbg !10513
  store i64 %116, i64* %arrayidx72, align 8, !dbg !10514, !tbaa !3427
  %119 = load i64, i64* %index, align 8, !dbg !10515, !tbaa !3427
  %120 = load i64, i64* %n, align 8, !dbg !10516, !tbaa !3427
  %121 = load i64, i64* %j, align 8, !dbg !10517, !tbaa !3427
  %sub73 = sub i64 %120, %121, !dbg !10518
  %122 = load i64*, i64** %indices, align 8, !dbg !10519, !tbaa !2683
  %arrayidx74 = getelementptr i64, i64* %122, i64 %sub73, !dbg !10519
  store i64 %119, i64* %arrayidx74, align 8, !dbg !10520, !tbaa !3427
  %123 = load i64, i64* %i, align 8, !dbg !10521, !tbaa !3427
  store i64 %123, i64* %k, align 8, !dbg !10522, !tbaa !3427
  br label %for.cond.75, !dbg !10523

for.cond.75:                                      ; preds = %for.inc.99, %if.else.67
  %124 = load i64, i64* %k, align 8, !dbg !10524, !tbaa !3427
  %125 = load i64, i64* %r, align 8, !dbg !10527, !tbaa !3427
  %cmp76 = icmp slt i64 %124, %125, !dbg !10528
  br i1 %cmp76, label %for.body.77, label %for.end.101, !dbg !10529

for.body.77:                                      ; preds = %for.cond.75
  %126 = load i64, i64* %k, align 8, !dbg !10530, !tbaa !3427
  %127 = load i64*, i64** %indices, align 8, !dbg !10531, !tbaa !2683
  %arrayidx78 = getelementptr i64, i64* %127, i64 %126, !dbg !10531
  %128 = load i64, i64* %arrayidx78, align 8, !dbg !10531, !tbaa !3427
  store i64 %128, i64* %index, align 8, !dbg !10532, !tbaa !3427
  %129 = load i64, i64* %index, align 8, !dbg !10533, !tbaa !3427
  %130 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10534, !tbaa !2683
  %131 = bitcast %struct._object* %130 to %struct.PyTupleObject*, !dbg !10535
  %ob_item79 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %131, i32 0, i32 1, !dbg !10536
  %arrayidx80 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item79, i32 0, i64 %129, !dbg !10537
  %132 = load %struct._object*, %struct._object** %arrayidx80, align 8, !dbg !10537, !tbaa !2683
  store %struct._object* %132, %struct._object** %elem, align 8, !dbg !10538, !tbaa !2683
  %133 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10539, !tbaa !2683
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 0, !dbg !10540
  %134 = load i64, i64* %ob_refcnt81, align 8, !dbg !10541, !tbaa !2722
  %inc82 = add i64 %134, 1, !dbg !10541
  store i64 %inc82, i64* %ob_refcnt81, align 8, !dbg !10541, !tbaa !2722
  %135 = load i64, i64* %k, align 8, !dbg !10542, !tbaa !3427
  %136 = load %struct._object*, %struct._object** %result, align 8, !dbg !10543, !tbaa !2683
  %137 = bitcast %struct._object* %136 to %struct.PyTupleObject*, !dbg !10544
  %ob_item83 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %137, i32 0, i32 1, !dbg !10545
  %arrayidx84 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item83, i32 0, i64 %135, !dbg !10546
  %138 = load %struct._object*, %struct._object** %arrayidx84, align 8, !dbg !10546, !tbaa !2683
  store %struct._object* %138, %struct._object** %oldelem, align 8, !dbg !10547, !tbaa !2683
  %139 = load %struct._object*, %struct._object** %elem, align 8, !dbg !10548, !tbaa !2683
  %140 = load i64, i64* %k, align 8, !dbg !10549, !tbaa !3427
  %141 = load %struct._object*, %struct._object** %result, align 8, !dbg !10550, !tbaa !2683
  %142 = bitcast %struct._object* %141 to %struct.PyTupleObject*, !dbg !10551
  %ob_item85 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %142, i32 0, i32 1, !dbg !10552
  %arrayidx86 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item85, i32 0, i64 %140, !dbg !10553
  store %struct._object* %139, %struct._object** %arrayidx86, align 8, !dbg !10554, !tbaa !2683
  br label %do.body.87, !dbg !10555

do.body.87:                                       ; preds = %for.body.77
  %143 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !10556
  call void @llvm.lifetime.start(i64 8, i8* %143) #1, !dbg !10556
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp88, metadata !1775, metadata !2666), !dbg !10558
  %144 = load %struct._object*, %struct._object** %oldelem, align 8, !dbg !10559, !tbaa !2683
  store %struct._object* %144, %struct._object** %_py_decref_tmp88, align 8, !dbg !10558, !tbaa !2683
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10560, !tbaa !2683
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 0, !dbg !10562
  %146 = load i64, i64* %ob_refcnt89, align 8, !dbg !10563, !tbaa !2722
  %dec90 = add i64 %146, -1, !dbg !10563
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !10563, !tbaa !2722
  %cmp91 = icmp ne i64 %dec90, 0, !dbg !10564
  br i1 %cmp91, label %if.then.92, label %if.else.93, !dbg !10565

if.then.92:                                       ; preds = %do.body.87
  br label %if.end.96, !dbg !10566

if.else.93:                                       ; preds = %do.body.87
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10568, !tbaa !2683
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %147, i32 0, i32 1, !dbg !10570
  %148 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !10570, !tbaa !2675
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %148, i32 0, i32 4, !dbg !10571
  %149 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !10571, !tbaa !2768
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10572, !tbaa !2683
  call void %149(%struct._object* %150), !dbg !10573
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %151 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !10574
  call void @llvm.lifetime.end(i64 8, i8* %151) #1, !dbg !10574
  br label %do.cond.97, !dbg !10576

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !10577

do.end.98:                                        ; preds = %do.cond.97
  br label %for.inc.99, !dbg !10579

for.inc.99:                                       ; preds = %do.end.98
  %152 = load i64, i64* %k, align 8, !dbg !10580, !tbaa !3427
  %inc100 = add i64 %152, 1, !dbg !10580
  store i64 %inc100, i64* %k, align 8, !dbg !10580, !tbaa !3427
  br label %for.cond.75, !dbg !10581

for.end.101:                                      ; preds = %for.cond.75
  br label %for.end.105, !dbg !10582

if.end.102:                                       ; preds = %for.end.62
  br label %for.inc.103, !dbg !10583

for.inc.103:                                      ; preds = %if.end.102
  %153 = load i64, i64* %i, align 8, !dbg !10584, !tbaa !3427
  %dec104 = add i64 %153, -1, !dbg !10584
  store i64 %dec104, i64* %i, align 8, !dbg !10584, !tbaa !3427
  br label %for.cond.45, !dbg !10585

for.end.105:                                      ; preds = %for.end.101, %for.cond.45
  %154 = load i64, i64* %i, align 8, !dbg !10586, !tbaa !3427
  %cmp106 = icmp slt i64 %154, 0, !dbg !10588
  br i1 %cmp106, label %if.then.107, label %if.end.108, !dbg !10589

if.then.107:                                      ; preds = %for.end.105
  br label %empty, !dbg !10590

if.end.108:                                       ; preds = %for.end.105
  br label %if.end.109

if.end.109:                                       ; preds = %if.end.108, %for.end
  %155 = load %struct._object*, %struct._object** %result, align 8, !dbg !10591, !tbaa !2683
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !10592
  %156 = load i64, i64* %ob_refcnt110, align 8, !dbg !10593, !tbaa !2722
  %inc111 = add i64 %156, 1, !dbg !10593
  store i64 %inc111, i64* %ob_refcnt110, align 8, !dbg !10593, !tbaa !2722
  %157 = load %struct._object*, %struct._object** %result, align 8, !dbg !10594, !tbaa !2683
  store %struct._object* %157, %struct._object** %retval, !dbg !10595
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113, !dbg !10595

empty:                                            ; preds = %LeafBlock.1, %if.then.107, %if.then.17, %if.then.8
  %158 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10596, !tbaa !2683
  %stopped112 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %158, i32 0, i32 6, !dbg !10597
  store i32 1, i32* %stopped112, align 4, !dbg !10598, !tbaa !10315
  store %struct._object* null, %struct._object** %retval, !dbg !10599
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113, !dbg !10599

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.113

cleanup.113:                                      ; preds = %NewDefault, %empty, %if.end.109, %if.then
  %159 = bitcast i64* %index to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %159) #1, !dbg !10600
  %160 = bitcast i64* %k to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %160) #1, !dbg !10600
  %161 = bitcast i64* %j to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %161) #1, !dbg !10600
  %162 = bitcast i64* %i to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %162) #1, !dbg !10600
  %163 = bitcast i64* %r to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %163) #1, !dbg !10600
  %164 = bitcast i64* %n to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %164) #1, !dbg !10600
  %165 = bitcast %struct._object** %result to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %165) #1, !dbg !10600
  %166 = bitcast i64** %cycles to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %166) #1, !dbg !10600
  %167 = bitcast i64** %indices to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %167) #1, !dbg !10600
  %168 = bitcast %struct._object** %pool to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %168) #1, !dbg !10600
  %169 = bitcast %struct._object** %oldelem to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %169) #1, !dbg !10600
  %170 = bitcast %struct._object** %elem to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %170) #1, !dbg !10600
  %171 = load %struct._object*, %struct._object** %retval, !dbg !10600
  ret %struct._object* %171, !dbg !10600
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %po = alloca %struct.permutationsobject*, align 8
  %n = alloca i64, align 8
  %r = alloca i64, align 8
  %robj = alloca %struct._object*, align 8
  %pool = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %cycles = alloca i64*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1853, metadata !2666), !dbg !10601
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1854, metadata !2666), !dbg !10602
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1855, metadata !2666), !dbg !10603
  %0 = bitcast %struct.permutationsobject** %po to i8*, !dbg !10604
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10604
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po, metadata !1856, metadata !2666), !dbg !10605
  %1 = bitcast i64* %n to i8*, !dbg !10606
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10606
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1857, metadata !2666), !dbg !10607
  %2 = bitcast i64* %r to i8*, !dbg !10608
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10608
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1858, metadata !2666), !dbg !10609
  %3 = bitcast %struct._object** %robj to i8*, !dbg !10610
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10610
  call void @llvm.dbg.declare(metadata %struct._object** %robj, metadata !1859, metadata !2666), !dbg !10611
  store %struct._object* @_Py_NoneStruct, %struct._object** %robj, align 8, !dbg !10611, !tbaa !2683
  %4 = bitcast %struct._object** %pool to i8*, !dbg !10612
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10612
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !1860, metadata !2666), !dbg !10613
  store %struct._object* null, %struct._object** %pool, align 8, !dbg !10613, !tbaa !2683
  %5 = bitcast %struct._object** %iterable to i8*, !dbg !10614
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10614
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !1861, metadata !2666), !dbg !10615
  store %struct._object* null, %struct._object** %iterable, align 8, !dbg !10615, !tbaa !2683
  %6 = bitcast i64** %indices to i8*, !dbg !10616
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !10616
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !1862, metadata !2666), !dbg !10617
  store i64* null, i64** %indices, align 8, !dbg !10617, !tbaa !2683
  %7 = bitcast i64** %cycles to i8*, !dbg !10618
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !10618
  call void @llvm.dbg.declare(metadata i64** %cycles, metadata !1863, metadata !2666), !dbg !10619
  store i64* null, i64** %cycles, align 8, !dbg !10619, !tbaa !2683
  %8 = bitcast i64* %i to i8*, !dbg !10620
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !10620
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1864, metadata !2666), !dbg !10621
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10622, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !10624, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %9, %struct._object* %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @permutations_new.kwargs, i32 0, i32 0), %struct._object** %iterable, %struct._object** %robj), !dbg !10625
  %tobool = icmp ne i32 %call, 0, !dbg !10625
  br i1 %tobool, label %if.end, label %if.then, !dbg !10626

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !10627
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10627

if.end:                                           ; preds = %entry
  %11 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !10628, !tbaa !2683
  %call1 = call %struct._object* @PySequence_Tuple(%struct._object* %11), !dbg !10629
  store %struct._object* %call1, %struct._object** %pool, align 8, !dbg !10630, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10631, !tbaa !2683
  %cmp = icmp eq %struct._object* %12, null, !dbg !10633
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !10634

if.then.2:                                        ; preds = %if.end
  br label %error, !dbg !10635

if.end.3:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10636, !tbaa !2683
  %14 = bitcast %struct._object* %13 to %struct.PyVarObject*, !dbg !10637
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1, !dbg !10638
  %15 = load i64, i64* %ob_size, align 8, !dbg !10638, !tbaa !3426
  store i64 %15, i64* %n, align 8, !dbg !10639, !tbaa !3427
  %16 = load i64, i64* %n, align 8, !dbg !10640, !tbaa !3427
  store i64 %16, i64* %r, align 8, !dbg !10641, !tbaa !3427
  %17 = load %struct._object*, %struct._object** %robj, align 8, !dbg !10642, !tbaa !2683
  %cmp4 = icmp ne %struct._object* %17, @_Py_NoneStruct, !dbg !10644
  br i1 %cmp4, label %if.then.5, label %if.end.15, !dbg !10645

if.then.5:                                        ; preds = %if.end.3
  %18 = load %struct._object*, %struct._object** %robj, align 8, !dbg !10646, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !10649
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10649, !tbaa !2675
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19, !dbg !10650
  %20 = load i64, i64* %tp_flags, align 8, !dbg !10650, !tbaa !3968
  %and = and i64 %20, 16777216, !dbg !10651
  %cmp6 = icmp ne i64 %and, 0, !dbg !10652
  br i1 %cmp6, label %if.end.8, label %if.then.7, !dbg !10653

if.then.7:                                        ; preds = %if.then.5
  %21 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10654, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i32 0, i32 0)), !dbg !10656
  br label %error, !dbg !10657

if.end.8:                                         ; preds = %if.then.5
  %22 = load %struct._object*, %struct._object** %robj, align 8, !dbg !10658, !tbaa !2683
  %call9 = call i64 @PyLong_AsSsize_t(%struct._object* %22), !dbg !10659
  store i64 %call9, i64* %r, align 8, !dbg !10660, !tbaa !3427
  %23 = load i64, i64* %r, align 8, !dbg !10661, !tbaa !3427
  %cmp10 = icmp eq i64 %23, -1, !dbg !10663
  br i1 %cmp10, label %land.lhs.true, label %if.end.14, !dbg !10664

land.lhs.true:                                    ; preds = %if.end.8
  %call11 = call %struct._object* @PyErr_Occurred(), !dbg !10665
  %tobool12 = icmp ne %struct._object* %call11, null, !dbg !10665
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !10667

if.then.13:                                       ; preds = %land.lhs.true
  br label %error, !dbg !10668

if.end.14:                                        ; preds = %land.lhs.true, %if.end.8
  br label %if.end.15, !dbg !10669

if.end.15:                                        ; preds = %if.end.14, %if.end.3
  %24 = load i64, i64* %r, align 8, !dbg !10670, !tbaa !3427
  %cmp16 = icmp slt i64 %24, 0, !dbg !10672
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !10673

if.then.17:                                       ; preds = %if.end.15
  %25 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10674, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0)), !dbg !10676
  br label %error, !dbg !10677

if.end.18:                                        ; preds = %if.end.15
  %26 = load i64, i64* %n, align 8, !dbg !10678, !tbaa !3427
  %mul = mul i64 %26, 8, !dbg !10679
  %call19 = call i8* @PyMem_Malloc(i64 %mul), !dbg !10680
  %27 = bitcast i8* %call19 to i64*, !dbg !10680
  store i64* %27, i64** %indices, align 8, !dbg !10681, !tbaa !2683
  %28 = load i64, i64* %r, align 8, !dbg !10682, !tbaa !3427
  %mul20 = mul i64 %28, 8, !dbg !10683
  %call21 = call i8* @PyMem_Malloc(i64 %mul20), !dbg !10684
  %29 = bitcast i8* %call21 to i64*, !dbg !10684
  store i64* %29, i64** %cycles, align 8, !dbg !10685, !tbaa !2683
  %30 = load i64*, i64** %indices, align 8, !dbg !10686, !tbaa !2683
  %cmp22 = icmp eq i64* %30, null, !dbg !10688
  br i1 %cmp22, label %if.then.24, label %lor.lhs.false, !dbg !10689

lor.lhs.false:                                    ; preds = %if.end.18
  %31 = load i64*, i64** %cycles, align 8, !dbg !10690, !tbaa !2683
  %cmp23 = icmp eq i64* %31, null, !dbg !10692
  br i1 %cmp23, label %if.then.24, label %if.end.26, !dbg !10693

if.then.24:                                       ; preds = %lor.lhs.false, %if.end.18
  %call25 = call %struct._object* @PyErr_NoMemory(), !dbg !10694
  br label %error, !dbg !10696

if.end.26:                                        ; preds = %lor.lhs.false
  store i64 0, i64* %i, align 8, !dbg !10697, !tbaa !3427
  br label %for.cond, !dbg !10699

for.cond:                                         ; preds = %for.inc, %if.end.26
  %32 = load i64, i64* %i, align 8, !dbg !10700, !tbaa !3427
  %33 = load i64, i64* %n, align 8, !dbg !10704, !tbaa !3427
  %cmp27 = icmp slt i64 %32, %33, !dbg !10705
  br i1 %cmp27, label %for.body, label %for.end, !dbg !10706

for.body:                                         ; preds = %for.cond
  %34 = load i64, i64* %i, align 8, !dbg !10707, !tbaa !3427
  %35 = load i64, i64* %i, align 8, !dbg !10708, !tbaa !3427
  %36 = load i64*, i64** %indices, align 8, !dbg !10709, !tbaa !2683
  %arrayidx = getelementptr i64, i64* %36, i64 %35, !dbg !10709
  store i64 %34, i64* %arrayidx, align 8, !dbg !10710, !tbaa !3427
  br label %for.inc, !dbg !10709

for.inc:                                          ; preds = %for.body
  %37 = load i64, i64* %i, align 8, !dbg !10711, !tbaa !3427
  %inc = add i64 %37, 1, !dbg !10711
  store i64 %inc, i64* %i, align 8, !dbg !10711, !tbaa !3427
  br label %for.cond, !dbg !10712

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !10713, !tbaa !3427
  br label %for.cond.28, !dbg !10715

for.cond.28:                                      ; preds = %for.inc.32, %for.end
  %38 = load i64, i64* %i, align 8, !dbg !10716, !tbaa !3427
  %39 = load i64, i64* %r, align 8, !dbg !10720, !tbaa !3427
  %cmp29 = icmp slt i64 %38, %39, !dbg !10721
  br i1 %cmp29, label %for.body.30, label %for.end.34, !dbg !10722

for.body.30:                                      ; preds = %for.cond.28
  %40 = load i64, i64* %n, align 8, !dbg !10723, !tbaa !3427
  %41 = load i64, i64* %i, align 8, !dbg !10724, !tbaa !3427
  %sub = sub i64 %40, %41, !dbg !10725
  %42 = load i64, i64* %i, align 8, !dbg !10726, !tbaa !3427
  %43 = load i64*, i64** %cycles, align 8, !dbg !10727, !tbaa !2683
  %arrayidx31 = getelementptr i64, i64* %43, i64 %42, !dbg !10727
  store i64 %sub, i64* %arrayidx31, align 8, !dbg !10728, !tbaa !3427
  br label %for.inc.32, !dbg !10727

for.inc.32:                                       ; preds = %for.body.30
  %44 = load i64, i64* %i, align 8, !dbg !10729, !tbaa !3427
  %inc33 = add i64 %44, 1, !dbg !10729
  store i64 %inc33, i64* %i, align 8, !dbg !10729, !tbaa !3427
  br label %for.cond.28, !dbg !10730

for.end.34:                                       ; preds = %for.cond.28
  %45 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !10731, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 36, !dbg !10732
  %46 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !10732, !tbaa !3097
  %47 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !10733, !tbaa !2683
  %call35 = call %struct._object* %46(%struct._typeobject* %47, i64 0), !dbg !10731
  %48 = bitcast %struct._object* %call35 to %struct.permutationsobject*, !dbg !10734
  store %struct.permutationsobject* %48, %struct.permutationsobject** %po, align 8, !dbg !10735, !tbaa !2683
  %49 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10736, !tbaa !2683
  %cmp36 = icmp eq %struct.permutationsobject* %49, null, !dbg !10738
  br i1 %cmp36, label %if.then.37, label %if.end.38, !dbg !10739

if.then.37:                                       ; preds = %for.end.34
  br label %error, !dbg !10740

if.end.38:                                        ; preds = %for.end.34
  %50 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10741, !tbaa !2683
  %51 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10742, !tbaa !2683
  %pool39 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %51, i32 0, i32 1, !dbg !10743
  store %struct._object* %50, %struct._object** %pool39, align 8, !dbg !10744, !tbaa !10125
  %52 = load i64*, i64** %indices, align 8, !dbg !10745, !tbaa !2683
  %53 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10746, !tbaa !2683
  %indices40 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %53, i32 0, i32 2, !dbg !10747
  store i64* %52, i64** %indices40, align 8, !dbg !10748, !tbaa !10202
  %54 = load i64*, i64** %cycles, align 8, !dbg !10749, !tbaa !2683
  %55 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10750, !tbaa !2683
  %cycles41 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %55, i32 0, i32 3, !dbg !10751
  store i64* %54, i64** %cycles41, align 8, !dbg !10752, !tbaa !10206
  %56 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10753, !tbaa !2683
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %56, i32 0, i32 4, !dbg !10754
  store %struct._object* null, %struct._object** %result, align 8, !dbg !10755, !tbaa !10167
  %57 = load i64, i64* %r, align 8, !dbg !10756, !tbaa !3427
  %58 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10757, !tbaa !2683
  %r42 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %58, i32 0, i32 5, !dbg !10758
  store i64 %57, i64* %r42, align 8, !dbg !10759, !tbaa !10306
  %59 = load i64, i64* %r, align 8, !dbg !10760, !tbaa !3427
  %60 = load i64, i64* %n, align 8, !dbg !10761, !tbaa !3427
  %cmp43 = icmp sgt i64 %59, %60, !dbg !10762
  %cond = select i1 %cmp43, i32 1, i32 0, !dbg !10760
  %61 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10763, !tbaa !2683
  %stopped = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %61, i32 0, i32 6, !dbg !10764
  store i32 %cond, i32* %stopped, align 4, !dbg !10765, !tbaa !10315
  %62 = load %struct.permutationsobject*, %struct.permutationsobject** %po, align 8, !dbg !10766, !tbaa !2683
  %63 = bitcast %struct.permutationsobject* %62 to %struct._object*, !dbg !10767
  store %struct._object* %63, %struct._object** %retval, !dbg !10768
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10768

error:                                            ; preds = %if.then.37, %if.then.24, %if.then.17, %if.then.13, %if.then.7, %if.then.2
  %64 = load i64*, i64** %indices, align 8, !dbg !10769, !tbaa !2683
  %cmp44 = icmp ne i64* %64, null, !dbg !10771
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !10772

if.then.45:                                       ; preds = %error
  %65 = load i64*, i64** %indices, align 8, !dbg !10773, !tbaa !2683
  %66 = bitcast i64* %65 to i8*, !dbg !10773
  call void @PyMem_Free(i8* %66), !dbg !10774
  br label %if.end.46, !dbg !10774

if.end.46:                                        ; preds = %if.then.45, %error
  %67 = load i64*, i64** %cycles, align 8, !dbg !10775, !tbaa !2683
  %cmp47 = icmp ne i64* %67, null, !dbg !10777
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !10778

if.then.48:                                       ; preds = %if.end.46
  %68 = load i64*, i64** %cycles, align 8, !dbg !10779, !tbaa !2683
  %69 = bitcast i64* %68 to i8*, !dbg !10779
  call void @PyMem_Free(i8* %69), !dbg !10780
  br label %if.end.49, !dbg !10780

if.end.49:                                        ; preds = %if.then.48, %if.end.46
  br label %do.body, !dbg !10781

do.body:                                          ; preds = %if.end.49
  %70 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10782
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !10782
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1865, metadata !2666), !dbg !10784
  %71 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10785, !tbaa !2683
  store %struct._object* %71, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10784, !tbaa !2683
  %72 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10786, !tbaa !2683
  %cmp50 = icmp ne %struct._object* %72, null, !dbg !10787
  br i1 %cmp50, label %if.then.51, label %if.end.57, !dbg !10788

if.then.51:                                       ; preds = %do.body
  br label %do.body.52, !dbg !10789

do.body.52:                                       ; preds = %if.then.51
  %73 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10791
  call void @llvm.lifetime.start(i64 8, i8* %73) #1, !dbg !10791
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1867, metadata !2666), !dbg !10793
  %74 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10794, !tbaa !2683
  store %struct._object* %74, %struct._object** %_py_decref_tmp, align 8, !dbg !10793, !tbaa !2683
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10795, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !10797
  %76 = load i64, i64* %ob_refcnt, align 8, !dbg !10798, !tbaa !2722
  %dec = add i64 %76, -1, !dbg !10798
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10798, !tbaa !2722
  %cmp53 = icmp ne i64 %dec, 0, !dbg !10799
  br i1 %cmp53, label %if.then.54, label %if.else, !dbg !10800

if.then.54:                                       ; preds = %do.body.52
  br label %if.end.56, !dbg !10801

if.else:                                          ; preds = %do.body.52
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10803, !tbaa !2683
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !10805
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !10805, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4, !dbg !10806
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10806, !tbaa !2768
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10807, !tbaa !2683
  call void %79(%struct._object* %80), !dbg !10808
  br label %if.end.56

if.end.56:                                        ; preds = %if.else, %if.then.54
  %81 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10809
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !10809
  br label %do.cond, !dbg !10811

do.cond:                                          ; preds = %if.end.56
  br label %do.end, !dbg !10812

do.end:                                           ; preds = %do.cond
  br label %if.end.57, !dbg !10814

if.end.57:                                        ; preds = %do.end, %do.body
  %82 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10816
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !10816
  br label %do.cond.58, !dbg !10819

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !10820

do.end.59:                                        ; preds = %do.cond.58
  store %struct._object* null, %struct._object** %retval, !dbg !10822
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10822

cleanup:                                          ; preds = %do.end.59, %if.end.38, %if.then
  %83 = bitcast i64* %i to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !10823
  %84 = bitcast i64** %cycles to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !10823
  %85 = bitcast i64** %indices to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !10823
  %86 = bitcast %struct._object** %iterable to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !10823
  %87 = bitcast %struct._object** %pool to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !10823
  %88 = bitcast %struct._object** %robj to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !10823
  %89 = bitcast i64* %r to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !10823
  %90 = bitcast i64* %n to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !10823
  %91 = bitcast %struct.permutationsobject** %po to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !10823
  %92 = load %struct._object*, %struct._object** %retval, !dbg !10823
  ret %struct._object* %92, !dbg !10823
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_reduce(%struct.permutationsobject* %po) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %po.addr = alloca %struct.permutationsobject*, align 8
  %indices = alloca %struct._object*, align 8
  %cycles = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %i = alloca i64, align 8
  %index = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %index26 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  store %struct.permutationsobject* %po, %struct.permutationsobject** %po.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po.addr, metadata !1787, metadata !2666), !dbg !10824
  %0 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10825, !tbaa !2683
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %0, i32 0, i32 4, !dbg !10826
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !10826, !tbaa !10167
  %cmp = icmp eq %struct._object* %1, null, !dbg !10827
  br i1 %cmp, label %if.then, label %if.else, !dbg !10828

if.then:                                          ; preds = %entry
  %2 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10829, !tbaa !2683
  %3 = bitcast %struct.permutationsobject* %2 to %struct._object*, !dbg !10831
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !10832
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10832, !tbaa !2675
  %5 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10833, !tbaa !2683
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %5, i32 0, i32 1, !dbg !10834
  %6 = load %struct._object*, %struct._object** %pool, align 8, !dbg !10834, !tbaa !10125
  %7 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10835, !tbaa !2683
  %r = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %7, i32 0, i32 5, !dbg !10836
  %8 = load i64, i64* %r, align 8, !dbg !10836, !tbaa !10306
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._typeobject* %4, %struct._object* %6, i64 %8), !dbg !10837
  store %struct._object* %call, %struct._object** %retval, !dbg !10838
  br label %return, !dbg !10838

if.else:                                          ; preds = %entry
  %9 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10839, !tbaa !2683
  %stopped = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %9, i32 0, i32 6, !dbg !10840
  %10 = load i32, i32* %stopped, align 4, !dbg !10840, !tbaa !10315
  %tobool = icmp ne i32 %10, 0, !dbg !10839
  br i1 %tobool, label %if.then.1, label %if.else.5, !dbg !10841

if.then.1:                                        ; preds = %if.else
  %11 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10842, !tbaa !2683
  %12 = bitcast %struct.permutationsobject* %11 to %struct._object*, !dbg !10844
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !10845
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !10845, !tbaa !2675
  %14 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10846, !tbaa !2683
  %r3 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %14, i32 0, i32 5, !dbg !10847
  %15 = load i64, i64* %r3, align 8, !dbg !10847, !tbaa !10306
  %call4 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._typeobject* %13, i64 %15), !dbg !10848
  store %struct._object* %call4, %struct._object** %retval, !dbg !10849
  br label %return, !dbg !10849

if.else.5:                                        ; preds = %if.else
  %16 = bitcast %struct._object** %indices to i8*, !dbg !10850
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !10850
  call void @llvm.dbg.declare(metadata %struct._object** %indices, metadata !1788, metadata !2666), !dbg !10851
  store %struct._object* null, %struct._object** %indices, align 8, !dbg !10851, !tbaa !2683
  %17 = bitcast %struct._object** %cycles to i8*, !dbg !10850
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !10850
  call void @llvm.dbg.declare(metadata %struct._object** %cycles, metadata !1792, metadata !2666), !dbg !10852
  store %struct._object* null, %struct._object** %cycles, align 8, !dbg !10852, !tbaa !2683
  %18 = bitcast i64* %n to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !10853
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1793, metadata !2666), !dbg !10854
  %19 = bitcast i64* %i to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !10853
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1794, metadata !2666), !dbg !10855
  %20 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10856, !tbaa !2683
  %pool6 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %20, i32 0, i32 1, !dbg !10857
  %21 = load %struct._object*, %struct._object** %pool6, align 8, !dbg !10857, !tbaa !10125
  %22 = bitcast %struct._object* %21 to %struct.PyVarObject*, !dbg !10858
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1, !dbg !10859
  %23 = load i64, i64* %ob_size, align 8, !dbg !10859, !tbaa !3426
  store i64 %23, i64* %n, align 8, !dbg !10860, !tbaa !3427
  %24 = load i64, i64* %n, align 8, !dbg !10861, !tbaa !3427
  %call7 = call %struct._object* @PyTuple_New(i64 %24), !dbg !10862
  store %struct._object* %call7, %struct._object** %indices, align 8, !dbg !10863, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %indices, align 8, !dbg !10864, !tbaa !2683
  %cmp8 = icmp eq %struct._object* %25, null, !dbg !10866
  br i1 %cmp8, label %if.then.9, label %if.end, !dbg !10867

if.then.9:                                        ; preds = %if.else.5
  br label %err, !dbg !10868

if.end:                                           ; preds = %if.else.5
  store i64 0, i64* %i, align 8, !dbg !10869, !tbaa !3427
  br label %for.cond, !dbg !10870

for.cond:                                         ; preds = %for.inc, %if.end
  %26 = load i64, i64* %i, align 8, !dbg !10871, !tbaa !3427
  %27 = load i64, i64* %n, align 8, !dbg !10874, !tbaa !3427
  %cmp10 = icmp slt i64 %26, %27, !dbg !10875
  br i1 %cmp10, label %for.body, label %for.end, !dbg !10876

for.body:                                         ; preds = %for.cond
  %28 = bitcast %struct._object** %index to i8*, !dbg !10877
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !10877
  call void @llvm.dbg.declare(metadata %struct._object** %index, metadata !1795, metadata !2666), !dbg !10878
  %29 = load i64, i64* %i, align 8, !dbg !10879, !tbaa !3427
  %30 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10880, !tbaa !2683
  %indices11 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %30, i32 0, i32 2, !dbg !10881
  %31 = load i64*, i64** %indices11, align 8, !dbg !10881, !tbaa !10202
  %arrayidx = getelementptr i64, i64* %31, i64 %29, !dbg !10880
  %32 = load i64, i64* %arrayidx, align 8, !dbg !10880, !tbaa !3427
  %call12 = call %struct._object* @PyLong_FromSsize_t(i64 %32), !dbg !10882
  store %struct._object* %call12, %struct._object** %index, align 8, !dbg !10878, !tbaa !2683
  %33 = load %struct._object*, %struct._object** %index, align 8, !dbg !10883, !tbaa !2683
  %tobool13 = icmp ne %struct._object* %33, null, !dbg !10883
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !10885

if.then.14:                                       ; preds = %for.body
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10886

if.end.15:                                        ; preds = %for.body
  %34 = load %struct._object*, %struct._object** %index, align 8, !dbg !10887, !tbaa !2683
  %35 = load i64, i64* %i, align 8, !dbg !10888, !tbaa !3427
  %36 = load %struct._object*, %struct._object** %indices, align 8, !dbg !10889, !tbaa !2683
  %37 = bitcast %struct._object* %36 to %struct.PyTupleObject*, !dbg !10890
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %37, i32 0, i32 1, !dbg !10891
  %arrayidx16 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %35, !dbg !10892
  store %struct._object* %34, %struct._object** %arrayidx16, align 8, !dbg !10893, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !10894
  br label %cleanup, !dbg !10894

cleanup:                                          ; preds = %if.end.15, %if.then.14
  %38 = bitcast %struct._object** %index to i8*, !dbg !10895
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !10895
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %err, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !10896

for.inc:                                          ; preds = %cleanup.cont
  %39 = load i64, i64* %i, align 8, !dbg !10897, !tbaa !3427
  %inc = add i64 %39, 1, !dbg !10897
  store i64 %inc, i64* %i, align 8, !dbg !10897, !tbaa !3427
  br label %for.cond, !dbg !10898

for.end:                                          ; preds = %for.cond
  %40 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10899, !tbaa !2683
  %r17 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %40, i32 0, i32 5, !dbg !10900
  %41 = load i64, i64* %r17, align 8, !dbg !10900, !tbaa !10306
  %call18 = call %struct._object* @PyTuple_New(i64 %41), !dbg !10901
  store %struct._object* %call18, %struct._object** %cycles, align 8, !dbg !10902, !tbaa !2683
  %42 = load %struct._object*, %struct._object** %cycles, align 8, !dbg !10903, !tbaa !2683
  %cmp19 = icmp eq %struct._object* %42, null, !dbg !10905
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !10906

if.then.20:                                       ; preds = %for.end
  br label %err, !dbg !10907

if.end.21:                                        ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !10908, !tbaa !3427
  br label %for.cond.22, !dbg !10909

for.cond.22:                                      ; preds = %for.inc.38, %if.end.21
  %43 = load i64, i64* %i, align 8, !dbg !10910, !tbaa !3427
  %44 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10913, !tbaa !2683
  %r23 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %44, i32 0, i32 5, !dbg !10914
  %45 = load i64, i64* %r23, align 8, !dbg !10914, !tbaa !10306
  %cmp24 = icmp slt i64 %43, %45, !dbg !10915
  br i1 %cmp24, label %for.body.25, label %for.end.40, !dbg !10916

for.body.25:                                      ; preds = %for.cond.22
  %46 = bitcast %struct._object** %index26 to i8*, !dbg !10917
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !10917
  call void @llvm.dbg.declare(metadata %struct._object** %index26, metadata !1799, metadata !2666), !dbg !10918
  %47 = load i64, i64* %i, align 8, !dbg !10919, !tbaa !3427
  %48 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10920, !tbaa !2683
  %cycles27 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %48, i32 0, i32 3, !dbg !10921
  %49 = load i64*, i64** %cycles27, align 8, !dbg !10921, !tbaa !10206
  %arrayidx28 = getelementptr i64, i64* %49, i64 %47, !dbg !10920
  %50 = load i64, i64* %arrayidx28, align 8, !dbg !10920, !tbaa !3427
  %call29 = call %struct._object* @PyLong_FromSsize_t(i64 %50), !dbg !10922
  store %struct._object* %call29, %struct._object** %index26, align 8, !dbg !10918, !tbaa !2683
  %51 = load %struct._object*, %struct._object** %index26, align 8, !dbg !10923, !tbaa !2683
  %tobool30 = icmp ne %struct._object* %51, null, !dbg !10923
  br i1 %tobool30, label %if.end.32, label %if.then.31, !dbg !10925

if.then.31:                                       ; preds = %for.body.25
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.35, !dbg !10926

if.end.32:                                        ; preds = %for.body.25
  %52 = load %struct._object*, %struct._object** %index26, align 8, !dbg !10927, !tbaa !2683
  %53 = load i64, i64* %i, align 8, !dbg !10928, !tbaa !3427
  %54 = load %struct._object*, %struct._object** %cycles, align 8, !dbg !10929, !tbaa !2683
  %55 = bitcast %struct._object* %54 to %struct.PyTupleObject*, !dbg !10930
  %ob_item33 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %55, i32 0, i32 1, !dbg !10931
  %arrayidx34 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item33, i32 0, i64 %53, !dbg !10932
  store %struct._object* %52, %struct._object** %arrayidx34, align 8, !dbg !10933, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !10934
  br label %cleanup.35, !dbg !10934

cleanup.35:                                       ; preds = %if.end.32, %if.then.31
  %56 = bitcast %struct._object** %index26 to i8*, !dbg !10935
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !10935
  %cleanup.dest.36 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.8

NodeBlock.8:                                      ; preds = %cleanup.35
  %Pivot.9 = icmp slt i32 %cleanup.dest.36, 2
  br i1 %Pivot.9, label %LeafBlock.4, label %LeafBlock.6

LeafBlock.6:                                      ; preds = %NodeBlock.8
  %SwitchLeaf7 = icmp eq i32 %cleanup.dest.36, 2
  br i1 %SwitchLeaf7, label %err, label %NewDefault.3

LeafBlock.4:                                      ; preds = %NodeBlock.8
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.36, 0
  br i1 %SwitchLeaf5, label %cleanup.cont.37, label %NewDefault.3

cleanup.cont.37:                                  ; preds = %LeafBlock.4
  br label %for.inc.38, !dbg !10936

for.inc.38:                                       ; preds = %cleanup.cont.37
  %57 = load i64, i64* %i, align 8, !dbg !10937, !tbaa !3427
  %inc39 = add i64 %57, 1, !dbg !10937
  store i64 %inc39, i64* %i, align 8, !dbg !10937, !tbaa !3427
  br label %for.cond.22, !dbg !10938

for.end.40:                                       ; preds = %for.cond.22
  %58 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10939, !tbaa !2683
  %59 = bitcast %struct.permutationsobject* %58 to %struct._object*, !dbg !10940
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !10941
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !10941, !tbaa !2675
  %61 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10942, !tbaa !2683
  %pool42 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %61, i32 0, i32 1, !dbg !10943
  %62 = load %struct._object*, %struct._object** %pool42, align 8, !dbg !10943, !tbaa !10125
  %63 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !10944, !tbaa !2683
  %r43 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %63, i32 0, i32 5, !dbg !10945
  %64 = load i64, i64* %r43, align 8, !dbg !10945, !tbaa !10306
  %65 = load %struct._object*, %struct._object** %indices, align 8, !dbg !10946, !tbaa !2683
  %66 = load %struct._object*, %struct._object** %cycles, align 8, !dbg !10947, !tbaa !2683
  %call44 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), %struct._typeobject* %60, %struct._object* %62, i64 %64, %struct._object* %65, %struct._object* %66), !dbg !10948
  store %struct._object* %call44, %struct._object** %retval, !dbg !10949
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.75, !dbg !10949

err:                                              ; preds = %LeafBlock.6, %LeafBlock.1, %if.then.20, %if.then.9
  br label %do.body, !dbg !10950

do.body:                                          ; preds = %err
  %67 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10951
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !10951
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1803, metadata !2666), !dbg !10953
  %68 = load %struct._object*, %struct._object** %indices, align 8, !dbg !10954, !tbaa !2683
  store %struct._object* %68, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10953, !tbaa !2683
  %69 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10955, !tbaa !2683
  %cmp45 = icmp ne %struct._object* %69, null, !dbg !10956
  br i1 %cmp45, label %if.then.46, label %if.end.53, !dbg !10957

if.then.46:                                       ; preds = %do.body
  br label %do.body.47, !dbg !10958

do.body.47:                                       ; preds = %if.then.46
  %70 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10960
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !10960
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1805, metadata !2666), !dbg !10962
  %71 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10963, !tbaa !2683
  store %struct._object* %71, %struct._object** %_py_decref_tmp, align 8, !dbg !10962, !tbaa !2683
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10964, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !10966
  %73 = load i64, i64* %ob_refcnt, align 8, !dbg !10967, !tbaa !2722
  %dec = add i64 %73, -1, !dbg !10967
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10967, !tbaa !2722
  %cmp48 = icmp ne i64 %dec, 0, !dbg !10968
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !10969

if.then.49:                                       ; preds = %do.body.47
  br label %if.end.52, !dbg !10970

if.else.50:                                       ; preds = %do.body.47
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10972, !tbaa !2683
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !10974
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !10974, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !10975
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10975, !tbaa !2768
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10976, !tbaa !2683
  call void %76(%struct._object* %77), !dbg !10977
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.50, %if.then.49
  %78 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10978
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !10978
  br label %do.cond, !dbg !10980

do.cond:                                          ; preds = %if.end.52
  br label %do.end, !dbg !10981

do.end:                                           ; preds = %do.cond
  br label %if.end.53, !dbg !10983

if.end.53:                                        ; preds = %do.end, %do.body
  %79 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10985
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !10985
  br label %do.cond.54, !dbg !10988

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !10989

do.end.55:                                        ; preds = %do.cond.54
  br label %do.body.56, !dbg !10991

do.body.56:                                       ; preds = %do.end.55
  %80 = bitcast %struct._object** %_py_xdecref_tmp57 to i8*, !dbg !10992
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !10992
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp57, metadata !1808, metadata !2666), !dbg !10994
  %81 = load %struct._object*, %struct._object** %cycles, align 8, !dbg !10995, !tbaa !2683
  store %struct._object* %81, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !10994, !tbaa !2683
  %82 = load %struct._object*, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !10996, !tbaa !2683
  %cmp58 = icmp ne %struct._object* %82, null, !dbg !10997
  br i1 %cmp58, label %if.then.59, label %if.end.72, !dbg !10998

if.then.59:                                       ; preds = %do.body.56
  br label %do.body.60, !dbg !10999

do.body.60:                                       ; preds = %if.then.59
  %83 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !11001
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !11001
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp61, metadata !1810, metadata !2666), !dbg !11003
  %84 = load %struct._object*, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !11004, !tbaa !2683
  store %struct._object* %84, %struct._object** %_py_decref_tmp61, align 8, !dbg !11003, !tbaa !2683
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !11005, !tbaa !2683
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !11007
  %86 = load i64, i64* %ob_refcnt62, align 8, !dbg !11008, !tbaa !2722
  %dec63 = add i64 %86, -1, !dbg !11008
  store i64 %dec63, i64* %ob_refcnt62, align 8, !dbg !11008, !tbaa !2722
  %cmp64 = icmp ne i64 %dec63, 0, !dbg !11009
  br i1 %cmp64, label %if.then.65, label %if.else.66, !dbg !11010

if.then.65:                                       ; preds = %do.body.60
  br label %if.end.69, !dbg !11011

if.else.66:                                       ; preds = %do.body.60
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !11013, !tbaa !2683
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !11015
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !11015, !tbaa !2675
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !11016
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !11016, !tbaa !2768
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !11017, !tbaa !2683
  call void %89(%struct._object* %90), !dbg !11018
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %91 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !11019
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !11019
  br label %do.cond.70, !dbg !11021

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !11022

do.end.71:                                        ; preds = %do.cond.70
  br label %if.end.72, !dbg !11024

if.end.72:                                        ; preds = %do.end.71, %do.body.56
  %92 = bitcast %struct._object** %_py_xdecref_tmp57 to i8*, !dbg !11026
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !11026
  br label %do.cond.73, !dbg !11027

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !11028

do.end.74:                                        ; preds = %do.cond.73
  store %struct._object* null, %struct._object** %retval, !dbg !11030
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.75, !dbg !11030

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.75

NewDefault.3:                                     ; preds = %LeafBlock.6, %LeafBlock.4
  br label %cleanup.75

cleanup.75:                                       ; preds = %NewDefault.3, %NewDefault, %do.end.74, %for.end.40
  %93 = bitcast i64* %i to i8*, !dbg !11031
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !11031
  %94 = bitcast i64* %n to i8*, !dbg !11031
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !11031
  %95 = bitcast %struct._object** %cycles to i8*, !dbg !11031
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !11031
  %96 = bitcast %struct._object** %indices to i8*, !dbg !11031
  call void @llvm.lifetime.end(i64 8, i8* %96) #1, !dbg !11031
  br label %return

return:                                           ; preds = %cleanup.75, %if.then.1, %if.then
  %97 = load %struct._object*, %struct._object** %retval, !dbg !11032
  ret %struct._object* %97, !dbg !11032
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_setstate(%struct.permutationsobject* %po, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %po.addr = alloca %struct.permutationsobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %indices = alloca %struct._object*, align 8
  %cycles = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %indexObject = alloca %struct._object*, align 8
  %index = alloca i64, align 8
  %indexObject27 = alloca %struct._object*, align 8
  %index30 = alloca i64, align 8
  %element = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.permutationsobject* %po, %struct.permutationsobject** %po.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po.addr, metadata !1817, metadata !2666), !dbg !11033
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1818, metadata !2666), !dbg !11034
  %0 = bitcast %struct._object** %indices to i8*, !dbg !11035
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11035
  call void @llvm.dbg.declare(metadata %struct._object** %indices, metadata !1819, metadata !2666), !dbg !11036
  %1 = bitcast %struct._object** %cycles to i8*, !dbg !11035
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !11035
  call void @llvm.dbg.declare(metadata %struct._object** %cycles, metadata !1820, metadata !2666), !dbg !11037
  %2 = bitcast %struct._object** %result to i8*, !dbg !11035
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11035
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1821, metadata !2666), !dbg !11038
  %3 = bitcast i64* %n to i8*, !dbg !11039
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !11039
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1822, metadata !2666), !dbg !11040
  %4 = bitcast i64* %i to i8*, !dbg !11039
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !11039
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1823, metadata !2666), !dbg !11041
  %5 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !11042, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), %struct._typeobject* @PyTuple_Type, %struct._object** %indices, %struct._typeobject* @PyTuple_Type, %struct._object** %cycles), !dbg !11044
  %tobool = icmp ne i32 %call, 0, !dbg !11044
  br i1 %tobool, label %if.end, label %if.then, !dbg !11045

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !11046
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !11046

if.end:                                           ; preds = %entry
  %6 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11047, !tbaa !2683
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %6, i32 0, i32 1, !dbg !11048
  %7 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11048, !tbaa !10125
  %8 = bitcast %struct._object* %7 to %struct.PyVarObject*, !dbg !11049
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1, !dbg !11050
  %9 = load i64, i64* %ob_size, align 8, !dbg !11050, !tbaa !3426
  store i64 %9, i64* %n, align 8, !dbg !11051, !tbaa !3427
  %10 = load %struct._object*, %struct._object** %indices, align 8, !dbg !11052, !tbaa !2683
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !11054
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !11055
  %12 = load i64, i64* %ob_size1, align 8, !dbg !11055, !tbaa !3426
  %13 = load i64, i64* %n, align 8, !dbg !11056, !tbaa !3427
  %cmp = icmp ne i64 %12, %13, !dbg !11057
  br i1 %cmp, label %if.then.4, label %lor.lhs.false, !dbg !11058

lor.lhs.false:                                    ; preds = %if.end
  %14 = load %struct._object*, %struct._object** %cycles, align 8, !dbg !11059, !tbaa !2683
  %15 = bitcast %struct._object* %14 to %struct.PyVarObject*, !dbg !11060
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %15, i32 0, i32 1, !dbg !11061
  %16 = load i64, i64* %ob_size2, align 8, !dbg !11061, !tbaa !3426
  %17 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11062, !tbaa !2683
  %r = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %17, i32 0, i32 5, !dbg !11063
  %18 = load i64, i64* %r, align 8, !dbg !11063, !tbaa !10306
  %cmp3 = icmp ne i64 %16, %18, !dbg !11064
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !11065

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %19 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11066, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0)), !dbg !11068
  store %struct._object* null, %struct._object** %retval, !dbg !11069
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !11069

if.end.5:                                         ; preds = %lor.lhs.false
  store i64 0, i64* %i, align 8, !dbg !11070, !tbaa !3427
  br label %for.cond, !dbg !11071

for.cond:                                         ; preds = %for.inc, %if.end.5
  %20 = load i64, i64* %i, align 8, !dbg !11072, !tbaa !3427
  %21 = load i64, i64* %n, align 8, !dbg !11075, !tbaa !3427
  %cmp6 = icmp slt i64 %20, %21, !dbg !11076
  br i1 %cmp6, label %for.body, label %for.end, !dbg !11077

for.body:                                         ; preds = %for.cond
  %22 = bitcast %struct._object** %indexObject to i8*, !dbg !11078
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !11078
  call void @llvm.dbg.declare(metadata %struct._object** %indexObject, metadata !1824, metadata !2666), !dbg !11079
  %23 = load i64, i64* %i, align 8, !dbg !11080, !tbaa !3427
  %24 = load %struct._object*, %struct._object** %indices, align 8, !dbg !11081, !tbaa !2683
  %25 = bitcast %struct._object* %24 to %struct.PyTupleObject*, !dbg !11082
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %25, i32 0, i32 1, !dbg !11083
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %23, !dbg !11084
  %26 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11084, !tbaa !2683
  store %struct._object* %26, %struct._object** %indexObject, align 8, !dbg !11079, !tbaa !2683
  %27 = bitcast i64* %index to i8*, !dbg !11085
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !11085
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1828, metadata !2666), !dbg !11086
  %28 = load %struct._object*, %struct._object** %indexObject, align 8, !dbg !11087, !tbaa !2683
  %call7 = call i64 @PyLong_AsSsize_t(%struct._object* %28), !dbg !11088
  store i64 %call7, i64* %index, align 8, !dbg !11086, !tbaa !3427
  %29 = load i64, i64* %index, align 8, !dbg !11089, !tbaa !3427
  %cmp8 = icmp slt i64 %29, 0, !dbg !11091
  br i1 %cmp8, label %land.lhs.true, label %if.end.12, !dbg !11092

land.lhs.true:                                    ; preds = %for.body
  %call9 = call %struct._object* @PyErr_Occurred(), !dbg !11093
  %tobool10 = icmp ne %struct._object* %call9, null, !dbg !11093
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !11095

if.then.11:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !11096
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11096

if.end.12:                                        ; preds = %land.lhs.true, %for.body
  %30 = load i64, i64* %index, align 8, !dbg !11097, !tbaa !3427
  %cmp13 = icmp slt i64 %30, 0, !dbg !11099
  br i1 %cmp13, label %if.then.14, label %if.else, !dbg !11100

if.then.14:                                       ; preds = %if.end.12
  store i64 0, i64* %index, align 8, !dbg !11101, !tbaa !3427
  br label %if.end.19, !dbg !11102

if.else:                                          ; preds = %if.end.12
  %31 = load i64, i64* %index, align 8, !dbg !11103, !tbaa !3427
  %32 = load i64, i64* %n, align 8, !dbg !11105, !tbaa !3427
  %sub = sub i64 %32, 1, !dbg !11106
  %cmp15 = icmp sgt i64 %31, %sub, !dbg !11107
  br i1 %cmp15, label %if.then.16, label %if.end.18, !dbg !11108

if.then.16:                                       ; preds = %if.else
  %33 = load i64, i64* %n, align 8, !dbg !11109, !tbaa !3427
  %sub17 = sub i64 %33, 1, !dbg !11110
  store i64 %sub17, i64* %index, align 8, !dbg !11111, !tbaa !3427
  br label %if.end.18, !dbg !11112

if.end.18:                                        ; preds = %if.then.16, %if.else
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.then.14
  %34 = load i64, i64* %index, align 8, !dbg !11113, !tbaa !3427
  %35 = load i64, i64* %i, align 8, !dbg !11114, !tbaa !3427
  %36 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11115, !tbaa !2683
  %indices20 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %36, i32 0, i32 2, !dbg !11116
  %37 = load i64*, i64** %indices20, align 8, !dbg !11116, !tbaa !10202
  %arrayidx21 = getelementptr i64, i64* %37, i64 %35, !dbg !11115
  store i64 %34, i64* %arrayidx21, align 8, !dbg !11117, !tbaa !3427
  store i32 0, i32* %cleanup.dest.slot, !dbg !11118
  br label %cleanup, !dbg !11118

cleanup:                                          ; preds = %if.end.19, %if.then.11
  %38 = bitcast i64* %index to i8*, !dbg !11119
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !11119
  %39 = bitcast %struct._object** %indexObject to i8*, !dbg !11119
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !11119
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !11120

for.inc:                                          ; preds = %cleanup.cont
  %40 = load i64, i64* %i, align 8, !dbg !11121, !tbaa !3427
  %inc = add i64 %40, 1, !dbg !11121
  store i64 %inc, i64* %i, align 8, !dbg !11121, !tbaa !3427
  br label %for.cond, !dbg !11122

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !11123, !tbaa !3427
  br label %for.cond.23, !dbg !11124

for.cond.23:                                      ; preds = %for.inc.53, %for.end
  %41 = load i64, i64* %i, align 8, !dbg !11125, !tbaa !3427
  %42 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11128, !tbaa !2683
  %r24 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %42, i32 0, i32 5, !dbg !11129
  %43 = load i64, i64* %r24, align 8, !dbg !11129, !tbaa !10306
  %cmp25 = icmp slt i64 %41, %43, !dbg !11130
  br i1 %cmp25, label %for.body.26, label %for.end.55, !dbg !11131

for.body.26:                                      ; preds = %for.cond.23
  %44 = bitcast %struct._object** %indexObject27 to i8*, !dbg !11132
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !11132
  call void @llvm.dbg.declare(metadata %struct._object** %indexObject27, metadata !1829, metadata !2666), !dbg !11133
  %45 = load i64, i64* %i, align 8, !dbg !11134, !tbaa !3427
  %46 = load %struct._object*, %struct._object** %cycles, align 8, !dbg !11135, !tbaa !2683
  %47 = bitcast %struct._object* %46 to %struct.PyTupleObject*, !dbg !11136
  %ob_item28 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %47, i32 0, i32 1, !dbg !11137
  %arrayidx29 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item28, i32 0, i64 %45, !dbg !11138
  %48 = load %struct._object*, %struct._object** %arrayidx29, align 8, !dbg !11138, !tbaa !2683
  store %struct._object* %48, %struct._object** %indexObject27, align 8, !dbg !11133, !tbaa !2683
  %49 = bitcast i64* %index30 to i8*, !dbg !11139
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !11139
  call void @llvm.dbg.declare(metadata i64* %index30, metadata !1833, metadata !2666), !dbg !11140
  %50 = load %struct._object*, %struct._object** %indexObject27, align 8, !dbg !11141, !tbaa !2683
  %call31 = call i64 @PyLong_AsSsize_t(%struct._object* %50), !dbg !11142
  store i64 %call31, i64* %index30, align 8, !dbg !11140, !tbaa !3427
  %51 = load i64, i64* %index30, align 8, !dbg !11143, !tbaa !3427
  %cmp32 = icmp slt i64 %51, 0, !dbg !11145
  br i1 %cmp32, label %land.lhs.true.33, label %if.end.37, !dbg !11146

land.lhs.true.33:                                 ; preds = %for.body.26
  %call34 = call %struct._object* @PyErr_Occurred(), !dbg !11147
  %tobool35 = icmp ne %struct._object* %call34, null, !dbg !11147
  br i1 %tobool35, label %if.then.36, label %if.end.37, !dbg !11149

if.then.36:                                       ; preds = %land.lhs.true.33
  store %struct._object* null, %struct._object** %retval, !dbg !11150
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !11150

if.end.37:                                        ; preds = %land.lhs.true.33, %for.body.26
  %52 = load i64, i64* %index30, align 8, !dbg !11151, !tbaa !3427
  %cmp38 = icmp slt i64 %52, 1, !dbg !11153
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !11154

if.then.39:                                       ; preds = %if.end.37
  store i64 1, i64* %index30, align 8, !dbg !11155, !tbaa !3427
  br label %if.end.46, !dbg !11156

if.else.40:                                       ; preds = %if.end.37
  %53 = load i64, i64* %index30, align 8, !dbg !11157, !tbaa !3427
  %54 = load i64, i64* %n, align 8, !dbg !11159, !tbaa !3427
  %55 = load i64, i64* %i, align 8, !dbg !11160, !tbaa !3427
  %sub41 = sub i64 %54, %55, !dbg !11161
  %cmp42 = icmp sgt i64 %53, %sub41, !dbg !11162
  br i1 %cmp42, label %if.then.43, label %if.end.45, !dbg !11163

if.then.43:                                       ; preds = %if.else.40
  %56 = load i64, i64* %n, align 8, !dbg !11164, !tbaa !3427
  %57 = load i64, i64* %i, align 8, !dbg !11165, !tbaa !3427
  %sub44 = sub i64 %56, %57, !dbg !11166
  store i64 %sub44, i64* %index30, align 8, !dbg !11167, !tbaa !3427
  br label %if.end.45, !dbg !11168

if.end.45:                                        ; preds = %if.then.43, %if.else.40
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.then.39
  %58 = load i64, i64* %index30, align 8, !dbg !11169, !tbaa !3427
  %59 = load i64, i64* %i, align 8, !dbg !11170, !tbaa !3427
  %60 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11171, !tbaa !2683
  %cycles47 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %60, i32 0, i32 3, !dbg !11172
  %61 = load i64*, i64** %cycles47, align 8, !dbg !11172, !tbaa !10206
  %arrayidx48 = getelementptr i64, i64* %61, i64 %59, !dbg !11171
  store i64 %58, i64* %arrayidx48, align 8, !dbg !11173, !tbaa !3427
  store i32 0, i32* %cleanup.dest.slot, !dbg !11174
  br label %cleanup.49, !dbg !11174

cleanup.49:                                       ; preds = %if.end.46, %if.then.36
  %62 = bitcast i64* %index30 to i8*, !dbg !11175
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !11175
  %63 = bitcast %struct._object** %indexObject27 to i8*, !dbg !11175
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !11175
  %cleanup.dest.51 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.49
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.51, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.52, label %NewDefault.1

cleanup.cont.52:                                  ; preds = %LeafBlock.2
  br label %for.inc.53, !dbg !11176

for.inc.53:                                       ; preds = %cleanup.cont.52
  %64 = load i64, i64* %i, align 8, !dbg !11177, !tbaa !3427
  %inc54 = add i64 %64, 1, !dbg !11177
  store i64 %inc54, i64* %i, align 8, !dbg !11177, !tbaa !3427
  br label %for.cond.23, !dbg !11178

for.end.55:                                       ; preds = %for.cond.23
  %65 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11179, !tbaa !2683
  %r56 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %65, i32 0, i32 5, !dbg !11180
  %66 = load i64, i64* %r56, align 8, !dbg !11180, !tbaa !10306
  %call57 = call %struct._object* @PyTuple_New(i64 %66), !dbg !11181
  store %struct._object* %call57, %struct._object** %result, align 8, !dbg !11182, !tbaa !2683
  %67 = load %struct._object*, %struct._object** %result, align 8, !dbg !11183, !tbaa !2683
  %cmp58 = icmp eq %struct._object* %67, null, !dbg !11185
  br i1 %cmp58, label %if.then.59, label %if.end.60, !dbg !11186

if.then.59:                                       ; preds = %for.end.55
  store %struct._object* null, %struct._object** %retval, !dbg !11187
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !11187

if.end.60:                                        ; preds = %for.end.55
  store i64 0, i64* %i, align 8, !dbg !11188, !tbaa !3427
  br label %for.cond.61, !dbg !11189

for.cond.61:                                      ; preds = %for.inc.73, %if.end.60
  %68 = load i64, i64* %i, align 8, !dbg !11190, !tbaa !3427
  %69 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11193, !tbaa !2683
  %r62 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %69, i32 0, i32 5, !dbg !11194
  %70 = load i64, i64* %r62, align 8, !dbg !11194, !tbaa !10306
  %cmp63 = icmp slt i64 %68, %70, !dbg !11195
  br i1 %cmp63, label %for.body.64, label %for.end.75, !dbg !11196

for.body.64:                                      ; preds = %for.cond.61
  %71 = bitcast %struct._object** %element to i8*, !dbg !11197
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !11197
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1834, metadata !2666), !dbg !11198
  %72 = load i64, i64* %i, align 8, !dbg !11199, !tbaa !3427
  %73 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11200, !tbaa !2683
  %indices65 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %73, i32 0, i32 2, !dbg !11201
  %74 = load i64*, i64** %indices65, align 8, !dbg !11201, !tbaa !10202
  %arrayidx66 = getelementptr i64, i64* %74, i64 %72, !dbg !11200
  %75 = load i64, i64* %arrayidx66, align 8, !dbg !11200, !tbaa !3427
  %76 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11202, !tbaa !2683
  %pool67 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %76, i32 0, i32 1, !dbg !11203
  %77 = load %struct._object*, %struct._object** %pool67, align 8, !dbg !11203, !tbaa !10125
  %78 = bitcast %struct._object* %77 to %struct.PyTupleObject*, !dbg !11204
  %ob_item68 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %78, i32 0, i32 1, !dbg !11205
  %arrayidx69 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item68, i32 0, i64 %75, !dbg !11206
  %79 = load %struct._object*, %struct._object** %arrayidx69, align 8, !dbg !11206, !tbaa !2683
  store %struct._object* %79, %struct._object** %element, align 8, !dbg !11198, !tbaa !2683
  %80 = load %struct._object*, %struct._object** %element, align 8, !dbg !11207, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !11208
  %81 = load i64, i64* %ob_refcnt, align 8, !dbg !11209, !tbaa !2722
  %inc70 = add i64 %81, 1, !dbg !11209
  store i64 %inc70, i64* %ob_refcnt, align 8, !dbg !11209, !tbaa !2722
  %82 = load %struct._object*, %struct._object** %element, align 8, !dbg !11210, !tbaa !2683
  %83 = load i64, i64* %i, align 8, !dbg !11211, !tbaa !3427
  %84 = load %struct._object*, %struct._object** %result, align 8, !dbg !11212, !tbaa !2683
  %85 = bitcast %struct._object* %84 to %struct.PyTupleObject*, !dbg !11213
  %ob_item71 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %85, i32 0, i32 1, !dbg !11214
  %arrayidx72 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item71, i32 0, i64 %83, !dbg !11215
  store %struct._object* %82, %struct._object** %arrayidx72, align 8, !dbg !11216, !tbaa !2683
  %86 = bitcast %struct._object** %element to i8*, !dbg !11217
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !11217
  br label %for.inc.73, !dbg !11218

for.inc.73:                                       ; preds = %for.body.64
  %87 = load i64, i64* %i, align 8, !dbg !11219, !tbaa !3427
  %inc74 = add i64 %87, 1, !dbg !11219
  store i64 %inc74, i64* %i, align 8, !dbg !11219, !tbaa !3427
  br label %for.cond.61, !dbg !11220

for.end.75:                                       ; preds = %for.cond.61
  br label %do.body, !dbg !11221

do.body:                                          ; preds = %for.end.75
  %88 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11222
  call void @llvm.lifetime.start(i64 8, i8* %88) #1, !dbg !11222
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1838, metadata !2666), !dbg !11224
  %89 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11225, !tbaa !2683
  %result76 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %89, i32 0, i32 4, !dbg !11226
  %90 = load %struct._object*, %struct._object** %result76, align 8, !dbg !11226, !tbaa !10167
  store %struct._object* %90, %struct._object** %_py_tmp, align 8, !dbg !11224, !tbaa !2683
  %91 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11227, !tbaa !2683
  %cmp77 = icmp ne %struct._object* %91, null, !dbg !11228
  br i1 %cmp77, label %if.then.78, label %if.end.86, !dbg !11229

if.then.78:                                       ; preds = %do.body
  %92 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11230, !tbaa !2683
  %result79 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %92, i32 0, i32 4, !dbg !11232
  store %struct._object* null, %struct._object** %result79, align 8, !dbg !11233, !tbaa !10167
  br label %do.body.80, !dbg !11234

do.body.80:                                       ; preds = %if.then.78
  %93 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11235
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !11235
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1840, metadata !2666), !dbg !11237
  %94 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11238, !tbaa !2683
  store %struct._object* %94, %struct._object** %_py_decref_tmp, align 8, !dbg !11237, !tbaa !2683
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11239, !tbaa !2683
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !11241
  %96 = load i64, i64* %ob_refcnt81, align 8, !dbg !11242, !tbaa !2722
  %dec = add i64 %96, -1, !dbg !11242
  store i64 %dec, i64* %ob_refcnt81, align 8, !dbg !11242, !tbaa !2722
  %cmp82 = icmp ne i64 %dec, 0, !dbg !11243
  br i1 %cmp82, label %if.then.83, label %if.else.84, !dbg !11244

if.then.83:                                       ; preds = %do.body.80
  br label %if.end.85, !dbg !11245

if.else.84:                                       ; preds = %do.body.80
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11247, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !11249
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11249, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !11250
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11250, !tbaa !2768
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11251, !tbaa !2683
  call void %99(%struct._object* %100), !dbg !11252
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.84, %if.then.83
  %101 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11253
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !11253
  br label %do.cond, !dbg !11255

do.cond:                                          ; preds = %if.end.85
  br label %do.end, !dbg !11256

do.end:                                           ; preds = %do.cond
  br label %if.end.86, !dbg !11258

if.end.86:                                        ; preds = %do.end, %do.body
  %102 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11260
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !11260
  br label %do.cond.87, !dbg !11263

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !11264

do.end.88:                                        ; preds = %do.cond.87
  %103 = load %struct._object*, %struct._object** %result, align 8, !dbg !11266, !tbaa !2683
  %104 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11267, !tbaa !2683
  %result89 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %104, i32 0, i32 4, !dbg !11268
  store %struct._object* %103, %struct._object** %result89, align 8, !dbg !11269, !tbaa !10167
  %105 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11270, !tbaa !2722
  %inc90 = add i64 %105, 1, !dbg !11270
  store i64 %inc90, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11270, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !11271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !11271

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.91

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.91

cleanup.91:                                       ; preds = %NewDefault.1, %NewDefault, %do.end.88, %if.then.59, %if.then.4, %if.then
  %106 = bitcast i64* %i to i8*, !dbg !11272
  call void @llvm.lifetime.end(i64 8, i8* %106) #1, !dbg !11272
  %107 = bitcast i64* %n to i8*, !dbg !11272
  call void @llvm.lifetime.end(i64 8, i8* %107) #1, !dbg !11272
  %108 = bitcast %struct._object** %result to i8*, !dbg !11272
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !11272
  %109 = bitcast %struct._object** %cycles to i8*, !dbg !11272
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !11272
  %110 = bitcast %struct._object** %indices to i8*, !dbg !11272
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !11272
  %111 = load %struct._object*, %struct._object** %retval, !dbg !11272
  ret %struct._object* %111, !dbg !11272
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_sizeof(%struct.permutationsobject* %po, i8* %unused) #0 {
entry:
  %po.addr = alloca %struct.permutationsobject*, align 8
  %unused.addr = alloca i8*, align 8
  %res = alloca i64, align 8
  store %struct.permutationsobject* %po, %struct.permutationsobject** %po.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.permutationsobject** %po.addr, metadata !1848, metadata !2666), !dbg !11273
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1849, metadata !2666), !dbg !11274
  %0 = bitcast i64* %res to i8*, !dbg !11275
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11275
  call void @llvm.dbg.declare(metadata i64* %res, metadata !1850, metadata !2666), !dbg !11276
  store i64 64, i64* %res, align 8, !dbg !11277, !tbaa !3427
  %1 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11278, !tbaa !2683
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %1, i32 0, i32 1, !dbg !11279
  %2 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11279, !tbaa !10125
  %3 = bitcast %struct._object* %2 to %struct.PyVarObject*, !dbg !11280
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i32 0, i32 1, !dbg !11281
  %4 = load i64, i64* %ob_size, align 8, !dbg !11281, !tbaa !3426
  %mul = mul i64 %4, 8, !dbg !11282
  %5 = load i64, i64* %res, align 8, !dbg !11283, !tbaa !3427
  %add = add i64 %5, %mul, !dbg !11283
  store i64 %add, i64* %res, align 8, !dbg !11283, !tbaa !3427
  %6 = load %struct.permutationsobject*, %struct.permutationsobject** %po.addr, align 8, !dbg !11284, !tbaa !2683
  %r = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %6, i32 0, i32 5, !dbg !11285
  %7 = load i64, i64* %r, align 8, !dbg !11285, !tbaa !10306
  %mul1 = mul i64 %7, 8, !dbg !11286
  %8 = load i64, i64* %res, align 8, !dbg !11287, !tbaa !3427
  %add2 = add i64 %8, %mul1, !dbg !11287
  store i64 %add2, i64* %res, align 8, !dbg !11287, !tbaa !3427
  %9 = load i64, i64* %res, align 8, !dbg !11288, !tbaa !3427
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %9), !dbg !11289
  %10 = bitcast i64* %res to i8*, !dbg !11290
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !11290
  ret %struct._object* %call, !dbg !11291
}

; Function Attrs: nounwind uwtable
define internal void @product_dealloc(%struct.productobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.productobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.productobject* %lz, %struct.productobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz.addr, metadata !1874, metadata !2666), !dbg !11292
  %0 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11293, !tbaa !2683
  %1 = bitcast %struct.productobject* %0 to i8*, !dbg !11293
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !11294
  br label %do.body, !dbg !11295

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11296
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11296
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1875, metadata !2666), !dbg !11298
  %3 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11299, !tbaa !2683
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %3, i32 0, i32 1, !dbg !11300
  %4 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11300, !tbaa !11301
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11298, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11303, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !11304
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !11305

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !11306

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11308
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !11308
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1877, metadata !2666), !dbg !11310
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11311, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !11310, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11312, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !11314
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !11315, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !11315
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11315, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !11316
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !11317

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !11318

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11320, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !11322
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11322, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !11323
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11323, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11324, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !11325
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11326
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !11326
  br label %do.cond, !dbg !11328

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !11329

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !11331

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11333
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !11333
  br label %do.end.6, !dbg !11336

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !11337

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !11338
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !11338
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !1880, metadata !2666), !dbg !11340
  %17 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11341, !tbaa !2683
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %17, i32 0, i32 3, !dbg !11342
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !11342, !tbaa !11343
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !11340, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !11344, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !11345
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !11346

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !11347

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !11349
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !11349
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1882, metadata !2666), !dbg !11351
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !11352, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !11351, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !11353, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !11355
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !11356, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !11356
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !11356, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !11357
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !11358

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !11359

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !11361, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !11363
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !11363, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !11364
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !11364, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !11365, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !11366
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !11367
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !11367
  br label %do.cond.21, !dbg !11369

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !11370

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !11372

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !11374
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !11374
  br label %do.end.25, !dbg !11375

do.end.25:                                        ; preds = %if.end.23
  %30 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11376, !tbaa !2683
  %indices = getelementptr inbounds %struct.productobject, %struct.productobject* %30, i32 0, i32 2, !dbg !11378
  %31 = load i64*, i64** %indices, align 8, !dbg !11378, !tbaa !11379
  %cmp26 = icmp ne i64* %31, null, !dbg !11380
  br i1 %cmp26, label %if.then.27, label %if.end.29, !dbg !11381

if.then.27:                                       ; preds = %do.end.25
  %32 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11382, !tbaa !2683
  %indices28 = getelementptr inbounds %struct.productobject, %struct.productobject* %32, i32 0, i32 2, !dbg !11383
  %33 = load i64*, i64** %indices28, align 8, !dbg !11383, !tbaa !11379
  %34 = bitcast i64* %33 to i8*, !dbg !11382
  call void @PyMem_Free(i8* %34), !dbg !11384
  br label %if.end.29, !dbg !11384

if.end.29:                                        ; preds = %if.then.27, %do.end.25
  %35 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11385, !tbaa !2683
  %36 = bitcast %struct.productobject* %35 to %struct._object*, !dbg !11386
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !11387
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !11387, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 38, !dbg !11388
  %38 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !11388, !tbaa !2864
  %39 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11389, !tbaa !2683
  %40 = bitcast %struct.productobject* %39 to i8*, !dbg !11389
  call void %38(i8* %40), !dbg !11390
  ret void, !dbg !11391
}

; Function Attrs: nounwind uwtable
define internal i32 @product_traverse(%struct.productobject* %lz, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %lz.addr = alloca %struct.productobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.productobject* %lz, %struct.productobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz.addr, metadata !1889, metadata !2666), !dbg !11392
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1890, metadata !2666), !dbg !11393
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1891, metadata !2666), !dbg !11394
  br label %do.body, !dbg !11395

do.body:                                          ; preds = %entry
  %0 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11396, !tbaa !2683
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %0, i32 0, i32 1, !dbg !11398
  %1 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11398, !tbaa !11301
  %tobool = icmp ne %struct._object* %1, null, !dbg !11399
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !11400

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !11401
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !11401
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1892, metadata !2666), !dbg !11403
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11404, !tbaa !2683
  %4 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11405, !tbaa !2683
  %pools1 = getelementptr inbounds %struct.productobject, %struct.productobject* %4, i32 0, i32 1, !dbg !11406
  %5 = load %struct._object*, %struct._object** %pools1, align 8, !dbg !11406, !tbaa !11301
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !11407, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !11404
  store i32 %call, i32* %vret, align 4, !dbg !11403, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !11408, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !11408
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !11410

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !11411, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !11413
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11413

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !11414
  br label %cleanup, !dbg !11414

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !11416
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !11416
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !11419

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !11420

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !11423

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11424, !tbaa !2683
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %10, i32 0, i32 3, !dbg !11426
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !11426, !tbaa !11343
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !11427
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !11428

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !11429
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !11429
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1896, metadata !2666), !dbg !11431
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11432, !tbaa !2683
  %14 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11433, !tbaa !2683
  %result9 = getelementptr inbounds %struct.productobject, %struct.productobject* %14, i32 0, i32 3, !dbg !11434
  %15 = load %struct._object*, %struct._object** %result9, align 8, !dbg !11434, !tbaa !11343
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !11435, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !11432
  store i32 %call10, i32* %vret8, align 4, !dbg !11431, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !11436, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !11436
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !11438

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !11439, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !11441
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !11441

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !11442
  br label %cleanup.14, !dbg !11442

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !11444
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !11444
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !11447

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !11448

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !11451
  br label %return, !dbg !11451

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !11452
  ret i32 %20, !dbg !11452
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_next(%struct.productobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.productobject*, align 8
  %pool = alloca %struct._object*, align 8
  %elem = alloca %struct._object*, align 8
  %oldelem = alloca %struct._object*, align 8
  %pools = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %npools = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %indices = alloca i64*, align 8
  %old_result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  store %struct.productobject* %lz, %struct.productobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz.addr, metadata !1904, metadata !2666), !dbg !11453
  %0 = bitcast %struct._object** %pool to i8*, !dbg !11454
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11454
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !1905, metadata !2666), !dbg !11455
  %1 = bitcast %struct._object** %elem to i8*, !dbg !11456
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !11456
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !1906, metadata !2666), !dbg !11457
  %2 = bitcast %struct._object** %oldelem to i8*, !dbg !11458
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11458
  call void @llvm.dbg.declare(metadata %struct._object** %oldelem, metadata !1907, metadata !2666), !dbg !11459
  %3 = bitcast %struct._object** %pools to i8*, !dbg !11460
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !11460
  call void @llvm.dbg.declare(metadata %struct._object** %pools, metadata !1908, metadata !2666), !dbg !11461
  %4 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11462, !tbaa !2683
  %pools1 = getelementptr inbounds %struct.productobject, %struct.productobject* %4, i32 0, i32 1, !dbg !11463
  %5 = load %struct._object*, %struct._object** %pools1, align 8, !dbg !11463, !tbaa !11301
  store %struct._object* %5, %struct._object** %pools, align 8, !dbg !11461, !tbaa !2683
  %6 = bitcast %struct._object** %result to i8*, !dbg !11464
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !11464
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1909, metadata !2666), !dbg !11465
  %7 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11466, !tbaa !2683
  %result2 = getelementptr inbounds %struct.productobject, %struct.productobject* %7, i32 0, i32 3, !dbg !11467
  %8 = load %struct._object*, %struct._object** %result2, align 8, !dbg !11467, !tbaa !11343
  store %struct._object* %8, %struct._object** %result, align 8, !dbg !11465, !tbaa !2683
  %9 = bitcast i64* %npools to i8*, !dbg !11468
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !11468
  call void @llvm.dbg.declare(metadata i64* %npools, metadata !1910, metadata !2666), !dbg !11469
  %10 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11470, !tbaa !2683
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !11471
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !11472
  %12 = load i64, i64* %ob_size, align 8, !dbg !11472, !tbaa !3426
  store i64 %12, i64* %npools, align 8, !dbg !11469, !tbaa !3427
  %13 = bitcast i64* %i to i8*, !dbg !11473
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !11473
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1911, metadata !2666), !dbg !11474
  %14 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11475, !tbaa !2683
  %stopped = getelementptr inbounds %struct.productobject, %struct.productobject* %14, i32 0, i32 4, !dbg !11477
  %15 = load i32, i32* %stopped, align 4, !dbg !11477, !tbaa !11478
  %tobool = icmp ne i32 %15, 0, !dbg !11475
  br i1 %tobool, label %if.then, label %if.end, !dbg !11479

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !11480
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113, !dbg !11480

if.end:                                           ; preds = %entry
  %16 = load %struct._object*, %struct._object** %result, align 8, !dbg !11481, !tbaa !2683
  %cmp = icmp eq %struct._object* %16, null, !dbg !11482
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !11483

if.then.3:                                        ; preds = %if.end
  %17 = load i64, i64* %npools, align 8, !dbg !11484, !tbaa !3427
  %call = call %struct._object* @PyTuple_New(i64 %17), !dbg !11486
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !11487, !tbaa !2683
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !11488, !tbaa !2683
  %cmp4 = icmp eq %struct._object* %18, null, !dbg !11490
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !11491

if.then.5:                                        ; preds = %if.then.3
  br label %empty, !dbg !11492

if.end.6:                                         ; preds = %if.then.3
  %19 = load %struct._object*, %struct._object** %result, align 8, !dbg !11493, !tbaa !2683
  %20 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11494, !tbaa !2683
  %result7 = getelementptr inbounds %struct.productobject, %struct.productobject* %20, i32 0, i32 3, !dbg !11495
  store %struct._object* %19, %struct._object** %result7, align 8, !dbg !11496, !tbaa !11343
  store i64 0, i64* %i, align 8, !dbg !11497, !tbaa !3427
  br label %for.cond, !dbg !11499

for.cond:                                         ; preds = %for.inc, %if.end.6
  %21 = load i64, i64* %i, align 8, !dbg !11500, !tbaa !3427
  %22 = load i64, i64* %npools, align 8, !dbg !11504, !tbaa !3427
  %cmp8 = icmp slt i64 %21, %22, !dbg !11505
  br i1 %cmp8, label %for.body, label %for.end, !dbg !11506

for.body:                                         ; preds = %for.cond
  %23 = load i64, i64* %i, align 8, !dbg !11507, !tbaa !3427
  %24 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11509, !tbaa !2683
  %25 = bitcast %struct._object* %24 to %struct.PyTupleObject*, !dbg !11510
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %25, i32 0, i32 1, !dbg !11511
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %23, !dbg !11512
  %26 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11512, !tbaa !2683
  store %struct._object* %26, %struct._object** %pool, align 8, !dbg !11513, !tbaa !2683
  %27 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11514, !tbaa !2683
  %28 = bitcast %struct._object* %27 to %struct.PyVarObject*, !dbg !11516
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1, !dbg !11517
  %29 = load i64, i64* %ob_size9, align 8, !dbg !11517, !tbaa !3426
  %cmp10 = icmp eq i64 %29, 0, !dbg !11518
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !11519

if.then.11:                                       ; preds = %for.body
  br label %empty, !dbg !11520

if.end.12:                                        ; preds = %for.body
  %30 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11521, !tbaa !2683
  %31 = bitcast %struct._object* %30 to %struct.PyTupleObject*, !dbg !11522
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %31, i32 0, i32 1, !dbg !11523
  %arrayidx14 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item13, i32 0, i64 0, !dbg !11524
  %32 = load %struct._object*, %struct._object** %arrayidx14, align 8, !dbg !11524, !tbaa !2683
  store %struct._object* %32, %struct._object** %elem, align 8, !dbg !11525, !tbaa !2683
  %33 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11526, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !11527
  %34 = load i64, i64* %ob_refcnt, align 8, !dbg !11528, !tbaa !2722
  %inc = add i64 %34, 1, !dbg !11528
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11528, !tbaa !2722
  %35 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11529, !tbaa !2683
  %36 = load i64, i64* %i, align 8, !dbg !11530, !tbaa !3427
  %37 = load %struct._object*, %struct._object** %result, align 8, !dbg !11531, !tbaa !2683
  %38 = bitcast %struct._object* %37 to %struct.PyTupleObject*, !dbg !11532
  %ob_item15 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %38, i32 0, i32 1, !dbg !11533
  %arrayidx16 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item15, i32 0, i64 %36, !dbg !11534
  store %struct._object* %35, %struct._object** %arrayidx16, align 8, !dbg !11535, !tbaa !2683
  br label %for.inc, !dbg !11536

for.inc:                                          ; preds = %if.end.12
  %39 = load i64, i64* %i, align 8, !dbg !11537, !tbaa !3427
  %inc17 = add i64 %39, 1, !dbg !11537
  store i64 %inc17, i64* %i, align 8, !dbg !11537, !tbaa !3427
  br label %for.cond, !dbg !11538

for.end:                                          ; preds = %for.cond
  br label %if.end.109, !dbg !11539

if.else:                                          ; preds = %if.end
  %40 = bitcast i64** %indices to i8*, !dbg !11540
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !11540
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !1912, metadata !2666), !dbg !11541
  %41 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11542, !tbaa !2683
  %indices18 = getelementptr inbounds %struct.productobject, %struct.productobject* %41, i32 0, i32 2, !dbg !11543
  %42 = load i64*, i64** %indices18, align 8, !dbg !11543, !tbaa !11379
  store i64* %42, i64** %indices, align 8, !dbg !11541, !tbaa !2683
  %43 = load %struct._object*, %struct._object** %result, align 8, !dbg !11544, !tbaa !2683
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !11545
  %44 = load i64, i64* %ob_refcnt19, align 8, !dbg !11545, !tbaa !2722
  %cmp20 = icmp sgt i64 %44, 1, !dbg !11546
  br i1 %cmp20, label %if.then.21, label %if.end.44, !dbg !11547

if.then.21:                                       ; preds = %if.else
  %45 = bitcast %struct._object** %old_result to i8*, !dbg !11548
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !11548
  call void @llvm.dbg.declare(metadata %struct._object** %old_result, metadata !1915, metadata !2666), !dbg !11549
  %46 = load %struct._object*, %struct._object** %result, align 8, !dbg !11550, !tbaa !2683
  store %struct._object* %46, %struct._object** %old_result, align 8, !dbg !11549, !tbaa !2683
  %47 = load i64, i64* %npools, align 8, !dbg !11551, !tbaa !3427
  %call22 = call %struct._object* @PyTuple_New(i64 %47), !dbg !11552
  store %struct._object* %call22, %struct._object** %result, align 8, !dbg !11553, !tbaa !2683
  %48 = load %struct._object*, %struct._object** %result, align 8, !dbg !11554, !tbaa !2683
  %cmp23 = icmp eq %struct._object* %48, null, !dbg !11556
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !11557

if.then.24:                                       ; preds = %if.then.21
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11558

if.end.25:                                        ; preds = %if.then.21
  %49 = load %struct._object*, %struct._object** %result, align 8, !dbg !11559, !tbaa !2683
  %50 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11560, !tbaa !2683
  %result26 = getelementptr inbounds %struct.productobject, %struct.productobject* %50, i32 0, i32 3, !dbg !11561
  store %struct._object* %49, %struct._object** %result26, align 8, !dbg !11562, !tbaa !11343
  store i64 0, i64* %i, align 8, !dbg !11563, !tbaa !3427
  br label %for.cond.27, !dbg !11565

for.cond.27:                                      ; preds = %for.inc.36, %if.end.25
  %51 = load i64, i64* %i, align 8, !dbg !11566, !tbaa !3427
  %52 = load i64, i64* %npools, align 8, !dbg !11570, !tbaa !3427
  %cmp28 = icmp slt i64 %51, %52, !dbg !11571
  br i1 %cmp28, label %for.body.29, label %for.end.38, !dbg !11572

for.body.29:                                      ; preds = %for.cond.27
  %53 = load i64, i64* %i, align 8, !dbg !11573, !tbaa !3427
  %54 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !11575, !tbaa !2683
  %55 = bitcast %struct._object* %54 to %struct.PyTupleObject*, !dbg !11576
  %ob_item30 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %55, i32 0, i32 1, !dbg !11577
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item30, i32 0, i64 %53, !dbg !11578
  %56 = load %struct._object*, %struct._object** %arrayidx31, align 8, !dbg !11578, !tbaa !2683
  store %struct._object* %56, %struct._object** %elem, align 8, !dbg !11579, !tbaa !2683
  %57 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11580, !tbaa !2683
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !11581
  %58 = load i64, i64* %ob_refcnt32, align 8, !dbg !11582, !tbaa !2722
  %inc33 = add i64 %58, 1, !dbg !11582
  store i64 %inc33, i64* %ob_refcnt32, align 8, !dbg !11582, !tbaa !2722
  %59 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11583, !tbaa !2683
  %60 = load i64, i64* %i, align 8, !dbg !11584, !tbaa !3427
  %61 = load %struct._object*, %struct._object** %result, align 8, !dbg !11585, !tbaa !2683
  %62 = bitcast %struct._object* %61 to %struct.PyTupleObject*, !dbg !11586
  %ob_item34 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %62, i32 0, i32 1, !dbg !11587
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item34, i32 0, i64 %60, !dbg !11588
  store %struct._object* %59, %struct._object** %arrayidx35, align 8, !dbg !11589, !tbaa !2683
  br label %for.inc.36, !dbg !11590

for.inc.36:                                       ; preds = %for.body.29
  %63 = load i64, i64* %i, align 8, !dbg !11591, !tbaa !3427
  %inc37 = add i64 %63, 1, !dbg !11591
  store i64 %inc37, i64* %i, align 8, !dbg !11591, !tbaa !3427
  br label %for.cond.27, !dbg !11592

for.end.38:                                       ; preds = %for.cond.27
  br label %do.body, !dbg !11593

do.body:                                          ; preds = %for.end.38
  %64 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11594
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !11594
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1918, metadata !2666), !dbg !11596
  %65 = load %struct._object*, %struct._object** %old_result, align 8, !dbg !11597, !tbaa !2683
  store %struct._object* %65, %struct._object** %_py_decref_tmp, align 8, !dbg !11596, !tbaa !2683
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11598, !tbaa !2683
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !11600
  %67 = load i64, i64* %ob_refcnt39, align 8, !dbg !11601, !tbaa !2722
  %dec = add i64 %67, -1, !dbg !11601
  store i64 %dec, i64* %ob_refcnt39, align 8, !dbg !11601, !tbaa !2722
  %cmp40 = icmp ne i64 %dec, 0, !dbg !11602
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !11603

if.then.41:                                       ; preds = %do.body
  br label %if.end.43, !dbg !11604

if.else.42:                                       ; preds = %do.body
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11606, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !11608
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11608, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !11609
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11609, !tbaa !2768
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11610, !tbaa !2683
  call void %70(%struct._object* %71), !dbg !11611
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.42, %if.then.41
  %72 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11612
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !11612
  br label %do.cond, !dbg !11614

do.cond:                                          ; preds = %if.end.43
  br label %do.end, !dbg !11615

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !11617
  br label %cleanup, !dbg !11617

cleanup:                                          ; preds = %do.end, %if.then.24
  %73 = bitcast %struct._object** %old_result to i8*, !dbg !11618
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !11618
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.44, !dbg !11620

if.end.44:                                        ; preds = %cleanup.cont, %if.else
  %74 = load i64, i64* %npools, align 8, !dbg !11621, !tbaa !3427
  %sub = sub i64 %74, 1, !dbg !11622
  store i64 %sub, i64* %i, align 8, !dbg !11623, !tbaa !3427
  br label %for.cond.45, !dbg !11624

for.cond.45:                                      ; preds = %for.inc.100, %if.end.44
  %75 = load i64, i64* %i, align 8, !dbg !11625, !tbaa !3427
  %cmp46 = icmp sge i64 %75, 0, !dbg !11628
  br i1 %cmp46, label %for.body.47, label %for.end.102, !dbg !11629

for.body.47:                                      ; preds = %for.cond.45
  %76 = load i64, i64* %i, align 8, !dbg !11630, !tbaa !3427
  %77 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11631, !tbaa !2683
  %78 = bitcast %struct._object* %77 to %struct.PyTupleObject*, !dbg !11632
  %ob_item48 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %78, i32 0, i32 1, !dbg !11633
  %arrayidx49 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item48, i32 0, i64 %76, !dbg !11634
  %79 = load %struct._object*, %struct._object** %arrayidx49, align 8, !dbg !11634, !tbaa !2683
  store %struct._object* %79, %struct._object** %pool, align 8, !dbg !11635, !tbaa !2683
  %80 = load i64, i64* %i, align 8, !dbg !11636, !tbaa !3427
  %81 = load i64*, i64** %indices, align 8, !dbg !11637, !tbaa !2683
  %arrayidx50 = getelementptr i64, i64* %81, i64 %80, !dbg !11637
  %82 = load i64, i64* %arrayidx50, align 8, !dbg !11638, !tbaa !3427
  %inc51 = add i64 %82, 1, !dbg !11638
  store i64 %inc51, i64* %arrayidx50, align 8, !dbg !11638, !tbaa !3427
  %83 = load i64, i64* %i, align 8, !dbg !11639, !tbaa !3427
  %84 = load i64*, i64** %indices, align 8, !dbg !11640, !tbaa !2683
  %arrayidx52 = getelementptr i64, i64* %84, i64 %83, !dbg !11640
  %85 = load i64, i64* %arrayidx52, align 8, !dbg !11640, !tbaa !3427
  %86 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11641, !tbaa !2683
  %87 = bitcast %struct._object* %86 to %struct.PyVarObject*, !dbg !11642
  %ob_size53 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %87, i32 0, i32 1, !dbg !11643
  %88 = load i64, i64* %ob_size53, align 8, !dbg !11643, !tbaa !3426
  %cmp54 = icmp eq i64 %85, %88, !dbg !11644
  br i1 %cmp54, label %if.then.55, label %if.else.77, !dbg !11645

if.then.55:                                       ; preds = %for.body.47
  %89 = load i64, i64* %i, align 8, !dbg !11646, !tbaa !3427
  %90 = load i64*, i64** %indices, align 8, !dbg !11647, !tbaa !2683
  %arrayidx56 = getelementptr i64, i64* %90, i64 %89, !dbg !11647
  store i64 0, i64* %arrayidx56, align 8, !dbg !11648, !tbaa !3427
  %91 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11649, !tbaa !2683
  %92 = bitcast %struct._object* %91 to %struct.PyTupleObject*, !dbg !11650
  %ob_item57 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %92, i32 0, i32 1, !dbg !11651
  %arrayidx58 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item57, i32 0, i64 0, !dbg !11652
  %93 = load %struct._object*, %struct._object** %arrayidx58, align 8, !dbg !11652, !tbaa !2683
  store %struct._object* %93, %struct._object** %elem, align 8, !dbg !11653, !tbaa !2683
  %94 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11654, !tbaa !2683
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 0, !dbg !11655
  %95 = load i64, i64* %ob_refcnt59, align 8, !dbg !11656, !tbaa !2722
  %inc60 = add i64 %95, 1, !dbg !11656
  store i64 %inc60, i64* %ob_refcnt59, align 8, !dbg !11656, !tbaa !2722
  %96 = load i64, i64* %i, align 8, !dbg !11657, !tbaa !3427
  %97 = load %struct._object*, %struct._object** %result, align 8, !dbg !11658, !tbaa !2683
  %98 = bitcast %struct._object* %97 to %struct.PyTupleObject*, !dbg !11659
  %ob_item61 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %98, i32 0, i32 1, !dbg !11660
  %arrayidx62 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item61, i32 0, i64 %96, !dbg !11661
  %99 = load %struct._object*, %struct._object** %arrayidx62, align 8, !dbg !11661, !tbaa !2683
  store %struct._object* %99, %struct._object** %oldelem, align 8, !dbg !11662, !tbaa !2683
  %100 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11663, !tbaa !2683
  %101 = load i64, i64* %i, align 8, !dbg !11664, !tbaa !3427
  %102 = load %struct._object*, %struct._object** %result, align 8, !dbg !11665, !tbaa !2683
  %103 = bitcast %struct._object* %102 to %struct.PyTupleObject*, !dbg !11666
  %ob_item63 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %103, i32 0, i32 1, !dbg !11667
  %arrayidx64 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item63, i32 0, i64 %101, !dbg !11668
  store %struct._object* %100, %struct._object** %arrayidx64, align 8, !dbg !11669, !tbaa !2683
  br label %do.body.65, !dbg !11670

do.body.65:                                       ; preds = %if.then.55
  %104 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !11671
  call void @llvm.lifetime.start(i64 8, i8* %104) #1, !dbg !11671
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp66, metadata !1920, metadata !2666), !dbg !11673
  %105 = load %struct._object*, %struct._object** %oldelem, align 8, !dbg !11674, !tbaa !2683
  store %struct._object* %105, %struct._object** %_py_decref_tmp66, align 8, !dbg !11673, !tbaa !2683
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !11675, !tbaa !2683
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 0, !dbg !11677
  %107 = load i64, i64* %ob_refcnt67, align 8, !dbg !11678, !tbaa !2722
  %dec68 = add i64 %107, -1, !dbg !11678
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !11678, !tbaa !2722
  %cmp69 = icmp ne i64 %dec68, 0, !dbg !11679
  br i1 %cmp69, label %if.then.70, label %if.else.71, !dbg !11680

if.then.70:                                       ; preds = %do.body.65
  br label %if.end.74, !dbg !11681

if.else.71:                                       ; preds = %do.body.65
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !11683, !tbaa !2683
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 1, !dbg !11685
  %109 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !11685, !tbaa !2675
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %109, i32 0, i32 4, !dbg !11686
  %110 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !11686, !tbaa !2768
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !11687, !tbaa !2683
  call void %110(%struct._object* %111), !dbg !11688
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  %112 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !11689
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !11689
  br label %do.cond.75, !dbg !11691

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !11692

do.end.76:                                        ; preds = %do.cond.75
  br label %if.end.99, !dbg !11694

if.else.77:                                       ; preds = %for.body.47
  %113 = load i64, i64* %i, align 8, !dbg !11695, !tbaa !3427
  %114 = load i64*, i64** %indices, align 8, !dbg !11696, !tbaa !2683
  %arrayidx78 = getelementptr i64, i64* %114, i64 %113, !dbg !11696
  %115 = load i64, i64* %arrayidx78, align 8, !dbg !11696, !tbaa !3427
  %116 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11697, !tbaa !2683
  %117 = bitcast %struct._object* %116 to %struct.PyTupleObject*, !dbg !11698
  %ob_item79 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %117, i32 0, i32 1, !dbg !11699
  %arrayidx80 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item79, i32 0, i64 %115, !dbg !11700
  %118 = load %struct._object*, %struct._object** %arrayidx80, align 8, !dbg !11700, !tbaa !2683
  store %struct._object* %118, %struct._object** %elem, align 8, !dbg !11701, !tbaa !2683
  %119 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11702, !tbaa !2683
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 0, !dbg !11703
  %120 = load i64, i64* %ob_refcnt81, align 8, !dbg !11704, !tbaa !2722
  %inc82 = add i64 %120, 1, !dbg !11704
  store i64 %inc82, i64* %ob_refcnt81, align 8, !dbg !11704, !tbaa !2722
  %121 = load i64, i64* %i, align 8, !dbg !11705, !tbaa !3427
  %122 = load %struct._object*, %struct._object** %result, align 8, !dbg !11706, !tbaa !2683
  %123 = bitcast %struct._object* %122 to %struct.PyTupleObject*, !dbg !11707
  %ob_item83 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %123, i32 0, i32 1, !dbg !11708
  %arrayidx84 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item83, i32 0, i64 %121, !dbg !11709
  %124 = load %struct._object*, %struct._object** %arrayidx84, align 8, !dbg !11709, !tbaa !2683
  store %struct._object* %124, %struct._object** %oldelem, align 8, !dbg !11710, !tbaa !2683
  %125 = load %struct._object*, %struct._object** %elem, align 8, !dbg !11711, !tbaa !2683
  %126 = load i64, i64* %i, align 8, !dbg !11712, !tbaa !3427
  %127 = load %struct._object*, %struct._object** %result, align 8, !dbg !11713, !tbaa !2683
  %128 = bitcast %struct._object* %127 to %struct.PyTupleObject*, !dbg !11714
  %ob_item85 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %128, i32 0, i32 1, !dbg !11715
  %arrayidx86 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item85, i32 0, i64 %126, !dbg !11716
  store %struct._object* %125, %struct._object** %arrayidx86, align 8, !dbg !11717, !tbaa !2683
  br label %do.body.87, !dbg !11718

do.body.87:                                       ; preds = %if.else.77
  %129 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !11719
  call void @llvm.lifetime.start(i64 8, i8* %129) #1, !dbg !11719
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp88, metadata !1927, metadata !2666), !dbg !11721
  %130 = load %struct._object*, %struct._object** %oldelem, align 8, !dbg !11722, !tbaa !2683
  store %struct._object* %130, %struct._object** %_py_decref_tmp88, align 8, !dbg !11721, !tbaa !2683
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !11723, !tbaa !2683
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 0, !dbg !11725
  %132 = load i64, i64* %ob_refcnt89, align 8, !dbg !11726, !tbaa !2722
  %dec90 = add i64 %132, -1, !dbg !11726
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !11726, !tbaa !2722
  %cmp91 = icmp ne i64 %dec90, 0, !dbg !11727
  br i1 %cmp91, label %if.then.92, label %if.else.93, !dbg !11728

if.then.92:                                       ; preds = %do.body.87
  br label %if.end.96, !dbg !11729

if.else.93:                                       ; preds = %do.body.87
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !11731, !tbaa !2683
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 1, !dbg !11733
  %134 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !11733, !tbaa !2675
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %134, i32 0, i32 4, !dbg !11734
  %135 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !11734, !tbaa !2768
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !11735, !tbaa !2683
  call void %135(%struct._object* %136), !dbg !11736
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %137 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !11737
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !11737
  br label %do.cond.97, !dbg !11739

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !11740

do.end.98:                                        ; preds = %do.cond.97
  br label %for.end.102, !dbg !11742

if.end.99:                                        ; preds = %do.end.76
  br label %for.inc.100, !dbg !11743

for.inc.100:                                      ; preds = %if.end.99
  %138 = load i64, i64* %i, align 8, !dbg !11744, !tbaa !3427
  %dec101 = add i64 %138, -1, !dbg !11744
  store i64 %dec101, i64* %i, align 8, !dbg !11744, !tbaa !3427
  br label %for.cond.45, !dbg !11745

for.end.102:                                      ; preds = %do.end.98, %for.cond.45
  %139 = load i64, i64* %i, align 8, !dbg !11746, !tbaa !3427
  %cmp103 = icmp slt i64 %139, 0, !dbg !11748
  br i1 %cmp103, label %if.then.104, label %if.end.105, !dbg !11749

if.then.104:                                      ; preds = %for.end.102
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.106, !dbg !11750

if.end.105:                                       ; preds = %for.end.102
  store i32 0, i32* %cleanup.dest.slot, !dbg !11751
  br label %cleanup.106, !dbg !11751

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.106

cleanup.106:                                      ; preds = %NewDefault, %if.end.105, %if.then.104
  %140 = bitcast i64** %indices to i8*, !dbg !11752
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !11752
  %cleanup.dest.107 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.106
  %Pivot = icmp slt i32 %cleanup.dest.107, 2
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.107, 2
  br i1 %SwitchLeaf5, label %empty, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.107, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.108, label %NewDefault.1

cleanup.cont.108:                                 ; preds = %LeafBlock.2
  br label %if.end.109

if.end.109:                                       ; preds = %cleanup.cont.108, %for.end
  %141 = load %struct._object*, %struct._object** %result, align 8, !dbg !11754, !tbaa !2683
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 0, !dbg !11755
  %142 = load i64, i64* %ob_refcnt110, align 8, !dbg !11756, !tbaa !2722
  %inc111 = add i64 %142, 1, !dbg !11756
  store i64 %inc111, i64* %ob_refcnt110, align 8, !dbg !11756, !tbaa !2722
  %143 = load %struct._object*, %struct._object** %result, align 8, !dbg !11757, !tbaa !2683
  store %struct._object* %143, %struct._object** %retval, !dbg !11758
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113, !dbg !11758

empty:                                            ; preds = %LeafBlock.4, %if.then.11, %if.then.5
  %144 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !11759, !tbaa !2683
  %stopped112 = getelementptr inbounds %struct.productobject, %struct.productobject* %144, i32 0, i32 4, !dbg !11760
  store i32 1, i32* %stopped112, align 4, !dbg !11761, !tbaa !11478
  store %struct._object* null, %struct._object** %retval, !dbg !11762
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113, !dbg !11762

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.113

cleanup.113:                                      ; preds = %NewDefault.1, %empty, %if.end.109, %if.then
  %145 = bitcast i64* %i to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %145) #1, !dbg !11763
  %146 = bitcast i64* %npools to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %146) #1, !dbg !11763
  %147 = bitcast %struct._object** %result to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %147) #1, !dbg !11763
  %148 = bitcast %struct._object** %pools to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !11763
  %149 = bitcast %struct._object** %oldelem to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %149) #1, !dbg !11763
  %150 = bitcast %struct._object** %elem to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %150) #1, !dbg !11763
  %151 = bitcast %struct._object** %pool to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %151) #1, !dbg !11763
  %152 = load %struct._object*, %struct._object** %retval, !dbg !11763
  ret %struct._object* %152, !dbg !11763
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %lz = alloca %struct.productobject*, align 8
  %nargs = alloca i64, align 8
  %npools = alloca i64, align 8
  %repeat = alloca i64, align 8
  %pools = alloca %struct._object*, align 8
  %indices = alloca i64*, align 8
  %i = alloca i64, align 8
  %kwlist = alloca [2 x i8*], align 16
  %tmpargs = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %pool = alloca %struct._object*, align 8
  %pool52 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1981, metadata !2666), !dbg !11764
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1982, metadata !2666), !dbg !11765
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1983, metadata !2666), !dbg !11766
  %0 = bitcast %struct.productobject** %lz to i8*, !dbg !11767
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11767
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz, metadata !1984, metadata !2666), !dbg !11768
  %1 = bitcast i64* %nargs to i8*, !dbg !11769
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !11769
  call void @llvm.dbg.declare(metadata i64* %nargs, metadata !1985, metadata !2666), !dbg !11770
  %2 = bitcast i64* %npools to i8*, !dbg !11769
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11769
  call void @llvm.dbg.declare(metadata i64* %npools, metadata !1986, metadata !2666), !dbg !11771
  %3 = bitcast i64* %repeat to i8*, !dbg !11769
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !11769
  call void @llvm.dbg.declare(metadata i64* %repeat, metadata !1987, metadata !2666), !dbg !11772
  store i64 1, i64* %repeat, align 8, !dbg !11772, !tbaa !3427
  %4 = bitcast %struct._object** %pools to i8*, !dbg !11773
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !11773
  call void @llvm.dbg.declare(metadata %struct._object** %pools, metadata !1988, metadata !2666), !dbg !11774
  store %struct._object* null, %struct._object** %pools, align 8, !dbg !11774, !tbaa !2683
  %5 = bitcast i64** %indices to i8*, !dbg !11775
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !11775
  call void @llvm.dbg.declare(metadata i64** %indices, metadata !1989, metadata !2666), !dbg !11776
  store i64* null, i64** %indices, align 8, !dbg !11776, !tbaa !2683
  %6 = bitcast i64* %i to i8*, !dbg !11777
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !11777
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1990, metadata !2666), !dbg !11778
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11779, !tbaa !2683
  %cmp = icmp ne %struct._object* %7, null, !dbg !11780
  br i1 %cmp, label %if.then, label %if.end.25, !dbg !11781

if.then:                                          ; preds = %entry
  %8 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !11782
  call void @llvm.lifetime.start(i64 16, i8* %8) #1, !dbg !11782
  call void @llvm.dbg.declare(metadata [2 x i8*]* %kwlist, metadata !1991, metadata !2666), !dbg !11783
  %9 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !11783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast ([2 x i8*]* @product_new.kwlist to i8*), i64 16, i32 16, i1 false), !dbg !11783
  %10 = bitcast %struct._object** %tmpargs to i8*, !dbg !11784
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !11784
  call void @llvm.dbg.declare(metadata %struct._object** %tmpargs, metadata !1997, metadata !2666), !dbg !11785
  %call = call %struct._object* @PyTuple_New(i64 0), !dbg !11786
  store %struct._object* %call, %struct._object** %tmpargs, align 8, !dbg !11785, !tbaa !2683
  %11 = load %struct._object*, %struct._object** %tmpargs, align 8, !dbg !11787, !tbaa !2683
  %cmp1 = icmp eq %struct._object* %11, null, !dbg !11789
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !11790

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !11791
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11791

if.end:                                           ; preds = %if.then
  %12 = load %struct._object*, %struct._object** %tmpargs, align 8, !dbg !11792, !tbaa !2683
  %13 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11793, !tbaa !2683
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %kwlist, i32 0, i32 0, !dbg !11794
  %call3 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %12, %struct._object* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i32 0, i32 0), i8** %arraydecay, i64* %repeat), !dbg !11795
  %tobool = icmp ne i32 %call3, 0, !dbg !11795
  br i1 %tobool, label %if.end.8, label %if.then.4, !dbg !11796

if.then.4:                                        ; preds = %if.end
  br label %do.body, !dbg !11797

do.body:                                          ; preds = %if.then.4
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11798
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !11798
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1998, metadata !2666), !dbg !11800
  %15 = load %struct._object*, %struct._object** %tmpargs, align 8, !dbg !11801, !tbaa !2683
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !11800, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11802, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !11804
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !11805, !tbaa !2722
  %dec = add i64 %17, -1, !dbg !11805
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11805, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !11806
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !11807

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !11808

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11810, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !11812
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11812, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !11813
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11813, !tbaa !2768
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11814, !tbaa !2683
  call void %20(%struct._object* %21), !dbg !11815
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11816
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !11816
  br label %do.cond, !dbg !11818

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !11819

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !11821
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11821

if.end.8:                                         ; preds = %if.end
  br label %do.body.9, !dbg !11822

do.body.9:                                        ; preds = %if.end.8
  %23 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !11823
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !11823
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !2002, metadata !2666), !dbg !11825
  %24 = load %struct._object*, %struct._object** %tmpargs, align 8, !dbg !11826, !tbaa !2683
  store %struct._object* %24, %struct._object** %_py_decref_tmp10, align 8, !dbg !11825, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !11827, !tbaa !2683
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !11829
  %26 = load i64, i64* %ob_refcnt11, align 8, !dbg !11830, !tbaa !2722
  %dec12 = add i64 %26, -1, !dbg !11830
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !11830, !tbaa !2722
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !11831
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !11832

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !11833

if.else.15:                                       ; preds = %do.body.9
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !11835, !tbaa !2683
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !11837
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !11837, !tbaa !2675
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !11838
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !11838, !tbaa !2768
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !11839, !tbaa !2683
  call void %29(%struct._object* %30), !dbg !11840
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %31 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !11841
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !11841
  br label %do.cond.19, !dbg !11843

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !11844

do.end.20:                                        ; preds = %do.cond.19
  %32 = load i64, i64* %repeat, align 8, !dbg !11846, !tbaa !3427
  %cmp21 = icmp slt i64 %32, 0, !dbg !11848
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !11849

if.then.22:                                       ; preds = %do.end.20
  %33 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11850, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.81, i32 0, i32 0)), !dbg !11852
  store %struct._object* null, %struct._object** %retval, !dbg !11853
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11853

if.end.23:                                        ; preds = %do.end.20
  store i32 0, i32* %cleanup.dest.slot, !dbg !11854
  br label %cleanup, !dbg !11854

cleanup:                                          ; preds = %if.end.23, %if.then.22, %do.end, %if.then.2
  %34 = bitcast %struct._object** %tmpargs to i8*, !dbg !11855
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !11855
  %35 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !11855
  call void @llvm.lifetime.end(i64 16, i8* %35) #1, !dbg !11855
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.25, !dbg !11857

if.end.25:                                        ; preds = %cleanup.cont, %entry
  %36 = load i64, i64* %repeat, align 8, !dbg !11858, !tbaa !3427
  %cmp26 = icmp eq i64 %36, 0, !dbg !11859
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !11860

cond.true:                                        ; preds = %if.end.25
  br label %cond.end, !dbg !11861

cond.false:                                       ; preds = %if.end.25
  %37 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11863, !tbaa !2683
  %38 = bitcast %struct._object* %37 to %struct.PyVarObject*, !dbg !11865
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %38, i32 0, i32 1, !dbg !11866
  %39 = load i64, i64* %ob_size, align 8, !dbg !11866, !tbaa !3426
  br label %cond.end, !dbg !11860

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %39, %cond.false ], !dbg !11860
  store i64 %cond, i64* %nargs, align 8, !dbg !11867, !tbaa !3427
  %40 = load i64, i64* %nargs, align 8, !dbg !11870, !tbaa !3427
  %41 = load i64, i64* %repeat, align 8, !dbg !11871, !tbaa !3427
  %mul = mul i64 %40, %41, !dbg !11872
  store i64 %mul, i64* %npools, align 8, !dbg !11873, !tbaa !3427
  %42 = load i64, i64* %npools, align 8, !dbg !11874, !tbaa !3427
  %mul27 = mul i64 %42, 8, !dbg !11875
  %call28 = call i8* @PyMem_Malloc(i64 %mul27), !dbg !11876
  %43 = bitcast i8* %call28 to i64*, !dbg !11876
  store i64* %43, i64** %indices, align 8, !dbg !11877, !tbaa !2683
  %44 = load i64*, i64** %indices, align 8, !dbg !11878, !tbaa !2683
  %cmp29 = icmp eq i64* %44, null, !dbg !11880
  br i1 %cmp29, label %if.then.30, label %if.end.32, !dbg !11881

if.then.30:                                       ; preds = %cond.end
  %call31 = call %struct._object* @PyErr_NoMemory(), !dbg !11882
  br label %error, !dbg !11884

if.end.32:                                        ; preds = %cond.end
  %45 = load i64, i64* %npools, align 8, !dbg !11885, !tbaa !3427
  %call33 = call %struct._object* @PyTuple_New(i64 %45), !dbg !11886
  store %struct._object* %call33, %struct._object** %pools, align 8, !dbg !11887, !tbaa !2683
  %46 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11888, !tbaa !2683
  %cmp34 = icmp eq %struct._object* %46, null, !dbg !11890
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !11891

if.then.35:                                       ; preds = %if.end.32
  br label %error, !dbg !11892

if.end.36:                                        ; preds = %if.end.32
  store i64 0, i64* %i, align 8, !dbg !11893, !tbaa !3427
  br label %for.cond, !dbg !11894

for.cond:                                         ; preds = %for.inc, %if.end.36
  %47 = load i64, i64* %i, align 8, !dbg !11895, !tbaa !3427
  %48 = load i64, i64* %nargs, align 8, !dbg !11898, !tbaa !3427
  %cmp37 = icmp slt i64 %47, %48, !dbg !11899
  br i1 %cmp37, label %for.body, label %for.end, !dbg !11900

for.body:                                         ; preds = %for.cond
  %49 = bitcast %struct._object** %item to i8*, !dbg !11901
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !11901
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !2004, metadata !2666), !dbg !11902
  %50 = load i64, i64* %i, align 8, !dbg !11903, !tbaa !3427
  %51 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11904, !tbaa !2683
  %52 = bitcast %struct._object* %51 to %struct.PyTupleObject*, !dbg !11905
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %52, i32 0, i32 1, !dbg !11906
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %50, !dbg !11907
  %53 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11907, !tbaa !2683
  store %struct._object* %53, %struct._object** %item, align 8, !dbg !11902, !tbaa !2683
  %54 = bitcast %struct._object** %pool to i8*, !dbg !11908
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !11908
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !2008, metadata !2666), !dbg !11909
  %55 = load %struct._object*, %struct._object** %item, align 8, !dbg !11910, !tbaa !2683
  %call38 = call %struct._object* @PySequence_Tuple(%struct._object* %55), !dbg !11911
  store %struct._object* %call38, %struct._object** %pool, align 8, !dbg !11909, !tbaa !2683
  %56 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11912, !tbaa !2683
  %cmp39 = icmp eq %struct._object* %56, null, !dbg !11914
  br i1 %cmp39, label %if.then.40, label %if.end.41, !dbg !11915

if.then.40:                                       ; preds = %for.body
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.45, !dbg !11916

if.end.41:                                        ; preds = %for.body
  %57 = load %struct._object*, %struct._object** %pool, align 8, !dbg !11917, !tbaa !2683
  %58 = load i64, i64* %i, align 8, !dbg !11918, !tbaa !3427
  %59 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11919, !tbaa !2683
  %60 = bitcast %struct._object* %59 to %struct.PyTupleObject*, !dbg !11920
  %ob_item42 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %60, i32 0, i32 1, !dbg !11921
  %arrayidx43 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item42, i32 0, i64 %58, !dbg !11922
  store %struct._object* %57, %struct._object** %arrayidx43, align 8, !dbg !11923, !tbaa !2683
  %61 = load i64, i64* %i, align 8, !dbg !11924, !tbaa !3427
  %62 = load i64*, i64** %indices, align 8, !dbg !11925, !tbaa !2683
  %arrayidx44 = getelementptr i64, i64* %62, i64 %61, !dbg !11925
  store i64 0, i64* %arrayidx44, align 8, !dbg !11926, !tbaa !3427
  store i32 0, i32* %cleanup.dest.slot, !dbg !11927
  br label %cleanup.45, !dbg !11927

cleanup.45:                                       ; preds = %if.end.41, %if.then.40
  %63 = bitcast %struct._object** %pool to i8*, !dbg !11928
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !11928
  %64 = bitcast %struct._object** %item to i8*, !dbg !11928
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !11928
  %cleanup.dest.47 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.45
  %Pivot = icmp slt i32 %cleanup.dest.47, 6
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.47, 6
  br i1 %SwitchLeaf5, label %error, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.47, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.48, label %NewDefault.1

cleanup.cont.48:                                  ; preds = %LeafBlock.2
  br label %for.inc, !dbg !11929

for.inc:                                          ; preds = %cleanup.cont.48
  %65 = load i64, i64* %i, align 8, !dbg !11930, !tbaa !3427
  %inc = add i64 %65, 1, !dbg !11930
  store i64 %inc, i64* %i, align 8, !dbg !11930, !tbaa !3427
  br label %for.cond, !dbg !11931

for.end:                                          ; preds = %for.cond
  br label %for.cond.49, !dbg !11932

for.cond.49:                                      ; preds = %for.inc.60, %for.end
  %66 = load i64, i64* %i, align 8, !dbg !11933, !tbaa !3427
  %67 = load i64, i64* %npools, align 8, !dbg !11936, !tbaa !3427
  %cmp50 = icmp slt i64 %66, %67, !dbg !11937
  br i1 %cmp50, label %for.body.51, label %for.end.62, !dbg !11938

for.body.51:                                      ; preds = %for.cond.49
  %68 = bitcast %struct._object** %pool52 to i8*, !dbg !11939
  call void @llvm.lifetime.start(i64 8, i8* %68) #1, !dbg !11939
  call void @llvm.dbg.declare(metadata %struct._object** %pool52, metadata !2009, metadata !2666), !dbg !11940
  %69 = load i64, i64* %i, align 8, !dbg !11941, !tbaa !3427
  %70 = load i64, i64* %nargs, align 8, !dbg !11942, !tbaa !3427
  %sub = sub i64 %69, %70, !dbg !11943
  %71 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11944, !tbaa !2683
  %72 = bitcast %struct._object* %71 to %struct.PyTupleObject*, !dbg !11945
  %ob_item53 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %72, i32 0, i32 1, !dbg !11946
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item53, i32 0, i64 %sub, !dbg !11947
  %73 = load %struct._object*, %struct._object** %arrayidx54, align 8, !dbg !11947, !tbaa !2683
  store %struct._object* %73, %struct._object** %pool52, align 8, !dbg !11940, !tbaa !2683
  %74 = load %struct._object*, %struct._object** %pool52, align 8, !dbg !11948, !tbaa !2683
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !11949
  %75 = load i64, i64* %ob_refcnt55, align 8, !dbg !11950, !tbaa !2722
  %inc56 = add i64 %75, 1, !dbg !11950
  store i64 %inc56, i64* %ob_refcnt55, align 8, !dbg !11950, !tbaa !2722
  %76 = load %struct._object*, %struct._object** %pool52, align 8, !dbg !11951, !tbaa !2683
  %77 = load i64, i64* %i, align 8, !dbg !11952, !tbaa !3427
  %78 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11953, !tbaa !2683
  %79 = bitcast %struct._object* %78 to %struct.PyTupleObject*, !dbg !11954
  %ob_item57 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %79, i32 0, i32 1, !dbg !11955
  %arrayidx58 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item57, i32 0, i64 %77, !dbg !11956
  store %struct._object* %76, %struct._object** %arrayidx58, align 8, !dbg !11957, !tbaa !2683
  %80 = load i64, i64* %i, align 8, !dbg !11958, !tbaa !3427
  %81 = load i64*, i64** %indices, align 8, !dbg !11959, !tbaa !2683
  %arrayidx59 = getelementptr i64, i64* %81, i64 %80, !dbg !11959
  store i64 0, i64* %arrayidx59, align 8, !dbg !11960, !tbaa !3427
  %82 = bitcast %struct._object** %pool52 to i8*, !dbg !11961
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !11961
  br label %for.inc.60, !dbg !11962

for.inc.60:                                       ; preds = %for.body.51
  %83 = load i64, i64* %i, align 8, !dbg !11963, !tbaa !3427
  %inc61 = add i64 %83, 1, !dbg !11963
  store i64 %inc61, i64* %i, align 8, !dbg !11963, !tbaa !3427
  br label %for.cond.49, !dbg !11964

for.end.62:                                       ; preds = %for.cond.49
  %84 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11965, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %84, i32 0, i32 36, !dbg !11966
  %85 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !11966, !tbaa !3097
  %86 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11967, !tbaa !2683
  %call63 = call %struct._object* %85(%struct._typeobject* %86, i64 0), !dbg !11965
  %87 = bitcast %struct._object* %call63 to %struct.productobject*, !dbg !11968
  store %struct.productobject* %87, %struct.productobject** %lz, align 8, !dbg !11969, !tbaa !2683
  %88 = load %struct.productobject*, %struct.productobject** %lz, align 8, !dbg !11970, !tbaa !2683
  %cmp64 = icmp eq %struct.productobject* %88, null, !dbg !11972
  br i1 %cmp64, label %if.then.65, label %if.end.66, !dbg !11973

if.then.65:                                       ; preds = %for.end.62
  br label %error, !dbg !11974

if.end.66:                                        ; preds = %for.end.62
  %89 = load %struct._object*, %struct._object** %pools, align 8, !dbg !11975, !tbaa !2683
  %90 = load %struct.productobject*, %struct.productobject** %lz, align 8, !dbg !11976, !tbaa !2683
  %pools67 = getelementptr inbounds %struct.productobject, %struct.productobject* %90, i32 0, i32 1, !dbg !11977
  store %struct._object* %89, %struct._object** %pools67, align 8, !dbg !11978, !tbaa !11301
  %91 = load i64*, i64** %indices, align 8, !dbg !11979, !tbaa !2683
  %92 = load %struct.productobject*, %struct.productobject** %lz, align 8, !dbg !11980, !tbaa !2683
  %indices68 = getelementptr inbounds %struct.productobject, %struct.productobject* %92, i32 0, i32 2, !dbg !11981
  store i64* %91, i64** %indices68, align 8, !dbg !11982, !tbaa !11379
  %93 = load %struct.productobject*, %struct.productobject** %lz, align 8, !dbg !11983, !tbaa !2683
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %93, i32 0, i32 3, !dbg !11984
  store %struct._object* null, %struct._object** %result, align 8, !dbg !11985, !tbaa !11343
  %94 = load %struct.productobject*, %struct.productobject** %lz, align 8, !dbg !11986, !tbaa !2683
  %stopped = getelementptr inbounds %struct.productobject, %struct.productobject* %94, i32 0, i32 4, !dbg !11987
  store i32 0, i32* %stopped, align 4, !dbg !11988, !tbaa !11478
  %95 = load %struct.productobject*, %struct.productobject** %lz, align 8, !dbg !11989, !tbaa !2683
  %96 = bitcast %struct.productobject* %95 to %struct._object*, !dbg !11990
  store %struct._object* %96, %struct._object** %retval, !dbg !11991
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !11991

error:                                            ; preds = %LeafBlock.4, %if.then.65, %if.then.35, %if.then.30
  %97 = load i64*, i64** %indices, align 8, !dbg !11992, !tbaa !2683
  %cmp69 = icmp ne i64* %97, null, !dbg !11994
  br i1 %cmp69, label %if.then.70, label %if.end.71, !dbg !11995

if.then.70:                                       ; preds = %error
  %98 = load i64*, i64** %indices, align 8, !dbg !11996, !tbaa !2683
  %99 = bitcast i64* %98 to i8*, !dbg !11996
  call void @PyMem_Free(i8* %99), !dbg !11997
  br label %if.end.71, !dbg !11997

if.end.71:                                        ; preds = %if.then.70, %error
  br label %do.body.72, !dbg !11998

do.body.72:                                       ; preds = %if.end.71
  %100 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11999
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !11999
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2013, metadata !2666), !dbg !12001
  %101 = load %struct._object*, %struct._object** %pools, align 8, !dbg !12002, !tbaa !2683
  store %struct._object* %101, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12001, !tbaa !2683
  %102 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12003, !tbaa !2683
  %cmp73 = icmp ne %struct._object* %102, null, !dbg !12004
  br i1 %cmp73, label %if.then.74, label %if.end.87, !dbg !12005

if.then.74:                                       ; preds = %do.body.72
  br label %do.body.75, !dbg !12006

do.body.75:                                       ; preds = %if.then.74
  %103 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !12008
  call void @llvm.lifetime.start(i64 8, i8* %103) #1, !dbg !12008
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !2015, metadata !2666), !dbg !12010
  %104 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12011, !tbaa !2683
  store %struct._object* %104, %struct._object** %_py_decref_tmp76, align 8, !dbg !12010, !tbaa !2683
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !12012, !tbaa !2683
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 0, !dbg !12014
  %106 = load i64, i64* %ob_refcnt77, align 8, !dbg !12015, !tbaa !2722
  %dec78 = add i64 %106, -1, !dbg !12015
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !12015, !tbaa !2722
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !12016
  br i1 %cmp79, label %if.then.80, label %if.else.81, !dbg !12017

if.then.80:                                       ; preds = %do.body.75
  br label %if.end.84, !dbg !12018

if.else.81:                                       ; preds = %do.body.75
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !12020, !tbaa !2683
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !12022
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8, !dbg !12022, !tbaa !2675
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 4, !dbg !12023
  %109 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8, !dbg !12023, !tbaa !2768
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !12024, !tbaa !2683
  call void %109(%struct._object* %110), !dbg !12025
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  %111 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !12026
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !12026
  br label %do.cond.85, !dbg !12028

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !12029

do.end.86:                                        ; preds = %do.cond.85
  br label %if.end.87, !dbg !12031

if.end.87:                                        ; preds = %do.end.86, %do.body.72
  %112 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12033
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !12033
  br label %do.cond.88, !dbg !12035

do.cond.88:                                       ; preds = %if.end.87
  br label %do.end.89, !dbg !12036

do.end.89:                                        ; preds = %do.cond.88
  store %struct._object* null, %struct._object** %retval, !dbg !12038
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !12038

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.90

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.90

cleanup.90:                                       ; preds = %NewDefault.1, %NewDefault, %do.end.89, %if.end.66
  %113 = bitcast i64* %i to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !12039
  %114 = bitcast i64** %indices to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !12039
  %115 = bitcast %struct._object** %pools to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !12039
  %116 = bitcast i64* %repeat to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !12039
  %117 = bitcast i64* %npools to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !12039
  %118 = bitcast i64* %nargs to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !12039
  %119 = bitcast %struct.productobject** %lz to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !12039
  %120 = load %struct._object*, %struct._object** %retval, !dbg !12039
  ret %struct._object* %120, !dbg !12039
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_reduce(%struct.productobject* %lz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.productobject*, align 8
  %indices = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %index = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.productobject* %lz, %struct.productobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz.addr, metadata !1932, metadata !2666), !dbg !12040
  %0 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12041, !tbaa !2683
  %stopped = getelementptr inbounds %struct.productobject, %struct.productobject* %0, i32 0, i32 4, !dbg !12042
  %1 = load i32, i32* %stopped, align 4, !dbg !12042, !tbaa !11478
  %tobool = icmp ne i32 %1, 0, !dbg !12041
  br i1 %tobool, label %if.then, label %if.else, !dbg !12043

if.then:                                          ; preds = %entry
  %2 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12044, !tbaa !2683
  %3 = bitcast %struct.productobject* %2 to %struct._object*, !dbg !12046
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !12047
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12047, !tbaa !2675
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i32 0, i32 0), %struct._typeobject* %4), !dbg !12048
  store %struct._object* %call, %struct._object** %retval, !dbg !12049
  br label %return, !dbg !12049

if.else:                                          ; preds = %entry
  %5 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12050, !tbaa !2683
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %5, i32 0, i32 3, !dbg !12051
  %6 = load %struct._object*, %struct._object** %result, align 8, !dbg !12051, !tbaa !11343
  %cmp = icmp eq %struct._object* %6, null, !dbg !12052
  br i1 %cmp, label %if.then.1, label %if.else.4, !dbg !12053

if.then.1:                                        ; preds = %if.else
  %7 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12054, !tbaa !2683
  %8 = bitcast %struct.productobject* %7 to %struct._object*, !dbg !12056
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !12057
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !12057, !tbaa !2675
  %10 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12058, !tbaa !2683
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %10, i32 0, i32 1, !dbg !12059
  %11 = load %struct._object*, %struct._object** %pools, align 8, !dbg !12059, !tbaa !11301
  %call3 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), %struct._typeobject* %9, %struct._object* %11), !dbg !12060
  store %struct._object* %call3, %struct._object** %retval, !dbg !12061
  br label %return, !dbg !12061

if.else.4:                                        ; preds = %if.else
  %12 = bitcast %struct._object** %indices to i8*, !dbg !12062
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !12062
  call void @llvm.dbg.declare(metadata %struct._object** %indices, metadata !1933, metadata !2666), !dbg !12063
  %13 = bitcast i64* %n to i8*, !dbg !12064
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !12064
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1937, metadata !2666), !dbg !12065
  %14 = bitcast i64* %i to i8*, !dbg !12064
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !12064
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1938, metadata !2666), !dbg !12066
  %15 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12067, !tbaa !2683
  %pools5 = getelementptr inbounds %struct.productobject, %struct.productobject* %15, i32 0, i32 1, !dbg !12068
  %16 = load %struct._object*, %struct._object** %pools5, align 8, !dbg !12068, !tbaa !11301
  %17 = bitcast %struct._object* %16 to %struct.PyVarObject*, !dbg !12069
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %17, i32 0, i32 1, !dbg !12070
  %18 = load i64, i64* %ob_size, align 8, !dbg !12070, !tbaa !3426
  store i64 %18, i64* %n, align 8, !dbg !12071, !tbaa !3427
  %19 = load i64, i64* %n, align 8, !dbg !12072, !tbaa !3427
  %call6 = call %struct._object* @PyTuple_New(i64 %19), !dbg !12073
  store %struct._object* %call6, %struct._object** %indices, align 8, !dbg !12074, !tbaa !2683
  %20 = load %struct._object*, %struct._object** %indices, align 8, !dbg !12075, !tbaa !2683
  %cmp7 = icmp eq %struct._object* %20, null, !dbg !12077
  br i1 %cmp7, label %if.then.8, label %if.end, !dbg !12078

if.then.8:                                        ; preds = %if.else.4
  store %struct._object* null, %struct._object** %retval, !dbg !12079
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.24, !dbg !12079

if.end:                                           ; preds = %if.else.4
  store i64 0, i64* %i, align 8, !dbg !12080, !tbaa !3427
  br label %for.cond, !dbg !12081

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i64, i64* %i, align 8, !dbg !12082, !tbaa !3427
  %22 = load i64, i64* %n, align 8, !dbg !12085, !tbaa !3427
  %cmp9 = icmp slt i64 %21, %22, !dbg !12086
  br i1 %cmp9, label %for.body, label %for.end, !dbg !12087

for.body:                                         ; preds = %for.cond
  %23 = bitcast %struct._object** %index to i8*, !dbg !12088
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !12088
  call void @llvm.dbg.declare(metadata %struct._object** %index, metadata !1939, metadata !2666), !dbg !12089
  %24 = load i64, i64* %i, align 8, !dbg !12090, !tbaa !3427
  %25 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12091, !tbaa !2683
  %indices10 = getelementptr inbounds %struct.productobject, %struct.productobject* %25, i32 0, i32 2, !dbg !12092
  %26 = load i64*, i64** %indices10, align 8, !dbg !12092, !tbaa !11379
  %arrayidx = getelementptr i64, i64* %26, i64 %24, !dbg !12091
  %27 = load i64, i64* %arrayidx, align 8, !dbg !12091, !tbaa !3427
  %call11 = call %struct._object* @PyLong_FromSsize_t(i64 %27), !dbg !12093
  store %struct._object* %call11, %struct._object** %index, align 8, !dbg !12089, !tbaa !2683
  %28 = load %struct._object*, %struct._object** %index, align 8, !dbg !12094, !tbaa !2683
  %tobool12 = icmp ne %struct._object* %28, null, !dbg !12094
  br i1 %tobool12, label %if.end.19, label %if.then.13, !dbg !12095

if.then.13:                                       ; preds = %for.body
  br label %do.body, !dbg !12096

do.body:                                          ; preds = %if.then.13
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12097
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !12097
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1943, metadata !2666), !dbg !12099
  %30 = load %struct._object*, %struct._object** %indices, align 8, !dbg !12100, !tbaa !2683
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !12099, !tbaa !2683
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12101, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !12103
  %32 = load i64, i64* %ob_refcnt, align 8, !dbg !12104, !tbaa !2722
  %dec = add i64 %32, -1, !dbg !12104
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12104, !tbaa !2722
  %cmp14 = icmp ne i64 %dec, 0, !dbg !12105
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !12106

if.then.15:                                       ; preds = %do.body
  br label %if.end.18, !dbg !12107

if.else.16:                                       ; preds = %do.body
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12109, !tbaa !2683
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !12111
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !12111, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !12112
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12112, !tbaa !2768
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12113, !tbaa !2683
  call void %35(%struct._object* %36), !dbg !12114
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.16, %if.then.15
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12115
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !12115
  br label %do.cond, !dbg !12117

do.cond:                                          ; preds = %if.end.18
  br label %do.end, !dbg !12118

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12120
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12120

if.end.19:                                        ; preds = %for.body
  %38 = load %struct._object*, %struct._object** %index, align 8, !dbg !12121, !tbaa !2683
  %39 = load i64, i64* %i, align 8, !dbg !12122, !tbaa !3427
  %40 = load %struct._object*, %struct._object** %indices, align 8, !dbg !12123, !tbaa !2683
  %41 = bitcast %struct._object* %40 to %struct.PyTupleObject*, !dbg !12124
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %41, i32 0, i32 1, !dbg !12125
  %arrayidx20 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %39, !dbg !12126
  store %struct._object* %38, %struct._object** %arrayidx20, align 8, !dbg !12127, !tbaa !2683
  store i32 0, i32* %cleanup.dest.slot, !dbg !12128
  br label %cleanup, !dbg !12128

cleanup:                                          ; preds = %if.end.19, %do.end
  %42 = bitcast %struct._object** %index to i8*, !dbg !12129
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !12129
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !12130

for.inc:                                          ; preds = %cleanup.cont
  %43 = load i64, i64* %i, align 8, !dbg !12131, !tbaa !3427
  %inc = add i64 %43, 1, !dbg !12131
  store i64 %inc, i64* %i, align 8, !dbg !12131, !tbaa !3427
  br label %for.cond, !dbg !12132

for.end:                                          ; preds = %for.cond
  %44 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12133, !tbaa !2683
  %45 = bitcast %struct.productobject* %44 to %struct._object*, !dbg !12134
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !12135
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !12135, !tbaa !2675
  %47 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12136, !tbaa !2683
  %pools22 = getelementptr inbounds %struct.productobject, %struct.productobject* %47, i32 0, i32 1, !dbg !12137
  %48 = load %struct._object*, %struct._object** %pools22, align 8, !dbg !12137, !tbaa !11301
  %49 = load %struct._object*, %struct._object** %indices, align 8, !dbg !12138, !tbaa !2683
  %call23 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i32 0, i32 0), %struct._typeobject* %46, %struct._object* %48, %struct._object* %49), !dbg !12139
  store %struct._object* %call23, %struct._object** %retval, !dbg !12140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.24, !dbg !12140

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.24

cleanup.24:                                       ; preds = %NewDefault, %for.end, %if.then.8
  %50 = bitcast i64* %i to i8*, !dbg !12141
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !12141
  %51 = bitcast i64* %n to i8*, !dbg !12141
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !12141
  %52 = bitcast %struct._object** %indices to i8*, !dbg !12141
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !12141
  br label %return

return:                                           ; preds = %cleanup.24, %if.then.1, %if.then
  %53 = load %struct._object*, %struct._object** %retval, !dbg !12142
  ret %struct._object* %53, !dbg !12142
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_setstate(%struct.productobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.productobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %indexObject = alloca %struct._object*, align 8
  %index = alloca i64, align 8
  %pool = alloca %struct._object*, align 8
  %element = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.productobject* %lz, %struct.productobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz.addr, metadata !1951, metadata !2666), !dbg !12143
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1952, metadata !2666), !dbg !12144
  %0 = bitcast %struct._object** %result to i8*, !dbg !12145
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12145
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1953, metadata !2666), !dbg !12146
  %1 = bitcast i64* %n to i8*, !dbg !12147
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12147
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1954, metadata !2666), !dbg !12148
  %2 = bitcast i64* %i to i8*, !dbg !12147
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12147
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1955, metadata !2666), !dbg !12149
  %3 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12150, !tbaa !2683
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %3, i32 0, i32 1, !dbg !12151
  %4 = load %struct._object*, %struct._object** %pools, align 8, !dbg !12151, !tbaa !11301
  %5 = bitcast %struct._object* %4 to %struct.PyVarObject*, !dbg !12152
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1, !dbg !12153
  %6 = load i64, i64* %ob_size, align 8, !dbg !12153, !tbaa !3426
  store i64 %6, i64* %n, align 8, !dbg !12154, !tbaa !3427
  %7 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !12155, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !12157
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12157, !tbaa !2675
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !12158
  %9 = load i64, i64* %tp_flags, align 8, !dbg !12158, !tbaa !3968
  %and = and i64 %9, 67108864, !dbg !12159
  %cmp = icmp ne i64 %and, 0, !dbg !12160
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !12161

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !12162, !tbaa !2683
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !12164
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !12165
  %12 = load i64, i64* %ob_size1, align 8, !dbg !12165, !tbaa !3426
  %13 = load i64, i64* %n, align 8, !dbg !12166, !tbaa !3427
  %cmp2 = icmp ne i64 %12, %13, !dbg !12167
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12168

if.then:                                          ; preds = %lor.lhs.false, %entry
  %14 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12169, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0)), !dbg !12171
  store %struct._object* null, %struct._object** %retval, !dbg !12172
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !12172

if.end:                                           ; preds = %lor.lhs.false
  store i64 0, i64* %i, align 8, !dbg !12173, !tbaa !3427
  br label %for.cond, !dbg !12174

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i64, i64* %i, align 8, !dbg !12175, !tbaa !3427
  %16 = load i64, i64* %n, align 8, !dbg !12178, !tbaa !3427
  %cmp3 = icmp slt i64 %15, %16, !dbg !12179
  br i1 %cmp3, label %for.body, label %for.end, !dbg !12180

for.body:                                         ; preds = %for.cond
  %17 = bitcast %struct._object** %indexObject to i8*, !dbg !12181
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !12181
  call void @llvm.dbg.declare(metadata %struct._object** %indexObject, metadata !1956, metadata !2666), !dbg !12182
  %18 = load i64, i64* %i, align 8, !dbg !12183, !tbaa !3427
  %19 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !12184, !tbaa !2683
  %20 = bitcast %struct._object* %19 to %struct.PyTupleObject*, !dbg !12185
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %20, i32 0, i32 1, !dbg !12186
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %18, !dbg !12187
  %21 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !12187, !tbaa !2683
  store %struct._object* %21, %struct._object** %indexObject, align 8, !dbg !12182, !tbaa !2683
  %22 = bitcast i64* %index to i8*, !dbg !12188
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !12188
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1960, metadata !2666), !dbg !12189
  %23 = load %struct._object*, %struct._object** %indexObject, align 8, !dbg !12190, !tbaa !2683
  %call = call i64 @PyLong_AsSsize_t(%struct._object* %23), !dbg !12191
  store i64 %call, i64* %index, align 8, !dbg !12189, !tbaa !3427
  %24 = load i64, i64* %index, align 8, !dbg !12192, !tbaa !3427
  %cmp4 = icmp slt i64 %24, 0, !dbg !12194
  br i1 %cmp4, label %land.lhs.true, label %if.end.7, !dbg !12195

land.lhs.true:                                    ; preds = %for.body
  %call5 = call %struct._object* @PyErr_Occurred(), !dbg !12196
  %tobool = icmp ne %struct._object* %call5, null, !dbg !12196
  br i1 %tobool, label %if.then.6, label %if.end.7, !dbg !12198

if.then.6:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !12199
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12199

if.end.7:                                         ; preds = %land.lhs.true, %for.body
  %25 = load i64, i64* %index, align 8, !dbg !12200, !tbaa !3427
  %cmp8 = icmp slt i64 %25, 0, !dbg !12202
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !12203

if.then.9:                                        ; preds = %if.end.7
  store i64 0, i64* %index, align 8, !dbg !12204, !tbaa !3427
  br label %if.end.14, !dbg !12205

if.else:                                          ; preds = %if.end.7
  %26 = load i64, i64* %index, align 8, !dbg !12206, !tbaa !3427
  %27 = load i64, i64* %n, align 8, !dbg !12208, !tbaa !3427
  %sub = sub i64 %27, 1, !dbg !12209
  %cmp10 = icmp sgt i64 %26, %sub, !dbg !12210
  br i1 %cmp10, label %if.then.11, label %if.end.13, !dbg !12211

if.then.11:                                       ; preds = %if.else
  %28 = load i64, i64* %n, align 8, !dbg !12212, !tbaa !3427
  %sub12 = sub i64 %28, 1, !dbg !12213
  store i64 %sub12, i64* %index, align 8, !dbg !12214, !tbaa !3427
  br label %if.end.13, !dbg !12215

if.end.13:                                        ; preds = %if.then.11, %if.else
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %if.then.9
  %29 = load i64, i64* %index, align 8, !dbg !12216, !tbaa !3427
  %30 = load i64, i64* %i, align 8, !dbg !12217, !tbaa !3427
  %31 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12218, !tbaa !2683
  %indices = getelementptr inbounds %struct.productobject, %struct.productobject* %31, i32 0, i32 2, !dbg !12219
  %32 = load i64*, i64** %indices, align 8, !dbg !12219, !tbaa !11379
  %arrayidx15 = getelementptr i64, i64* %32, i64 %30, !dbg !12218
  store i64 %29, i64* %arrayidx15, align 8, !dbg !12220, !tbaa !3427
  store i32 0, i32* %cleanup.dest.slot, !dbg !12221
  br label %cleanup, !dbg !12221

cleanup:                                          ; preds = %if.end.14, %if.then.6
  %33 = bitcast i64* %index to i8*, !dbg !12222
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !12222
  %34 = bitcast %struct._object** %indexObject to i8*, !dbg !12222
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !12222
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !12223

for.inc:                                          ; preds = %cleanup.cont
  %35 = load i64, i64* %i, align 8, !dbg !12224, !tbaa !3427
  %inc = add i64 %35, 1, !dbg !12224
  store i64 %inc, i64* %i, align 8, !dbg !12224, !tbaa !3427
  br label %for.cond, !dbg !12225

for.end:                                          ; preds = %for.cond
  %36 = load i64, i64* %n, align 8, !dbg !12226, !tbaa !3427
  %call17 = call %struct._object* @PyTuple_New(i64 %36), !dbg !12227
  store %struct._object* %call17, %struct._object** %result, align 8, !dbg !12228, !tbaa !2683
  %37 = load %struct._object*, %struct._object** %result, align 8, !dbg !12229, !tbaa !2683
  %tobool18 = icmp ne %struct._object* %37, null, !dbg !12229
  br i1 %tobool18, label %if.end.20, label %if.then.19, !dbg !12231

if.then.19:                                       ; preds = %for.end
  store %struct._object* null, %struct._object** %retval, !dbg !12232
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !12232

if.end.20:                                        ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !12233, !tbaa !3427
  br label %for.cond.21, !dbg !12234

for.cond.21:                                      ; preds = %for.inc.34, %if.end.20
  %38 = load i64, i64* %i, align 8, !dbg !12235, !tbaa !3427
  %39 = load i64, i64* %n, align 8, !dbg !12238, !tbaa !3427
  %cmp22 = icmp slt i64 %38, %39, !dbg !12239
  br i1 %cmp22, label %for.body.23, label %for.end.36, !dbg !12240

for.body.23:                                      ; preds = %for.cond.21
  %40 = bitcast %struct._object** %pool to i8*, !dbg !12241
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !12241
  call void @llvm.dbg.declare(metadata %struct._object** %pool, metadata !1961, metadata !2666), !dbg !12242
  %41 = load i64, i64* %i, align 8, !dbg !12243, !tbaa !3427
  %42 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12244, !tbaa !2683
  %pools24 = getelementptr inbounds %struct.productobject, %struct.productobject* %42, i32 0, i32 1, !dbg !12245
  %43 = load %struct._object*, %struct._object** %pools24, align 8, !dbg !12245, !tbaa !11301
  %44 = bitcast %struct._object* %43 to %struct.PyTupleObject*, !dbg !12246
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %44, i32 0, i32 1, !dbg !12247
  %arrayidx26 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item25, i32 0, i64 %41, !dbg !12248
  %45 = load %struct._object*, %struct._object** %arrayidx26, align 8, !dbg !12248, !tbaa !2683
  store %struct._object* %45, %struct._object** %pool, align 8, !dbg !12242, !tbaa !2683
  %46 = bitcast %struct._object** %element to i8*, !dbg !12249
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !12249
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1965, metadata !2666), !dbg !12250
  %47 = load i64, i64* %i, align 8, !dbg !12251, !tbaa !3427
  %48 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12252, !tbaa !2683
  %indices27 = getelementptr inbounds %struct.productobject, %struct.productobject* %48, i32 0, i32 2, !dbg !12253
  %49 = load i64*, i64** %indices27, align 8, !dbg !12253, !tbaa !11379
  %arrayidx28 = getelementptr i64, i64* %49, i64 %47, !dbg !12252
  %50 = load i64, i64* %arrayidx28, align 8, !dbg !12252, !tbaa !3427
  %51 = load %struct._object*, %struct._object** %pool, align 8, !dbg !12254, !tbaa !2683
  %52 = bitcast %struct._object* %51 to %struct.PyTupleObject*, !dbg !12255
  %ob_item29 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %52, i32 0, i32 1, !dbg !12256
  %arrayidx30 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item29, i32 0, i64 %50, !dbg !12257
  %53 = load %struct._object*, %struct._object** %arrayidx30, align 8, !dbg !12257, !tbaa !2683
  store %struct._object* %53, %struct._object** %element, align 8, !dbg !12250, !tbaa !2683
  %54 = load %struct._object*, %struct._object** %element, align 8, !dbg !12258, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !12259
  %55 = load i64, i64* %ob_refcnt, align 8, !dbg !12260, !tbaa !2722
  %inc31 = add i64 %55, 1, !dbg !12260
  store i64 %inc31, i64* %ob_refcnt, align 8, !dbg !12260, !tbaa !2722
  %56 = load %struct._object*, %struct._object** %element, align 8, !dbg !12261, !tbaa !2683
  %57 = load i64, i64* %i, align 8, !dbg !12262, !tbaa !3427
  %58 = load %struct._object*, %struct._object** %result, align 8, !dbg !12263, !tbaa !2683
  %59 = bitcast %struct._object* %58 to %struct.PyTupleObject*, !dbg !12264
  %ob_item32 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %59, i32 0, i32 1, !dbg !12265
  %arrayidx33 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item32, i32 0, i64 %57, !dbg !12266
  store %struct._object* %56, %struct._object** %arrayidx33, align 8, !dbg !12267, !tbaa !2683
  %60 = bitcast %struct._object** %element to i8*, !dbg !12268
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !12268
  %61 = bitcast %struct._object** %pool to i8*, !dbg !12268
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !12268
  br label %for.inc.34, !dbg !12269

for.inc.34:                                       ; preds = %for.body.23
  %62 = load i64, i64* %i, align 8, !dbg !12270, !tbaa !3427
  %inc35 = add i64 %62, 1, !dbg !12270
  store i64 %inc35, i64* %i, align 8, !dbg !12270, !tbaa !3427
  br label %for.cond.21, !dbg !12271

for.end.36:                                       ; preds = %for.cond.21
  br label %do.body, !dbg !12272

do.body:                                          ; preds = %for.end.36
  %63 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12273
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !12273
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1966, metadata !2666), !dbg !12275
  %64 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12276, !tbaa !2683
  %result37 = getelementptr inbounds %struct.productobject, %struct.productobject* %64, i32 0, i32 3, !dbg !12277
  %65 = load %struct._object*, %struct._object** %result37, align 8, !dbg !12277, !tbaa !11343
  store %struct._object* %65, %struct._object** %_py_tmp, align 8, !dbg !12275, !tbaa !2683
  %66 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12278, !tbaa !2683
  %cmp38 = icmp ne %struct._object* %66, null, !dbg !12279
  br i1 %cmp38, label %if.then.39, label %if.end.48, !dbg !12280

if.then.39:                                       ; preds = %do.body
  %67 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12281, !tbaa !2683
  %result40 = getelementptr inbounds %struct.productobject, %struct.productobject* %67, i32 0, i32 3, !dbg !12283
  store %struct._object* null, %struct._object** %result40, align 8, !dbg !12284, !tbaa !11343
  br label %do.body.41, !dbg !12285

do.body.41:                                       ; preds = %if.then.39
  %68 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12286
  call void @llvm.lifetime.start(i64 8, i8* %68) #1, !dbg !12286
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1968, metadata !2666), !dbg !12288
  %69 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12289, !tbaa !2683
  store %struct._object* %69, %struct._object** %_py_decref_tmp, align 8, !dbg !12288, !tbaa !2683
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12290, !tbaa !2683
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !12292
  %71 = load i64, i64* %ob_refcnt42, align 8, !dbg !12293, !tbaa !2722
  %dec = add i64 %71, -1, !dbg !12293
  store i64 %dec, i64* %ob_refcnt42, align 8, !dbg !12293, !tbaa !2722
  %cmp43 = icmp ne i64 %dec, 0, !dbg !12294
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !12295

if.then.44:                                       ; preds = %do.body.41
  br label %if.end.47, !dbg !12296

if.else.45:                                       ; preds = %do.body.41
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12298, !tbaa !2683
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !12300
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !12300, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !12301
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12301, !tbaa !2768
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12302, !tbaa !2683
  call void %74(%struct._object* %75), !dbg !12303
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.45, %if.then.44
  %76 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12304
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !12304
  br label %do.cond, !dbg !12306

do.cond:                                          ; preds = %if.end.47
  br label %do.end, !dbg !12307

do.end:                                           ; preds = %do.cond
  br label %if.end.48, !dbg !12309

if.end.48:                                        ; preds = %do.end, %do.body
  %77 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12311
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !12311
  br label %do.cond.49, !dbg !12314

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !12315

do.end.50:                                        ; preds = %do.cond.49
  %78 = load %struct._object*, %struct._object** %result, align 8, !dbg !12317, !tbaa !2683
  %79 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12318, !tbaa !2683
  %result51 = getelementptr inbounds %struct.productobject, %struct.productobject* %79, i32 0, i32 3, !dbg !12319
  store %struct._object* %78, %struct._object** %result51, align 8, !dbg !12320, !tbaa !11343
  %80 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12321, !tbaa !2722
  %inc52 = add i64 %80, 1, !dbg !12321
  store i64 %inc52, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12321, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12322
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !12322

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.53

cleanup.53:                                       ; preds = %NewDefault, %do.end.50, %if.then.19, %if.then
  %81 = bitcast i64* %i to i8*, !dbg !12323
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !12323
  %82 = bitcast i64* %n to i8*, !dbg !12323
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !12323
  %83 = bitcast %struct._object** %result to i8*, !dbg !12323
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !12323
  %84 = load %struct._object*, %struct._object** %retval, !dbg !12323
  ret %struct._object* %84, !dbg !12323
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_sizeof(%struct.productobject* %lz, i8* %unused) #0 {
entry:
  %lz.addr = alloca %struct.productobject*, align 8
  %unused.addr = alloca i8*, align 8
  %res = alloca i64, align 8
  store %struct.productobject* %lz, %struct.productobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.productobject** %lz.addr, metadata !1976, metadata !2666), !dbg !12324
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1977, metadata !2666), !dbg !12325
  %0 = bitcast i64* %res to i8*, !dbg !12326
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12326
  call void @llvm.dbg.declare(metadata i64* %res, metadata !1978, metadata !2666), !dbg !12327
  store i64 48, i64* %res, align 8, !dbg !12328, !tbaa !3427
  %1 = load %struct.productobject*, %struct.productobject** %lz.addr, align 8, !dbg !12329, !tbaa !2683
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %1, i32 0, i32 1, !dbg !12330
  %2 = load %struct._object*, %struct._object** %pools, align 8, !dbg !12330, !tbaa !11301
  %3 = bitcast %struct._object* %2 to %struct.PyVarObject*, !dbg !12331
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i32 0, i32 1, !dbg !12332
  %4 = load i64, i64* %ob_size, align 8, !dbg !12332, !tbaa !3426
  %mul = mul i64 %4, 8, !dbg !12333
  %5 = load i64, i64* %res, align 8, !dbg !12334, !tbaa !3427
  %add = add i64 %5, %mul, !dbg !12334
  store i64 %add, i64* %res, align 8, !dbg !12334, !tbaa !3427
  %6 = load i64, i64* %res, align 8, !dbg !12335, !tbaa !3427
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %6), !dbg !12336
  %7 = bitcast i64* %res to i8*, !dbg !12337
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !12337
  ret %struct._object* %call, !dbg !12338
}

; Function Attrs: nounwind uwtable
define internal void @repeat_dealloc(%struct.repeatobject* %ro) #0 {
entry:
  %ro.addr = alloca %struct.repeatobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.repeatobject* %ro, %struct.repeatobject** %ro.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro.addr, metadata !2022, metadata !2666), !dbg !12339
  %0 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12340, !tbaa !2683
  %1 = bitcast %struct.repeatobject* %0 to i8*, !dbg !12340
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !12341
  br label %do.body, !dbg !12342

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12343
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2023, metadata !2666), !dbg !12345
  %3 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12346, !tbaa !2683
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %3, i32 0, i32 1, !dbg !12347
  %4 = load %struct._object*, %struct._object** %element, align 8, !dbg !12347, !tbaa !12348
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12345, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12350, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !12351
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !12352

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !12353

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12355
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !12355
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2025, metadata !2666), !dbg !12357
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12358, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !12357, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12359, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !12361
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !12362, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !12362
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12362, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !12363
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !12364

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !12365

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12367, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !12369
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12369, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !12370
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12370, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12371, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !12372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12373
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !12373
  br label %do.cond, !dbg !12375

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12376

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !12378

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12380
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12380
  br label %do.end.6, !dbg !12383

do.end.6:                                         ; preds = %if.end.4
  %16 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12384, !tbaa !2683
  %17 = bitcast %struct.repeatobject* %16 to %struct._object*, !dbg !12385
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12386
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !12386, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 38, !dbg !12387
  %19 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !12387, !tbaa !2864
  %20 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12388, !tbaa !2683
  %21 = bitcast %struct.repeatobject* %20 to i8*, !dbg !12388
  call void %19(i8* %21), !dbg !12389
  ret void, !dbg !12390
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_repr(%struct.repeatobject* %ro) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ro.addr = alloca %struct.repeatobject*, align 8
  store %struct.repeatobject* %ro, %struct.repeatobject** %ro.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro.addr, metadata !2032, metadata !2666), !dbg !12391
  %0 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12392, !tbaa !2683
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %0, i32 0, i32 2, !dbg !12394
  %1 = load i64, i64* %cnt, align 8, !dbg !12394, !tbaa !12395
  %cmp = icmp eq i64 %1, -1, !dbg !12396
  br i1 %cmp, label %if.then, label %if.else, !dbg !12397

if.then:                                          ; preds = %entry
  %2 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12398, !tbaa !2683
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %2, i32 0, i32 1, !dbg !12399
  %3 = load %struct._object*, %struct._object** %element, align 8, !dbg !12399, !tbaa !12348
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i32 0, i32 0), %struct._object* %3), !dbg !12400
  store %struct._object* %call, %struct._object** %retval, !dbg !12401
  br label %return, !dbg !12401

if.else:                                          ; preds = %entry
  %4 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12402, !tbaa !2683
  %element1 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %4, i32 0, i32 1, !dbg !12403
  %5 = load %struct._object*, %struct._object** %element1, align 8, !dbg !12403, !tbaa !12348
  %6 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12404, !tbaa !2683
  %cnt2 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %6, i32 0, i32 2, !dbg !12405
  %7 = load i64, i64* %cnt2, align 8, !dbg !12405, !tbaa !12395
  %call3 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), %struct._object* %5, i64 %7), !dbg !12406
  store %struct._object* %call3, %struct._object** %retval, !dbg !12407
  br label %return, !dbg !12407

return:                                           ; preds = %if.else, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12408
  ret %struct._object* %8, !dbg !12408
}

; Function Attrs: nounwind uwtable
define internal i32 @repeat_traverse(%struct.repeatobject* %ro, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %ro.addr = alloca %struct.repeatobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.repeatobject* %ro, %struct.repeatobject** %ro.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro.addr, metadata !2037, metadata !2666), !dbg !12409
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !2038, metadata !2666), !dbg !12410
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2039, metadata !2666), !dbg !12411
  br label %do.body, !dbg !12412

do.body:                                          ; preds = %entry
  %0 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12413, !tbaa !2683
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %0, i32 0, i32 1, !dbg !12415
  %1 = load %struct._object*, %struct._object** %element, align 8, !dbg !12415, !tbaa !12348
  %tobool = icmp ne %struct._object* %1, null, !dbg !12416
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !12417

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !12418
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !12418
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !2040, metadata !2666), !dbg !12420
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !12421, !tbaa !2683
  %4 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12422, !tbaa !2683
  %element1 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %4, i32 0, i32 1, !dbg !12423
  %5 = load %struct._object*, %struct._object** %element1, align 8, !dbg !12423, !tbaa !12348
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !12424, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !12421
  store i32 %call, i32* %vret, align 4, !dbg !12420, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !12425, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !12425
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !12427

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !12428, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !12430
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12430

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !12431
  br label %cleanup, !dbg !12431

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !12433
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !12433
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !12436

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !12437

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval, !dbg !12440
  br label %return, !dbg !12440

return:                                           ; preds = %LeafBlock, %do.end
  %10 = load i32, i32* %retval, !dbg !12441
  ret i32 %10, !dbg !12441
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_next(%struct.repeatobject* %ro) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ro.addr = alloca %struct.repeatobject*, align 8
  store %struct.repeatobject* %ro, %struct.repeatobject** %ro.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro.addr, metadata !2046, metadata !2666), !dbg !12442
  %0 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12443, !tbaa !2683
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %0, i32 0, i32 2, !dbg !12445
  %1 = load i64, i64* %cnt, align 8, !dbg !12445, !tbaa !12395
  %cmp = icmp eq i64 %1, 0, !dbg !12446
  br i1 %cmp, label %if.then, label %if.end, !dbg !12447

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12448
  br label %return, !dbg !12448

if.end:                                           ; preds = %entry
  %2 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12449, !tbaa !2683
  %cnt1 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %2, i32 0, i32 2, !dbg !12451
  %3 = load i64, i64* %cnt1, align 8, !dbg !12451, !tbaa !12395
  %cmp2 = icmp sgt i64 %3, 0, !dbg !12452
  br i1 %cmp2, label %if.then.3, label %if.end.5, !dbg !12453

if.then.3:                                        ; preds = %if.end
  %4 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12454, !tbaa !2683
  %cnt4 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %4, i32 0, i32 2, !dbg !12455
  %5 = load i64, i64* %cnt4, align 8, !dbg !12456, !tbaa !12395
  %dec = add i64 %5, -1, !dbg !12456
  store i64 %dec, i64* %cnt4, align 8, !dbg !12456, !tbaa !12395
  br label %if.end.5, !dbg !12454

if.end.5:                                         ; preds = %if.then.3, %if.end
  %6 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12457, !tbaa !2683
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %6, i32 0, i32 1, !dbg !12458
  %7 = load %struct._object*, %struct._object** %element, align 8, !dbg !12458, !tbaa !12348
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !12459
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !12460, !tbaa !2722
  %inc = add i64 %8, 1, !dbg !12460
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12460, !tbaa !2722
  %9 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12461, !tbaa !2683
  %element6 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %9, i32 0, i32 1, !dbg !12462
  %10 = load %struct._object*, %struct._object** %element6, align 8, !dbg !12462, !tbaa !12348
  store %struct._object* %10, %struct._object** %retval, !dbg !12463
  br label %return, !dbg !12463

return:                                           ; preds = %if.end.5, %if.then
  %11 = load %struct._object*, %struct._object** %retval, !dbg !12464
  ret %struct._object* %11, !dbg !12464
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %ro = alloca %struct.repeatobject*, align 8
  %element = alloca %struct._object*, align 8
  %cnt = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2055, metadata !2666), !dbg !12465
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2056, metadata !2666), !dbg !12466
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2057, metadata !2666), !dbg !12467
  %0 = bitcast %struct.repeatobject** %ro to i8*, !dbg !12468
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12468
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro, metadata !2058, metadata !2666), !dbg !12469
  %1 = bitcast %struct._object** %element to i8*, !dbg !12470
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12470
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !2059, metadata !2666), !dbg !12471
  %2 = bitcast i64* %cnt to i8*, !dbg !12472
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12472
  call void @llvm.dbg.declare(metadata i64* %cnt, metadata !2060, metadata !2666), !dbg !12473
  store i64 -1, i64* %cnt, align 8, !dbg !12473, !tbaa !3427
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12474, !tbaa !2683
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !12476, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @repeat_new.kwargs, i32 0, i32 0), %struct._object** %element, i64* %cnt), !dbg !12477
  %tobool = icmp ne i32 %call, 0, !dbg !12477
  br i1 %tobool, label %if.end, label %if.then, !dbg !12478

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12479
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12479

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12480, !tbaa !2683
  %call1 = call i64 @PyTuple_Size(%struct._object* %5), !dbg !12482
  %cmp = icmp eq i64 %call1, 2, !dbg !12483
  br i1 %cmp, label %land.lhs.true, label %if.end.4, !dbg !12484

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %cnt, align 8, !dbg !12485, !tbaa !3427
  %cmp2 = icmp slt i64 %6, 0, !dbg !12487
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !12488

if.then.3:                                        ; preds = %land.lhs.true
  store i64 0, i64* %cnt, align 8, !dbg !12489, !tbaa !3427
  br label %if.end.4, !dbg !12490

if.end.4:                                         ; preds = %if.then.3, %land.lhs.true, %if.end
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !12491, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 36, !dbg !12492
  %8 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !12492, !tbaa !3097
  %9 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !12493, !tbaa !2683
  %call5 = call %struct._object* %8(%struct._typeobject* %9, i64 0), !dbg !12491
  %10 = bitcast %struct._object* %call5 to %struct.repeatobject*, !dbg !12494
  store %struct.repeatobject* %10, %struct.repeatobject** %ro, align 8, !dbg !12495, !tbaa !2683
  %11 = load %struct.repeatobject*, %struct.repeatobject** %ro, align 8, !dbg !12496, !tbaa !2683
  %cmp6 = icmp eq %struct.repeatobject* %11, null, !dbg !12498
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !12499

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !12500
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12500

if.end.8:                                         ; preds = %if.end.4
  %12 = load %struct._object*, %struct._object** %element, align 8, !dbg !12501, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !12502
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !12503, !tbaa !2722
  %inc = add i64 %13, 1, !dbg !12503
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12503, !tbaa !2722
  %14 = load %struct._object*, %struct._object** %element, align 8, !dbg !12504, !tbaa !2683
  %15 = load %struct.repeatobject*, %struct.repeatobject** %ro, align 8, !dbg !12505, !tbaa !2683
  %element9 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %15, i32 0, i32 1, !dbg !12506
  store %struct._object* %14, %struct._object** %element9, align 8, !dbg !12507, !tbaa !12348
  %16 = load i64, i64* %cnt, align 8, !dbg !12508, !tbaa !3427
  %17 = load %struct.repeatobject*, %struct.repeatobject** %ro, align 8, !dbg !12509, !tbaa !2683
  %cnt10 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %17, i32 0, i32 2, !dbg !12510
  store i64 %16, i64* %cnt10, align 8, !dbg !12511, !tbaa !12395
  %18 = load %struct.repeatobject*, %struct.repeatobject** %ro, align 8, !dbg !12512, !tbaa !2683
  %19 = bitcast %struct.repeatobject* %18 to %struct._object*, !dbg !12513
  store %struct._object* %19, %struct._object** %retval, !dbg !12514
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12514

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then
  %20 = bitcast i64* %cnt to i8*, !dbg !12515
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !12515
  %21 = bitcast %struct._object** %element to i8*, !dbg !12515
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !12515
  %22 = bitcast %struct.repeatobject** %ro to i8*, !dbg !12515
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !12515
  %23 = load %struct._object*, %struct._object** %retval, !dbg !12515
  ret %struct._object* %23, !dbg !12515
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_len(%struct.repeatobject* %ro) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ro.addr = alloca %struct.repeatobject*, align 8
  store %struct.repeatobject* %ro, %struct.repeatobject** %ro.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro.addr, metadata !2049, metadata !2666), !dbg !12516
  %0 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12517, !tbaa !2683
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %0, i32 0, i32 2, !dbg !12519
  %1 = load i64, i64* %cnt, align 8, !dbg !12519, !tbaa !12395
  %cmp = icmp eq i64 %1, -1, !dbg !12520
  br i1 %cmp, label %if.then, label %if.end, !dbg !12521

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12522, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.86, i32 0, i32 0)), !dbg !12524
  store %struct._object* null, %struct._object** %retval, !dbg !12525
  br label %return, !dbg !12525

if.end:                                           ; preds = %entry
  %3 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12526, !tbaa !2683
  %cnt1 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %3, i32 0, i32 2, !dbg !12527
  %4 = load i64, i64* %cnt1, align 8, !dbg !12527, !tbaa !12395
  %call = call %struct._object* @PyLong_FromSize_t(i64 %4), !dbg !12528
  store %struct._object* %call, %struct._object** %retval, !dbg !12529
  br label %return, !dbg !12529

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct._object*, %struct._object** %retval, !dbg !12530
  ret %struct._object* %5, !dbg !12530
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_reduce(%struct.repeatobject* %ro) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ro.addr = alloca %struct.repeatobject*, align 8
  store %struct.repeatobject* %ro, %struct.repeatobject** %ro.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.repeatobject** %ro.addr, metadata !2052, metadata !2666), !dbg !12531
  %0 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12532, !tbaa !2683
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %0, i32 0, i32 2, !dbg !12534
  %1 = load i64, i64* %cnt, align 8, !dbg !12534, !tbaa !12395
  %cmp = icmp sge i64 %1, 0, !dbg !12535
  br i1 %cmp, label %if.then, label %if.else, !dbg !12536

if.then:                                          ; preds = %entry
  %2 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12537, !tbaa !2683
  %3 = bitcast %struct.repeatobject* %2 to %struct._object*, !dbg !12538
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !12539
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12539, !tbaa !2675
  %5 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12540, !tbaa !2683
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %5, i32 0, i32 1, !dbg !12541
  %6 = load %struct._object*, %struct._object** %element, align 8, !dbg !12541, !tbaa !12348
  %7 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12542, !tbaa !2683
  %cnt1 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %7, i32 0, i32 2, !dbg !12543
  %8 = load i64, i64* %cnt1, align 8, !dbg !12543, !tbaa !12395
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._typeobject* %4, %struct._object* %6, i64 %8), !dbg !12544
  store %struct._object* %call, %struct._object** %retval, !dbg !12545
  br label %return, !dbg !12545

if.else:                                          ; preds = %entry
  %9 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12546, !tbaa !2683
  %10 = bitcast %struct.repeatobject* %9 to %struct._object*, !dbg !12547
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !12548
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !12548, !tbaa !2675
  %12 = load %struct.repeatobject*, %struct.repeatobject** %ro.addr, align 8, !dbg !12549, !tbaa !2683
  %element3 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %12, i32 0, i32 1, !dbg !12550
  %13 = load %struct._object*, %struct._object** %element3, align 8, !dbg !12550, !tbaa !12348
  %call4 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), %struct._typeobject* %11, %struct._object* %13), !dbg !12551
  store %struct._object* %call4, %struct._object** %retval, !dbg !12552
  br label %return, !dbg !12552

return:                                           ; preds = %if.else, %if.then
  %14 = load %struct._object*, %struct._object** %retval, !dbg !12553
  ret %struct._object* %14, !dbg !12553
}

declare %struct._object* @PyLong_FromSize_t(i64) #3

; Function Attrs: nounwind uwtable
define internal void @groupby_dealloc(%struct.groupbyobject* %gbo) #0 {
entry:
  %gbo.addr = alloca %struct.groupbyobject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_xdecref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_xdecref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  %_py_xdecref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  store %struct.groupbyobject* %gbo, %struct.groupbyobject** %gbo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %gbo.addr, metadata !2065, metadata !2666), !dbg !12554
  %0 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12555, !tbaa !2683
  %1 = bitcast %struct.groupbyobject* %0 to i8*, !dbg !12555
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !12556
  br label %do.body, !dbg !12557

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12558
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12558
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2066, metadata !2666), !dbg !12560
  %3 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12561, !tbaa !2683
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %3, i32 0, i32 1, !dbg !12562
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !12562, !tbaa !12563
  store %struct._object* %4, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12560, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12565, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !12566
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !12567

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !12568

do.body.1:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12570
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !12570
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2068, metadata !2666), !dbg !12572
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12573, !tbaa !2683
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !12572, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12574, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !12576
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !12577, !tbaa !2722
  %dec = add i64 %9, -1, !dbg !12577
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12577, !tbaa !2722
  %cmp2 = icmp ne i64 %dec, 0, !dbg !12578
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !12579

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !12580

if.else:                                          ; preds = %do.body.1
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12582, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !12584
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12584, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !12585
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12585, !tbaa !2768
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12586, !tbaa !2683
  call void %12(%struct._object* %13), !dbg !12587
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12588
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !12588
  br label %do.cond, !dbg !12590

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12591

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !12593

if.end.4:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12595
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12595
  br label %do.end.6, !dbg !12598

do.end.6:                                         ; preds = %if.end.4
  br label %do.body.7, !dbg !12599

do.body.7:                                        ; preds = %do.end.6
  %16 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !12600
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !12600
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !2071, metadata !2666), !dbg !12602
  %17 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12603, !tbaa !2683
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %17, i32 0, i32 2, !dbg !12604
  %18 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !12604, !tbaa !12605
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !12602, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !12606, !tbaa !2683
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !12607
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !12608

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !12609

do.body.11:                                       ; preds = %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !12611
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !12611
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !2073, metadata !2666), !dbg !12613
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !12614, !tbaa !2683
  store %struct._object* %21, %struct._object** %_py_decref_tmp12, align 8, !dbg !12613, !tbaa !2683
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !12615, !tbaa !2683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !12617
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !12618, !tbaa !2722
  %dec14 = add i64 %23, -1, !dbg !12618
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !12618, !tbaa !2722
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !12619
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !12620

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !12621

if.else.17:                                       ; preds = %do.body.11
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !12623, !tbaa !2683
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !12625
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !12625, !tbaa !2675
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !12626
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !12626, !tbaa !2768
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !12627, !tbaa !2683
  call void %26(%struct._object* %27), !dbg !12628
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %28 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !12629
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !12629
  br label %do.cond.21, !dbg !12631

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !12632

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !12634

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %29 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !12636
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !12636
  br label %do.end.25, !dbg !12637

do.end.25:                                        ; preds = %if.end.23
  br label %do.body.26, !dbg !12638

do.body.26:                                       ; preds = %do.end.25
  %30 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !12639
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !12639
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp27, metadata !2076, metadata !2666), !dbg !12641
  %31 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12642, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %31, i32 0, i32 3, !dbg !12643
  %32 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !12643, !tbaa !12644
  store %struct._object* %32, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !12641, !tbaa !2683
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !12645, !tbaa !2683
  %cmp28 = icmp ne %struct._object* %33, null, !dbg !12646
  br i1 %cmp28, label %if.then.29, label %if.end.42, !dbg !12647

if.then.29:                                       ; preds = %do.body.26
  br label %do.body.30, !dbg !12648

do.body.30:                                       ; preds = %if.then.29
  %34 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !12650
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !12650
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !2078, metadata !2666), !dbg !12652
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !12653, !tbaa !2683
  store %struct._object* %35, %struct._object** %_py_decref_tmp31, align 8, !dbg !12652, !tbaa !2683
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !12654, !tbaa !2683
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !12656
  %37 = load i64, i64* %ob_refcnt32, align 8, !dbg !12657, !tbaa !2722
  %dec33 = add i64 %37, -1, !dbg !12657
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !12657, !tbaa !2722
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !12658
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !12659

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !12660

if.else.36:                                       ; preds = %do.body.30
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !12662, !tbaa !2683
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !12664
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !12664, !tbaa !2675
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !12665
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !12665, !tbaa !2768
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !12666, !tbaa !2683
  call void %40(%struct._object* %41), !dbg !12667
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %42 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !12668
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !12668
  br label %do.cond.40, !dbg !12670

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !12671

do.end.41:                                        ; preds = %do.cond.40
  br label %if.end.42, !dbg !12673

if.end.42:                                        ; preds = %do.end.41, %do.body.26
  %43 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !12675
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !12675
  br label %do.end.44, !dbg !12676

do.end.44:                                        ; preds = %if.end.42
  br label %do.body.45, !dbg !12677

do.body.45:                                       ; preds = %do.end.44
  %44 = bitcast %struct._object** %_py_xdecref_tmp46 to i8*, !dbg !12678
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !12678
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp46, metadata !2081, metadata !2666), !dbg !12680
  %45 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12681, !tbaa !2683
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %45, i32 0, i32 4, !dbg !12682
  %46 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !12682, !tbaa !12683
  store %struct._object* %46, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !12680, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !12684, !tbaa !2683
  %cmp47 = icmp ne %struct._object* %47, null, !dbg !12685
  br i1 %cmp47, label %if.then.48, label %if.end.61, !dbg !12686

if.then.48:                                       ; preds = %do.body.45
  br label %do.body.49, !dbg !12687

do.body.49:                                       ; preds = %if.then.48
  %48 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !12689
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !12689
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp50, metadata !2083, metadata !2666), !dbg !12691
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !12692, !tbaa !2683
  store %struct._object* %49, %struct._object** %_py_decref_tmp50, align 8, !dbg !12691, !tbaa !2683
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !12693, !tbaa !2683
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !12695
  %51 = load i64, i64* %ob_refcnt51, align 8, !dbg !12696, !tbaa !2722
  %dec52 = add i64 %51, -1, !dbg !12696
  store i64 %dec52, i64* %ob_refcnt51, align 8, !dbg !12696, !tbaa !2722
  %cmp53 = icmp ne i64 %dec52, 0, !dbg !12697
  br i1 %cmp53, label %if.then.54, label %if.else.55, !dbg !12698

if.then.54:                                       ; preds = %do.body.49
  br label %if.end.58, !dbg !12699

if.else.55:                                       ; preds = %do.body.49
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !12701, !tbaa !2683
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !12703
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !12703, !tbaa !2675
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !12704
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !12704, !tbaa !2768
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !12705, !tbaa !2683
  call void %54(%struct._object* %55), !dbg !12706
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  %56 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !12707
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !12707
  br label %do.cond.59, !dbg !12709

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !12710

do.end.60:                                        ; preds = %do.cond.59
  br label %if.end.61, !dbg !12712

if.end.61:                                        ; preds = %do.end.60, %do.body.45
  %57 = bitcast %struct._object** %_py_xdecref_tmp46 to i8*, !dbg !12714
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !12714
  br label %do.end.63, !dbg !12715

do.end.63:                                        ; preds = %if.end.61
  br label %do.body.64, !dbg !12716

do.body.64:                                       ; preds = %do.end.63
  %58 = bitcast %struct._object** %_py_xdecref_tmp65 to i8*, !dbg !12717
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !12717
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp65, metadata !2086, metadata !2666), !dbg !12719
  %59 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12720, !tbaa !2683
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %59, i32 0, i32 5, !dbg !12721
  %60 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !12721, !tbaa !12722
  store %struct._object* %60, %struct._object** %_py_xdecref_tmp65, align 8, !dbg !12719, !tbaa !2683
  %61 = load %struct._object*, %struct._object** %_py_xdecref_tmp65, align 8, !dbg !12723, !tbaa !2683
  %cmp66 = icmp ne %struct._object* %61, null, !dbg !12724
  br i1 %cmp66, label %if.then.67, label %if.end.80, !dbg !12725

if.then.67:                                       ; preds = %do.body.64
  br label %do.body.68, !dbg !12726

do.body.68:                                       ; preds = %if.then.67
  %62 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !12728
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !12728
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp69, metadata !2088, metadata !2666), !dbg !12730
  %63 = load %struct._object*, %struct._object** %_py_xdecref_tmp65, align 8, !dbg !12731, !tbaa !2683
  store %struct._object* %63, %struct._object** %_py_decref_tmp69, align 8, !dbg !12730, !tbaa !2683
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !12732, !tbaa !2683
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !12734
  %65 = load i64, i64* %ob_refcnt70, align 8, !dbg !12735, !tbaa !2722
  %dec71 = add i64 %65, -1, !dbg !12735
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !12735, !tbaa !2722
  %cmp72 = icmp ne i64 %dec71, 0, !dbg !12736
  br i1 %cmp72, label %if.then.73, label %if.else.74, !dbg !12737

if.then.73:                                       ; preds = %do.body.68
  br label %if.end.77, !dbg !12738

if.else.74:                                       ; preds = %do.body.68
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !12740, !tbaa !2683
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !12742
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !12742, !tbaa !2675
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4, !dbg !12743
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !12743, !tbaa !2768
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !12744, !tbaa !2683
  call void %68(%struct._object* %69), !dbg !12745
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %70 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !12746
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !12746
  br label %do.cond.78, !dbg !12748

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !12749

do.end.79:                                        ; preds = %do.cond.78
  br label %if.end.80, !dbg !12751

if.end.80:                                        ; preds = %do.end.79, %do.body.64
  %71 = bitcast %struct._object** %_py_xdecref_tmp65 to i8*, !dbg !12753
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !12753
  br label %do.end.82, !dbg !12754

do.end.82:                                        ; preds = %if.end.80
  %72 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12755, !tbaa !2683
  %73 = bitcast %struct.groupbyobject* %72 to %struct._object*, !dbg !12756
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !12757
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !12757, !tbaa !2675
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 38, !dbg !12758
  %75 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !12758, !tbaa !2864
  %76 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12759, !tbaa !2683
  %77 = bitcast %struct.groupbyobject* %76 to i8*, !dbg !12759
  call void %75(i8* %77), !dbg !12760
  ret void, !dbg !12761
}

; Function Attrs: nounwind uwtable
define internal i32 @groupby_traverse(%struct.groupbyobject* %gbo, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %gbo.addr = alloca %struct.groupbyobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  store %struct.groupbyobject* %gbo, %struct.groupbyobject** %gbo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %gbo.addr, metadata !2095, metadata !2666), !dbg !12762
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !2096, metadata !2666), !dbg !12763
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2097, metadata !2666), !dbg !12764
  br label %do.body, !dbg !12765

do.body:                                          ; preds = %entry
  %0 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12766, !tbaa !2683
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %0, i32 0, i32 1, !dbg !12768
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !12768, !tbaa !12563
  %tobool = icmp ne %struct._object* %1, null, !dbg !12769
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !12770

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !12771
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !12771
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !2098, metadata !2666), !dbg !12773
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !12774, !tbaa !2683
  %4 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12775, !tbaa !2683
  %it1 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %4, i32 0, i32 1, !dbg !12776
  %5 = load %struct._object*, %struct._object** %it1, align 8, !dbg !12776, !tbaa !12563
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !12777, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !12774
  store i32 %call, i32* %vret, align 4, !dbg !12773, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !12778, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !12778
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !12780

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !12781, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !12783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12783

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !12784
  br label %cleanup, !dbg !12784

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !12786
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !12786
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !12789

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !12790

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !12793

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12794, !tbaa !2683
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %10, i32 0, i32 2, !dbg !12796
  %11 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !12796, !tbaa !12605
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !12797
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !12798

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !12799
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !12799
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !2102, metadata !2666), !dbg !12801
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !12802, !tbaa !2683
  %14 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12803, !tbaa !2683
  %keyfunc9 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %14, i32 0, i32 2, !dbg !12804
  %15 = load %struct._object*, %struct._object** %keyfunc9, align 8, !dbg !12804, !tbaa !12605
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !12805, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !12802
  store i32 %call10, i32* %vret8, align 4, !dbg !12801, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !12806, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !12806
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !12808

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !12809, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !12811
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !12811

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !12812
  br label %cleanup.14, !dbg !12812

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !12814
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !12814
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !12817

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !12818

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !12821

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12822, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %20, i32 0, i32 3, !dbg !12824
  %21 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !12824, !tbaa !12644
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !12825
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !12826

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !12827
  call void @llvm.lifetime.start(i64 4, i8* %22) #1, !dbg !12827
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !2106, metadata !2666), !dbg !12829
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !12830, !tbaa !2683
  %24 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12831, !tbaa !2683
  %tgtkey23 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %24, i32 0, i32 3, !dbg !12832
  %25 = load %struct._object*, %struct._object** %tgtkey23, align 8, !dbg !12832, !tbaa !12644
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !12833, !tbaa !2683
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !12830
  store i32 %call24, i32* %vret22, align 4, !dbg !12829, !tbaa !2691
  %27 = load i32, i32* %vret22, align 4, !dbg !12834, !tbaa !2691
  %tobool25 = icmp ne i32 %27, 0, !dbg !12834
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !12836

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !12837, !tbaa !2691
  store i32 %28, i32* %retval, !dbg !12839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !12839

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !12840
  br label %cleanup.28, !dbg !12840

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !12842
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !12842
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !12845

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !12846

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !12849

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12850, !tbaa !2683
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %30, i32 0, i32 4, !dbg !12852
  %31 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !12852, !tbaa !12683
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !12853
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !12854

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !12855
  call void @llvm.lifetime.start(i64 4, i8* %32) #1, !dbg !12855
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !2110, metadata !2666), !dbg !12857
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !12858, !tbaa !2683
  %34 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12859, !tbaa !2683
  %currkey37 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %34, i32 0, i32 4, !dbg !12860
  %35 = load %struct._object*, %struct._object** %currkey37, align 8, !dbg !12860, !tbaa !12683
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !12861, !tbaa !2683
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !12858
  store i32 %call38, i32* %vret36, align 4, !dbg !12857, !tbaa !2691
  %37 = load i32, i32* %vret36, align 4, !dbg !12862, !tbaa !2691
  %tobool39 = icmp ne i32 %37, 0, !dbg !12862
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !12864

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !12865, !tbaa !2691
  store i32 %38, i32* %retval, !dbg !12867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !12867

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !12868
  br label %cleanup.42, !dbg !12868

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !12870
  call void @llvm.lifetime.end(i64 4, i8* %39) #1, !dbg !12870
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %cleanup.42
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.43, 1
  br i1 %SwitchLeaf9, label %return, label %NewDefault.7

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %cleanup.cont.44

cleanup.cont.44:                                  ; preds = %NewDefault.7
  br label %if.end.45, !dbg !12873

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !12874

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !12877

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12878, !tbaa !2683
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %40, i32 0, i32 5, !dbg !12880
  %41 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !12880, !tbaa !12722
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !12881
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !12882

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !12883
  call void @llvm.lifetime.start(i64 4, i8* %42) #1, !dbg !12883
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !2114, metadata !2666), !dbg !12885
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !12886, !tbaa !2683
  %44 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12887, !tbaa !2683
  %currvalue51 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %44, i32 0, i32 5, !dbg !12888
  %45 = load %struct._object*, %struct._object** %currvalue51, align 8, !dbg !12888, !tbaa !12722
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !12889, !tbaa !2683
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !12886
  store i32 %call52, i32* %vret50, align 4, !dbg !12885, !tbaa !2691
  %47 = load i32, i32* %vret50, align 4, !dbg !12890, !tbaa !2691
  %tobool53 = icmp ne i32 %47, 0, !dbg !12890
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !12892

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !12893, !tbaa !2691
  store i32 %48, i32* %retval, !dbg !12895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !12895

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !12896
  br label %cleanup.56, !dbg !12896

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !12898
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !12898
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.11

LeafBlock.11:                                     ; preds = %cleanup.56
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.57, 1
  br i1 %SwitchLeaf12, label %return, label %NewDefault.10

NewDefault.10:                                    ; preds = %LeafBlock.11
  br label %cleanup.cont.58

cleanup.cont.58:                                  ; preds = %NewDefault.10
  br label %if.end.59, !dbg !12901

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !12902

do.end.60:                                        ; preds = %if.end.59
  store i32 0, i32* %retval, !dbg !12905
  br label %return, !dbg !12905

return:                                           ; preds = %LeafBlock.11, %LeafBlock.8, %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.60
  %50 = load i32, i32* %retval, !dbg !12906
  ret i32 %50, !dbg !12906
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_next(%struct.groupbyobject* %gbo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %gbo.addr = alloca %struct.groupbyobject*, align 8
  %newvalue = alloca %struct._object*, align 8
  %newkey = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %grouper = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %rcmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp59 = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  %_py_xdecref_tmp86 = alloca %struct._object*, align 8
  %_py_decref_tmp91 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  store %struct.groupbyobject* %gbo, %struct.groupbyobject** %gbo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %gbo.addr, metadata !2122, metadata !2666), !dbg !12907
  %0 = bitcast %struct._object** %newvalue to i8*, !dbg !12908
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12908
  call void @llvm.dbg.declare(metadata %struct._object** %newvalue, metadata !2123, metadata !2666), !dbg !12909
  %1 = bitcast %struct._object** %newkey to i8*, !dbg !12908
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12908
  call void @llvm.dbg.declare(metadata %struct._object** %newkey, metadata !2124, metadata !2666), !dbg !12910
  %2 = bitcast %struct._object** %r to i8*, !dbg !12908
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12908
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !2125, metadata !2666), !dbg !12911
  %3 = bitcast %struct._object** %grouper to i8*, !dbg !12908
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12908
  call void @llvm.dbg.declare(metadata %struct._object** %grouper, metadata !2126, metadata !2666), !dbg !12912
  %4 = bitcast %struct._object** %tmp to i8*, !dbg !12908
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12908
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !2127, metadata !2666), !dbg !12913
  br label %for.cond, !dbg !12914

for.cond:                                         ; preds = %do.end.77, %entry
  %5 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12915, !tbaa !2683
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %5, i32 0, i32 4, !dbg !12916
  %6 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !12916, !tbaa !12683
  %cmp = icmp eq %struct._object* %6, null, !dbg !12917
  br i1 %cmp, label %if.then, label %if.else, !dbg !12918

if.then:                                          ; preds = %for.cond
  br label %if.end.14, !dbg !12919

if.else:                                          ; preds = %for.cond
  %7 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12921, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %7, i32 0, i32 3, !dbg !12922
  %8 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !12922, !tbaa !12644
  %cmp1 = icmp eq %struct._object* %8, null, !dbg !12923
  br i1 %cmp1, label %if.then.2, label %if.else.3, !dbg !12924

if.then.2:                                        ; preds = %if.else
  br label %for.end, !dbg !12925

if.else.3:                                        ; preds = %if.else
  %9 = bitcast i32* %rcmp to i8*, !dbg !12926
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !12926
  call void @llvm.dbg.declare(metadata i32* %rcmp, metadata !2128, metadata !2666), !dbg !12927
  %10 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12928, !tbaa !2683
  %tgtkey5 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %10, i32 0, i32 3, !dbg !12929
  %11 = load %struct._object*, %struct._object** %tgtkey5, align 8, !dbg !12929, !tbaa !12644
  %12 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12930, !tbaa !2683
  %currkey6 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %12, i32 0, i32 4, !dbg !12931
  %13 = load %struct._object*, %struct._object** %currkey6, align 8, !dbg !12931, !tbaa !12683
  %call = call i32 @PyObject_RichCompareBool(%struct._object* %11, %struct._object* %13, i32 2), !dbg !12932
  store i32 %call, i32* %rcmp, align 4, !dbg !12933, !tbaa !2691
  %14 = load i32, i32* %rcmp, align 4, !dbg !12934, !tbaa !2691
  %cmp7 = icmp eq i32 %14, -1, !dbg !12936
  br i1 %cmp7, label %if.then.8, label %if.else.9, !dbg !12937

if.then.8:                                        ; preds = %if.else.3
  store %struct._object* null, %struct._object** %retval, !dbg !12938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12938

if.else.9:                                        ; preds = %if.else.3
  %15 = load i32, i32* %rcmp, align 4, !dbg !12939, !tbaa !2691
  %cmp10 = icmp eq i32 %15, 0, !dbg !12941
  br i1 %cmp10, label %if.then.11, label %if.end, !dbg !12942

if.then.11:                                       ; preds = %if.else.9
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12943

if.end:                                           ; preds = %if.else.9
  br label %if.end.12

if.end.12:                                        ; preds = %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !12944
  br label %cleanup, !dbg !12944

cleanup:                                          ; preds = %if.end.12, %if.then.11, %if.then.8
  %16 = bitcast i32* %rcmp to i8*, !dbg !12945
  call void @llvm.lifetime.end(i64 4, i8* %16) #1, !dbg !12945
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %for.end, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.13

if.end.13:                                        ; preds = %cleanup.cont
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %if.then
  %17 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12947, !tbaa !2683
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %17, i32 0, i32 1, !dbg !12948
  %18 = load %struct._object*, %struct._object** %it, align 8, !dbg !12948, !tbaa !12563
  %call15 = call %struct._object* @PyIter_Next(%struct._object* %18), !dbg !12949
  store %struct._object* %call15, %struct._object** %newvalue, align 8, !dbg !12950, !tbaa !2683
  %19 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !12951, !tbaa !2683
  %cmp16 = icmp eq %struct._object* %19, null, !dbg !12953
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !12954

if.then.17:                                       ; preds = %if.end.14
  store %struct._object* null, %struct._object** %retval, !dbg !12955
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.125, !dbg !12955

if.end.18:                                        ; preds = %if.end.14
  %20 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12956, !tbaa !2683
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %20, i32 0, i32 2, !dbg !12957
  %21 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !12957, !tbaa !12605
  %cmp19 = icmp eq %struct._object* %21, @_Py_NoneStruct, !dbg !12958
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !12959

if.then.20:                                       ; preds = %if.end.18
  %22 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !12960, !tbaa !2683
  store %struct._object* %22, %struct._object** %newkey, align 8, !dbg !12962, !tbaa !2683
  %23 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !12963, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !12964
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !12965, !tbaa !2722
  %inc = add i64 %24, 1, !dbg !12965
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12965, !tbaa !2722
  br label %if.end.33, !dbg !12966

if.else.21:                                       ; preds = %if.end.18
  %25 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !12967, !tbaa !2683
  %keyfunc22 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %25, i32 0, i32 2, !dbg !12968
  %26 = load %struct._object*, %struct._object** %keyfunc22, align 8, !dbg !12968, !tbaa !12605
  %27 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !12969, !tbaa !2683
  %call23 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %26, %struct._object* %27, i8* null), !dbg !12970
  store %struct._object* %call23, %struct._object** %newkey, align 8, !dbg !12971, !tbaa !2683
  %28 = load %struct._object*, %struct._object** %newkey, align 8, !dbg !12972, !tbaa !2683
  %cmp24 = icmp eq %struct._object* %28, null, !dbg !12973
  br i1 %cmp24, label %if.then.25, label %if.end.32, !dbg !12974

if.then.25:                                       ; preds = %if.else.21
  br label %do.body, !dbg !12975

do.body:                                          ; preds = %if.then.25
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12976
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !12976
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2135, metadata !2666), !dbg !12978
  %30 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !12979, !tbaa !2683
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !12978, !tbaa !2683
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12980, !tbaa !2683
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !12982
  %32 = load i64, i64* %ob_refcnt27, align 8, !dbg !12983, !tbaa !2722
  %dec = add i64 %32, -1, !dbg !12983
  store i64 %dec, i64* %ob_refcnt27, align 8, !dbg !12983, !tbaa !2722
  %cmp28 = icmp ne i64 %dec, 0, !dbg !12984
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !12985

if.then.29:                                       ; preds = %do.body
  br label %if.end.31, !dbg !12986

if.else.30:                                       ; preds = %do.body
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12988, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !12990
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12990, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !12991
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12991, !tbaa !2768
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12992, !tbaa !2683
  call void %35(%struct._object* %36), !dbg !12993
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.30, %if.then.29
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12994
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !12994
  br label %do.cond, !dbg !12996

do.cond:                                          ; preds = %if.end.31
  br label %do.end, !dbg !12997

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12999
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.125, !dbg !12999

if.end.32:                                        ; preds = %if.else.21
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then.20
  %38 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13000, !tbaa !2683
  %currkey34 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %38, i32 0, i32 4, !dbg !13001
  %39 = load %struct._object*, %struct._object** %currkey34, align 8, !dbg !13001, !tbaa !12683
  store %struct._object* %39, %struct._object** %tmp, align 8, !dbg !13002, !tbaa !2683
  %40 = load %struct._object*, %struct._object** %newkey, align 8, !dbg !13003, !tbaa !2683
  %41 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13004, !tbaa !2683
  %currkey35 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %41, i32 0, i32 4, !dbg !13005
  store %struct._object* %40, %struct._object** %currkey35, align 8, !dbg !13006, !tbaa !12683
  br label %do.body.36, !dbg !13007

do.body.36:                                       ; preds = %if.end.33
  %42 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13008
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !13008
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2141, metadata !2666), !dbg !13010
  %43 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !13011, !tbaa !2683
  store %struct._object* %43, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13010, !tbaa !2683
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13012, !tbaa !2683
  %cmp38 = icmp ne %struct._object* %44, null, !dbg !13013
  br i1 %cmp38, label %if.then.39, label %if.end.53, !dbg !13014

if.then.39:                                       ; preds = %do.body.36
  br label %do.body.40, !dbg !13015

do.body.40:                                       ; preds = %if.then.39
  %45 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !13017
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !13017
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !2143, metadata !2666), !dbg !13019
  %46 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13020, !tbaa !2683
  store %struct._object* %46, %struct._object** %_py_decref_tmp42, align 8, !dbg !13019, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !13021, !tbaa !2683
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !13023
  %48 = load i64, i64* %ob_refcnt43, align 8, !dbg !13024, !tbaa !2722
  %dec44 = add i64 %48, -1, !dbg !13024
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !13024, !tbaa !2722
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !13025
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !13026

if.then.46:                                       ; preds = %do.body.40
  br label %if.end.50, !dbg !13027

if.else.47:                                       ; preds = %do.body.40
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !13029, !tbaa !2683
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !13031
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !13031, !tbaa !2675
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4, !dbg !13032
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !13032, !tbaa !2768
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !13033, !tbaa !2683
  call void %51(%struct._object* %52), !dbg !13034
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %53 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !13035
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !13035
  br label %do.cond.51, !dbg !13037

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !13038

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53, !dbg !13040

if.end.53:                                        ; preds = %do.end.52, %do.body.36
  %54 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13042
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !13042
  br label %do.cond.54, !dbg !13045

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !13046

do.end.55:                                        ; preds = %do.cond.54
  %55 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13048, !tbaa !2683
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %55, i32 0, i32 5, !dbg !13049
  %56 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !13049, !tbaa !12722
  store %struct._object* %56, %struct._object** %tmp, align 8, !dbg !13050, !tbaa !2683
  %57 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13051, !tbaa !2683
  %58 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13052, !tbaa !2683
  %currvalue56 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %58, i32 0, i32 5, !dbg !13053
  store %struct._object* %57, %struct._object** %currvalue56, align 8, !dbg !13054, !tbaa !12722
  br label %do.body.57, !dbg !13055

do.body.57:                                       ; preds = %do.end.55
  %59 = bitcast %struct._object** %_py_xdecref_tmp59 to i8*, !dbg !13056
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !13056
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp59, metadata !2146, metadata !2666), !dbg !13058
  %60 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !13059, !tbaa !2683
  store %struct._object* %60, %struct._object** %_py_xdecref_tmp59, align 8, !dbg !13058, !tbaa !2683
  %61 = load %struct._object*, %struct._object** %_py_xdecref_tmp59, align 8, !dbg !13060, !tbaa !2683
  %cmp60 = icmp ne %struct._object* %61, null, !dbg !13061
  br i1 %cmp60, label %if.then.61, label %if.end.75, !dbg !13062

if.then.61:                                       ; preds = %do.body.57
  br label %do.body.62, !dbg !13063

do.body.62:                                       ; preds = %if.then.61
  %62 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !13065
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !13065
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !2148, metadata !2666), !dbg !13067
  %63 = load %struct._object*, %struct._object** %_py_xdecref_tmp59, align 8, !dbg !13068, !tbaa !2683
  store %struct._object* %63, %struct._object** %_py_decref_tmp64, align 8, !dbg !13067, !tbaa !2683
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !13069, !tbaa !2683
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !13071
  %65 = load i64, i64* %ob_refcnt65, align 8, !dbg !13072, !tbaa !2722
  %dec66 = add i64 %65, -1, !dbg !13072
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !13072, !tbaa !2722
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !13073
  br i1 %cmp67, label %if.then.68, label %if.else.69, !dbg !13074

if.then.68:                                       ; preds = %do.body.62
  br label %if.end.72, !dbg !13075

if.else.69:                                       ; preds = %do.body.62
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !13077, !tbaa !2683
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !13079
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !13079, !tbaa !2675
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4, !dbg !13080
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !13080, !tbaa !2768
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !13081, !tbaa !2683
  call void %68(%struct._object* %69), !dbg !13082
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %70 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !13083
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !13083
  br label %do.cond.73, !dbg !13085

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !13086

do.end.74:                                        ; preds = %do.cond.73
  br label %if.end.75, !dbg !13088

if.end.75:                                        ; preds = %do.end.74, %do.body.57
  %71 = bitcast %struct._object** %_py_xdecref_tmp59 to i8*, !dbg !13090
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !13090
  br label %do.cond.76, !dbg !13091

do.cond.76:                                       ; preds = %if.end.75
  br label %do.end.77, !dbg !13092

do.end.77:                                        ; preds = %do.cond.76
  br label %for.cond, !dbg !13094

for.end:                                          ; preds = %LeafBlock.1, %if.then.2
  %72 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13095, !tbaa !2683
  %currkey78 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %72, i32 0, i32 4, !dbg !13096
  %73 = load %struct._object*, %struct._object** %currkey78, align 8, !dbg !13096, !tbaa !12683
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !13097
  %74 = load i64, i64* %ob_refcnt79, align 8, !dbg !13098, !tbaa !2722
  %inc80 = add i64 %74, 1, !dbg !13098
  store i64 %inc80, i64* %ob_refcnt79, align 8, !dbg !13098, !tbaa !2722
  %75 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13099, !tbaa !2683
  %tgtkey81 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %75, i32 0, i32 3, !dbg !13100
  %76 = load %struct._object*, %struct._object** %tgtkey81, align 8, !dbg !13100, !tbaa !12644
  store %struct._object* %76, %struct._object** %tmp, align 8, !dbg !13101, !tbaa !2683
  %77 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13102, !tbaa !2683
  %currkey82 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %77, i32 0, i32 4, !dbg !13103
  %78 = load %struct._object*, %struct._object** %currkey82, align 8, !dbg !13103, !tbaa !12683
  %79 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13104, !tbaa !2683
  %tgtkey83 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %79, i32 0, i32 3, !dbg !13105
  store %struct._object* %78, %struct._object** %tgtkey83, align 8, !dbg !13106, !tbaa !12644
  br label %do.body.84, !dbg !13107

do.body.84:                                       ; preds = %for.end
  %80 = bitcast %struct._object** %_py_xdecref_tmp86 to i8*, !dbg !13108
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !13108
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp86, metadata !2151, metadata !2666), !dbg !13110
  %81 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !13111, !tbaa !2683
  store %struct._object* %81, %struct._object** %_py_xdecref_tmp86, align 8, !dbg !13110, !tbaa !2683
  %82 = load %struct._object*, %struct._object** %_py_xdecref_tmp86, align 8, !dbg !13112, !tbaa !2683
  %cmp87 = icmp ne %struct._object* %82, null, !dbg !13113
  br i1 %cmp87, label %if.then.88, label %if.end.102, !dbg !13114

if.then.88:                                       ; preds = %do.body.84
  br label %do.body.89, !dbg !13115

do.body.89:                                       ; preds = %if.then.88
  %83 = bitcast %struct._object** %_py_decref_tmp91 to i8*, !dbg !13117
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !13117
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp91, metadata !2153, metadata !2666), !dbg !13119
  %84 = load %struct._object*, %struct._object** %_py_xdecref_tmp86, align 8, !dbg !13120, !tbaa !2683
  store %struct._object* %84, %struct._object** %_py_decref_tmp91, align 8, !dbg !13119, !tbaa !2683
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp91, align 8, !dbg !13121, !tbaa !2683
  %ob_refcnt92 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !13123
  %86 = load i64, i64* %ob_refcnt92, align 8, !dbg !13124, !tbaa !2722
  %dec93 = add i64 %86, -1, !dbg !13124
  store i64 %dec93, i64* %ob_refcnt92, align 8, !dbg !13124, !tbaa !2722
  %cmp94 = icmp ne i64 %dec93, 0, !dbg !13125
  br i1 %cmp94, label %if.then.95, label %if.else.96, !dbg !13126

if.then.95:                                       ; preds = %do.body.89
  br label %if.end.99, !dbg !13127

if.else.96:                                       ; preds = %do.body.89
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp91, align 8, !dbg !13129, !tbaa !2683
  %ob_type97 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !13131
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type97, align 8, !dbg !13131, !tbaa !2675
  %tp_dealloc98 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !13132
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc98, align 8, !dbg !13132, !tbaa !2768
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp91, align 8, !dbg !13133, !tbaa !2683
  call void %89(%struct._object* %90), !dbg !13134
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.96, %if.then.95
  %91 = bitcast %struct._object** %_py_decref_tmp91 to i8*, !dbg !13135
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !13135
  br label %do.cond.100, !dbg !13137

do.cond.100:                                      ; preds = %if.end.99
  br label %do.end.101, !dbg !13138

do.end.101:                                       ; preds = %do.cond.100
  br label %if.end.102, !dbg !13140

if.end.102:                                       ; preds = %do.end.101, %do.body.84
  %92 = bitcast %struct._object** %_py_xdecref_tmp86 to i8*, !dbg !13142
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !13142
  br label %do.cond.103, !dbg !13145

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !13146

do.end.104:                                       ; preds = %do.cond.103
  %93 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13148, !tbaa !2683
  %94 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13149, !tbaa !2683
  %tgtkey105 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %94, i32 0, i32 3, !dbg !13150
  %95 = load %struct._object*, %struct._object** %tgtkey105, align 8, !dbg !13150, !tbaa !12644
  %call106 = call %struct._object* @_grouper_create(%struct.groupbyobject* %93, %struct._object* %95), !dbg !13151
  store %struct._object* %call106, %struct._object** %grouper, align 8, !dbg !13152, !tbaa !2683
  %96 = load %struct._object*, %struct._object** %grouper, align 8, !dbg !13153, !tbaa !2683
  %cmp107 = icmp eq %struct._object* %96, null, !dbg !13155
  br i1 %cmp107, label %if.then.108, label %if.end.109, !dbg !13156

if.then.108:                                      ; preds = %do.end.104
  store %struct._object* null, %struct._object** %retval, !dbg !13157
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.125, !dbg !13157

if.end.109:                                       ; preds = %do.end.104
  %97 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo.addr, align 8, !dbg !13158, !tbaa !2683
  %currkey110 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %97, i32 0, i32 4, !dbg !13159
  %98 = load %struct._object*, %struct._object** %currkey110, align 8, !dbg !13159, !tbaa !12683
  %99 = load %struct._object*, %struct._object** %grouper, align 8, !dbg !13160, !tbaa !2683
  %call111 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %98, %struct._object* %99), !dbg !13161
  store %struct._object* %call111, %struct._object** %r, align 8, !dbg !13162, !tbaa !2683
  br label %do.body.112, !dbg !13163

do.body.112:                                      ; preds = %if.end.109
  %100 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !13164
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !13164
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !2156, metadata !2666), !dbg !13166
  %101 = load %struct._object*, %struct._object** %grouper, align 8, !dbg !13167, !tbaa !2683
  store %struct._object* %101, %struct._object** %_py_decref_tmp114, align 8, !dbg !13166, !tbaa !2683
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !13168, !tbaa !2683
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !13170
  %103 = load i64, i64* %ob_refcnt115, align 8, !dbg !13171, !tbaa !2722
  %dec116 = add i64 %103, -1, !dbg !13171
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !13171, !tbaa !2722
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !13172
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !13173

if.then.118:                                      ; preds = %do.body.112
  br label %if.end.122, !dbg !13174

if.else.119:                                      ; preds = %do.body.112
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !13176, !tbaa !2683
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !13178
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !13178, !tbaa !2675
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !13179
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !13179, !tbaa !2768
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !13180, !tbaa !2683
  call void %106(%struct._object* %107), !dbg !13181
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %108 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !13182
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !13182
  br label %do.cond.123, !dbg !13184

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !13185

do.end.124:                                       ; preds = %do.cond.123
  %109 = load %struct._object*, %struct._object** %r, align 8, !dbg !13187, !tbaa !2683
  store %struct._object* %109, %struct._object** %retval, !dbg !13188
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.125, !dbg !13188

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.125

cleanup.125:                                      ; preds = %NewDefault, %do.end.124, %if.then.108, %do.end, %if.then.17
  %110 = bitcast %struct._object** %tmp to i8*, !dbg !13189
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !13189
  %111 = bitcast %struct._object** %grouper to i8*, !dbg !13189
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !13189
  %112 = bitcast %struct._object** %r to i8*, !dbg !13189
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !13189
  %113 = bitcast %struct._object** %newkey to i8*, !dbg !13189
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !13189
  %114 = bitcast %struct._object** %newvalue to i8*, !dbg !13189
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !13189
  %115 = load %struct._object*, %struct._object** %retval, !dbg !13189
  ret %struct._object* %115, !dbg !13189
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %gbo = alloca %struct.groupbyobject*, align 8
  %it = alloca %struct._object*, align 8
  %keyfunc = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2196, metadata !2666), !dbg !13190
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2197, metadata !2666), !dbg !13191
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2198, metadata !2666), !dbg !13192
  %0 = bitcast %struct.groupbyobject** %gbo to i8*, !dbg !13193
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13193
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %gbo, metadata !2199, metadata !2666), !dbg !13194
  %1 = bitcast %struct._object** %it to i8*, !dbg !13195
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13195
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !2200, metadata !2666), !dbg !13196
  %2 = bitcast %struct._object** %keyfunc to i8*, !dbg !13195
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13195
  call void @llvm.dbg.declare(metadata %struct._object** %keyfunc, metadata !2201, metadata !2666), !dbg !13197
  store %struct._object* @_Py_NoneStruct, %struct._object** %keyfunc, align 8, !dbg !13197, !tbaa !2683
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13198, !tbaa !2683
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !13200, !tbaa !2683
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @groupby_new.kwargs, i32 0, i32 0), %struct._object** %it, %struct._object** %keyfunc), !dbg !13201
  %tobool = icmp ne i32 %call, 0, !dbg !13201
  br i1 %tobool, label %if.end, label %if.then, !dbg !13202

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13203
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13203

if.end:                                           ; preds = %entry
  %5 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !13204, !tbaa !2683
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 36, !dbg !13205
  %6 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !13205, !tbaa !3097
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !13206, !tbaa !2683
  %call1 = call %struct._object* %6(%struct._typeobject* %7, i64 0), !dbg !13204
  %8 = bitcast %struct._object* %call1 to %struct.groupbyobject*, !dbg !13207
  store %struct.groupbyobject* %8, %struct.groupbyobject** %gbo, align 8, !dbg !13208, !tbaa !2683
  %9 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13209, !tbaa !2683
  %cmp = icmp eq %struct.groupbyobject* %9, null, !dbg !13211
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !13212

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !13213
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13213

if.end.3:                                         ; preds = %if.end
  %10 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13214, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %10, i32 0, i32 3, !dbg !13215
  store %struct._object* null, %struct._object** %tgtkey, align 8, !dbg !13216, !tbaa !12644
  %11 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13217, !tbaa !2683
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %11, i32 0, i32 4, !dbg !13218
  store %struct._object* null, %struct._object** %currkey, align 8, !dbg !13219, !tbaa !12683
  %12 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13220, !tbaa !2683
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %12, i32 0, i32 5, !dbg !13221
  store %struct._object* null, %struct._object** %currvalue, align 8, !dbg !13222, !tbaa !12722
  %13 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !13223, !tbaa !2683
  %14 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13224, !tbaa !2683
  %keyfunc4 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %14, i32 0, i32 2, !dbg !13225
  store %struct._object* %13, %struct._object** %keyfunc4, align 8, !dbg !13226, !tbaa !12605
  %15 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !13227, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !13228
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !13229, !tbaa !2722
  %inc = add i64 %16, 1, !dbg !13229
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !13229, !tbaa !2722
  %17 = load %struct._object*, %struct._object** %it, align 8, !dbg !13230, !tbaa !2683
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %17), !dbg !13231
  %18 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13232, !tbaa !2683
  %it6 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %18, i32 0, i32 1, !dbg !13233
  store %struct._object* %call5, %struct._object** %it6, align 8, !dbg !13234, !tbaa !12563
  %19 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13235, !tbaa !2683
  %it7 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %19, i32 0, i32 1, !dbg !13236
  %20 = load %struct._object*, %struct._object** %it7, align 8, !dbg !13236, !tbaa !12563
  %cmp8 = icmp eq %struct._object* %20, null, !dbg !13237
  br i1 %cmp8, label %if.then.9, label %if.end.14, !dbg !13238

if.then.9:                                        ; preds = %if.end.3
  br label %do.body, !dbg !13239

do.body:                                          ; preds = %if.then.9
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13240
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !13240
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2202, metadata !2666), !dbg !13242
  %22 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13243, !tbaa !2683
  %23 = bitcast %struct.groupbyobject* %22 to %struct._object*, !dbg !13244
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !13242, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13245, !tbaa !2683
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !13247
  %25 = load i64, i64* %ob_refcnt10, align 8, !dbg !13248, !tbaa !2722
  %dec = add i64 %25, -1, !dbg !13248
  store i64 %dec, i64* %ob_refcnt10, align 8, !dbg !13248, !tbaa !2722
  %cmp11 = icmp ne i64 %dec, 0, !dbg !13249
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !13250

if.then.12:                                       ; preds = %do.body
  br label %if.end.13, !dbg !13251

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13253, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !13255
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13255, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !13256
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13256, !tbaa !2768
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13257, !tbaa !2683
  call void %28(%struct._object* %29), !dbg !13258
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13259
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !13259
  br label %do.cond, !dbg !13261

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !13262

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !13264
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13264

if.end.14:                                        ; preds = %if.end.3
  %31 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13265, !tbaa !2683
  %32 = bitcast %struct.groupbyobject* %31 to %struct._object*, !dbg !13266
  store %struct._object* %32, %struct._object** %retval, !dbg !13267
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13267

cleanup:                                          ; preds = %if.end.14, %do.end, %if.then.2, %if.then
  %33 = bitcast %struct._object** %keyfunc to i8*, !dbg !13268
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !13268
  %34 = bitcast %struct._object** %it to i8*, !dbg !13268
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !13268
  %35 = bitcast %struct.groupbyobject** %gbo to i8*, !dbg !13268
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !13268
  %36 = load %struct._object*, %struct._object** %retval, !dbg !13268
  ret %struct._object* %36, !dbg !13268
}

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_create(%struct.groupbyobject* %parent, %struct._object* %tgtkey) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %parent.addr = alloca %struct.groupbyobject*, align 8
  %tgtkey.addr = alloca %struct._object*, align 8
  %igo = alloca %struct._grouperobject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.groupbyobject* %parent, %struct.groupbyobject** %parent.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %parent.addr, metadata !2162, metadata !2666), !dbg !13269
  store %struct._object* %tgtkey, %struct._object** %tgtkey.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %tgtkey.addr, metadata !2163, metadata !2666), !dbg !13270
  %0 = bitcast %struct._grouperobject** %igo to i8*, !dbg !13271
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13271
  call void @llvm.dbg.declare(metadata %struct._grouperobject** %igo, metadata !2164, metadata !2666), !dbg !13272
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @_grouper_type), !dbg !13273
  %1 = bitcast %struct._object* %call to %struct._grouperobject*, !dbg !13274
  store %struct._grouperobject* %1, %struct._grouperobject** %igo, align 8, !dbg !13275, !tbaa !2683
  %2 = load %struct._grouperobject*, %struct._grouperobject** %igo, align 8, !dbg !13276, !tbaa !2683
  %cmp = icmp eq %struct._grouperobject* %2, null, !dbg !13278
  br i1 %cmp, label %if.then, label %if.end, !dbg !13279

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13280
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13280

if.end:                                           ; preds = %entry
  %3 = load %struct.groupbyobject*, %struct.groupbyobject** %parent.addr, align 8, !dbg !13281, !tbaa !2683
  %4 = bitcast %struct.groupbyobject* %3 to %struct._object*, !dbg !13282
  %5 = load %struct._grouperobject*, %struct._grouperobject** %igo, align 8, !dbg !13283, !tbaa !2683
  %parent1 = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %5, i32 0, i32 1, !dbg !13284
  store %struct._object* %4, %struct._object** %parent1, align 8, !dbg !13285, !tbaa !6893
  %6 = load %struct.groupbyobject*, %struct.groupbyobject** %parent.addr, align 8, !dbg !13286, !tbaa !2683
  %7 = bitcast %struct.groupbyobject* %6 to %struct._object*, !dbg !13287
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !13288
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !13289, !tbaa !2722
  %inc = add i64 %8, 1, !dbg !13289
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !13289, !tbaa !2722
  %9 = load %struct._object*, %struct._object** %tgtkey.addr, align 8, !dbg !13290, !tbaa !2683
  %10 = load %struct._grouperobject*, %struct._grouperobject** %igo, align 8, !dbg !13291, !tbaa !2683
  %tgtkey2 = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %10, i32 0, i32 2, !dbg !13292
  store %struct._object* %9, %struct._object** %tgtkey2, align 8, !dbg !13293, !tbaa !6935
  %11 = load %struct._object*, %struct._object** %tgtkey.addr, align 8, !dbg !13294, !tbaa !2683
  %ob_refcnt3 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !13295
  %12 = load i64, i64* %ob_refcnt3, align 8, !dbg !13296, !tbaa !2722
  %inc4 = add i64 %12, 1, !dbg !13296
  store i64 %inc4, i64* %ob_refcnt3, align 8, !dbg !13296, !tbaa !2722
  %13 = load %struct._grouperobject*, %struct._grouperobject** %igo, align 8, !dbg !13297, !tbaa !2683
  %14 = bitcast %struct._grouperobject* %13 to i8*, !dbg !13297
  call void @PyObject_GC_Track(i8* %14), !dbg !13298
  %15 = load %struct._grouperobject*, %struct._grouperobject** %igo, align 8, !dbg !13299, !tbaa !2683
  %16 = bitcast %struct._grouperobject* %15 to %struct._object*, !dbg !13300
  store %struct._object* %16, %struct._object** %retval, !dbg !13301
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13301

cleanup:                                          ; preds = %if.end, %if.then
  %17 = bitcast %struct._grouperobject** %igo to i8*, !dbg !13302
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !13302
  %18 = load %struct._object*, %struct._object** %retval, !dbg !13302
  ret %struct._object* %18, !dbg !13302
}

declare %struct._object* @PyTuple_Pack(i64, ...) #3

declare %struct._object* @_PyObject_GC_New(%struct._typeobject*) #3

declare void @PyObject_GC_Track(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_reduce(%struct.groupbyobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct.groupbyobject*, align 8
  %value = alloca %struct._object*, align 8
  store %struct.groupbyobject* %lz, %struct.groupbyobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %lz.addr, metadata !2167, metadata !2666), !dbg !13303
  %0 = bitcast %struct._object** %value to i8*, !dbg !13304
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13304
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2168, metadata !2666), !dbg !13305
  %1 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13306, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %1, i32 0, i32 3, !dbg !13308
  %2 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13308, !tbaa !12644
  %tobool = icmp ne %struct._object* %2, null, !dbg !13306
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !13309

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13310, !tbaa !2683
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %3, i32 0, i32 4, !dbg !13312
  %4 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !13312, !tbaa !12683
  %tobool1 = icmp ne %struct._object* %4, null, !dbg !13313
  br i1 %tobool1, label %land.lhs.true.2, label %if.else, !dbg !13314

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %5 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13315, !tbaa !2683
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %5, i32 0, i32 5, !dbg !13317
  %6 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !13317, !tbaa !12722
  %tobool3 = icmp ne %struct._object* %6, null, !dbg !13318
  br i1 %tobool3, label %if.then, label %if.else, !dbg !13319

if.then:                                          ; preds = %land.lhs.true.2
  %7 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13320, !tbaa !2683
  %8 = bitcast %struct.groupbyobject* %7 to %struct._object*, !dbg !13321
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !13322
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13322, !tbaa !2675
  %10 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13323, !tbaa !2683
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %10, i32 0, i32 1, !dbg !13324
  %11 = load %struct._object*, %struct._object** %it, align 8, !dbg !13324, !tbaa !12563
  %12 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13325, !tbaa !2683
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %12, i32 0, i32 2, !dbg !13326
  %13 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !13326, !tbaa !12605
  %14 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13327, !tbaa !2683
  %currkey4 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %14, i32 0, i32 4, !dbg !13328
  %15 = load %struct._object*, %struct._object** %currkey4, align 8, !dbg !13328, !tbaa !12683
  %16 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13329, !tbaa !2683
  %currvalue5 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %16, i32 0, i32 5, !dbg !13330
  %17 = load %struct._object*, %struct._object** %currvalue5, align 8, !dbg !13330, !tbaa !12722
  %18 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13331, !tbaa !2683
  %tgtkey6 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %18, i32 0, i32 3, !dbg !13332
  %19 = load %struct._object*, %struct._object** %tgtkey6, align 8, !dbg !13332, !tbaa !12644
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0), %struct._typeobject* %9, %struct._object* %11, %struct._object* %13, %struct._object* %15, %struct._object* %17, %struct._object* %19), !dbg !13333
  store %struct._object* %call, %struct._object** %value, align 8, !dbg !13334, !tbaa !2683
  br label %if.end, !dbg !13335

if.else:                                          ; preds = %land.lhs.true.2, %land.lhs.true, %entry
  %20 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13336, !tbaa !2683
  %21 = bitcast %struct.groupbyobject* %20 to %struct._object*, !dbg !13337
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !13338
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !13338, !tbaa !2675
  %23 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13339, !tbaa !2683
  %it8 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %23, i32 0, i32 1, !dbg !13340
  %24 = load %struct._object*, %struct._object** %it8, align 8, !dbg !13340, !tbaa !12563
  %25 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13341, !tbaa !2683
  %keyfunc9 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %25, i32 0, i32 2, !dbg !13342
  %26 = load %struct._object*, %struct._object** %keyfunc9, align 8, !dbg !13342, !tbaa !12605
  %call10 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._typeobject* %22, %struct._object* %24, %struct._object* %26), !dbg !13343
  store %struct._object* %call10, %struct._object** %value, align 8, !dbg !13344, !tbaa !2683
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %27 = load %struct._object*, %struct._object** %value, align 8, !dbg !13345, !tbaa !2683
  %28 = bitcast %struct._object** %value to i8*, !dbg !13346
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !13346
  ret %struct._object* %27, !dbg !13347
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_setstate(%struct.groupbyobject* %lz, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %lz.addr = alloca %struct.groupbyobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %currkey = alloca %struct._object*, align 8
  %currvalue = alloca %struct._object*, align 8
  %tgtkey = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  store %struct.groupbyobject* %lz, %struct.groupbyobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %lz.addr, metadata !2171, metadata !2666), !dbg !13348
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !2172, metadata !2666), !dbg !13349
  %0 = bitcast %struct._object** %currkey to i8*, !dbg !13350
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13350
  call void @llvm.dbg.declare(metadata %struct._object** %currkey, metadata !2173, metadata !2666), !dbg !13351
  %1 = bitcast %struct._object** %currvalue to i8*, !dbg !13350
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13350
  call void @llvm.dbg.declare(metadata %struct._object** %currvalue, metadata !2174, metadata !2666), !dbg !13352
  %2 = bitcast %struct._object** %tgtkey to i8*, !dbg !13350
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13350
  call void @llvm.dbg.declare(metadata %struct._object** %tgtkey, metadata !2175, metadata !2666), !dbg !13353
  %3 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !13354, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i32 0, i32 0), %struct._object** %currkey, %struct._object** %currvalue, %struct._object** %tgtkey), !dbg !13356
  %tobool = icmp ne i32 %call, 0, !dbg !13356
  br i1 %tobool, label %if.end, label %if.then, !dbg !13357

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13358
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13358

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13359

do.body:                                          ; preds = %if.end
  %4 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13360
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13360
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2176, metadata !2666), !dbg !13362
  %5 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13363, !tbaa !2683
  %currkey1 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %5, i32 0, i32 4, !dbg !13364
  %6 = load %struct._object*, %struct._object** %currkey1, align 8, !dbg !13364, !tbaa !12683
  store %struct._object* %6, %struct._object** %_py_tmp, align 8, !dbg !13362, !tbaa !2683
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13365, !tbaa !2683
  %cmp = icmp ne %struct._object* %7, null, !dbg !13366
  br i1 %cmp, label %if.then.2, label %if.end.8, !dbg !13367

if.then.2:                                        ; preds = %do.body
  %8 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13368, !tbaa !2683
  %currkey3 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %8, i32 0, i32 4, !dbg !13370
  store %struct._object* null, %struct._object** %currkey3, align 8, !dbg !13371, !tbaa !12683
  br label %do.body.4, !dbg !13372

do.body.4:                                        ; preds = %if.then.2
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13373
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !13373
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2178, metadata !2666), !dbg !13375
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13376, !tbaa !2683
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !13375, !tbaa !2683
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13377, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !13379
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !13380, !tbaa !2722
  %dec = add i64 %12, -1, !dbg !13380
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13380, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !13381
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !13382

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !13383

if.else:                                          ; preds = %do.body.4
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13385, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !13387
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13387, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !13388
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13388, !tbaa !2768
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13389, !tbaa !2683
  call void %15(%struct._object* %16), !dbg !13390
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13391
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !13391
  br label %do.cond, !dbg !13393

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !13394

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !13396

if.end.8:                                         ; preds = %do.end, %do.body
  %18 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13398
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !13398
  br label %do.cond.9, !dbg !13401

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !13402

do.end.10:                                        ; preds = %do.cond.9
  %19 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !13404, !tbaa !2683
  %20 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13405, !tbaa !2683
  %currkey11 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %20, i32 0, i32 4, !dbg !13406
  store %struct._object* %19, %struct._object** %currkey11, align 8, !dbg !13407, !tbaa !12683
  %21 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13408, !tbaa !2683
  %currkey12 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %21, i32 0, i32 4, !dbg !13409
  %22 = load %struct._object*, %struct._object** %currkey12, align 8, !dbg !13409, !tbaa !12683
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !13410
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !13411, !tbaa !2722
  %inc = add i64 %23, 1, !dbg !13411
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !13411, !tbaa !2722
  br label %do.body.14, !dbg !13412

do.body.14:                                       ; preds = %do.end.10
  %24 = bitcast %struct._object** %_py_tmp15 to i8*, !dbg !13413
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !13413
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp15, metadata !2182, metadata !2666), !dbg !13415
  %25 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13416, !tbaa !2683
  %currvalue16 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %25, i32 0, i32 5, !dbg !13417
  %26 = load %struct._object*, %struct._object** %currvalue16, align 8, !dbg !13417, !tbaa !12722
  store %struct._object* %26, %struct._object** %_py_tmp15, align 8, !dbg !13415, !tbaa !2683
  %27 = load %struct._object*, %struct._object** %_py_tmp15, align 8, !dbg !13418, !tbaa !2683
  %cmp17 = icmp ne %struct._object* %27, null, !dbg !13419
  br i1 %cmp17, label %if.then.18, label %if.end.32, !dbg !13420

if.then.18:                                       ; preds = %do.body.14
  %28 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13421, !tbaa !2683
  %currvalue19 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %28, i32 0, i32 5, !dbg !13423
  store %struct._object* null, %struct._object** %currvalue19, align 8, !dbg !13424, !tbaa !12722
  br label %do.body.20, !dbg !13425

do.body.20:                                       ; preds = %if.then.18
  %29 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !13426
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !13426
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp21, metadata !2184, metadata !2666), !dbg !13428
  %30 = load %struct._object*, %struct._object** %_py_tmp15, align 8, !dbg !13429, !tbaa !2683
  store %struct._object* %30, %struct._object** %_py_decref_tmp21, align 8, !dbg !13428, !tbaa !2683
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !13430, !tbaa !2683
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !13432
  %32 = load i64, i64* %ob_refcnt22, align 8, !dbg !13433, !tbaa !2722
  %dec23 = add i64 %32, -1, !dbg !13433
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !13433, !tbaa !2722
  %cmp24 = icmp ne i64 %dec23, 0, !dbg !13434
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !13435

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29, !dbg !13436

if.else.26:                                       ; preds = %do.body.20
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !13438, !tbaa !2683
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !13440
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !13440, !tbaa !2675
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !13441
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !13441, !tbaa !2768
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !13442, !tbaa !2683
  call void %35(%struct._object* %36), !dbg !13443
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %37 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !13444
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !13444
  br label %do.cond.30, !dbg !13446

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !13447

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.32, !dbg !13449

if.end.32:                                        ; preds = %do.end.31, %do.body.14
  %38 = bitcast %struct._object** %_py_tmp15 to i8*, !dbg !13451
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !13451
  br label %do.cond.33, !dbg !13452

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !13453

do.end.34:                                        ; preds = %do.cond.33
  %39 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !13455, !tbaa !2683
  %40 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13456, !tbaa !2683
  %currvalue35 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %40, i32 0, i32 5, !dbg !13457
  store %struct._object* %39, %struct._object** %currvalue35, align 8, !dbg !13458, !tbaa !12722
  %41 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13459, !tbaa !2683
  %currvalue36 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %41, i32 0, i32 5, !dbg !13460
  %42 = load %struct._object*, %struct._object** %currvalue36, align 8, !dbg !13460, !tbaa !12722
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !13461
  %43 = load i64, i64* %ob_refcnt37, align 8, !dbg !13462, !tbaa !2722
  %inc38 = add i64 %43, 1, !dbg !13462
  store i64 %inc38, i64* %ob_refcnt37, align 8, !dbg !13462, !tbaa !2722
  br label %do.body.39, !dbg !13463

do.body.39:                                       ; preds = %do.end.34
  %44 = bitcast %struct._object** %_py_tmp40 to i8*, !dbg !13464
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !13464
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp40, metadata !2188, metadata !2666), !dbg !13466
  %45 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13467, !tbaa !2683
  %tgtkey41 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %45, i32 0, i32 3, !dbg !13468
  %46 = load %struct._object*, %struct._object** %tgtkey41, align 8, !dbg !13468, !tbaa !12644
  store %struct._object* %46, %struct._object** %_py_tmp40, align 8, !dbg !13466, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %_py_tmp40, align 8, !dbg !13469, !tbaa !2683
  %cmp42 = icmp ne %struct._object* %47, null, !dbg !13470
  br i1 %cmp42, label %if.then.43, label %if.end.57, !dbg !13471

if.then.43:                                       ; preds = %do.body.39
  %48 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13472, !tbaa !2683
  %tgtkey44 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %48, i32 0, i32 3, !dbg !13474
  store %struct._object* null, %struct._object** %tgtkey44, align 8, !dbg !13475, !tbaa !12644
  br label %do.body.45, !dbg !13476

do.body.45:                                       ; preds = %if.then.43
  %49 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !13477
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !13477
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !2190, metadata !2666), !dbg !13479
  %50 = load %struct._object*, %struct._object** %_py_tmp40, align 8, !dbg !13480, !tbaa !2683
  store %struct._object* %50, %struct._object** %_py_decref_tmp46, align 8, !dbg !13479, !tbaa !2683
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !13481, !tbaa !2683
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !13483
  %52 = load i64, i64* %ob_refcnt47, align 8, !dbg !13484, !tbaa !2722
  %dec48 = add i64 %52, -1, !dbg !13484
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !13484, !tbaa !2722
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !13485
  br i1 %cmp49, label %if.then.50, label %if.else.51, !dbg !13486

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54, !dbg !13487

if.else.51:                                       ; preds = %do.body.45
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !13489, !tbaa !2683
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !13491
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !13491, !tbaa !2675
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !13492
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !13492, !tbaa !2768
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !13493, !tbaa !2683
  call void %55(%struct._object* %56), !dbg !13494
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  %57 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !13495
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !13495
  br label %do.cond.55, !dbg !13497

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !13498

do.end.56:                                        ; preds = %do.cond.55
  br label %if.end.57, !dbg !13500

if.end.57:                                        ; preds = %do.end.56, %do.body.39
  %58 = bitcast %struct._object** %_py_tmp40 to i8*, !dbg !13502
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !13502
  br label %do.cond.58, !dbg !13503

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !13504

do.end.59:                                        ; preds = %do.cond.58
  %59 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13506, !tbaa !2683
  %60 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13507, !tbaa !2683
  %tgtkey60 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %60, i32 0, i32 3, !dbg !13508
  store %struct._object* %59, %struct._object** %tgtkey60, align 8, !dbg !13509, !tbaa !12644
  %61 = load %struct.groupbyobject*, %struct.groupbyobject** %lz.addr, align 8, !dbg !13510, !tbaa !2683
  %tgtkey61 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %61, i32 0, i32 3, !dbg !13511
  %62 = load %struct._object*, %struct._object** %tgtkey61, align 8, !dbg !13511, !tbaa !12644
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !13512
  %63 = load i64, i64* %ob_refcnt62, align 8, !dbg !13513, !tbaa !2722
  %inc63 = add i64 %63, 1, !dbg !13513
  store i64 %inc63, i64* %ob_refcnt62, align 8, !dbg !13513, !tbaa !2722
  %64 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13514, !tbaa !2722
  %inc64 = add i64 %64, 1, !dbg !13514
  store i64 %inc64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13514, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !13515
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13515

cleanup:                                          ; preds = %do.end.59, %if.then
  %65 = bitcast %struct._object** %tgtkey to i8*, !dbg !13516
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !13516
  %66 = bitcast %struct._object** %currvalue to i8*, !dbg !13516
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !13516
  %67 = bitcast %struct._object** %currkey to i8*, !dbg !13516
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !13516
  %68 = load %struct._object*, %struct._object** %retval, !dbg !13516
  ret %struct._object* %68, !dbg !13516
}

; Function Attrs: nounwind uwtable
define internal void @_grouper_dealloc(%struct._grouperobject* %igo) #0 {
entry:
  %igo.addr = alloca %struct._grouperobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp2 = alloca %struct._object*, align 8
  store %struct._grouperobject* %igo, %struct._grouperobject** %igo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._grouperobject** %igo.addr, metadata !2210, metadata !2666), !dbg !13517
  %0 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13518, !tbaa !2683
  %1 = bitcast %struct._grouperobject* %0 to i8*, !dbg !13518
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !13519
  br label %do.body, !dbg !13520

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13521
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13521
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2211, metadata !2666), !dbg !13523
  %3 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13524, !tbaa !2683
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %3, i32 0, i32 1, !dbg !13525
  %4 = load %struct._object*, %struct._object** %parent, align 8, !dbg !13525, !tbaa !6893
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8, !dbg !13523, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13526, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !13528
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !13529, !tbaa !2722
  %dec = add i64 %6, -1, !dbg !13529
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13529, !tbaa !2722
  %cmp = icmp ne i64 %dec, 0, !dbg !13530
  br i1 %cmp, label %if.then, label %if.else, !dbg !13531

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !13532

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13534, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !13536
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13536, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4, !dbg !13537
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13537, !tbaa !2768
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13538, !tbaa !2683
  call void %9(%struct._object* %10), !dbg !13539
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13540
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !13540
  br label %do.end, !dbg !13542

do.end:                                           ; preds = %if.end
  br label %do.body.1, !dbg !13543

do.body.1:                                        ; preds = %do.end
  %12 = bitcast %struct._object** %_py_decref_tmp2 to i8*, !dbg !13544
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !13544
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp2, metadata !2213, metadata !2666), !dbg !13546
  %13 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13547, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %13, i32 0, i32 2, !dbg !13548
  %14 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13548, !tbaa !6935
  store %struct._object* %14, %struct._object** %_py_decref_tmp2, align 8, !dbg !13546, !tbaa !2683
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp2, align 8, !dbg !13549, !tbaa !2683
  %ob_refcnt3 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !13551
  %16 = load i64, i64* %ob_refcnt3, align 8, !dbg !13552, !tbaa !2722
  %dec4 = add i64 %16, -1, !dbg !13552
  store i64 %dec4, i64* %ob_refcnt3, align 8, !dbg !13552, !tbaa !2722
  %cmp5 = icmp ne i64 %dec4, 0, !dbg !13553
  br i1 %cmp5, label %if.then.6, label %if.else.7, !dbg !13554

if.then.6:                                        ; preds = %do.body.1
  br label %if.end.10, !dbg !13555

if.else.7:                                        ; preds = %do.body.1
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp2, align 8, !dbg !13557, !tbaa !2683
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !13559
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !13559, !tbaa !2675
  %tp_dealloc9 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !13560
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc9, align 8, !dbg !13560, !tbaa !2768
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp2, align 8, !dbg !13561, !tbaa !2683
  call void %19(%struct._object* %20), !dbg !13562
  br label %if.end.10

if.end.10:                                        ; preds = %if.else.7, %if.then.6
  %21 = bitcast %struct._object** %_py_decref_tmp2 to i8*, !dbg !13563
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !13563
  br label %do.end.11, !dbg !13564

do.end.11:                                        ; preds = %if.end.10
  %22 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13565, !tbaa !2683
  %23 = bitcast %struct._grouperobject* %22 to i8*, !dbg !13565
  call void @PyObject_GC_Del(i8* %23), !dbg !13566
  ret void, !dbg !13567
}

; Function Attrs: nounwind uwtable
define internal i32 @_grouper_traverse(%struct._grouperobject* %igo, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %igo.addr = alloca %struct._grouperobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct._grouperobject* %igo, %struct._grouperobject** %igo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._grouperobject** %igo.addr, metadata !2219, metadata !2666), !dbg !13568
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !2220, metadata !2666), !dbg !13569
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2221, metadata !2666), !dbg !13570
  br label %do.body, !dbg !13571

do.body:                                          ; preds = %entry
  %0 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13572, !tbaa !2683
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %0, i32 0, i32 1, !dbg !13574
  %1 = load %struct._object*, %struct._object** %parent, align 8, !dbg !13574, !tbaa !6893
  %tobool = icmp ne %struct._object* %1, null, !dbg !13575
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !13576

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !13577
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !13577
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !2222, metadata !2666), !dbg !13579
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !13580, !tbaa !2683
  %4 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13581, !tbaa !2683
  %parent1 = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %4, i32 0, i32 1, !dbg !13582
  %5 = load %struct._object*, %struct._object** %parent1, align 8, !dbg !13582, !tbaa !6893
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !13583, !tbaa !2683
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !13580
  store i32 %call, i32* %vret, align 4, !dbg !13579, !tbaa !2691
  %7 = load i32, i32* %vret, align 4, !dbg !13584, !tbaa !2691
  %tobool2 = icmp ne i32 %7, 0, !dbg !13584
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !13586

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !13587, !tbaa !2691
  store i32 %8, i32* %retval, !dbg !13589
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13589

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !13590
  br label %cleanup, !dbg !13590

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !13592
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !13592
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !13595

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !13596

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !13599

do.body.5:                                        ; preds = %do.end
  %10 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13600, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %10, i32 0, i32 2, !dbg !13602
  %11 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13602, !tbaa !6935
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !13603
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !13604

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !13605
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !13605
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !2226, metadata !2666), !dbg !13607
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !13608, !tbaa !2683
  %14 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13609, !tbaa !2683
  %tgtkey9 = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %14, i32 0, i32 2, !dbg !13610
  %15 = load %struct._object*, %struct._object** %tgtkey9, align 8, !dbg !13610, !tbaa !6935
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !13611, !tbaa !2683
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !13608
  store i32 %call10, i32* %vret8, align 4, !dbg !13607, !tbaa !2691
  %17 = load i32, i32* %vret8, align 4, !dbg !13612, !tbaa !2691
  %tobool11 = icmp ne i32 %17, 0, !dbg !13612
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !13614

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !13615, !tbaa !2691
  store i32 %18, i32* %retval, !dbg !13617
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !13617

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !13618
  br label %cleanup.14, !dbg !13618

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !13620
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !13620
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !13623

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !13624

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !13627
  br label %return, !dbg !13627

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !13628
  ret i32 %20, !dbg !13628
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_next(%struct._grouperobject* %igo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %igo.addr = alloca %struct._grouperobject*, align 8
  %gbo = alloca %struct.groupbyobject*, align 8
  %newvalue = alloca %struct._object*, align 8
  %newkey = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %rcmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  store %struct._grouperobject* %igo, %struct._grouperobject** %igo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._grouperobject** %igo.addr, metadata !2234, metadata !2666), !dbg !13629
  %0 = bitcast %struct.groupbyobject** %gbo to i8*, !dbg !13630
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13630
  call void @llvm.dbg.declare(metadata %struct.groupbyobject** %gbo, metadata !2235, metadata !2666), !dbg !13631
  %1 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13632, !tbaa !2683
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %1, i32 0, i32 1, !dbg !13633
  %2 = load %struct._object*, %struct._object** %parent, align 8, !dbg !13633, !tbaa !6893
  %3 = bitcast %struct._object* %2 to %struct.groupbyobject*, !dbg !13634
  store %struct.groupbyobject* %3, %struct.groupbyobject** %gbo, align 8, !dbg !13631, !tbaa !2683
  %4 = bitcast %struct._object** %newvalue to i8*, !dbg !13635
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13635
  call void @llvm.dbg.declare(metadata %struct._object** %newvalue, metadata !2236, metadata !2666), !dbg !13636
  %5 = bitcast %struct._object** %newkey to i8*, !dbg !13635
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !13635
  call void @llvm.dbg.declare(metadata %struct._object** %newkey, metadata !2237, metadata !2666), !dbg !13637
  %6 = bitcast %struct._object** %r to i8*, !dbg !13635
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !13635
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !2238, metadata !2666), !dbg !13638
  %7 = bitcast i32* %rcmp to i8*, !dbg !13639
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !13639
  call void @llvm.dbg.declare(metadata i32* %rcmp, metadata !2239, metadata !2666), !dbg !13640
  %8 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13641, !tbaa !2683
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %8, i32 0, i32 5, !dbg !13642
  %9 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !13642, !tbaa !12722
  %cmp = icmp eq %struct._object* %9, null, !dbg !13643
  br i1 %cmp, label %if.then, label %if.end.17, !dbg !13644

if.then:                                          ; preds = %entry
  %10 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13645, !tbaa !2683
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %10, i32 0, i32 1, !dbg !13646
  %11 = load %struct._object*, %struct._object** %it, align 8, !dbg !13646, !tbaa !12563
  %call = call %struct._object* @PyIter_Next(%struct._object* %11), !dbg !13647
  store %struct._object* %call, %struct._object** %newvalue, align 8, !dbg !13648, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13649, !tbaa !2683
  %cmp1 = icmp eq %struct._object* %12, null, !dbg !13651
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !13652

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !13653
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13653

if.end:                                           ; preds = %if.then
  %13 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13654, !tbaa !2683
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %13, i32 0, i32 2, !dbg !13655
  %14 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !13655, !tbaa !12605
  %cmp3 = icmp eq %struct._object* %14, @_Py_NoneStruct, !dbg !13656
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !13657

if.then.4:                                        ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13658, !tbaa !2683
  store %struct._object* %15, %struct._object** %newkey, align 8, !dbg !13660, !tbaa !2683
  %16 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13661, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !13662
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !13663, !tbaa !2722
  %inc = add i64 %17, 1, !dbg !13663
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !13663, !tbaa !2722
  br label %if.end.15, !dbg !13664

if.else:                                          ; preds = %if.end
  %18 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13665, !tbaa !2683
  %keyfunc5 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %18, i32 0, i32 2, !dbg !13666
  %19 = load %struct._object*, %struct._object** %keyfunc5, align 8, !dbg !13666, !tbaa !12605
  %20 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13667, !tbaa !2683
  %call6 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %19, %struct._object* %20, i8* null), !dbg !13668
  store %struct._object* %call6, %struct._object** %newkey, align 8, !dbg !13669, !tbaa !2683
  %21 = load %struct._object*, %struct._object** %newkey, align 8, !dbg !13670, !tbaa !2683
  %cmp7 = icmp eq %struct._object* %21, null, !dbg !13671
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !13672

if.then.8:                                        ; preds = %if.else
  br label %do.body, !dbg !13673

do.body:                                          ; preds = %if.then.8
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13674
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !13674
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2240, metadata !2666), !dbg !13676
  %23 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13677, !tbaa !2683
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !13676, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13678, !tbaa !2683
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !13680
  %25 = load i64, i64* %ob_refcnt9, align 8, !dbg !13681, !tbaa !2722
  %dec = add i64 %25, -1, !dbg !13681
  store i64 %dec, i64* %ob_refcnt9, align 8, !dbg !13681, !tbaa !2722
  %cmp10 = icmp ne i64 %dec, 0, !dbg !13682
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !13683

if.then.11:                                       ; preds = %do.body
  br label %if.end.13, !dbg !13684

if.else.12:                                       ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13686, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !13688
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13688, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !13689
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13689, !tbaa !2768
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13690, !tbaa !2683
  call void %28(%struct._object* %29), !dbg !13691
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.12, %if.then.11
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13692
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !13692
  br label %do.cond, !dbg !13694

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !13695

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !13697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13697

if.end.14:                                        ; preds = %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.4
  %31 = load %struct._object*, %struct._object** %newkey, align 8, !dbg !13698, !tbaa !2683
  %32 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13699, !tbaa !2683
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %32, i32 0, i32 4, !dbg !13700
  store %struct._object* %31, %struct._object** %currkey, align 8, !dbg !13701, !tbaa !12683
  %33 = load %struct._object*, %struct._object** %newvalue, align 8, !dbg !13702, !tbaa !2683
  %34 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13703, !tbaa !2683
  %currvalue16 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %34, i32 0, i32 5, !dbg !13704
  store %struct._object* %33, %struct._object** %currvalue16, align 8, !dbg !13705, !tbaa !12722
  br label %if.end.17, !dbg !13706

if.end.17:                                        ; preds = %if.end.15, %entry
  %35 = load %struct._grouperobject*, %struct._grouperobject** %igo.addr, align 8, !dbg !13707, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %35, i32 0, i32 2, !dbg !13708
  %36 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13708, !tbaa !6935
  %37 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13709, !tbaa !2683
  %currkey18 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %37, i32 0, i32 4, !dbg !13710
  %38 = load %struct._object*, %struct._object** %currkey18, align 8, !dbg !13710, !tbaa !12683
  %call19 = call i32 @PyObject_RichCompareBool(%struct._object* %36, %struct._object* %38, i32 2), !dbg !13711
  store i32 %call19, i32* %rcmp, align 4, !dbg !13712, !tbaa !2691
  %39 = load i32, i32* %rcmp, align 4, !dbg !13713, !tbaa !2691
  %cmp20 = icmp sle i32 %39, 0, !dbg !13715
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !13716

if.then.21:                                       ; preds = %if.end.17
  store %struct._object* null, %struct._object** %retval, !dbg !13717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13717

if.end.22:                                        ; preds = %if.end.17
  %40 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13718, !tbaa !2683
  %currvalue23 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %40, i32 0, i32 5, !dbg !13719
  %41 = load %struct._object*, %struct._object** %currvalue23, align 8, !dbg !13719, !tbaa !12722
  store %struct._object* %41, %struct._object** %r, align 8, !dbg !13720, !tbaa !2683
  %42 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13721, !tbaa !2683
  %currvalue24 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %42, i32 0, i32 5, !dbg !13722
  store %struct._object* null, %struct._object** %currvalue24, align 8, !dbg !13723, !tbaa !12722
  br label %do.body.25, !dbg !13724

do.body.25:                                       ; preds = %if.end.22
  %43 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13725
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !13725
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2248, metadata !2666), !dbg !13727
  %44 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13728, !tbaa !2683
  %currkey26 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %44, i32 0, i32 4, !dbg !13729
  %45 = load %struct._object*, %struct._object** %currkey26, align 8, !dbg !13729, !tbaa !12683
  store %struct._object* %45, %struct._object** %_py_tmp, align 8, !dbg !13727, !tbaa !2683
  %46 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13730, !tbaa !2683
  %cmp27 = icmp ne %struct._object* %46, null, !dbg !13731
  br i1 %cmp27, label %if.then.28, label %if.end.42, !dbg !13732

if.then.28:                                       ; preds = %do.body.25
  %47 = load %struct.groupbyobject*, %struct.groupbyobject** %gbo, align 8, !dbg !13733, !tbaa !2683
  %currkey29 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %47, i32 0, i32 4, !dbg !13735
  store %struct._object* null, %struct._object** %currkey29, align 8, !dbg !13736, !tbaa !12683
  br label %do.body.30, !dbg !13737

do.body.30:                                       ; preds = %if.then.28
  %48 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !13738
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !13738
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !2250, metadata !2666), !dbg !13740
  %49 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13741, !tbaa !2683
  store %struct._object* %49, %struct._object** %_py_decref_tmp31, align 8, !dbg !13740, !tbaa !2683
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !13742, !tbaa !2683
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !13744
  %51 = load i64, i64* %ob_refcnt32, align 8, !dbg !13745, !tbaa !2722
  %dec33 = add i64 %51, -1, !dbg !13745
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !13745, !tbaa !2722
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !13746
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !13747

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !13748

if.else.36:                                       ; preds = %do.body.30
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !13750, !tbaa !2683
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !13752
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !13752, !tbaa !2675
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !13753
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !13753, !tbaa !2768
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !13754, !tbaa !2683
  call void %54(%struct._object* %55), !dbg !13755
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %56 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !13756
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !13756
  br label %do.cond.40, !dbg !13758

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !13759

do.end.41:                                        ; preds = %do.cond.40
  br label %if.end.42, !dbg !13761

if.end.42:                                        ; preds = %do.end.41, %do.body.25
  %57 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13763
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !13763
  br label %do.cond.43, !dbg !13766

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !13767

do.end.44:                                        ; preds = %do.cond.43
  %58 = load %struct._object*, %struct._object** %r, align 8, !dbg !13769, !tbaa !2683
  store %struct._object* %58, %struct._object** %retval, !dbg !13770
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13770

cleanup:                                          ; preds = %do.end.44, %if.then.21, %do.end, %if.then.2
  %59 = bitcast i32* %rcmp to i8*, !dbg !13771
  call void @llvm.lifetime.end(i64 4, i8* %59) #1, !dbg !13771
  %60 = bitcast %struct._object** %r to i8*, !dbg !13771
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !13771
  %61 = bitcast %struct._object** %newkey to i8*, !dbg !13771
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !13771
  %62 = bitcast %struct._object** %newvalue to i8*, !dbg !13771
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !13771
  %63 = bitcast %struct.groupbyobject** %gbo to i8*, !dbg !13771
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !13771
  %64 = load %struct._object*, %struct._object** %retval, !dbg !13771
  ret %struct._object* %64, !dbg !13771
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %parent = alloca %struct._object*, align 8
  %tgtkey = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2259, metadata !2666), !dbg !13772
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2260, metadata !2666), !dbg !13773
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2261, metadata !2666), !dbg !13774
  %0 = bitcast %struct._object** %parent to i8*, !dbg !13775
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13775
  call void @llvm.dbg.declare(metadata %struct._object** %parent, metadata !2262, metadata !2666), !dbg !13776
  %1 = bitcast %struct._object** %tgtkey to i8*, !dbg !13775
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13775
  call void @llvm.dbg.declare(metadata %struct._object** %tgtkey, metadata !2263, metadata !2666), !dbg !13777
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13778, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), %struct._typeobject* @groupby_type, %struct._object** %parent, %struct._object** %tgtkey), !dbg !13780
  %tobool = icmp ne i32 %call, 0, !dbg !13780
  br i1 %tobool, label %if.end, label %if.then, !dbg !13781

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13782
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13782

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %parent, align 8, !dbg !13783, !tbaa !2683
  %4 = bitcast %struct._object* %3 to %struct.groupbyobject*, !dbg !13784
  %5 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13785, !tbaa !2683
  %call1 = call %struct._object* @_grouper_create(%struct.groupbyobject* %4, %struct._object* %5), !dbg !13786
  store %struct._object* %call1, %struct._object** %retval, !dbg !13787
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13787

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast %struct._object** %tgtkey to i8*, !dbg !13788
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !13788
  %7 = bitcast %struct._object** %parent to i8*, !dbg !13788
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !13788
  %8 = load %struct._object*, %struct._object** %retval, !dbg !13788
  ret %struct._object* %8, !dbg !13788
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_reduce(%struct._grouperobject* %lz) #0 {
entry:
  %lz.addr = alloca %struct._grouperobject*, align 8
  store %struct._grouperobject* %lz, %struct._grouperobject** %lz.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._grouperobject** %lz.addr, metadata !2256, metadata !2666), !dbg !13789
  %0 = load %struct._grouperobject*, %struct._grouperobject** %lz.addr, align 8, !dbg !13790, !tbaa !2683
  %1 = bitcast %struct._grouperobject* %0 to %struct._object*, !dbg !13791
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !13792
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13792, !tbaa !2675
  %3 = load %struct._grouperobject*, %struct._grouperobject** %lz.addr, align 8, !dbg !13793, !tbaa !2683
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %3, i32 0, i32 1, !dbg !13794
  %4 = load %struct._object*, %struct._object** %parent, align 8, !dbg !13794, !tbaa !6893
  %5 = load %struct._grouperobject*, %struct._grouperobject** %lz.addr, align 8, !dbg !13795, !tbaa !2683
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %5, i32 0, i32 2, !dbg !13796
  %6 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !13796, !tbaa !6935
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %4, %struct._object* %6), !dbg !13797
  ret %struct._object* %call, !dbg !13798
}

; Function Attrs: nounwind uwtable
define internal void @tee_dealloc(%struct.teeobject* %to) #0 {
entry:
  %to.addr = alloca %struct.teeobject*, align 8
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2268, metadata !2666), !dbg !13799
  %0 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13800, !tbaa !2683
  %1 = bitcast %struct.teeobject* %0 to i8*, !dbg !13800
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !13801
  %2 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13802, !tbaa !2683
  %call = call i32 @tee_clear(%struct.teeobject* %2), !dbg !13803
  %3 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13804, !tbaa !2683
  %4 = bitcast %struct.teeobject* %3 to i8*, !dbg !13804
  call void @PyObject_GC_Del(i8* %4), !dbg !13805
  ret void, !dbg !13806
}

; Function Attrs: nounwind uwtable
define internal i32 @tee_traverse(%struct.teeobject* %to, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %to.addr = alloca %struct.teeobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2273, metadata !2666), !dbg !13807
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !2274, metadata !2666), !dbg !13808
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2275, metadata !2666), !dbg !13809
  br label %do.body, !dbg !13810

do.body:                                          ; preds = %entry
  %0 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13811, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %0, i32 0, i32 1, !dbg !13813
  %1 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !13813, !tbaa !13814
  %2 = bitcast %struct.teedataobject* %1 to %struct._object*, !dbg !13816
  %tobool = icmp ne %struct._object* %2, null, !dbg !13816
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !13817

if.then:                                          ; preds = %do.body
  %3 = bitcast i32* %vret to i8*, !dbg !13818
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !13818
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !2276, metadata !2666), !dbg !13820
  %4 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !13821, !tbaa !2683
  %5 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13822, !tbaa !2683
  %dataobj1 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %5, i32 0, i32 1, !dbg !13823
  %6 = load %struct.teedataobject*, %struct.teedataobject** %dataobj1, align 8, !dbg !13823, !tbaa !13814
  %7 = bitcast %struct.teedataobject* %6 to %struct._object*, !dbg !13824
  %8 = load i8*, i8** %arg.addr, align 8, !dbg !13825, !tbaa !2683
  %call = call i32 %4(%struct._object* %7, i8* %8), !dbg !13821
  store i32 %call, i32* %vret, align 4, !dbg !13820, !tbaa !2691
  %9 = load i32, i32* %vret, align 4, !dbg !13826, !tbaa !2691
  %tobool2 = icmp ne i32 %9, 0, !dbg !13826
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !13828

if.then.3:                                        ; preds = %if.then
  %10 = load i32, i32* %vret, align 4, !dbg !13829, !tbaa !2691
  store i32 %10, i32* %retval, !dbg !13831
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13831

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !13832
  br label %cleanup, !dbg !13832

cleanup:                                          ; preds = %if.end, %if.then.3
  %11 = bitcast i32* %vret to i8*, !dbg !13834
  call void @llvm.lifetime.end(i64 4, i8* %11) #1, !dbg !13834
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !13837

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !13838

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval, !dbg !13841
  br label %return, !dbg !13841

return:                                           ; preds = %LeafBlock, %do.end
  %12 = load i32, i32* %retval, !dbg !13842
  ret i32 %12, !dbg !13842
}

; Function Attrs: nounwind uwtable
define internal i32 @tee_clear(%struct.teeobject* %to) #0 {
entry:
  %to.addr = alloca %struct.teeobject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2284, metadata !2666), !dbg !13843
  %0 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13844, !tbaa !2683
  %weakreflist = getelementptr inbounds %struct.teeobject, %struct.teeobject* %0, i32 0, i32 3, !dbg !13846
  %1 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !13846, !tbaa !13847
  %cmp = icmp ne %struct._object* %1, null, !dbg !13848
  br i1 %cmp, label %if.then, label %if.end, !dbg !13849

if.then:                                          ; preds = %entry
  %2 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13850, !tbaa !2683
  %3 = bitcast %struct.teeobject* %2 to %struct._object*, !dbg !13851
  call void @PyObject_ClearWeakRefs(%struct._object* %3), !dbg !13852
  br label %if.end, !dbg !13852

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !13853

do.body:                                          ; preds = %if.end
  %4 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13854
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13854
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2285, metadata !2666), !dbg !13856
  %5 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13857, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %5, i32 0, i32 1, !dbg !13858
  %6 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !13858, !tbaa !13814
  %7 = bitcast %struct.teedataobject* %6 to %struct._object*, !dbg !13859
  store %struct._object* %7, %struct._object** %_py_tmp, align 8, !dbg !13856, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13860, !tbaa !2683
  %cmp1 = icmp ne %struct._object* %8, null, !dbg !13861
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !13862

if.then.2:                                        ; preds = %do.body
  %9 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13863, !tbaa !2683
  %dataobj3 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %9, i32 0, i32 1, !dbg !13865
  store %struct.teedataobject* null, %struct.teedataobject** %dataobj3, align 8, !dbg !13866, !tbaa !13814
  br label %do.body.4, !dbg !13867

do.body.4:                                        ; preds = %if.then.2
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13868
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !13868
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2287, metadata !2666), !dbg !13870
  %11 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13871, !tbaa !2683
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !13870, !tbaa !2683
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13872, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !13874
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !13875, !tbaa !2722
  %dec = add i64 %13, -1, !dbg !13875
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13875, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !13876
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !13877

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !13878

if.else:                                          ; preds = %do.body.4
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13880, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !13882
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13882, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !13883
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13883, !tbaa !2768
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13884, !tbaa !2683
  call void %16(%struct._object* %17), !dbg !13885
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13886
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !13886
  br label %do.cond, !dbg !13888

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !13889

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !13891

if.end.8:                                         ; preds = %do.end, %do.body
  %19 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13893
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !13893
  br label %do.end.10, !dbg !13896

do.end.10:                                        ; preds = %if.end.8
  ret i32 0, !dbg !13897
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_next(%struct.teeobject* %to) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %to.addr = alloca %struct.teeobject*, align 8
  %value = alloca %struct._object*, align 8
  %link = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2295, metadata !2666), !dbg !13898
  %0 = bitcast %struct._object** %value to i8*, !dbg !13899
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13899
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2296, metadata !2666), !dbg !13900
  %1 = bitcast %struct._object** %link to i8*, !dbg !13899
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13899
  call void @llvm.dbg.declare(metadata %struct._object** %link, metadata !2297, metadata !2666), !dbg !13901
  %2 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13902, !tbaa !2683
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %2, i32 0, i32 2, !dbg !13903
  %3 = load i32, i32* %index, align 4, !dbg !13903, !tbaa !13904
  %cmp = icmp sge i32 %3, 57, !dbg !13905
  br i1 %cmp, label %if.then, label %if.end.9, !dbg !13906

if.then:                                          ; preds = %entry
  %4 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13907, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %4, i32 0, i32 1, !dbg !13908
  %5 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !13908, !tbaa !13814
  %call = call %struct._object* @teedataobject_jumplink(%struct.teedataobject* %5), !dbg !13909
  store %struct._object* %call, %struct._object** %link, align 8, !dbg !13910, !tbaa !2683
  %6 = load %struct._object*, %struct._object** %link, align 8, !dbg !13911, !tbaa !2683
  %cmp1 = icmp eq %struct._object* %6, null, !dbg !13913
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !13914

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !13915
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13915

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !13916

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13917
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !13917
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2298, metadata !2666), !dbg !13919
  %8 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13920, !tbaa !2683
  %dataobj3 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %8, i32 0, i32 1, !dbg !13921
  %9 = load %struct.teedataobject*, %struct.teedataobject** %dataobj3, align 8, !dbg !13921, !tbaa !13814
  %10 = bitcast %struct.teedataobject* %9 to %struct._object*, !dbg !13922
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !13919, !tbaa !2683
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13923, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !13925
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !13926, !tbaa !2722
  %dec = add i64 %12, -1, !dbg !13926
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13926, !tbaa !2722
  %cmp4 = icmp ne i64 %dec, 0, !dbg !13927
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !13928

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !13929

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13931, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !13933
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13933, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !13934
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13934, !tbaa !2768
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13935, !tbaa !2683
  call void %15(%struct._object* %16), !dbg !13936
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13937
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !13937
  br label %do.cond, !dbg !13939

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !13940

do.end:                                           ; preds = %do.cond
  %18 = load %struct._object*, %struct._object** %link, align 8, !dbg !13942, !tbaa !2683
  %19 = bitcast %struct._object* %18 to %struct.teedataobject*, !dbg !13943
  %20 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13944, !tbaa !2683
  %dataobj7 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %20, i32 0, i32 1, !dbg !13945
  store %struct.teedataobject* %19, %struct.teedataobject** %dataobj7, align 8, !dbg !13946, !tbaa !13814
  %21 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13947, !tbaa !2683
  %index8 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %21, i32 0, i32 2, !dbg !13948
  store i32 0, i32* %index8, align 4, !dbg !13949, !tbaa !13904
  br label %if.end.9, !dbg !13950

if.end.9:                                         ; preds = %do.end, %entry
  %22 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13951, !tbaa !2683
  %dataobj10 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %22, i32 0, i32 1, !dbg !13952
  %23 = load %struct.teedataobject*, %struct.teedataobject** %dataobj10, align 8, !dbg !13952, !tbaa !13814
  %24 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13953, !tbaa !2683
  %index11 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %24, i32 0, i32 2, !dbg !13954
  %25 = load i32, i32* %index11, align 4, !dbg !13954, !tbaa !13904
  %call12 = call %struct._object* @teedataobject_getitem(%struct.teedataobject* %23, i32 %25), !dbg !13955
  store %struct._object* %call12, %struct._object** %value, align 8, !dbg !13956, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %value, align 8, !dbg !13957, !tbaa !2683
  %cmp13 = icmp eq %struct._object* %26, null, !dbg !13959
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !13960

if.then.14:                                       ; preds = %if.end.9
  store %struct._object* null, %struct._object** %retval, !dbg !13961
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13961

if.end.15:                                        ; preds = %if.end.9
  %27 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !13962, !tbaa !2683
  %index16 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %27, i32 0, i32 2, !dbg !13963
  %28 = load i32, i32* %index16, align 4, !dbg !13964, !tbaa !13904
  %inc = add i32 %28, 1, !dbg !13964
  store i32 %inc, i32* %index16, align 4, !dbg !13964, !tbaa !13904
  %29 = load %struct._object*, %struct._object** %value, align 8, !dbg !13965, !tbaa !2683
  store %struct._object* %29, %struct._object** %retval, !dbg !13966
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13966

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.2
  %30 = bitcast %struct._object** %link to i8*, !dbg !13967
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !13967
  %31 = bitcast %struct._object** %value to i8*, !dbg !13967
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !13967
  %32 = load %struct._object*, %struct._object** %retval, !dbg !13967
  ret %struct._object* %32, !dbg !13967
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2343, metadata !2666), !dbg !13968
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2344, metadata !2666), !dbg !13969
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2345, metadata !2666), !dbg !13970
  %0 = bitcast %struct._object** %iterable to i8*, !dbg !13971
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13971
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !2346, metadata !2666), !dbg !13972
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13973, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i32 0, i32 0), i64 1, i64 1, %struct._object** %iterable), !dbg !13975
  %tobool = icmp ne i32 %call, 0, !dbg !13975
  br i1 %tobool, label %if.end, label %if.then, !dbg !13976

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13977
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13977

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !13978, !tbaa !2683
  %call1 = call %struct._object* @tee_fromiterable(%struct._object* %2), !dbg !13979
  store %struct._object* %call1, %struct._object** %retval, !dbg !13980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13980

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast %struct._object** %iterable to i8*, !dbg !13981
  call void @llvm.lifetime.end(i64 8, i8* %3) #1, !dbg !13981
  %4 = load %struct._object*, %struct._object** %retval, !dbg !13981
  ret %struct._object* %4, !dbg !13981
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_jumplink(%struct.teedataobject* %tdo) #0 {
entry:
  %tdo.addr = alloca %struct.teedataobject*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.teedataobject* %tdo, %struct.teedataobject** %tdo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo.addr, metadata !2306, metadata !2666), !dbg !13982
  %0 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !13983, !tbaa !2683
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %0, i32 0, i32 3, !dbg !13985
  %1 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !13985, !tbaa !13986
  %cmp = icmp eq %struct._object* %1, null, !dbg !13988
  br i1 %cmp, label %if.then, label %if.end, !dbg !13989

if.then:                                          ; preds = %entry
  %2 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !13990, !tbaa !2683
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %2, i32 0, i32 1, !dbg !13991
  %3 = load %struct._object*, %struct._object** %it, align 8, !dbg !13991, !tbaa !13992
  %call = call %struct._object* @teedataobject_newinternal(%struct._object* %3), !dbg !13993
  %4 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !13994, !tbaa !2683
  %nextlink1 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %4, i32 0, i32 3, !dbg !13995
  store %struct._object* %call, %struct._object** %nextlink1, align 8, !dbg !13996, !tbaa !13986
  br label %if.end, !dbg !13994

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !13997

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !13998
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !13998
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !2307, metadata !2666), !dbg !14000
  %6 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14001, !tbaa !2683
  %nextlink2 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %6, i32 0, i32 3, !dbg !14002
  %7 = load %struct._object*, %struct._object** %nextlink2, align 8, !dbg !14002, !tbaa !13986
  store %struct._object* %7, %struct._object** %_py_xincref_tmp, align 8, !dbg !14000, !tbaa !2683
  %8 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !14003, !tbaa !2683
  %cmp3 = icmp ne %struct._object* %8, null, !dbg !14005
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !14006

if.then.4:                                        ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !14007, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !14009
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !14010, !tbaa !2722
  %inc = add i64 %10, 1, !dbg !14010
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14010, !tbaa !2722
  br label %if.end.5, !dbg !14011

if.end.5:                                         ; preds = %if.then.4, %do.body
  %11 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !14012
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !14012
  br label %do.end, !dbg !14015

do.end:                                           ; preds = %if.end.5
  %12 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14016, !tbaa !2683
  %nextlink6 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %12, i32 0, i32 3, !dbg !14017
  %13 = load %struct._object*, %struct._object** %nextlink6, align 8, !dbg !14017, !tbaa !13986
  ret %struct._object* %13, !dbg !14018
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_getitem(%struct.teedataobject* %tdo, i32 %i) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tdo.addr = alloca %struct.teedataobject*, align 8
  %i.addr = alloca i32, align 4
  %value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.teedataobject* %tdo, %struct.teedataobject** %tdo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo.addr, metadata !2317, metadata !2666), !dbg !14019
  store i32 %i, i32* %i.addr, align 4, !tbaa !2691
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !2318, metadata !2666), !dbg !14020
  %0 = bitcast %struct._object** %value to i8*, !dbg !14021
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14021
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2319, metadata !2666), !dbg !14022
  %1 = load i32, i32* %i.addr, align 4, !dbg !14023, !tbaa !2691
  %2 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14025, !tbaa !2683
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %2, i32 0, i32 2, !dbg !14026
  %3 = load i32, i32* %numread, align 4, !dbg !14026, !tbaa !14027
  %cmp = icmp slt i32 %1, %3, !dbg !14028
  br i1 %cmp, label %if.then, label %if.else, !dbg !14029

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %i.addr, align 4, !dbg !14030, !tbaa !2691
  %idxprom = sext i32 %4 to i64, !dbg !14031
  %5 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14031, !tbaa !2683
  %values = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %5, i32 0, i32 4, !dbg !14032
  %arrayidx = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values, i32 0, i64 %idxprom, !dbg !14031
  %6 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !14031, !tbaa !2683
  store %struct._object* %6, %struct._object** %value, align 8, !dbg !14033, !tbaa !2683
  br label %if.end.7, !dbg !14034

if.else:                                          ; preds = %entry
  %7 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14035, !tbaa !2683
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %7, i32 0, i32 1, !dbg !14037
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !14037, !tbaa !13992
  %call = call %struct._object* @PyIter_Next(%struct._object* %8), !dbg !14038
  store %struct._object* %call, %struct._object** %value, align 8, !dbg !14039, !tbaa !2683
  %9 = load %struct._object*, %struct._object** %value, align 8, !dbg !14040, !tbaa !2683
  %cmp1 = icmp eq %struct._object* %9, null, !dbg !14042
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !14043

if.then.2:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !14044
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14044

if.end:                                           ; preds = %if.else
  %10 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14045, !tbaa !2683
  %numread3 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %10, i32 0, i32 2, !dbg !14046
  %11 = load i32, i32* %numread3, align 4, !dbg !14047, !tbaa !14027
  %inc = add i32 %11, 1, !dbg !14047
  store i32 %inc, i32* %numread3, align 4, !dbg !14047, !tbaa !14027
  %12 = load %struct._object*, %struct._object** %value, align 8, !dbg !14048, !tbaa !2683
  %13 = load i32, i32* %i.addr, align 4, !dbg !14049, !tbaa !2691
  %idxprom4 = sext i32 %13 to i64, !dbg !14050
  %14 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14050, !tbaa !2683
  %values5 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %14, i32 0, i32 4, !dbg !14051
  %arrayidx6 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values5, i32 0, i64 %idxprom4, !dbg !14050
  store %struct._object* %12, %struct._object** %arrayidx6, align 8, !dbg !14052, !tbaa !2683
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %if.then
  %15 = load %struct._object*, %struct._object** %value, align 8, !dbg !14053, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !14054
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !14055, !tbaa !2722
  %inc8 = add i64 %16, 1, !dbg !14055
  store i64 %inc8, i64* %ob_refcnt, align 8, !dbg !14055, !tbaa !2722
  %17 = load %struct._object*, %struct._object** %value, align 8, !dbg !14056, !tbaa !2683
  store %struct._object* %17, %struct._object** %retval, !dbg !14057
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14057

cleanup:                                          ; preds = %if.end.7, %if.then.2
  %18 = bitcast %struct._object** %value to i8*, !dbg !14058
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !14058
  %19 = load %struct._object*, %struct._object** %retval, !dbg !14058
  ret %struct._object* %19, !dbg !14058
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_newinternal(%struct._object* %it) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %it.addr = alloca %struct._object*, align 8
  %tdo = alloca %struct.teedataobject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %it, %struct._object** %it.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %it.addr, metadata !2311, metadata !2666), !dbg !14059
  %0 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !14060
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14060
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo, metadata !2312, metadata !2666), !dbg !14061
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @teedataobject_type), !dbg !14062
  %1 = bitcast %struct._object* %call to %struct.teedataobject*, !dbg !14063
  store %struct.teedataobject* %1, %struct.teedataobject** %tdo, align 8, !dbg !14064, !tbaa !2683
  %2 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14065, !tbaa !2683
  %cmp = icmp eq %struct.teedataobject* %2, null, !dbg !14067
  br i1 %cmp, label %if.then, label %if.end, !dbg !14068

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14069
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14069

if.end:                                           ; preds = %entry
  %3 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14070, !tbaa !2683
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %3, i32 0, i32 2, !dbg !14071
  store i32 0, i32* %numread, align 4, !dbg !14072, !tbaa !14027
  %4 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14073, !tbaa !2683
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %4, i32 0, i32 3, !dbg !14074
  store %struct._object* null, %struct._object** %nextlink, align 8, !dbg !14075, !tbaa !13986
  %5 = load %struct._object*, %struct._object** %it.addr, align 8, !dbg !14076, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !14077
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !14078, !tbaa !2722
  %inc = add i64 %6, 1, !dbg !14078
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14078, !tbaa !2722
  %7 = load %struct._object*, %struct._object** %it.addr, align 8, !dbg !14079, !tbaa !2683
  %8 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14080, !tbaa !2683
  %it1 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %8, i32 0, i32 1, !dbg !14081
  store %struct._object* %7, %struct._object** %it1, align 8, !dbg !14082, !tbaa !13992
  %9 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14083, !tbaa !2683
  %10 = bitcast %struct.teedataobject* %9 to i8*, !dbg !14083
  call void @PyObject_GC_Track(i8* %10), !dbg !14084
  %11 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14085, !tbaa !2683
  %12 = bitcast %struct.teedataobject* %11 to %struct._object*, !dbg !14086
  store %struct._object* %12, %struct._object** %retval, !dbg !14087
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14087

cleanup:                                          ; preds = %if.end, %if.then
  %13 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !14088
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !14088
  %14 = load %struct._object*, %struct._object** %retval, !dbg !14088
  ret %struct._object* %14, !dbg !14088
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_copy(%struct.teeobject* %to) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %to.addr = alloca %struct.teeobject*, align 8
  %newto = alloca %struct.teeobject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2322, metadata !2666), !dbg !14089
  %0 = bitcast %struct.teeobject** %newto to i8*, !dbg !14090
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14090
  call void @llvm.dbg.declare(metadata %struct.teeobject** %newto, metadata !2323, metadata !2666), !dbg !14091
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @tee_type), !dbg !14092
  %1 = bitcast %struct._object* %call to %struct.teeobject*, !dbg !14093
  store %struct.teeobject* %1, %struct.teeobject** %newto, align 8, !dbg !14094, !tbaa !2683
  %2 = load %struct.teeobject*, %struct.teeobject** %newto, align 8, !dbg !14095, !tbaa !2683
  %cmp = icmp eq %struct.teeobject* %2, null, !dbg !14097
  br i1 %cmp, label %if.then, label %if.end, !dbg !14098

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14099
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14099

if.end:                                           ; preds = %entry
  %3 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14100, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %3, i32 0, i32 1, !dbg !14101
  %4 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !14101, !tbaa !13814
  %5 = bitcast %struct.teedataobject* %4 to %struct._object*, !dbg !14102
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !14103
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !14104, !tbaa !2722
  %inc = add i64 %6, 1, !dbg !14104
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14104, !tbaa !2722
  %7 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14105, !tbaa !2683
  %dataobj1 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %7, i32 0, i32 1, !dbg !14106
  %8 = load %struct.teedataobject*, %struct.teedataobject** %dataobj1, align 8, !dbg !14106, !tbaa !13814
  %9 = load %struct.teeobject*, %struct.teeobject** %newto, align 8, !dbg !14107, !tbaa !2683
  %dataobj2 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %9, i32 0, i32 1, !dbg !14108
  store %struct.teedataobject* %8, %struct.teedataobject** %dataobj2, align 8, !dbg !14109, !tbaa !13814
  %10 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14110, !tbaa !2683
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %10, i32 0, i32 2, !dbg !14111
  %11 = load i32, i32* %index, align 4, !dbg !14111, !tbaa !13904
  %12 = load %struct.teeobject*, %struct.teeobject** %newto, align 8, !dbg !14112, !tbaa !2683
  %index3 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %12, i32 0, i32 2, !dbg !14113
  store i32 %11, i32* %index3, align 4, !dbg !14114, !tbaa !13904
  %13 = load %struct.teeobject*, %struct.teeobject** %newto, align 8, !dbg !14115, !tbaa !2683
  %weakreflist = getelementptr inbounds %struct.teeobject, %struct.teeobject* %13, i32 0, i32 3, !dbg !14116
  store %struct._object* null, %struct._object** %weakreflist, align 8, !dbg !14117, !tbaa !13847
  %14 = load %struct.teeobject*, %struct.teeobject** %newto, align 8, !dbg !14118, !tbaa !2683
  %15 = bitcast %struct.teeobject* %14 to i8*, !dbg !14118
  call void @PyObject_GC_Track(i8* %15), !dbg !14119
  %16 = load %struct.teeobject*, %struct.teeobject** %newto, align 8, !dbg !14120, !tbaa !2683
  %17 = bitcast %struct.teeobject* %16 to %struct._object*, !dbg !14121
  store %struct._object* %17, %struct._object** %retval, !dbg !14122
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14122

cleanup:                                          ; preds = %if.end, %if.then
  %18 = bitcast %struct.teeobject** %newto to i8*, !dbg !14123
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !14123
  %19 = load %struct._object*, %struct._object** %retval, !dbg !14123
  ret %struct._object* %19, !dbg !14123
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_reduce(%struct.teeobject* %to) #0 {
entry:
  %to.addr = alloca %struct.teeobject*, align 8
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2326, metadata !2666), !dbg !14124
  %0 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14125, !tbaa !2683
  %1 = bitcast %struct.teeobject* %0 to %struct._object*, !dbg !14126
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !14127
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14127, !tbaa !2675
  %3 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14128, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %3, i32 0, i32 1, !dbg !14129
  %4 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !14129, !tbaa !13814
  %5 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14130, !tbaa !2683
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %5, i32 0, i32 2, !dbg !14131
  %6 = load i32, i32* %index, align 4, !dbg !14131, !tbaa !13904
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100, i32 0, i32 0), %struct._typeobject* %2, %struct.teedataobject* %4, i32 %6), !dbg !14132
  ret %struct._object* %call, !dbg !14133
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_setstate(%struct.teeobject* %to, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %to.addr = alloca %struct.teeobject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %tdo = alloca %struct.teedataobject*, align 8
  %index = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.teeobject* %to, %struct.teeobject** %to.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to.addr, metadata !2331, metadata !2666), !dbg !14134
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !2332, metadata !2666), !dbg !14135
  %0 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !14136
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14136
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo, metadata !2333, metadata !2666), !dbg !14137
  %1 = bitcast i32* %index to i8*, !dbg !14138
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !14138
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2334, metadata !2666), !dbg !14139
  %2 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !14140, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), %struct._typeobject* @teedataobject_type, %struct.teedataobject** %tdo, i32* %index), !dbg !14142
  %tobool = icmp ne i32 %call, 0, !dbg !14142
  br i1 %tobool, label %if.end, label %if.then, !dbg !14143

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14144
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14144

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %index, align 4, !dbg !14145, !tbaa !2691
  %cmp = icmp slt i32 %3, 0, !dbg !14147
  br i1 %cmp, label %if.then.2, label %lor.lhs.false, !dbg !14148

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %index, align 4, !dbg !14149, !tbaa !2691
  %cmp1 = icmp sgt i32 %4, 57, !dbg !14151
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !14152

if.then.2:                                        ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14153, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i32 0, i32 0)), !dbg !14155
  store %struct._object* null, %struct._object** %retval, !dbg !14156
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14156

if.end.3:                                         ; preds = %lor.lhs.false
  br label %do.body, !dbg !14157

do.body:                                          ; preds = %if.end.3
  %6 = bitcast %struct._object** %_py_tmp to i8*, !dbg !14158
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !14158
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2335, metadata !2666), !dbg !14160
  %7 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14161, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %7, i32 0, i32 1, !dbg !14162
  %8 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !14162, !tbaa !13814
  %9 = bitcast %struct.teedataobject* %8 to %struct._object*, !dbg !14163
  store %struct._object* %9, %struct._object** %_py_tmp, align 8, !dbg !14160, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !14164, !tbaa !2683
  %cmp4 = icmp ne %struct._object* %10, null, !dbg !14165
  br i1 %cmp4, label %if.then.5, label %if.end.11, !dbg !14166

if.then.5:                                        ; preds = %do.body
  %11 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14167, !tbaa !2683
  %dataobj6 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %11, i32 0, i32 1, !dbg !14169
  store %struct.teedataobject* null, %struct.teedataobject** %dataobj6, align 8, !dbg !14170, !tbaa !13814
  br label %do.body.7, !dbg !14171

do.body.7:                                        ; preds = %if.then.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14172
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !14172
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2337, metadata !2666), !dbg !14174
  %13 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !14175, !tbaa !2683
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !14174, !tbaa !2683
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14176, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !14178
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !14179, !tbaa !2722
  %dec = add i64 %15, -1, !dbg !14179
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14179, !tbaa !2722
  %cmp8 = icmp ne i64 %dec, 0, !dbg !14180
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !14181

if.then.9:                                        ; preds = %do.body.7
  br label %if.end.10, !dbg !14182

if.else:                                          ; preds = %do.body.7
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14184, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !14186
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14186, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !14187
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14187, !tbaa !2768
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14188, !tbaa !2683
  call void %18(%struct._object* %19), !dbg !14189
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14190
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !14190
  br label %do.cond, !dbg !14192

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !14193

do.end:                                           ; preds = %do.cond
  br label %if.end.11, !dbg !14195

if.end.11:                                        ; preds = %do.end, %do.body
  %21 = bitcast %struct._object** %_py_tmp to i8*, !dbg !14197
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !14197
  br label %do.cond.12, !dbg !14200

do.cond.12:                                       ; preds = %if.end.11
  br label %do.end.13, !dbg !14201

do.end.13:                                        ; preds = %do.cond.12
  %22 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14203, !tbaa !2683
  %23 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14204, !tbaa !2683
  %dataobj14 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %23, i32 0, i32 1, !dbg !14205
  store %struct.teedataobject* %22, %struct.teedataobject** %dataobj14, align 8, !dbg !14206, !tbaa !13814
  %24 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14207, !tbaa !2683
  %dataobj15 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %24, i32 0, i32 1, !dbg !14208
  %25 = load %struct.teedataobject*, %struct.teedataobject** %dataobj15, align 8, !dbg !14208, !tbaa !13814
  %26 = bitcast %struct.teedataobject* %25 to %struct._object*, !dbg !14209
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !14210
  %27 = load i64, i64* %ob_refcnt16, align 8, !dbg !14211, !tbaa !2722
  %inc = add i64 %27, 1, !dbg !14211
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !14211, !tbaa !2722
  %28 = load i32, i32* %index, align 4, !dbg !14212, !tbaa !2691
  %29 = load %struct.teeobject*, %struct.teeobject** %to.addr, align 8, !dbg !14213, !tbaa !2683
  %index17 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %29, i32 0, i32 2, !dbg !14214
  store i32 %28, i32* %index17, align 4, !dbg !14215, !tbaa !13904
  %30 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !14216, !tbaa !2722
  %inc18 = add i64 %30, 1, !dbg !14216
  store i64 %inc18, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !14216, !tbaa !2722
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !14217
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14217

cleanup:                                          ; preds = %do.end.13, %if.then.2, %if.then
  %31 = bitcast i32* %index to i8*, !dbg !14218
  call void @llvm.lifetime.end(i64 4, i8* %31) #1, !dbg !14218
  %32 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !14218
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !14218
  %33 = load %struct._object*, %struct._object** %retval, !dbg !14218
  ret %struct._object* %33, !dbg !14218
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_fromiterable(%struct._object* %iterable) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %iterable.addr = alloca %struct._object*, align 8
  %to = alloca %struct.teeobject*, align 8
  %it = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %iterable, %struct._object** %iterable.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %iterable.addr, metadata !2349, metadata !2666), !dbg !14219
  %0 = bitcast %struct.teeobject** %to to i8*, !dbg !14220
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14220
  call void @llvm.dbg.declare(metadata %struct.teeobject** %to, metadata !2350, metadata !2666), !dbg !14221
  %1 = bitcast %struct._object** %it to i8*, !dbg !14222
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14222
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !2351, metadata !2666), !dbg !14223
  store %struct._object* null, %struct._object** %it, align 8, !dbg !14223, !tbaa !2683
  %2 = load %struct._object*, %struct._object** %iterable.addr, align 8, !dbg !14224, !tbaa !2683
  %call = call %struct._object* @PyObject_GetIter(%struct._object* %2), !dbg !14225
  store %struct._object* %call, %struct._object** %it, align 8, !dbg !14226, !tbaa !2683
  %3 = load %struct._object*, %struct._object** %it, align 8, !dbg !14227, !tbaa !2683
  %cmp = icmp eq %struct._object* %3, null, !dbg !14229
  br i1 %cmp, label %if.then, label %if.end, !dbg !14230

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14231
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14231

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !14232, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !14234
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14234, !tbaa !2675
  %cmp1 = icmp eq %struct._typeobject* %5, @tee_type, !dbg !14235
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false, !dbg !14236

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %it, align 8, !dbg !14237, !tbaa !2683
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !14239
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !14239, !tbaa !2675
  %call3 = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @tee_type), !dbg !14240
  %tobool = icmp ne i32 %call3, 0, !dbg !14240
  br i1 %tobool, label %if.then.4, label %if.end.6, !dbg !14241

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._object*, %struct._object** %it, align 8, !dbg !14242, !tbaa !2683
  %9 = bitcast %struct._object* %8 to %struct.teeobject*, !dbg !14244
  %call5 = call %struct._object* @tee_copy(%struct.teeobject* %9), !dbg !14245
  %10 = bitcast %struct._object* %call5 to %struct.teeobject*, !dbg !14246
  store %struct.teeobject* %10, %struct.teeobject** %to, align 8, !dbg !14247, !tbaa !2683
  br label %done, !dbg !14248

if.end.6:                                         ; preds = %lor.lhs.false
  %call7 = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @tee_type), !dbg !14249
  %11 = bitcast %struct._object* %call7 to %struct.teeobject*, !dbg !14250
  store %struct.teeobject* %11, %struct.teeobject** %to, align 8, !dbg !14251, !tbaa !2683
  %12 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14252, !tbaa !2683
  %cmp8 = icmp eq %struct.teeobject* %12, null, !dbg !14254
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !14255

if.then.9:                                        ; preds = %if.end.6
  br label %done, !dbg !14256

if.end.10:                                        ; preds = %if.end.6
  %13 = load %struct._object*, %struct._object** %it, align 8, !dbg !14257, !tbaa !2683
  %call11 = call %struct._object* @teedataobject_newinternal(%struct._object* %13), !dbg !14258
  %14 = bitcast %struct._object* %call11 to %struct.teedataobject*, !dbg !14259
  %15 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14260, !tbaa !2683
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %15, i32 0, i32 1, !dbg !14261
  store %struct.teedataobject* %14, %struct.teedataobject** %dataobj, align 8, !dbg !14262, !tbaa !13814
  %16 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14263, !tbaa !2683
  %dataobj12 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %16, i32 0, i32 1, !dbg !14265
  %17 = load %struct.teedataobject*, %struct.teedataobject** %dataobj12, align 8, !dbg !14265, !tbaa !13814
  %tobool13 = icmp ne %struct.teedataobject* %17, null, !dbg !14263
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !14266

if.then.14:                                       ; preds = %if.end.10
  %18 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14267, !tbaa !2683
  %19 = bitcast %struct.teeobject* %18 to i8*, !dbg !14267
  call void @PyObject_GC_Del(i8* %19), !dbg !14269
  store %struct.teeobject* null, %struct.teeobject** %to, align 8, !dbg !14270, !tbaa !2683
  br label %done, !dbg !14271

if.end.15:                                        ; preds = %if.end.10
  %20 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14272, !tbaa !2683
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %20, i32 0, i32 2, !dbg !14273
  store i32 0, i32* %index, align 4, !dbg !14274, !tbaa !13904
  %21 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14275, !tbaa !2683
  %weakreflist = getelementptr inbounds %struct.teeobject, %struct.teeobject* %21, i32 0, i32 3, !dbg !14276
  store %struct._object* null, %struct._object** %weakreflist, align 8, !dbg !14277, !tbaa !13847
  %22 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14278, !tbaa !2683
  %23 = bitcast %struct.teeobject* %22 to i8*, !dbg !14278
  call void @PyObject_GC_Track(i8* %23), !dbg !14279
  br label %done, !dbg !14279

done:                                             ; preds = %if.end.15, %if.then.14, %if.then.9, %if.then.4
  br label %do.body, !dbg !14280

do.body:                                          ; preds = %done
  %24 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14281
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !14281
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2352, metadata !2666), !dbg !14283
  %25 = load %struct._object*, %struct._object** %it, align 8, !dbg !14284, !tbaa !2683
  store %struct._object* %25, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14283, !tbaa !2683
  %26 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14285, !tbaa !2683
  %cmp16 = icmp ne %struct._object* %26, null, !dbg !14286
  br i1 %cmp16, label %if.then.17, label %if.end.23, !dbg !14287

if.then.17:                                       ; preds = %do.body
  br label %do.body.18, !dbg !14288

do.body.18:                                       ; preds = %if.then.17
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14290
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !14290
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2354, metadata !2666), !dbg !14292
  %28 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14293, !tbaa !2683
  store %struct._object* %28, %struct._object** %_py_decref_tmp, align 8, !dbg !14292, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14294, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !14296
  %30 = load i64, i64* %ob_refcnt, align 8, !dbg !14297, !tbaa !2722
  %dec = add i64 %30, -1, !dbg !14297
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14297, !tbaa !2722
  %cmp19 = icmp ne i64 %dec, 0, !dbg !14298
  br i1 %cmp19, label %if.then.20, label %if.else, !dbg !14299

if.then.20:                                       ; preds = %do.body.18
  br label %if.end.22, !dbg !14300

if.else:                                          ; preds = %do.body.18
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14302, !tbaa !2683
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !14304
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !14304, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !14305
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14305, !tbaa !2768
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14306, !tbaa !2683
  call void %33(%struct._object* %34), !dbg !14307
  br label %if.end.22

if.end.22:                                        ; preds = %if.else, %if.then.20
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14308
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !14308
  br label %do.cond, !dbg !14310

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !14311

do.end:                                           ; preds = %do.cond
  br label %if.end.23, !dbg !14313

if.end.23:                                        ; preds = %do.end, %do.body
  %36 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14315
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !14315
  br label %do.cond.24, !dbg !14318

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !14319

do.end.25:                                        ; preds = %do.cond.24
  %37 = load %struct.teeobject*, %struct.teeobject** %to, align 8, !dbg !14321, !tbaa !2683
  %38 = bitcast %struct.teeobject* %37 to %struct._object*, !dbg !14322
  store %struct._object* %38, %struct._object** %retval, !dbg !14323
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14323

cleanup:                                          ; preds = %do.end.25, %if.then
  %39 = bitcast %struct._object** %it to i8*, !dbg !14324
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !14324
  %40 = bitcast %struct.teeobject** %to to i8*, !dbg !14324
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !14324
  %41 = load %struct._object*, %struct._object** %retval, !dbg !14324
  ret %struct._object* %41, !dbg !14324
}

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #3

; Function Attrs: nounwind uwtable
define internal void @teedataobject_dealloc(%struct.teedataobject* %tdo) #0 {
entry:
  %tdo.addr = alloca %struct.teedataobject*, align 8
  store %struct.teedataobject* %tdo, %struct.teedataobject** %tdo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo.addr, metadata !2361, metadata !2666), !dbg !14325
  %0 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14326, !tbaa !2683
  %1 = bitcast %struct.teedataobject* %0 to i8*, !dbg !14326
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !14327
  %2 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14328, !tbaa !2683
  %call = call i32 @teedataobject_clear(%struct.teedataobject* %2), !dbg !14329
  %3 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14330, !tbaa !2683
  %4 = bitcast %struct.teedataobject* %3 to i8*, !dbg !14330
  call void @PyObject_GC_Del(i8* %4), !dbg !14331
  ret void, !dbg !14332
}

; Function Attrs: nounwind uwtable
define internal i32 @teedataobject_traverse(%struct.teedataobject* %tdo, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %tdo.addr = alloca %struct.teedataobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret25 = alloca i32, align 4
  store %struct.teedataobject* %tdo, %struct.teedataobject** %tdo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo.addr, metadata !2366, metadata !2666), !dbg !14333
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !2367, metadata !2666), !dbg !14334
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2368, metadata !2666), !dbg !14335
  %0 = bitcast i32* %i to i8*, !dbg !14336
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !14336
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2369, metadata !2666), !dbg !14337
  br label %do.body, !dbg !14338

do.body:                                          ; preds = %entry
  %1 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14339, !tbaa !2683
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %1, i32 0, i32 1, !dbg !14341
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !14341, !tbaa !13992
  %tobool = icmp ne %struct._object* %2, null, !dbg !14342
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !14343

if.then:                                          ; preds = %do.body
  %3 = bitcast i32* %vret to i8*, !dbg !14344
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !14344
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !2370, metadata !2666), !dbg !14346
  %4 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !14347, !tbaa !2683
  %5 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14348, !tbaa !2683
  %it1 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %5, i32 0, i32 1, !dbg !14349
  %6 = load %struct._object*, %struct._object** %it1, align 8, !dbg !14349, !tbaa !13992
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14350, !tbaa !2683
  %call = call i32 %4(%struct._object* %6, i8* %7), !dbg !14347
  store i32 %call, i32* %vret, align 4, !dbg !14346, !tbaa !2691
  %8 = load i32, i32* %vret, align 4, !dbg !14351, !tbaa !2691
  %tobool2 = icmp ne i32 %8, 0, !dbg !14351
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !14353

if.then.3:                                        ; preds = %if.then
  %9 = load i32, i32* %vret, align 4, !dbg !14354, !tbaa !2691
  store i32 %9, i32* %retval, !dbg !14356
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14356

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !14357
  br label %cleanup, !dbg !14357

cleanup:                                          ; preds = %if.end, %if.then.3
  %10 = bitcast i32* %vret to i8*, !dbg !14359
  call void @llvm.lifetime.end(i64 4, i8* %10) #1, !dbg !14359
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.4, !dbg !14362

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.cond, !dbg !14363

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !14366

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %i, align 4, !dbg !14368, !tbaa !2691
  br label %for.cond, !dbg !14369

for.cond:                                         ; preds = %for.inc, %do.end
  %11 = load i32, i32* %i, align 4, !dbg !14370, !tbaa !2691
  %12 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14373, !tbaa !2683
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %12, i32 0, i32 2, !dbg !14374
  %13 = load i32, i32* %numread, align 4, !dbg !14374, !tbaa !14027
  %cmp = icmp slt i32 %11, %13, !dbg !14375
  br i1 %cmp, label %for.body, label %for.end, !dbg !14376

for.body:                                         ; preds = %for.cond
  br label %do.body.5, !dbg !14377

do.body.5:                                        ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !14378, !tbaa !2691
  %idxprom = sext i32 %14 to i64, !dbg !14380
  %15 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14380, !tbaa !2683
  %values = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %15, i32 0, i32 4, !dbg !14381
  %arrayidx = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values, i32 0, i64 %idxprom, !dbg !14380
  %16 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !14380, !tbaa !2683
  %tobool6 = icmp ne %struct._object* %16, null, !dbg !14380
  br i1 %tobool6, label %if.then.7, label %if.end.19, !dbg !14382

if.then.7:                                        ; preds = %do.body.5
  %17 = bitcast i32* %vret8 to i8*, !dbg !14383
  call void @llvm.lifetime.start(i64 4, i8* %17) #1, !dbg !14383
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !2374, metadata !2666), !dbg !14385
  %18 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !14386, !tbaa !2683
  %19 = load i32, i32* %i, align 4, !dbg !14387, !tbaa !2691
  %idxprom9 = sext i32 %19 to i64, !dbg !14388
  %20 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14388, !tbaa !2683
  %values10 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %20, i32 0, i32 4, !dbg !14389
  %arrayidx11 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values10, i32 0, i64 %idxprom9, !dbg !14388
  %21 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !14388, !tbaa !2683
  %22 = load i8*, i8** %arg.addr, align 8, !dbg !14390, !tbaa !2683
  %call12 = call i32 %18(%struct._object* %21, i8* %22), !dbg !14386
  store i32 %call12, i32* %vret8, align 4, !dbg !14385, !tbaa !2691
  %23 = load i32, i32* %vret8, align 4, !dbg !14391, !tbaa !2691
  %tobool13 = icmp ne i32 %23, 0, !dbg !14391
  br i1 %tobool13, label %if.then.14, label %if.end.15, !dbg !14393

if.then.14:                                       ; preds = %if.then.7
  %24 = load i32, i32* %vret8, align 4, !dbg !14394, !tbaa !2691
  store i32 %24, i32* %retval, !dbg !14396
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.16, !dbg !14396

if.end.15:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !14397
  br label %cleanup.16, !dbg !14397

cleanup.16:                                       ; preds = %if.end.15, %if.then.14
  %25 = bitcast i32* %vret8 to i8*, !dbg !14399
  call void @llvm.lifetime.end(i64 4, i8* %25) #1, !dbg !14399
  %cleanup.dest.17 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.16
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.17, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.18, label %NewDefault.1

cleanup.cont.18:                                  ; preds = %LeafBlock.2
  br label %if.end.19, !dbg !14402

if.end.19:                                        ; preds = %cleanup.cont.18, %do.body.5
  br label %do.cond.20, !dbg !14403

do.cond.20:                                       ; preds = %if.end.19
  br label %do.end.21, !dbg !14406

do.end.21:                                        ; preds = %do.cond.20
  br label %for.inc, !dbg !14408

for.inc:                                          ; preds = %do.end.21
  %26 = load i32, i32* %i, align 4, !dbg !14410, !tbaa !2691
  %inc = add i32 %26, 1, !dbg !14410
  store i32 %inc, i32* %i, align 4, !dbg !14410, !tbaa !2691
  br label %for.cond, !dbg !14411

for.end:                                          ; preds = %for.cond
  br label %do.body.22, !dbg !14412

do.body.22:                                       ; preds = %for.end
  %27 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14413, !tbaa !2683
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %27, i32 0, i32 3, !dbg !14415
  %28 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !14415, !tbaa !13986
  %tobool23 = icmp ne %struct._object* %28, null, !dbg !14416
  br i1 %tobool23, label %if.then.24, label %if.end.34, !dbg !14417

if.then.24:                                       ; preds = %do.body.22
  %29 = bitcast i32* %vret25 to i8*, !dbg !14418
  call void @llvm.lifetime.start(i64 4, i8* %29) #1, !dbg !14418
  call void @llvm.dbg.declare(metadata i32* %vret25, metadata !2380, metadata !2666), !dbg !14420
  %30 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !14421, !tbaa !2683
  %31 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14422, !tbaa !2683
  %nextlink26 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %31, i32 0, i32 3, !dbg !14423
  %32 = load %struct._object*, %struct._object** %nextlink26, align 8, !dbg !14423, !tbaa !13986
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !14424, !tbaa !2683
  %call27 = call i32 %30(%struct._object* %32, i8* %33), !dbg !14421
  store i32 %call27, i32* %vret25, align 4, !dbg !14420, !tbaa !2691
  %34 = load i32, i32* %vret25, align 4, !dbg !14425, !tbaa !2691
  %tobool28 = icmp ne i32 %34, 0, !dbg !14425
  br i1 %tobool28, label %if.then.29, label %if.end.30, !dbg !14427

if.then.29:                                       ; preds = %if.then.24
  %35 = load i32, i32* %vret25, align 4, !dbg !14428, !tbaa !2691
  store i32 %35, i32* %retval, !dbg !14430
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.31, !dbg !14430

if.end.30:                                        ; preds = %if.then.24
  store i32 0, i32* %cleanup.dest.slot, !dbg !14431
  br label %cleanup.31, !dbg !14431

cleanup.31:                                       ; preds = %if.end.30, %if.then.29
  %36 = bitcast i32* %vret25 to i8*, !dbg !14433
  call void @llvm.lifetime.end(i64 4, i8* %36) #1, !dbg !14433
  %cleanup.dest.32 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.31
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.32, 0
  br i1 %SwitchLeaf6, label %cleanup.cont.33, label %NewDefault.4

cleanup.cont.33:                                  ; preds = %LeafBlock.5
  br label %if.end.34, !dbg !14436

if.end.34:                                        ; preds = %cleanup.cont.33, %do.body.22
  br label %do.cond.35, !dbg !14437

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !14440

do.end.36:                                        ; preds = %do.cond.35
  store i32 0, i32* %retval, !dbg !14442
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.37, !dbg !14442

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.37

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.37

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.37

cleanup.37:                                       ; preds = %NewDefault.4, %NewDefault.1, %NewDefault, %do.end.36
  %37 = bitcast i32* %i to i8*, !dbg !14443
  call void @llvm.lifetime.end(i64 4, i8* %37) #1, !dbg !14443
  %38 = load i32, i32* %retval, !dbg !14443
  ret i32 %38, !dbg !14443
}

; Function Attrs: nounwind uwtable
define internal i32 @teedataobject_clear(%struct.teedataobject* %tdo) #0 {
entry:
  %tdo.addr = alloca %struct.teedataobject*, align 8
  %i = alloca i32, align 4
  %tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp13 = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  store %struct.teedataobject* %tdo, %struct.teedataobject** %tdo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo.addr, metadata !2388, metadata !2666), !dbg !14444
  %0 = bitcast i32* %i to i8*, !dbg !14445
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !14445
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2389, metadata !2666), !dbg !14446
  %1 = bitcast %struct._object** %tmp to i8*, !dbg !14447
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14447
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !2390, metadata !2666), !dbg !14448
  br label %do.body, !dbg !14449

do.body:                                          ; preds = %entry
  %2 = bitcast %struct._object** %_py_tmp to i8*, !dbg !14450
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !14450
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2391, metadata !2666), !dbg !14452
  %3 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14453, !tbaa !2683
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %3, i32 0, i32 1, !dbg !14454
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !14454, !tbaa !13992
  store %struct._object* %4, %struct._object** %_py_tmp, align 8, !dbg !14452, !tbaa !2683
  %5 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !14455, !tbaa !2683
  %cmp = icmp ne %struct._object* %5, null, !dbg !14456
  br i1 %cmp, label %if.then, label %if.end.7, !dbg !14457

if.then:                                          ; preds = %do.body
  %6 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14458, !tbaa !2683
  %it2 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %6, i32 0, i32 1, !dbg !14460
  store %struct._object* null, %struct._object** %it2, align 8, !dbg !14461, !tbaa !13992
  br label %do.body.3, !dbg !14462

do.body.3:                                        ; preds = %if.then
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14463
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !14463
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2393, metadata !2666), !dbg !14465
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !14466, !tbaa !2683
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !14465, !tbaa !2683
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14467, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !14469
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !14470, !tbaa !2722
  %dec = add i64 %10, -1, !dbg !14470
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14470, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !14471
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !14472

if.then.6:                                        ; preds = %do.body.3
  br label %if.end, !dbg !14473

if.else:                                          ; preds = %do.body.3
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14475, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !14477
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14477, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !14478
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14478, !tbaa !2768
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14479, !tbaa !2683
  call void %13(%struct._object* %14), !dbg !14480
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14481
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !14481
  br label %do.cond, !dbg !14483

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !14484

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !14486

if.end.7:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_tmp to i8*, !dbg !14488
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !14488
  br label %do.cond.8, !dbg !14491

do.cond.8:                                        ; preds = %if.end.7
  br label %do.end.9, !dbg !14492

do.end.9:                                         ; preds = %do.cond.8
  store i32 0, i32* %i, align 4, !dbg !14494, !tbaa !2691
  br label %for.cond, !dbg !14495

for.cond:                                         ; preds = %for.inc, %do.end.9
  %17 = load i32, i32* %i, align 4, !dbg !14496, !tbaa !2691
  %18 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14499, !tbaa !2683
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %18, i32 0, i32 2, !dbg !14500
  %19 = load i32, i32* %numread, align 4, !dbg !14500, !tbaa !14027
  %cmp10 = icmp slt i32 %17, %19, !dbg !14501
  br i1 %cmp10, label %for.body, label %for.end, !dbg !14502

for.body:                                         ; preds = %for.cond
  br label %do.body.11, !dbg !14503

do.body.11:                                       ; preds = %for.body
  %20 = bitcast %struct._object** %_py_tmp13 to i8*, !dbg !14504
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !14504
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp13, metadata !2397, metadata !2666), !dbg !14506
  %21 = load i32, i32* %i, align 4, !dbg !14507, !tbaa !2691
  %idxprom = sext i32 %21 to i64, !dbg !14508
  %22 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14508, !tbaa !2683
  %values = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %22, i32 0, i32 4, !dbg !14509
  %arrayidx = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values, i32 0, i64 %idxprom, !dbg !14508
  %23 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !14508, !tbaa !2683
  store %struct._object* %23, %struct._object** %_py_tmp13, align 8, !dbg !14506, !tbaa !2683
  %24 = load %struct._object*, %struct._object** %_py_tmp13, align 8, !dbg !14510, !tbaa !2683
  %cmp14 = icmp ne %struct._object* %24, null, !dbg !14511
  br i1 %cmp14, label %if.then.15, label %if.end.32, !dbg !14512

if.then.15:                                       ; preds = %do.body.11
  %25 = load i32, i32* %i, align 4, !dbg !14513, !tbaa !2691
  %idxprom16 = sext i32 %25 to i64, !dbg !14515
  %26 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14515, !tbaa !2683
  %values17 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %26, i32 0, i32 4, !dbg !14516
  %arrayidx18 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values17, i32 0, i64 %idxprom16, !dbg !14515
  store %struct._object* null, %struct._object** %arrayidx18, align 8, !dbg !14517, !tbaa !2683
  br label %do.body.19, !dbg !14518

do.body.19:                                       ; preds = %if.then.15
  %27 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !14519
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !14519
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp21, metadata !2401, metadata !2666), !dbg !14521
  %28 = load %struct._object*, %struct._object** %_py_tmp13, align 8, !dbg !14522, !tbaa !2683
  store %struct._object* %28, %struct._object** %_py_decref_tmp21, align 8, !dbg !14521, !tbaa !2683
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !14523, !tbaa !2683
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !14525
  %30 = load i64, i64* %ob_refcnt22, align 8, !dbg !14526, !tbaa !2722
  %dec23 = add i64 %30, -1, !dbg !14526
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !14526, !tbaa !2722
  %cmp24 = icmp ne i64 %dec23, 0, !dbg !14527
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !14528

if.then.25:                                       ; preds = %do.body.19
  br label %if.end.29, !dbg !14529

if.else.26:                                       ; preds = %do.body.19
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !14531, !tbaa !2683
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !14533
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !14533, !tbaa !2675
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !14534
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !14534, !tbaa !2768
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !14535, !tbaa !2683
  call void %33(%struct._object* %34), !dbg !14536
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %35 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !14537
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !14537
  br label %do.cond.30, !dbg !14539

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !14540

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.32, !dbg !14542

if.end.32:                                        ; preds = %do.end.31, %do.body.11
  %36 = bitcast %struct._object** %_py_tmp13 to i8*, !dbg !14544
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !14544
  br label %do.cond.33, !dbg !14547

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !14548

do.end.34:                                        ; preds = %do.cond.33
  br label %for.inc, !dbg !14550

for.inc:                                          ; preds = %do.end.34
  %37 = load i32, i32* %i, align 4, !dbg !14552, !tbaa !2691
  %inc = add i32 %37, 1, !dbg !14552
  store i32 %inc, i32* %i, align 4, !dbg !14552, !tbaa !2691
  br label %for.cond, !dbg !14553

for.end:                                          ; preds = %for.cond
  %38 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14554, !tbaa !2683
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %38, i32 0, i32 3, !dbg !14555
  %39 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !14555, !tbaa !13986
  store %struct._object* %39, %struct._object** %tmp, align 8, !dbg !14556, !tbaa !2683
  %40 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14557, !tbaa !2683
  %nextlink35 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %40, i32 0, i32 3, !dbg !14558
  store %struct._object* null, %struct._object** %nextlink35, align 8, !dbg !14559, !tbaa !13986
  %41 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !14560, !tbaa !2683
  call void @teedataobject_safe_decref(%struct._object* %41), !dbg !14561
  %42 = bitcast %struct._object** %tmp to i8*, !dbg !14562
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !14562
  %43 = bitcast i32* %i to i8*, !dbg !14562
  call void @llvm.lifetime.end(i64 4, i8* %43) #1, !dbg !14562
  ret i32 0, !dbg !14563
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %tdo = alloca %struct.teedataobject*, align 8
  %it = alloca %struct._object*, align 8
  %values = alloca %struct._object*, align 8
  %next = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2424, metadata !2666), !dbg !14564
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2425, metadata !2666), !dbg !14565
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2426, metadata !2666), !dbg !14566
  %0 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !14567
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14567
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo, metadata !2427, metadata !2666), !dbg !14568
  %1 = bitcast %struct._object** %it to i8*, !dbg !14569
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14569
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !2428, metadata !2666), !dbg !14570
  %2 = bitcast %struct._object** %values to i8*, !dbg !14569
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !14569
  call void @llvm.dbg.declare(metadata %struct._object** %values, metadata !2429, metadata !2666), !dbg !14571
  %3 = bitcast %struct._object** %next to i8*, !dbg !14569
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !14569
  call void @llvm.dbg.declare(metadata %struct._object** %next, metadata !2430, metadata !2666), !dbg !14572
  %4 = bitcast i64* %i to i8*, !dbg !14573
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !14573
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2431, metadata !2666), !dbg !14574
  %5 = bitcast i64* %len to i8*, !dbg !14573
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !14573
  call void @llvm.dbg.declare(metadata i64* %len, metadata !2432, metadata !2666), !dbg !14575
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14576, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0), %struct._object** %it, %struct._typeobject* @PyList_Type, %struct._object** %values, %struct._object** %next), !dbg !14578
  %tobool = icmp ne i32 %call, 0, !dbg !14578
  br i1 %tobool, label %if.end, label %if.then, !dbg !14579

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14580
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14580

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %it, align 8, !dbg !14581, !tbaa !2683
  %call1 = call %struct._object* @teedataobject_newinternal(%struct._object* %7), !dbg !14582
  %8 = bitcast %struct._object* %call1 to %struct.teedataobject*, !dbg !14583
  store %struct.teedataobject* %8, %struct.teedataobject** %tdo, align 8, !dbg !14584, !tbaa !2683
  %9 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14585, !tbaa !2683
  %tobool2 = icmp ne %struct.teedataobject* %9, null, !dbg !14585
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !14587

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !14588
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14588

if.end.4:                                         ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %values, align 8, !dbg !14589, !tbaa !2683
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !14590
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !14591
  %12 = load i64, i64* %ob_size, align 8, !dbg !14591, !tbaa !3426
  store i64 %12, i64* %len, align 8, !dbg !14592, !tbaa !3427
  %13 = load i64, i64* %len, align 8, !dbg !14593, !tbaa !3427
  %cmp = icmp sgt i64 %13, 57, !dbg !14595
  br i1 %cmp, label %if.then.5, label %if.end.6, !dbg !14596

if.then.5:                                        ; preds = %if.end.4
  br label %err, !dbg !14597

if.end.6:                                         ; preds = %if.end.4
  store i64 0, i64* %i, align 8, !dbg !14598, !tbaa !3427
  br label %for.cond, !dbg !14600

for.cond:                                         ; preds = %for.inc, %if.end.6
  %14 = load i64, i64* %i, align 8, !dbg !14601, !tbaa !3427
  %15 = load i64, i64* %len, align 8, !dbg !14605, !tbaa !3427
  %cmp7 = icmp slt i64 %14, %15, !dbg !14606
  br i1 %cmp7, label %for.body, label %for.end, !dbg !14607

for.body:                                         ; preds = %for.cond
  %16 = load i64, i64* %i, align 8, !dbg !14608, !tbaa !3427
  %17 = load %struct._object*, %struct._object** %values, align 8, !dbg !14610, !tbaa !2683
  %18 = bitcast %struct._object* %17 to %struct.PyListObject*, !dbg !14611
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %18, i32 0, i32 1, !dbg !14612
  %19 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !14612, !tbaa !14613
  %arrayidx = getelementptr %struct._object*, %struct._object** %19, i64 %16, !dbg !14615
  %20 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !14615, !tbaa !2683
  %21 = load i64, i64* %i, align 8, !dbg !14616, !tbaa !3427
  %22 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14617, !tbaa !2683
  %values8 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %22, i32 0, i32 4, !dbg !14618
  %arrayidx9 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values8, i32 0, i64 %21, !dbg !14617
  store %struct._object* %20, %struct._object** %arrayidx9, align 8, !dbg !14619, !tbaa !2683
  %23 = load i64, i64* %i, align 8, !dbg !14620, !tbaa !3427
  %24 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14621, !tbaa !2683
  %values10 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %24, i32 0, i32 4, !dbg !14622
  %arrayidx11 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values10, i32 0, i64 %23, !dbg !14621
  %25 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !14621, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !14623
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !14624, !tbaa !2722
  %inc = add i64 %26, 1, !dbg !14624
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14624, !tbaa !2722
  br label %for.inc, !dbg !14625

for.inc:                                          ; preds = %for.body
  %27 = load i64, i64* %i, align 8, !dbg !14626, !tbaa !3427
  %inc12 = add i64 %27, 1, !dbg !14626
  store i64 %inc12, i64* %i, align 8, !dbg !14626, !tbaa !3427
  br label %for.cond, !dbg !14627

for.end:                                          ; preds = %for.cond
  %28 = load i64, i64* %len, align 8, !dbg !14628, !tbaa !3427
  %conv = trunc i64 %28 to i32, !dbg !14629
  %29 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14630, !tbaa !2683
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %29, i32 0, i32 2, !dbg !14631
  store i32 %conv, i32* %numread, align 4, !dbg !14632, !tbaa !14027
  %30 = load i64, i64* %len, align 8, !dbg !14633, !tbaa !3427
  %cmp13 = icmp eq i64 %30, 57, !dbg !14635
  br i1 %cmp13, label %if.then.15, label %if.else, !dbg !14636

if.then.15:                                       ; preds = %for.end
  %31 = load %struct._object*, %struct._object** %next, align 8, !dbg !14637, !tbaa !2683
  %cmp16 = icmp ne %struct._object* %31, @_Py_NoneStruct, !dbg !14640
  br i1 %cmp16, label %if.then.18, label %if.end.25, !dbg !14641

if.then.18:                                       ; preds = %if.then.15
  %32 = load %struct._object*, %struct._object** %next, align 8, !dbg !14642, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !14645
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14645, !tbaa !2675
  %cmp19 = icmp ne %struct._typeobject* %33, @teedataobject_type, !dbg !14646
  br i1 %cmp19, label %if.then.21, label %if.end.22, !dbg !14647

if.then.21:                                       ; preds = %if.then.18
  br label %err, !dbg !14648

if.end.22:                                        ; preds = %if.then.18
  %34 = load %struct._object*, %struct._object** %next, align 8, !dbg !14649, !tbaa !2683
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !14650
  %35 = load i64, i64* %ob_refcnt23, align 8, !dbg !14651, !tbaa !2722
  %inc24 = add i64 %35, 1, !dbg !14651
  store i64 %inc24, i64* %ob_refcnt23, align 8, !dbg !14651, !tbaa !2722
  %36 = load %struct._object*, %struct._object** %next, align 8, !dbg !14652, !tbaa !2683
  %37 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14653, !tbaa !2683
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %37, i32 0, i32 3, !dbg !14654
  store %struct._object* %36, %struct._object** %nextlink, align 8, !dbg !14655, !tbaa !13986
  br label %if.end.25, !dbg !14656

if.end.25:                                        ; preds = %if.end.22, %if.then.15
  br label %if.end.30, !dbg !14657

if.else:                                          ; preds = %for.end
  %38 = load %struct._object*, %struct._object** %next, align 8, !dbg !14658, !tbaa !2683
  %cmp26 = icmp ne %struct._object* %38, @_Py_NoneStruct, !dbg !14661
  br i1 %cmp26, label %if.then.28, label %if.end.29, !dbg !14662

if.then.28:                                       ; preds = %if.else
  br label %err, !dbg !14663

if.end.29:                                        ; preds = %if.else
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.end.25
  %39 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14664, !tbaa !2683
  %40 = bitcast %struct.teedataobject* %39 to %struct._object*, !dbg !14665
  store %struct._object* %40, %struct._object** %retval, !dbg !14666
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14666

err:                                              ; preds = %if.then.28, %if.then.21, %if.then.5
  br label %do.body, !dbg !14667

do.body:                                          ; preds = %err
  %41 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14668
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !14668
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2433, metadata !2666), !dbg !14670
  %42 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !14671, !tbaa !2683
  %43 = bitcast %struct.teedataobject* %42 to %struct._object*, !dbg !14672
  store %struct._object* %43, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14670, !tbaa !2683
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14673, !tbaa !2683
  %cmp31 = icmp ne %struct._object* %44, null, !dbg !14674
  br i1 %cmp31, label %if.then.33, label %if.end.42, !dbg !14675

if.then.33:                                       ; preds = %do.body
  br label %do.body.34, !dbg !14676

do.body.34:                                       ; preds = %if.then.33
  %45 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14678
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !14678
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2435, metadata !2666), !dbg !14680
  %46 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14681, !tbaa !2683
  store %struct._object* %46, %struct._object** %_py_decref_tmp, align 8, !dbg !14680, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14682, !tbaa !2683
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !14684
  %48 = load i64, i64* %ob_refcnt35, align 8, !dbg !14685, !tbaa !2722
  %dec = add i64 %48, -1, !dbg !14685
  store i64 %dec, i64* %ob_refcnt35, align 8, !dbg !14685, !tbaa !2722
  %cmp36 = icmp ne i64 %dec, 0, !dbg !14686
  br i1 %cmp36, label %if.then.38, label %if.else.39, !dbg !14687

if.then.38:                                       ; preds = %do.body.34
  br label %if.end.41, !dbg !14688

if.else.39:                                       ; preds = %do.body.34
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14690, !tbaa !2683
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !14692
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !14692, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4, !dbg !14693
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14693, !tbaa !2768
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14694, !tbaa !2683
  call void %51(%struct._object* %52), !dbg !14695
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.39, %if.then.38
  %53 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14696
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !14696
  br label %do.cond, !dbg !14698

do.cond:                                          ; preds = %if.end.41
  br label %do.end, !dbg !14699

do.end:                                           ; preds = %do.cond
  br label %if.end.42, !dbg !14701

if.end.42:                                        ; preds = %do.end, %do.body
  %54 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14703
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !14703
  br label %do.cond.43, !dbg !14706

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !14707

do.end.44:                                        ; preds = %do.cond.43
  %55 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14709, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %55, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.107, i32 0, i32 0)), !dbg !14710
  store %struct._object* null, %struct._object** %retval, !dbg !14711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14711

cleanup:                                          ; preds = %do.end.44, %if.end.30, %if.then.3, %if.then
  %56 = bitcast i64* %len to i8*, !dbg !14712
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !14712
  %57 = bitcast i64* %i to i8*, !dbg !14712
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !14712
  %58 = bitcast %struct._object** %next to i8*, !dbg !14712
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !14712
  %59 = bitcast %struct._object** %values to i8*, !dbg !14712
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !14712
  %60 = bitcast %struct._object** %it to i8*, !dbg !14712
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !14712
  %61 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !14712
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !14712
  %62 = load %struct._object*, %struct._object** %retval, !dbg !14712
  ret %struct._object* %62, !dbg !14712
}

; Function Attrs: nounwind uwtable
define internal void @teedataobject_safe_decref(%struct._object* %obj) #0 {
entry:
  %obj.addr = alloca %struct._object*, align 8
  %nextlink = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp11 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !2407, metadata !2666), !dbg !14713
  br label %while.cond, !dbg !14714

while.cond:                                       ; preds = %do.end, %entry
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14715, !tbaa !2683
  %tobool = icmp ne %struct._object* %0, null, !dbg !14715
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !14718

land.lhs.true:                                    ; preds = %while.cond
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14719, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !14721
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14721, !tbaa !2675
  %cmp = icmp eq %struct._typeobject* %2, @teedataobject_type, !dbg !14722
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14723

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14724, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0, !dbg !14725
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !14725, !tbaa !2722
  %cmp1 = icmp eq i64 %4, 1, !dbg !14726
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %5, label %while.body, label %while.end, !dbg !14727

while.body:                                       ; preds = %land.end
  %6 = bitcast %struct._object** %nextlink to i8*, !dbg !14730
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !14730
  call void @llvm.dbg.declare(metadata %struct._object** %nextlink, metadata !2408, metadata !2666), !dbg !14731
  %7 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14732, !tbaa !2683
  %8 = bitcast %struct._object* %7 to %struct.teedataobject*, !dbg !14733
  %nextlink2 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %8, i32 0, i32 3, !dbg !14734
  %9 = load %struct._object*, %struct._object** %nextlink2, align 8, !dbg !14734, !tbaa !13986
  store %struct._object* %9, %struct._object** %nextlink, align 8, !dbg !14731, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14735, !tbaa !2683
  %11 = bitcast %struct._object* %10 to %struct.teedataobject*, !dbg !14736
  %nextlink3 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %11, i32 0, i32 3, !dbg !14737
  store %struct._object* null, %struct._object** %nextlink3, align 8, !dbg !14738, !tbaa !13986
  br label %do.body, !dbg !14739

do.body:                                          ; preds = %while.body
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14740
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !14740
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2410, metadata !2666), !dbg !14742
  %13 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14743, !tbaa !2683
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !14742, !tbaa !2683
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14744, !tbaa !2683
  %ob_refcnt4 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !14746
  %15 = load i64, i64* %ob_refcnt4, align 8, !dbg !14747, !tbaa !2722
  %dec = add i64 %15, -1, !dbg !14747
  store i64 %dec, i64* %ob_refcnt4, align 8, !dbg !14747, !tbaa !2722
  %cmp5 = icmp ne i64 %dec, 0, !dbg !14748
  br i1 %cmp5, label %if.then, label %if.else, !dbg !14749

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !14750

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14752, !tbaa !2683
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !14754
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !14754, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !14755
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14755, !tbaa !2768
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14756, !tbaa !2683
  call void %18(%struct._object* %19), !dbg !14757
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14758
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !14758
  br label %do.cond, !dbg !14760

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !14761

do.end:                                           ; preds = %do.cond
  %21 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !14763, !tbaa !2683
  store %struct._object* %21, %struct._object** %obj.addr, align 8, !dbg !14764, !tbaa !2683
  %22 = bitcast %struct._object** %nextlink to i8*, !dbg !14765
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !14765
  br label %while.cond, !dbg !14714

while.end:                                        ; preds = %land.end
  br label %do.body.7, !dbg !14766

do.body.7:                                        ; preds = %while.end
  %23 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14767
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !14767
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2412, metadata !2666), !dbg !14769
  %24 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !14770, !tbaa !2683
  store %struct._object* %24, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14769, !tbaa !2683
  %25 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14771, !tbaa !2683
  %cmp8 = icmp ne %struct._object* %25, null, !dbg !14772
  br i1 %cmp8, label %if.then.9, label %if.end.22, !dbg !14773

if.then.9:                                        ; preds = %do.body.7
  br label %do.body.10, !dbg !14774

do.body.10:                                       ; preds = %if.then.9
  %26 = bitcast %struct._object** %_py_decref_tmp11 to i8*, !dbg !14776
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !14776
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp11, metadata !2414, metadata !2666), !dbg !14778
  %27 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14779, !tbaa !2683
  store %struct._object* %27, %struct._object** %_py_decref_tmp11, align 8, !dbg !14778, !tbaa !2683
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !14780, !tbaa !2683
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !14782
  %29 = load i64, i64* %ob_refcnt12, align 8, !dbg !14783, !tbaa !2722
  %dec13 = add i64 %29, -1, !dbg !14783
  store i64 %dec13, i64* %ob_refcnt12, align 8, !dbg !14783, !tbaa !2722
  %cmp14 = icmp ne i64 %dec13, 0, !dbg !14784
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !14785

if.then.15:                                       ; preds = %do.body.10
  br label %if.end.19, !dbg !14786

if.else.16:                                       ; preds = %do.body.10
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !14788, !tbaa !2683
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !14790
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !14790, !tbaa !2675
  %tp_dealloc18 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !14791
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc18, align 8, !dbg !14791, !tbaa !2768
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !14792, !tbaa !2683
  call void %32(%struct._object* %33), !dbg !14793
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.16, %if.then.15
  %34 = bitcast %struct._object** %_py_decref_tmp11 to i8*, !dbg !14794
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !14794
  br label %do.cond.20, !dbg !14796

do.cond.20:                                       ; preds = %if.end.19
  br label %do.end.21, !dbg !14797

do.end.21:                                        ; preds = %do.cond.20
  br label %if.end.22, !dbg !14799

if.end.22:                                        ; preds = %do.end.21, %do.body.7
  %35 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14801
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !14801
  br label %do.end.24, !dbg !14803

do.end.24:                                        ; preds = %if.end.22
  ret void, !dbg !14804
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_reduce(%struct.teedataobject* %tdo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tdo.addr = alloca %struct.teedataobject*, align 8
  %i = alloca i32, align 4
  %values = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.teedataobject* %tdo, %struct.teedataobject** %tdo.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct.teedataobject** %tdo.addr, metadata !2419, metadata !2666), !dbg !14805
  %0 = bitcast i32* %i to i8*, !dbg !14806
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !14806
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2420, metadata !2666), !dbg !14807
  %1 = bitcast %struct._object** %values to i8*, !dbg !14808
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14808
  call void @llvm.dbg.declare(metadata %struct._object** %values, metadata !2421, metadata !2666), !dbg !14809
  %2 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14810, !tbaa !2683
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %2, i32 0, i32 2, !dbg !14811
  %3 = load i32, i32* %numread, align 4, !dbg !14811, !tbaa !14027
  %conv = sext i32 %3 to i64, !dbg !14810
  %call = call %struct._object* @PyList_New(i64 %conv), !dbg !14812
  store %struct._object* %call, %struct._object** %values, align 8, !dbg !14809, !tbaa !2683
  %4 = load %struct._object*, %struct._object** %values, align 8, !dbg !14813, !tbaa !2683
  %tobool = icmp ne %struct._object* %4, null, !dbg !14813
  br i1 %tobool, label %if.end, label %if.then, !dbg !14815

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14816
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14816

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14817, !tbaa !2691
  br label %for.cond, !dbg !14819

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !14820, !tbaa !2691
  %6 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14824, !tbaa !2683
  %numread1 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %6, i32 0, i32 2, !dbg !14825
  %7 = load i32, i32* %numread1, align 4, !dbg !14825, !tbaa !14027
  %cmp = icmp slt i32 %5, %7, !dbg !14826
  br i1 %cmp, label %for.body, label %for.end, !dbg !14827

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !14828, !tbaa !2691
  %idxprom = sext i32 %8 to i64, !dbg !14830
  %9 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14830, !tbaa !2683
  %values3 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %9, i32 0, i32 4, !dbg !14831
  %arrayidx = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values3, i32 0, i64 %idxprom, !dbg !14830
  %10 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !14830, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !14832
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !14833, !tbaa !2722
  %inc = add i64 %11, 1, !dbg !14833
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14833, !tbaa !2722
  %12 = load i32, i32* %i, align 4, !dbg !14834, !tbaa !2691
  %idxprom4 = sext i32 %12 to i64, !dbg !14835
  %13 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14835, !tbaa !2683
  %values5 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %13, i32 0, i32 4, !dbg !14836
  %arrayidx6 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %values5, i32 0, i64 %idxprom4, !dbg !14835
  %14 = load %struct._object*, %struct._object** %arrayidx6, align 8, !dbg !14835, !tbaa !2683
  %15 = load i32, i32* %i, align 4, !dbg !14837, !tbaa !2691
  %idxprom7 = sext i32 %15 to i64, !dbg !14838
  %16 = load %struct._object*, %struct._object** %values, align 8, !dbg !14839, !tbaa !2683
  %17 = bitcast %struct._object* %16 to %struct.PyListObject*, !dbg !14840
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %17, i32 0, i32 1, !dbg !14841
  %18 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !14841, !tbaa !14613
  %arrayidx8 = getelementptr %struct._object*, %struct._object** %18, i64 %idxprom7, !dbg !14838
  store %struct._object* %14, %struct._object** %arrayidx8, align 8, !dbg !14842, !tbaa !2683
  br label %for.inc, !dbg !14843

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !14844, !tbaa !2691
  %inc9 = add i32 %19, 1, !dbg !14844
  store i32 %inc9, i32* %i, align 4, !dbg !14844, !tbaa !2691
  br label %for.cond, !dbg !14845

for.end:                                          ; preds = %for.cond
  %20 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14846, !tbaa !2683
  %21 = bitcast %struct.teedataobject* %20 to %struct._object*, !dbg !14847
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !14848
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14848, !tbaa !2675
  %23 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14849, !tbaa !2683
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %23, i32 0, i32 1, !dbg !14850
  %24 = load %struct._object*, %struct._object** %it, align 8, !dbg !14850, !tbaa !13992
  %25 = load %struct._object*, %struct._object** %values, align 8, !dbg !14851, !tbaa !2683
  %26 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14852, !tbaa !2683
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %26, i32 0, i32 3, !dbg !14853
  %27 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !14853, !tbaa !13986
  %tobool10 = icmp ne %struct._object* %27, null, !dbg !14852
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !14852

cond.true:                                        ; preds = %for.end
  %28 = load %struct.teedataobject*, %struct.teedataobject** %tdo.addr, align 8, !dbg !14854, !tbaa !2683
  %nextlink11 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %28, i32 0, i32 3, !dbg !14856
  %29 = load %struct._object*, %struct._object** %nextlink11, align 8, !dbg !14856, !tbaa !13986
  br label %cond.end, !dbg !14852

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !14857

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %29, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !14852
  %call12 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i32 0, i32 0), %struct._typeobject* %22, %struct._object* %24, %struct._object* %25, %struct._object* %cond), !dbg !14859
  store %struct._object* %call12, %struct._object** %retval, !dbg !14860
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14860

cleanup:                                          ; preds = %cond.end, %if.then
  %30 = bitcast %struct._object** %values to i8*, !dbg !14861
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !14861
  %31 = bitcast i32* %i to i8*, !dbg !14861
  call void @llvm.lifetime.end(i64 4, i8* %31) #1, !dbg !14861
  %32 = load %struct._object*, %struct._object** %retval, !dbg !14861
  ret %struct._object* %32, !dbg !14861
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %it = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  %copyable = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2440, metadata !2666), !dbg !14862
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2683
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2441, metadata !2666), !dbg !14863
  %0 = bitcast i64* %i to i8*, !dbg !14864
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14864
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2442, metadata !2666), !dbg !14865
  %1 = bitcast i64* %n to i8*, !dbg !14864
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14864
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2443, metadata !2666), !dbg !14866
  store i64 2, i64* %n, align 8, !dbg !14866, !tbaa !3427
  %2 = bitcast %struct._object** %it to i8*, !dbg !14867
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !14867
  call void @llvm.dbg.declare(metadata %struct._object** %it, metadata !2444, metadata !2666), !dbg !14868
  %3 = bitcast %struct._object** %iterable to i8*, !dbg !14867
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !14867
  call void @llvm.dbg.declare(metadata %struct._object** %iterable, metadata !2445, metadata !2666), !dbg !14869
  %4 = bitcast %struct._object** %copyable to i8*, !dbg !14867
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !14867
  call void @llvm.dbg.declare(metadata %struct._object** %copyable, metadata !2446, metadata !2666), !dbg !14870
  %5 = bitcast %struct._object** %result to i8*, !dbg !14867
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !14867
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2447, metadata !2666), !dbg !14871
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14872, !tbaa !2683
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), %struct._object** %iterable, i64* %n), !dbg !14874
  %tobool = icmp ne i32 %call, 0, !dbg !14874
  br i1 %tobool, label %if.end, label %if.then, !dbg !14875

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14876

if.end:                                           ; preds = %entry
  %7 = load i64, i64* %n, align 8, !dbg !14877, !tbaa !3427
  %cmp = icmp slt i64 %7, 0, !dbg !14879
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !14880

if.then.1:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14881, !tbaa !2683
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i32 0, i32 0)), !dbg !14883
  store %struct._object* null, %struct._object** %retval, !dbg !14884
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14884

if.end.2:                                         ; preds = %if.end
  %9 = load i64, i64* %n, align 8, !dbg !14885, !tbaa !3427
  %call3 = call %struct._object* @PyTuple_New(i64 %9), !dbg !14886
  store %struct._object* %call3, %struct._object** %result, align 8, !dbg !14887, !tbaa !2683
  %10 = load %struct._object*, %struct._object** %result, align 8, !dbg !14888, !tbaa !2683
  %cmp4 = icmp eq %struct._object* %10, null, !dbg !14890
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !14891

if.then.5:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !14892
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14892

if.end.6:                                         ; preds = %if.end.2
  %11 = load i64, i64* %n, align 8, !dbg !14893, !tbaa !3427
  %cmp7 = icmp eq i64 %11, 0, !dbg !14895
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !14896

if.then.8:                                        ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** %result, align 8, !dbg !14897, !tbaa !2683
  store %struct._object* %12, %struct._object** %retval, !dbg !14898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14898

if.end.9:                                         ; preds = %if.end.6
  %13 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !14899, !tbaa !2683
  %call10 = call %struct._object* @PyObject_GetIter(%struct._object* %13), !dbg !14900
  store %struct._object* %call10, %struct._object** %it, align 8, !dbg !14901, !tbaa !2683
  %14 = load %struct._object*, %struct._object** %it, align 8, !dbg !14902, !tbaa !2683
  %cmp11 = icmp eq %struct._object* %14, null, !dbg !14903
  br i1 %cmp11, label %if.then.12, label %if.end.16, !dbg !14904

if.then.12:                                       ; preds = %if.end.9
  br label %do.body, !dbg !14905

do.body:                                          ; preds = %if.then.12
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14906
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !14906
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2448, metadata !2666), !dbg !14908
  %16 = load %struct._object*, %struct._object** %result, align 8, !dbg !14909, !tbaa !2683
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !14908, !tbaa !2683
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14910, !tbaa !2683
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !14912
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !14913, !tbaa !2722
  %dec = add i64 %18, -1, !dbg !14913
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14913, !tbaa !2722
  %cmp13 = icmp ne i64 %dec, 0, !dbg !14914
  br i1 %cmp13, label %if.then.14, label %if.else, !dbg !14915

if.then.14:                                       ; preds = %do.body
  br label %if.end.15, !dbg !14916

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14918, !tbaa !2683
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !14920
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14920, !tbaa !2675
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !14921
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14921, !tbaa !2768
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14922, !tbaa !2683
  call void %21(%struct._object* %22), !dbg !14923
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.14
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14924
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !14924
  br label %do.cond, !dbg !14926

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !14927

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !14929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14929

if.end.16:                                        ; preds = %if.end.9
  %24 = load %struct._object*, %struct._object** %it, align 8, !dbg !14930, !tbaa !2683
  %call17 = call i32 @_PyObject_HasAttrId(%struct._object* %24, %struct._Py_Identifier* @tee.PyId___copy__), !dbg !14931
  %tobool18 = icmp ne i32 %call17, 0, !dbg !14931
  br i1 %tobool18, label %if.else.48, label %if.then.19, !dbg !14932

if.then.19:                                       ; preds = %if.end.16
  %25 = load %struct._object*, %struct._object** %it, align 8, !dbg !14933, !tbaa !2683
  %call20 = call %struct._object* @tee_fromiterable(%struct._object* %25), !dbg !14934
  store %struct._object* %call20, %struct._object** %copyable, align 8, !dbg !14935, !tbaa !2683
  br label %do.body.21, !dbg !14936

do.body.21:                                       ; preds = %if.then.19
  %26 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !14937
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !14937
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !2452, metadata !2666), !dbg !14939
  %27 = load %struct._object*, %struct._object** %it, align 8, !dbg !14940, !tbaa !2683
  store %struct._object* %27, %struct._object** %_py_decref_tmp22, align 8, !dbg !14939, !tbaa !2683
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !14941, !tbaa !2683
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !14943
  %29 = load i64, i64* %ob_refcnt23, align 8, !dbg !14944, !tbaa !2722
  %dec24 = add i64 %29, -1, !dbg !14944
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !14944, !tbaa !2722
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !14945
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !14946

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !14947

if.else.27:                                       ; preds = %do.body.21
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !14949, !tbaa !2683
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !14951
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !14951, !tbaa !2675
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !14952
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !14952, !tbaa !2768
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !14953, !tbaa !2683
  call void %32(%struct._object* %33), !dbg !14954
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %34 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !14955
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !14955
  br label %do.cond.31, !dbg !14957

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !14958

do.end.32:                                        ; preds = %do.cond.31
  %35 = load %struct._object*, %struct._object** %copyable, align 8, !dbg !14960, !tbaa !2683
  %cmp33 = icmp eq %struct._object* %35, null, !dbg !14961
  br i1 %cmp33, label %if.then.34, label %if.end.47, !dbg !14962

if.then.34:                                       ; preds = %do.end.32
  br label %do.body.35, !dbg !14963

do.body.35:                                       ; preds = %if.then.34
  %36 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !14964
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !14964
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !2456, metadata !2666), !dbg !14966
  %37 = load %struct._object*, %struct._object** %result, align 8, !dbg !14967, !tbaa !2683
  store %struct._object* %37, %struct._object** %_py_decref_tmp36, align 8, !dbg !14966, !tbaa !2683
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !14968, !tbaa !2683
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !14970
  %39 = load i64, i64* %ob_refcnt37, align 8, !dbg !14971, !tbaa !2722
  %dec38 = add i64 %39, -1, !dbg !14971
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !14971, !tbaa !2722
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !14972
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !14973

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !14974

if.else.41:                                       ; preds = %do.body.35
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !14976, !tbaa !2683
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !14978
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !14978, !tbaa !2675
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !14979
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !14979, !tbaa !2768
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !14980, !tbaa !2683
  call void %42(%struct._object* %43), !dbg !14981
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %44 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !14982
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !14982
  br label %do.cond.45, !dbg !14984

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !14985

do.end.46:                                        ; preds = %do.cond.45
  store %struct._object* null, %struct._object** %retval, !dbg !14987
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14987

if.end.47:                                        ; preds = %do.end.32
  br label %if.end.49, !dbg !14988

if.else.48:                                       ; preds = %if.end.16
  %45 = load %struct._object*, %struct._object** %it, align 8, !dbg !14989, !tbaa !2683
  store %struct._object* %45, %struct._object** %copyable, align 8, !dbg !14990, !tbaa !2683
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.48, %if.end.47
  %46 = load %struct._object*, %struct._object** %copyable, align 8, !dbg !14991, !tbaa !2683
  %47 = load %struct._object*, %struct._object** %result, align 8, !dbg !14992, !tbaa !2683
  %48 = bitcast %struct._object* %47 to %struct.PyTupleObject*, !dbg !14993
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %48, i32 0, i32 1, !dbg !14994
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !14995
  store %struct._object* %46, %struct._object** %arrayidx, align 8, !dbg !14996, !tbaa !2683
  store i64 1, i64* %i, align 8, !dbg !14997, !tbaa !3427
  br label %for.cond, !dbg !14998

for.cond:                                         ; preds = %for.inc, %if.end.49
  %49 = load i64, i64* %i, align 8, !dbg !14999, !tbaa !3427
  %50 = load i64, i64* %n, align 8, !dbg !15002, !tbaa !3427
  %cmp50 = icmp slt i64 %49, %50, !dbg !15003
  br i1 %cmp50, label %for.body, label %for.end, !dbg !15004

for.body:                                         ; preds = %for.cond
  %51 = load %struct._object*, %struct._object** %copyable, align 8, !dbg !15005, !tbaa !2683
  %call51 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %51, %struct._Py_Identifier* @tee.PyId___copy__, i8* null), !dbg !15006
  store %struct._object* %call51, %struct._object** %copyable, align 8, !dbg !15007, !tbaa !2683
  %52 = load %struct._object*, %struct._object** %copyable, align 8, !dbg !15008, !tbaa !2683
  %cmp52 = icmp eq %struct._object* %52, null, !dbg !15009
  br i1 %cmp52, label %if.then.53, label %if.end.66, !dbg !15010

if.then.53:                                       ; preds = %for.body
  br label %do.body.54, !dbg !15011

do.body.54:                                       ; preds = %if.then.53
  %53 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !15012
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !15012
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !2460, metadata !2666), !dbg !15014
  %54 = load %struct._object*, %struct._object** %result, align 8, !dbg !15015, !tbaa !2683
  store %struct._object* %54, %struct._object** %_py_decref_tmp55, align 8, !dbg !15014, !tbaa !2683
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !15016, !tbaa !2683
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !15018
  %56 = load i64, i64* %ob_refcnt56, align 8, !dbg !15019, !tbaa !2722
  %dec57 = add i64 %56, -1, !dbg !15019
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !15019, !tbaa !2722
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !15020
  br i1 %cmp58, label %if.then.59, label %if.else.60, !dbg !15021

if.then.59:                                       ; preds = %do.body.54
  br label %if.end.63, !dbg !15022

if.else.60:                                       ; preds = %do.body.54
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !15024, !tbaa !2683
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !15026
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !15026, !tbaa !2675
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !15027
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !15027, !tbaa !2768
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !15028, !tbaa !2683
  call void %59(%struct._object* %60), !dbg !15029
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %61 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !15030
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !15030
  br label %do.cond.64, !dbg !15032

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !15033

do.end.65:                                        ; preds = %do.cond.64
  store %struct._object* null, %struct._object** %retval, !dbg !15035
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15035

if.end.66:                                        ; preds = %for.body
  %62 = load %struct._object*, %struct._object** %copyable, align 8, !dbg !15036, !tbaa !2683
  %63 = load i64, i64* %i, align 8, !dbg !15037, !tbaa !3427
  %64 = load %struct._object*, %struct._object** %result, align 8, !dbg !15038, !tbaa !2683
  %65 = bitcast %struct._object* %64 to %struct.PyTupleObject*, !dbg !15039
  %ob_item67 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %65, i32 0, i32 1, !dbg !15040
  %arrayidx68 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item67, i32 0, i64 %63, !dbg !15041
  store %struct._object* %62, %struct._object** %arrayidx68, align 8, !dbg !15042, !tbaa !2683
  br label %for.inc, !dbg !15043

for.inc:                                          ; preds = %if.end.66
  %66 = load i64, i64* %i, align 8, !dbg !15044, !tbaa !3427
  %inc = add i64 %66, 1, !dbg !15044
  store i64 %inc, i64* %i, align 8, !dbg !15044, !tbaa !3427
  br label %for.cond, !dbg !15045

for.end:                                          ; preds = %for.cond
  %67 = load %struct._object*, %struct._object** %result, align 8, !dbg !15046, !tbaa !2683
  store %struct._object* %67, %struct._object** %retval, !dbg !15047
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15047

cleanup:                                          ; preds = %for.end, %do.end.65, %do.end.46, %do.end, %if.then.8, %if.then.5, %if.then.1, %if.then
  %68 = bitcast %struct._object** %result to i8*, !dbg !15048
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !15048
  %69 = bitcast %struct._object** %copyable to i8*, !dbg !15048
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !15048
  %70 = bitcast %struct._object** %iterable to i8*, !dbg !15048
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !15048
  %71 = bitcast %struct._object** %it to i8*, !dbg !15048
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !15048
  %72 = bitcast i64* %n to i8*, !dbg !15048
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !15048
  %73 = bitcast i64* %i to i8*, !dbg !15048
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !15048
  %74 = load %struct._object*, %struct._object** %retval, !dbg !15048
  ret %struct._object* %74, !dbg !15048
}

declare i32 @_PyObject_HasAttrId(%struct._object*, %struct._Py_Identifier*) #3

declare %struct._object* @_PyObject_CallMethodId(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2662, !2663}
!llvm.ident = !{!2664}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !541, globals: !2467)
!1 = !DIFile(filename: "itertoolsmodule.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{}
!3 = !{!4, !89, !350, !359, !360, !368, !378, !388, !396, !404, !94, !412, !422, !429, !436, !443, !10, !450, !458, !468, !479, !488, !495, !502, !512, !524, !532, !43}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !6, line: 109, baseType: !7)
!6 = !DIFile(filename: "Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !6, line: 105, size: 128, align: 64, elements: !8)
!8 = !{!9, !17}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !7, file: !6, line: 107, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !11, line: 177, baseType: !12)
!11 = !DIFile(filename: "Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !13, line: 102, baseType: !14)
!13 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 181, baseType: !16)
!15 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!16 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !7, file: !6, line: 108, baseType: !18, size: 64, align: 64, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !6, line: 334, size: 3200, align: 64, elements: !20)
!20 = !{!21, !27, !31, !32, !33, !38, !102, !107, !112, !113, !118, !170, !201, !213, !219, !220, !221, !223, !225, !256, !257, !258, !267, !268, !273, !274, !276, !278, !288, !298, !316, !317, !318, !320, !322, !323, !325, !330, !335, !340, !341, !342, !343, !344, !345, !346, !347, !349}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !19, file: !6, line: 335, baseType: !22, size: 192, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !6, line: 114, baseType: !23)
!23 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 111, size: 192, align: 64, elements: !24)
!24 = !{!25, !26}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !23, file: !6, line: 112, baseType: !5, size: 128, align: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !23, file: !6, line: 113, baseType: !10, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !19, file: !6, line: 336, baseType: !28, size: 64, align: 64, offset: 192)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !30)
!30 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !19, file: !6, line: 337, baseType: !10, size: 64, align: 64, offset: 256)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !19, file: !6, line: 337, baseType: !10, size: 64, align: 64, offset: 320)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !19, file: !6, line: 341, baseType: !34, size: 64, align: 64, offset: 384)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !6, line: 308, baseType: !35)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DISubroutineType(types: !37)
!37 = !{null, !4}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !19, file: !6, line: 342, baseType: !39, size: 64, align: 64, offset: 448)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !6, line: 314, baseType: !40)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DISubroutineType(types: !42)
!42 = !{!43, !4, !44, !43}
!43 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !13, line: 48, baseType: !46)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !47, line: 246, size: 1728, align: 64, elements: !48)
!47 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!48 = !{!49, !50, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !70, !71, !72, !73, !75, !77, !79, !83, !86, !88, !90, !91, !92, !93, !97, !98}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !46, file: !47, line: 247, baseType: !43, size: 32, align: 32)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !46, file: !47, line: 252, baseType: !51, size: 64, align: 64, offset: 64)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !46, file: !47, line: 253, baseType: !51, size: 64, align: 64, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !46, file: !47, line: 254, baseType: !51, size: 64, align: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !46, file: !47, line: 255, baseType: !51, size: 64, align: 64, offset: 256)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !46, file: !47, line: 256, baseType: !51, size: 64, align: 64, offset: 320)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !46, file: !47, line: 257, baseType: !51, size: 64, align: 64, offset: 384)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !46, file: !47, line: 258, baseType: !51, size: 64, align: 64, offset: 448)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !46, file: !47, line: 259, baseType: !51, size: 64, align: 64, offset: 512)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !46, file: !47, line: 261, baseType: !51, size: 64, align: 64, offset: 576)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !46, file: !47, line: 262, baseType: !51, size: 64, align: 64, offset: 640)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !46, file: !47, line: 263, baseType: !51, size: 64, align: 64, offset: 704)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !46, file: !47, line: 265, baseType: !63, size: 64, align: 64, offset: 768)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !47, line: 161, size: 192, align: 64, elements: !65)
!65 = !{!66, !67, !69}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !64, file: !47, line: 162, baseType: !63, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !64, file: !47, line: 163, baseType: !68, size: 64, align: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !64, file: !47, line: 167, baseType: !43, size: 32, align: 32, offset: 128)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !46, file: !47, line: 267, baseType: !68, size: 64, align: 64, offset: 832)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !46, file: !47, line: 269, baseType: !43, size: 32, align: 32, offset: 896)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !46, file: !47, line: 273, baseType: !43, size: 32, align: 32, offset: 928)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !46, file: !47, line: 275, baseType: !74, size: 64, align: 64, offset: 960)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 140, baseType: !16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !46, file: !47, line: 279, baseType: !76, size: 16, align: 16, offset: 1024)
!76 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !46, file: !47, line: 280, baseType: !78, size: 8, align: 8, offset: 1040)
!78 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !46, file: !47, line: 281, baseType: !80, size: 8, align: 8, offset: 1048)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 8, align: 8, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 1)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !46, file: !47, line: 285, baseType: !84, size: 64, align: 64, offset: 1088)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !47, line: 155, baseType: null)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !46, file: !47, line: 294, baseType: !87, size: 64, align: 64, offset: 1152)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 141, baseType: !16)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !46, file: !47, line: 303, baseType: !89, size: 64, align: 64, offset: 1216)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !46, file: !47, line: 304, baseType: !89, size: 64, align: 64, offset: 1280)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !46, file: !47, line: 305, baseType: !89, size: 64, align: 64, offset: 1344)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !46, file: !47, line: 306, baseType: !89, size: 64, align: 64, offset: 1408)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !46, file: !47, line: 307, baseType: !94, size: 64, align: 64, offset: 1472)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !95, line: 62, baseType: !96)
!95 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!96 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !46, file: !47, line: 309, baseType: !43, size: 32, align: 32, offset: 1536)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !46, file: !47, line: 311, baseType: !99, size: 160, align: 8, offset: 1568)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 160, align: 8, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 20)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !19, file: !6, line: 343, baseType: !103, size: 64, align: 64, offset: 512)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !6, line: 316, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!4, !4, !51}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !19, file: !6, line: 344, baseType: !108, size: 64, align: 64, offset: 576)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !6, line: 318, baseType: !109)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!43, !4, !51, !4}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !19, file: !6, line: 345, baseType: !89, size: 64, align: 64, offset: 640)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !19, file: !6, line: 346, baseType: !114, size: 64, align: 64, offset: 704)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !6, line: 320, baseType: !115)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64, align: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{!4, !4}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !19, file: !6, line: 350, baseType: !119, size: 64, align: 64, offset: 768)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !6, line: 278, baseType: !121)
!121 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 236, size: 2176, align: 64, elements: !122)
!122 = !{!123, !128, !129, !130, !131, !132, !137, !139, !140, !141, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !121, file: !6, line: 241, baseType: !124, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !6, line: 166, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!4, !4, !4}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !121, file: !6, line: 242, baseType: !124, size: 64, align: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !121, file: !6, line: 243, baseType: !124, size: 64, align: 64, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !121, file: !6, line: 244, baseType: !124, size: 64, align: 64, offset: 192)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !121, file: !6, line: 245, baseType: !124, size: 64, align: 64, offset: 256)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !121, file: !6, line: 246, baseType: !133, size: 64, align: 64, offset: 320)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !6, line: 167, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64, align: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{!4, !4, !4, !4}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !121, file: !6, line: 247, baseType: !138, size: 64, align: 64, offset: 384)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !6, line: 165, baseType: !115)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !121, file: !6, line: 248, baseType: !138, size: 64, align: 64, offset: 448)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !121, file: !6, line: 249, baseType: !138, size: 64, align: 64, offset: 512)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !121, file: !6, line: 250, baseType: !142, size: 64, align: 64, offset: 576)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !6, line: 168, baseType: !143)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64, align: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{!43, !4}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !121, file: !6, line: 251, baseType: !138, size: 64, align: 64, offset: 640)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !121, file: !6, line: 252, baseType: !124, size: 64, align: 64, offset: 704)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !121, file: !6, line: 253, baseType: !124, size: 64, align: 64, offset: 768)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !121, file: !6, line: 254, baseType: !124, size: 64, align: 64, offset: 832)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !121, file: !6, line: 255, baseType: !124, size: 64, align: 64, offset: 896)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !121, file: !6, line: 256, baseType: !124, size: 64, align: 64, offset: 960)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !121, file: !6, line: 257, baseType: !138, size: 64, align: 64, offset: 1024)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !121, file: !6, line: 258, baseType: !89, size: 64, align: 64, offset: 1088)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !121, file: !6, line: 259, baseType: !138, size: 64, align: 64, offset: 1152)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !121, file: !6, line: 261, baseType: !124, size: 64, align: 64, offset: 1216)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !121, file: !6, line: 262, baseType: !124, size: 64, align: 64, offset: 1280)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !121, file: !6, line: 263, baseType: !124, size: 64, align: 64, offset: 1344)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !121, file: !6, line: 264, baseType: !124, size: 64, align: 64, offset: 1408)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !121, file: !6, line: 265, baseType: !133, size: 64, align: 64, offset: 1472)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !121, file: !6, line: 266, baseType: !124, size: 64, align: 64, offset: 1536)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !121, file: !6, line: 267, baseType: !124, size: 64, align: 64, offset: 1600)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !121, file: !6, line: 268, baseType: !124, size: 64, align: 64, offset: 1664)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !121, file: !6, line: 269, baseType: !124, size: 64, align: 64, offset: 1728)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !121, file: !6, line: 270, baseType: !124, size: 64, align: 64, offset: 1792)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !121, file: !6, line: 272, baseType: !124, size: 64, align: 64, offset: 1856)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !121, file: !6, line: 273, baseType: !124, size: 64, align: 64, offset: 1920)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !121, file: !6, line: 274, baseType: !124, size: 64, align: 64, offset: 1984)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !121, file: !6, line: 275, baseType: !124, size: 64, align: 64, offset: 2048)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !121, file: !6, line: 277, baseType: !138, size: 64, align: 64, offset: 2112)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !19, file: !6, line: 351, baseType: !171, size: 64, align: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !6, line: 292, baseType: !173)
!173 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 280, size: 640, align: 64, elements: !174)
!174 = !{!175, !180, !181, !186, !187, !188, !193, !194, !199, !200}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !173, file: !6, line: 281, baseType: !176, size: 64, align: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !6, line: 169, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!10, !4}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !173, file: !6, line: 282, baseType: !124, size: 64, align: 64, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !173, file: !6, line: 283, baseType: !182, size: 64, align: 64, offset: 128)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !6, line: 170, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64, align: 64)
!184 = !DISubroutineType(types: !185)
!185 = !{!4, !4, !10}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !173, file: !6, line: 284, baseType: !182, size: 64, align: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !173, file: !6, line: 285, baseType: !89, size: 64, align: 64, offset: 256)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !173, file: !6, line: 286, baseType: !189, size: 64, align: 64, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !6, line: 172, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!43, !4, !10, !4}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !173, file: !6, line: 287, baseType: !89, size: 64, align: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !173, file: !6, line: 288, baseType: !195, size: 64, align: 64, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !6, line: 231, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!43, !4, !4}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !173, file: !6, line: 290, baseType: !124, size: 64, align: 64, offset: 512)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !173, file: !6, line: 291, baseType: !182, size: 64, align: 64, offset: 576)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !19, file: !6, line: 352, baseType: !202, size: 64, align: 64, offset: 896)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !6, line: 298, baseType: !204)
!204 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 294, size: 192, align: 64, elements: !205)
!205 = !{!206, !207, !208}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !204, file: !6, line: 295, baseType: !176, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !204, file: !6, line: 296, baseType: !124, size: 64, align: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !204, file: !6, line: 297, baseType: !209, size: 64, align: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !6, line: 174, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{!43, !4, !4, !4}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !19, file: !6, line: 356, baseType: !214, size: 64, align: 64, offset: 960)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !6, line: 321, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{!218, !4}
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !11, line: 186, baseType: !10)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !19, file: !6, line: 357, baseType: !133, size: 64, align: 64, offset: 1024)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !19, file: !6, line: 358, baseType: !114, size: 64, align: 64, offset: 1088)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !19, file: !6, line: 359, baseType: !222, size: 64, align: 64, offset: 1152)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !6, line: 317, baseType: !125)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !19, file: !6, line: 360, baseType: !224, size: 64, align: 64, offset: 1216)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !6, line: 319, baseType: !210)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !19, file: !6, line: 363, baseType: !226, size: 64, align: 64, offset: 1280)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !6, line: 304, baseType: !228)
!228 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 301, size: 128, align: 64, elements: !229)
!229 = !{!230, !251}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !228, file: !6, line: 302, baseType: !231, size: 64, align: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !6, line: 193, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64, align: 64)
!233 = !DISubroutineType(types: !234)
!234 = !{!43, !4, !235, !43}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !6, line: 191, baseType: !237)
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !6, line: 178, size: 640, align: 64, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !248, !249, !250}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !237, file: !6, line: 179, baseType: !89, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !237, file: !6, line: 180, baseType: !4, size: 64, align: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !237, file: !6, line: 181, baseType: !10, size: 64, align: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !237, file: !6, line: 182, baseType: !10, size: 64, align: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !237, file: !6, line: 184, baseType: !43, size: 32, align: 32, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !237, file: !6, line: 185, baseType: !43, size: 32, align: 32, offset: 288)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !237, file: !6, line: 186, baseType: !51, size: 64, align: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !237, file: !6, line: 187, baseType: !247, size: 64, align: 64, offset: 384)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !237, file: !6, line: 188, baseType: !247, size: 64, align: 64, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !237, file: !6, line: 189, baseType: !247, size: 64, align: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !237, file: !6, line: 190, baseType: !89, size: 64, align: 64, offset: 576)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !228, file: !6, line: 303, baseType: !252, size: 64, align: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !6, line: 194, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64, align: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !4, !235}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !19, file: !6, line: 366, baseType: !96, size: 64, align: 64, offset: 1344)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !19, file: !6, line: 368, baseType: !28, size: 64, align: 64, offset: 1408)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !19, file: !6, line: 372, baseType: !259, size: 64, align: 64, offset: 1472)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !6, line: 233, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!43, !4, !263, !89}
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !6, line: 232, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!43, !4, !89}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !19, file: !6, line: 375, baseType: !142, size: 64, align: 64, offset: 1536)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !19, file: !6, line: 379, baseType: !269, size: 64, align: 64, offset: 1600)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !6, line: 322, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!4, !4, !4, !43}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !19, file: !6, line: 382, baseType: !10, size: 64, align: 64, offset: 1664)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !19, file: !6, line: 385, baseType: !275, size: 64, align: 64, offset: 1728)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !6, line: 323, baseType: !115)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !19, file: !6, line: 386, baseType: !277, size: 64, align: 64, offset: 1792)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !6, line: 324, baseType: !115)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !19, file: !6, line: 389, baseType: !279, size: 64, align: 64, offset: 1856)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64, align: 64)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !281, line: 40, size: 256, align: 64, elements: !282)
!281 = !DIFile(filename: "Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!282 = !{!283, !284, !286, !287}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !280, file: !281, line: 41, baseType: !28, size: 64, align: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !280, file: !281, line: 42, baseType: !285, size: 64, align: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !281, line: 18, baseType: !125)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !280, file: !281, line: 43, baseType: !43, size: 32, align: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !280, file: !281, line: 45, baseType: !28, size: 64, align: 64, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !19, file: !6, line: 390, baseType: !289, size: 64, align: 64, offset: 1920)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !291, line: 18, size: 320, align: 64, elements: !292)
!291 = !DIFile(filename: "Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!292 = !{!293, !294, !295, !296, !297}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 19, baseType: !51, size: 64, align: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !290, file: !291, line: 20, baseType: !43, size: 32, align: 32, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !290, file: !291, line: 21, baseType: !10, size: 64, align: 64, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !290, file: !291, line: 22, baseType: !43, size: 32, align: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !290, file: !291, line: 23, baseType: !51, size: 64, align: 64, offset: 256)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !19, file: !6, line: 391, baseType: !299, size: 64, align: 64, offset: 1984)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !301, line: 11, size: 320, align: 64, elements: !302)
!301 = !DIFile(filename: "Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!302 = !{!303, !304, !309, !314, !315}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !300, file: !301, line: 12, baseType: !51, size: 64, align: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !300, file: !301, line: 13, baseType: !305, size: 64, align: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !301, line: 8, baseType: !306)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = !DISubroutineType(types: !308)
!308 = !{!4, !4, !89}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !300, file: !301, line: 14, baseType: !310, size: 64, align: 64, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !301, line: 9, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!43, !4, !4, !89}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !300, file: !301, line: 15, baseType: !51, size: 64, align: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !300, file: !301, line: 16, baseType: !89, size: 64, align: 64, offset: 256)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !19, file: !6, line: 392, baseType: !18, size: 64, align: 64, offset: 2048)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !19, file: !6, line: 393, baseType: !4, size: 64, align: 64, offset: 2112)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !19, file: !6, line: 394, baseType: !319, size: 64, align: 64, offset: 2176)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !6, line: 325, baseType: !134)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !19, file: !6, line: 395, baseType: !321, size: 64, align: 64, offset: 2240)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !6, line: 326, baseType: !210)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !19, file: !6, line: 396, baseType: !10, size: 64, align: 64, offset: 2304)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !19, file: !6, line: 397, baseType: !324, size: 64, align: 64, offset: 2368)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !6, line: 327, baseType: !210)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !19, file: !6, line: 398, baseType: !326, size: 64, align: 64, offset: 2432)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !6, line: 329, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!4, !18, !10}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !19, file: !6, line: 399, baseType: !331, size: 64, align: 64, offset: 2496)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !6, line: 328, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64)
!333 = !DISubroutineType(types: !334)
!334 = !{!4, !18, !4, !4}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !19, file: !6, line: 400, baseType: !336, size: 64, align: 64, offset: 2560)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !6, line: 307, baseType: !337)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64, align: 64)
!338 = !DISubroutineType(types: !339)
!339 = !{null, !89}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !19, file: !6, line: 401, baseType: !142, size: 64, align: 64, offset: 2624)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !19, file: !6, line: 402, baseType: !4, size: 64, align: 64, offset: 2688)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !19, file: !6, line: 403, baseType: !4, size: 64, align: 64, offset: 2752)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !19, file: !6, line: 404, baseType: !4, size: 64, align: 64, offset: 2816)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !19, file: !6, line: 405, baseType: !4, size: 64, align: 64, offset: 2880)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !19, file: !6, line: 406, baseType: !4, size: 64, align: 64, offset: 2944)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !19, file: !6, line: 407, baseType: !34, size: 64, align: 64, offset: 3008)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !19, file: !6, line: 410, baseType: !348, size: 32, align: 32, offset: 3072)
!348 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !19, file: !6, line: 412, baseType: !34, size: 64, align: 64, offset: 3136)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "accumulateobject", file: !352, line: 3368, baseType: !353)
!352 = !DIFile(filename: "./Modules/itertoolsmodule.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!353 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 3363, size: 320, align: 64, elements: !354)
!354 = !{!355, !356, !357, !358}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !353, file: !352, line: 3364, baseType: !5, size: 128, align: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !353, file: !352, line: 3365, baseType: !4, size: 64, align: 64, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !353, file: !352, line: 3366, baseType: !4, size: 64, align: 64, offset: 192)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "binop", scope: !353, file: !352, line: 3367, baseType: !4, size: 64, align: 64, offset: 256)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64, align: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !362, line: 33, baseType: !363)
!362 = !DIFile(filename: "Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!363 = !DICompositeType(tag: DW_TAG_structure_type, file: !362, line: 25, size: 256, align: 64, elements: !364)
!364 = !{!365, !366}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !363, file: !362, line: 26, baseType: !22, size: 192, align: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !363, file: !362, line: 27, baseType: !367, size: 64, align: 64, offset: 192)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, align: 64, elements: !81)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "combinationsobject", file: !352, line: 2333, baseType: !370)
!370 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 2326, size: 448, align: 64, elements: !371)
!371 = !{!372, !373, !374, !375, !376, !377}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !370, file: !352, line: 2327, baseType: !5, size: 128, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !370, file: !352, line: 2328, baseType: !4, size: 64, align: 64, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !370, file: !352, line: 2329, baseType: !247, size: 64, align: 64, offset: 192)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !370, file: !352, line: 2330, baseType: !4, size: 64, align: 64, offset: 256)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !370, file: !352, line: 2331, baseType: !10, size: 64, align: 64, offset: 320)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !370, file: !352, line: 2332, baseType: !43, size: 32, align: 32, offset: 384)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64, align: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "cwrobject", file: !352, line: 2674, baseType: !380)
!380 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 2667, size: 448, align: 64, elements: !381)
!381 = !{!382, !383, !384, !385, !386, !387}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !380, file: !352, line: 2668, baseType: !5, size: 128, align: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !380, file: !352, line: 2669, baseType: !4, size: 64, align: 64, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !380, file: !352, line: 2670, baseType: !247, size: 64, align: 64, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !380, file: !352, line: 2671, baseType: !4, size: 64, align: 64, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !380, file: !352, line: 2672, baseType: !10, size: 64, align: 64, offset: 320)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !380, file: !352, line: 2673, baseType: !43, size: 32, align: 32, offset: 384)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "cycleobject", file: !352, line: 867, baseType: !390)
!390 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 862, size: 320, align: 64, elements: !391)
!391 = !{!392, !393, !394, !395}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !390, file: !352, line: 863, baseType: !5, size: 128, align: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !390, file: !352, line: 864, baseType: !4, size: 64, align: 64, offset: 128)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !390, file: !352, line: 865, baseType: !4, size: 64, align: 64, offset: 192)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "firstpass", scope: !390, file: !352, line: 866, baseType: !43, size: 32, align: 32, offset: 256)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64, align: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "dropwhileobject", file: !352, line: 1051, baseType: !398)
!398 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 1046, size: 320, align: 64, elements: !399)
!399 = !{!400, !401, !402, !403}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !398, file: !352, line: 1047, baseType: !5, size: 128, align: 64)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !398, file: !352, line: 1048, baseType: !4, size: 64, align: 64, offset: 128)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !398, file: !352, line: 1049, baseType: !4, size: 64, align: 64, offset: 192)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !352, line: 1050, baseType: !16, size: 64, align: 64, offset: 256)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "takewhileobject", file: !352, line: 1220, baseType: !406)
!406 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 1215, size: 320, align: 64, elements: !407)
!407 = !{!408, !409, !410, !411}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !406, file: !352, line: 1216, baseType: !5, size: 128, align: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !406, file: !352, line: 1217, baseType: !4, size: 64, align: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !406, file: !352, line: 1218, baseType: !4, size: 64, align: 64, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !406, file: !352, line: 1219, baseType: !16, size: 64, align: 64, offset: 256)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64, align: 64)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "isliceobject", file: !352, line: 1386, baseType: !414)
!414 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 1379, size: 448, align: 64, elements: !415)
!415 = !{!416, !417, !418, !419, !420, !421}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !414, file: !352, line: 1380, baseType: !5, size: 128, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !414, file: !352, line: 1381, baseType: !4, size: 64, align: 64, offset: 128)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !414, file: !352, line: 1382, baseType: !10, size: 64, align: 64, offset: 192)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !414, file: !352, line: 1383, baseType: !10, size: 64, align: 64, offset: 256)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !414, file: !352, line: 1384, baseType: !10, size: 64, align: 64, offset: 320)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !414, file: !352, line: 1385, baseType: !10, size: 64, align: 64, offset: 384)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64, align: 64)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "starmapobject", file: !352, line: 1637, baseType: !424)
!424 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 1633, size: 256, align: 64, elements: !425)
!425 = !{!426, !427, !428}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !424, file: !352, line: 1634, baseType: !5, size: 128, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !424, file: !352, line: 1635, baseType: !4, size: 64, align: 64, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !424, file: !352, line: 1636, baseType: !4, size: 64, align: 64, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64, align: 64)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "chainobject", file: !352, line: 1781, baseType: !431)
!431 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 1777, size: 256, align: 64, elements: !432)
!432 = !{!433, !434, !435}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !431, file: !352, line: 1778, baseType: !5, size: 128, align: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !431, file: !352, line: 1779, baseType: !4, size: 64, align: 64, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !431, file: !352, line: 1780, baseType: !4, size: 64, align: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64, align: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "compressobject", file: !352, line: 3544, baseType: !438)
!438 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 3540, size: 256, align: 64, elements: !439)
!439 = !{!440, !441, !442}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !438, file: !352, line: 3541, baseType: !5, size: 128, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !438, file: !352, line: 3542, baseType: !4, size: 64, align: 64, offset: 128)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "selectors", scope: !438, file: !352, line: 3543, baseType: !4, size: 64, align: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "filterfalseobject", file: !352, line: 3704, baseType: !445)
!445 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 3700, size: 256, align: 64, elements: !446)
!446 = !{!447, !448, !449}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !445, file: !352, line: 3701, baseType: !5, size: 128, align: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !445, file: !352, line: 3702, baseType: !4, size: 64, align: 64, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !445, file: !352, line: 3703, baseType: !4, size: 64, align: 64, offset: 192)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64, align: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "countobject", file: !352, line: 3863, baseType: !452)
!452 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 3858, size: 320, align: 64, elements: !453)
!453 = !{!454, !455, !456, !457}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !452, file: !352, line: 3859, baseType: !5, size: 128, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !452, file: !352, line: 3860, baseType: !10, size: 64, align: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "long_cnt", scope: !452, file: !352, line: 3861, baseType: !4, size: 64, align: 64, offset: 192)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "long_step", scope: !452, file: !352, line: 3862, baseType: !4, size: 64, align: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "ziplongestobject", file: !352, line: 4256, baseType: !460)
!460 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 4249, size: 448, align: 64, elements: !461)
!461 = !{!462, !463, !464, !465, !466, !467}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !460, file: !352, line: 4250, baseType: !5, size: 128, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "tuplesize", scope: !460, file: !352, line: 4251, baseType: !10, size: 64, align: 64, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "numactive", scope: !460, file: !352, line: 4252, baseType: !10, size: 64, align: 64, offset: 192)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ittuple", scope: !460, file: !352, line: 4253, baseType: !4, size: 64, align: 64, offset: 256)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !460, file: !352, line: 4254, baseType: !4, size: 64, align: 64, offset: 320)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "fillvalue", scope: !460, file: !352, line: 4255, baseType: !4, size: 64, align: 64, offset: 384)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64, align: 64)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "permutationsobject", file: !352, line: 3002, baseType: !470)
!470 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 2994, size: 512, align: 64, elements: !471)
!471 = !{!472, !473, !474, !475, !476, !477, !478}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !470, file: !352, line: 2995, baseType: !5, size: 128, align: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !470, file: !352, line: 2996, baseType: !4, size: 64, align: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !470, file: !352, line: 2997, baseType: !247, size: 64, align: 64, offset: 192)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !470, file: !352, line: 2998, baseType: !247, size: 64, align: 64, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !470, file: !352, line: 2999, baseType: !4, size: 64, align: 64, offset: 320)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !470, file: !352, line: 3000, baseType: !10, size: 64, align: 64, offset: 384)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !470, file: !352, line: 3001, baseType: !43, size: 32, align: 32, offset: 448)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64, align: 64)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "productobject", file: !352, line: 1990, baseType: !481)
!481 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 1984, size: 384, align: 64, elements: !482)
!482 = !{!483, !484, !485, !486, !487}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !481, file: !352, line: 1985, baseType: !5, size: 128, align: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !481, file: !352, line: 1986, baseType: !4, size: 64, align: 64, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !481, file: !352, line: 1987, baseType: !247, size: 64, align: 64, offset: 192)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !481, file: !352, line: 1988, baseType: !4, size: 64, align: 64, offset: 256)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !481, file: !352, line: 1989, baseType: !43, size: 32, align: 32, offset: 320)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64, align: 64)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "repeatobject", file: !352, line: 4103, baseType: !490)
!490 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 4099, size: 256, align: 64, elements: !491)
!491 = !{!492, !493, !494}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !490, file: !352, line: 4100, baseType: !5, size: 128, align: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !490, file: !352, line: 4101, baseType: !4, size: 64, align: 64, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !490, file: !352, line: 4102, baseType: !10, size: 64, align: 64, offset: 192)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "_grouperobject", file: !352, line: 239, baseType: !497)
!497 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 235, size: 256, align: 64, elements: !498)
!498 = !{!499, !500, !501}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !497, file: !352, line: 236, baseType: !5, size: 128, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !497, file: !352, line: 237, baseType: !4, size: 64, align: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "tgtkey", scope: !497, file: !352, line: 238, baseType: !4, size: 64, align: 64, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64, align: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "groupbyobject", file: !352, line: 21, baseType: !504)
!504 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 14, size: 448, align: 64, elements: !505)
!505 = !{!506, !507, !508, !509, !510, !511}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !504, file: !352, line: 15, baseType: !5, size: 128, align: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !504, file: !352, line: 16, baseType: !4, size: 64, align: 64, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "keyfunc", scope: !504, file: !352, line: 17, baseType: !4, size: 64, align: 64, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "tgtkey", scope: !504, file: !352, line: 18, baseType: !4, size: 64, align: 64, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "currkey", scope: !504, file: !352, line: 19, baseType: !4, size: 64, align: 64, offset: 320)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "currvalue", scope: !504, file: !352, line: 20, baseType: !4, size: 64, align: 64, offset: 384)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64, align: 64)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "teedataobject", file: !352, line: 407, baseType: !514)
!514 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 401, size: 3968, align: 64, elements: !515)
!515 = !{!516, !517, !518, !519, !520}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !514, file: !352, line: 402, baseType: !5, size: 128, align: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !514, file: !352, line: 403, baseType: !4, size: 64, align: 64, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "numread", scope: !514, file: !352, line: 404, baseType: !43, size: 32, align: 32, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "nextlink", scope: !514, file: !352, line: 405, baseType: !4, size: 64, align: 64, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !514, file: !352, line: 406, baseType: !521, size: 3648, align: 64, offset: 320)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 3648, align: 64, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 57)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64, align: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "teeobject", file: !352, line: 414, baseType: !526)
!526 = !DICompositeType(tag: DW_TAG_structure_type, file: !352, line: 409, size: 320, align: 64, elements: !527)
!527 = !{!528, !529, !530, !531}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !526, file: !352, line: 410, baseType: !5, size: 128, align: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dataobj", scope: !526, file: !352, line: 411, baseType: !512, size: 64, align: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !526, file: !352, line: 412, baseType: !43, size: 32, align: 32, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !526, file: !352, line: 413, baseType: !4, size: 64, align: 64, offset: 256)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64, align: 64)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !534, line: 40, baseType: !535)
!534 = !DIFile(filename: "Include/listobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!535 = !DICompositeType(tag: DW_TAG_structure_type, file: !534, line: 23, size: 320, align: 64, elements: !536)
!536 = !{!537, !538, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !535, file: !534, line: 24, baseType: !22, size: 192, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !535, file: !534, line: 26, baseType: !539, size: 64, align: 64, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !535, file: !534, line: 39, baseType: !10, size: 64, align: 64, offset: 256)
!541 = !{!542, !555, !575, !594, !606, !609, !621, !640, !655, !670, !697, !713, !738, !745, !762, !777, !792, !818, !834, !858, !865, !882, !897, !912, !929, !932, !948, !967, !982, !997, !1018, !1021, !1028, !1041, !1056, !1071, !1088, !1091, !1098, !1111, !1121, !1132, !1151, !1161, !1168, !1187, !1202, !1217, !1232, !1235, !1248, !1263, !1278, !1311, !1318, !1327, !1330, !1352, !1358, !1373, !1388, !1409, !1412, !1432, !1447, !1462, !1485, !1488, !1501, !1516, !1524, !1539, !1542, !1547, !1550, !1581, !1601, !1620, !1664, !1679, !1691, !1721, !1736, !1751, !1785, !1813, !1844, !1851, !1870, !1885, !1900, !1930, !1947, !1972, !1979, !2018, !2028, !2033, !2044, !2047, !2050, !2053, !2061, !2091, !2118, !2158, !2165, !2169, !2194, !2206, !2215, !2230, !2254, !2257, !2264, !2269, !2280, !2291, !2302, !2309, !2313, !2320, !2324, !2327, !2341, !2347, !2357, !2362, !2384, !2405, !2417, !2422, !2438}
!542 = !DISubprogram(name: "PyInit_itertools", scope: !352, file: !352, line: 4568, type: !543, isLocal: false, isDefinition: true, scopeLine: 4569, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit_itertools, variables: !545)
!543 = !DISubroutineType(types: !544)
!544 = !{!4}
!545 = !{!546, !547, !548, !549}
!546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !542, file: !352, line: 4570, type: !43)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !542, file: !352, line: 4571, type: !4)
!548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !542, file: !352, line: 4572, type: !51)
!549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typelist", scope: !542, file: !352, line: 4573, type: !550)
!550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !551, size: 1344, align: 64, elements: !553)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !6, line: 422, baseType: !19)
!553 = !{!554}
!554 = !DISubrange(count: 21)
!555 = !DISubprogram(name: "accumulate_dealloc", scope: !352, file: !352, line: 3407, type: !556, isLocal: true, isDefinition: true, scopeLine: 3408, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.accumulateobject*)* @accumulate_dealloc, variables: !558)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !350}
!558 = !{!559, !560, !562, !565, !567, !570, !572}
!559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !555, file: !352, line: 3407, type: !350)
!560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !561, file: !352, line: 3410, type: !4)
!561 = distinct !DILexicalBlock(scope: !555, file: !352, line: 3410, column: 8)
!562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !563, file: !352, line: 3410, type: !4)
!563 = distinct !DILexicalBlock(scope: !564, file: !352, line: 3410, column: 101)
!564 = distinct !DILexicalBlock(scope: !561, file: !352, line: 3410, column: 67)
!565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !566, file: !352, line: 3411, type: !4)
!566 = distinct !DILexicalBlock(scope: !555, file: !352, line: 3411, column: 8)
!567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !568, file: !352, line: 3411, type: !4)
!568 = distinct !DILexicalBlock(scope: !569, file: !352, line: 3411, column: 101)
!569 = distinct !DILexicalBlock(scope: !566, file: !352, line: 3411, column: 67)
!570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !571, file: !352, line: 3412, type: !4)
!571 = distinct !DILexicalBlock(scope: !555, file: !352, line: 3412, column: 8)
!572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !573, file: !352, line: 3412, type: !4)
!573 = distinct !DILexicalBlock(scope: !574, file: !352, line: 3412, column: 98)
!574 = distinct !DILexicalBlock(scope: !571, file: !352, line: 3412, column: 64)
!575 = !DISubprogram(name: "accumulate_traverse", scope: !352, file: !352, line: 3417, type: !576, isLocal: true, isDefinition: true, scopeLine: 3418, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.accumulateobject*, i32 (%struct._object*, i8*)*, i8*)* @accumulate_traverse, variables: !578)
!576 = !DISubroutineType(types: !577)
!577 = !{!43, !350, !263, !89}
!578 = !{!579, !580, !581, !582, !586, !590}
!579 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !575, file: !352, line: 3417, type: !350)
!580 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !575, file: !352, line: 3417, type: !263)
!581 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !575, file: !352, line: 3417, type: !89)
!582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !583, file: !352, line: 3419, type: !43)
!583 = distinct !DILexicalBlock(scope: !584, file: !352, line: 3419, column: 25)
!584 = distinct !DILexicalBlock(scope: !585, file: !352, line: 3419, column: 14)
!585 = distinct !DILexicalBlock(scope: !575, file: !352, line: 3419, column: 8)
!586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !587, file: !352, line: 3420, type: !43)
!587 = distinct !DILexicalBlock(scope: !588, file: !352, line: 3420, column: 22)
!588 = distinct !DILexicalBlock(scope: !589, file: !352, line: 3420, column: 14)
!589 = distinct !DILexicalBlock(scope: !575, file: !352, line: 3420, column: 8)
!590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !591, file: !352, line: 3421, type: !43)
!591 = distinct !DILexicalBlock(scope: !592, file: !352, line: 3421, column: 25)
!592 = distinct !DILexicalBlock(scope: !593, file: !352, line: 3421, column: 14)
!593 = distinct !DILexicalBlock(scope: !575, file: !352, line: 3421, column: 8)
!594 = !DISubprogram(name: "accumulate_next", scope: !352, file: !352, line: 3426, type: !595, isLocal: true, isDefinition: true, scopeLine: 3427, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.accumulateobject*)* @accumulate_next, variables: !597)
!595 = !DISubroutineType(types: !596)
!596 = !{!4, !350}
!597 = !{!598, !599, !600, !601, !602, !604}
!598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !594, file: !352, line: 3426, type: !350)
!599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !594, file: !352, line: 3428, type: !4)
!600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldtotal", scope: !594, file: !352, line: 3428, type: !4)
!601 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtotal", scope: !594, file: !352, line: 3428, type: !4)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !603, file: !352, line: 3444, type: !4)
!603 = distinct !DILexicalBlock(scope: !594, file: !352, line: 3444, column: 8)
!604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !605, file: !352, line: 3450, type: !4)
!605 = distinct !DILexicalBlock(scope: !594, file: !352, line: 3450, column: 8)
!606 = !DISubprogram(name: "accumulate_reduce", scope: !352, file: !352, line: 3457, type: !595, isLocal: true, isDefinition: true, scopeLine: 3458, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.accumulateobject*)* @accumulate_reduce, variables: !607)
!607 = !{!608}
!608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !606, file: !352, line: 3457, type: !350)
!609 = !DISubprogram(name: "accumulate_setstate", scope: !352, file: !352, line: 3465, type: !610, isLocal: true, isDefinition: true, scopeLine: 3466, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.accumulateobject*, %struct._object*)* @accumulate_setstate, variables: !612)
!610 = !DISubroutineType(types: !611)
!611 = !{!4, !350, !4}
!612 = !{!613, !614, !615, !617}
!613 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !609, file: !352, line: 3465, type: !350)
!614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !609, file: !352, line: 3465, type: !4)
!615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !616, file: !352, line: 3467, type: !4)
!616 = distinct !DILexicalBlock(scope: !609, file: !352, line: 3467, column: 8)
!617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !618, file: !352, line: 3467, type: !4)
!618 = distinct !DILexicalBlock(scope: !619, file: !352, line: 3467, column: 113)
!619 = distinct !DILexicalBlock(scope: !620, file: !352, line: 3467, column: 82)
!620 = distinct !DILexicalBlock(scope: !616, file: !352, line: 3467, column: 59)
!621 = !DISubprogram(name: "accumulate_new", scope: !352, file: !352, line: 3373, type: !622, isLocal: true, isDefinition: true, scopeLine: 3374, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @accumulate_new, variables: !624)
!622 = !DISubroutineType(types: !623)
!623 = !{!4, !551, !4, !4}
!624 = !{!625, !626, !627, !628, !629, !630, !631, !632, !636}
!625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !621, file: !352, line: 3373, type: !551)
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !621, file: !352, line: 3373, type: !4)
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !621, file: !352, line: 3373, type: !4)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !621, file: !352, line: 3376, type: !4)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !621, file: !352, line: 3377, type: !4)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "binop", scope: !621, file: !352, line: 3378, type: !4)
!631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !621, file: !352, line: 3379, type: !350)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !633, file: !352, line: 3393, type: !4)
!633 = distinct !DILexicalBlock(scope: !634, file: !352, line: 3393, column: 12)
!634 = distinct !DILexicalBlock(scope: !635, file: !352, line: 3392, column: 27)
!635 = distinct !DILexicalBlock(scope: !621, file: !352, line: 3392, column: 9)
!636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !637, file: !352, line: 3398, type: !4)
!637 = distinct !DILexicalBlock(scope: !638, file: !352, line: 3398, column: 12)
!638 = distinct !DILexicalBlock(scope: !639, file: !352, line: 3397, column: 37)
!639 = distinct !DILexicalBlock(scope: !621, file: !352, line: 3397, column: 9)
!640 = !DISubprogram(name: "combinations_dealloc", scope: !352, file: !352, line: 2392, type: !641, isLocal: true, isDefinition: true, scopeLine: 2393, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.combinationsobject*)* @combinations_dealloc, variables: !643)
!641 = !DISubroutineType(types: !642)
!642 = !{null, !368}
!643 = !{!644, !645, !647, !650, !652}
!644 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !640, file: !352, line: 2392, type: !368)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !646, file: !352, line: 2395, type: !4)
!646 = distinct !DILexicalBlock(scope: !640, file: !352, line: 2395, column: 8)
!647 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !648, file: !352, line: 2395, type: !4)
!648 = distinct !DILexicalBlock(scope: !649, file: !352, line: 2395, column: 100)
!649 = distinct !DILexicalBlock(scope: !646, file: !352, line: 2395, column: 66)
!650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !651, file: !352, line: 2396, type: !4)
!651 = distinct !DILexicalBlock(scope: !640, file: !352, line: 2396, column: 8)
!652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !653, file: !352, line: 2396, type: !4)
!653 = distinct !DILexicalBlock(scope: !654, file: !352, line: 2396, column: 102)
!654 = distinct !DILexicalBlock(scope: !651, file: !352, line: 2396, column: 68)
!655 = !DISubprogram(name: "combinations_traverse", scope: !352, file: !352, line: 2413, type: !656, isLocal: true, isDefinition: true, scopeLine: 2414, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.combinationsobject*, i32 (%struct._object*, i8*)*, i8*)* @combinations_traverse, variables: !658)
!656 = !DISubroutineType(types: !657)
!657 = !{!43, !368, !263, !89}
!658 = !{!659, !660, !661, !662, !666}
!659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !655, file: !352, line: 2413, type: !368)
!660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !655, file: !352, line: 2413, type: !263)
!661 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !655, file: !352, line: 2413, type: !89)
!662 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !663, file: !352, line: 2415, type: !43)
!663 = distinct !DILexicalBlock(scope: !664, file: !352, line: 2415, column: 24)
!664 = distinct !DILexicalBlock(scope: !665, file: !352, line: 2415, column: 14)
!665 = distinct !DILexicalBlock(scope: !655, file: !352, line: 2415, column: 8)
!666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !667, file: !352, line: 2416, type: !43)
!667 = distinct !DILexicalBlock(scope: !668, file: !352, line: 2416, column: 26)
!668 = distinct !DILexicalBlock(scope: !669, file: !352, line: 2416, column: 14)
!669 = distinct !DILexicalBlock(scope: !655, file: !352, line: 2416, column: 8)
!670 = !DISubprogram(name: "combinations_next", scope: !352, file: !352, line: 2421, type: !671, isLocal: true, isDefinition: true, scopeLine: 2422, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*)* @combinations_next, variables: !673)
!671 = !DISubroutineType(types: !672)
!672 = !{!4, !368}
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !690, !692}
!674 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !670, file: !352, line: 2421, type: !368)
!675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !670, file: !352, line: 2423, type: !4)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !670, file: !352, line: 2424, type: !4)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !670, file: !352, line: 2425, type: !4)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !670, file: !352, line: 2426, type: !247)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !670, file: !352, line: 2427, type: !4)
!680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !670, file: !352, line: 2428, type: !10)
!681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !670, file: !352, line: 2429, type: !10)
!682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !670, file: !352, line: 2430, type: !10)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !670, file: !352, line: 2430, type: !10)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !670, file: !352, line: 2430, type: !10)
!685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !686, file: !352, line: 2450, type: !4)
!686 = distinct !DILexicalBlock(scope: !687, file: !352, line: 2449, column: 53)
!687 = distinct !DILexicalBlock(scope: !688, file: !352, line: 2449, column: 13)
!688 = distinct !DILexicalBlock(scope: !689, file: !352, line: 2447, column: 12)
!689 = distinct !DILexicalBlock(scope: !670, file: !352, line: 2435, column: 9)
!690 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !691, file: !352, line: 2460, type: !4)
!691 = distinct !DILexicalBlock(scope: !686, file: !352, line: 2460, column: 16)
!692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !693, file: !352, line: 2494, type: !4)
!693 = distinct !DILexicalBlock(scope: !694, file: !352, line: 2494, column: 16)
!694 = distinct !DILexicalBlock(scope: !695, file: !352, line: 2488, column: 28)
!695 = distinct !DILexicalBlock(scope: !696, file: !352, line: 2488, column: 9)
!696 = distinct !DILexicalBlock(scope: !688, file: !352, line: 2488, column: 9)
!697 = !DISubprogram(name: "combinations_reduce", scope: !352, file: !352, line: 2507, type: !671, isLocal: true, isDefinition: true, scopeLine: 2508, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*)* @combinations_reduce, variables: !698)
!698 = !{!699, !700, !704, !705, !709}
!699 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !697, file: !352, line: 2507, type: !368)
!700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !701, file: !352, line: 2514, type: !4)
!701 = distinct !DILexicalBlock(scope: !702, file: !352, line: 2513, column: 12)
!702 = distinct !DILexicalBlock(scope: !703, file: !352, line: 2511, column: 16)
!703 = distinct !DILexicalBlock(scope: !697, file: !352, line: 2509, column: 9)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !701, file: !352, line: 2515, type: !10)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !706, file: !352, line: 2523, type: !4)
!706 = distinct !DILexicalBlock(scope: !707, file: !352, line: 2522, column: 9)
!707 = distinct !DILexicalBlock(scope: !708, file: !352, line: 2521, column: 9)
!708 = distinct !DILexicalBlock(scope: !701, file: !352, line: 2521, column: 9)
!709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !710, file: !352, line: 2525, type: !4)
!710 = distinct !DILexicalBlock(scope: !711, file: !352, line: 2525, column: 20)
!711 = distinct !DILexicalBlock(scope: !712, file: !352, line: 2524, column: 25)
!712 = distinct !DILexicalBlock(scope: !706, file: !352, line: 2524, column: 17)
!713 = !DISubprogram(name: "combinations_setstate", scope: !352, file: !352, line: 2536, type: !714, isLocal: true, isDefinition: true, scopeLine: 2537, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*, %struct._object*)* @combinations_setstate, variables: !716)
!714 = !DISubroutineType(types: !715)
!715 = !{!4, !368, !4}
!716 = !{!717, !718, !719, !720, !721, !722, !726, !727, !728, !732, !734}
!717 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !713, file: !352, line: 2536, type: !368)
!718 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !713, file: !352, line: 2536, type: !4)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !713, file: !352, line: 2538, type: !4)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !713, file: !352, line: 2539, type: !10)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !713, file: !352, line: 2540, type: !10)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "max", scope: !723, file: !352, line: 2550, type: !10)
!723 = distinct !DILexicalBlock(scope: !724, file: !352, line: 2549, column: 5)
!724 = distinct !DILexicalBlock(scope: !725, file: !352, line: 2548, column: 5)
!725 = distinct !DILexicalBlock(scope: !713, file: !352, line: 2548, column: 5)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !723, file: !352, line: 2551, type: !4)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !723, file: !352, line: 2552, type: !10)
!728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !729, file: !352, line: 2568, type: !4)
!729 = distinct !DILexicalBlock(scope: !730, file: !352, line: 2567, column: 29)
!730 = distinct !DILexicalBlock(scope: !731, file: !352, line: 2567, column: 5)
!731 = distinct !DILexicalBlock(scope: !713, file: !352, line: 2567, column: 5)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !733, file: !352, line: 2573, type: !4)
!733 = distinct !DILexicalBlock(scope: !713, file: !352, line: 2573, column: 8)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !735, file: !352, line: 2573, type: !4)
!735 = distinct !DILexicalBlock(scope: !736, file: !352, line: 2573, column: 115)
!736 = distinct !DILexicalBlock(scope: !737, file: !352, line: 2573, column: 83)
!737 = distinct !DILexicalBlock(scope: !733, file: !352, line: 2573, column: 60)
!738 = !DISubprogram(name: "combinations_sizeof", scope: !352, file: !352, line: 2403, type: !739, isLocal: true, isDefinition: true, scopeLine: 2404, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*, i8*)* @combinations_sizeof, variables: !741)
!739 = !DISubroutineType(types: !740)
!740 = !{!4, !368, !89}
!741 = !{!742, !743, !744}
!742 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !738, file: !352, line: 2403, type: !368)
!743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !738, file: !352, line: 2403, type: !89)
!744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !738, file: !352, line: 2405, type: !10)
!745 = !DISubprogram(name: "combinations_new", scope: !352, file: !352, line: 2338, type: !622, isLocal: true, isDefinition: true, scopeLine: 2339, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @combinations_new, variables: !746)
!746 = !{!747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !759}
!747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !745, file: !352, line: 2338, type: !551)
!748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !745, file: !352, line: 2338, type: !4)
!749 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !745, file: !352, line: 2338, type: !4)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "co", scope: !745, file: !352, line: 2340, type: !368)
!751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !745, file: !352, line: 2341, type: !10)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !745, file: !352, line: 2342, type: !10)
!753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !745, file: !352, line: 2343, type: !4)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !745, file: !352, line: 2344, type: !4)
!755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !745, file: !352, line: 2345, type: !247)
!756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !745, file: !352, line: 2346, type: !10)
!757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !758, file: !352, line: 2387, type: !4)
!758 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2387, column: 8)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !760, file: !352, line: 2387, type: !4)
!760 = distinct !DILexicalBlock(scope: !761, file: !352, line: 2387, column: 96)
!761 = distinct !DILexicalBlock(scope: !758, file: !352, line: 2387, column: 62)
!762 = !DISubprogram(name: "cwr_dealloc", scope: !352, file: !352, line: 2733, type: !763, isLocal: true, isDefinition: true, scopeLine: 2734, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.cwrobject*)* @cwr_dealloc, variables: !765)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !378}
!765 = !{!766, !767, !769, !772, !774}
!766 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !762, file: !352, line: 2733, type: !378)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !768, file: !352, line: 2736, type: !4)
!768 = distinct !DILexicalBlock(scope: !762, file: !352, line: 2736, column: 8)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !770, file: !352, line: 2736, type: !4)
!770 = distinct !DILexicalBlock(scope: !771, file: !352, line: 2736, column: 100)
!771 = distinct !DILexicalBlock(scope: !768, file: !352, line: 2736, column: 66)
!772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !773, file: !352, line: 2737, type: !4)
!773 = distinct !DILexicalBlock(scope: !762, file: !352, line: 2737, column: 8)
!774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !775, file: !352, line: 2737, type: !4)
!775 = distinct !DILexicalBlock(scope: !776, file: !352, line: 2737, column: 102)
!776 = distinct !DILexicalBlock(scope: !773, file: !352, line: 2737, column: 68)
!777 = !DISubprogram(name: "cwr_traverse", scope: !352, file: !352, line: 2754, type: !778, isLocal: true, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.cwrobject*, i32 (%struct._object*, i8*)*, i8*)* @cwr_traverse, variables: !780)
!778 = !DISubroutineType(types: !779)
!779 = !{!43, !378, !263, !89}
!780 = !{!781, !782, !783, !784, !788}
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !777, file: !352, line: 2754, type: !378)
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !777, file: !352, line: 2754, type: !263)
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !777, file: !352, line: 2754, type: !89)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !785, file: !352, line: 2756, type: !43)
!785 = distinct !DILexicalBlock(scope: !786, file: !352, line: 2756, column: 24)
!786 = distinct !DILexicalBlock(scope: !787, file: !352, line: 2756, column: 14)
!787 = distinct !DILexicalBlock(scope: !777, file: !352, line: 2756, column: 8)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !789, file: !352, line: 2757, type: !43)
!789 = distinct !DILexicalBlock(scope: !790, file: !352, line: 2757, column: 26)
!790 = distinct !DILexicalBlock(scope: !791, file: !352, line: 2757, column: 14)
!791 = distinct !DILexicalBlock(scope: !777, file: !352, line: 2757, column: 8)
!792 = !DISubprogram(name: "cwr_next", scope: !352, file: !352, line: 2762, type: !793, isLocal: true, isDefinition: true, scopeLine: 2763, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*)* @cwr_next, variables: !795)
!793 = !DISubroutineType(types: !794)
!794 = !{!4, !378}
!795 = !{!796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !811, !813}
!796 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !792, file: !352, line: 2762, type: !378)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !792, file: !352, line: 2764, type: !4)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !792, file: !352, line: 2765, type: !4)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !792, file: !352, line: 2766, type: !4)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !792, file: !352, line: 2767, type: !247)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !792, file: !352, line: 2768, type: !4)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !792, file: !352, line: 2769, type: !10)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !792, file: !352, line: 2770, type: !10)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !792, file: !352, line: 2771, type: !10)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !792, file: !352, line: 2771, type: !10)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !807, file: !352, line: 2791, type: !4)
!807 = distinct !DILexicalBlock(scope: !808, file: !352, line: 2790, column: 53)
!808 = distinct !DILexicalBlock(scope: !809, file: !352, line: 2790, column: 13)
!809 = distinct !DILexicalBlock(scope: !810, file: !352, line: 2788, column: 12)
!810 = distinct !DILexicalBlock(scope: !792, file: !352, line: 2776, column: 9)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !812, file: !352, line: 2801, type: !4)
!812 = distinct !DILexicalBlock(scope: !807, file: !352, line: 2801, column: 16)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !814, file: !352, line: 2827, type: !4)
!814 = distinct !DILexicalBlock(scope: !815, file: !352, line: 2827, column: 16)
!815 = distinct !DILexicalBlock(scope: !816, file: !352, line: 2822, column: 28)
!816 = distinct !DILexicalBlock(scope: !817, file: !352, line: 2822, column: 9)
!817 = distinct !DILexicalBlock(scope: !809, file: !352, line: 2822, column: 9)
!818 = !DISubprogram(name: "cwr_reduce", scope: !352, file: !352, line: 2840, type: !793, isLocal: true, isDefinition: true, scopeLine: 2841, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*)* @cwr_reduce, variables: !819)
!819 = !{!820, !821, !825, !826, !830}
!820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !818, file: !352, line: 2840, type: !378)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !822, file: !352, line: 2847, type: !4)
!822 = distinct !DILexicalBlock(scope: !823, file: !352, line: 2846, column: 12)
!823 = distinct !DILexicalBlock(scope: !824, file: !352, line: 2844, column: 16)
!824 = distinct !DILexicalBlock(scope: !818, file: !352, line: 2842, column: 9)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !822, file: !352, line: 2848, type: !10)
!826 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !827, file: !352, line: 2856, type: !4)
!827 = distinct !DILexicalBlock(scope: !828, file: !352, line: 2855, column: 9)
!828 = distinct !DILexicalBlock(scope: !829, file: !352, line: 2854, column: 9)
!829 = distinct !DILexicalBlock(scope: !822, file: !352, line: 2854, column: 9)
!830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !831, file: !352, line: 2858, type: !4)
!831 = distinct !DILexicalBlock(scope: !832, file: !352, line: 2858, column: 20)
!832 = distinct !DILexicalBlock(scope: !833, file: !352, line: 2857, column: 25)
!833 = distinct !DILexicalBlock(scope: !827, file: !352, line: 2857, column: 17)
!834 = !DISubprogram(name: "cwr_setstate", scope: !352, file: !352, line: 2869, type: !835, isLocal: true, isDefinition: true, scopeLine: 2870, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*, %struct._object*)* @cwr_setstate, variables: !837)
!835 = !DISubroutineType(types: !836)
!836 = !{!4, !378, !4}
!837 = !{!838, !839, !840, !841, !842, !843, !847, !848, !852, !854}
!838 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !834, file: !352, line: 2869, type: !378)
!839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !834, file: !352, line: 2869, type: !4)
!840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !834, file: !352, line: 2871, type: !4)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !834, file: !352, line: 2872, type: !10)
!842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !834, file: !352, line: 2872, type: !10)
!843 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !844, file: !352, line: 2883, type: !4)
!844 = distinct !DILexicalBlock(scope: !845, file: !352, line: 2882, column: 5)
!845 = distinct !DILexicalBlock(scope: !846, file: !352, line: 2881, column: 5)
!846 = distinct !DILexicalBlock(scope: !834, file: !352, line: 2881, column: 5)
!847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !844, file: !352, line: 2884, type: !10)
!848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !849, file: !352, line: 2898, type: !4)
!849 = distinct !DILexicalBlock(scope: !850, file: !352, line: 2897, column: 29)
!850 = distinct !DILexicalBlock(scope: !851, file: !352, line: 2897, column: 5)
!851 = distinct !DILexicalBlock(scope: !834, file: !352, line: 2897, column: 5)
!852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !853, file: !352, line: 2902, type: !4)
!853 = distinct !DILexicalBlock(scope: !834, file: !352, line: 2902, column: 8)
!854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !855, file: !352, line: 2902, type: !4)
!855 = distinct !DILexicalBlock(scope: !856, file: !352, line: 2902, column: 115)
!856 = distinct !DILexicalBlock(scope: !857, file: !352, line: 2902, column: 83)
!857 = distinct !DILexicalBlock(scope: !853, file: !352, line: 2902, column: 60)
!858 = !DISubprogram(name: "cwr_sizeof", scope: !352, file: !352, line: 2744, type: !859, isLocal: true, isDefinition: true, scopeLine: 2745, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*, i8*)* @cwr_sizeof, variables: !861)
!859 = !DISubroutineType(types: !860)
!860 = !{!4, !378, !89}
!861 = !{!862, !863, !864}
!862 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !858, file: !352, line: 2744, type: !378)
!863 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !858, file: !352, line: 2744, type: !89)
!864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !858, file: !352, line: 2746, type: !10)
!865 = !DISubprogram(name: "cwr_new", scope: !352, file: !352, line: 2679, type: !622, isLocal: true, isDefinition: true, scopeLine: 2680, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cwr_new, variables: !866)
!866 = !{!867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !879}
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !865, file: !352, line: 2679, type: !551)
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !865, file: !352, line: 2679, type: !4)
!869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !865, file: !352, line: 2679, type: !4)
!870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "co", scope: !865, file: !352, line: 2681, type: !378)
!871 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !865, file: !352, line: 2682, type: !10)
!872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !865, file: !352, line: 2683, type: !10)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !865, file: !352, line: 2684, type: !4)
!874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !865, file: !352, line: 2685, type: !4)
!875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !865, file: !352, line: 2686, type: !247)
!876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !865, file: !352, line: 2687, type: !10)
!877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !878, file: !352, line: 2728, type: !4)
!878 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2728, column: 8)
!879 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !880, file: !352, line: 2728, type: !4)
!880 = distinct !DILexicalBlock(scope: !881, file: !352, line: 2728, column: 96)
!881 = distinct !DILexicalBlock(scope: !878, file: !352, line: 2728, column: 62)
!882 = !DISubprogram(name: "cycle_dealloc", scope: !352, file: !352, line: 911, type: !883, isLocal: true, isDefinition: true, scopeLine: 912, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.cycleobject*)* @cycle_dealloc, variables: !885)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !388}
!885 = !{!886, !887, !889, !892, !894}
!886 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !882, file: !352, line: 911, type: !388)
!887 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !888, file: !352, line: 914, type: !4)
!888 = distinct !DILexicalBlock(scope: !882, file: !352, line: 914, column: 8)
!889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !890, file: !352, line: 914, type: !4)
!890 = distinct !DILexicalBlock(scope: !891, file: !352, line: 914, column: 101)
!891 = distinct !DILexicalBlock(scope: !888, file: !352, line: 914, column: 67)
!892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !893, file: !352, line: 915, type: !4)
!893 = distinct !DILexicalBlock(scope: !882, file: !352, line: 915, column: 8)
!894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !895, file: !352, line: 915, type: !4)
!895 = distinct !DILexicalBlock(scope: !896, file: !352, line: 915, column: 98)
!896 = distinct !DILexicalBlock(scope: !893, file: !352, line: 915, column: 64)
!897 = !DISubprogram(name: "cycle_traverse", scope: !352, file: !352, line: 920, type: !898, isLocal: true, isDefinition: true, scopeLine: 921, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.cycleobject*, i32 (%struct._object*, i8*)*, i8*)* @cycle_traverse, variables: !900)
!898 = !DISubroutineType(types: !899)
!899 = !{!43, !388, !263, !89}
!900 = !{!901, !902, !903, !904, !908}
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !897, file: !352, line: 920, type: !388)
!902 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !897, file: !352, line: 920, type: !263)
!903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !897, file: !352, line: 920, type: !89)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !905, file: !352, line: 922, type: !43)
!905 = distinct !DILexicalBlock(scope: !906, file: !352, line: 922, column: 22)
!906 = distinct !DILexicalBlock(scope: !907, file: !352, line: 922, column: 14)
!907 = distinct !DILexicalBlock(scope: !897, file: !352, line: 922, column: 8)
!908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !909, file: !352, line: 923, type: !43)
!909 = distinct !DILexicalBlock(scope: !910, file: !352, line: 923, column: 25)
!910 = distinct !DILexicalBlock(scope: !911, file: !352, line: 923, column: 14)
!911 = distinct !DILexicalBlock(scope: !897, file: !352, line: 923, column: 8)
!912 = !DISubprogram(name: "cycle_next", scope: !352, file: !352, line: 928, type: !913, isLocal: true, isDefinition: true, scopeLine: 929, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cycleobject*)* @cycle_next, variables: !915)
!913 = !DISubroutineType(types: !914)
!914 = !{!4, !388}
!915 = !{!916, !917, !918, !919, !920, !927}
!916 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !912, file: !352, line: 928, type: !388)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !912, file: !352, line: 930, type: !4)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !912, file: !352, line: 931, type: !4)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !912, file: !352, line: 932, type: !4)
!920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !921, file: !352, line: 938, type: !4)
!921 = distinct !DILexicalBlock(scope: !922, file: !352, line: 938, column: 20)
!922 = distinct !DILexicalBlock(scope: !923, file: !352, line: 937, column: 67)
!923 = distinct !DILexicalBlock(scope: !924, file: !352, line: 937, column: 17)
!924 = distinct !DILexicalBlock(scope: !925, file: !352, line: 936, column: 33)
!925 = distinct !DILexicalBlock(scope: !926, file: !352, line: 936, column: 13)
!926 = distinct !DILexicalBlock(scope: !912, file: !352, line: 934, column: 15)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !928, file: !352, line: 957, type: !4)
!928 = distinct !DILexicalBlock(scope: !926, file: !352, line: 957, column: 12)
!929 = !DISubprogram(name: "cycle_reduce", scope: !352, file: !352, line: 962, type: !913, isLocal: true, isDefinition: true, scopeLine: 963, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cycleobject*)* @cycle_reduce, variables: !930)
!930 = !{!931}
!931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !929, file: !352, line: 962, type: !388)
!932 = !DISubprogram(name: "cycle_setstate", scope: !352, file: !352, line: 972, type: !933, isLocal: true, isDefinition: true, scopeLine: 973, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cycleobject*, %struct._object*)* @cycle_setstate, variables: !935)
!933 = !DISubroutineType(types: !934)
!934 = !{!4, !388, !4}
!935 = !{!936, !937, !938, !939, !940, !942, !946}
!936 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !932, file: !352, line: 972, type: !388)
!937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !932, file: !352, line: 972, type: !4)
!938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "saved", scope: !932, file: !352, line: 974, type: !4)
!939 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "firstpass", scope: !932, file: !352, line: 975, type: !43)
!940 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !941, file: !352, line: 978, type: !4)
!941 = distinct !DILexicalBlock(scope: !932, file: !352, line: 978, column: 8)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !943, file: !352, line: 978, type: !4)
!943 = distinct !DILexicalBlock(scope: !944, file: !352, line: 978, column: 113)
!944 = distinct !DILexicalBlock(scope: !945, file: !352, line: 978, column: 82)
!945 = distinct !DILexicalBlock(scope: !941, file: !352, line: 978, column: 59)
!946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !947, file: !352, line: 980, type: !4)
!947 = distinct !DILexicalBlock(scope: !932, file: !352, line: 980, column: 8)
!948 = !DISubprogram(name: "cycle_new", scope: !352, file: !352, line: 872, type: !622, isLocal: true, isDefinition: true, scopeLine: 873, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cycle_new, variables: !949)
!949 = !{!950, !951, !952, !953, !954, !955, !956, !957, !961, !965}
!950 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !948, file: !352, line: 872, type: !551)
!951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !948, file: !352, line: 872, type: !4)
!952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !948, file: !352, line: 872, type: !4)
!953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !948, file: !352, line: 874, type: !4)
!954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !948, file: !352, line: 875, type: !4)
!955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "saved", scope: !948, file: !352, line: 876, type: !4)
!956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !948, file: !352, line: 877, type: !388)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !958, file: !352, line: 892, type: !4)
!958 = distinct !DILexicalBlock(scope: !959, file: !352, line: 892, column: 12)
!959 = distinct !DILexicalBlock(scope: !960, file: !352, line: 891, column: 30)
!960 = distinct !DILexicalBlock(scope: !948, file: !352, line: 891, column: 9)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !962, file: !352, line: 899, type: !4)
!962 = distinct !DILexicalBlock(scope: !963, file: !352, line: 899, column: 12)
!963 = distinct !DILexicalBlock(scope: !964, file: !352, line: 898, column: 27)
!964 = distinct !DILexicalBlock(scope: !948, file: !352, line: 898, column: 9)
!965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !966, file: !352, line: 900, type: !4)
!966 = distinct !DILexicalBlock(scope: !963, file: !352, line: 900, column: 12)
!967 = !DISubprogram(name: "dropwhile_dealloc", scope: !352, file: !352, line: 1088, type: !968, isLocal: true, isDefinition: true, scopeLine: 1089, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.dropwhileobject*)* @dropwhile_dealloc, variables: !970)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !396}
!970 = !{!971, !972, !974, !977, !979}
!971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !967, file: !352, line: 1088, type: !396)
!972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !973, file: !352, line: 1091, type: !4)
!973 = distinct !DILexicalBlock(scope: !967, file: !352, line: 1091, column: 8)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !975, file: !352, line: 1091, type: !4)
!975 = distinct !DILexicalBlock(scope: !976, file: !352, line: 1091, column: 100)
!976 = distinct !DILexicalBlock(scope: !973, file: !352, line: 1091, column: 66)
!977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !978, file: !352, line: 1092, type: !4)
!978 = distinct !DILexicalBlock(scope: !967, file: !352, line: 1092, column: 8)
!979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !980, file: !352, line: 1092, type: !4)
!980 = distinct !DILexicalBlock(scope: !981, file: !352, line: 1092, column: 98)
!981 = distinct !DILexicalBlock(scope: !978, file: !352, line: 1092, column: 64)
!982 = !DISubprogram(name: "dropwhile_traverse", scope: !352, file: !352, line: 1097, type: !983, isLocal: true, isDefinition: true, scopeLine: 1098, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.dropwhileobject*, i32 (%struct._object*, i8*)*, i8*)* @dropwhile_traverse, variables: !985)
!983 = !DISubroutineType(types: !984)
!984 = !{!43, !396, !263, !89}
!985 = !{!986, !987, !988, !989, !993}
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !982, file: !352, line: 1097, type: !396)
!987 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !982, file: !352, line: 1097, type: !263)
!988 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !982, file: !352, line: 1097, type: !89)
!989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !990, file: !352, line: 1099, type: !43)
!990 = distinct !DILexicalBlock(scope: !991, file: !352, line: 1099, column: 22)
!991 = distinct !DILexicalBlock(scope: !992, file: !352, line: 1099, column: 14)
!992 = distinct !DILexicalBlock(scope: !982, file: !352, line: 1099, column: 8)
!993 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !994, file: !352, line: 1100, type: !43)
!994 = distinct !DILexicalBlock(scope: !995, file: !352, line: 1100, column: 24)
!995 = distinct !DILexicalBlock(scope: !996, file: !352, line: 1100, column: 14)
!996 = distinct !DILexicalBlock(scope: !982, file: !352, line: 1100, column: 8)
!997 = !DISubprogram(name: "dropwhile_next", scope: !352, file: !352, line: 1105, type: !998, isLocal: true, isDefinition: true, scopeLine: 1106, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.dropwhileobject*)* @dropwhile_next, variables: !1000)
!998 = !DISubroutineType(types: !999)
!999 = !{!4, !396}
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1007, !1014, !1016}
!1001 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !997, file: !352, line: 1105, type: !396)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !997, file: !352, line: 1107, type: !4)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "good", scope: !997, file: !352, line: 1107, type: !4)
!1004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !997, file: !352, line: 1108, type: !4)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !997, file: !352, line: 1109, type: !16)
!1006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iternext", scope: !997, file: !352, line: 1110, type: !115)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1008, file: !352, line: 1122, type: !4)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !352, line: 1122, column: 16)
!1009 = distinct !DILexicalBlock(scope: !1010, file: !352, line: 1121, column: 33)
!1010 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1121, column: 13)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !352, line: 1113, column: 14)
!1012 = distinct !DILexicalBlock(scope: !1013, file: !352, line: 1113, column: 5)
!1013 = distinct !DILexicalBlock(scope: !997, file: !352, line: 1113, column: 5)
!1014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1015, file: !352, line: 1126, type: !4)
!1015 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1126, column: 12)
!1016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1017, file: !352, line: 1131, type: !4)
!1017 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1131, column: 12)
!1018 = !DISubprogram(name: "dropwhile_reduce", scope: !352, file: !352, line: 1138, type: !998, isLocal: true, isDefinition: true, scopeLine: 1139, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.dropwhileobject*)* @dropwhile_reduce, variables: !1019)
!1019 = !{!1020}
!1020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1018, file: !352, line: 1138, type: !396)
!1021 = !DISubprogram(name: "dropwhile_setstate", scope: !352, file: !352, line: 1145, type: !1022, isLocal: true, isDefinition: true, scopeLine: 1146, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.dropwhileobject*, %struct._object*)* @dropwhile_setstate, variables: !1024)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!4, !396, !4}
!1024 = !{!1025, !1026, !1027}
!1025 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1021, file: !352, line: 1145, type: !396)
!1026 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1021, file: !352, line: 1145, type: !4)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1021, file: !352, line: 1147, type: !43)
!1028 = !DISubprogram(name: "dropwhile_new", scope: !352, file: !352, line: 1056, type: !622, isLocal: true, isDefinition: true, scopeLine: 1057, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @dropwhile_new, variables: !1029)
!1029 = !{!1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037}
!1030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1028, file: !352, line: 1056, type: !551)
!1031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1028, file: !352, line: 1056, type: !4)
!1032 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1028, file: !352, line: 1056, type: !4)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1028, file: !352, line: 1058, type: !4)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1028, file: !352, line: 1058, type: !4)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1028, file: !352, line: 1059, type: !4)
!1036 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1028, file: !352, line: 1060, type: !396)
!1037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1038, file: !352, line: 1076, type: !4)
!1038 = distinct !DILexicalBlock(scope: !1039, file: !352, line: 1076, column: 12)
!1039 = distinct !DILexicalBlock(scope: !1040, file: !352, line: 1075, column: 27)
!1040 = distinct !DILexicalBlock(scope: !1028, file: !352, line: 1075, column: 9)
!1041 = !DISubprogram(name: "takewhile_dealloc", scope: !352, file: !352, line: 1257, type: !1042, isLocal: true, isDefinition: true, scopeLine: 1258, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.takewhileobject*)* @takewhile_dealloc, variables: !1044)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !404}
!1044 = !{!1045, !1046, !1048, !1051, !1053}
!1045 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1041, file: !352, line: 1257, type: !404)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1047, file: !352, line: 1260, type: !4)
!1047 = distinct !DILexicalBlock(scope: !1041, file: !352, line: 1260, column: 8)
!1048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1049, file: !352, line: 1260, type: !4)
!1049 = distinct !DILexicalBlock(scope: !1050, file: !352, line: 1260, column: 100)
!1050 = distinct !DILexicalBlock(scope: !1047, file: !352, line: 1260, column: 66)
!1051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1052, file: !352, line: 1261, type: !4)
!1052 = distinct !DILexicalBlock(scope: !1041, file: !352, line: 1261, column: 8)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1054, file: !352, line: 1261, type: !4)
!1054 = distinct !DILexicalBlock(scope: !1055, file: !352, line: 1261, column: 98)
!1055 = distinct !DILexicalBlock(scope: !1052, file: !352, line: 1261, column: 64)
!1056 = !DISubprogram(name: "takewhile_traverse", scope: !352, file: !352, line: 1266, type: !1057, isLocal: true, isDefinition: true, scopeLine: 1267, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.takewhileobject*, i32 (%struct._object*, i8*)*, i8*)* @takewhile_traverse, variables: !1059)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!43, !404, !263, !89}
!1059 = !{!1060, !1061, !1062, !1063, !1067}
!1060 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1056, file: !352, line: 1266, type: !404)
!1061 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1056, file: !352, line: 1266, type: !263)
!1062 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1056, file: !352, line: 1266, type: !89)
!1063 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1064, file: !352, line: 1268, type: !43)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !352, line: 1268, column: 22)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !352, line: 1268, column: 14)
!1066 = distinct !DILexicalBlock(scope: !1056, file: !352, line: 1268, column: 8)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1068, file: !352, line: 1269, type: !43)
!1068 = distinct !DILexicalBlock(scope: !1069, file: !352, line: 1269, column: 24)
!1069 = distinct !DILexicalBlock(scope: !1070, file: !352, line: 1269, column: 14)
!1070 = distinct !DILexicalBlock(scope: !1056, file: !352, line: 1269, column: 8)
!1071 = !DISubprogram(name: "takewhile_next", scope: !352, file: !352, line: 1274, type: !1072, isLocal: true, isDefinition: true, scopeLine: 1275, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.takewhileobject*)* @takewhile_next, variables: !1074)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!4, !404}
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1084, !1086}
!1075 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1071, file: !352, line: 1274, type: !404)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1071, file: !352, line: 1276, type: !4)
!1077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "good", scope: !1071, file: !352, line: 1276, type: !4)
!1078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1071, file: !352, line: 1277, type: !4)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1071, file: !352, line: 1278, type: !16)
!1080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1081, file: !352, line: 1289, type: !4)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !352, line: 1289, column: 12)
!1082 = distinct !DILexicalBlock(scope: !1083, file: !352, line: 1288, column: 29)
!1083 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1288, column: 9)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1085, file: !352, line: 1293, type: !4)
!1085 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1293, column: 8)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1087, file: !352, line: 1296, type: !4)
!1087 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1296, column: 8)
!1088 = !DISubprogram(name: "takewhile_reduce", scope: !352, file: !352, line: 1303, type: !1072, isLocal: true, isDefinition: true, scopeLine: 1304, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.takewhileobject*)* @takewhile_reduce, variables: !1089)
!1089 = !{!1090}
!1090 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1088, file: !352, line: 1303, type: !404)
!1091 = !DISubprogram(name: "takewhile_reduce_setstate", scope: !352, file: !352, line: 1310, type: !1092, isLocal: true, isDefinition: true, scopeLine: 1311, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.takewhileobject*, %struct._object*)* @takewhile_reduce_setstate, variables: !1094)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!4, !404, !4}
!1094 = !{!1095, !1096, !1097}
!1095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1091, file: !352, line: 1310, type: !404)
!1096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1091, file: !352, line: 1310, type: !4)
!1097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1091, file: !352, line: 1312, type: !43)
!1098 = !DISubprogram(name: "takewhile_new", scope: !352, file: !352, line: 1225, type: !622, isLocal: true, isDefinition: true, scopeLine: 1226, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @takewhile_new, variables: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107}
!1100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1098, file: !352, line: 1225, type: !551)
!1101 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1098, file: !352, line: 1225, type: !4)
!1102 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1098, file: !352, line: 1225, type: !4)
!1103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1098, file: !352, line: 1227, type: !4)
!1104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1098, file: !352, line: 1227, type: !4)
!1105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1098, file: !352, line: 1228, type: !4)
!1106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1098, file: !352, line: 1229, type: !404)
!1107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1108, file: !352, line: 1245, type: !4)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !352, line: 1245, column: 12)
!1109 = distinct !DILexicalBlock(scope: !1110, file: !352, line: 1244, column: 27)
!1110 = distinct !DILexicalBlock(scope: !1098, file: !352, line: 1244, column: 9)
!1111 = !DISubprogram(name: "islice_dealloc", scope: !352, file: !352, line: 1472, type: !1112, isLocal: true, isDefinition: true, scopeLine: 1473, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.isliceobject*)* @islice_dealloc, variables: !1114)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !412}
!1114 = !{!1115, !1116, !1118}
!1115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1111, file: !352, line: 1472, type: !412)
!1116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1117, file: !352, line: 1475, type: !4)
!1117 = distinct !DILexicalBlock(scope: !1111, file: !352, line: 1475, column: 8)
!1118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1119, file: !352, line: 1475, type: !4)
!1119 = distinct !DILexicalBlock(scope: !1120, file: !352, line: 1475, column: 98)
!1120 = distinct !DILexicalBlock(scope: !1117, file: !352, line: 1475, column: 64)
!1121 = !DISubprogram(name: "islice_traverse", scope: !352, file: !352, line: 1480, type: !1122, isLocal: true, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.isliceobject*, i32 (%struct._object*, i8*)*, i8*)* @islice_traverse, variables: !1124)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!43, !412, !263, !89}
!1124 = !{!1125, !1126, !1127, !1128}
!1125 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1121, file: !352, line: 1480, type: !412)
!1126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1121, file: !352, line: 1480, type: !263)
!1127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1121, file: !352, line: 1480, type: !89)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1129, file: !352, line: 1482, type: !43)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !352, line: 1482, column: 22)
!1130 = distinct !DILexicalBlock(scope: !1131, file: !352, line: 1482, column: 14)
!1131 = distinct !DILexicalBlock(scope: !1121, file: !352, line: 1482, column: 8)
!1132 = !DISubprogram(name: "islice_next", scope: !352, file: !352, line: 1487, type: !1133, isLocal: true, isDefinition: true, scopeLine: 1488, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.isliceobject*)* @islice_next, variables: !1135)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!4, !412}
!1135 = !{!1136, !1137, !1138, !1139, !1140, !1141, !1142, !1145, !1147}
!1136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1132, file: !352, line: 1487, type: !412)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1132, file: !352, line: 1489, type: !4)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1132, file: !352, line: 1490, type: !4)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1132, file: !352, line: 1491, type: !10)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldnext", scope: !1132, file: !352, line: 1492, type: !10)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iternext", scope: !1132, file: !352, line: 1493, type: !115)
!1142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1143, file: !352, line: 1503, type: !4)
!1143 = distinct !DILexicalBlock(scope: !1144, file: !352, line: 1503, column: 12)
!1144 = distinct !DILexicalBlock(scope: !1132, file: !352, line: 1499, column: 32)
!1145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1146, file: !352, line: 1521, type: !4)
!1146 = distinct !DILexicalBlock(scope: !1132, file: !352, line: 1521, column: 8)
!1147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1148, file: !352, line: 1521, type: !4)
!1148 = distinct !DILexicalBlock(scope: !1149, file: !352, line: 1521, column: 107)
!1149 = distinct !DILexicalBlock(scope: !1150, file: !352, line: 1521, column: 79)
!1150 = distinct !DILexicalBlock(scope: !1146, file: !352, line: 1521, column: 56)
!1151 = !DISubprogram(name: "islice_reduce", scope: !352, file: !352, line: 1526, type: !1133, isLocal: true, isDefinition: true, scopeLine: 1527, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.isliceobject*)* @islice_reduce, variables: !1152)
!1152 = !{!1153, !1154, !1155, !1158, !1159}
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1151, file: !352, line: 1526, type: !412)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1151, file: !352, line: 1531, type: !4)
!1155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "empty_list", scope: !1156, file: !352, line: 1533, type: !4)
!1156 = distinct !DILexicalBlock(scope: !1157, file: !352, line: 1532, column: 31)
!1157 = distinct !DILexicalBlock(scope: !1151, file: !352, line: 1532, column: 9)
!1158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "empty_it", scope: !1156, file: !352, line: 1534, type: !4)
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1160, file: !352, line: 1539, type: !4)
!1160 = distinct !DILexicalBlock(scope: !1156, file: !352, line: 1539, column: 12)
!1161 = !DISubprogram(name: "islice_setstate", scope: !352, file: !352, line: 1558, type: !1162, isLocal: true, isDefinition: true, scopeLine: 1559, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.isliceobject*, %struct._object*)* @islice_setstate, variables: !1164)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!4, !412, !4}
!1164 = !{!1165, !1166, !1167}
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1161, file: !352, line: 1558, type: !412)
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1161, file: !352, line: 1558, type: !4)
!1167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !1161, file: !352, line: 1560, type: !10)
!1168 = !DISubprogram(name: "islice_new", scope: !352, file: !352, line: 1391, type: !622, isLocal: true, isDefinition: true, scopeLine: 1392, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @islice_new, variables: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183}
!1170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1168, file: !352, line: 1391, type: !551)
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1168, file: !352, line: 1391, type: !4)
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1168, file: !352, line: 1391, type: !4)
!1173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1168, file: !352, line: 1393, type: !4)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1168, file: !352, line: 1394, type: !10)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1168, file: !352, line: 1394, type: !10)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1168, file: !352, line: 1394, type: !10)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1168, file: !352, line: 1395, type: !4)
!1178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a1", scope: !1168, file: !352, line: 1395, type: !4)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a2", scope: !1168, file: !352, line: 1395, type: !4)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a3", scope: !1168, file: !352, line: 1395, type: !4)
!1181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numargs", scope: !1168, file: !352, line: 1396, type: !10)
!1182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1168, file: !352, line: 1397, type: !412)
!1183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1184, file: !352, line: 1459, type: !4)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !352, line: 1459, column: 12)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !352, line: 1458, column: 27)
!1186 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1458, column: 9)
!1187 = !DISubprogram(name: "starmap_dealloc", scope: !352, file: !352, line: 1673, type: !1188, isLocal: true, isDefinition: true, scopeLine: 1674, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.starmapobject*)* @starmap_dealloc, variables: !1190)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !422}
!1190 = !{!1191, !1192, !1194, !1197, !1199}
!1191 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1187, file: !352, line: 1673, type: !422)
!1192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1193, file: !352, line: 1676, type: !4)
!1193 = distinct !DILexicalBlock(scope: !1187, file: !352, line: 1676, column: 8)
!1194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1195, file: !352, line: 1676, type: !4)
!1195 = distinct !DILexicalBlock(scope: !1196, file: !352, line: 1676, column: 100)
!1196 = distinct !DILexicalBlock(scope: !1193, file: !352, line: 1676, column: 66)
!1197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1198, file: !352, line: 1677, type: !4)
!1198 = distinct !DILexicalBlock(scope: !1187, file: !352, line: 1677, column: 8)
!1199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1200, file: !352, line: 1677, type: !4)
!1200 = distinct !DILexicalBlock(scope: !1201, file: !352, line: 1677, column: 98)
!1201 = distinct !DILexicalBlock(scope: !1198, file: !352, line: 1677, column: 64)
!1202 = !DISubprogram(name: "starmap_traverse", scope: !352, file: !352, line: 1682, type: !1203, isLocal: true, isDefinition: true, scopeLine: 1683, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.starmapobject*, i32 (%struct._object*, i8*)*, i8*)* @starmap_traverse, variables: !1205)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!43, !422, !263, !89}
!1205 = !{!1206, !1207, !1208, !1209, !1213}
!1206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1202, file: !352, line: 1682, type: !422)
!1207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1202, file: !352, line: 1682, type: !263)
!1208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1202, file: !352, line: 1682, type: !89)
!1209 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1210, file: !352, line: 1684, type: !43)
!1210 = distinct !DILexicalBlock(scope: !1211, file: !352, line: 1684, column: 22)
!1211 = distinct !DILexicalBlock(scope: !1212, file: !352, line: 1684, column: 14)
!1212 = distinct !DILexicalBlock(scope: !1202, file: !352, line: 1684, column: 8)
!1213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1214, file: !352, line: 1685, type: !43)
!1214 = distinct !DILexicalBlock(scope: !1215, file: !352, line: 1685, column: 24)
!1215 = distinct !DILexicalBlock(scope: !1216, file: !352, line: 1685, column: 14)
!1216 = distinct !DILexicalBlock(scope: !1202, file: !352, line: 1685, column: 8)
!1217 = !DISubprogram(name: "starmap_next", scope: !352, file: !352, line: 1690, type: !1218, isLocal: true, isDefinition: true, scopeLine: 1691, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.starmapobject*)* @starmap_next, variables: !1220)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!4, !422}
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1228, !1230}
!1221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1217, file: !352, line: 1690, type: !422)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1217, file: !352, line: 1692, type: !4)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1217, file: !352, line: 1693, type: !4)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1217, file: !352, line: 1694, type: !4)
!1225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newargs", scope: !1226, file: !352, line: 1700, type: !4)
!1226 = distinct !DILexicalBlock(scope: !1227, file: !352, line: 1699, column: 61)
!1227 = distinct !DILexicalBlock(scope: !1217, file: !352, line: 1699, column: 9)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1229, file: !352, line: 1701, type: !4)
!1229 = distinct !DILexicalBlock(scope: !1226, file: !352, line: 1701, column: 12)
!1230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1231, file: !352, line: 1707, type: !4)
!1231 = distinct !DILexicalBlock(scope: !1217, file: !352, line: 1707, column: 8)
!1232 = !DISubprogram(name: "starmap_reduce", scope: !352, file: !352, line: 1712, type: !1218, isLocal: true, isDefinition: true, scopeLine: 1713, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.starmapobject*)* @starmap_reduce, variables: !1233)
!1233 = !{!1234}
!1234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1232, file: !352, line: 1712, type: !422)
!1235 = !DISubprogram(name: "starmap_new", scope: !352, file: !352, line: 1642, type: !622, isLocal: true, isDefinition: true, scopeLine: 1643, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @starmap_new, variables: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1235, file: !352, line: 1642, type: !551)
!1238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1235, file: !352, line: 1642, type: !4)
!1239 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1235, file: !352, line: 1642, type: !4)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1235, file: !352, line: 1644, type: !4)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1235, file: !352, line: 1644, type: !4)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1235, file: !352, line: 1645, type: !4)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1235, file: !352, line: 1646, type: !422)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1245, file: !352, line: 1662, type: !4)
!1245 = distinct !DILexicalBlock(scope: !1246, file: !352, line: 1662, column: 12)
!1246 = distinct !DILexicalBlock(scope: !1247, file: !352, line: 1661, column: 27)
!1247 = distinct !DILexicalBlock(scope: !1235, file: !352, line: 1661, column: 9)
!1248 = !DISubprogram(name: "chain_dealloc", scope: !352, file: !352, line: 1829, type: !1249, isLocal: true, isDefinition: true, scopeLine: 1830, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.chainobject*)* @chain_dealloc, variables: !1251)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !429}
!1251 = !{!1252, !1253, !1255, !1258, !1260}
!1252 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1248, file: !352, line: 1829, type: !429)
!1253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1254, file: !352, line: 1832, type: !4)
!1254 = distinct !DILexicalBlock(scope: !1248, file: !352, line: 1832, column: 8)
!1255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1256, file: !352, line: 1832, type: !4)
!1256 = distinct !DILexicalBlock(scope: !1257, file: !352, line: 1832, column: 102)
!1257 = distinct !DILexicalBlock(scope: !1254, file: !352, line: 1832, column: 68)
!1258 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1259, file: !352, line: 1833, type: !4)
!1259 = distinct !DILexicalBlock(scope: !1248, file: !352, line: 1833, column: 8)
!1260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1261, file: !352, line: 1833, type: !4)
!1261 = distinct !DILexicalBlock(scope: !1262, file: !352, line: 1833, column: 102)
!1262 = distinct !DILexicalBlock(scope: !1259, file: !352, line: 1833, column: 68)
!1263 = !DISubprogram(name: "chain_traverse", scope: !352, file: !352, line: 1838, type: !1264, isLocal: true, isDefinition: true, scopeLine: 1839, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.chainobject*, i32 (%struct._object*, i8*)*, i8*)* @chain_traverse, variables: !1266)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!43, !429, !263, !89}
!1266 = !{!1267, !1268, !1269, !1270, !1274}
!1267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1263, file: !352, line: 1838, type: !429)
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1263, file: !352, line: 1838, type: !263)
!1269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1263, file: !352, line: 1838, type: !89)
!1270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1271, file: !352, line: 1840, type: !43)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !352, line: 1840, column: 26)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !352, line: 1840, column: 14)
!1273 = distinct !DILexicalBlock(scope: !1263, file: !352, line: 1840, column: 8)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1275, file: !352, line: 1841, type: !43)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !352, line: 1841, column: 26)
!1276 = distinct !DILexicalBlock(scope: !1277, file: !352, line: 1841, column: 14)
!1277 = distinct !DILexicalBlock(scope: !1263, file: !352, line: 1841, column: 8)
!1278 = !DISubprogram(name: "chain_next", scope: !352, file: !352, line: 1846, type: !1279, isLocal: true, isDefinition: true, scopeLine: 1847, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.chainobject*)* @chain_next, variables: !1281)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!4, !429}
!1281 = !{!1282, !1283, !1284, !1287, !1291, !1295, !1297, !1301, !1305, !1307}
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1278, file: !352, line: 1846, type: !429)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1278, file: !352, line: 1848, type: !4)
!1284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !1285, file: !352, line: 1854, type: !4)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !352, line: 1853, column: 35)
!1286 = distinct !DILexicalBlock(scope: !1278, file: !352, line: 1853, column: 9)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1288, file: !352, line: 1856, type: !4)
!1288 = distinct !DILexicalBlock(scope: !1289, file: !352, line: 1856, column: 16)
!1289 = distinct !DILexicalBlock(scope: !1290, file: !352, line: 1855, column: 37)
!1290 = distinct !DILexicalBlock(scope: !1285, file: !352, line: 1855, column: 13)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1292, file: !352, line: 1856, type: !4)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !352, line: 1856, column: 123)
!1293 = distinct !DILexicalBlock(scope: !1294, file: !352, line: 1856, column: 91)
!1294 = distinct !DILexicalBlock(scope: !1288, file: !352, line: 1856, column: 68)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1296, file: !352, line: 1860, type: !4)
!1296 = distinct !DILexicalBlock(scope: !1285, file: !352, line: 1860, column: 12)
!1297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1298, file: !352, line: 1862, type: !4)
!1298 = distinct !DILexicalBlock(scope: !1299, file: !352, line: 1862, column: 16)
!1299 = distinct !DILexicalBlock(scope: !1300, file: !352, line: 1861, column: 39)
!1300 = distinct !DILexicalBlock(scope: !1285, file: !352, line: 1861, column: 13)
!1301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1302, file: !352, line: 1862, type: !4)
!1302 = distinct !DILexicalBlock(scope: !1303, file: !352, line: 1862, column: 123)
!1303 = distinct !DILexicalBlock(scope: !1304, file: !352, line: 1862, column: 91)
!1304 = distinct !DILexicalBlock(scope: !1298, file: !352, line: 1862, column: 68)
!1305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1306, file: !352, line: 1875, type: !4)
!1306 = distinct !DILexicalBlock(scope: !1278, file: !352, line: 1875, column: 8)
!1307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1308, file: !352, line: 1875, type: !4)
!1308 = distinct !DILexicalBlock(scope: !1309, file: !352, line: 1875, column: 115)
!1309 = distinct !DILexicalBlock(scope: !1310, file: !352, line: 1875, column: 83)
!1310 = distinct !DILexicalBlock(scope: !1306, file: !352, line: 1875, column: 60)
!1311 = !DISubprogram(name: "chain_new_from_iterable", scope: !352, file: !352, line: 1817, type: !1312, isLocal: true, isDefinition: true, scopeLine: 1818, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*)* @chain_new_from_iterable, variables: !1314)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!4, !551, !4}
!1314 = !{!1315, !1316, !1317}
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1311, file: !352, line: 1817, type: !551)
!1316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1311, file: !352, line: 1817, type: !4)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !1311, file: !352, line: 1819, type: !4)
!1318 = !DISubprogram(name: "chain_new_internal", scope: !352, file: !352, line: 1786, type: !1312, isLocal: true, isDefinition: true, scopeLine: 1787, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*)* @chain_new_internal, variables: !1319)
!1319 = !{!1320, !1321, !1322, !1323}
!1320 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1318, file: !352, line: 1786, type: !551)
!1321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "source", arg: 2, scope: !1318, file: !352, line: 1786, type: !4)
!1322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1318, file: !352, line: 1788, type: !429)
!1323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1324, file: !352, line: 1792, type: !4)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !352, line: 1792, column: 12)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !352, line: 1791, column: 27)
!1326 = distinct !DILexicalBlock(scope: !1318, file: !352, line: 1791, column: 9)
!1327 = !DISubprogram(name: "chain_reduce", scope: !352, file: !352, line: 1880, type: !1279, isLocal: true, isDefinition: true, scopeLine: 1881, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.chainobject*)* @chain_reduce, variables: !1328)
!1328 = !{!1329}
!1329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1327, file: !352, line: 1880, type: !429)
!1330 = !DISubprogram(name: "chain_setstate", scope: !352, file: !352, line: 1899, type: !1331, isLocal: true, isDefinition: true, scopeLine: 1900, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.chainobject*, %struct._object*)* @chain_setstate, variables: !1333)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!4, !429, !4}
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1340, !1344, !1346, !1350}
!1334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1330, file: !352, line: 1899, type: !429)
!1335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1330, file: !352, line: 1899, type: !4)
!1336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !1330, file: !352, line: 1901, type: !4)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "active", scope: !1330, file: !352, line: 1901, type: !4)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1339, file: !352, line: 1905, type: !4)
!1339 = distinct !DILexicalBlock(scope: !1330, file: !352, line: 1905, column: 8)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1341, file: !352, line: 1905, type: !4)
!1341 = distinct !DILexicalBlock(scope: !1342, file: !352, line: 1905, column: 115)
!1342 = distinct !DILexicalBlock(scope: !1343, file: !352, line: 1905, column: 83)
!1343 = distinct !DILexicalBlock(scope: !1339, file: !352, line: 1905, column: 60)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1345, file: !352, line: 1908, type: !4)
!1345 = distinct !DILexicalBlock(scope: !1330, file: !352, line: 1908, column: 8)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1347, file: !352, line: 1908, type: !4)
!1347 = distinct !DILexicalBlock(scope: !1348, file: !352, line: 1908, column: 115)
!1348 = distinct !DILexicalBlock(scope: !1349, file: !352, line: 1908, column: 83)
!1349 = distinct !DILexicalBlock(scope: !1345, file: !352, line: 1908, column: 60)
!1350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1351, file: !352, line: 1910, type: !4)
!1351 = distinct !DILexicalBlock(scope: !1330, file: !352, line: 1910, column: 8)
!1352 = !DISubprogram(name: "chain_new", scope: !352, file: !352, line: 1802, type: !622, isLocal: true, isDefinition: true, scopeLine: 1803, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @chain_new, variables: !1353)
!1353 = !{!1354, !1355, !1356, !1357}
!1354 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1352, file: !352, line: 1802, type: !551)
!1355 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1352, file: !352, line: 1802, type: !4)
!1356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1352, file: !352, line: 1802, type: !4)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !1352, file: !352, line: 1804, type: !4)
!1358 = !DISubprogram(name: "compress_dealloc", scope: !352, file: !352, line: 3581, type: !1359, isLocal: true, isDefinition: true, scopeLine: 3582, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.compressobject*)* @compress_dealloc, variables: !1361)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !436}
!1361 = !{!1362, !1363, !1365, !1368, !1370}
!1362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1358, file: !352, line: 3581, type: !436)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1364, file: !352, line: 3584, type: !4)
!1364 = distinct !DILexicalBlock(scope: !1358, file: !352, line: 3584, column: 8)
!1365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1366, file: !352, line: 3584, type: !4)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !352, line: 3584, column: 100)
!1367 = distinct !DILexicalBlock(scope: !1364, file: !352, line: 3584, column: 66)
!1368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1369, file: !352, line: 3585, type: !4)
!1369 = distinct !DILexicalBlock(scope: !1358, file: !352, line: 3585, column: 8)
!1370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1371, file: !352, line: 3585, type: !4)
!1371 = distinct !DILexicalBlock(scope: !1372, file: !352, line: 3585, column: 105)
!1372 = distinct !DILexicalBlock(scope: !1369, file: !352, line: 3585, column: 71)
!1373 = !DISubprogram(name: "compress_traverse", scope: !352, file: !352, line: 3590, type: !1374, isLocal: true, isDefinition: true, scopeLine: 3591, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.compressobject*, i32 (%struct._object*, i8*)*, i8*)* @compress_traverse, variables: !1376)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!43, !436, !263, !89}
!1376 = !{!1377, !1378, !1379, !1380, !1384}
!1377 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1373, file: !352, line: 3590, type: !436)
!1378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1373, file: !352, line: 3590, type: !263)
!1379 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1373, file: !352, line: 3590, type: !89)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1381, file: !352, line: 3592, type: !43)
!1381 = distinct !DILexicalBlock(scope: !1382, file: !352, line: 3592, column: 24)
!1382 = distinct !DILexicalBlock(scope: !1383, file: !352, line: 3592, column: 14)
!1383 = distinct !DILexicalBlock(scope: !1373, file: !352, line: 3592, column: 8)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1385, file: !352, line: 3593, type: !43)
!1385 = distinct !DILexicalBlock(scope: !1386, file: !352, line: 3593, column: 29)
!1386 = distinct !DILexicalBlock(scope: !1387, file: !352, line: 3593, column: 14)
!1387 = distinct !DILexicalBlock(scope: !1373, file: !352, line: 3593, column: 8)
!1388 = !DISubprogram(name: "compress_next", scope: !352, file: !352, line: 3598, type: !1389, isLocal: true, isDefinition: true, scopeLine: 3599, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.compressobject*)* @compress_next, variables: !1391)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!4, !436}
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1405, !1407}
!1392 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1388, file: !352, line: 3598, type: !436)
!1393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1388, file: !352, line: 3600, type: !4)
!1394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selectors", scope: !1388, file: !352, line: 3600, type: !4)
!1395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datum", scope: !1388, file: !352, line: 3601, type: !4)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selector", scope: !1388, file: !352, line: 3601, type: !4)
!1397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datanext", scope: !1388, file: !352, line: 3602, type: !115)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selectornext", scope: !1388, file: !352, line: 3603, type: !115)
!1399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1388, file: !352, line: 3604, type: !43)
!1400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1401, file: !352, line: 3619, type: !4)
!1401 = distinct !DILexicalBlock(scope: !1402, file: !352, line: 3619, column: 16)
!1402 = distinct !DILexicalBlock(scope: !1403, file: !352, line: 3618, column: 37)
!1403 = distinct !DILexicalBlock(scope: !1404, file: !352, line: 3618, column: 13)
!1404 = distinct !DILexicalBlock(scope: !1388, file: !352, line: 3606, column: 15)
!1405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1406, file: !352, line: 3624, type: !4)
!1406 = distinct !DILexicalBlock(scope: !1404, file: !352, line: 3624, column: 12)
!1407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1408, file: !352, line: 3627, type: !4)
!1408 = distinct !DILexicalBlock(scope: !1404, file: !352, line: 3627, column: 12)
!1409 = !DISubprogram(name: "compress_reduce", scope: !352, file: !352, line: 3634, type: !1389, isLocal: true, isDefinition: true, scopeLine: 3635, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.compressobject*)* @compress_reduce, variables: !1410)
!1410 = !{!1411}
!1411 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1409, file: !352, line: 3634, type: !436)
!1412 = !DISubprogram(name: "compress_new", scope: !352, file: !352, line: 3549, type: !622, isLocal: true, isDefinition: true, scopeLine: 3550, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @compress_new, variables: !1413)
!1413 = !{!1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1424, !1427, !1429}
!1414 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1412, file: !352, line: 3549, type: !551)
!1415 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1412, file: !352, line: 3549, type: !4)
!1416 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1412, file: !352, line: 3549, type: !4)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq1", scope: !1412, file: !352, line: 3551, type: !4)
!1418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq2", scope: !1412, file: !352, line: 3551, type: !4)
!1419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1412, file: !352, line: 3552, type: !4)
!1420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selectors", scope: !1412, file: !352, line: 3552, type: !4)
!1421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1412, file: !352, line: 3553, type: !436)
!1422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1423, file: !352, line: 3575, type: !4)
!1423 = distinct !DILexicalBlock(scope: !1412, file: !352, line: 3575, column: 8)
!1424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1425, file: !352, line: 3575, type: !4)
!1425 = distinct !DILexicalBlock(scope: !1426, file: !352, line: 3575, column: 96)
!1426 = distinct !DILexicalBlock(scope: !1423, file: !352, line: 3575, column: 62)
!1427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1428, file: !352, line: 3576, type: !4)
!1428 = distinct !DILexicalBlock(scope: !1412, file: !352, line: 3576, column: 8)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1430, file: !352, line: 3576, type: !4)
!1430 = distinct !DILexicalBlock(scope: !1431, file: !352, line: 3576, column: 101)
!1431 = distinct !DILexicalBlock(scope: !1428, file: !352, line: 3576, column: 67)
!1432 = !DISubprogram(name: "filterfalse_dealloc", scope: !352, file: !352, line: 3741, type: !1433, isLocal: true, isDefinition: true, scopeLine: 3742, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.filterfalseobject*)* @filterfalse_dealloc, variables: !1435)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{null, !443}
!1435 = !{!1436, !1437, !1439, !1442, !1444}
!1436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1432, file: !352, line: 3741, type: !443)
!1437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1438, file: !352, line: 3744, type: !4)
!1438 = distinct !DILexicalBlock(scope: !1432, file: !352, line: 3744, column: 8)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1440, file: !352, line: 3744, type: !4)
!1440 = distinct !DILexicalBlock(scope: !1441, file: !352, line: 3744, column: 100)
!1441 = distinct !DILexicalBlock(scope: !1438, file: !352, line: 3744, column: 66)
!1442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1443, file: !352, line: 3745, type: !4)
!1443 = distinct !DILexicalBlock(scope: !1432, file: !352, line: 3745, column: 8)
!1444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1445, file: !352, line: 3745, type: !4)
!1445 = distinct !DILexicalBlock(scope: !1446, file: !352, line: 3745, column: 98)
!1446 = distinct !DILexicalBlock(scope: !1443, file: !352, line: 3745, column: 64)
!1447 = !DISubprogram(name: "filterfalse_traverse", scope: !352, file: !352, line: 3750, type: !1448, isLocal: true, isDefinition: true, scopeLine: 3751, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.filterfalseobject*, i32 (%struct._object*, i8*)*, i8*)* @filterfalse_traverse, variables: !1450)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!43, !443, !263, !89}
!1450 = !{!1451, !1452, !1453, !1454, !1458}
!1451 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1447, file: !352, line: 3750, type: !443)
!1452 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1447, file: !352, line: 3750, type: !263)
!1453 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1447, file: !352, line: 3750, type: !89)
!1454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1455, file: !352, line: 3752, type: !43)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !352, line: 3752, column: 22)
!1456 = distinct !DILexicalBlock(scope: !1457, file: !352, line: 3752, column: 14)
!1457 = distinct !DILexicalBlock(scope: !1447, file: !352, line: 3752, column: 8)
!1458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1459, file: !352, line: 3753, type: !43)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !352, line: 3753, column: 24)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !352, line: 3753, column: 14)
!1461 = distinct !DILexicalBlock(scope: !1447, file: !352, line: 3753, column: 8)
!1462 = !DISubprogram(name: "filterfalse_next", scope: !352, file: !352, line: 3758, type: !1463, isLocal: true, isDefinition: true, scopeLine: 3759, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.filterfalseobject*)* @filterfalse_next, variables: !1465)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!4, !443}
!1465 = !{!1466, !1467, !1468, !1469, !1470, !1471, !1477, !1481, !1483}
!1466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1462, file: !352, line: 3758, type: !443)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1462, file: !352, line: 3760, type: !4)
!1468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1462, file: !352, line: 3761, type: !4)
!1469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1462, file: !352, line: 3762, type: !16)
!1470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iternext", scope: !1462, file: !352, line: 3763, type: !115)
!1471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "good", scope: !1472, file: !352, line: 3774, type: !4)
!1472 = distinct !DILexicalBlock(scope: !1473, file: !352, line: 3773, column: 16)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !352, line: 3771, column: 13)
!1474 = distinct !DILexicalBlock(scope: !1475, file: !352, line: 3766, column: 14)
!1475 = distinct !DILexicalBlock(scope: !1476, file: !352, line: 3766, column: 5)
!1476 = distinct !DILexicalBlock(scope: !1462, file: !352, line: 3766, column: 5)
!1477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1478, file: !352, line: 3778, type: !4)
!1478 = distinct !DILexicalBlock(scope: !1479, file: !352, line: 3778, column: 20)
!1479 = distinct !DILexicalBlock(scope: !1480, file: !352, line: 3777, column: 37)
!1480 = distinct !DILexicalBlock(scope: !1472, file: !352, line: 3777, column: 17)
!1481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1482, file: !352, line: 3782, type: !4)
!1482 = distinct !DILexicalBlock(scope: !1472, file: !352, line: 3782, column: 16)
!1483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1484, file: !352, line: 3786, type: !4)
!1484 = distinct !DILexicalBlock(scope: !1474, file: !352, line: 3786, column: 12)
!1485 = !DISubprogram(name: "filterfalse_reduce", scope: !352, file: !352, line: 3793, type: !1463, isLocal: true, isDefinition: true, scopeLine: 3794, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.filterfalseobject*)* @filterfalse_reduce, variables: !1486)
!1486 = !{!1487}
!1487 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1485, file: !352, line: 3793, type: !443)
!1488 = !DISubprogram(name: "filterfalse_new", scope: !352, file: !352, line: 3709, type: !622, isLocal: true, isDefinition: true, scopeLine: 3710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @filterfalse_new, variables: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1490 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1488, file: !352, line: 3709, type: !551)
!1491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1488, file: !352, line: 3709, type: !4)
!1492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1488, file: !352, line: 3709, type: !4)
!1493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1488, file: !352, line: 3711, type: !4)
!1494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1488, file: !352, line: 3711, type: !4)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1488, file: !352, line: 3712, type: !4)
!1496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1488, file: !352, line: 3713, type: !443)
!1497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1498, file: !352, line: 3730, type: !4)
!1498 = distinct !DILexicalBlock(scope: !1499, file: !352, line: 3730, column: 12)
!1499 = distinct !DILexicalBlock(scope: !1500, file: !352, line: 3729, column: 27)
!1500 = distinct !DILexicalBlock(scope: !1488, file: !352, line: 3729, column: 9)
!1501 = !DISubprogram(name: "count_dealloc", scope: !352, file: !352, line: 3961, type: !1502, isLocal: true, isDefinition: true, scopeLine: 3962, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.countobject*)* @count_dealloc, variables: !1504)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !450}
!1504 = !{!1505, !1506, !1508, !1511, !1513}
!1505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1501, file: !352, line: 3961, type: !450)
!1506 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1507, file: !352, line: 3964, type: !4)
!1507 = distinct !DILexicalBlock(scope: !1501, file: !352, line: 3964, column: 8)
!1508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1509, file: !352, line: 3964, type: !4)
!1509 = distinct !DILexicalBlock(scope: !1510, file: !352, line: 3964, column: 104)
!1510 = distinct !DILexicalBlock(scope: !1507, file: !352, line: 3964, column: 70)
!1511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1512, file: !352, line: 3965, type: !4)
!1512 = distinct !DILexicalBlock(scope: !1501, file: !352, line: 3965, column: 8)
!1513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1514, file: !352, line: 3965, type: !4)
!1514 = distinct !DILexicalBlock(scope: !1515, file: !352, line: 3965, column: 105)
!1515 = distinct !DILexicalBlock(scope: !1512, file: !352, line: 3965, column: 71)
!1516 = !DISubprogram(name: "count_repr", scope: !352, file: !352, line: 4008, type: !1517, isLocal: true, isDefinition: true, scopeLine: 4009, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_repr, variables: !1519)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!4, !450}
!1519 = !{!1520, !1521}
!1520 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1516, file: !352, line: 4008, type: !450)
!1521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1522, file: !352, line: 4014, type: !16)
!1522 = distinct !DILexicalBlock(scope: !1523, file: !352, line: 4013, column: 87)
!1523 = distinct !DILexicalBlock(scope: !1516, file: !352, line: 4013, column: 9)
!1524 = !DISubprogram(name: "count_traverse", scope: !352, file: !352, line: 3970, type: !1525, isLocal: true, isDefinition: true, scopeLine: 3971, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.countobject*, i32 (%struct._object*, i8*)*, i8*)* @count_traverse, variables: !1527)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!43, !450, !263, !89}
!1527 = !{!1528, !1529, !1530, !1531, !1535}
!1528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1524, file: !352, line: 3970, type: !450)
!1529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1524, file: !352, line: 3970, type: !263)
!1530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1524, file: !352, line: 3970, type: !89)
!1531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1532, file: !352, line: 3972, type: !43)
!1532 = distinct !DILexicalBlock(scope: !1533, file: !352, line: 3972, column: 28)
!1533 = distinct !DILexicalBlock(scope: !1534, file: !352, line: 3972, column: 14)
!1534 = distinct !DILexicalBlock(scope: !1524, file: !352, line: 3972, column: 8)
!1535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1536, file: !352, line: 3973, type: !43)
!1536 = distinct !DILexicalBlock(scope: !1537, file: !352, line: 3973, column: 29)
!1537 = distinct !DILexicalBlock(scope: !1538, file: !352, line: 3973, column: 14)
!1538 = distinct !DILexicalBlock(scope: !1524, file: !352, line: 3973, column: 8)
!1539 = !DISubprogram(name: "count_next", scope: !352, file: !352, line: 4000, type: !1517, isLocal: true, isDefinition: true, scopeLine: 4001, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_next, variables: !1540)
!1540 = !{!1541}
!1541 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1539, file: !352, line: 4000, type: !450)
!1542 = !DISubprogram(name: "count_nextlong", scope: !352, file: !352, line: 3978, type: !1517, isLocal: true, isDefinition: true, scopeLine: 3979, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_nextlong, variables: !1543)
!1543 = !{!1544, !1545, !1546}
!1544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1542, file: !352, line: 3978, type: !450)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_cnt", scope: !1542, file: !352, line: 3980, type: !4)
!1546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stepped_up", scope: !1542, file: !352, line: 3981, type: !4)
!1547 = !DISubprogram(name: "count_reduce", scope: !352, file: !352, line: 4028, type: !1517, isLocal: true, isDefinition: true, scopeLine: 4029, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_reduce, variables: !1548)
!1548 = !{!1549}
!1549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1547, file: !352, line: 4028, type: !450)
!1550 = !DISubprogram(name: "count_new", scope: !352, file: !352, line: 3885, type: !622, isLocal: true, isDefinition: true, scopeLine: 3886, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @count_new, variables: !1551)
!1551 = !{!1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1567, !1570, !1574, !1578}
!1552 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1550, file: !352, line: 3885, type: !551)
!1553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1550, file: !352, line: 3885, type: !4)
!1554 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1550, file: !352, line: 3885, type: !4)
!1555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1550, file: !352, line: 3887, type: !450)
!1556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slow_mode", scope: !1550, file: !352, line: 3888, type: !43)
!1557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !1550, file: !352, line: 3889, type: !10)
!1558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_cnt", scope: !1550, file: !352, line: 3890, type: !4)
!1559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_step", scope: !1550, file: !352, line: 3891, type: !4)
!1560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1550, file: !352, line: 3892, type: !16)
!1561 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1562, file: !352, line: 3921, type: !4)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !352, line: 3921, column: 16)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !352, line: 3920, column: 38)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !352, line: 3920, column: 13)
!1565 = distinct !DILexicalBlock(scope: !1566, file: !352, line: 3918, column: 34)
!1566 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3918, column: 9)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1568, file: !352, line: 3940, type: !4)
!1568 = distinct !DILexicalBlock(scope: !1569, file: !352, line: 3940, column: 12)
!1569 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3937, column: 9)
!1570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1571, file: !352, line: 3940, type: !4)
!1571 = distinct !DILexicalBlock(scope: !1572, file: !352, line: 3940, column: 115)
!1572 = distinct !DILexicalBlock(scope: !1573, file: !352, line: 3940, column: 85)
!1573 = distinct !DILexicalBlock(scope: !1568, file: !352, line: 3940, column: 62)
!1574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1575, file: !352, line: 3950, type: !4)
!1575 = distinct !DILexicalBlock(scope: !1576, file: !352, line: 3950, column: 12)
!1576 = distinct !DILexicalBlock(scope: !1577, file: !352, line: 3949, column: 27)
!1577 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3949, column: 9)
!1578 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1579, file: !352, line: 3950, type: !4)
!1579 = distinct !DILexicalBlock(scope: !1580, file: !352, line: 3950, column: 104)
!1580 = distinct !DILexicalBlock(scope: !1575, file: !352, line: 3950, column: 70)
!1581 = !DISubprogram(name: "zip_longest_dealloc", scope: !352, file: !352, line: 4328, type: !1582, isLocal: true, isDefinition: true, scopeLine: 4329, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ziplongestobject*)* @zip_longest_dealloc, variables: !1584)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !458}
!1584 = !{!1585, !1586, !1588, !1591, !1593, !1596, !1598}
!1585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1581, file: !352, line: 4328, type: !458)
!1586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1587, file: !352, line: 4331, type: !4)
!1587 = distinct !DILexicalBlock(scope: !1581, file: !352, line: 4331, column: 8)
!1588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1589, file: !352, line: 4331, type: !4)
!1589 = distinct !DILexicalBlock(scope: !1590, file: !352, line: 4331, column: 103)
!1590 = distinct !DILexicalBlock(scope: !1587, file: !352, line: 4331, column: 69)
!1591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1592, file: !352, line: 4332, type: !4)
!1592 = distinct !DILexicalBlock(scope: !1581, file: !352, line: 4332, column: 8)
!1593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1594, file: !352, line: 4332, type: !4)
!1594 = distinct !DILexicalBlock(scope: !1595, file: !352, line: 4332, column: 102)
!1595 = distinct !DILexicalBlock(scope: !1592, file: !352, line: 4332, column: 68)
!1596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1597, file: !352, line: 4333, type: !4)
!1597 = distinct !DILexicalBlock(scope: !1581, file: !352, line: 4333, column: 8)
!1598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1599, file: !352, line: 4333, type: !4)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !352, line: 4333, column: 105)
!1600 = distinct !DILexicalBlock(scope: !1597, file: !352, line: 4333, column: 71)
!1601 = !DISubprogram(name: "zip_longest_traverse", scope: !352, file: !352, line: 4338, type: !1602, isLocal: true, isDefinition: true, scopeLine: 4339, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ziplongestobject*, i32 (%struct._object*, i8*)*, i8*)* @zip_longest_traverse, variables: !1604)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!43, !458, !263, !89}
!1604 = !{!1605, !1606, !1607, !1608, !1612, !1616}
!1605 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1601, file: !352, line: 4338, type: !458)
!1606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1601, file: !352, line: 4338, type: !263)
!1607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1601, file: !352, line: 4338, type: !89)
!1608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1609, file: !352, line: 4340, type: !43)
!1609 = distinct !DILexicalBlock(scope: !1610, file: !352, line: 4340, column: 27)
!1610 = distinct !DILexicalBlock(scope: !1611, file: !352, line: 4340, column: 14)
!1611 = distinct !DILexicalBlock(scope: !1601, file: !352, line: 4340, column: 8)
!1612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1613, file: !352, line: 4341, type: !43)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !352, line: 4341, column: 26)
!1614 = distinct !DILexicalBlock(scope: !1615, file: !352, line: 4341, column: 14)
!1615 = distinct !DILexicalBlock(scope: !1601, file: !352, line: 4341, column: 8)
!1616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1617, file: !352, line: 4342, type: !43)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !352, line: 4342, column: 29)
!1618 = distinct !DILexicalBlock(scope: !1619, file: !352, line: 4342, column: 14)
!1619 = distinct !DILexicalBlock(scope: !1601, file: !352, line: 4342, column: 8)
!1620 = !DISubprogram(name: "zip_longest_next", scope: !352, file: !352, line: 4347, type: !1621, isLocal: true, isDefinition: true, scopeLine: 4348, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ziplongestobject*)* @zip_longest_next, variables: !1623)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!4, !458}
!1623 = !{!1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1644, !1647, !1649, !1661}
!1624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1620, file: !352, line: 4347, type: !458)
!1625 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1620, file: !352, line: 4349, type: !10)
!1626 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuplesize", scope: !1620, file: !352, line: 4350, type: !10)
!1627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1620, file: !352, line: 4351, type: !4)
!1628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1620, file: !352, line: 4352, type: !4)
!1629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1620, file: !352, line: 4353, type: !4)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "olditem", scope: !1620, file: !352, line: 4354, type: !4)
!1631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1632, file: !352, line: 4373, type: !4)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !352, line: 4373, column: 28)
!1633 = distinct !DILexicalBlock(scope: !1634, file: !352, line: 4371, column: 65)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !352, line: 4371, column: 25)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !352, line: 4369, column: 41)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !352, line: 4369, column: 21)
!1637 = distinct !DILexicalBlock(scope: !1638, file: !352, line: 4367, column: 20)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !352, line: 4364, column: 17)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !352, line: 4362, column: 41)
!1640 = distinct !DILexicalBlock(scope: !1641, file: !352, line: 4362, column: 9)
!1641 = distinct !DILexicalBlock(scope: !1642, file: !352, line: 4362, column: 9)
!1642 = distinct !DILexicalBlock(scope: !1643, file: !352, line: 4360, column: 50)
!1643 = distinct !DILexicalBlock(scope: !1620, file: !352, line: 4360, column: 9)
!1644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1645, file: !352, line: 4379, type: !4)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !352, line: 4379, column: 28)
!1646 = distinct !DILexicalBlock(scope: !1634, file: !352, line: 4375, column: 28)
!1647 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1648, file: !352, line: 4385, type: !4)
!1648 = distinct !DILexicalBlock(scope: !1639, file: !352, line: 4385, column: 16)
!1649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1650, file: !352, line: 4402, type: !4)
!1650 = distinct !DILexicalBlock(scope: !1651, file: !352, line: 4402, column: 28)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !352, line: 4400, column: 65)
!1652 = distinct !DILexicalBlock(scope: !1653, file: !352, line: 4400, column: 25)
!1653 = distinct !DILexicalBlock(scope: !1654, file: !352, line: 4398, column: 41)
!1654 = distinct !DILexicalBlock(scope: !1655, file: !352, line: 4398, column: 21)
!1655 = distinct !DILexicalBlock(scope: !1656, file: !352, line: 4396, column: 20)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !352, line: 4393, column: 17)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !352, line: 4391, column: 41)
!1658 = distinct !DILexicalBlock(scope: !1659, file: !352, line: 4391, column: 9)
!1659 = distinct !DILexicalBlock(scope: !1660, file: !352, line: 4391, column: 9)
!1660 = distinct !DILexicalBlock(scope: !1643, file: !352, line: 4387, column: 12)
!1661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1662, file: !352, line: 4408, type: !4)
!1662 = distinct !DILexicalBlock(scope: !1663, file: !352, line: 4408, column: 28)
!1663 = distinct !DILexicalBlock(scope: !1652, file: !352, line: 4404, column: 28)
!1664 = !DISubprogram(name: "zip_longest_reduce", scope: !352, file: !352, line: 4419, type: !1621, isLocal: true, isDefinition: true, scopeLine: 4420, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ziplongestobject*)* @zip_longest_reduce, variables: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1673}
!1666 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1664, file: !352, line: 4419, type: !458)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1664, file: !352, line: 4425, type: !43)
!1668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1664, file: !352, line: 4426, type: !4)
!1669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1670, file: !352, line: 4430, type: !4)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !352, line: 4429, column: 64)
!1671 = distinct !DILexicalBlock(scope: !1672, file: !352, line: 4429, column: 5)
!1672 = distinct !DILexicalBlock(scope: !1664, file: !352, line: 4429, column: 5)
!1673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1674, file: !352, line: 4434, type: !4)
!1674 = distinct !DILexicalBlock(scope: !1675, file: !352, line: 4434, column: 20)
!1675 = distinct !DILexicalBlock(scope: !1676, file: !352, line: 4433, column: 37)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !352, line: 4433, column: 17)
!1677 = distinct !DILexicalBlock(scope: !1678, file: !352, line: 4431, column: 33)
!1678 = distinct !DILexicalBlock(scope: !1670, file: !352, line: 4431, column: 13)
!1679 = !DISubprogram(name: "zip_longest_setstate", scope: !352, file: !352, line: 4445, type: !1680, isLocal: true, isDefinition: true, scopeLine: 4446, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ziplongestobject*, %struct._object*)* @zip_longest_setstate, variables: !1682)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!4, !458, !4}
!1682 = !{!1683, !1684, !1685, !1687}
!1683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1679, file: !352, line: 4445, type: !458)
!1684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1679, file: !352, line: 4445, type: !4)
!1685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1686, file: !352, line: 4447, type: !4)
!1686 = distinct !DILexicalBlock(scope: !1679, file: !352, line: 4447, column: 8)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1688, file: !352, line: 4447, type: !4)
!1688 = distinct !DILexicalBlock(scope: !1689, file: !352, line: 4447, column: 121)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !352, line: 4447, column: 86)
!1690 = distinct !DILexicalBlock(scope: !1686, file: !352, line: 4447, column: 63)
!1691 = !DISubprogram(name: "zip_longest_new", scope: !352, file: !352, line: 4261, type: !622, isLocal: true, isDefinition: true, scopeLine: 4262, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @zip_longest_new, variables: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1706, !1707, !1711, !1715, !1719}
!1693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1691, file: !352, line: 4261, type: !551)
!1694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1691, file: !352, line: 4261, type: !4)
!1695 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1691, file: !352, line: 4261, type: !4)
!1696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1691, file: !352, line: 4263, type: !458)
!1697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1691, file: !352, line: 4264, type: !10)
!1698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ittuple", scope: !1691, file: !352, line: 4265, type: !4)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1691, file: !352, line: 4266, type: !4)
!1700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fillvalue", scope: !1691, file: !352, line: 4267, type: !4)
!1701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuplesize", scope: !1691, file: !352, line: 4268, type: !10)
!1702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1703, file: !352, line: 4287, type: !4)
!1703 = distinct !DILexicalBlock(scope: !1704, file: !352, line: 4286, column: 35)
!1704 = distinct !DILexicalBlock(scope: !1705, file: !352, line: 4286, column: 5)
!1705 = distinct !DILexicalBlock(scope: !1691, file: !352, line: 4286, column: 5)
!1706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1703, file: !352, line: 4288, type: !4)
!1707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1708, file: !352, line: 4294, type: !4)
!1708 = distinct !DILexicalBlock(scope: !1709, file: !352, line: 4294, column: 16)
!1709 = distinct !DILexicalBlock(scope: !1710, file: !352, line: 4289, column: 31)
!1710 = distinct !DILexicalBlock(scope: !1703, file: !352, line: 4289, column: 13)
!1711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1712, file: !352, line: 4303, type: !4)
!1712 = distinct !DILexicalBlock(scope: !1713, file: !352, line: 4303, column: 12)
!1713 = distinct !DILexicalBlock(scope: !1714, file: !352, line: 4302, column: 31)
!1714 = distinct !DILexicalBlock(scope: !1691, file: !352, line: 4302, column: 9)
!1715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1716, file: !352, line: 4314, type: !4)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !352, line: 4314, column: 12)
!1717 = distinct !DILexicalBlock(scope: !1718, file: !352, line: 4313, column: 27)
!1718 = distinct !DILexicalBlock(scope: !1691, file: !352, line: 4313, column: 9)
!1719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1720, file: !352, line: 4315, type: !4)
!1720 = distinct !DILexicalBlock(scope: !1717, file: !352, line: 4315, column: 12)
!1721 = !DISubprogram(name: "permutations_dealloc", scope: !352, file: !352, line: 3080, type: !1722, isLocal: true, isDefinition: true, scopeLine: 3081, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.permutationsobject*)* @permutations_dealloc, variables: !1724)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{null, !468}
!1724 = !{!1725, !1726, !1728, !1731, !1733}
!1725 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1721, file: !352, line: 3080, type: !468)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1727, file: !352, line: 3083, type: !4)
!1727 = distinct !DILexicalBlock(scope: !1721, file: !352, line: 3083, column: 8)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1729, file: !352, line: 3083, type: !4)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !352, line: 3083, column: 100)
!1730 = distinct !DILexicalBlock(scope: !1727, file: !352, line: 3083, column: 66)
!1731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1732, file: !352, line: 3084, type: !4)
!1732 = distinct !DILexicalBlock(scope: !1721, file: !352, line: 3084, column: 8)
!1733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1734, file: !352, line: 3084, type: !4)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !352, line: 3084, column: 102)
!1735 = distinct !DILexicalBlock(scope: !1732, file: !352, line: 3084, column: 68)
!1736 = !DISubprogram(name: "permutations_traverse", scope: !352, file: !352, line: 3102, type: !1737, isLocal: true, isDefinition: true, scopeLine: 3103, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.permutationsobject*, i32 (%struct._object*, i8*)*, i8*)* @permutations_traverse, variables: !1739)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!43, !468, !263, !89}
!1739 = !{!1740, !1741, !1742, !1743, !1747}
!1740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1736, file: !352, line: 3102, type: !468)
!1741 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1736, file: !352, line: 3102, type: !263)
!1742 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1736, file: !352, line: 3102, type: !89)
!1743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1744, file: !352, line: 3104, type: !43)
!1744 = distinct !DILexicalBlock(scope: !1745, file: !352, line: 3104, column: 24)
!1745 = distinct !DILexicalBlock(scope: !1746, file: !352, line: 3104, column: 14)
!1746 = distinct !DILexicalBlock(scope: !1736, file: !352, line: 3104, column: 8)
!1747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1748, file: !352, line: 3105, type: !43)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !352, line: 3105, column: 26)
!1749 = distinct !DILexicalBlock(scope: !1750, file: !352, line: 3105, column: 14)
!1750 = distinct !DILexicalBlock(scope: !1736, file: !352, line: 3105, column: 8)
!1751 = !DISubprogram(name: "permutations_next", scope: !352, file: !352, line: 3110, type: !1752, isLocal: true, isDefinition: true, scopeLine: 3111, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*)* @permutations_next, variables: !1754)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!4, !468}
!1754 = !{!1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1773, !1775}
!1755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1751, file: !352, line: 3110, type: !468)
!1756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1751, file: !352, line: 3112, type: !4)
!1757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !1751, file: !352, line: 3113, type: !4)
!1758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1751, file: !352, line: 3114, type: !4)
!1759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1751, file: !352, line: 3115, type: !247)
!1760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1751, file: !352, line: 3116, type: !247)
!1761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1751, file: !352, line: 3117, type: !4)
!1762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1751, file: !352, line: 3118, type: !10)
!1763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1751, file: !352, line: 3119, type: !10)
!1764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1751, file: !352, line: 3120, type: !10)
!1765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1751, file: !352, line: 3120, type: !10)
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1751, file: !352, line: 3120, type: !10)
!1767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1751, file: !352, line: 3120, type: !10)
!1768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !1769, file: !352, line: 3143, type: !4)
!1769 = distinct !DILexicalBlock(scope: !1770, file: !352, line: 3142, column: 53)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !352, line: 3142, column: 13)
!1771 = distinct !DILexicalBlock(scope: !1772, file: !352, line: 3137, column: 12)
!1772 = distinct !DILexicalBlock(scope: !1751, file: !352, line: 3125, column: 9)
!1773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1774, file: !352, line: 3153, type: !4)
!1774 = distinct !DILexicalBlock(scope: !1769, file: !352, line: 3153, column: 16)
!1775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1776, file: !352, line: 3182, type: !4)
!1776 = distinct !DILexicalBlock(scope: !1777, file: !352, line: 3182, column: 24)
!1777 = distinct !DILexicalBlock(scope: !1778, file: !352, line: 3174, column: 38)
!1778 = distinct !DILexicalBlock(scope: !1779, file: !352, line: 3174, column: 17)
!1779 = distinct !DILexicalBlock(scope: !1780, file: !352, line: 3174, column: 17)
!1780 = distinct !DILexicalBlock(scope: !1781, file: !352, line: 3168, column: 20)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !352, line: 3161, column: 17)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !352, line: 3159, column: 34)
!1783 = distinct !DILexicalBlock(scope: !1784, file: !352, line: 3159, column: 9)
!1784 = distinct !DILexicalBlock(scope: !1771, file: !352, line: 3159, column: 9)
!1785 = !DISubprogram(name: "permutations_reduce", scope: !352, file: !352, line: 3201, type: !1752, isLocal: true, isDefinition: true, scopeLine: 3202, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*)* @permutations_reduce, variables: !1786)
!1786 = !{!1787, !1788, !1792, !1793, !1794, !1795, !1799, !1803, !1805, !1808, !1810}
!1787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1785, file: !352, line: 3201, type: !468)
!1788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1789, file: !352, line: 3208, type: !4)
!1789 = distinct !DILexicalBlock(scope: !1790, file: !352, line: 3207, column: 12)
!1790 = distinct !DILexicalBlock(scope: !1791, file: !352, line: 3205, column: 16)
!1791 = distinct !DILexicalBlock(scope: !1785, file: !352, line: 3203, column: 9)
!1792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1789, file: !352, line: 3208, type: !4)
!1793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1789, file: !352, line: 3209, type: !10)
!1794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1789, file: !352, line: 3209, type: !10)
!1795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1796, file: !352, line: 3217, type: !4)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !352, line: 3216, column: 28)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !352, line: 3216, column: 9)
!1798 = distinct !DILexicalBlock(scope: !1789, file: !352, line: 3216, column: 9)
!1799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1800, file: !352, line: 3228, type: !4)
!1800 = distinct !DILexicalBlock(scope: !1801, file: !352, line: 3227, column: 9)
!1801 = distinct !DILexicalBlock(scope: !1802, file: !352, line: 3226, column: 9)
!1802 = distinct !DILexicalBlock(scope: !1789, file: !352, line: 3226, column: 9)
!1803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1804, file: !352, line: 3237, type: !4)
!1804 = distinct !DILexicalBlock(scope: !1789, file: !352, line: 3237, column: 12)
!1805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1806, file: !352, line: 3237, type: !4)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !352, line: 3237, column: 103)
!1807 = distinct !DILexicalBlock(scope: !1804, file: !352, line: 3237, column: 69)
!1808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1809, file: !352, line: 3238, type: !4)
!1809 = distinct !DILexicalBlock(scope: !1789, file: !352, line: 3238, column: 12)
!1810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1811, file: !352, line: 3238, type: !4)
!1811 = distinct !DILexicalBlock(scope: !1812, file: !352, line: 3238, column: 102)
!1812 = distinct !DILexicalBlock(scope: !1809, file: !352, line: 3238, column: 68)
!1813 = !DISubprogram(name: "permutations_setstate", scope: !352, file: !352, line: 3244, type: !1814, isLocal: true, isDefinition: true, scopeLine: 3245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*, %struct._object*)* @permutations_setstate, variables: !1816)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!4, !468, !4}
!1816 = !{!1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1828, !1829, !1833, !1834, !1838, !1840}
!1817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1813, file: !352, line: 3244, type: !468)
!1818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1813, file: !352, line: 3244, type: !4)
!1819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1813, file: !352, line: 3246, type: !4)
!1820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1813, file: !352, line: 3246, type: !4)
!1821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1813, file: !352, line: 3246, type: !4)
!1822 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1813, file: !352, line: 3247, type: !10)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1813, file: !352, line: 3247, type: !10)
!1824 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !1825, file: !352, line: 3264, type: !4)
!1825 = distinct !DILexicalBlock(scope: !1826, file: !352, line: 3263, column: 5)
!1826 = distinct !DILexicalBlock(scope: !1827, file: !352, line: 3262, column: 5)
!1827 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3262, column: 5)
!1828 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1825, file: !352, line: 3265, type: !10)
!1829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !1830, file: !352, line: 3278, type: !4)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !352, line: 3277, column: 5)
!1831 = distinct !DILexicalBlock(scope: !1832, file: !352, line: 3276, column: 5)
!1832 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3276, column: 5)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1830, file: !352, line: 3279, type: !10)
!1834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1835, file: !352, line: 3292, type: !4)
!1835 = distinct !DILexicalBlock(scope: !1836, file: !352, line: 3291, column: 29)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !352, line: 3291, column: 5)
!1837 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3291, column: 5)
!1838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1839, file: !352, line: 3296, type: !4)
!1839 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3296, column: 8)
!1840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1841, file: !352, line: 3296, type: !4)
!1841 = distinct !DILexicalBlock(scope: !1842, file: !352, line: 3296, column: 115)
!1842 = distinct !DILexicalBlock(scope: !1843, file: !352, line: 3296, column: 83)
!1843 = distinct !DILexicalBlock(scope: !1839, file: !352, line: 3296, column: 60)
!1844 = !DISubprogram(name: "permutations_sizeof", scope: !352, file: !352, line: 3091, type: !1845, isLocal: true, isDefinition: true, scopeLine: 3092, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*, i8*)* @permutations_sizeof, variables: !1847)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!4, !468, !89}
!1847 = !{!1848, !1849, !1850}
!1848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1844, file: !352, line: 3091, type: !468)
!1849 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1844, file: !352, line: 3091, type: !89)
!1850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1844, file: !352, line: 3093, type: !10)
!1851 = !DISubprogram(name: "permutations_new", scope: !352, file: !352, line: 3007, type: !622, isLocal: true, isDefinition: true, scopeLine: 3008, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @permutations_new, variables: !1852)
!1852 = !{!1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1867}
!1853 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1851, file: !352, line: 3007, type: !551)
!1854 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1851, file: !352, line: 3007, type: !4)
!1855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1851, file: !352, line: 3007, type: !4)
!1856 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "po", scope: !1851, file: !352, line: 3009, type: !468)
!1857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1851, file: !352, line: 3010, type: !10)
!1858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1851, file: !352, line: 3011, type: !10)
!1859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "robj", scope: !1851, file: !352, line: 3012, type: !4)
!1860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1851, file: !352, line: 3013, type: !4)
!1861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !1851, file: !352, line: 3014, type: !4)
!1862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1851, file: !352, line: 3015, type: !247)
!1863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1851, file: !352, line: 3016, type: !247)
!1864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1851, file: !352, line: 3017, type: !10)
!1865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1866, file: !352, line: 3075, type: !4)
!1866 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3075, column: 8)
!1867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1868, file: !352, line: 3075, type: !4)
!1868 = distinct !DILexicalBlock(scope: !1869, file: !352, line: 3075, column: 96)
!1869 = distinct !DILexicalBlock(scope: !1866, file: !352, line: 3075, column: 62)
!1870 = !DISubprogram(name: "product_dealloc", scope: !352, file: !352, line: 2069, type: !1871, isLocal: true, isDefinition: true, scopeLine: 2070, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.productobject*)* @product_dealloc, variables: !1873)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{null, !479}
!1873 = !{!1874, !1875, !1877, !1880, !1882}
!1874 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1870, file: !352, line: 2069, type: !479)
!1875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1876, file: !352, line: 2072, type: !4)
!1876 = distinct !DILexicalBlock(scope: !1870, file: !352, line: 2072, column: 8)
!1877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1878, file: !352, line: 2072, type: !4)
!1878 = distinct !DILexicalBlock(scope: !1879, file: !352, line: 2072, column: 101)
!1879 = distinct !DILexicalBlock(scope: !1876, file: !352, line: 2072, column: 67)
!1880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1881, file: !352, line: 2073, type: !4)
!1881 = distinct !DILexicalBlock(scope: !1870, file: !352, line: 2073, column: 8)
!1882 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1883, file: !352, line: 2073, type: !4)
!1883 = distinct !DILexicalBlock(scope: !1884, file: !352, line: 2073, column: 102)
!1884 = distinct !DILexicalBlock(scope: !1881, file: !352, line: 2073, column: 68)
!1885 = !DISubprogram(name: "product_traverse", scope: !352, file: !352, line: 2092, type: !1886, isLocal: true, isDefinition: true, scopeLine: 2093, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.productobject*, i32 (%struct._object*, i8*)*, i8*)* @product_traverse, variables: !1888)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!43, !479, !263, !89}
!1888 = !{!1889, !1890, !1891, !1892, !1896}
!1889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1885, file: !352, line: 2092, type: !479)
!1890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1885, file: !352, line: 2092, type: !263)
!1891 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1885, file: !352, line: 2092, type: !89)
!1892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1893, file: !352, line: 2094, type: !43)
!1893 = distinct !DILexicalBlock(scope: !1894, file: !352, line: 2094, column: 25)
!1894 = distinct !DILexicalBlock(scope: !1895, file: !352, line: 2094, column: 14)
!1895 = distinct !DILexicalBlock(scope: !1885, file: !352, line: 2094, column: 8)
!1896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1897, file: !352, line: 2095, type: !43)
!1897 = distinct !DILexicalBlock(scope: !1898, file: !352, line: 2095, column: 26)
!1898 = distinct !DILexicalBlock(scope: !1899, file: !352, line: 2095, column: 14)
!1899 = distinct !DILexicalBlock(scope: !1885, file: !352, line: 2095, column: 8)
!1900 = !DISubprogram(name: "product_next", scope: !352, file: !352, line: 2100, type: !1901, isLocal: true, isDefinition: true, scopeLine: 2101, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*)* @product_next, variables: !1903)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!4, !479}
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1915, !1918, !1920, !1927}
!1904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1900, file: !352, line: 2100, type: !479)
!1905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1900, file: !352, line: 2102, type: !4)
!1906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1900, file: !352, line: 2103, type: !4)
!1907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !1900, file: !352, line: 2104, type: !4)
!1908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pools", scope: !1900, file: !352, line: 2105, type: !4)
!1909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1900, file: !352, line: 2106, type: !4)
!1910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "npools", scope: !1900, file: !352, line: 2107, type: !10)
!1911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1900, file: !352, line: 2108, type: !10)
!1912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1913, file: !352, line: 2129, type: !247)
!1913 = distinct !DILexicalBlock(scope: !1914, file: !352, line: 2128, column: 12)
!1914 = distinct !DILexicalBlock(scope: !1900, file: !352, line: 2113, column: 9)
!1915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !1916, file: !352, line: 2133, type: !4)
!1916 = distinct !DILexicalBlock(scope: !1917, file: !352, line: 2132, column: 53)
!1917 = distinct !DILexicalBlock(scope: !1913, file: !352, line: 2132, column: 13)
!1918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1919, file: !352, line: 2143, type: !4)
!1919 = distinct !DILexicalBlock(scope: !1916, file: !352, line: 2143, column: 16)
!1920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1921, file: !352, line: 2160, type: !4)
!1921 = distinct !DILexicalBlock(scope: !1922, file: !352, line: 2160, column: 20)
!1922 = distinct !DILexicalBlock(scope: !1923, file: !352, line: 2153, column: 66)
!1923 = distinct !DILexicalBlock(scope: !1924, file: !352, line: 2153, column: 17)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !352, line: 2150, column: 41)
!1925 = distinct !DILexicalBlock(scope: !1926, file: !352, line: 2150, column: 9)
!1926 = distinct !DILexicalBlock(scope: !1913, file: !352, line: 2150, column: 9)
!1927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1928, file: !352, line: 2167, type: !4)
!1928 = distinct !DILexicalBlock(scope: !1929, file: !352, line: 2167, column: 20)
!1929 = distinct !DILexicalBlock(scope: !1923, file: !352, line: 2161, column: 20)
!1930 = !DISubprogram(name: "product_reduce", scope: !352, file: !352, line: 2187, type: !1901, isLocal: true, isDefinition: true, scopeLine: 2188, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*)* @product_reduce, variables: !1931)
!1931 = !{!1932, !1933, !1937, !1938, !1939, !1943}
!1932 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1930, file: !352, line: 2187, type: !479)
!1933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1934, file: !352, line: 2194, type: !4)
!1934 = distinct !DILexicalBlock(scope: !1935, file: !352, line: 2193, column: 12)
!1935 = distinct !DILexicalBlock(scope: !1936, file: !352, line: 2191, column: 16)
!1936 = distinct !DILexicalBlock(scope: !1930, file: !352, line: 2189, column: 9)
!1937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1934, file: !352, line: 2195, type: !10)
!1938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1934, file: !352, line: 2195, type: !10)
!1939 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1940, file: !352, line: 2205, type: !4)
!1940 = distinct !DILexicalBlock(scope: !1941, file: !352, line: 2204, column: 28)
!1941 = distinct !DILexicalBlock(scope: !1942, file: !352, line: 2204, column: 9)
!1942 = distinct !DILexicalBlock(scope: !1934, file: !352, line: 2204, column: 9)
!1943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1944, file: !352, line: 2207, type: !4)
!1944 = distinct !DILexicalBlock(scope: !1945, file: !352, line: 2207, column: 20)
!1945 = distinct !DILexicalBlock(scope: !1946, file: !352, line: 2206, column: 25)
!1946 = distinct !DILexicalBlock(scope: !1940, file: !352, line: 2206, column: 17)
!1947 = !DISubprogram(name: "product_setstate", scope: !352, file: !352, line: 2217, type: !1948, isLocal: true, isDefinition: true, scopeLine: 2218, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*, %struct._object*)* @product_setstate, variables: !1950)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!4, !479, !4}
!1950 = !{!1951, !1952, !1953, !1954, !1955, !1956, !1960, !1961, !1965, !1966, !1968}
!1951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1947, file: !352, line: 2217, type: !479)
!1952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1947, file: !352, line: 2217, type: !4)
!1953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1947, file: !352, line: 2219, type: !4)
!1954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1947, file: !352, line: 2220, type: !10)
!1955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1947, file: !352, line: 2220, type: !10)
!1956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !1957, file: !352, line: 2229, type: !4)
!1957 = distinct !DILexicalBlock(scope: !1958, file: !352, line: 2228, column: 5)
!1958 = distinct !DILexicalBlock(scope: !1959, file: !352, line: 2227, column: 5)
!1959 = distinct !DILexicalBlock(scope: !1947, file: !352, line: 2227, column: 5)
!1960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1957, file: !352, line: 2230, type: !10)
!1961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1962, file: !352, line: 2245, type: !4)
!1962 = distinct !DILexicalBlock(scope: !1963, file: !352, line: 2244, column: 25)
!1963 = distinct !DILexicalBlock(scope: !1964, file: !352, line: 2244, column: 5)
!1964 = distinct !DILexicalBlock(scope: !1947, file: !352, line: 2244, column: 5)
!1965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1962, file: !352, line: 2246, type: !4)
!1966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1967, file: !352, line: 2250, type: !4)
!1967 = distinct !DILexicalBlock(scope: !1947, file: !352, line: 2250, column: 8)
!1968 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1969, file: !352, line: 2250, type: !4)
!1969 = distinct !DILexicalBlock(scope: !1970, file: !352, line: 2250, column: 115)
!1970 = distinct !DILexicalBlock(scope: !1971, file: !352, line: 2250, column: 83)
!1971 = distinct !DILexicalBlock(scope: !1967, file: !352, line: 2250, column: 60)
!1972 = !DISubprogram(name: "product_sizeof", scope: !352, file: !352, line: 2080, type: !1973, isLocal: true, isDefinition: true, scopeLine: 2081, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*, i8*)* @product_sizeof, variables: !1975)
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!4, !479, !89}
!1975 = !{!1976, !1977, !1978}
!1976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1972, file: !352, line: 2080, type: !479)
!1977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1972, file: !352, line: 2080, type: !89)
!1978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1972, file: !352, line: 2082, type: !10)
!1979 = !DISubprogram(name: "product_new", scope: !352, file: !352, line: 1995, type: !622, isLocal: true, isDefinition: true, scopeLine: 1996, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @product_new, variables: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1997, !1998, !2002, !2004, !2008, !2009, !2013, !2015}
!1981 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1979, file: !352, line: 1995, type: !551)
!1982 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1979, file: !352, line: 1995, type: !4)
!1983 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1979, file: !352, line: 1995, type: !4)
!1984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1979, file: !352, line: 1997, type: !479)
!1985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nargs", scope: !1979, file: !352, line: 1998, type: !10)
!1986 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "npools", scope: !1979, file: !352, line: 1998, type: !10)
!1987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "repeat", scope: !1979, file: !352, line: 1998, type: !10)
!1988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pools", scope: !1979, file: !352, line: 1999, type: !4)
!1989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1979, file: !352, line: 2000, type: !247)
!1990 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1979, file: !352, line: 2001, type: !10)
!1991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1992, file: !352, line: 2004, type: !1994)
!1992 = distinct !DILexicalBlock(scope: !1993, file: !352, line: 2003, column: 29)
!1993 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2003, column: 9)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 128, align: 64, elements: !1995)
!1995 = !{!1996}
!1996 = !DISubrange(count: 2)
!1997 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmpargs", scope: !1992, file: !352, line: 2005, type: !4)
!1998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1999, file: !352, line: 2009, type: !4)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !352, line: 2009, column: 16)
!2000 = distinct !DILexicalBlock(scope: !2001, file: !352, line: 2008, column: 89)
!2001 = distinct !DILexicalBlock(scope: !1992, file: !352, line: 2008, column: 13)
!2002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2003, file: !352, line: 2012, type: !4)
!2003 = distinct !DILexicalBlock(scope: !1992, file: !352, line: 2012, column: 12)
!2004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !2005, file: !352, line: 2035, type: !4)
!2005 = distinct !DILexicalBlock(scope: !2006, file: !352, line: 2034, column: 32)
!2006 = distinct !DILexicalBlock(scope: !2007, file: !352, line: 2034, column: 5)
!2007 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2034, column: 5)
!2008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !2005, file: !352, line: 2036, type: !4)
!2009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !2010, file: !352, line: 2043, type: !4)
!2010 = distinct !DILexicalBlock(scope: !2011, file: !352, line: 2042, column: 30)
!2011 = distinct !DILexicalBlock(scope: !2012, file: !352, line: 2042, column: 5)
!2012 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2042, column: 5)
!2013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2014, file: !352, line: 2064, type: !4)
!2014 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2064, column: 8)
!2015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2016, file: !352, line: 2064, type: !4)
!2016 = distinct !DILexicalBlock(scope: !2017, file: !352, line: 2064, column: 97)
!2017 = distinct !DILexicalBlock(scope: !2014, file: !352, line: 2064, column: 63)
!2018 = !DISubprogram(name: "repeat_dealloc", scope: !352, file: !352, line: 4132, type: !2019, isLocal: true, isDefinition: true, scopeLine: 4133, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.repeatobject*)* @repeat_dealloc, variables: !2021)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{null, !488}
!2021 = !{!2022, !2023, !2025}
!2022 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2018, file: !352, line: 4132, type: !488)
!2023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2024, file: !352, line: 4135, type: !4)
!2024 = distinct !DILexicalBlock(scope: !2018, file: !352, line: 4135, column: 8)
!2025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2026, file: !352, line: 4135, type: !4)
!2026 = distinct !DILexicalBlock(scope: !2027, file: !352, line: 4135, column: 103)
!2027 = distinct !DILexicalBlock(scope: !2024, file: !352, line: 4135, column: 69)
!2028 = !DISubprogram(name: "repeat_repr", scope: !352, file: !352, line: 4158, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4159, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_repr, variables: !2031)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!4, !488}
!2031 = !{!2032}
!2032 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2028, file: !352, line: 4158, type: !488)
!2033 = !DISubprogram(name: "repeat_traverse", scope: !352, file: !352, line: 4140, type: !2034, isLocal: true, isDefinition: true, scopeLine: 4141, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.repeatobject*, i32 (%struct._object*, i8*)*, i8*)* @repeat_traverse, variables: !2036)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!43, !488, !263, !89}
!2036 = !{!2037, !2038, !2039, !2040}
!2037 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2033, file: !352, line: 4140, type: !488)
!2038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2033, file: !352, line: 4140, type: !263)
!2039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2033, file: !352, line: 4140, type: !89)
!2040 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2041, file: !352, line: 4142, type: !43)
!2041 = distinct !DILexicalBlock(scope: !2042, file: !352, line: 4142, column: 27)
!2042 = distinct !DILexicalBlock(scope: !2043, file: !352, line: 4142, column: 14)
!2043 = distinct !DILexicalBlock(scope: !2033, file: !352, line: 4142, column: 8)
!2044 = !DISubprogram(name: "repeat_next", scope: !352, file: !352, line: 4147, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4148, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_next, variables: !2045)
!2045 = !{!2046}
!2046 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2044, file: !352, line: 4147, type: !488)
!2047 = !DISubprogram(name: "repeat_len", scope: !352, file: !352, line: 4167, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4168, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_len, variables: !2048)
!2048 = !{!2049}
!2049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2047, file: !352, line: 4167, type: !488)
!2050 = !DISubprogram(name: "repeat_reduce", scope: !352, file: !352, line: 4179, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4180, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_reduce, variables: !2051)
!2051 = !{!2052}
!2052 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2050, file: !352, line: 4179, type: !488)
!2053 = !DISubprogram(name: "repeat_new", scope: !352, file: !352, line: 4108, type: !622, isLocal: true, isDefinition: true, scopeLine: 4109, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @repeat_new, variables: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060}
!2055 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2053, file: !352, line: 4108, type: !551)
!2056 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2053, file: !352, line: 4108, type: !4)
!2057 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2053, file: !352, line: 4108, type: !4)
!2058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ro", scope: !2053, file: !352, line: 4110, type: !488)
!2059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !2053, file: !352, line: 4111, type: !4)
!2060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !2053, file: !352, line: 4112, type: !10)
!2061 = !DISubprogram(name: "groupby_dealloc", scope: !352, file: !352, line: 54, type: !2062, isLocal: true, isDefinition: true, scopeLine: 55, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.groupbyobject*)* @groupby_dealloc, variables: !2064)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !502}
!2064 = !{!2065, !2066, !2068, !2071, !2073, !2076, !2078, !2081, !2083, !2086, !2088}
!2065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gbo", arg: 1, scope: !2061, file: !352, line: 54, type: !502)
!2066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2067, file: !352, line: 57, type: !4)
!2067 = distinct !DILexicalBlock(scope: !2061, file: !352, line: 57, column: 8)
!2068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2069, file: !352, line: 57, type: !4)
!2069 = distinct !DILexicalBlock(scope: !2070, file: !352, line: 57, column: 99)
!2070 = distinct !DILexicalBlock(scope: !2067, file: !352, line: 57, column: 65)
!2071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2072, file: !352, line: 58, type: !4)
!2072 = distinct !DILexicalBlock(scope: !2061, file: !352, line: 58, column: 8)
!2073 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2074, file: !352, line: 58, type: !4)
!2074 = distinct !DILexicalBlock(scope: !2075, file: !352, line: 58, column: 104)
!2075 = distinct !DILexicalBlock(scope: !2072, file: !352, line: 58, column: 70)
!2076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2077, file: !352, line: 59, type: !4)
!2077 = distinct !DILexicalBlock(scope: !2061, file: !352, line: 59, column: 8)
!2078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2079, file: !352, line: 59, type: !4)
!2079 = distinct !DILexicalBlock(scope: !2080, file: !352, line: 59, column: 103)
!2080 = distinct !DILexicalBlock(scope: !2077, file: !352, line: 59, column: 69)
!2081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2082, file: !352, line: 60, type: !4)
!2082 = distinct !DILexicalBlock(scope: !2061, file: !352, line: 60, column: 8)
!2083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2084, file: !352, line: 60, type: !4)
!2084 = distinct !DILexicalBlock(scope: !2085, file: !352, line: 60, column: 104)
!2085 = distinct !DILexicalBlock(scope: !2082, file: !352, line: 60, column: 70)
!2086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2087, file: !352, line: 61, type: !4)
!2087 = distinct !DILexicalBlock(scope: !2061, file: !352, line: 61, column: 8)
!2088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2089, file: !352, line: 61, type: !4)
!2089 = distinct !DILexicalBlock(scope: !2090, file: !352, line: 61, column: 106)
!2090 = distinct !DILexicalBlock(scope: !2087, file: !352, line: 61, column: 72)
!2091 = !DISubprogram(name: "groupby_traverse", scope: !352, file: !352, line: 66, type: !2092, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.groupbyobject*, i32 (%struct._object*, i8*)*, i8*)* @groupby_traverse, variables: !2094)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!43, !502, !263, !89}
!2094 = !{!2095, !2096, !2097, !2098, !2102, !2106, !2110, !2114}
!2095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gbo", arg: 1, scope: !2091, file: !352, line: 66, type: !502)
!2096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2091, file: !352, line: 66, type: !263)
!2097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2091, file: !352, line: 66, type: !89)
!2098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2099, file: !352, line: 68, type: !43)
!2099 = distinct !DILexicalBlock(scope: !2100, file: !352, line: 68, column: 23)
!2100 = distinct !DILexicalBlock(scope: !2101, file: !352, line: 68, column: 14)
!2101 = distinct !DILexicalBlock(scope: !2091, file: !352, line: 68, column: 8)
!2102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2103, file: !352, line: 69, type: !43)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !352, line: 69, column: 28)
!2104 = distinct !DILexicalBlock(scope: !2105, file: !352, line: 69, column: 14)
!2105 = distinct !DILexicalBlock(scope: !2091, file: !352, line: 69, column: 8)
!2106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2107, file: !352, line: 70, type: !43)
!2107 = distinct !DILexicalBlock(scope: !2108, file: !352, line: 70, column: 27)
!2108 = distinct !DILexicalBlock(scope: !2109, file: !352, line: 70, column: 14)
!2109 = distinct !DILexicalBlock(scope: !2091, file: !352, line: 70, column: 8)
!2110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2111, file: !352, line: 71, type: !43)
!2111 = distinct !DILexicalBlock(scope: !2112, file: !352, line: 71, column: 28)
!2112 = distinct !DILexicalBlock(scope: !2113, file: !352, line: 71, column: 14)
!2113 = distinct !DILexicalBlock(scope: !2091, file: !352, line: 71, column: 8)
!2114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2115, file: !352, line: 72, type: !43)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !352, line: 72, column: 30)
!2116 = distinct !DILexicalBlock(scope: !2117, file: !352, line: 72, column: 14)
!2117 = distinct !DILexicalBlock(scope: !2091, file: !352, line: 72, column: 8)
!2118 = !DISubprogram(name: "groupby_next", scope: !352, file: !352, line: 77, type: !2119, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*)* @groupby_next, variables: !2121)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{!4, !502}
!2121 = !{!2122, !2123, !2124, !2125, !2126, !2127, !2128, !2135, !2141, !2143, !2146, !2148, !2151, !2153, !2156}
!2122 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gbo", arg: 1, scope: !2118, file: !352, line: 77, type: !502)
!2123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newvalue", scope: !2118, file: !352, line: 79, type: !4)
!2124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newkey", scope: !2118, file: !352, line: 79, type: !4)
!2125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2118, file: !352, line: 79, type: !4)
!2126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "grouper", scope: !2118, file: !352, line: 79, type: !4)
!2127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !2118, file: !352, line: 79, type: !4)
!2128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rcmp", scope: !2129, file: !352, line: 88, type: !43)
!2129 = distinct !DILexicalBlock(scope: !2130, file: !352, line: 87, column: 14)
!2130 = distinct !DILexicalBlock(scope: !2131, file: !352, line: 85, column: 18)
!2131 = distinct !DILexicalBlock(scope: !2132, file: !352, line: 83, column: 13)
!2132 = distinct !DILexicalBlock(scope: !2133, file: !352, line: 82, column: 14)
!2133 = distinct !DILexicalBlock(scope: !2134, file: !352, line: 82, column: 5)
!2134 = distinct !DILexicalBlock(scope: !2118, file: !352, line: 82, column: 5)
!2135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2136, file: !352, line: 109, type: !4)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !352, line: 109, column: 20)
!2137 = distinct !DILexicalBlock(scope: !2138, file: !352, line: 108, column: 39)
!2138 = distinct !DILexicalBlock(scope: !2139, file: !352, line: 108, column: 17)
!2139 = distinct !DILexicalBlock(scope: !2140, file: !352, line: 105, column: 16)
!2140 = distinct !DILexicalBlock(scope: !2132, file: !352, line: 102, column: 13)
!2141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2142, file: !352, line: 116, type: !4)
!2142 = distinct !DILexicalBlock(scope: !2132, file: !352, line: 116, column: 12)
!2143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2144, file: !352, line: 116, type: !4)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !352, line: 116, column: 99)
!2145 = distinct !DILexicalBlock(scope: !2142, file: !352, line: 116, column: 65)
!2146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2147, file: !352, line: 120, type: !4)
!2147 = distinct !DILexicalBlock(scope: !2132, file: !352, line: 120, column: 12)
!2148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2149, file: !352, line: 120, type: !4)
!2149 = distinct !DILexicalBlock(scope: !2150, file: !352, line: 120, column: 99)
!2150 = distinct !DILexicalBlock(scope: !2147, file: !352, line: 120, column: 65)
!2151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2152, file: !352, line: 126, type: !4)
!2152 = distinct !DILexicalBlock(scope: !2118, file: !352, line: 126, column: 8)
!2153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2154, file: !352, line: 126, type: !4)
!2154 = distinct !DILexicalBlock(scope: !2155, file: !352, line: 126, column: 95)
!2155 = distinct !DILexicalBlock(scope: !2152, file: !352, line: 126, column: 61)
!2156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2157, file: !352, line: 133, type: !4)
!2157 = distinct !DILexicalBlock(scope: !2118, file: !352, line: 133, column: 8)
!2158 = !DISubprogram(name: "_grouper_create", scope: !352, file: !352, line: 255, type: !2159, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*, %struct._object*)* @_grouper_create, variables: !2161)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!4, !502, !4}
!2161 = !{!2162, !2163, !2164}
!2162 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parent", arg: 1, scope: !2158, file: !352, line: 255, type: !502)
!2163 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tgtkey", arg: 2, scope: !2158, file: !352, line: 255, type: !4)
!2164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "igo", scope: !2158, file: !352, line: 257, type: !495)
!2165 = !DISubprogram(name: "groupby_reduce", scope: !352, file: !352, line: 138, type: !2119, isLocal: true, isDefinition: true, scopeLine: 139, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*)* @groupby_reduce, variables: !2166)
!2166 = !{!2167, !2168}
!2167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !2165, file: !352, line: 138, type: !502)
!2168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2165, file: !352, line: 143, type: !4)
!2169 = !DISubprogram(name: "groupby_setstate", scope: !352, file: !352, line: 157, type: !2159, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*, %struct._object*)* @groupby_setstate, variables: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2178, !2182, !2184, !2188, !2190}
!2171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !2169, file: !352, line: 157, type: !502)
!2172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !2169, file: !352, line: 157, type: !4)
!2173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "currkey", scope: !2169, file: !352, line: 159, type: !4)
!2174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "currvalue", scope: !2169, file: !352, line: 159, type: !4)
!2175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tgtkey", scope: !2169, file: !352, line: 159, type: !4)
!2176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2177, file: !352, line: 162, type: !4)
!2177 = distinct !DILexicalBlock(scope: !2169, file: !352, line: 162, column: 8)
!2178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2179, file: !352, line: 162, type: !4)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !352, line: 162, column: 117)
!2180 = distinct !DILexicalBlock(scope: !2181, file: !352, line: 162, column: 84)
!2181 = distinct !DILexicalBlock(scope: !2177, file: !352, line: 162, column: 61)
!2182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2183, file: !352, line: 165, type: !4)
!2183 = distinct !DILexicalBlock(scope: !2169, file: !352, line: 165, column: 8)
!2184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2185, file: !352, line: 165, type: !4)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !352, line: 165, column: 121)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !352, line: 165, column: 86)
!2187 = distinct !DILexicalBlock(scope: !2183, file: !352, line: 165, column: 63)
!2188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2189, file: !352, line: 168, type: !4)
!2189 = distinct !DILexicalBlock(scope: !2169, file: !352, line: 168, column: 8)
!2190 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2191, file: !352, line: 168, type: !4)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !352, line: 168, column: 115)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !352, line: 168, column: 83)
!2193 = distinct !DILexicalBlock(scope: !2189, file: !352, line: 168, column: 60)
!2194 = !DISubprogram(name: "groupby_new", scope: !352, file: !352, line: 27, type: !622, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @groupby_new, variables: !2195)
!2195 = !{!2196, !2197, !2198, !2199, !2200, !2201, !2202}
!2196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2194, file: !352, line: 27, type: !551)
!2197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2194, file: !352, line: 27, type: !4)
!2198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2194, file: !352, line: 27, type: !4)
!2199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gbo", scope: !2194, file: !352, line: 30, type: !502)
!2200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2194, file: !352, line: 31, type: !4)
!2201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keyfunc", scope: !2194, file: !352, line: 31, type: !4)
!2202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2203, file: !352, line: 47, type: !4)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !352, line: 47, column: 12)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !352, line: 46, column: 32)
!2205 = distinct !DILexicalBlock(scope: !2194, file: !352, line: 46, column: 9)
!2206 = !DISubprogram(name: "_grouper_dealloc", scope: !352, file: !352, line: 272, type: !2207, isLocal: true, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._grouperobject*)* @_grouper_dealloc, variables: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !495}
!2209 = !{!2210, !2211, !2213}
!2210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "igo", arg: 1, scope: !2206, file: !352, line: 272, type: !495)
!2211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2212, file: !352, line: 275, type: !4)
!2212 = distinct !DILexicalBlock(scope: !2206, file: !352, line: 275, column: 8)
!2213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2214, file: !352, line: 276, type: !4)
!2214 = distinct !DILexicalBlock(scope: !2206, file: !352, line: 276, column: 8)
!2215 = !DISubprogram(name: "_grouper_traverse", scope: !352, file: !352, line: 281, type: !2216, isLocal: true, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._grouperobject*, i32 (%struct._object*, i8*)*, i8*)* @_grouper_traverse, variables: !2218)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!43, !495, !263, !89}
!2218 = !{!2219, !2220, !2221, !2222, !2226}
!2219 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "igo", arg: 1, scope: !2215, file: !352, line: 281, type: !495)
!2220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2215, file: !352, line: 281, type: !263)
!2221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2215, file: !352, line: 281, type: !89)
!2222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2223, file: !352, line: 283, type: !43)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !352, line: 283, column: 27)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !352, line: 283, column: 14)
!2225 = distinct !DILexicalBlock(scope: !2215, file: !352, line: 283, column: 8)
!2226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2227, file: !352, line: 284, type: !43)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !352, line: 284, column: 27)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !352, line: 284, column: 14)
!2229 = distinct !DILexicalBlock(scope: !2215, file: !352, line: 284, column: 8)
!2230 = !DISubprogram(name: "_grouper_next", scope: !352, file: !352, line: 289, type: !2231, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._grouperobject*)* @_grouper_next, variables: !2233)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!4, !495}
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2248, !2250}
!2234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "igo", arg: 1, scope: !2230, file: !352, line: 289, type: !495)
!2235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gbo", scope: !2230, file: !352, line: 291, type: !502)
!2236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newvalue", scope: !2230, file: !352, line: 292, type: !4)
!2237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newkey", scope: !2230, file: !352, line: 292, type: !4)
!2238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2230, file: !352, line: 292, type: !4)
!2239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rcmp", scope: !2230, file: !352, line: 293, type: !43)
!2240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2241, file: !352, line: 307, type: !4)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !352, line: 307, column: 20)
!2242 = distinct !DILexicalBlock(scope: !2243, file: !352, line: 306, column: 39)
!2243 = distinct !DILexicalBlock(scope: !2244, file: !352, line: 306, column: 17)
!2244 = distinct !DILexicalBlock(scope: !2245, file: !352, line: 303, column: 16)
!2245 = distinct !DILexicalBlock(scope: !2246, file: !352, line: 300, column: 13)
!2246 = distinct !DILexicalBlock(scope: !2247, file: !352, line: 295, column: 39)
!2247 = distinct !DILexicalBlock(scope: !2230, file: !352, line: 295, column: 9)
!2248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2249, file: !352, line: 325, type: !4)
!2249 = distinct !DILexicalBlock(scope: !2230, file: !352, line: 325, column: 8)
!2250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2251, file: !352, line: 325, type: !4)
!2251 = distinct !DILexicalBlock(scope: !2252, file: !352, line: 325, column: 119)
!2252 = distinct !DILexicalBlock(scope: !2253, file: !352, line: 325, column: 85)
!2253 = distinct !DILexicalBlock(scope: !2249, file: !352, line: 325, column: 62)
!2254 = !DISubprogram(name: "_grouper_reduce", scope: !352, file: !352, line: 331, type: !2231, isLocal: true, isDefinition: true, scopeLine: 332, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._grouperobject*)* @_grouper_reduce, variables: !2255)
!2255 = !{!2256}
!2256 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !2254, file: !352, line: 331, type: !495)
!2257 = !DISubprogram(name: "_grouper_new", scope: !352, file: !352, line: 244, type: !622, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @_grouper_new, variables: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263}
!2259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2257, file: !352, line: 244, type: !551)
!2260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2257, file: !352, line: 244, type: !4)
!2261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2257, file: !352, line: 244, type: !4)
!2262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parent", scope: !2257, file: !352, line: 246, type: !4)
!2263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tgtkey", scope: !2257, file: !352, line: 246, type: !4)
!2264 = !DISubprogram(name: "tee_dealloc", scope: !352, file: !352, line: 727, type: !2265, isLocal: true, isDefinition: true, scopeLine: 728, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.teeobject*)* @tee_dealloc, variables: !2267)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{null, !524}
!2267 = !{!2268}
!2268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2264, file: !352, line: 727, type: !524)
!2269 = !DISubprogram(name: "tee_traverse", scope: !352, file: !352, line: 651, type: !2270, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teeobject*, i32 (%struct._object*, i8*)*, i8*)* @tee_traverse, variables: !2272)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!43, !524, !263, !89}
!2272 = !{!2273, !2274, !2275, !2276}
!2273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2269, file: !352, line: 651, type: !524)
!2274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2269, file: !352, line: 651, type: !263)
!2275 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2269, file: !352, line: 651, type: !89)
!2276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2277, file: !352, line: 653, type: !43)
!2277 = distinct !DILexicalBlock(scope: !2278, file: !352, line: 653, column: 39)
!2278 = distinct !DILexicalBlock(scope: !2279, file: !352, line: 653, column: 14)
!2279 = distinct !DILexicalBlock(scope: !2269, file: !352, line: 653, column: 8)
!2280 = !DISubprogram(name: "tee_clear", scope: !352, file: !352, line: 718, type: !2281, isLocal: true, isDefinition: true, scopeLine: 719, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teeobject*)* @tee_clear, variables: !2283)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!43, !524}
!2283 = !{!2284, !2285, !2287}
!2284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2280, file: !352, line: 718, type: !524)
!2285 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2286, file: !352, line: 722, type: !4)
!2286 = distinct !DILexicalBlock(scope: !2280, file: !352, line: 722, column: 8)
!2287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2288, file: !352, line: 722, type: !4)
!2288 = distinct !DILexicalBlock(scope: !2289, file: !352, line: 722, column: 117)
!2289 = distinct !DILexicalBlock(scope: !2290, file: !352, line: 722, column: 84)
!2290 = distinct !DILexicalBlock(scope: !2286, file: !352, line: 722, column: 61)
!2291 = !DISubprogram(name: "tee_next", scope: !352, file: !352, line: 631, type: !2292, isLocal: true, isDefinition: true, scopeLine: 632, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*)* @tee_next, variables: !2294)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!4, !524}
!2294 = !{!2295, !2296, !2297, !2298}
!2295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2291, file: !352, line: 631, type: !524)
!2296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2291, file: !352, line: 633, type: !4)
!2297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "link", scope: !2291, file: !352, line: 633, type: !4)
!2298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2299, file: !352, line: 639, type: !4)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !352, line: 639, column: 12)
!2300 = distinct !DILexicalBlock(scope: !2301, file: !352, line: 635, column: 26)
!2301 = distinct !DILexicalBlock(scope: !2291, file: !352, line: 635, column: 9)
!2302 = !DISubprogram(name: "teedataobject_jumplink", scope: !352, file: !352, line: 436, type: !2303, isLocal: true, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teedataobject*)* @teedataobject_jumplink, variables: !2305)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!4, !512}
!2305 = !{!2306, !2307}
!2306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2302, file: !352, line: 436, type: !512)
!2307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !2308, file: !352, line: 440, type: !4)
!2308 = distinct !DILexicalBlock(scope: !2302, file: !352, line: 440, column: 8)
!2309 = !DISubprogram(name: "teedataobject_newinternal", scope: !352, file: !352, line: 419, type: !116, isLocal: true, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @teedataobject_newinternal, variables: !2310)
!2310 = !{!2311, !2312}
!2311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "it", arg: 1, scope: !2309, file: !352, line: 419, type: !4)
!2312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tdo", scope: !2309, file: !352, line: 421, type: !512)
!2313 = !DISubprogram(name: "teedataobject_getitem", scope: !352, file: !352, line: 445, type: !2314, isLocal: true, isDefinition: true, scopeLine: 446, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teedataobject*, i32)* @teedataobject_getitem, variables: !2316)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!4, !512, !43}
!2316 = !{!2317, !2318, !2319}
!2317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2313, file: !352, line: 445, type: !512)
!2318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 2, scope: !2313, file: !352, line: 445, type: !43)
!2319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2313, file: !352, line: 447, type: !4)
!2320 = !DISubprogram(name: "tee_copy", scope: !352, file: !352, line: 658, type: !2292, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*)* @tee_copy, variables: !2321)
!2321 = !{!2322, !2323}
!2322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2320, file: !352, line: 658, type: !524)
!2323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newto", scope: !2320, file: !352, line: 660, type: !524)
!2324 = !DISubprogram(name: "tee_reduce", scope: !352, file: !352, line: 735, type: !2292, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*)* @tee_reduce, variables: !2325)
!2325 = !{!2326}
!2326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2324, file: !352, line: 735, type: !524)
!2327 = !DISubprogram(name: "tee_setstate", scope: !352, file: !352, line: 741, type: !2328, isLocal: true, isDefinition: true, scopeLine: 742, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*, %struct._object*)* @tee_setstate, variables: !2330)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!4, !524, !4}
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2337}
!2331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2327, file: !352, line: 741, type: !524)
!2332 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !2327, file: !352, line: 741, type: !4)
!2333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tdo", scope: !2327, file: !352, line: 743, type: !512)
!2334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !2327, file: !352, line: 744, type: !43)
!2335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2336, file: !352, line: 751, type: !4)
!2336 = distinct !DILexicalBlock(scope: !2327, file: !352, line: 751, column: 8)
!2337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2338, file: !352, line: 751, type: !4)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !352, line: 751, column: 117)
!2339 = distinct !DILexicalBlock(scope: !2340, file: !352, line: 751, column: 84)
!2340 = distinct !DILexicalBlock(scope: !2336, file: !352, line: 751, column: 61)
!2341 = !DISubprogram(name: "tee_new", scope: !352, file: !352, line: 708, type: !622, isLocal: true, isDefinition: true, scopeLine: 709, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @tee_new, variables: !2342)
!2342 = !{!2343, !2344, !2345, !2346}
!2343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2341, file: !352, line: 708, type: !551)
!2344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2341, file: !352, line: 708, type: !4)
!2345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2341, file: !352, line: 708, type: !4)
!2346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !2341, file: !352, line: 710, type: !4)
!2347 = !DISubprogram(name: "tee_fromiterable", scope: !352, file: !352, line: 676, type: !116, isLocal: true, isDefinition: true, scopeLine: 677, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @tee_fromiterable, variables: !2348)
!2348 = !{!2349, !2350, !2351, !2352, !2354}
!2349 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iterable", arg: 1, scope: !2347, file: !352, line: 676, type: !4)
!2350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "to", scope: !2347, file: !352, line: 678, type: !524)
!2351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2347, file: !352, line: 679, type: !4)
!2352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2353, file: !352, line: 703, type: !4)
!2353 = distinct !DILexicalBlock(scope: !2347, file: !352, line: 703, column: 8)
!2354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2355, file: !352, line: 703, type: !4)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !352, line: 703, column: 94)
!2356 = distinct !DILexicalBlock(scope: !2353, file: !352, line: 703, column: 60)
!2357 = !DISubprogram(name: "teedataobject_dealloc", scope: !352, file: !352, line: 505, type: !2358, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.teedataobject*)* @teedataobject_dealloc, variables: !2360)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{null, !512}
!2360 = !{!2361}
!2361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2357, file: !352, line: 505, type: !512)
!2362 = !DISubprogram(name: "teedataobject_traverse", scope: !352, file: !352, line: 466, type: !2363, isLocal: true, isDefinition: true, scopeLine: 467, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teedataobject*, i32 (%struct._object*, i8*)*, i8*)* @teedataobject_traverse, variables: !2365)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!43, !512, !263, !89}
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2374, !2380}
!2366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2362, file: !352, line: 466, type: !512)
!2367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2362, file: !352, line: 466, type: !263)
!2368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2362, file: !352, line: 466, type: !89)
!2369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2362, file: !352, line: 468, type: !43)
!2370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2371, file: !352, line: 469, type: !43)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !352, line: 469, column: 23)
!2372 = distinct !DILexicalBlock(scope: !2373, file: !352, line: 469, column: 14)
!2373 = distinct !DILexicalBlock(scope: !2362, file: !352, line: 469, column: 8)
!2374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2375, file: !352, line: 471, type: !43)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !352, line: 471, column: 34)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !352, line: 471, column: 18)
!2377 = distinct !DILexicalBlock(scope: !2378, file: !352, line: 471, column: 12)
!2378 = distinct !DILexicalBlock(scope: !2379, file: !352, line: 470, column: 5)
!2379 = distinct !DILexicalBlock(scope: !2362, file: !352, line: 470, column: 5)
!2380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2381, file: !352, line: 472, type: !43)
!2381 = distinct !DILexicalBlock(scope: !2382, file: !352, line: 472, column: 29)
!2382 = distinct !DILexicalBlock(scope: !2383, file: !352, line: 472, column: 14)
!2383 = distinct !DILexicalBlock(scope: !2362, file: !352, line: 472, column: 8)
!2384 = !DISubprogram(name: "teedataobject_clear", scope: !352, file: !352, line: 490, type: !2385, isLocal: true, isDefinition: true, scopeLine: 491, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teedataobject*)* @teedataobject_clear, variables: !2387)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!43, !512}
!2387 = !{!2388, !2389, !2390, !2391, !2393, !2397, !2401}
!2388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2384, file: !352, line: 490, type: !512)
!2389 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2384, file: !352, line: 492, type: !43)
!2390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !2384, file: !352, line: 493, type: !4)
!2391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2392, file: !352, line: 495, type: !4)
!2392 = distinct !DILexicalBlock(scope: !2384, file: !352, line: 495, column: 8)
!2393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2394, file: !352, line: 495, type: !4)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !352, line: 495, column: 109)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !352, line: 495, column: 80)
!2396 = distinct !DILexicalBlock(scope: !2392, file: !352, line: 495, column: 57)
!2397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2398, file: !352, line: 497, type: !4)
!2398 = distinct !DILexicalBlock(scope: !2399, file: !352, line: 497, column: 12)
!2399 = distinct !DILexicalBlock(scope: !2400, file: !352, line: 496, column: 5)
!2400 = distinct !DILexicalBlock(scope: !2384, file: !352, line: 496, column: 5)
!2401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2402, file: !352, line: 497, type: !4)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !352, line: 497, column: 127)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !352, line: 497, column: 91)
!2404 = distinct !DILexicalBlock(scope: !2398, file: !352, line: 497, column: 68)
!2405 = !DISubprogram(name: "teedataobject_safe_decref", scope: !352, file: !352, line: 477, type: !36, isLocal: true, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @teedataobject_safe_decref, variables: !2406)
!2406 = !{!2407, !2408, !2410, !2412, !2414}
!2407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !2405, file: !352, line: 477, type: !4)
!2408 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nextlink", scope: !2409, file: !352, line: 481, type: !4)
!2409 = distinct !DILexicalBlock(scope: !2405, file: !352, line: 480, column: 50)
!2410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2411, file: !352, line: 483, type: !4)
!2411 = distinct !DILexicalBlock(scope: !2409, file: !352, line: 483, column: 12)
!2412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2413, file: !352, line: 486, type: !4)
!2413 = distinct !DILexicalBlock(scope: !2405, file: !352, line: 486, column: 8)
!2414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2415, file: !352, line: 486, type: !4)
!2415 = distinct !DILexicalBlock(scope: !2416, file: !352, line: 486, column: 95)
!2416 = distinct !DILexicalBlock(scope: !2413, file: !352, line: 486, column: 61)
!2417 = !DISubprogram(name: "teedataobject_reduce", scope: !352, file: !352, line: 513, type: !2303, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teedataobject*)* @teedataobject_reduce, variables: !2418)
!2418 = !{!2419, !2420, !2421}
!2419 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2417, file: !352, line: 513, type: !512)
!2420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2417, file: !352, line: 515, type: !43)
!2421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "values", scope: !2417, file: !352, line: 517, type: !4)
!2422 = !DISubprogram(name: "teedataobject_new", scope: !352, file: !352, line: 532, type: !622, isLocal: true, isDefinition: true, scopeLine: 533, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @teedataobject_new, variables: !2423)
!2423 = !{!2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2435}
!2424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2422, file: !352, line: 532, type: !551)
!2425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2422, file: !352, line: 532, type: !4)
!2426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2422, file: !352, line: 532, type: !4)
!2427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tdo", scope: !2422, file: !352, line: 534, type: !512)
!2428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2422, file: !352, line: 535, type: !4)
!2429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "values", scope: !2422, file: !352, line: 535, type: !4)
!2430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2422, file: !352, line: 535, type: !4)
!2431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2422, file: !352, line: 536, type: !10)
!2432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2422, file: !352, line: 536, type: !10)
!2433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2434, file: !352, line: 571, type: !4)
!2434 = distinct !DILexicalBlock(scope: !2422, file: !352, line: 571, column: 8)
!2435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2436, file: !352, line: 571, type: !4)
!2436 = distinct !DILexicalBlock(scope: !2437, file: !352, line: 571, column: 95)
!2437 = distinct !DILexicalBlock(scope: !2434, file: !352, line: 571, column: 61)
!2438 = !DISubprogram(name: "tee", scope: !352, file: !352, line: 812, type: !126, isLocal: true, isDefinition: true, scopeLine: 813, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @tee, variables: !2439)
!2439 = !{!2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2452, !2456, !2460}
!2440 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2438, file: !352, line: 812, type: !4)
!2441 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2438, file: !352, line: 812, type: !4)
!2442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2438, file: !352, line: 814, type: !10)
!2443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2438, file: !352, line: 814, type: !10)
!2444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2438, file: !352, line: 815, type: !4)
!2445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !2438, file: !352, line: 815, type: !4)
!2446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "copyable", scope: !2438, file: !352, line: 815, type: !4)
!2447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2438, file: !352, line: 815, type: !4)
!2448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2449, file: !352, line: 831, type: !4)
!2449 = distinct !DILexicalBlock(scope: !2450, file: !352, line: 831, column: 12)
!2450 = distinct !DILexicalBlock(scope: !2451, file: !352, line: 830, column: 27)
!2451 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 830, column: 9)
!2452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2453, file: !352, line: 836, type: !4)
!2453 = distinct !DILexicalBlock(scope: !2454, file: !352, line: 836, column: 12)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !352, line: 834, column: 51)
!2455 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 834, column: 9)
!2456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2457, file: !352, line: 838, type: !4)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !352, line: 838, column: 16)
!2458 = distinct !DILexicalBlock(scope: !2459, file: !352, line: 837, column: 37)
!2459 = distinct !DILexicalBlock(scope: !2454, file: !352, line: 837, column: 13)
!2460 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2461, file: !352, line: 848, type: !4)
!2461 = distinct !DILexicalBlock(scope: !2462, file: !352, line: 848, column: 16)
!2462 = distinct !DILexicalBlock(scope: !2463, file: !352, line: 847, column: 37)
!2463 = distinct !DILexicalBlock(scope: !2464, file: !352, line: 847, column: 13)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !352, line: 844, column: 27)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !352, line: 844, column: 5)
!2466 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 844, column: 5)
!2467 = !{!2468, !2469, !2473, !2478, !2482, !2486, !2488, !2489, !2493, !2497, !2501, !2502, !2503, !2507, !2508, !2509, !2510, !2514, !2515, !2516, !2520, !2521, !2522, !2526, !2527, !2528, !2532, !2533, !2534, !2538, !2540, !2541, !2545, !2546, !2550, !2551, !2555, !2556, !2557, !2558, !2562, !2563, !2564, !2568, !2569, !2570, !2571, !2575, !2576, !2577, !2581, !2582, !2583, !2584, !2588, !2589, !2590, !2594, !2595, !2599, !2600, !2601, !2605, !2606, !2607, !2608, !2609, !2610, !2614, !2615, !2619, !2620, !2624, !2625, !2647, !2651, !2652, !2660}
!2468 = !DIGlobalVariable(name: "accumulate_type", scope: !0, file: !352, line: 3486, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @accumulate_type)
!2469 = !DIGlobalVariable(name: "accumulate_doc", scope: !0, file: !352, line: 3481, type: !2470, isLocal: true, isDefinition: true, variable: [122 x i8]* @accumulate_doc)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 976, align: 8, elements: !2471)
!2471 = !{!2472}
!2472 = !DISubrange(count: 122)
!2473 = !DIGlobalVariable(name: "accumulate_methods", scope: !0, file: !352, line: 3473, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @accumulate_methods)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 768, align: 64, elements: !2476)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !281, line: 47, baseType: !280)
!2476 = !{!2477}
!2477 = !DISubrange(count: 3)
!2478 = !DIGlobalVariable(name: "reduce_doc", scope: !0, file: !352, line: 154, type: !2479, isLocal: true, isDefinition: true, variable: [39 x i8]* @reduce_doc)
!2479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 312, align: 8, elements: !2480)
!2480 = !{!2481}
!2481 = !DISubrange(count: 39)
!2482 = !DIGlobalVariable(name: "setstate_doc", scope: !0, file: !352, line: 174, type: !2483, isLocal: true, isDefinition: true, variable: [38 x i8]* @setstate_doc)
!2483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 304, align: 8, elements: !2484)
!2484 = !{!2485}
!2485 = !DISubrange(count: 38)
!2486 = !DIGlobalVariable(name: "kwargs", scope: !621, file: !352, line: 3375, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @accumulate_new.kwargs)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 192, align: 64, elements: !2476)
!2488 = !DIGlobalVariable(name: "combinations_type", scope: !0, file: !352, line: 2594, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @combinations_type)
!2489 = !DIGlobalVariable(name: "combinations_doc", scope: !0, file: !352, line: 2588, type: !2490, isLocal: true, isDefinition: true, variable: [186 x i8]* @combinations_doc)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1488, align: 8, elements: !2491)
!2491 = !{!2492}
!2492 = !DISubrange(count: 186)
!2493 = !DIGlobalVariable(name: "combinations_methods", scope: !0, file: !352, line: 2578, type: !2494, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @combinations_methods)
!2494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 1024, align: 64, elements: !2495)
!2495 = !{!2496}
!2496 = !DISubrange(count: 4)
!2497 = !DIGlobalVariable(name: "sizeof_doc", scope: !0, file: !352, line: 2089, type: !2498, isLocal: true, isDefinition: true, variable: [34 x i8]* @sizeof_doc)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 272, align: 8, elements: !2499)
!2499 = !{!2500}
!2500 = !DISubrange(count: 34)
!2501 = !DIGlobalVariable(name: "kwargs", scope: !745, file: !352, line: 2347, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @combinations_new.kwargs)
!2502 = !DIGlobalVariable(name: "cwr_type", scope: !0, file: !352, line: 2924, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @cwr_type)
!2503 = !DIGlobalVariable(name: "cwr_doc", scope: !0, file: !352, line: 2917, type: !2504, isLocal: true, isDefinition: true, variable: [272 x i8]* @cwr_doc)
!2504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 2176, align: 8, elements: !2505)
!2505 = !{!2506}
!2506 = !DISubrange(count: 272)
!2507 = !DIGlobalVariable(name: "cwr_methods", scope: !0, file: !352, line: 2907, type: !2494, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @cwr_methods)
!2508 = !DIGlobalVariable(name: "kwargs", scope: !865, file: !352, line: 2688, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @cwr_new.kwargs)
!2509 = !DIGlobalVariable(name: "cycle_type", scope: !0, file: !352, line: 999, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @cycle_type)
!2510 = !DIGlobalVariable(name: "cycle_doc", scope: !0, file: !352, line: 993, type: !2511, isLocal: true, isDefinition: true, variable: [130 x i8]* @cycle_doc)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1040, align: 8, elements: !2512)
!2512 = !{!2513}
!2513 = !DISubrange(count: 130)
!2514 = !DIGlobalVariable(name: "cycle_methods", scope: !0, file: !352, line: 985, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @cycle_methods)
!2515 = !DIGlobalVariable(name: "dropwhile_type", scope: !0, file: !352, line: 1168, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @dropwhile_type)
!2516 = !DIGlobalVariable(name: "dropwhile_doc", scope: !0, file: !352, line: 1162, type: !2517, isLocal: true, isDefinition: true, variable: [179 x i8]* @dropwhile_doc)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1432, align: 8, elements: !2518)
!2518 = !{!2519}
!2519 = !DISubrange(count: 179)
!2520 = !DIGlobalVariable(name: "dropwhile_methods", scope: !0, file: !352, line: 1154, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @dropwhile_methods)
!2521 = !DIGlobalVariable(name: "takewhile_type", scope: !0, file: !352, line: 1332, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @takewhile_type)
!2522 = !DIGlobalVariable(name: "takewhile_doc", scope: !0, file: !352, line: 1326, type: !2523, isLocal: true, isDefinition: true, variable: [156 x i8]* @takewhile_doc)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1248, align: 8, elements: !2524)
!2524 = !{!2525}
!2525 = !DISubrange(count: 156)
!2526 = !DIGlobalVariable(name: "takewhile_reduce_methods", scope: !0, file: !352, line: 1319, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @takewhile_reduce_methods)
!2527 = !DIGlobalVariable(name: "islice_type", scope: !0, file: !352, line: 1586, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @islice_type)
!2528 = !DIGlobalVariable(name: "islice_doc", scope: !0, file: !352, line: 1575, type: !2529, isLocal: true, isDefinition: true, variable: [455 x i8]* @islice_doc)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 3640, align: 8, elements: !2530)
!2530 = !{!2531}
!2531 = !DISubrange(count: 455)
!2532 = !DIGlobalVariable(name: "islice_methods", scope: !0, file: !352, line: 1567, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @islice_methods)
!2533 = !DIGlobalVariable(name: "starmap_type", scope: !0, file: !352, line: 1730, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @starmap_type)
!2534 = !DIGlobalVariable(name: "starmap_doc", scope: !0, file: !352, line: 1724, type: !2535, isLocal: true, isDefinition: true, variable: [174 x i8]* @starmap_doc)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1392, align: 8, elements: !2536)
!2536 = !{!2537}
!2537 = !DISubrange(count: 174)
!2538 = !DIGlobalVariable(name: "starmap_methods", scope: !0, file: !352, line: 1718, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @starmap_methods)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 512, align: 64, elements: !1995)
!2540 = !DIGlobalVariable(name: "chain_type", scope: !0, file: !352, line: 1937, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @chain_type)
!2541 = !DIGlobalVariable(name: "chain_doc", scope: !0, file: !352, line: 1914, type: !2542, isLocal: true, isDefinition: true, variable: [227 x i8]* @chain_doc)
!2542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1816, align: 8, elements: !2543)
!2543 = !{!2544}
!2544 = !DISubrange(count: 227)
!2545 = !DIGlobalVariable(name: "chain_methods", scope: !0, file: !352, line: 1927, type: !2494, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @chain_methods)
!2546 = !DIGlobalVariable(name: "chain_from_iterable_doc", scope: !0, file: !352, line: 1921, type: !2547, isLocal: true, isDefinition: true, variable: [134 x i8]* @chain_from_iterable_doc)
!2547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1072, align: 8, elements: !2548)
!2548 = !{!2549}
!2549 = !DISubrange(count: 134)
!2550 = !DIGlobalVariable(name: "compress_type", scope: !0, file: !352, line: 3653, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @compress_type)
!2551 = !DIGlobalVariable(name: "compress_doc", scope: !0, file: !352, line: 3646, type: !2552, isLocal: true, isDefinition: true, variable: [223 x i8]* @compress_doc)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1784, align: 8, elements: !2553)
!2553 = !{!2554}
!2554 = !DISubrange(count: 223)
!2555 = !DIGlobalVariable(name: "compress_methods", scope: !0, file: !352, line: 3640, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @compress_methods)
!2556 = !DIGlobalVariable(name: "kwargs", scope: !1412, file: !352, line: 3554, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @compress_new.kwargs)
!2557 = !DIGlobalVariable(name: "filterfalse_type", scope: !0, file: !352, line: 3811, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @filterfalse_type)
!2558 = !DIGlobalVariable(name: "filterfalse_doc", scope: !0, file: !352, line: 3805, type: !2559, isLocal: true, isDefinition: true, variable: [184 x i8]* @filterfalse_doc)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1472, align: 8, elements: !2560)
!2560 = !{!2561}
!2561 = !DISubrange(count: 184)
!2562 = !DIGlobalVariable(name: "filterfalse_methods", scope: !0, file: !352, line: 3799, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @filterfalse_methods)
!2563 = !DIGlobalVariable(name: "count_type", scope: !0, file: !352, line: 4052, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @count_type)
!2564 = !DIGlobalVariable(name: "count_doc", scope: !0, file: !352, line: 4041, type: !2565, isLocal: true, isDefinition: true, variable: [248 x i8]* @count_doc)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1984, align: 8, elements: !2566)
!2566 = !{!2567}
!2567 = !DISubrange(count: 248)
!2568 = !DIGlobalVariable(name: "count_methods", scope: !0, file: !352, line: 4035, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @count_methods)
!2569 = !DIGlobalVariable(name: "kwlist", scope: !1550, file: !352, line: 3893, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @count_new.kwlist)
!2570 = !DIGlobalVariable(name: "ziplongest_type", scope: !0, file: !352, line: 4472, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @ziplongest_type)
!2571 = !DIGlobalVariable(name: "zip_longest_doc", scope: !0, file: !352, line: 4461, type: !2572, isLocal: true, isDefinition: true, variable: [505 x i8]* @zip_longest_doc)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 4040, align: 8, elements: !2573)
!2573 = !{!2574}
!2574 = !DISubrange(count: 505)
!2575 = !DIGlobalVariable(name: "zip_longest_methods", scope: !0, file: !352, line: 4453, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @zip_longest_methods)
!2576 = !DIGlobalVariable(name: "permutations_type", scope: !0, file: !352, line: 3317, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @permutations_type)
!2577 = !DIGlobalVariable(name: "permutations_doc", scope: !0, file: !352, line: 3311, type: !2578, isLocal: true, isDefinition: true, variable: [194 x i8]* @permutations_doc)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1552, align: 8, elements: !2579)
!2579 = !{!2580}
!2580 = !DISubrange(count: 194)
!2581 = !DIGlobalVariable(name: "permuations_methods", scope: !0, file: !352, line: 3301, type: !2494, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @permuations_methods)
!2582 = !DIGlobalVariable(name: "kwargs", scope: !1851, file: !352, line: 3018, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @permutations_new.kwargs)
!2583 = !DIGlobalVariable(name: "product_type", scope: !0, file: !352, line: 2279, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @product_type)
!2584 = !DIGlobalVariable(name: "product_doc", scope: !0, file: !352, line: 2265, type: !2585, isLocal: true, isDefinition: true, variable: [732 x i8]* @product_doc)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 5856, align: 8, elements: !2586)
!2586 = !{!2587}
!2587 = !DISubrange(count: 732)
!2588 = !DIGlobalVariable(name: "product_methods", scope: !0, file: !352, line: 2255, type: !2494, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @product_methods)
!2589 = !DIGlobalVariable(name: "repeat_type", scope: !0, file: !352, line: 4201, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @repeat_type)
!2590 = !DIGlobalVariable(name: "repeat_doc", scope: !0, file: !352, line: 4196, type: !2591, isLocal: true, isDefinition: true, variable: [155 x i8]* @repeat_doc)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1240, align: 8, elements: !2592)
!2592 = !{!2593}
!2593 = !DISubrange(count: 155)
!2594 = !DIGlobalVariable(name: "repeat_methods", scope: !0, file: !352, line: 4190, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @repeat_methods)
!2595 = !DIGlobalVariable(name: "length_hint_doc", scope: !0, file: !352, line: 4176, type: !2596, isLocal: true, isDefinition: true, variable: [55 x i8]* @length_hint_doc)
!2596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 440, align: 8, elements: !2597)
!2597 = !{!2598}
!2598 = !DISubrange(count: 55)
!2599 = !DIGlobalVariable(name: "kwargs", scope: !2053, file: !352, line: 4113, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @repeat_new.kwargs)
!2600 = !DIGlobalVariable(name: "groupby_type", scope: !0, file: !352, line: 188, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @groupby_type)
!2601 = !DIGlobalVariable(name: "groupby_doc", scope: !0, file: !352, line: 184, type: !2602, isLocal: true, isDefinition: true, variable: [123 x i8]* @groupby_doc)
!2602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 984, align: 8, elements: !2603)
!2603 = !{!2604}
!2604 = !DISubrange(count: 123)
!2605 = !DIGlobalVariable(name: "groupby_methods", scope: !0, file: !352, line: 176, type: !2474, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @groupby_methods)
!2606 = !DIGlobalVariable(name: "kwargs", scope: !2194, file: !352, line: 29, type: !2487, isLocal: true, isDefinition: true, variable: [3 x i8*]* @groupby_new.kwargs)
!2607 = !DIGlobalVariable(name: "_grouper_type", scope: !0, file: !352, line: 344, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_grouper_type)
!2608 = !DIGlobalVariable(name: "_grouper_methods", scope: !0, file: !352, line: 337, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @_grouper_methods)
!2609 = !DIGlobalVariable(name: "tee_type", scope: !0, file: !352, line: 768, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @tee_type)
!2610 = !DIGlobalVariable(name: "teeobject_doc", scope: !0, file: !352, line: 758, type: !2611, isLocal: true, isDefinition: true, variable: [37 x i8]* @teeobject_doc)
!2611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 296, align: 8, elements: !2612)
!2612 = !{!2613}
!2613 = !DISubrange(count: 37)
!2614 = !DIGlobalVariable(name: "tee_methods", scope: !0, file: !352, line: 761, type: !2494, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @tee_methods)
!2615 = !DIGlobalVariable(name: "teecopy_doc", scope: !0, file: !352, line: 673, type: !2616, isLocal: true, isDefinition: true, variable: [33 x i8]* @teecopy_doc)
!2616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 264, align: 8, elements: !2617)
!2617 = !{!2618}
!2618 = !DISubrange(count: 33)
!2619 = !DIGlobalVariable(name: "teedataobject_type", scope: !0, file: !352, line: 584, type: !552, isLocal: true, isDefinition: true, variable: %struct._typeobject* @teedataobject_type)
!2620 = !DIGlobalVariable(name: "teedataobject_doc", scope: !0, file: !352, line: 582, type: !2621, isLocal: true, isDefinition: true, variable: [47 x i8]* @teedataobject_doc)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 376, align: 8, elements: !2622)
!2622 = !{!2623}
!2623 = !DISubrange(count: 47)
!2624 = !DIGlobalVariable(name: "teedataobject_methods", scope: !0, file: !352, line: 576, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @teedataobject_methods)
!2625 = !DIGlobalVariable(name: "itertoolsmodule", scope: !0, file: !352, line: 4555, type: !2626, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @itertoolsmodule)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !2627, line: 47, size: 832, align: 64, elements: !2628)
!2627 = !DIFile(filename: "Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2628 = !{!2629, !2638, !2639, !2640, !2641, !2643, !2644, !2645, !2646}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !2626, file: !2627, line: 48, baseType: !2630, size: 320, align: 64)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !2627, line: 38, baseType: !2631)
!2631 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !2627, line: 33, size: 320, align: 64, elements: !2632)
!2632 = !{!2633, !2634, !2636, !2637}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2631, file: !2627, line: 34, baseType: !5, size: 128, align: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !2631, file: !2627, line: 35, baseType: !2635, size: 64, align: 64, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64, align: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !2631, file: !2627, line: 36, baseType: !10, size: 64, align: 64, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !2631, file: !2627, line: 37, baseType: !4, size: 64, align: 64, offset: 256)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !2626, file: !2627, line: 49, baseType: !28, size: 64, align: 64, offset: 320)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !2626, file: !2627, line: 50, baseType: !28, size: 64, align: 64, offset: 384)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2626, file: !2627, line: 51, baseType: !10, size: 64, align: 64, offset: 448)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !2626, file: !2627, line: 52, baseType: !2642, size: 64, align: 64, offset: 512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64, align: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !2626, file: !2627, line: 53, baseType: !142, size: 64, align: 64, offset: 576)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !2626, file: !2627, line: 54, baseType: !259, size: 64, align: 64, offset: 640)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !2626, file: !2627, line: 55, baseType: !142, size: 64, align: 64, offset: 704)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !2626, file: !2627, line: 56, baseType: !336, size: 64, align: 64, offset: 768)
!2647 = !DIGlobalVariable(name: "module_doc", scope: !0, file: !352, line: 4518, type: !2648, isLocal: true, isDefinition: true, variable: [1229 x i8]* @module_doc)
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 9832, align: 8, elements: !2649)
!2649 = !{!2650}
!2650 = !DISubrange(count: 1229)
!2651 = !DIGlobalVariable(name: "module_methods", scope: !0, file: !352, line: 4549, type: !2539, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @module_methods)
!2652 = !DIGlobalVariable(name: "PyId___copy__", scope: !2438, file: !352, line: 816, type: !2653, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @tee.PyId___copy__)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !6, line: 144, baseType: !2654)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !6, line: 140, size: 192, align: 64, elements: !2655)
!2655 = !{!2656, !2658, !2659}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2654, file: !6, line: 141, baseType: !2657, size: 64, align: 64)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64, align: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2654, file: !6, line: 142, baseType: !28, size: 64, align: 64, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2654, file: !6, line: 143, baseType: !4, size: 64, align: 64, offset: 128)
!2660 = !DIGlobalVariable(name: "tee_doc", scope: !0, file: !352, line: 856, type: !2661, isLocal: true, isDefinition: true, variable: [57 x i8]* @tee_doc)
!2661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 456, align: 8, elements: !522)
!2662 = !{i32 2, !"Dwarf Version", i32 4}
!2663 = !{i32 2, !"Debug Info Version", i32 3}
!2664 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!2665 = !DILocation(line: 4570, column: 5, scope: !542)
!2666 = !DIExpression()
!2667 = !DILocation(line: 4570, column: 9, scope: !542)
!2668 = !DILocation(line: 4571, column: 5, scope: !542)
!2669 = !DILocation(line: 4571, column: 15, scope: !542)
!2670 = !DILocation(line: 4572, column: 5, scope: !542)
!2671 = !DILocation(line: 4572, column: 11, scope: !542)
!2672 = !DILocation(line: 4573, column: 5, scope: !542)
!2673 = !DILocation(line: 4573, column: 19, scope: !542)
!2674 = !DILocation(line: 4597, column: 51, scope: !542)
!2675 = !{!2676, !2680, i64 8}
!2676 = !{!"_object", !2677, i64 0, !2680, i64 8}
!2677 = !{!"long", !2678, i64 0}
!2678 = !{!"omnipotent char", !2679, i64 0}
!2679 = !{!"Simple C/C++ TBAA"}
!2680 = !{!"any pointer", !2678, i64 0}
!2681 = !DILocation(line: 4598, column: 9, scope: !542)
!2682 = !DILocation(line: 4598, column: 7, scope: !542)
!2683 = !{!2680, !2680, i64 0}
!2684 = !DILocation(line: 4599, column: 9, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !542, file: !352, line: 4599, column: 9)
!2686 = !DILocation(line: 4599, column: 11, scope: !2685)
!2687 = !DILocation(line: 4599, column: 9, scope: !542)
!2688 = !DILocation(line: 4600, column: 9, scope: !2685)
!2689 = !DILocation(line: 4602, column: 11, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !542, file: !352, line: 4602, column: 5)
!2691 = !{!2692, !2692, i64 0}
!2692 = !{!"int", !2678, i64 0}
!2693 = !DILocation(line: 4602, column: 10, scope: !2690)
!2694 = !DILocation(line: 4602, column: 25, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2696, file: !352, discriminator: 2)
!2696 = !DILexicalBlockFile(scope: !2697, file: !352, discriminator: 1)
!2697 = distinct !DILexicalBlock(scope: !2690, file: !352, line: 4602, column: 5)
!2698 = !DILocation(line: 4602, column: 16, scope: !2697)
!2699 = !DILocation(line: 4602, column: 28, scope: !2697)
!2700 = !DILocation(line: 4602, column: 5, scope: !2690)
!2701 = !DILocation(line: 4603, column: 35, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2703, file: !352, line: 4603, column: 13)
!2703 = distinct !DILexicalBlock(scope: !2697, file: !352, line: 4602, column: 49)
!2704 = !DILocation(line: 4603, column: 26, scope: !2702)
!2705 = !DILocation(line: 4603, column: 13, scope: !2702)
!2706 = !DILocation(line: 4603, column: 39, scope: !2702)
!2707 = !DILocation(line: 4603, column: 13, scope: !2703)
!2708 = !DILocation(line: 4604, column: 13, scope: !2702)
!2709 = !DILocation(line: 4605, column: 204, scope: !2703)
!2710 = !DILocation(line: 4605, column: 195, scope: !2703)
!2711 = !DILocation(line: 4605, column: 208, scope: !2703)
!2712 = !{!2713, !2680, i64 24}
!2713 = !{!"_typeobject", !2714, i64 0, !2680, i64 24, !2677, i64 32, !2677, i64 40, !2680, i64 48, !2680, i64 56, !2680, i64 64, !2680, i64 72, !2680, i64 80, !2680, i64 88, !2680, i64 96, !2680, i64 104, !2680, i64 112, !2680, i64 120, !2680, i64 128, !2680, i64 136, !2680, i64 144, !2680, i64 152, !2680, i64 160, !2677, i64 168, !2680, i64 176, !2680, i64 184, !2680, i64 192, !2680, i64 200, !2677, i64 208, !2680, i64 216, !2680, i64 224, !2680, i64 232, !2680, i64 240, !2680, i64 248, !2680, i64 256, !2680, i64 264, !2680, i64 272, !2680, i64 280, !2677, i64 288, !2680, i64 296, !2680, i64 304, !2680, i64 312, !2680, i64 320, !2680, i64 328, !2680, i64 336, !2680, i64 344, !2680, i64 352, !2680, i64 360, !2680, i64 368, !2680, i64 376, !2692, i64 384, !2680, i64 392}
!2714 = !{!"", !2676, i64 0, !2677, i64 16}
!2715 = !DILocation(line: 4605, column: 177, scope: !2703)
!2716 = !DILocation(line: 4605, column: 14, scope: !2703)
!2717 = !DILocation(line: 4607, column: 34, scope: !2703)
!2718 = !DILocation(line: 4607, column: 25, scope: !2703)
!2719 = !DILocation(line: 4607, column: 12, scope: !2703)
!2720 = !DILocation(line: 4607, column: 40, scope: !2703)
!2721 = !DILocation(line: 4607, column: 49, scope: !2703)
!2722 = !{!2676, !2677, i64 0}
!2723 = !DILocation(line: 4608, column: 28, scope: !2703)
!2724 = !DILocation(line: 4608, column: 31, scope: !2703)
!2725 = !DILocation(line: 4608, column: 35, scope: !2703)
!2726 = !DILocation(line: 4608, column: 60, scope: !2703)
!2727 = !DILocation(line: 4608, column: 51, scope: !2703)
!2728 = !DILocation(line: 4608, column: 39, scope: !2703)
!2729 = !DILocation(line: 4608, column: 9, scope: !2703)
!2730 = !DILocation(line: 4609, column: 5, scope: !2703)
!2731 = !DILocation(line: 4602, column: 45, scope: !2697)
!2732 = !DILocation(line: 4602, column: 5, scope: !2697)
!2733 = !DILocation(line: 4611, column: 12, scope: !542)
!2734 = !DILocation(line: 4611, column: 5, scope: !542)
!2735 = !DILocation(line: 4612, column: 1, scope: !542)
!2736 = !DILocation(line: 3407, column: 38, scope: !555)
!2737 = !DILocation(line: 3409, column: 25, scope: !555)
!2738 = !DILocation(line: 3409, column: 5, scope: !555)
!2739 = !DILocation(line: 3410, column: 5, scope: !555)
!2740 = !DILocation(line: 3410, column: 10, scope: !2741)
!2741 = !DILexicalBlockFile(scope: !561, file: !352, discriminator: 1)
!2742 = !DILocation(line: 3410, column: 20, scope: !561)
!2743 = !DILocation(line: 3410, column: 51, scope: !561)
!2744 = !DILocation(line: 3410, column: 55, scope: !561)
!2745 = !{!2746, !2680, i64 32}
!2746 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2680, i64 32}
!2747 = !DILocation(line: 3410, column: 67, scope: !564)
!2748 = !DILocation(line: 3410, column: 83, scope: !564)
!2749 = !DILocation(line: 3410, column: 67, scope: !561)
!2750 = !DILocation(line: 3410, column: 98, scope: !2751)
!2751 = !DILexicalBlockFile(scope: !564, file: !352, discriminator: 2)
!2752 = !DILocation(line: 3410, column: 103, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !563, file: !352, discriminator: 4)
!2754 = !DILocation(line: 3410, column: 113, scope: !563)
!2755 = !DILocation(line: 3410, column: 143, scope: !563)
!2756 = !DILocation(line: 3410, column: 169, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !563, file: !352, line: 3410, column: 166)
!2758 = !DILocation(line: 3410, column: 186, scope: !2757)
!2759 = !DILocation(line: 3410, column: 166, scope: !2757)
!2760 = !DILocation(line: 3410, column: 196, scope: !2757)
!2761 = !DILocation(line: 3410, column: 166, scope: !563)
!2762 = !DILocation(line: 3410, column: 166, scope: !2763)
!2763 = !DILexicalBlockFile(scope: !563, file: !352, discriminator: 5)
!2764 = !DILocation(line: 3410, column: 227, scope: !2765)
!2765 = !DILexicalBlockFile(scope: !2757, file: !352, discriminator: 6)
!2766 = !DILocation(line: 3410, column: 245, scope: !2757)
!2767 = !DILocation(line: 3410, column: 255, scope: !2757)
!2768 = !{!2713, !2680, i64 48}
!2769 = !DILocation(line: 3410, column: 280, scope: !2757)
!2770 = !DILocation(line: 3410, column: 211, scope: !2757)
!2771 = !DILocation(line: 3410, column: 299, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !564, file: !352, discriminator: 7)
!2773 = !DILocation(line: 3410, column: 299, scope: !563)
!2774 = !DILocation(line: 3410, column: 299, scope: !2775)
!2775 = !DILexicalBlockFile(scope: !563, file: !352, discriminator: 8)
!2776 = !DILocation(line: 3410, column: 299, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !563, file: !352, discriminator: 9)
!2778 = !DILocation(line: 3410, column: 312, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2780, file: !352, discriminator: 10)
!2780 = !DILexicalBlockFile(scope: !555, file: !352, discriminator: 3)
!2781 = !DILocation(line: 3410, column: 312, scope: !561)
!2782 = !DILocation(line: 3411, column: 5, scope: !555)
!2783 = !DILocation(line: 3411, column: 10, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !566, file: !352, discriminator: 1)
!2785 = !DILocation(line: 3411, column: 20, scope: !566)
!2786 = !DILocation(line: 3411, column: 51, scope: !566)
!2787 = !DILocation(line: 3411, column: 55, scope: !566)
!2788 = !{!2746, !2680, i64 16}
!2789 = !DILocation(line: 3411, column: 67, scope: !569)
!2790 = !DILocation(line: 3411, column: 83, scope: !569)
!2791 = !DILocation(line: 3411, column: 67, scope: !566)
!2792 = !DILocation(line: 3411, column: 98, scope: !2793)
!2793 = !DILexicalBlockFile(scope: !569, file: !352, discriminator: 2)
!2794 = !DILocation(line: 3411, column: 103, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !568, file: !352, discriminator: 4)
!2796 = !DILocation(line: 3411, column: 113, scope: !568)
!2797 = !DILocation(line: 3411, column: 143, scope: !568)
!2798 = !DILocation(line: 3411, column: 169, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !568, file: !352, line: 3411, column: 166)
!2800 = !DILocation(line: 3411, column: 186, scope: !2799)
!2801 = !DILocation(line: 3411, column: 166, scope: !2799)
!2802 = !DILocation(line: 3411, column: 196, scope: !2799)
!2803 = !DILocation(line: 3411, column: 166, scope: !568)
!2804 = !DILocation(line: 3411, column: 166, scope: !2805)
!2805 = !DILexicalBlockFile(scope: !568, file: !352, discriminator: 5)
!2806 = !DILocation(line: 3411, column: 227, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !2799, file: !352, discriminator: 6)
!2808 = !DILocation(line: 3411, column: 245, scope: !2799)
!2809 = !DILocation(line: 3411, column: 255, scope: !2799)
!2810 = !DILocation(line: 3411, column: 280, scope: !2799)
!2811 = !DILocation(line: 3411, column: 211, scope: !2799)
!2812 = !DILocation(line: 3411, column: 299, scope: !2813)
!2813 = !DILexicalBlockFile(scope: !569, file: !352, discriminator: 7)
!2814 = !DILocation(line: 3411, column: 299, scope: !568)
!2815 = !DILocation(line: 3411, column: 299, scope: !2816)
!2816 = !DILexicalBlockFile(scope: !568, file: !352, discriminator: 8)
!2817 = !DILocation(line: 3411, column: 299, scope: !2818)
!2818 = !DILexicalBlockFile(scope: !568, file: !352, discriminator: 9)
!2819 = !DILocation(line: 3411, column: 312, scope: !2779)
!2820 = !DILocation(line: 3411, column: 312, scope: !566)
!2821 = !DILocation(line: 3412, column: 5, scope: !555)
!2822 = !DILocation(line: 3412, column: 10, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !571, file: !352, discriminator: 1)
!2824 = !DILocation(line: 3412, column: 20, scope: !571)
!2825 = !DILocation(line: 3412, column: 51, scope: !571)
!2826 = !DILocation(line: 3412, column: 55, scope: !571)
!2827 = !{!2746, !2680, i64 24}
!2828 = !DILocation(line: 3412, column: 64, scope: !574)
!2829 = !DILocation(line: 3412, column: 80, scope: !574)
!2830 = !DILocation(line: 3412, column: 64, scope: !571)
!2831 = !DILocation(line: 3412, column: 95, scope: !2832)
!2832 = !DILexicalBlockFile(scope: !574, file: !352, discriminator: 2)
!2833 = !DILocation(line: 3412, column: 100, scope: !2834)
!2834 = !DILexicalBlockFile(scope: !573, file: !352, discriminator: 4)
!2835 = !DILocation(line: 3412, column: 110, scope: !573)
!2836 = !DILocation(line: 3412, column: 140, scope: !573)
!2837 = !DILocation(line: 3412, column: 166, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !573, file: !352, line: 3412, column: 163)
!2839 = !DILocation(line: 3412, column: 183, scope: !2838)
!2840 = !DILocation(line: 3412, column: 163, scope: !2838)
!2841 = !DILocation(line: 3412, column: 193, scope: !2838)
!2842 = !DILocation(line: 3412, column: 163, scope: !573)
!2843 = !DILocation(line: 3412, column: 163, scope: !2844)
!2844 = !DILexicalBlockFile(scope: !573, file: !352, discriminator: 5)
!2845 = !DILocation(line: 3412, column: 224, scope: !2846)
!2846 = !DILexicalBlockFile(scope: !2838, file: !352, discriminator: 6)
!2847 = !DILocation(line: 3412, column: 242, scope: !2838)
!2848 = !DILocation(line: 3412, column: 252, scope: !2838)
!2849 = !DILocation(line: 3412, column: 277, scope: !2838)
!2850 = !DILocation(line: 3412, column: 208, scope: !2838)
!2851 = !DILocation(line: 3412, column: 296, scope: !2852)
!2852 = !DILexicalBlockFile(scope: !574, file: !352, discriminator: 7)
!2853 = !DILocation(line: 3412, column: 296, scope: !573)
!2854 = !DILocation(line: 3412, column: 296, scope: !2855)
!2855 = !DILexicalBlockFile(scope: !573, file: !352, discriminator: 8)
!2856 = !DILocation(line: 3412, column: 296, scope: !2857)
!2857 = !DILexicalBlockFile(scope: !573, file: !352, discriminator: 9)
!2858 = !DILocation(line: 3412, column: 309, scope: !2779)
!2859 = !DILocation(line: 3412, column: 309, scope: !571)
!2860 = !DILocation(line: 3413, column: 19, scope: !555)
!2861 = !DILocation(line: 3413, column: 7, scope: !555)
!2862 = !DILocation(line: 3413, column: 25, scope: !555)
!2863 = !DILocation(line: 3413, column: 35, scope: !555)
!2864 = !{!2713, !2680, i64 320}
!2865 = !DILocation(line: 3413, column: 43, scope: !555)
!2866 = !DILocation(line: 3413, column: 5, scope: !555)
!2867 = !DILocation(line: 3414, column: 1, scope: !555)
!2868 = !DILocation(line: 3417, column: 39, scope: !575)
!2869 = !DILocation(line: 3417, column: 53, scope: !575)
!2870 = !DILocation(line: 3417, column: 66, scope: !575)
!2871 = !DILocation(line: 3419, column: 5, scope: !575)
!2872 = !DILocation(line: 3419, column: 14, scope: !2873)
!2873 = !DILexicalBlockFile(scope: !584, file: !352, discriminator: 1)
!2874 = !DILocation(line: 3419, column: 18, scope: !584)
!2875 = !DILocation(line: 3419, column: 14, scope: !584)
!2876 = !DILocation(line: 3419, column: 14, scope: !585)
!2877 = !DILocation(line: 3419, column: 27, scope: !2878)
!2878 = !DILexicalBlockFile(scope: !583, file: !352, discriminator: 2)
!2879 = !DILocation(line: 3419, column: 31, scope: !583)
!2880 = !DILocation(line: 3419, column: 38, scope: !583)
!2881 = !DILocation(line: 3419, column: 57, scope: !583)
!2882 = !DILocation(line: 3419, column: 61, scope: !583)
!2883 = !DILocation(line: 3419, column: 69, scope: !583)
!2884 = !DILocation(line: 3419, column: 79, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !583, file: !352, line: 3419, column: 79)
!2886 = !DILocation(line: 3419, column: 79, scope: !583)
!2887 = !DILocation(line: 3419, column: 92, scope: !2888)
!2888 = !DILexicalBlockFile(scope: !2885, file: !352, discriminator: 4)
!2889 = !DILocation(line: 3419, column: 85, scope: !2885)
!2890 = !DILocation(line: 3419, column: 98, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !584, file: !352, discriminator: 5)
!2892 = !DILocation(line: 3419, column: 98, scope: !2893)
!2893 = !DILexicalBlockFile(scope: !2894, file: !352, discriminator: 7)
!2894 = !DILexicalBlockFile(scope: !584, file: !352, discriminator: 6)
!2895 = !DILocation(line: 3419, column: 98, scope: !583)
!2896 = !DILocation(line: 3419, column: 100, scope: !2897)
!2897 = !DILexicalBlockFile(scope: !2898, file: !352, discriminator: 8)
!2898 = !DILexicalBlockFile(scope: !585, file: !352, discriminator: 3)
!2899 = !DILocation(line: 3420, column: 5, scope: !575)
!2900 = !DILocation(line: 3420, column: 14, scope: !2901)
!2901 = !DILexicalBlockFile(scope: !588, file: !352, discriminator: 1)
!2902 = !DILocation(line: 3420, column: 18, scope: !588)
!2903 = !DILocation(line: 3420, column: 14, scope: !588)
!2904 = !DILocation(line: 3420, column: 14, scope: !589)
!2905 = !DILocation(line: 3420, column: 24, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !587, file: !352, discriminator: 2)
!2907 = !DILocation(line: 3420, column: 28, scope: !587)
!2908 = !DILocation(line: 3420, column: 35, scope: !587)
!2909 = !DILocation(line: 3420, column: 54, scope: !587)
!2910 = !DILocation(line: 3420, column: 58, scope: !587)
!2911 = !DILocation(line: 3420, column: 63, scope: !587)
!2912 = !DILocation(line: 3420, column: 73, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !587, file: !352, line: 3420, column: 73)
!2914 = !DILocation(line: 3420, column: 73, scope: !587)
!2915 = !DILocation(line: 3420, column: 86, scope: !2916)
!2916 = !DILexicalBlockFile(scope: !2913, file: !352, discriminator: 4)
!2917 = !DILocation(line: 3420, column: 79, scope: !2913)
!2918 = !DILocation(line: 3420, column: 92, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !588, file: !352, discriminator: 5)
!2920 = !DILocation(line: 3420, column: 92, scope: !2921)
!2921 = !DILexicalBlockFile(scope: !2922, file: !352, discriminator: 7)
!2922 = !DILexicalBlockFile(scope: !588, file: !352, discriminator: 6)
!2923 = !DILocation(line: 3420, column: 92, scope: !587)
!2924 = !DILocation(line: 3420, column: 94, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !2926, file: !352, discriminator: 8)
!2926 = !DILexicalBlockFile(scope: !589, file: !352, discriminator: 3)
!2927 = !DILocation(line: 3421, column: 5, scope: !575)
!2928 = !DILocation(line: 3421, column: 14, scope: !2929)
!2929 = !DILexicalBlockFile(scope: !592, file: !352, discriminator: 1)
!2930 = !DILocation(line: 3421, column: 18, scope: !592)
!2931 = !DILocation(line: 3421, column: 14, scope: !592)
!2932 = !DILocation(line: 3421, column: 14, scope: !593)
!2933 = !DILocation(line: 3421, column: 27, scope: !2934)
!2934 = !DILexicalBlockFile(scope: !591, file: !352, discriminator: 2)
!2935 = !DILocation(line: 3421, column: 31, scope: !591)
!2936 = !DILocation(line: 3421, column: 38, scope: !591)
!2937 = !DILocation(line: 3421, column: 57, scope: !591)
!2938 = !DILocation(line: 3421, column: 61, scope: !591)
!2939 = !DILocation(line: 3421, column: 69, scope: !591)
!2940 = !DILocation(line: 3421, column: 79, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !591, file: !352, line: 3421, column: 79)
!2942 = !DILocation(line: 3421, column: 79, scope: !591)
!2943 = !DILocation(line: 3421, column: 92, scope: !2944)
!2944 = !DILexicalBlockFile(scope: !2941, file: !352, discriminator: 4)
!2945 = !DILocation(line: 3421, column: 85, scope: !2941)
!2946 = !DILocation(line: 3421, column: 98, scope: !2947)
!2947 = !DILexicalBlockFile(scope: !592, file: !352, discriminator: 5)
!2948 = !DILocation(line: 3421, column: 98, scope: !2949)
!2949 = !DILexicalBlockFile(scope: !2950, file: !352, discriminator: 7)
!2950 = !DILexicalBlockFile(scope: !592, file: !352, discriminator: 6)
!2951 = !DILocation(line: 3421, column: 98, scope: !591)
!2952 = !DILocation(line: 3421, column: 100, scope: !2953)
!2953 = !DILexicalBlockFile(scope: !2954, file: !352, discriminator: 8)
!2954 = !DILexicalBlockFile(scope: !593, file: !352, discriminator: 3)
!2955 = !DILocation(line: 3422, column: 5, scope: !575)
!2956 = !DILocation(line: 3423, column: 1, scope: !575)
!2957 = !DILocation(line: 3426, column: 35, scope: !594)
!2958 = !DILocation(line: 3428, column: 5, scope: !594)
!2959 = !DILocation(line: 3428, column: 15, scope: !594)
!2960 = !DILocation(line: 3428, column: 21, scope: !594)
!2961 = !DILocation(line: 3428, column: 32, scope: !594)
!2962 = !DILocation(line: 3430, column: 23, scope: !594)
!2963 = !DILocation(line: 3430, column: 27, scope: !594)
!2964 = !DILocation(line: 3430, column: 11, scope: !594)
!2965 = !DILocation(line: 3430, column: 9, scope: !594)
!2966 = !DILocation(line: 3431, column: 9, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !594, file: !352, line: 3431, column: 9)
!2968 = !DILocation(line: 3431, column: 13, scope: !2967)
!2969 = !DILocation(line: 3431, column: 9, scope: !594)
!2970 = !DILocation(line: 3432, column: 9, scope: !2967)
!2971 = !DILocation(line: 3434, column: 9, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !594, file: !352, line: 3434, column: 9)
!2973 = !DILocation(line: 3434, column: 13, scope: !2972)
!2974 = !DILocation(line: 3434, column: 19, scope: !2972)
!2975 = !DILocation(line: 3434, column: 9, scope: !594)
!2976 = !DILocation(line: 3435, column: 25, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2972, file: !352, line: 3434, column: 34)
!2978 = !DILocation(line: 3435, column: 32, scope: !2977)
!2979 = !DILocation(line: 3435, column: 41, scope: !2977)
!2980 = !DILocation(line: 3436, column: 21, scope: !2977)
!2981 = !DILocation(line: 3436, column: 9, scope: !2977)
!2982 = !DILocation(line: 3436, column: 13, scope: !2977)
!2983 = !DILocation(line: 3436, column: 19, scope: !2977)
!2984 = !DILocation(line: 3437, column: 16, scope: !2977)
!2985 = !DILocation(line: 3437, column: 20, scope: !2977)
!2986 = !DILocation(line: 3437, column: 9, scope: !2977)
!2987 = !DILocation(line: 3440, column: 9, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !594, file: !352, line: 3440, column: 9)
!2989 = !DILocation(line: 3440, column: 13, scope: !2988)
!2990 = !DILocation(line: 3440, column: 19, scope: !2988)
!2991 = !DILocation(line: 3440, column: 9, scope: !594)
!2992 = !DILocation(line: 3441, column: 33, scope: !2988)
!2993 = !DILocation(line: 3441, column: 37, scope: !2988)
!2994 = !DILocation(line: 3441, column: 44, scope: !2988)
!2995 = !DILocation(line: 3441, column: 20, scope: !2988)
!2996 = !DILocation(line: 3441, column: 18, scope: !2988)
!2997 = !DILocation(line: 3441, column: 9, scope: !2988)
!2998 = !DILocation(line: 3443, column: 49, scope: !2988)
!2999 = !DILocation(line: 3443, column: 53, scope: !2988)
!3000 = !DILocation(line: 3443, column: 60, scope: !2988)
!3001 = !DILocation(line: 3443, column: 64, scope: !2988)
!3002 = !DILocation(line: 3443, column: 71, scope: !2988)
!3003 = !DILocation(line: 3443, column: 20, scope: !2988)
!3004 = !DILocation(line: 3443, column: 18, scope: !2988)
!3005 = !DILocation(line: 3444, column: 5, scope: !594)
!3006 = !DILocation(line: 3444, column: 10, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !603, file: !352, discriminator: 1)
!3008 = !DILocation(line: 3444, column: 20, scope: !603)
!3009 = !DILocation(line: 3444, column: 50, scope: !603)
!3010 = !DILocation(line: 3444, column: 64, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !603, file: !352, line: 3444, column: 61)
!3012 = !DILocation(line: 3444, column: 81, scope: !3011)
!3013 = !DILocation(line: 3444, column: 61, scope: !3011)
!3014 = !DILocation(line: 3444, column: 91, scope: !3011)
!3015 = !DILocation(line: 3444, column: 61, scope: !603)
!3016 = !DILocation(line: 3444, column: 61, scope: !3017)
!3017 = !DILexicalBlockFile(scope: !603, file: !352, discriminator: 2)
!3018 = !DILocation(line: 3444, column: 122, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3011, file: !352, discriminator: 3)
!3020 = !DILocation(line: 3444, column: 140, scope: !3011)
!3021 = !DILocation(line: 3444, column: 150, scope: !3011)
!3022 = !DILocation(line: 3444, column: 175, scope: !3011)
!3023 = !DILocation(line: 3444, column: 106, scope: !3011)
!3024 = !DILocation(line: 3444, column: 194, scope: !3025)
!3025 = !DILexicalBlockFile(scope: !594, file: !352, discriminator: 4)
!3026 = !DILocation(line: 3444, column: 194, scope: !603)
!3027 = !DILocation(line: 3444, column: 194, scope: !3028)
!3028 = !DILexicalBlockFile(scope: !603, file: !352, discriminator: 5)
!3029 = !DILocation(line: 3445, column: 9, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !594, file: !352, line: 3445, column: 9)
!3031 = !DILocation(line: 3445, column: 18, scope: !3030)
!3032 = !DILocation(line: 3445, column: 9, scope: !594)
!3033 = !DILocation(line: 3446, column: 9, scope: !3030)
!3034 = !DILocation(line: 3448, column: 16, scope: !594)
!3035 = !DILocation(line: 3448, column: 20, scope: !594)
!3036 = !DILocation(line: 3448, column: 14, scope: !594)
!3037 = !DILocation(line: 3449, column: 17, scope: !594)
!3038 = !DILocation(line: 3449, column: 5, scope: !594)
!3039 = !DILocation(line: 3449, column: 9, scope: !594)
!3040 = !DILocation(line: 3449, column: 15, scope: !594)
!3041 = !DILocation(line: 3450, column: 5, scope: !594)
!3042 = !DILocation(line: 3450, column: 10, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !605, file: !352, discriminator: 1)
!3044 = !DILocation(line: 3450, column: 20, scope: !605)
!3045 = !DILocation(line: 3450, column: 50, scope: !605)
!3046 = !DILocation(line: 3450, column: 69, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !605, file: !352, line: 3450, column: 66)
!3048 = !DILocation(line: 3450, column: 86, scope: !3047)
!3049 = !DILocation(line: 3450, column: 66, scope: !3047)
!3050 = !DILocation(line: 3450, column: 96, scope: !3047)
!3051 = !DILocation(line: 3450, column: 66, scope: !605)
!3052 = !DILocation(line: 3450, column: 66, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !605, file: !352, discriminator: 2)
!3054 = !DILocation(line: 3450, column: 127, scope: !3055)
!3055 = !DILexicalBlockFile(scope: !3047, file: !352, discriminator: 3)
!3056 = !DILocation(line: 3450, column: 145, scope: !3047)
!3057 = !DILocation(line: 3450, column: 155, scope: !3047)
!3058 = !DILocation(line: 3450, column: 180, scope: !3047)
!3059 = !DILocation(line: 3450, column: 111, scope: !3047)
!3060 = !DILocation(line: 3450, column: 199, scope: !3025)
!3061 = !DILocation(line: 3450, column: 199, scope: !605)
!3062 = !DILocation(line: 3450, column: 199, scope: !3063)
!3063 = !DILexicalBlockFile(scope: !605, file: !352, discriminator: 5)
!3064 = !DILocation(line: 3452, column: 21, scope: !594)
!3065 = !DILocation(line: 3452, column: 33, scope: !594)
!3066 = !DILocation(line: 3452, column: 42, scope: !594)
!3067 = !DILocation(line: 3453, column: 12, scope: !594)
!3068 = !DILocation(line: 3453, column: 5, scope: !594)
!3069 = !DILocation(line: 3454, column: 1, scope: !594)
!3070 = !DILocation(line: 3373, column: 30, scope: !621)
!3071 = !DILocation(line: 3373, column: 46, scope: !621)
!3072 = !DILocation(line: 3373, column: 62, scope: !621)
!3073 = !DILocation(line: 3376, column: 5, scope: !621)
!3074 = !DILocation(line: 3376, column: 15, scope: !621)
!3075 = !DILocation(line: 3377, column: 5, scope: !621)
!3076 = !DILocation(line: 3377, column: 15, scope: !621)
!3077 = !DILocation(line: 3378, column: 5, scope: !621)
!3078 = !DILocation(line: 3378, column: 15, scope: !621)
!3079 = !DILocation(line: 3379, column: 5, scope: !621)
!3080 = !DILocation(line: 3379, column: 23, scope: !621)
!3081 = !DILocation(line: 3381, column: 38, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !621, file: !352, line: 3381, column: 9)
!3083 = !DILocation(line: 3381, column: 44, scope: !3082)
!3084 = !DILocation(line: 3381, column: 10, scope: !3082)
!3085 = !DILocation(line: 3381, column: 9, scope: !621)
!3086 = !DILocation(line: 3383, column: 9, scope: !3082)
!3087 = !DILocation(line: 3386, column: 27, scope: !621)
!3088 = !DILocation(line: 3386, column: 10, scope: !621)
!3089 = !DILocation(line: 3386, column: 8, scope: !621)
!3090 = !DILocation(line: 3387, column: 9, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !621, file: !352, line: 3387, column: 9)
!3092 = !DILocation(line: 3387, column: 12, scope: !3091)
!3093 = !DILocation(line: 3387, column: 9, scope: !621)
!3094 = !DILocation(line: 3388, column: 9, scope: !3091)
!3095 = !DILocation(line: 3391, column: 30, scope: !621)
!3096 = !DILocation(line: 3391, column: 36, scope: !621)
!3097 = !{!2713, !2680, i64 304}
!3098 = !DILocation(line: 3391, column: 45, scope: !621)
!3099 = !DILocation(line: 3391, column: 10, scope: !621)
!3100 = !DILocation(line: 3391, column: 8, scope: !621)
!3101 = !DILocation(line: 3392, column: 9, scope: !635)
!3102 = !DILocation(line: 3392, column: 12, scope: !635)
!3103 = !DILocation(line: 3392, column: 9, scope: !621)
!3104 = !DILocation(line: 3393, column: 9, scope: !634)
!3105 = !DILocation(line: 3393, column: 14, scope: !3106)
!3106 = !DILexicalBlockFile(scope: !633, file: !352, discriminator: 1)
!3107 = !DILocation(line: 3393, column: 24, scope: !633)
!3108 = !DILocation(line: 3393, column: 54, scope: !633)
!3109 = !DILocation(line: 3393, column: 67, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !633, file: !352, line: 3393, column: 64)
!3111 = !DILocation(line: 3393, column: 84, scope: !3110)
!3112 = !DILocation(line: 3393, column: 64, scope: !3110)
!3113 = !DILocation(line: 3393, column: 94, scope: !3110)
!3114 = !DILocation(line: 3393, column: 64, scope: !633)
!3115 = !DILocation(line: 3393, column: 64, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !633, file: !352, discriminator: 2)
!3117 = !DILocation(line: 3393, column: 125, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3110, file: !352, discriminator: 3)
!3119 = !DILocation(line: 3393, column: 143, scope: !3110)
!3120 = !DILocation(line: 3393, column: 153, scope: !3110)
!3121 = !DILocation(line: 3393, column: 178, scope: !3110)
!3122 = !DILocation(line: 3393, column: 109, scope: !3110)
!3123 = !DILocation(line: 3393, column: 197, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !634, file: !352, discriminator: 4)
!3125 = !DILocation(line: 3393, column: 197, scope: !633)
!3126 = !DILocation(line: 3393, column: 197, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !633, file: !352, discriminator: 5)
!3128 = !DILocation(line: 3394, column: 9, scope: !634)
!3129 = !DILocation(line: 3397, column: 9, scope: !639)
!3130 = !DILocation(line: 3397, column: 15, scope: !639)
!3131 = !DILocation(line: 3397, column: 9, scope: !621)
!3132 = !DILocation(line: 3398, column: 9, scope: !638)
!3133 = !DILocation(line: 3398, column: 14, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !637, file: !352, discriminator: 1)
!3135 = !DILocation(line: 3398, column: 24, scope: !637)
!3136 = !DILocation(line: 3398, column: 55, scope: !637)
!3137 = !DILocation(line: 3398, column: 67, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !637, file: !352, line: 3398, column: 67)
!3139 = !DILocation(line: 3398, column: 83, scope: !3138)
!3140 = !DILocation(line: 3398, column: 67, scope: !637)
!3141 = !DILocation(line: 3398, column: 114, scope: !3142)
!3142 = !DILexicalBlockFile(scope: !3138, file: !352, discriminator: 2)
!3143 = !DILocation(line: 3398, column: 133, scope: !3138)
!3144 = !DILocation(line: 3398, column: 142, scope: !3138)
!3145 = !DILocation(line: 3398, column: 98, scope: !3138)
!3146 = !DILocation(line: 3398, column: 147, scope: !3147)
!3147 = !DILexicalBlockFile(scope: !3148, file: !352, discriminator: 4)
!3148 = !DILexicalBlockFile(scope: !638, file: !352, discriminator: 3)
!3149 = !DILocation(line: 3398, column: 147, scope: !637)
!3150 = !DILocation(line: 3398, column: 147, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !637, file: !352, discriminator: 5)
!3152 = !DILocation(line: 3399, column: 21, scope: !638)
!3153 = !DILocation(line: 3399, column: 9, scope: !638)
!3154 = !DILocation(line: 3399, column: 13, scope: !638)
!3155 = !DILocation(line: 3399, column: 19, scope: !638)
!3156 = !DILocation(line: 3400, column: 5, scope: !638)
!3157 = !DILocation(line: 3401, column: 5, scope: !621)
!3158 = !DILocation(line: 3401, column: 9, scope: !621)
!3159 = !DILocation(line: 3401, column: 15, scope: !621)
!3160 = !DILocation(line: 3402, column: 14, scope: !621)
!3161 = !DILocation(line: 3402, column: 5, scope: !621)
!3162 = !DILocation(line: 3402, column: 9, scope: !621)
!3163 = !DILocation(line: 3402, column: 12, scope: !621)
!3164 = !DILocation(line: 3403, column: 24, scope: !621)
!3165 = !DILocation(line: 3403, column: 12, scope: !621)
!3166 = !DILocation(line: 3403, column: 5, scope: !621)
!3167 = !DILocation(line: 3404, column: 1, scope: !621)
!3168 = !DILocation(line: 3457, column: 37, scope: !606)
!3169 = !DILocation(line: 3459, column: 50, scope: !606)
!3170 = !DILocation(line: 3459, column: 38, scope: !606)
!3171 = !DILocation(line: 3459, column: 56, scope: !606)
!3172 = !DILocation(line: 3460, column: 29, scope: !606)
!3173 = !DILocation(line: 3460, column: 33, scope: !606)
!3174 = !DILocation(line: 3460, column: 37, scope: !606)
!3175 = !DILocation(line: 3460, column: 41, scope: !606)
!3176 = !DILocation(line: 3460, column: 47, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !606, file: !352, discriminator: 1)
!3178 = !DILocation(line: 3460, column: 51, scope: !606)
!3179 = !DILocation(line: 3460, column: 37, scope: !3180)
!3180 = !DILexicalBlockFile(scope: !606, file: !352, discriminator: 2)
!3181 = !DILocation(line: 3461, column: 29, scope: !606)
!3182 = !DILocation(line: 3461, column: 33, scope: !606)
!3183 = !DILocation(line: 3461, column: 39, scope: !3177)
!3184 = !DILocation(line: 3461, column: 43, scope: !606)
!3185 = !DILocation(line: 3461, column: 29, scope: !3180)
!3186 = !DILocation(line: 3459, column: 12, scope: !606)
!3187 = !DILocation(line: 3459, column: 5, scope: !606)
!3188 = !DILocation(line: 3465, column: 39, scope: !609)
!3189 = !DILocation(line: 3465, column: 53, scope: !609)
!3190 = !DILocation(line: 3467, column: 5, scope: !609)
!3191 = !DILocation(line: 3467, column: 10, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !616, file: !352, discriminator: 1)
!3193 = !DILocation(line: 3467, column: 20, scope: !616)
!3194 = !DILocation(line: 3467, column: 43, scope: !616)
!3195 = !DILocation(line: 3467, column: 47, scope: !616)
!3196 = !DILocation(line: 3467, column: 59, scope: !620)
!3197 = !DILocation(line: 3467, column: 67, scope: !620)
!3198 = !DILocation(line: 3467, column: 59, scope: !616)
!3199 = !DILocation(line: 3467, column: 85, scope: !3200)
!3200 = !DILexicalBlockFile(scope: !619, file: !352, discriminator: 2)
!3201 = !DILocation(line: 3467, column: 89, scope: !619)
!3202 = !DILocation(line: 3467, column: 96, scope: !619)
!3203 = !DILocation(line: 3467, column: 110, scope: !619)
!3204 = !DILocation(line: 3467, column: 115, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !618, file: !352, discriminator: 4)
!3206 = !DILocation(line: 3467, column: 125, scope: !618)
!3207 = !DILocation(line: 3467, column: 155, scope: !618)
!3208 = !DILocation(line: 3467, column: 173, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !618, file: !352, line: 3467, column: 170)
!3210 = !DILocation(line: 3467, column: 190, scope: !3209)
!3211 = !DILocation(line: 3467, column: 170, scope: !3209)
!3212 = !DILocation(line: 3467, column: 200, scope: !3209)
!3213 = !DILocation(line: 3467, column: 170, scope: !618)
!3214 = !DILocation(line: 3467, column: 170, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !618, file: !352, discriminator: 5)
!3216 = !DILocation(line: 3467, column: 231, scope: !3217)
!3217 = !DILexicalBlockFile(scope: !3209, file: !352, discriminator: 6)
!3218 = !DILocation(line: 3467, column: 249, scope: !3209)
!3219 = !DILocation(line: 3467, column: 259, scope: !3209)
!3220 = !DILocation(line: 3467, column: 284, scope: !3209)
!3221 = !DILocation(line: 3467, column: 215, scope: !3209)
!3222 = !DILocation(line: 3467, column: 303, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !619, file: !352, discriminator: 7)
!3224 = !DILocation(line: 3467, column: 303, scope: !618)
!3225 = !DILocation(line: 3467, column: 303, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !618, file: !352, discriminator: 8)
!3227 = !DILocation(line: 3467, column: 316, scope: !3228)
!3228 = !DILexicalBlockFile(scope: !619, file: !352, discriminator: 9)
!3229 = !DILocation(line: 3467, column: 318, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3231, file: !352, discriminator: 10)
!3231 = !DILexicalBlockFile(scope: !609, file: !352, discriminator: 3)
!3232 = !DILocation(line: 3467, column: 318, scope: !616)
!3233 = !DILocation(line: 3468, column: 17, scope: !609)
!3234 = !DILocation(line: 3468, column: 5, scope: !609)
!3235 = !DILocation(line: 3468, column: 9, scope: !609)
!3236 = !DILocation(line: 3468, column: 15, scope: !609)
!3237 = !DILocation(line: 3469, column: 21, scope: !609)
!3238 = !DILocation(line: 3469, column: 25, scope: !609)
!3239 = !DILocation(line: 3469, column: 34, scope: !609)
!3240 = !DILocation(line: 3469, column: 43, scope: !609)
!3241 = !DILocation(line: 3470, column: 58, scope: !609)
!3242 = !DILocation(line: 3470, column: 5, scope: !609)
!3243 = !DILocation(line: 2392, column: 42, scope: !640)
!3244 = !DILocation(line: 2394, column: 25, scope: !640)
!3245 = !DILocation(line: 2394, column: 5, scope: !640)
!3246 = !DILocation(line: 2395, column: 5, scope: !640)
!3247 = !DILocation(line: 2395, column: 10, scope: !3248)
!3248 = !DILexicalBlockFile(scope: !646, file: !352, discriminator: 1)
!3249 = !DILocation(line: 2395, column: 20, scope: !646)
!3250 = !DILocation(line: 2395, column: 51, scope: !646)
!3251 = !DILocation(line: 2395, column: 55, scope: !646)
!3252 = !{!3253, !2680, i64 16}
!3253 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2680, i64 32, !2677, i64 40, !2692, i64 48}
!3254 = !DILocation(line: 2395, column: 66, scope: !649)
!3255 = !DILocation(line: 2395, column: 82, scope: !649)
!3256 = !DILocation(line: 2395, column: 66, scope: !646)
!3257 = !DILocation(line: 2395, column: 97, scope: !3258)
!3258 = !DILexicalBlockFile(scope: !649, file: !352, discriminator: 2)
!3259 = !DILocation(line: 2395, column: 102, scope: !3260)
!3260 = !DILexicalBlockFile(scope: !648, file: !352, discriminator: 4)
!3261 = !DILocation(line: 2395, column: 112, scope: !648)
!3262 = !DILocation(line: 2395, column: 142, scope: !648)
!3263 = !DILocation(line: 2395, column: 168, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !648, file: !352, line: 2395, column: 165)
!3265 = !DILocation(line: 2395, column: 185, scope: !3264)
!3266 = !DILocation(line: 2395, column: 165, scope: !3264)
!3267 = !DILocation(line: 2395, column: 195, scope: !3264)
!3268 = !DILocation(line: 2395, column: 165, scope: !648)
!3269 = !DILocation(line: 2395, column: 165, scope: !3270)
!3270 = !DILexicalBlockFile(scope: !648, file: !352, discriminator: 5)
!3271 = !DILocation(line: 2395, column: 226, scope: !3272)
!3272 = !DILexicalBlockFile(scope: !3264, file: !352, discriminator: 6)
!3273 = !DILocation(line: 2395, column: 244, scope: !3264)
!3274 = !DILocation(line: 2395, column: 254, scope: !3264)
!3275 = !DILocation(line: 2395, column: 279, scope: !3264)
!3276 = !DILocation(line: 2395, column: 210, scope: !3264)
!3277 = !DILocation(line: 2395, column: 298, scope: !3278)
!3278 = !DILexicalBlockFile(scope: !649, file: !352, discriminator: 7)
!3279 = !DILocation(line: 2395, column: 298, scope: !648)
!3280 = !DILocation(line: 2395, column: 298, scope: !3281)
!3281 = !DILexicalBlockFile(scope: !648, file: !352, discriminator: 8)
!3282 = !DILocation(line: 2395, column: 298, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !648, file: !352, discriminator: 9)
!3284 = !DILocation(line: 2395, column: 311, scope: !3285)
!3285 = !DILexicalBlockFile(scope: !3286, file: !352, discriminator: 10)
!3286 = !DILexicalBlockFile(scope: !640, file: !352, discriminator: 3)
!3287 = !DILocation(line: 2395, column: 311, scope: !646)
!3288 = !DILocation(line: 2396, column: 5, scope: !640)
!3289 = !DILocation(line: 2396, column: 10, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !651, file: !352, discriminator: 1)
!3291 = !DILocation(line: 2396, column: 20, scope: !651)
!3292 = !DILocation(line: 2396, column: 51, scope: !651)
!3293 = !DILocation(line: 2396, column: 55, scope: !651)
!3294 = !{!3253, !2680, i64 32}
!3295 = !DILocation(line: 2396, column: 68, scope: !654)
!3296 = !DILocation(line: 2396, column: 84, scope: !654)
!3297 = !DILocation(line: 2396, column: 68, scope: !651)
!3298 = !DILocation(line: 2396, column: 99, scope: !3299)
!3299 = !DILexicalBlockFile(scope: !654, file: !352, discriminator: 2)
!3300 = !DILocation(line: 2396, column: 104, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !653, file: !352, discriminator: 4)
!3302 = !DILocation(line: 2396, column: 114, scope: !653)
!3303 = !DILocation(line: 2396, column: 144, scope: !653)
!3304 = !DILocation(line: 2396, column: 170, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !653, file: !352, line: 2396, column: 167)
!3306 = !DILocation(line: 2396, column: 187, scope: !3305)
!3307 = !DILocation(line: 2396, column: 167, scope: !3305)
!3308 = !DILocation(line: 2396, column: 197, scope: !3305)
!3309 = !DILocation(line: 2396, column: 167, scope: !653)
!3310 = !DILocation(line: 2396, column: 167, scope: !3311)
!3311 = !DILexicalBlockFile(scope: !653, file: !352, discriminator: 5)
!3312 = !DILocation(line: 2396, column: 228, scope: !3313)
!3313 = !DILexicalBlockFile(scope: !3305, file: !352, discriminator: 6)
!3314 = !DILocation(line: 2396, column: 246, scope: !3305)
!3315 = !DILocation(line: 2396, column: 256, scope: !3305)
!3316 = !DILocation(line: 2396, column: 281, scope: !3305)
!3317 = !DILocation(line: 2396, column: 212, scope: !3305)
!3318 = !DILocation(line: 2396, column: 300, scope: !3319)
!3319 = !DILexicalBlockFile(scope: !654, file: !352, discriminator: 7)
!3320 = !DILocation(line: 2396, column: 300, scope: !653)
!3321 = !DILocation(line: 2396, column: 300, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !653, file: !352, discriminator: 8)
!3323 = !DILocation(line: 2396, column: 300, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !653, file: !352, discriminator: 9)
!3325 = !DILocation(line: 2396, column: 313, scope: !3285)
!3326 = !DILocation(line: 2396, column: 313, scope: !651)
!3327 = !DILocation(line: 2397, column: 9, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !640, file: !352, line: 2397, column: 9)
!3329 = !DILocation(line: 2397, column: 13, scope: !3328)
!3330 = !{!3253, !2680, i64 24}
!3331 = !DILocation(line: 2397, column: 21, scope: !3328)
!3332 = !DILocation(line: 2397, column: 9, scope: !640)
!3333 = !DILocation(line: 2398, column: 20, scope: !3328)
!3334 = !DILocation(line: 2398, column: 24, scope: !3328)
!3335 = !DILocation(line: 2398, column: 9, scope: !3328)
!3336 = !DILocation(line: 2399, column: 19, scope: !640)
!3337 = !DILocation(line: 2399, column: 7, scope: !640)
!3338 = !DILocation(line: 2399, column: 25, scope: !640)
!3339 = !DILocation(line: 2399, column: 35, scope: !640)
!3340 = !DILocation(line: 2399, column: 43, scope: !640)
!3341 = !DILocation(line: 2399, column: 5, scope: !640)
!3342 = !DILocation(line: 2400, column: 1, scope: !640)
!3343 = !DILocation(line: 2413, column: 43, scope: !655)
!3344 = !DILocation(line: 2413, column: 57, scope: !655)
!3345 = !DILocation(line: 2413, column: 70, scope: !655)
!3346 = !DILocation(line: 2415, column: 5, scope: !655)
!3347 = !DILocation(line: 2415, column: 14, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !664, file: !352, discriminator: 1)
!3349 = !DILocation(line: 2415, column: 18, scope: !664)
!3350 = !DILocation(line: 2415, column: 14, scope: !664)
!3351 = !DILocation(line: 2415, column: 14, scope: !665)
!3352 = !DILocation(line: 2415, column: 26, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !663, file: !352, discriminator: 2)
!3354 = !DILocation(line: 2415, column: 30, scope: !663)
!3355 = !DILocation(line: 2415, column: 37, scope: !663)
!3356 = !DILocation(line: 2415, column: 56, scope: !663)
!3357 = !DILocation(line: 2415, column: 60, scope: !663)
!3358 = !DILocation(line: 2415, column: 67, scope: !663)
!3359 = !DILocation(line: 2415, column: 77, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !663, file: !352, line: 2415, column: 77)
!3361 = !DILocation(line: 2415, column: 77, scope: !663)
!3362 = !DILocation(line: 2415, column: 90, scope: !3363)
!3363 = !DILexicalBlockFile(scope: !3360, file: !352, discriminator: 4)
!3364 = !DILocation(line: 2415, column: 83, scope: !3360)
!3365 = !DILocation(line: 2415, column: 96, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !664, file: !352, discriminator: 5)
!3367 = !DILocation(line: 2415, column: 96, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3369, file: !352, discriminator: 7)
!3369 = !DILexicalBlockFile(scope: !664, file: !352, discriminator: 6)
!3370 = !DILocation(line: 2415, column: 96, scope: !663)
!3371 = !DILocation(line: 2415, column: 98, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3373, file: !352, discriminator: 8)
!3373 = !DILexicalBlockFile(scope: !665, file: !352, discriminator: 3)
!3374 = !DILocation(line: 2416, column: 5, scope: !655)
!3375 = !DILocation(line: 2416, column: 14, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !668, file: !352, discriminator: 1)
!3377 = !DILocation(line: 2416, column: 18, scope: !668)
!3378 = !DILocation(line: 2416, column: 14, scope: !668)
!3379 = !DILocation(line: 2416, column: 14, scope: !669)
!3380 = !DILocation(line: 2416, column: 28, scope: !3381)
!3381 = !DILexicalBlockFile(scope: !667, file: !352, discriminator: 2)
!3382 = !DILocation(line: 2416, column: 32, scope: !667)
!3383 = !DILocation(line: 2416, column: 39, scope: !667)
!3384 = !DILocation(line: 2416, column: 58, scope: !667)
!3385 = !DILocation(line: 2416, column: 62, scope: !667)
!3386 = !DILocation(line: 2416, column: 71, scope: !667)
!3387 = !DILocation(line: 2416, column: 81, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !667, file: !352, line: 2416, column: 81)
!3389 = !DILocation(line: 2416, column: 81, scope: !667)
!3390 = !DILocation(line: 2416, column: 94, scope: !3391)
!3391 = !DILexicalBlockFile(scope: !3388, file: !352, discriminator: 4)
!3392 = !DILocation(line: 2416, column: 87, scope: !3388)
!3393 = !DILocation(line: 2416, column: 100, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !668, file: !352, discriminator: 5)
!3395 = !DILocation(line: 2416, column: 100, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3397, file: !352, discriminator: 7)
!3397 = !DILexicalBlockFile(scope: !668, file: !352, discriminator: 6)
!3398 = !DILocation(line: 2416, column: 100, scope: !667)
!3399 = !DILocation(line: 2416, column: 102, scope: !3400)
!3400 = !DILexicalBlockFile(scope: !3401, file: !352, discriminator: 8)
!3401 = !DILexicalBlockFile(scope: !669, file: !352, discriminator: 3)
!3402 = !DILocation(line: 2417, column: 5, scope: !655)
!3403 = !DILocation(line: 2418, column: 1, scope: !655)
!3404 = !DILocation(line: 2421, column: 39, scope: !670)
!3405 = !DILocation(line: 2423, column: 5, scope: !670)
!3406 = !DILocation(line: 2423, column: 15, scope: !670)
!3407 = !DILocation(line: 2424, column: 5, scope: !670)
!3408 = !DILocation(line: 2424, column: 15, scope: !670)
!3409 = !DILocation(line: 2425, column: 5, scope: !670)
!3410 = !DILocation(line: 2425, column: 15, scope: !670)
!3411 = !DILocation(line: 2425, column: 22, scope: !670)
!3412 = !DILocation(line: 2425, column: 26, scope: !670)
!3413 = !DILocation(line: 2426, column: 5, scope: !670)
!3414 = !DILocation(line: 2426, column: 17, scope: !670)
!3415 = !DILocation(line: 2426, column: 27, scope: !670)
!3416 = !DILocation(line: 2426, column: 31, scope: !670)
!3417 = !DILocation(line: 2427, column: 5, scope: !670)
!3418 = !DILocation(line: 2427, column: 15, scope: !670)
!3419 = !DILocation(line: 2427, column: 24, scope: !670)
!3420 = !DILocation(line: 2427, column: 28, scope: !670)
!3421 = !DILocation(line: 2428, column: 5, scope: !670)
!3422 = !DILocation(line: 2428, column: 16, scope: !670)
!3423 = !DILocation(line: 2428, column: 37, scope: !670)
!3424 = !DILocation(line: 2428, column: 22, scope: !670)
!3425 = !DILocation(line: 2428, column: 45, scope: !670)
!3426 = !{!2714, !2677, i64 16}
!3427 = !{!2677, !2677, i64 0}
!3428 = !DILocation(line: 2429, column: 5, scope: !670)
!3429 = !DILocation(line: 2429, column: 16, scope: !670)
!3430 = !DILocation(line: 2429, column: 20, scope: !670)
!3431 = !DILocation(line: 2429, column: 24, scope: !670)
!3432 = !{!3253, !2677, i64 40}
!3433 = !DILocation(line: 2430, column: 5, scope: !670)
!3434 = !DILocation(line: 2430, column: 16, scope: !670)
!3435 = !DILocation(line: 2430, column: 19, scope: !670)
!3436 = !DILocation(line: 2430, column: 22, scope: !670)
!3437 = !DILocation(line: 2432, column: 9, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !670, file: !352, line: 2432, column: 9)
!3439 = !DILocation(line: 2432, column: 13, scope: !3438)
!3440 = !{!3253, !2692, i64 48}
!3441 = !DILocation(line: 2432, column: 9, scope: !670)
!3442 = !DILocation(line: 2433, column: 9, scope: !3438)
!3443 = !DILocation(line: 2435, column: 9, scope: !689)
!3444 = !DILocation(line: 2435, column: 16, scope: !689)
!3445 = !DILocation(line: 2435, column: 9, scope: !670)
!3446 = !DILocation(line: 2437, column: 30, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !689, file: !352, line: 2435, column: 31)
!3448 = !DILocation(line: 2437, column: 18, scope: !3447)
!3449 = !DILocation(line: 2437, column: 16, scope: !3447)
!3450 = !DILocation(line: 2438, column: 13, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3447, file: !352, line: 2438, column: 13)
!3452 = !DILocation(line: 2438, column: 20, scope: !3451)
!3453 = !DILocation(line: 2438, column: 13, scope: !3447)
!3454 = !DILocation(line: 2439, column: 13, scope: !3451)
!3455 = !DILocation(line: 2440, column: 22, scope: !3447)
!3456 = !DILocation(line: 2440, column: 9, scope: !3447)
!3457 = !DILocation(line: 2440, column: 13, scope: !3447)
!3458 = !DILocation(line: 2440, column: 20, scope: !3447)
!3459 = !DILocation(line: 2441, column: 15, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3447, file: !352, line: 2441, column: 9)
!3461 = !DILocation(line: 2441, column: 14, scope: !3460)
!3462 = !DILocation(line: 2441, column: 19, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3464, file: !352, discriminator: 2)
!3464 = !DILexicalBlockFile(scope: !3465, file: !352, discriminator: 1)
!3465 = distinct !DILexicalBlock(scope: !3460, file: !352, line: 2441, column: 9)
!3466 = !DILocation(line: 2441, column: 21, scope: !3465)
!3467 = !DILocation(line: 2441, column: 20, scope: !3465)
!3468 = !DILocation(line: 2441, column: 9, scope: !3460)
!3469 = !DILocation(line: 2442, column: 29, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3465, file: !352, line: 2441, column: 30)
!3471 = !DILocation(line: 2442, column: 21, scope: !3470)
!3472 = !DILocation(line: 2442, column: 19, scope: !3470)
!3473 = !DILocation(line: 2443, column: 56, scope: !3470)
!3474 = !DILocation(line: 2443, column: 40, scope: !3470)
!3475 = !DILocation(line: 2443, column: 22, scope: !3470)
!3476 = !DILocation(line: 2443, column: 48, scope: !3470)
!3477 = !DILocation(line: 2443, column: 21, scope: !3470)
!3478 = !DILocation(line: 2443, column: 18, scope: !3470)
!3479 = !DILocation(line: 2444, column: 29, scope: !3470)
!3480 = !DILocation(line: 2444, column: 37, scope: !3470)
!3481 = !DILocation(line: 2444, column: 46, scope: !3470)
!3482 = !DILocation(line: 2445, column: 56, scope: !3470)
!3483 = !DILocation(line: 2445, column: 51, scope: !3470)
!3484 = !DILocation(line: 2445, column: 33, scope: !3470)
!3485 = !DILocation(line: 2445, column: 15, scope: !3470)
!3486 = !DILocation(line: 2445, column: 43, scope: !3470)
!3487 = !DILocation(line: 2445, column: 14, scope: !3470)
!3488 = !DILocation(line: 2445, column: 54, scope: !3470)
!3489 = !DILocation(line: 2446, column: 9, scope: !3470)
!3490 = !DILocation(line: 2441, column: 26, scope: !3465)
!3491 = !DILocation(line: 2441, column: 9, scope: !3465)
!3492 = !DILocation(line: 2447, column: 5, scope: !3447)
!3493 = !DILocation(line: 2449, column: 27, scope: !687)
!3494 = !DILocation(line: 2449, column: 37, scope: !687)
!3495 = !DILocation(line: 2449, column: 48, scope: !687)
!3496 = !DILocation(line: 2449, column: 13, scope: !688)
!3497 = !DILocation(line: 2450, column: 13, scope: !686)
!3498 = !DILocation(line: 2450, column: 23, scope: !686)
!3499 = !DILocation(line: 2450, column: 36, scope: !686)
!3500 = !DILocation(line: 2451, column: 34, scope: !686)
!3501 = !DILocation(line: 2451, column: 22, scope: !686)
!3502 = !DILocation(line: 2451, column: 20, scope: !686)
!3503 = !DILocation(line: 2452, column: 17, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !686, file: !352, line: 2452, column: 17)
!3505 = !DILocation(line: 2452, column: 24, scope: !3504)
!3506 = !DILocation(line: 2452, column: 17, scope: !686)
!3507 = !DILocation(line: 2453, column: 17, scope: !3504)
!3508 = !DILocation(line: 2454, column: 26, scope: !686)
!3509 = !DILocation(line: 2454, column: 13, scope: !686)
!3510 = !DILocation(line: 2454, column: 17, scope: !686)
!3511 = !DILocation(line: 2454, column: 24, scope: !686)
!3512 = !DILocation(line: 2455, column: 19, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !686, file: !352, line: 2455, column: 13)
!3514 = !DILocation(line: 2455, column: 18, scope: !3513)
!3515 = !DILocation(line: 2455, column: 23, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !3517, file: !352, discriminator: 2)
!3517 = !DILexicalBlockFile(scope: !3518, file: !352, discriminator: 1)
!3518 = distinct !DILexicalBlock(scope: !3513, file: !352, line: 2455, column: 13)
!3519 = !DILocation(line: 2455, column: 25, scope: !3518)
!3520 = !DILocation(line: 2455, column: 24, scope: !3518)
!3521 = !DILocation(line: 2455, column: 13, scope: !3513)
!3522 = !DILocation(line: 2456, column: 66, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3518, file: !352, line: 2455, column: 34)
!3524 = !DILocation(line: 2456, column: 44, scope: !3523)
!3525 = !DILocation(line: 2456, column: 26, scope: !3523)
!3526 = !DILocation(line: 2456, column: 58, scope: !3523)
!3527 = !DILocation(line: 2456, column: 25, scope: !3523)
!3528 = !DILocation(line: 2456, column: 22, scope: !3523)
!3529 = !DILocation(line: 2457, column: 33, scope: !3523)
!3530 = !DILocation(line: 2457, column: 41, scope: !3523)
!3531 = !DILocation(line: 2457, column: 50, scope: !3523)
!3532 = !DILocation(line: 2458, column: 60, scope: !3523)
!3533 = !DILocation(line: 2458, column: 55, scope: !3523)
!3534 = !DILocation(line: 2458, column: 37, scope: !3523)
!3535 = !DILocation(line: 2458, column: 19, scope: !3523)
!3536 = !DILocation(line: 2458, column: 47, scope: !3523)
!3537 = !DILocation(line: 2458, column: 18, scope: !3523)
!3538 = !DILocation(line: 2458, column: 58, scope: !3523)
!3539 = !DILocation(line: 2459, column: 13, scope: !3523)
!3540 = !DILocation(line: 2455, column: 30, scope: !3518)
!3541 = !DILocation(line: 2455, column: 13, scope: !3518)
!3542 = !DILocation(line: 2460, column: 13, scope: !686)
!3543 = !DILocation(line: 2460, column: 18, scope: !3544)
!3544 = !DILexicalBlockFile(scope: !691, file: !352, discriminator: 1)
!3545 = !DILocation(line: 2460, column: 28, scope: !691)
!3546 = !DILocation(line: 2460, column: 58, scope: !691)
!3547 = !DILocation(line: 2460, column: 79, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !691, file: !352, line: 2460, column: 76)
!3549 = !DILocation(line: 2460, column: 96, scope: !3548)
!3550 = !DILocation(line: 2460, column: 76, scope: !3548)
!3551 = !DILocation(line: 2460, column: 106, scope: !3548)
!3552 = !DILocation(line: 2460, column: 76, scope: !691)
!3553 = !DILocation(line: 2460, column: 76, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !691, file: !352, discriminator: 2)
!3555 = !DILocation(line: 2460, column: 137, scope: !3556)
!3556 = !DILexicalBlockFile(scope: !3548, file: !352, discriminator: 3)
!3557 = !DILocation(line: 2460, column: 155, scope: !3548)
!3558 = !DILocation(line: 2460, column: 165, scope: !3548)
!3559 = !DILocation(line: 2460, column: 190, scope: !3548)
!3560 = !DILocation(line: 2460, column: 121, scope: !3548)
!3561 = !DILocation(line: 2460, column: 209, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !686, file: !352, discriminator: 4)
!3563 = !DILocation(line: 2460, column: 209, scope: !691)
!3564 = !DILocation(line: 2460, column: 209, scope: !3565)
!3565 = !DILexicalBlockFile(scope: !691, file: !352, discriminator: 5)
!3566 = !DILocation(line: 2461, column: 9, scope: !687)
!3567 = !DILocation(line: 2461, column: 9, scope: !3568)
!3568 = !DILexicalBlockFile(scope: !687, file: !352, discriminator: 1)
!3569 = !DILocation(line: 2461, column: 9, scope: !686)
!3570 = !DILocation(line: 2470, column: 16, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !688, file: !352, line: 2470, column: 9)
!3572 = !DILocation(line: 2470, column: 17, scope: !3571)
!3573 = !DILocation(line: 2470, column: 15, scope: !3571)
!3574 = !DILocation(line: 2470, column: 14, scope: !3571)
!3575 = !DILocation(line: 2470, column: 22, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3577, file: !352, discriminator: 6)
!3577 = !DILexicalBlockFile(scope: !3578, file: !352, discriminator: 1)
!3578 = distinct !DILexicalBlock(scope: !3571, file: !352, line: 2470, column: 9)
!3579 = !DILocation(line: 2470, column: 24, scope: !3578)
!3580 = !DILocation(line: 2470, column: 29, scope: !3578)
!3581 = !DILocation(line: 2470, column: 40, scope: !3582)
!3582 = !DILexicalBlockFile(scope: !3578, file: !352, discriminator: 2)
!3583 = !DILocation(line: 2470, column: 32, scope: !3578)
!3584 = !DILocation(line: 2470, column: 46, scope: !3578)
!3585 = !DILocation(line: 2470, column: 48, scope: !3578)
!3586 = !DILocation(line: 2470, column: 47, scope: !3578)
!3587 = !DILocation(line: 2470, column: 50, scope: !3578)
!3588 = !DILocation(line: 2470, column: 49, scope: !3578)
!3589 = !DILocation(line: 2470, column: 43, scope: !3578)
!3590 = !DILocation(line: 2470, column: 9, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3571, file: !352, discriminator: 3)
!3592 = !DILocation(line: 2470, column: 9, scope: !3593)
!3593 = !DILexicalBlockFile(scope: !3571, file: !352, discriminator: 4)
!3594 = !DILocation(line: 2470, column: 55, scope: !3595)
!3595 = !DILexicalBlockFile(scope: !3578, file: !352, discriminator: 5)
!3596 = !DILocation(line: 2470, column: 9, scope: !3578)
!3597 = !DILocation(line: 2475, column: 13, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !688, file: !352, line: 2475, column: 13)
!3599 = !DILocation(line: 2475, column: 15, scope: !3598)
!3600 = !DILocation(line: 2475, column: 13, scope: !688)
!3601 = !DILocation(line: 2476, column: 13, scope: !3598)
!3602 = !DILocation(line: 2482, column: 17, scope: !688)
!3603 = !DILocation(line: 2482, column: 9, scope: !688)
!3604 = !DILocation(line: 2482, column: 19, scope: !688)
!3605 = !DILocation(line: 2483, column: 16, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !688, file: !352, line: 2483, column: 9)
!3607 = !DILocation(line: 2483, column: 17, scope: !3606)
!3608 = !DILocation(line: 2483, column: 15, scope: !3606)
!3609 = !DILocation(line: 2483, column: 14, scope: !3606)
!3610 = !DILocation(line: 2483, column: 22, scope: !3611)
!3611 = !DILexicalBlockFile(scope: !3612, file: !352, discriminator: 2)
!3612 = !DILexicalBlockFile(scope: !3613, file: !352, discriminator: 1)
!3613 = distinct !DILexicalBlock(scope: !3606, file: !352, line: 2483, column: 9)
!3614 = !DILocation(line: 2483, column: 24, scope: !3613)
!3615 = !DILocation(line: 2483, column: 23, scope: !3613)
!3616 = !DILocation(line: 2483, column: 9, scope: !3606)
!3617 = !DILocation(line: 2484, column: 34, scope: !3613)
!3618 = !DILocation(line: 2484, column: 35, scope: !3613)
!3619 = !DILocation(line: 2484, column: 26, scope: !3613)
!3620 = !DILocation(line: 2484, column: 39, scope: !3613)
!3621 = !DILocation(line: 2484, column: 21, scope: !3613)
!3622 = !DILocation(line: 2484, column: 13, scope: !3613)
!3623 = !DILocation(line: 2484, column: 24, scope: !3613)
!3624 = !DILocation(line: 2483, column: 29, scope: !3613)
!3625 = !DILocation(line: 2483, column: 9, scope: !3613)
!3626 = !DILocation(line: 2488, column: 9, scope: !688)
!3627 = !DILocation(line: 2488, column: 17, scope: !3628)
!3628 = !DILexicalBlockFile(scope: !3629, file: !352, discriminator: 2)
!3629 = !DILexicalBlockFile(scope: !695, file: !352, discriminator: 1)
!3630 = !DILocation(line: 2488, column: 19, scope: !695)
!3631 = !DILocation(line: 2488, column: 18, scope: !695)
!3632 = !DILocation(line: 2488, column: 9, scope: !696)
!3633 = !DILocation(line: 2489, column: 29, scope: !694)
!3634 = !DILocation(line: 2489, column: 21, scope: !694)
!3635 = !DILocation(line: 2489, column: 19, scope: !694)
!3636 = !DILocation(line: 2490, column: 56, scope: !694)
!3637 = !DILocation(line: 2490, column: 40, scope: !694)
!3638 = !DILocation(line: 2490, column: 22, scope: !694)
!3639 = !DILocation(line: 2490, column: 48, scope: !694)
!3640 = !DILocation(line: 2490, column: 21, scope: !694)
!3641 = !DILocation(line: 2490, column: 18, scope: !694)
!3642 = !DILocation(line: 2491, column: 29, scope: !694)
!3643 = !DILocation(line: 2491, column: 37, scope: !694)
!3644 = !DILocation(line: 2491, column: 46, scope: !694)
!3645 = !DILocation(line: 2492, column: 61, scope: !694)
!3646 = !DILocation(line: 2492, column: 43, scope: !694)
!3647 = !DILocation(line: 2492, column: 25, scope: !694)
!3648 = !DILocation(line: 2492, column: 53, scope: !694)
!3649 = !DILocation(line: 2492, column: 24, scope: !694)
!3650 = !DILocation(line: 2492, column: 21, scope: !694)
!3651 = !DILocation(line: 2493, column: 56, scope: !694)
!3652 = !DILocation(line: 2493, column: 51, scope: !694)
!3653 = !DILocation(line: 2493, column: 33, scope: !694)
!3654 = !DILocation(line: 2493, column: 15, scope: !694)
!3655 = !DILocation(line: 2493, column: 43, scope: !694)
!3656 = !DILocation(line: 2493, column: 14, scope: !694)
!3657 = !DILocation(line: 2493, column: 54, scope: !694)
!3658 = !DILocation(line: 2494, column: 13, scope: !694)
!3659 = !DILocation(line: 2494, column: 18, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !693, file: !352, discriminator: 1)
!3661 = !DILocation(line: 2494, column: 28, scope: !693)
!3662 = !DILocation(line: 2494, column: 58, scope: !693)
!3663 = !DILocation(line: 2494, column: 76, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !693, file: !352, line: 2494, column: 73)
!3665 = !DILocation(line: 2494, column: 93, scope: !3664)
!3666 = !DILocation(line: 2494, column: 73, scope: !3664)
!3667 = !DILocation(line: 2494, column: 103, scope: !3664)
!3668 = !DILocation(line: 2494, column: 73, scope: !693)
!3669 = !DILocation(line: 2494, column: 73, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !693, file: !352, discriminator: 2)
!3671 = !DILocation(line: 2494, column: 134, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3664, file: !352, discriminator: 3)
!3673 = !DILocation(line: 2494, column: 152, scope: !3664)
!3674 = !DILocation(line: 2494, column: 162, scope: !3664)
!3675 = !DILocation(line: 2494, column: 187, scope: !3664)
!3676 = !DILocation(line: 2494, column: 118, scope: !3664)
!3677 = !DILocation(line: 2494, column: 206, scope: !3678)
!3678 = !DILexicalBlockFile(scope: !694, file: !352, discriminator: 4)
!3679 = !DILocation(line: 2494, column: 206, scope: !693)
!3680 = !DILocation(line: 2494, column: 206, scope: !3681)
!3681 = !DILexicalBlockFile(scope: !693, file: !352, discriminator: 5)
!3682 = !DILocation(line: 2495, column: 9, scope: !694)
!3683 = !DILocation(line: 2488, column: 24, scope: !695)
!3684 = !DILocation(line: 2488, column: 9, scope: !695)
!3685 = !DILocation(line: 2498, column: 21, scope: !670)
!3686 = !DILocation(line: 2498, column: 31, scope: !670)
!3687 = !DILocation(line: 2498, column: 40, scope: !670)
!3688 = !DILocation(line: 2499, column: 12, scope: !670)
!3689 = !DILocation(line: 2499, column: 5, scope: !670)
!3690 = !DILocation(line: 2502, column: 5, scope: !670)
!3691 = !DILocation(line: 2502, column: 9, scope: !670)
!3692 = !DILocation(line: 2502, column: 17, scope: !670)
!3693 = !DILocation(line: 2503, column: 5, scope: !670)
!3694 = !DILocation(line: 2504, column: 1, scope: !670)
!3695 = !DILocation(line: 2338, column: 32, scope: !745)
!3696 = !DILocation(line: 2338, column: 48, scope: !745)
!3697 = !DILocation(line: 2338, column: 64, scope: !745)
!3698 = !DILocation(line: 2340, column: 5, scope: !745)
!3699 = !DILocation(line: 2340, column: 25, scope: !745)
!3700 = !DILocation(line: 2341, column: 5, scope: !745)
!3701 = !DILocation(line: 2341, column: 16, scope: !745)
!3702 = !DILocation(line: 2342, column: 5, scope: !745)
!3703 = !DILocation(line: 2342, column: 16, scope: !745)
!3704 = !DILocation(line: 2343, column: 5, scope: !745)
!3705 = !DILocation(line: 2343, column: 15, scope: !745)
!3706 = !DILocation(line: 2344, column: 5, scope: !745)
!3707 = !DILocation(line: 2344, column: 15, scope: !745)
!3708 = !DILocation(line: 2345, column: 5, scope: !745)
!3709 = !DILocation(line: 2345, column: 17, scope: !745)
!3710 = !DILocation(line: 2346, column: 5, scope: !745)
!3711 = !DILocation(line: 2346, column: 16, scope: !745)
!3712 = !DILocation(line: 2349, column: 38, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2349, column: 9)
!3714 = !DILocation(line: 2349, column: 44, scope: !3713)
!3715 = !DILocation(line: 2349, column: 10, scope: !3713)
!3716 = !DILocation(line: 2349, column: 9, scope: !745)
!3717 = !DILocation(line: 2351, column: 9, scope: !3713)
!3718 = !DILocation(line: 2353, column: 29, scope: !745)
!3719 = !DILocation(line: 2353, column: 12, scope: !745)
!3720 = !DILocation(line: 2353, column: 10, scope: !745)
!3721 = !DILocation(line: 2354, column: 9, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2354, column: 9)
!3723 = !DILocation(line: 2354, column: 14, scope: !3722)
!3724 = !DILocation(line: 2354, column: 9, scope: !745)
!3725 = !DILocation(line: 2355, column: 9, scope: !3722)
!3726 = !DILocation(line: 2356, column: 26, scope: !745)
!3727 = !DILocation(line: 2356, column: 11, scope: !745)
!3728 = !DILocation(line: 2356, column: 34, scope: !745)
!3729 = !DILocation(line: 2356, column: 7, scope: !745)
!3730 = !DILocation(line: 2357, column: 9, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2357, column: 9)
!3732 = !DILocation(line: 2357, column: 11, scope: !3731)
!3733 = !DILocation(line: 2357, column: 9, scope: !745)
!3734 = !DILocation(line: 2358, column: 25, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3731, file: !352, line: 2357, column: 16)
!3736 = !DILocation(line: 2358, column: 9, scope: !3735)
!3737 = !DILocation(line: 2359, column: 9, scope: !3735)
!3738 = !DILocation(line: 2362, column: 28, scope: !745)
!3739 = !DILocation(line: 2362, column: 30, scope: !745)
!3740 = !DILocation(line: 2362, column: 15, scope: !745)
!3741 = !DILocation(line: 2362, column: 13, scope: !745)
!3742 = !DILocation(line: 2363, column: 9, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2363, column: 9)
!3744 = !DILocation(line: 2363, column: 17, scope: !3743)
!3745 = !DILocation(line: 2363, column: 9, scope: !745)
!3746 = !DILocation(line: 2364, column: 9, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3743, file: !352, line: 2363, column: 32)
!3748 = !DILocation(line: 2365, column: 9, scope: !3747)
!3749 = !DILocation(line: 2368, column: 11, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2368, column: 5)
!3751 = !DILocation(line: 2368, column: 10, scope: !3750)
!3752 = !DILocation(line: 2368, column: 16, scope: !3753)
!3753 = !DILexicalBlockFile(scope: !3754, file: !352, discriminator: 2)
!3754 = !DILexicalBlockFile(scope: !3755, file: !352, discriminator: 1)
!3755 = distinct !DILexicalBlock(scope: !3750, file: !352, line: 2368, column: 5)
!3756 = !DILocation(line: 2368, column: 18, scope: !3755)
!3757 = !DILocation(line: 2368, column: 17, scope: !3755)
!3758 = !DILocation(line: 2368, column: 5, scope: !3750)
!3759 = !DILocation(line: 2369, column: 22, scope: !3755)
!3760 = !DILocation(line: 2369, column: 17, scope: !3755)
!3761 = !DILocation(line: 2369, column: 9, scope: !3755)
!3762 = !DILocation(line: 2369, column: 20, scope: !3755)
!3763 = !DILocation(line: 2368, column: 23, scope: !3755)
!3764 = !DILocation(line: 2368, column: 5, scope: !3755)
!3765 = !DILocation(line: 2372, column: 32, scope: !745)
!3766 = !DILocation(line: 2372, column: 38, scope: !745)
!3767 = !DILocation(line: 2372, column: 47, scope: !745)
!3768 = !DILocation(line: 2372, column: 10, scope: !745)
!3769 = !DILocation(line: 2372, column: 8, scope: !745)
!3770 = !DILocation(line: 2373, column: 9, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2373, column: 9)
!3772 = !DILocation(line: 2373, column: 12, scope: !3771)
!3773 = !DILocation(line: 2373, column: 9, scope: !745)
!3774 = !DILocation(line: 2374, column: 9, scope: !3771)
!3775 = !DILocation(line: 2376, column: 16, scope: !745)
!3776 = !DILocation(line: 2376, column: 5, scope: !745)
!3777 = !DILocation(line: 2376, column: 9, scope: !745)
!3778 = !DILocation(line: 2376, column: 14, scope: !745)
!3779 = !DILocation(line: 2377, column: 19, scope: !745)
!3780 = !DILocation(line: 2377, column: 5, scope: !745)
!3781 = !DILocation(line: 2377, column: 9, scope: !745)
!3782 = !DILocation(line: 2377, column: 17, scope: !745)
!3783 = !DILocation(line: 2378, column: 5, scope: !745)
!3784 = !DILocation(line: 2378, column: 9, scope: !745)
!3785 = !DILocation(line: 2378, column: 16, scope: !745)
!3786 = !DILocation(line: 2379, column: 13, scope: !745)
!3787 = !DILocation(line: 2379, column: 5, scope: !745)
!3788 = !DILocation(line: 2379, column: 9, scope: !745)
!3789 = !DILocation(line: 2379, column: 11, scope: !745)
!3790 = !DILocation(line: 2380, column: 19, scope: !745)
!3791 = !DILocation(line: 2380, column: 23, scope: !745)
!3792 = !DILocation(line: 2380, column: 21, scope: !745)
!3793 = !DILocation(line: 2380, column: 5, scope: !745)
!3794 = !DILocation(line: 2380, column: 9, scope: !745)
!3795 = !DILocation(line: 2380, column: 17, scope: !745)
!3796 = !DILocation(line: 2382, column: 24, scope: !745)
!3797 = !DILocation(line: 2382, column: 12, scope: !745)
!3798 = !DILocation(line: 2382, column: 5, scope: !745)
!3799 = !DILocation(line: 2385, column: 9, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !745, file: !352, line: 2385, column: 9)
!3801 = !DILocation(line: 2385, column: 17, scope: !3800)
!3802 = !DILocation(line: 2385, column: 9, scope: !745)
!3803 = !DILocation(line: 2386, column: 20, scope: !3800)
!3804 = !DILocation(line: 2386, column: 9, scope: !3800)
!3805 = !DILocation(line: 2387, column: 5, scope: !745)
!3806 = !DILocation(line: 2387, column: 10, scope: !3807)
!3807 = !DILexicalBlockFile(scope: !758, file: !352, discriminator: 1)
!3808 = !DILocation(line: 2387, column: 20, scope: !758)
!3809 = !DILocation(line: 2387, column: 51, scope: !758)
!3810 = !DILocation(line: 2387, column: 62, scope: !761)
!3811 = !DILocation(line: 2387, column: 78, scope: !761)
!3812 = !DILocation(line: 2387, column: 62, scope: !758)
!3813 = !DILocation(line: 2387, column: 93, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !761, file: !352, discriminator: 2)
!3815 = !DILocation(line: 2387, column: 98, scope: !3816)
!3816 = !DILexicalBlockFile(scope: !760, file: !352, discriminator: 4)
!3817 = !DILocation(line: 2387, column: 108, scope: !760)
!3818 = !DILocation(line: 2387, column: 138, scope: !760)
!3819 = !DILocation(line: 2387, column: 164, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !760, file: !352, line: 2387, column: 161)
!3821 = !DILocation(line: 2387, column: 181, scope: !3820)
!3822 = !DILocation(line: 2387, column: 161, scope: !3820)
!3823 = !DILocation(line: 2387, column: 191, scope: !3820)
!3824 = !DILocation(line: 2387, column: 161, scope: !760)
!3825 = !DILocation(line: 2387, column: 161, scope: !3826)
!3826 = !DILexicalBlockFile(scope: !760, file: !352, discriminator: 5)
!3827 = !DILocation(line: 2387, column: 222, scope: !3828)
!3828 = !DILexicalBlockFile(scope: !3820, file: !352, discriminator: 6)
!3829 = !DILocation(line: 2387, column: 240, scope: !3820)
!3830 = !DILocation(line: 2387, column: 250, scope: !3820)
!3831 = !DILocation(line: 2387, column: 275, scope: !3820)
!3832 = !DILocation(line: 2387, column: 206, scope: !3820)
!3833 = !DILocation(line: 2387, column: 294, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !761, file: !352, discriminator: 7)
!3835 = !DILocation(line: 2387, column: 294, scope: !760)
!3836 = !DILocation(line: 2387, column: 294, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !760, file: !352, discriminator: 8)
!3838 = !DILocation(line: 2387, column: 294, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !760, file: !352, discriminator: 9)
!3840 = !DILocation(line: 2387, column: 307, scope: !3841)
!3841 = !DILexicalBlockFile(scope: !3842, file: !352, discriminator: 10)
!3842 = !DILexicalBlockFile(scope: !745, file: !352, discriminator: 3)
!3843 = !DILocation(line: 2387, column: 307, scope: !758)
!3844 = !DILocation(line: 2387, column: 307, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !758, file: !352, discriminator: 11)
!3846 = !DILocation(line: 2388, column: 5, scope: !745)
!3847 = !DILocation(line: 2389, column: 1, scope: !745)
!3848 = !DILocation(line: 2507, column: 41, scope: !697)
!3849 = !DILocation(line: 2509, column: 9, scope: !703)
!3850 = !DILocation(line: 2509, column: 13, scope: !703)
!3851 = !DILocation(line: 2509, column: 20, scope: !703)
!3852 = !DILocation(line: 2509, column: 9, scope: !697)
!3853 = !DILocation(line: 2510, column: 53, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !703, file: !352, line: 2509, column: 35)
!3855 = !DILocation(line: 2510, column: 41, scope: !3854)
!3856 = !DILocation(line: 2510, column: 59, scope: !3854)
!3857 = !DILocation(line: 2510, column: 69, scope: !3854)
!3858 = !DILocation(line: 2510, column: 73, scope: !3854)
!3859 = !DILocation(line: 2510, column: 79, scope: !3854)
!3860 = !DILocation(line: 2510, column: 83, scope: !3854)
!3861 = !DILocation(line: 2510, column: 16, scope: !3854)
!3862 = !DILocation(line: 2510, column: 9, scope: !3854)
!3863 = !DILocation(line: 2511, column: 16, scope: !702)
!3864 = !DILocation(line: 2511, column: 20, scope: !702)
!3865 = !DILocation(line: 2511, column: 16, scope: !703)
!3866 = !DILocation(line: 2512, column: 54, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !702, file: !352, line: 2511, column: 29)
!3868 = !DILocation(line: 2512, column: 42, scope: !3867)
!3869 = !DILocation(line: 2512, column: 60, scope: !3867)
!3870 = !DILocation(line: 2512, column: 70, scope: !3867)
!3871 = !DILocation(line: 2512, column: 74, scope: !3867)
!3872 = !DILocation(line: 2512, column: 16, scope: !3867)
!3873 = !DILocation(line: 2512, column: 9, scope: !3867)
!3874 = !DILocation(line: 2514, column: 9, scope: !701)
!3875 = !DILocation(line: 2514, column: 19, scope: !701)
!3876 = !DILocation(line: 2515, column: 9, scope: !701)
!3877 = !DILocation(line: 2515, column: 20, scope: !701)
!3878 = !DILocation(line: 2518, column: 31, scope: !701)
!3879 = !DILocation(line: 2518, column: 35, scope: !701)
!3880 = !DILocation(line: 2518, column: 19, scope: !701)
!3881 = !DILocation(line: 2518, column: 17, scope: !701)
!3882 = !DILocation(line: 2519, column: 14, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !701, file: !352, line: 2519, column: 13)
!3884 = !DILocation(line: 2519, column: 13, scope: !701)
!3885 = !DILocation(line: 2520, column: 13, scope: !3883)
!3886 = !DILocation(line: 2521, column: 15, scope: !708)
!3887 = !DILocation(line: 2521, column: 14, scope: !708)
!3888 = !DILocation(line: 2521, column: 19, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3890, file: !352, discriminator: 2)
!3890 = !DILexicalBlockFile(scope: !707, file: !352, discriminator: 1)
!3891 = !DILocation(line: 2521, column: 21, scope: !707)
!3892 = !DILocation(line: 2521, column: 25, scope: !707)
!3893 = !DILocation(line: 2521, column: 20, scope: !707)
!3894 = !DILocation(line: 2521, column: 9, scope: !708)
!3895 = !DILocation(line: 2523, column: 13, scope: !706)
!3896 = !DILocation(line: 2523, column: 23, scope: !706)
!3897 = !DILocation(line: 2523, column: 62, scope: !706)
!3898 = !DILocation(line: 2523, column: 50, scope: !706)
!3899 = !DILocation(line: 2523, column: 54, scope: !706)
!3900 = !DILocation(line: 2523, column: 31, scope: !706)
!3901 = !DILocation(line: 2524, column: 18, scope: !712)
!3902 = !DILocation(line: 2524, column: 17, scope: !706)
!3903 = !DILocation(line: 2525, column: 17, scope: !711)
!3904 = !DILocation(line: 2525, column: 22, scope: !3905)
!3905 = !DILexicalBlockFile(scope: !710, file: !352, discriminator: 1)
!3906 = !DILocation(line: 2525, column: 32, scope: !710)
!3907 = !DILocation(line: 2525, column: 62, scope: !710)
!3908 = !DILocation(line: 2525, column: 80, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !710, file: !352, line: 2525, column: 77)
!3910 = !DILocation(line: 2525, column: 97, scope: !3909)
!3911 = !DILocation(line: 2525, column: 77, scope: !3909)
!3912 = !DILocation(line: 2525, column: 107, scope: !3909)
!3913 = !DILocation(line: 2525, column: 77, scope: !710)
!3914 = !DILocation(line: 2525, column: 77, scope: !3915)
!3915 = !DILexicalBlockFile(scope: !710, file: !352, discriminator: 2)
!3916 = !DILocation(line: 2525, column: 138, scope: !3917)
!3917 = !DILexicalBlockFile(scope: !3909, file: !352, discriminator: 3)
!3918 = !DILocation(line: 2525, column: 156, scope: !3909)
!3919 = !DILocation(line: 2525, column: 166, scope: !3909)
!3920 = !DILocation(line: 2525, column: 191, scope: !3909)
!3921 = !DILocation(line: 2525, column: 122, scope: !3909)
!3922 = !DILocation(line: 2525, column: 210, scope: !3923)
!3923 = !DILexicalBlockFile(scope: !711, file: !352, discriminator: 4)
!3924 = !DILocation(line: 2525, column: 210, scope: !710)
!3925 = !DILocation(line: 2525, column: 210, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !710, file: !352, discriminator: 5)
!3927 = !DILocation(line: 2526, column: 17, scope: !711)
!3928 = !DILocation(line: 2528, column: 57, scope: !706)
!3929 = !DILocation(line: 2528, column: 52, scope: !706)
!3930 = !DILocation(line: 2528, column: 33, scope: !706)
!3931 = !DILocation(line: 2528, column: 15, scope: !706)
!3932 = !DILocation(line: 2528, column: 44, scope: !706)
!3933 = !DILocation(line: 2528, column: 14, scope: !706)
!3934 = !DILocation(line: 2528, column: 55, scope: !706)
!3935 = !DILocation(line: 2529, column: 9, scope: !707)
!3936 = !DILocation(line: 2529, column: 9, scope: !3890)
!3937 = !DILocation(line: 2529, column: 9, scope: !706)
!3938 = !DILocation(line: 2521, column: 29, scope: !707)
!3939 = !DILocation(line: 2521, column: 9, scope: !707)
!3940 = !DILocation(line: 2531, column: 54, scope: !701)
!3941 = !DILocation(line: 2531, column: 42, scope: !701)
!3942 = !DILocation(line: 2531, column: 60, scope: !701)
!3943 = !DILocation(line: 2531, column: 70, scope: !701)
!3944 = !DILocation(line: 2531, column: 74, scope: !701)
!3945 = !DILocation(line: 2531, column: 80, scope: !701)
!3946 = !DILocation(line: 2531, column: 84, scope: !701)
!3947 = !DILocation(line: 2531, column: 87, scope: !701)
!3948 = !DILocation(line: 2531, column: 16, scope: !701)
!3949 = !DILocation(line: 2531, column: 9, scope: !701)
!3950 = !DILocation(line: 2532, column: 5, scope: !702)
!3951 = !DILocation(line: 2533, column: 1, scope: !697)
!3952 = !DILocation(line: 2536, column: 43, scope: !713)
!3953 = !DILocation(line: 2536, column: 57, scope: !713)
!3954 = !DILocation(line: 2538, column: 5, scope: !713)
!3955 = !DILocation(line: 2538, column: 15, scope: !713)
!3956 = !DILocation(line: 2539, column: 5, scope: !713)
!3957 = !DILocation(line: 2539, column: 16, scope: !713)
!3958 = !DILocation(line: 2540, column: 5, scope: !713)
!3959 = !DILocation(line: 2540, column: 16, scope: !713)
!3960 = !DILocation(line: 2540, column: 37, scope: !713)
!3961 = !DILocation(line: 2540, column: 41, scope: !713)
!3962 = !DILocation(line: 2540, column: 22, scope: !713)
!3963 = !DILocation(line: 2540, column: 49, scope: !713)
!3964 = !DILocation(line: 2542, column: 27, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !713, file: !352, line: 2542, column: 9)
!3966 = !DILocation(line: 2542, column: 36, scope: !3965)
!3967 = !DILocation(line: 2542, column: 47, scope: !3965)
!3968 = !{!2713, !2677, i64 168}
!3969 = !DILocation(line: 2542, column: 56, scope: !3965)
!3970 = !DILocation(line: 2542, column: 73, scope: !3965)
!3971 = !DILocation(line: 2542, column: 79, scope: !3965)
!3972 = !DILocation(line: 2542, column: 99, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3965, file: !352, discriminator: 1)
!3974 = !DILocation(line: 2542, column: 84, scope: !3965)
!3975 = !DILocation(line: 2542, column: 108, scope: !3965)
!3976 = !DILocation(line: 2542, column: 120, scope: !3965)
!3977 = !DILocation(line: 2542, column: 124, scope: !3965)
!3978 = !DILocation(line: 2542, column: 117, scope: !3965)
!3979 = !DILocation(line: 2542, column: 9, scope: !713)
!3980 = !DILocation(line: 2544, column: 25, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3965, file: !352, line: 2543, column: 5)
!3982 = !DILocation(line: 2544, column: 9, scope: !3981)
!3983 = !DILocation(line: 2545, column: 9, scope: !3981)
!3984 = !DILocation(line: 2548, column: 11, scope: !725)
!3985 = !DILocation(line: 2548, column: 10, scope: !725)
!3986 = !DILocation(line: 2548, column: 15, scope: !3987)
!3987 = !DILexicalBlockFile(scope: !3988, file: !352, discriminator: 2)
!3988 = !DILexicalBlockFile(scope: !724, file: !352, discriminator: 1)
!3989 = !DILocation(line: 2548, column: 17, scope: !724)
!3990 = !DILocation(line: 2548, column: 21, scope: !724)
!3991 = !DILocation(line: 2548, column: 16, scope: !724)
!3992 = !DILocation(line: 2548, column: 5, scope: !725)
!3993 = !DILocation(line: 2550, column: 9, scope: !723)
!3994 = !DILocation(line: 2550, column: 20, scope: !723)
!3995 = !DILocation(line: 2551, column: 9, scope: !723)
!3996 = !DILocation(line: 2551, column: 19, scope: !723)
!3997 = !DILocation(line: 2551, column: 70, scope: !723)
!3998 = !DILocation(line: 2551, column: 53, scope: !723)
!3999 = !DILocation(line: 2551, column: 35, scope: !723)
!4000 = !DILocation(line: 2551, column: 62, scope: !723)
!4001 = !DILocation(line: 2551, column: 34, scope: !723)
!4002 = !DILocation(line: 2552, column: 9, scope: !723)
!4003 = !DILocation(line: 2552, column: 20, scope: !723)
!4004 = !DILocation(line: 2552, column: 45, scope: !723)
!4005 = !DILocation(line: 2552, column: 28, scope: !723)
!4006 = !DILocation(line: 2553, column: 13, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !723, file: !352, line: 2553, column: 13)
!4008 = !DILocation(line: 2553, column: 19, scope: !4007)
!4009 = !DILocation(line: 2553, column: 25, scope: !4007)
!4010 = !DILocation(line: 2553, column: 28, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !4007, file: !352, discriminator: 1)
!4012 = !DILocation(line: 2553, column: 13, scope: !723)
!4013 = !DILocation(line: 2554, column: 13, scope: !4007)
!4014 = !DILocation(line: 2555, column: 15, scope: !723)
!4015 = !DILocation(line: 2555, column: 19, scope: !723)
!4016 = !DILocation(line: 2555, column: 17, scope: !723)
!4017 = !DILocation(line: 2555, column: 23, scope: !723)
!4018 = !DILocation(line: 2555, column: 27, scope: !723)
!4019 = !DILocation(line: 2555, column: 21, scope: !723)
!4020 = !DILocation(line: 2555, column: 13, scope: !723)
!4021 = !DILocation(line: 2557, column: 13, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !723, file: !352, line: 2557, column: 13)
!4023 = !DILocation(line: 2557, column: 21, scope: !4022)
!4024 = !DILocation(line: 2557, column: 19, scope: !4022)
!4025 = !DILocation(line: 2557, column: 13, scope: !723)
!4026 = !DILocation(line: 2558, column: 21, scope: !4022)
!4027 = !DILocation(line: 2558, column: 19, scope: !4022)
!4028 = !DILocation(line: 2558, column: 13, scope: !4022)
!4029 = !DILocation(line: 2559, column: 13, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !723, file: !352, line: 2559, column: 13)
!4031 = !DILocation(line: 2559, column: 19, scope: !4030)
!4032 = !DILocation(line: 2559, column: 13, scope: !723)
!4033 = !DILocation(line: 2560, column: 19, scope: !4030)
!4034 = !DILocation(line: 2560, column: 13, scope: !4030)
!4035 = !DILocation(line: 2561, column: 26, scope: !723)
!4036 = !DILocation(line: 2561, column: 21, scope: !723)
!4037 = !DILocation(line: 2561, column: 9, scope: !723)
!4038 = !DILocation(line: 2561, column: 13, scope: !723)
!4039 = !DILocation(line: 2561, column: 24, scope: !723)
!4040 = !DILocation(line: 2562, column: 5, scope: !724)
!4041 = !DILocation(line: 2562, column: 5, scope: !3988)
!4042 = !DILocation(line: 2562, column: 5, scope: !723)
!4043 = !DILocation(line: 2548, column: 25, scope: !724)
!4044 = !DILocation(line: 2548, column: 5, scope: !724)
!4045 = !DILocation(line: 2564, column: 26, scope: !713)
!4046 = !DILocation(line: 2564, column: 30, scope: !713)
!4047 = !DILocation(line: 2564, column: 14, scope: !713)
!4048 = !DILocation(line: 2564, column: 12, scope: !713)
!4049 = !DILocation(line: 2565, column: 9, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !713, file: !352, line: 2565, column: 9)
!4051 = !DILocation(line: 2565, column: 16, scope: !4050)
!4052 = !DILocation(line: 2565, column: 9, scope: !713)
!4053 = !DILocation(line: 2566, column: 9, scope: !4050)
!4054 = !DILocation(line: 2567, column: 11, scope: !731)
!4055 = !DILocation(line: 2567, column: 10, scope: !731)
!4056 = !DILocation(line: 2567, column: 15, scope: !4057)
!4057 = !DILexicalBlockFile(scope: !4058, file: !352, discriminator: 2)
!4058 = !DILexicalBlockFile(scope: !730, file: !352, discriminator: 1)
!4059 = !DILocation(line: 2567, column: 17, scope: !730)
!4060 = !DILocation(line: 2567, column: 21, scope: !730)
!4061 = !DILocation(line: 2567, column: 16, scope: !730)
!4062 = !DILocation(line: 2567, column: 5, scope: !731)
!4063 = !DILocation(line: 2568, column: 9, scope: !729)
!4064 = !DILocation(line: 2568, column: 19, scope: !729)
!4065 = !DILocation(line: 2568, column: 81, scope: !729)
!4066 = !DILocation(line: 2568, column: 69, scope: !729)
!4067 = !DILocation(line: 2568, column: 73, scope: !729)
!4068 = !DILocation(line: 2568, column: 49, scope: !729)
!4069 = !DILocation(line: 2568, column: 53, scope: !729)
!4070 = !DILocation(line: 2568, column: 31, scope: !729)
!4071 = !DILocation(line: 2568, column: 61, scope: !729)
!4072 = !DILocation(line: 2568, column: 30, scope: !729)
!4073 = !DILocation(line: 2569, column: 25, scope: !729)
!4074 = !DILocation(line: 2569, column: 36, scope: !729)
!4075 = !DILocation(line: 2569, column: 45, scope: !729)
!4076 = !DILocation(line: 2570, column: 52, scope: !729)
!4077 = !DILocation(line: 2570, column: 47, scope: !729)
!4078 = !DILocation(line: 2570, column: 29, scope: !729)
!4079 = !DILocation(line: 2570, column: 11, scope: !729)
!4080 = !DILocation(line: 2570, column: 39, scope: !729)
!4081 = !DILocation(line: 2570, column: 10, scope: !729)
!4082 = !DILocation(line: 2570, column: 50, scope: !729)
!4083 = !DILocation(line: 2571, column: 5, scope: !730)
!4084 = !DILocation(line: 2571, column: 5, scope: !729)
!4085 = !DILocation(line: 2567, column: 25, scope: !730)
!4086 = !DILocation(line: 2567, column: 5, scope: !730)
!4087 = !DILocation(line: 2573, column: 5, scope: !713)
!4088 = !DILocation(line: 2573, column: 10, scope: !4089)
!4089 = !DILexicalBlockFile(scope: !733, file: !352, discriminator: 1)
!4090 = !DILocation(line: 2573, column: 20, scope: !733)
!4091 = !DILocation(line: 2573, column: 43, scope: !733)
!4092 = !DILocation(line: 2573, column: 47, scope: !733)
!4093 = !DILocation(line: 2573, column: 60, scope: !737)
!4094 = !DILocation(line: 2573, column: 68, scope: !737)
!4095 = !DILocation(line: 2573, column: 60, scope: !733)
!4096 = !DILocation(line: 2573, column: 86, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !736, file: !352, discriminator: 2)
!4098 = !DILocation(line: 2573, column: 90, scope: !736)
!4099 = !DILocation(line: 2573, column: 98, scope: !736)
!4100 = !DILocation(line: 2573, column: 112, scope: !736)
!4101 = !DILocation(line: 2573, column: 117, scope: !4102)
!4102 = !DILexicalBlockFile(scope: !735, file: !352, discriminator: 4)
!4103 = !DILocation(line: 2573, column: 127, scope: !735)
!4104 = !DILocation(line: 2573, column: 157, scope: !735)
!4105 = !DILocation(line: 2573, column: 175, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !735, file: !352, line: 2573, column: 172)
!4107 = !DILocation(line: 2573, column: 192, scope: !4106)
!4108 = !DILocation(line: 2573, column: 172, scope: !4106)
!4109 = !DILocation(line: 2573, column: 202, scope: !4106)
!4110 = !DILocation(line: 2573, column: 172, scope: !735)
!4111 = !DILocation(line: 2573, column: 172, scope: !4112)
!4112 = !DILexicalBlockFile(scope: !735, file: !352, discriminator: 5)
!4113 = !DILocation(line: 2573, column: 233, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4106, file: !352, discriminator: 6)
!4115 = !DILocation(line: 2573, column: 251, scope: !4106)
!4116 = !DILocation(line: 2573, column: 261, scope: !4106)
!4117 = !DILocation(line: 2573, column: 286, scope: !4106)
!4118 = !DILocation(line: 2573, column: 217, scope: !4106)
!4119 = !DILocation(line: 2573, column: 305, scope: !4120)
!4120 = !DILexicalBlockFile(scope: !736, file: !352, discriminator: 7)
!4121 = !DILocation(line: 2573, column: 305, scope: !735)
!4122 = !DILocation(line: 2573, column: 305, scope: !4123)
!4123 = !DILexicalBlockFile(scope: !735, file: !352, discriminator: 8)
!4124 = !DILocation(line: 2573, column: 318, scope: !4125)
!4125 = !DILexicalBlockFile(scope: !736, file: !352, discriminator: 9)
!4126 = !DILocation(line: 2573, column: 320, scope: !4127)
!4127 = !DILexicalBlockFile(scope: !4128, file: !352, discriminator: 10)
!4128 = !DILexicalBlockFile(scope: !713, file: !352, discriminator: 3)
!4129 = !DILocation(line: 2573, column: 320, scope: !733)
!4130 = !DILocation(line: 2573, column: 320, scope: !4131)
!4131 = !DILexicalBlockFile(scope: !733, file: !352, discriminator: 11)
!4132 = !DILocation(line: 2574, column: 18, scope: !713)
!4133 = !DILocation(line: 2574, column: 5, scope: !713)
!4134 = !DILocation(line: 2574, column: 9, scope: !713)
!4135 = !DILocation(line: 2574, column: 16, scope: !713)
!4136 = !DILocation(line: 2575, column: 58, scope: !713)
!4137 = !DILocation(line: 2575, column: 5, scope: !713)
!4138 = !DILocation(line: 2576, column: 1, scope: !713)
!4139 = !DILocation(line: 2403, column: 41, scope: !738)
!4140 = !DILocation(line: 2403, column: 51, scope: !738)
!4141 = !DILocation(line: 2405, column: 5, scope: !738)
!4142 = !DILocation(line: 2405, column: 16, scope: !738)
!4143 = !DILocation(line: 2407, column: 9, scope: !738)
!4144 = !DILocation(line: 2408, column: 12, scope: !738)
!4145 = !DILocation(line: 2408, column: 16, scope: !738)
!4146 = !DILocation(line: 2408, column: 18, scope: !738)
!4147 = !DILocation(line: 2408, column: 9, scope: !738)
!4148 = !DILocation(line: 2409, column: 31, scope: !738)
!4149 = !DILocation(line: 2409, column: 12, scope: !738)
!4150 = !DILocation(line: 2410, column: 1, scope: !738)
!4151 = !DILocation(line: 2409, column: 5, scope: !738)
!4152 = !DILocation(line: 2733, column: 24, scope: !762)
!4153 = !DILocation(line: 2735, column: 25, scope: !762)
!4154 = !DILocation(line: 2735, column: 5, scope: !762)
!4155 = !DILocation(line: 2736, column: 5, scope: !762)
!4156 = !DILocation(line: 2736, column: 10, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !768, file: !352, discriminator: 1)
!4158 = !DILocation(line: 2736, column: 20, scope: !768)
!4159 = !DILocation(line: 2736, column: 51, scope: !768)
!4160 = !DILocation(line: 2736, column: 55, scope: !768)
!4161 = !DILocation(line: 2736, column: 66, scope: !771)
!4162 = !DILocation(line: 2736, column: 82, scope: !771)
!4163 = !DILocation(line: 2736, column: 66, scope: !768)
!4164 = !DILocation(line: 2736, column: 97, scope: !4165)
!4165 = !DILexicalBlockFile(scope: !771, file: !352, discriminator: 2)
!4166 = !DILocation(line: 2736, column: 102, scope: !4167)
!4167 = !DILexicalBlockFile(scope: !770, file: !352, discriminator: 4)
!4168 = !DILocation(line: 2736, column: 112, scope: !770)
!4169 = !DILocation(line: 2736, column: 142, scope: !770)
!4170 = !DILocation(line: 2736, column: 168, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !770, file: !352, line: 2736, column: 165)
!4172 = !DILocation(line: 2736, column: 185, scope: !4171)
!4173 = !DILocation(line: 2736, column: 165, scope: !4171)
!4174 = !DILocation(line: 2736, column: 195, scope: !4171)
!4175 = !DILocation(line: 2736, column: 165, scope: !770)
!4176 = !DILocation(line: 2736, column: 165, scope: !4177)
!4177 = !DILexicalBlockFile(scope: !770, file: !352, discriminator: 5)
!4178 = !DILocation(line: 2736, column: 226, scope: !4179)
!4179 = !DILexicalBlockFile(scope: !4171, file: !352, discriminator: 6)
!4180 = !DILocation(line: 2736, column: 244, scope: !4171)
!4181 = !DILocation(line: 2736, column: 254, scope: !4171)
!4182 = !DILocation(line: 2736, column: 279, scope: !4171)
!4183 = !DILocation(line: 2736, column: 210, scope: !4171)
!4184 = !DILocation(line: 2736, column: 298, scope: !4185)
!4185 = !DILexicalBlockFile(scope: !771, file: !352, discriminator: 7)
!4186 = !DILocation(line: 2736, column: 298, scope: !770)
!4187 = !DILocation(line: 2736, column: 298, scope: !4188)
!4188 = !DILexicalBlockFile(scope: !770, file: !352, discriminator: 8)
!4189 = !DILocation(line: 2736, column: 298, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !770, file: !352, discriminator: 9)
!4191 = !DILocation(line: 2736, column: 311, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4193, file: !352, discriminator: 10)
!4193 = !DILexicalBlockFile(scope: !762, file: !352, discriminator: 3)
!4194 = !DILocation(line: 2736, column: 311, scope: !768)
!4195 = !DILocation(line: 2737, column: 5, scope: !762)
!4196 = !DILocation(line: 2737, column: 10, scope: !4197)
!4197 = !DILexicalBlockFile(scope: !773, file: !352, discriminator: 1)
!4198 = !DILocation(line: 2737, column: 20, scope: !773)
!4199 = !DILocation(line: 2737, column: 51, scope: !773)
!4200 = !DILocation(line: 2737, column: 55, scope: !773)
!4201 = !DILocation(line: 2737, column: 68, scope: !776)
!4202 = !DILocation(line: 2737, column: 84, scope: !776)
!4203 = !DILocation(line: 2737, column: 68, scope: !773)
!4204 = !DILocation(line: 2737, column: 99, scope: !4205)
!4205 = !DILexicalBlockFile(scope: !776, file: !352, discriminator: 2)
!4206 = !DILocation(line: 2737, column: 104, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !775, file: !352, discriminator: 4)
!4208 = !DILocation(line: 2737, column: 114, scope: !775)
!4209 = !DILocation(line: 2737, column: 144, scope: !775)
!4210 = !DILocation(line: 2737, column: 170, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !775, file: !352, line: 2737, column: 167)
!4212 = !DILocation(line: 2737, column: 187, scope: !4211)
!4213 = !DILocation(line: 2737, column: 167, scope: !4211)
!4214 = !DILocation(line: 2737, column: 197, scope: !4211)
!4215 = !DILocation(line: 2737, column: 167, scope: !775)
!4216 = !DILocation(line: 2737, column: 167, scope: !4217)
!4217 = !DILexicalBlockFile(scope: !775, file: !352, discriminator: 5)
!4218 = !DILocation(line: 2737, column: 228, scope: !4219)
!4219 = !DILexicalBlockFile(scope: !4211, file: !352, discriminator: 6)
!4220 = !DILocation(line: 2737, column: 246, scope: !4211)
!4221 = !DILocation(line: 2737, column: 256, scope: !4211)
!4222 = !DILocation(line: 2737, column: 281, scope: !4211)
!4223 = !DILocation(line: 2737, column: 212, scope: !4211)
!4224 = !DILocation(line: 2737, column: 300, scope: !4225)
!4225 = !DILexicalBlockFile(scope: !776, file: !352, discriminator: 7)
!4226 = !DILocation(line: 2737, column: 300, scope: !775)
!4227 = !DILocation(line: 2737, column: 300, scope: !4228)
!4228 = !DILexicalBlockFile(scope: !775, file: !352, discriminator: 8)
!4229 = !DILocation(line: 2737, column: 300, scope: !4230)
!4230 = !DILexicalBlockFile(scope: !775, file: !352, discriminator: 9)
!4231 = !DILocation(line: 2737, column: 313, scope: !4192)
!4232 = !DILocation(line: 2737, column: 313, scope: !773)
!4233 = !DILocation(line: 2738, column: 9, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !762, file: !352, line: 2738, column: 9)
!4235 = !DILocation(line: 2738, column: 13, scope: !4234)
!4236 = !DILocation(line: 2738, column: 21, scope: !4234)
!4237 = !DILocation(line: 2738, column: 9, scope: !762)
!4238 = !DILocation(line: 2739, column: 20, scope: !4234)
!4239 = !DILocation(line: 2739, column: 24, scope: !4234)
!4240 = !DILocation(line: 2739, column: 9, scope: !4234)
!4241 = !DILocation(line: 2740, column: 19, scope: !762)
!4242 = !DILocation(line: 2740, column: 7, scope: !762)
!4243 = !DILocation(line: 2740, column: 25, scope: !762)
!4244 = !DILocation(line: 2740, column: 35, scope: !762)
!4245 = !DILocation(line: 2740, column: 43, scope: !762)
!4246 = !DILocation(line: 2740, column: 5, scope: !762)
!4247 = !DILocation(line: 2741, column: 1, scope: !762)
!4248 = !DILocation(line: 2754, column: 25, scope: !777)
!4249 = !DILocation(line: 2754, column: 39, scope: !777)
!4250 = !DILocation(line: 2754, column: 52, scope: !777)
!4251 = !DILocation(line: 2756, column: 5, scope: !777)
!4252 = !DILocation(line: 2756, column: 14, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !786, file: !352, discriminator: 1)
!4254 = !DILocation(line: 2756, column: 18, scope: !786)
!4255 = !DILocation(line: 2756, column: 14, scope: !786)
!4256 = !DILocation(line: 2756, column: 14, scope: !787)
!4257 = !DILocation(line: 2756, column: 26, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !785, file: !352, discriminator: 2)
!4259 = !DILocation(line: 2756, column: 30, scope: !785)
!4260 = !DILocation(line: 2756, column: 37, scope: !785)
!4261 = !DILocation(line: 2756, column: 56, scope: !785)
!4262 = !DILocation(line: 2756, column: 60, scope: !785)
!4263 = !DILocation(line: 2756, column: 67, scope: !785)
!4264 = !DILocation(line: 2756, column: 77, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !785, file: !352, line: 2756, column: 77)
!4266 = !DILocation(line: 2756, column: 77, scope: !785)
!4267 = !DILocation(line: 2756, column: 90, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !4265, file: !352, discriminator: 4)
!4269 = !DILocation(line: 2756, column: 83, scope: !4265)
!4270 = !DILocation(line: 2756, column: 96, scope: !4271)
!4271 = !DILexicalBlockFile(scope: !786, file: !352, discriminator: 5)
!4272 = !DILocation(line: 2756, column: 96, scope: !4273)
!4273 = !DILexicalBlockFile(scope: !4274, file: !352, discriminator: 7)
!4274 = !DILexicalBlockFile(scope: !786, file: !352, discriminator: 6)
!4275 = !DILocation(line: 2756, column: 96, scope: !785)
!4276 = !DILocation(line: 2756, column: 98, scope: !4277)
!4277 = !DILexicalBlockFile(scope: !4278, file: !352, discriminator: 8)
!4278 = !DILexicalBlockFile(scope: !787, file: !352, discriminator: 3)
!4279 = !DILocation(line: 2757, column: 5, scope: !777)
!4280 = !DILocation(line: 2757, column: 14, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !790, file: !352, discriminator: 1)
!4282 = !DILocation(line: 2757, column: 18, scope: !790)
!4283 = !DILocation(line: 2757, column: 14, scope: !790)
!4284 = !DILocation(line: 2757, column: 14, scope: !791)
!4285 = !DILocation(line: 2757, column: 28, scope: !4286)
!4286 = !DILexicalBlockFile(scope: !789, file: !352, discriminator: 2)
!4287 = !DILocation(line: 2757, column: 32, scope: !789)
!4288 = !DILocation(line: 2757, column: 39, scope: !789)
!4289 = !DILocation(line: 2757, column: 58, scope: !789)
!4290 = !DILocation(line: 2757, column: 62, scope: !789)
!4291 = !DILocation(line: 2757, column: 71, scope: !789)
!4292 = !DILocation(line: 2757, column: 81, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !789, file: !352, line: 2757, column: 81)
!4294 = !DILocation(line: 2757, column: 81, scope: !789)
!4295 = !DILocation(line: 2757, column: 94, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !4293, file: !352, discriminator: 4)
!4297 = !DILocation(line: 2757, column: 87, scope: !4293)
!4298 = !DILocation(line: 2757, column: 100, scope: !4299)
!4299 = !DILexicalBlockFile(scope: !790, file: !352, discriminator: 5)
!4300 = !DILocation(line: 2757, column: 100, scope: !4301)
!4301 = !DILexicalBlockFile(scope: !4302, file: !352, discriminator: 7)
!4302 = !DILexicalBlockFile(scope: !790, file: !352, discriminator: 6)
!4303 = !DILocation(line: 2757, column: 100, scope: !789)
!4304 = !DILocation(line: 2757, column: 102, scope: !4305)
!4305 = !DILexicalBlockFile(scope: !4306, file: !352, discriminator: 8)
!4306 = !DILexicalBlockFile(scope: !791, file: !352, discriminator: 3)
!4307 = !DILocation(line: 2758, column: 5, scope: !777)
!4308 = !DILocation(line: 2759, column: 1, scope: !777)
!4309 = !DILocation(line: 2762, column: 21, scope: !792)
!4310 = !DILocation(line: 2764, column: 5, scope: !792)
!4311 = !DILocation(line: 2764, column: 15, scope: !792)
!4312 = !DILocation(line: 2765, column: 5, scope: !792)
!4313 = !DILocation(line: 2765, column: 15, scope: !792)
!4314 = !DILocation(line: 2766, column: 5, scope: !792)
!4315 = !DILocation(line: 2766, column: 15, scope: !792)
!4316 = !DILocation(line: 2766, column: 22, scope: !792)
!4317 = !DILocation(line: 2766, column: 26, scope: !792)
!4318 = !DILocation(line: 2767, column: 5, scope: !792)
!4319 = !DILocation(line: 2767, column: 17, scope: !792)
!4320 = !DILocation(line: 2767, column: 27, scope: !792)
!4321 = !DILocation(line: 2767, column: 31, scope: !792)
!4322 = !DILocation(line: 2768, column: 5, scope: !792)
!4323 = !DILocation(line: 2768, column: 15, scope: !792)
!4324 = !DILocation(line: 2768, column: 24, scope: !792)
!4325 = !DILocation(line: 2768, column: 28, scope: !792)
!4326 = !DILocation(line: 2769, column: 5, scope: !792)
!4327 = !DILocation(line: 2769, column: 16, scope: !792)
!4328 = !DILocation(line: 2769, column: 37, scope: !792)
!4329 = !DILocation(line: 2769, column: 22, scope: !792)
!4330 = !DILocation(line: 2769, column: 45, scope: !792)
!4331 = !DILocation(line: 2770, column: 5, scope: !792)
!4332 = !DILocation(line: 2770, column: 16, scope: !792)
!4333 = !DILocation(line: 2770, column: 20, scope: !792)
!4334 = !DILocation(line: 2770, column: 24, scope: !792)
!4335 = !DILocation(line: 2771, column: 5, scope: !792)
!4336 = !DILocation(line: 2771, column: 16, scope: !792)
!4337 = !DILocation(line: 2771, column: 19, scope: !792)
!4338 = !DILocation(line: 2773, column: 9, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !792, file: !352, line: 2773, column: 9)
!4340 = !DILocation(line: 2773, column: 13, scope: !4339)
!4341 = !DILocation(line: 2773, column: 9, scope: !792)
!4342 = !DILocation(line: 2774, column: 9, scope: !4339)
!4343 = !DILocation(line: 2776, column: 9, scope: !810)
!4344 = !DILocation(line: 2776, column: 16, scope: !810)
!4345 = !DILocation(line: 2776, column: 9, scope: !792)
!4346 = !DILocation(line: 2778, column: 30, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !810, file: !352, line: 2776, column: 31)
!4348 = !DILocation(line: 2778, column: 18, scope: !4347)
!4349 = !DILocation(line: 2778, column: 16, scope: !4347)
!4350 = !DILocation(line: 2779, column: 13, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4347, file: !352, line: 2779, column: 13)
!4352 = !DILocation(line: 2779, column: 20, scope: !4351)
!4353 = !DILocation(line: 2779, column: 13, scope: !4347)
!4354 = !DILocation(line: 2780, column: 13, scope: !4351)
!4355 = !DILocation(line: 2781, column: 22, scope: !4347)
!4356 = !DILocation(line: 2781, column: 9, scope: !4347)
!4357 = !DILocation(line: 2781, column: 13, scope: !4347)
!4358 = !DILocation(line: 2781, column: 20, scope: !4347)
!4359 = !DILocation(line: 2782, column: 36, scope: !4347)
!4360 = !DILocation(line: 2782, column: 18, scope: !4347)
!4361 = !DILocation(line: 2782, column: 44, scope: !4347)
!4362 = !DILocation(line: 2782, column: 17, scope: !4347)
!4363 = !DILocation(line: 2782, column: 14, scope: !4347)
!4364 = !DILocation(line: 2783, column: 15, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4347, file: !352, line: 2783, column: 9)
!4366 = !DILocation(line: 2783, column: 14, scope: !4365)
!4367 = !DILocation(line: 2783, column: 19, scope: !4368)
!4368 = !DILexicalBlockFile(scope: !4369, file: !352, discriminator: 2)
!4369 = !DILexicalBlockFile(scope: !4370, file: !352, discriminator: 1)
!4370 = distinct !DILexicalBlock(scope: !4365, file: !352, line: 2783, column: 9)
!4371 = !DILocation(line: 2783, column: 21, scope: !4370)
!4372 = !DILocation(line: 2783, column: 20, scope: !4370)
!4373 = !DILocation(line: 2783, column: 9, scope: !4365)
!4374 = !DILocation(line: 2785, column: 29, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4370, file: !352, line: 2783, column: 30)
!4376 = !DILocation(line: 2785, column: 37, scope: !4375)
!4377 = !DILocation(line: 2785, column: 46, scope: !4375)
!4378 = !DILocation(line: 2786, column: 56, scope: !4375)
!4379 = !DILocation(line: 2786, column: 51, scope: !4375)
!4380 = !DILocation(line: 2786, column: 33, scope: !4375)
!4381 = !DILocation(line: 2786, column: 15, scope: !4375)
!4382 = !DILocation(line: 2786, column: 43, scope: !4375)
!4383 = !DILocation(line: 2786, column: 14, scope: !4375)
!4384 = !DILocation(line: 2786, column: 54, scope: !4375)
!4385 = !DILocation(line: 2787, column: 9, scope: !4375)
!4386 = !DILocation(line: 2783, column: 26, scope: !4370)
!4387 = !DILocation(line: 2783, column: 9, scope: !4370)
!4388 = !DILocation(line: 2788, column: 5, scope: !4347)
!4389 = !DILocation(line: 2790, column: 27, scope: !808)
!4390 = !DILocation(line: 2790, column: 37, scope: !808)
!4391 = !DILocation(line: 2790, column: 48, scope: !808)
!4392 = !DILocation(line: 2790, column: 13, scope: !809)
!4393 = !DILocation(line: 2791, column: 13, scope: !807)
!4394 = !DILocation(line: 2791, column: 23, scope: !807)
!4395 = !DILocation(line: 2791, column: 36, scope: !807)
!4396 = !DILocation(line: 2792, column: 34, scope: !807)
!4397 = !DILocation(line: 2792, column: 22, scope: !807)
!4398 = !DILocation(line: 2792, column: 20, scope: !807)
!4399 = !DILocation(line: 2793, column: 17, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !807, file: !352, line: 2793, column: 17)
!4401 = !DILocation(line: 2793, column: 24, scope: !4400)
!4402 = !DILocation(line: 2793, column: 17, scope: !807)
!4403 = !DILocation(line: 2794, column: 17, scope: !4400)
!4404 = !DILocation(line: 2795, column: 26, scope: !807)
!4405 = !DILocation(line: 2795, column: 13, scope: !807)
!4406 = !DILocation(line: 2795, column: 17, scope: !807)
!4407 = !DILocation(line: 2795, column: 24, scope: !807)
!4408 = !DILocation(line: 2796, column: 19, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !807, file: !352, line: 2796, column: 13)
!4410 = !DILocation(line: 2796, column: 18, scope: !4409)
!4411 = !DILocation(line: 2796, column: 23, scope: !4412)
!4412 = !DILexicalBlockFile(scope: !4413, file: !352, discriminator: 2)
!4413 = !DILexicalBlockFile(scope: !4414, file: !352, discriminator: 1)
!4414 = distinct !DILexicalBlock(scope: !4409, file: !352, line: 2796, column: 13)
!4415 = !DILocation(line: 2796, column: 25, scope: !4414)
!4416 = !DILocation(line: 2796, column: 24, scope: !4414)
!4417 = !DILocation(line: 2796, column: 13, scope: !4409)
!4418 = !DILocation(line: 2797, column: 66, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4414, file: !352, line: 2796, column: 34)
!4420 = !DILocation(line: 2797, column: 44, scope: !4419)
!4421 = !DILocation(line: 2797, column: 26, scope: !4419)
!4422 = !DILocation(line: 2797, column: 58, scope: !4419)
!4423 = !DILocation(line: 2797, column: 25, scope: !4419)
!4424 = !DILocation(line: 2797, column: 22, scope: !4419)
!4425 = !DILocation(line: 2798, column: 33, scope: !4419)
!4426 = !DILocation(line: 2798, column: 41, scope: !4419)
!4427 = !DILocation(line: 2798, column: 50, scope: !4419)
!4428 = !DILocation(line: 2799, column: 60, scope: !4419)
!4429 = !DILocation(line: 2799, column: 55, scope: !4419)
!4430 = !DILocation(line: 2799, column: 37, scope: !4419)
!4431 = !DILocation(line: 2799, column: 19, scope: !4419)
!4432 = !DILocation(line: 2799, column: 47, scope: !4419)
!4433 = !DILocation(line: 2799, column: 18, scope: !4419)
!4434 = !DILocation(line: 2799, column: 58, scope: !4419)
!4435 = !DILocation(line: 2800, column: 13, scope: !4419)
!4436 = !DILocation(line: 2796, column: 30, scope: !4414)
!4437 = !DILocation(line: 2796, column: 13, scope: !4414)
!4438 = !DILocation(line: 2801, column: 13, scope: !807)
!4439 = !DILocation(line: 2801, column: 18, scope: !4440)
!4440 = !DILexicalBlockFile(scope: !812, file: !352, discriminator: 1)
!4441 = !DILocation(line: 2801, column: 28, scope: !812)
!4442 = !DILocation(line: 2801, column: 58, scope: !812)
!4443 = !DILocation(line: 2801, column: 79, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !812, file: !352, line: 2801, column: 76)
!4445 = !DILocation(line: 2801, column: 96, scope: !4444)
!4446 = !DILocation(line: 2801, column: 76, scope: !4444)
!4447 = !DILocation(line: 2801, column: 106, scope: !4444)
!4448 = !DILocation(line: 2801, column: 76, scope: !812)
!4449 = !DILocation(line: 2801, column: 76, scope: !4450)
!4450 = !DILexicalBlockFile(scope: !812, file: !352, discriminator: 2)
!4451 = !DILocation(line: 2801, column: 137, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !4444, file: !352, discriminator: 3)
!4453 = !DILocation(line: 2801, column: 155, scope: !4444)
!4454 = !DILocation(line: 2801, column: 165, scope: !4444)
!4455 = !DILocation(line: 2801, column: 190, scope: !4444)
!4456 = !DILocation(line: 2801, column: 121, scope: !4444)
!4457 = !DILocation(line: 2801, column: 209, scope: !4458)
!4458 = !DILexicalBlockFile(scope: !807, file: !352, discriminator: 4)
!4459 = !DILocation(line: 2801, column: 209, scope: !812)
!4460 = !DILocation(line: 2801, column: 209, scope: !4461)
!4461 = !DILexicalBlockFile(scope: !812, file: !352, discriminator: 5)
!4462 = !DILocation(line: 2802, column: 9, scope: !808)
!4463 = !DILocation(line: 2802, column: 9, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !808, file: !352, discriminator: 1)
!4465 = !DILocation(line: 2802, column: 9, scope: !807)
!4466 = !DILocation(line: 2809, column: 16, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !809, file: !352, line: 2809, column: 9)
!4468 = !DILocation(line: 2809, column: 17, scope: !4467)
!4469 = !DILocation(line: 2809, column: 15, scope: !4467)
!4470 = !DILocation(line: 2809, column: 14, scope: !4467)
!4471 = !DILocation(line: 2809, column: 22, scope: !4472)
!4472 = !DILexicalBlockFile(scope: !4473, file: !352, discriminator: 6)
!4473 = !DILexicalBlockFile(scope: !4474, file: !352, discriminator: 1)
!4474 = distinct !DILexicalBlock(scope: !4467, file: !352, line: 2809, column: 9)
!4475 = !DILocation(line: 2809, column: 24, scope: !4474)
!4476 = !DILocation(line: 2809, column: 29, scope: !4474)
!4477 = !DILocation(line: 2809, column: 40, scope: !4478)
!4478 = !DILexicalBlockFile(scope: !4474, file: !352, discriminator: 2)
!4479 = !DILocation(line: 2809, column: 32, scope: !4474)
!4480 = !DILocation(line: 2809, column: 46, scope: !4474)
!4481 = !DILocation(line: 2809, column: 47, scope: !4474)
!4482 = !DILocation(line: 2809, column: 43, scope: !4474)
!4483 = !DILocation(line: 2809, column: 9, scope: !4484)
!4484 = !DILexicalBlockFile(scope: !4467, file: !352, discriminator: 3)
!4485 = !DILocation(line: 2809, column: 9, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !4467, file: !352, discriminator: 4)
!4487 = !DILocation(line: 2809, column: 52, scope: !4488)
!4488 = !DILexicalBlockFile(scope: !4474, file: !352, discriminator: 5)
!4489 = !DILocation(line: 2809, column: 9, scope: !4474)
!4490 = !DILocation(line: 2814, column: 13, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !809, file: !352, line: 2814, column: 13)
!4492 = !DILocation(line: 2814, column: 15, scope: !4491)
!4493 = !DILocation(line: 2814, column: 13, scope: !809)
!4494 = !DILocation(line: 2815, column: 13, scope: !4491)
!4495 = !DILocation(line: 2819, column: 25, scope: !809)
!4496 = !DILocation(line: 2819, column: 17, scope: !809)
!4497 = !DILocation(line: 2819, column: 28, scope: !809)
!4498 = !DILocation(line: 2819, column: 15, scope: !809)
!4499 = !DILocation(line: 2821, column: 52, scope: !809)
!4500 = !DILocation(line: 2821, column: 36, scope: !809)
!4501 = !DILocation(line: 2821, column: 18, scope: !809)
!4502 = !DILocation(line: 2821, column: 44, scope: !809)
!4503 = !DILocation(line: 2821, column: 17, scope: !809)
!4504 = !DILocation(line: 2821, column: 14, scope: !809)
!4505 = !DILocation(line: 2822, column: 9, scope: !809)
!4506 = !DILocation(line: 2822, column: 17, scope: !4507)
!4507 = !DILexicalBlockFile(scope: !4508, file: !352, discriminator: 2)
!4508 = !DILexicalBlockFile(scope: !816, file: !352, discriminator: 1)
!4509 = !DILocation(line: 2822, column: 19, scope: !816)
!4510 = !DILocation(line: 2822, column: 18, scope: !816)
!4511 = !DILocation(line: 2822, column: 9, scope: !817)
!4512 = !DILocation(line: 2823, column: 26, scope: !815)
!4513 = !DILocation(line: 2823, column: 21, scope: !815)
!4514 = !DILocation(line: 2823, column: 13, scope: !815)
!4515 = !DILocation(line: 2823, column: 24, scope: !815)
!4516 = !DILocation(line: 2824, column: 29, scope: !815)
!4517 = !DILocation(line: 2824, column: 37, scope: !815)
!4518 = !DILocation(line: 2824, column: 46, scope: !815)
!4519 = !DILocation(line: 2825, column: 61, scope: !815)
!4520 = !DILocation(line: 2825, column: 43, scope: !815)
!4521 = !DILocation(line: 2825, column: 25, scope: !815)
!4522 = !DILocation(line: 2825, column: 53, scope: !815)
!4523 = !DILocation(line: 2825, column: 24, scope: !815)
!4524 = !DILocation(line: 2825, column: 21, scope: !815)
!4525 = !DILocation(line: 2826, column: 56, scope: !815)
!4526 = !DILocation(line: 2826, column: 51, scope: !815)
!4527 = !DILocation(line: 2826, column: 33, scope: !815)
!4528 = !DILocation(line: 2826, column: 15, scope: !815)
!4529 = !DILocation(line: 2826, column: 43, scope: !815)
!4530 = !DILocation(line: 2826, column: 14, scope: !815)
!4531 = !DILocation(line: 2826, column: 54, scope: !815)
!4532 = !DILocation(line: 2827, column: 13, scope: !815)
!4533 = !DILocation(line: 2827, column: 18, scope: !4534)
!4534 = !DILexicalBlockFile(scope: !814, file: !352, discriminator: 1)
!4535 = !DILocation(line: 2827, column: 28, scope: !814)
!4536 = !DILocation(line: 2827, column: 58, scope: !814)
!4537 = !DILocation(line: 2827, column: 76, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !814, file: !352, line: 2827, column: 73)
!4539 = !DILocation(line: 2827, column: 93, scope: !4538)
!4540 = !DILocation(line: 2827, column: 73, scope: !4538)
!4541 = !DILocation(line: 2827, column: 103, scope: !4538)
!4542 = !DILocation(line: 2827, column: 73, scope: !814)
!4543 = !DILocation(line: 2827, column: 73, scope: !4544)
!4544 = !DILexicalBlockFile(scope: !814, file: !352, discriminator: 2)
!4545 = !DILocation(line: 2827, column: 134, scope: !4546)
!4546 = !DILexicalBlockFile(scope: !4538, file: !352, discriminator: 3)
!4547 = !DILocation(line: 2827, column: 152, scope: !4538)
!4548 = !DILocation(line: 2827, column: 162, scope: !4538)
!4549 = !DILocation(line: 2827, column: 187, scope: !4538)
!4550 = !DILocation(line: 2827, column: 118, scope: !4538)
!4551 = !DILocation(line: 2827, column: 206, scope: !4552)
!4552 = !DILexicalBlockFile(scope: !815, file: !352, discriminator: 4)
!4553 = !DILocation(line: 2827, column: 206, scope: !814)
!4554 = !DILocation(line: 2827, column: 206, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !814, file: !352, discriminator: 5)
!4556 = !DILocation(line: 2828, column: 9, scope: !815)
!4557 = !DILocation(line: 2822, column: 24, scope: !816)
!4558 = !DILocation(line: 2822, column: 9, scope: !816)
!4559 = !DILocation(line: 2831, column: 21, scope: !792)
!4560 = !DILocation(line: 2831, column: 31, scope: !792)
!4561 = !DILocation(line: 2831, column: 40, scope: !792)
!4562 = !DILocation(line: 2832, column: 12, scope: !792)
!4563 = !DILocation(line: 2832, column: 5, scope: !792)
!4564 = !DILocation(line: 2835, column: 5, scope: !792)
!4565 = !DILocation(line: 2835, column: 9, scope: !792)
!4566 = !DILocation(line: 2835, column: 17, scope: !792)
!4567 = !DILocation(line: 2836, column: 5, scope: !792)
!4568 = !DILocation(line: 2837, column: 1, scope: !792)
!4569 = !DILocation(line: 2679, column: 23, scope: !865)
!4570 = !DILocation(line: 2679, column: 39, scope: !865)
!4571 = !DILocation(line: 2679, column: 55, scope: !865)
!4572 = !DILocation(line: 2681, column: 5, scope: !865)
!4573 = !DILocation(line: 2681, column: 16, scope: !865)
!4574 = !DILocation(line: 2682, column: 5, scope: !865)
!4575 = !DILocation(line: 2682, column: 16, scope: !865)
!4576 = !DILocation(line: 2683, column: 5, scope: !865)
!4577 = !DILocation(line: 2683, column: 16, scope: !865)
!4578 = !DILocation(line: 2684, column: 5, scope: !865)
!4579 = !DILocation(line: 2684, column: 15, scope: !865)
!4580 = !DILocation(line: 2685, column: 5, scope: !865)
!4581 = !DILocation(line: 2685, column: 15, scope: !865)
!4582 = !DILocation(line: 2686, column: 5, scope: !865)
!4583 = !DILocation(line: 2686, column: 17, scope: !865)
!4584 = !DILocation(line: 2687, column: 5, scope: !865)
!4585 = !DILocation(line: 2687, column: 16, scope: !865)
!4586 = !DILocation(line: 2690, column: 38, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2690, column: 9)
!4588 = !DILocation(line: 2690, column: 44, scope: !4587)
!4589 = !DILocation(line: 2690, column: 10, scope: !4587)
!4590 = !DILocation(line: 2690, column: 9, scope: !865)
!4591 = !DILocation(line: 2692, column: 9, scope: !4587)
!4592 = !DILocation(line: 2694, column: 29, scope: !865)
!4593 = !DILocation(line: 2694, column: 12, scope: !865)
!4594 = !DILocation(line: 2694, column: 10, scope: !865)
!4595 = !DILocation(line: 2695, column: 9, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2695, column: 9)
!4597 = !DILocation(line: 2695, column: 14, scope: !4596)
!4598 = !DILocation(line: 2695, column: 9, scope: !865)
!4599 = !DILocation(line: 2696, column: 9, scope: !4596)
!4600 = !DILocation(line: 2697, column: 26, scope: !865)
!4601 = !DILocation(line: 2697, column: 11, scope: !865)
!4602 = !DILocation(line: 2697, column: 34, scope: !865)
!4603 = !DILocation(line: 2697, column: 7, scope: !865)
!4604 = !DILocation(line: 2698, column: 9, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2698, column: 9)
!4606 = !DILocation(line: 2698, column: 11, scope: !4605)
!4607 = !DILocation(line: 2698, column: 9, scope: !865)
!4608 = !DILocation(line: 2699, column: 25, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4605, file: !352, line: 2698, column: 16)
!4610 = !DILocation(line: 2699, column: 9, scope: !4609)
!4611 = !DILocation(line: 2700, column: 9, scope: !4609)
!4612 = !DILocation(line: 2703, column: 28, scope: !865)
!4613 = !DILocation(line: 2703, column: 30, scope: !865)
!4614 = !DILocation(line: 2703, column: 15, scope: !865)
!4615 = !DILocation(line: 2703, column: 13, scope: !865)
!4616 = !DILocation(line: 2704, column: 9, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2704, column: 9)
!4618 = !DILocation(line: 2704, column: 17, scope: !4617)
!4619 = !DILocation(line: 2704, column: 9, scope: !865)
!4620 = !DILocation(line: 2705, column: 9, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4617, file: !352, line: 2704, column: 32)
!4622 = !DILocation(line: 2706, column: 9, scope: !4621)
!4623 = !DILocation(line: 2709, column: 11, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2709, column: 5)
!4625 = !DILocation(line: 2709, column: 10, scope: !4624)
!4626 = !DILocation(line: 2709, column: 16, scope: !4627)
!4627 = !DILexicalBlockFile(scope: !4628, file: !352, discriminator: 2)
!4628 = !DILexicalBlockFile(scope: !4629, file: !352, discriminator: 1)
!4629 = distinct !DILexicalBlock(scope: !4624, file: !352, line: 2709, column: 5)
!4630 = !DILocation(line: 2709, column: 18, scope: !4629)
!4631 = !DILocation(line: 2709, column: 17, scope: !4629)
!4632 = !DILocation(line: 2709, column: 5, scope: !4624)
!4633 = !DILocation(line: 2710, column: 17, scope: !4629)
!4634 = !DILocation(line: 2710, column: 9, scope: !4629)
!4635 = !DILocation(line: 2710, column: 20, scope: !4629)
!4636 = !DILocation(line: 2709, column: 23, scope: !4629)
!4637 = !DILocation(line: 2709, column: 5, scope: !4629)
!4638 = !DILocation(line: 2713, column: 23, scope: !865)
!4639 = !DILocation(line: 2713, column: 29, scope: !865)
!4640 = !DILocation(line: 2713, column: 38, scope: !865)
!4641 = !DILocation(line: 2713, column: 10, scope: !865)
!4642 = !DILocation(line: 2713, column: 8, scope: !865)
!4643 = !DILocation(line: 2714, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2714, column: 9)
!4645 = !DILocation(line: 2714, column: 12, scope: !4644)
!4646 = !DILocation(line: 2714, column: 9, scope: !865)
!4647 = !DILocation(line: 2715, column: 9, scope: !4644)
!4648 = !DILocation(line: 2717, column: 16, scope: !865)
!4649 = !DILocation(line: 2717, column: 5, scope: !865)
!4650 = !DILocation(line: 2717, column: 9, scope: !865)
!4651 = !DILocation(line: 2717, column: 14, scope: !865)
!4652 = !DILocation(line: 2718, column: 19, scope: !865)
!4653 = !DILocation(line: 2718, column: 5, scope: !865)
!4654 = !DILocation(line: 2718, column: 9, scope: !865)
!4655 = !DILocation(line: 2718, column: 17, scope: !865)
!4656 = !DILocation(line: 2719, column: 5, scope: !865)
!4657 = !DILocation(line: 2719, column: 9, scope: !865)
!4658 = !DILocation(line: 2719, column: 16, scope: !865)
!4659 = !DILocation(line: 2720, column: 13, scope: !865)
!4660 = !DILocation(line: 2720, column: 5, scope: !865)
!4661 = !DILocation(line: 2720, column: 9, scope: !865)
!4662 = !DILocation(line: 2720, column: 11, scope: !865)
!4663 = !DILocation(line: 2721, column: 20, scope: !865)
!4664 = !DILocation(line: 2721, column: 22, scope: !865)
!4665 = !DILocation(line: 2721, column: 25, scope: !4666)
!4666 = !DILexicalBlockFile(scope: !865, file: !352, discriminator: 2)
!4667 = !DILocation(line: 2721, column: 22, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !865, file: !352, discriminator: 1)
!4669 = !DILocation(line: 2721, column: 5, scope: !865)
!4670 = !DILocation(line: 2721, column: 9, scope: !865)
!4671 = !DILocation(line: 2721, column: 17, scope: !865)
!4672 = !DILocation(line: 2723, column: 24, scope: !865)
!4673 = !DILocation(line: 2723, column: 12, scope: !865)
!4674 = !DILocation(line: 2723, column: 5, scope: !865)
!4675 = !DILocation(line: 2726, column: 9, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !865, file: !352, line: 2726, column: 9)
!4677 = !DILocation(line: 2726, column: 17, scope: !4676)
!4678 = !DILocation(line: 2726, column: 9, scope: !865)
!4679 = !DILocation(line: 2727, column: 20, scope: !4676)
!4680 = !DILocation(line: 2727, column: 9, scope: !4676)
!4681 = !DILocation(line: 2728, column: 5, scope: !865)
!4682 = !DILocation(line: 2728, column: 10, scope: !4683)
!4683 = !DILexicalBlockFile(scope: !878, file: !352, discriminator: 1)
!4684 = !DILocation(line: 2728, column: 20, scope: !878)
!4685 = !DILocation(line: 2728, column: 51, scope: !878)
!4686 = !DILocation(line: 2728, column: 62, scope: !881)
!4687 = !DILocation(line: 2728, column: 78, scope: !881)
!4688 = !DILocation(line: 2728, column: 62, scope: !878)
!4689 = !DILocation(line: 2728, column: 93, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !881, file: !352, discriminator: 2)
!4691 = !DILocation(line: 2728, column: 98, scope: !4692)
!4692 = !DILexicalBlockFile(scope: !880, file: !352, discriminator: 4)
!4693 = !DILocation(line: 2728, column: 108, scope: !880)
!4694 = !DILocation(line: 2728, column: 138, scope: !880)
!4695 = !DILocation(line: 2728, column: 164, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !880, file: !352, line: 2728, column: 161)
!4697 = !DILocation(line: 2728, column: 181, scope: !4696)
!4698 = !DILocation(line: 2728, column: 161, scope: !4696)
!4699 = !DILocation(line: 2728, column: 191, scope: !4696)
!4700 = !DILocation(line: 2728, column: 161, scope: !880)
!4701 = !DILocation(line: 2728, column: 161, scope: !4702)
!4702 = !DILexicalBlockFile(scope: !880, file: !352, discriminator: 5)
!4703 = !DILocation(line: 2728, column: 222, scope: !4704)
!4704 = !DILexicalBlockFile(scope: !4696, file: !352, discriminator: 6)
!4705 = !DILocation(line: 2728, column: 240, scope: !4696)
!4706 = !DILocation(line: 2728, column: 250, scope: !4696)
!4707 = !DILocation(line: 2728, column: 275, scope: !4696)
!4708 = !DILocation(line: 2728, column: 206, scope: !4696)
!4709 = !DILocation(line: 2728, column: 294, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !881, file: !352, discriminator: 7)
!4711 = !DILocation(line: 2728, column: 294, scope: !880)
!4712 = !DILocation(line: 2728, column: 294, scope: !4713)
!4713 = !DILexicalBlockFile(scope: !880, file: !352, discriminator: 8)
!4714 = !DILocation(line: 2728, column: 294, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !880, file: !352, discriminator: 9)
!4716 = !DILocation(line: 2728, column: 307, scope: !4717)
!4717 = !DILexicalBlockFile(scope: !4718, file: !352, discriminator: 10)
!4718 = !DILexicalBlockFile(scope: !865, file: !352, discriminator: 3)
!4719 = !DILocation(line: 2728, column: 307, scope: !878)
!4720 = !DILocation(line: 2728, column: 307, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !878, file: !352, discriminator: 11)
!4722 = !DILocation(line: 2729, column: 5, scope: !865)
!4723 = !DILocation(line: 2730, column: 1, scope: !865)
!4724 = !DILocation(line: 2840, column: 23, scope: !818)
!4725 = !DILocation(line: 2842, column: 9, scope: !824)
!4726 = !DILocation(line: 2842, column: 13, scope: !824)
!4727 = !DILocation(line: 2842, column: 20, scope: !824)
!4728 = !DILocation(line: 2842, column: 9, scope: !818)
!4729 = !DILocation(line: 2843, column: 53, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !824, file: !352, line: 2842, column: 35)
!4731 = !DILocation(line: 2843, column: 41, scope: !4730)
!4732 = !DILocation(line: 2843, column: 59, scope: !4730)
!4733 = !DILocation(line: 2843, column: 69, scope: !4730)
!4734 = !DILocation(line: 2843, column: 73, scope: !4730)
!4735 = !DILocation(line: 2843, column: 79, scope: !4730)
!4736 = !DILocation(line: 2843, column: 83, scope: !4730)
!4737 = !DILocation(line: 2843, column: 16, scope: !4730)
!4738 = !DILocation(line: 2843, column: 9, scope: !4730)
!4739 = !DILocation(line: 2844, column: 16, scope: !823)
!4740 = !DILocation(line: 2844, column: 20, scope: !823)
!4741 = !DILocation(line: 2844, column: 16, scope: !824)
!4742 = !DILocation(line: 2845, column: 54, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !823, file: !352, line: 2844, column: 29)
!4744 = !DILocation(line: 2845, column: 42, scope: !4743)
!4745 = !DILocation(line: 2845, column: 60, scope: !4743)
!4746 = !DILocation(line: 2845, column: 70, scope: !4743)
!4747 = !DILocation(line: 2845, column: 74, scope: !4743)
!4748 = !DILocation(line: 2845, column: 16, scope: !4743)
!4749 = !DILocation(line: 2845, column: 9, scope: !4743)
!4750 = !DILocation(line: 2847, column: 9, scope: !822)
!4751 = !DILocation(line: 2847, column: 19, scope: !822)
!4752 = !DILocation(line: 2848, column: 9, scope: !822)
!4753 = !DILocation(line: 2848, column: 20, scope: !822)
!4754 = !DILocation(line: 2851, column: 31, scope: !822)
!4755 = !DILocation(line: 2851, column: 35, scope: !822)
!4756 = !DILocation(line: 2851, column: 19, scope: !822)
!4757 = !DILocation(line: 2851, column: 17, scope: !822)
!4758 = !DILocation(line: 2852, column: 14, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !822, file: !352, line: 2852, column: 13)
!4760 = !DILocation(line: 2852, column: 13, scope: !822)
!4761 = !DILocation(line: 2853, column: 13, scope: !4759)
!4762 = !DILocation(line: 2854, column: 15, scope: !829)
!4763 = !DILocation(line: 2854, column: 14, scope: !829)
!4764 = !DILocation(line: 2854, column: 19, scope: !4765)
!4765 = !DILexicalBlockFile(scope: !4766, file: !352, discriminator: 2)
!4766 = !DILexicalBlockFile(scope: !828, file: !352, discriminator: 1)
!4767 = !DILocation(line: 2854, column: 21, scope: !828)
!4768 = !DILocation(line: 2854, column: 25, scope: !828)
!4769 = !DILocation(line: 2854, column: 20, scope: !828)
!4770 = !DILocation(line: 2854, column: 9, scope: !829)
!4771 = !DILocation(line: 2856, column: 13, scope: !827)
!4772 = !DILocation(line: 2856, column: 23, scope: !827)
!4773 = !DILocation(line: 2856, column: 62, scope: !827)
!4774 = !DILocation(line: 2856, column: 50, scope: !827)
!4775 = !DILocation(line: 2856, column: 54, scope: !827)
!4776 = !DILocation(line: 2856, column: 31, scope: !827)
!4777 = !DILocation(line: 2857, column: 18, scope: !833)
!4778 = !DILocation(line: 2857, column: 17, scope: !827)
!4779 = !DILocation(line: 2858, column: 17, scope: !832)
!4780 = !DILocation(line: 2858, column: 22, scope: !4781)
!4781 = !DILexicalBlockFile(scope: !831, file: !352, discriminator: 1)
!4782 = !DILocation(line: 2858, column: 32, scope: !831)
!4783 = !DILocation(line: 2858, column: 62, scope: !831)
!4784 = !DILocation(line: 2858, column: 80, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !831, file: !352, line: 2858, column: 77)
!4786 = !DILocation(line: 2858, column: 97, scope: !4785)
!4787 = !DILocation(line: 2858, column: 77, scope: !4785)
!4788 = !DILocation(line: 2858, column: 107, scope: !4785)
!4789 = !DILocation(line: 2858, column: 77, scope: !831)
!4790 = !DILocation(line: 2858, column: 77, scope: !4791)
!4791 = !DILexicalBlockFile(scope: !831, file: !352, discriminator: 2)
!4792 = !DILocation(line: 2858, column: 138, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4785, file: !352, discriminator: 3)
!4794 = !DILocation(line: 2858, column: 156, scope: !4785)
!4795 = !DILocation(line: 2858, column: 166, scope: !4785)
!4796 = !DILocation(line: 2858, column: 191, scope: !4785)
!4797 = !DILocation(line: 2858, column: 122, scope: !4785)
!4798 = !DILocation(line: 2858, column: 210, scope: !4799)
!4799 = !DILexicalBlockFile(scope: !832, file: !352, discriminator: 4)
!4800 = !DILocation(line: 2858, column: 210, scope: !831)
!4801 = !DILocation(line: 2858, column: 210, scope: !4802)
!4802 = !DILexicalBlockFile(scope: !831, file: !352, discriminator: 5)
!4803 = !DILocation(line: 2859, column: 17, scope: !832)
!4804 = !DILocation(line: 2861, column: 57, scope: !827)
!4805 = !DILocation(line: 2861, column: 52, scope: !827)
!4806 = !DILocation(line: 2861, column: 33, scope: !827)
!4807 = !DILocation(line: 2861, column: 15, scope: !827)
!4808 = !DILocation(line: 2861, column: 44, scope: !827)
!4809 = !DILocation(line: 2861, column: 14, scope: !827)
!4810 = !DILocation(line: 2861, column: 55, scope: !827)
!4811 = !DILocation(line: 2862, column: 9, scope: !828)
!4812 = !DILocation(line: 2862, column: 9, scope: !4766)
!4813 = !DILocation(line: 2862, column: 9, scope: !827)
!4814 = !DILocation(line: 2854, column: 29, scope: !828)
!4815 = !DILocation(line: 2854, column: 9, scope: !828)
!4816 = !DILocation(line: 2864, column: 54, scope: !822)
!4817 = !DILocation(line: 2864, column: 42, scope: !822)
!4818 = !DILocation(line: 2864, column: 60, scope: !822)
!4819 = !DILocation(line: 2864, column: 70, scope: !822)
!4820 = !DILocation(line: 2864, column: 74, scope: !822)
!4821 = !DILocation(line: 2864, column: 80, scope: !822)
!4822 = !DILocation(line: 2864, column: 84, scope: !822)
!4823 = !DILocation(line: 2864, column: 87, scope: !822)
!4824 = !DILocation(line: 2864, column: 16, scope: !822)
!4825 = !DILocation(line: 2864, column: 9, scope: !822)
!4826 = !DILocation(line: 2865, column: 5, scope: !823)
!4827 = !DILocation(line: 2866, column: 1, scope: !818)
!4828 = !DILocation(line: 2869, column: 25, scope: !834)
!4829 = !DILocation(line: 2869, column: 39, scope: !834)
!4830 = !DILocation(line: 2871, column: 5, scope: !834)
!4831 = !DILocation(line: 2871, column: 15, scope: !834)
!4832 = !DILocation(line: 2872, column: 5, scope: !834)
!4833 = !DILocation(line: 2872, column: 16, scope: !834)
!4834 = !DILocation(line: 2872, column: 19, scope: !834)
!4835 = !DILocation(line: 2874, column: 27, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !834, file: !352, line: 2874, column: 9)
!4837 = !DILocation(line: 2874, column: 36, scope: !4836)
!4838 = !DILocation(line: 2874, column: 47, scope: !4836)
!4839 = !DILocation(line: 2874, column: 56, scope: !4836)
!4840 = !DILocation(line: 2874, column: 73, scope: !4836)
!4841 = !DILocation(line: 2874, column: 79, scope: !4836)
!4842 = !DILocation(line: 2874, column: 99, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4836, file: !352, discriminator: 1)
!4844 = !DILocation(line: 2874, column: 84, scope: !4836)
!4845 = !DILocation(line: 2874, column: 108, scope: !4836)
!4846 = !DILocation(line: 2874, column: 120, scope: !4836)
!4847 = !DILocation(line: 2874, column: 124, scope: !4836)
!4848 = !DILocation(line: 2874, column: 117, scope: !4836)
!4849 = !DILocation(line: 2874, column: 9, scope: !834)
!4850 = !DILocation(line: 2876, column: 25, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4836, file: !352, line: 2875, column: 5)
!4852 = !DILocation(line: 2876, column: 9, scope: !4851)
!4853 = !DILocation(line: 2877, column: 9, scope: !4851)
!4854 = !DILocation(line: 2880, column: 26, scope: !834)
!4855 = !DILocation(line: 2880, column: 30, scope: !834)
!4856 = !DILocation(line: 2880, column: 11, scope: !834)
!4857 = !DILocation(line: 2880, column: 38, scope: !834)
!4858 = !DILocation(line: 2880, column: 7, scope: !834)
!4859 = !DILocation(line: 2881, column: 11, scope: !846)
!4860 = !DILocation(line: 2881, column: 10, scope: !846)
!4861 = !DILocation(line: 2881, column: 15, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !4863, file: !352, discriminator: 2)
!4863 = !DILexicalBlockFile(scope: !845, file: !352, discriminator: 1)
!4864 = !DILocation(line: 2881, column: 17, scope: !845)
!4865 = !DILocation(line: 2881, column: 21, scope: !845)
!4866 = !DILocation(line: 2881, column: 16, scope: !845)
!4867 = !DILocation(line: 2881, column: 5, scope: !846)
!4868 = !DILocation(line: 2883, column: 9, scope: !844)
!4869 = !DILocation(line: 2883, column: 19, scope: !844)
!4870 = !DILocation(line: 2883, column: 70, scope: !844)
!4871 = !DILocation(line: 2883, column: 53, scope: !844)
!4872 = !DILocation(line: 2883, column: 35, scope: !844)
!4873 = !DILocation(line: 2883, column: 62, scope: !844)
!4874 = !DILocation(line: 2883, column: 34, scope: !844)
!4875 = !DILocation(line: 2884, column: 9, scope: !844)
!4876 = !DILocation(line: 2884, column: 20, scope: !844)
!4877 = !DILocation(line: 2884, column: 45, scope: !844)
!4878 = !DILocation(line: 2884, column: 28, scope: !844)
!4879 = !DILocation(line: 2885, column: 13, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !844, file: !352, line: 2885, column: 13)
!4881 = !DILocation(line: 2885, column: 19, scope: !4880)
!4882 = !DILocation(line: 2885, column: 23, scope: !4880)
!4883 = !DILocation(line: 2885, column: 26, scope: !4884)
!4884 = !DILexicalBlockFile(scope: !4880, file: !352, discriminator: 1)
!4885 = !DILocation(line: 2885, column: 13, scope: !844)
!4886 = !DILocation(line: 2886, column: 13, scope: !4880)
!4887 = !DILocation(line: 2888, column: 13, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !844, file: !352, line: 2888, column: 13)
!4889 = !DILocation(line: 2888, column: 19, scope: !4888)
!4890 = !DILocation(line: 2888, column: 13, scope: !844)
!4891 = !DILocation(line: 2889, column: 19, scope: !4888)
!4892 = !DILocation(line: 2889, column: 13, scope: !4888)
!4893 = !DILocation(line: 2890, column: 18, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4888, file: !352, line: 2890, column: 18)
!4895 = !DILocation(line: 2890, column: 26, scope: !4894)
!4896 = !DILocation(line: 2890, column: 27, scope: !4894)
!4897 = !DILocation(line: 2890, column: 24, scope: !4894)
!4898 = !DILocation(line: 2890, column: 18, scope: !4888)
!4899 = !DILocation(line: 2891, column: 21, scope: !4894)
!4900 = !DILocation(line: 2891, column: 22, scope: !4894)
!4901 = !DILocation(line: 2891, column: 19, scope: !4894)
!4902 = !DILocation(line: 2891, column: 13, scope: !4894)
!4903 = !DILocation(line: 2892, column: 26, scope: !844)
!4904 = !DILocation(line: 2892, column: 21, scope: !844)
!4905 = !DILocation(line: 2892, column: 9, scope: !844)
!4906 = !DILocation(line: 2892, column: 13, scope: !844)
!4907 = !DILocation(line: 2892, column: 24, scope: !844)
!4908 = !DILocation(line: 2893, column: 5, scope: !845)
!4909 = !DILocation(line: 2893, column: 5, scope: !4863)
!4910 = !DILocation(line: 2893, column: 5, scope: !844)
!4911 = !DILocation(line: 2881, column: 25, scope: !845)
!4912 = !DILocation(line: 2881, column: 5, scope: !845)
!4913 = !DILocation(line: 2894, column: 26, scope: !834)
!4914 = !DILocation(line: 2894, column: 30, scope: !834)
!4915 = !DILocation(line: 2894, column: 14, scope: !834)
!4916 = !DILocation(line: 2894, column: 12, scope: !834)
!4917 = !DILocation(line: 2895, column: 9, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !834, file: !352, line: 2895, column: 9)
!4919 = !DILocation(line: 2895, column: 16, scope: !4918)
!4920 = !DILocation(line: 2895, column: 9, scope: !834)
!4921 = !DILocation(line: 2896, column: 9, scope: !4918)
!4922 = !DILocation(line: 2897, column: 11, scope: !851)
!4923 = !DILocation(line: 2897, column: 10, scope: !851)
!4924 = !DILocation(line: 2897, column: 15, scope: !4925)
!4925 = !DILexicalBlockFile(scope: !4926, file: !352, discriminator: 2)
!4926 = !DILexicalBlockFile(scope: !850, file: !352, discriminator: 1)
!4927 = !DILocation(line: 2897, column: 17, scope: !850)
!4928 = !DILocation(line: 2897, column: 21, scope: !850)
!4929 = !DILocation(line: 2897, column: 16, scope: !850)
!4930 = !DILocation(line: 2897, column: 5, scope: !851)
!4931 = !DILocation(line: 2898, column: 9, scope: !849)
!4932 = !DILocation(line: 2898, column: 19, scope: !849)
!4933 = !DILocation(line: 2898, column: 81, scope: !849)
!4934 = !DILocation(line: 2898, column: 69, scope: !849)
!4935 = !DILocation(line: 2898, column: 73, scope: !849)
!4936 = !DILocation(line: 2898, column: 49, scope: !849)
!4937 = !DILocation(line: 2898, column: 53, scope: !849)
!4938 = !DILocation(line: 2898, column: 31, scope: !849)
!4939 = !DILocation(line: 2898, column: 61, scope: !849)
!4940 = !DILocation(line: 2898, column: 30, scope: !849)
!4941 = !DILocation(line: 2899, column: 25, scope: !849)
!4942 = !DILocation(line: 2899, column: 36, scope: !849)
!4943 = !DILocation(line: 2899, column: 45, scope: !849)
!4944 = !DILocation(line: 2900, column: 52, scope: !849)
!4945 = !DILocation(line: 2900, column: 47, scope: !849)
!4946 = !DILocation(line: 2900, column: 29, scope: !849)
!4947 = !DILocation(line: 2900, column: 11, scope: !849)
!4948 = !DILocation(line: 2900, column: 39, scope: !849)
!4949 = !DILocation(line: 2900, column: 10, scope: !849)
!4950 = !DILocation(line: 2900, column: 50, scope: !849)
!4951 = !DILocation(line: 2901, column: 5, scope: !850)
!4952 = !DILocation(line: 2901, column: 5, scope: !849)
!4953 = !DILocation(line: 2897, column: 25, scope: !850)
!4954 = !DILocation(line: 2897, column: 5, scope: !850)
!4955 = !DILocation(line: 2902, column: 5, scope: !834)
!4956 = !DILocation(line: 2902, column: 10, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !853, file: !352, discriminator: 1)
!4958 = !DILocation(line: 2902, column: 20, scope: !853)
!4959 = !DILocation(line: 2902, column: 43, scope: !853)
!4960 = !DILocation(line: 2902, column: 47, scope: !853)
!4961 = !DILocation(line: 2902, column: 60, scope: !857)
!4962 = !DILocation(line: 2902, column: 68, scope: !857)
!4963 = !DILocation(line: 2902, column: 60, scope: !853)
!4964 = !DILocation(line: 2902, column: 86, scope: !4965)
!4965 = !DILexicalBlockFile(scope: !856, file: !352, discriminator: 2)
!4966 = !DILocation(line: 2902, column: 90, scope: !856)
!4967 = !DILocation(line: 2902, column: 98, scope: !856)
!4968 = !DILocation(line: 2902, column: 112, scope: !856)
!4969 = !DILocation(line: 2902, column: 117, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !855, file: !352, discriminator: 4)
!4971 = !DILocation(line: 2902, column: 127, scope: !855)
!4972 = !DILocation(line: 2902, column: 157, scope: !855)
!4973 = !DILocation(line: 2902, column: 175, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !855, file: !352, line: 2902, column: 172)
!4975 = !DILocation(line: 2902, column: 192, scope: !4974)
!4976 = !DILocation(line: 2902, column: 172, scope: !4974)
!4977 = !DILocation(line: 2902, column: 202, scope: !4974)
!4978 = !DILocation(line: 2902, column: 172, scope: !855)
!4979 = !DILocation(line: 2902, column: 172, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !855, file: !352, discriminator: 5)
!4981 = !DILocation(line: 2902, column: 233, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4974, file: !352, discriminator: 6)
!4983 = !DILocation(line: 2902, column: 251, scope: !4974)
!4984 = !DILocation(line: 2902, column: 261, scope: !4974)
!4985 = !DILocation(line: 2902, column: 286, scope: !4974)
!4986 = !DILocation(line: 2902, column: 217, scope: !4974)
!4987 = !DILocation(line: 2902, column: 305, scope: !4988)
!4988 = !DILexicalBlockFile(scope: !856, file: !352, discriminator: 7)
!4989 = !DILocation(line: 2902, column: 305, scope: !855)
!4990 = !DILocation(line: 2902, column: 305, scope: !4991)
!4991 = !DILexicalBlockFile(scope: !855, file: !352, discriminator: 8)
!4992 = !DILocation(line: 2902, column: 318, scope: !4993)
!4993 = !DILexicalBlockFile(scope: !856, file: !352, discriminator: 9)
!4994 = !DILocation(line: 2902, column: 320, scope: !4995)
!4995 = !DILexicalBlockFile(scope: !4996, file: !352, discriminator: 10)
!4996 = !DILexicalBlockFile(scope: !834, file: !352, discriminator: 3)
!4997 = !DILocation(line: 2902, column: 320, scope: !853)
!4998 = !DILocation(line: 2902, column: 320, scope: !4999)
!4999 = !DILexicalBlockFile(scope: !853, file: !352, discriminator: 11)
!5000 = !DILocation(line: 2903, column: 18, scope: !834)
!5001 = !DILocation(line: 2903, column: 5, scope: !834)
!5002 = !DILocation(line: 2903, column: 9, scope: !834)
!5003 = !DILocation(line: 2903, column: 16, scope: !834)
!5004 = !DILocation(line: 2904, column: 58, scope: !834)
!5005 = !DILocation(line: 2904, column: 5, scope: !834)
!5006 = !DILocation(line: 2905, column: 1, scope: !834)
!5007 = !DILocation(line: 2744, column: 23, scope: !858)
!5008 = !DILocation(line: 2744, column: 33, scope: !858)
!5009 = !DILocation(line: 2746, column: 5, scope: !858)
!5010 = !DILocation(line: 2746, column: 16, scope: !858)
!5011 = !DILocation(line: 2748, column: 9, scope: !858)
!5012 = !DILocation(line: 2749, column: 12, scope: !858)
!5013 = !DILocation(line: 2749, column: 16, scope: !858)
!5014 = !DILocation(line: 2749, column: 18, scope: !858)
!5015 = !DILocation(line: 2749, column: 9, scope: !858)
!5016 = !DILocation(line: 2750, column: 31, scope: !858)
!5017 = !DILocation(line: 2750, column: 12, scope: !858)
!5018 = !DILocation(line: 2751, column: 1, scope: !858)
!5019 = !DILocation(line: 2750, column: 5, scope: !858)
!5020 = !DILocation(line: 911, column: 28, scope: !882)
!5021 = !DILocation(line: 913, column: 25, scope: !882)
!5022 = !DILocation(line: 913, column: 5, scope: !882)
!5023 = !DILocation(line: 914, column: 5, scope: !882)
!5024 = !DILocation(line: 914, column: 10, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !888, file: !352, discriminator: 1)
!5026 = !DILocation(line: 914, column: 20, scope: !888)
!5027 = !DILocation(line: 914, column: 51, scope: !888)
!5028 = !DILocation(line: 914, column: 55, scope: !888)
!5029 = !{!5030, !2680, i64 24}
!5030 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2692, i64 32}
!5031 = !DILocation(line: 914, column: 67, scope: !891)
!5032 = !DILocation(line: 914, column: 83, scope: !891)
!5033 = !DILocation(line: 914, column: 67, scope: !888)
!5034 = !DILocation(line: 914, column: 98, scope: !5035)
!5035 = !DILexicalBlockFile(scope: !891, file: !352, discriminator: 2)
!5036 = !DILocation(line: 914, column: 103, scope: !5037)
!5037 = !DILexicalBlockFile(scope: !890, file: !352, discriminator: 4)
!5038 = !DILocation(line: 914, column: 113, scope: !890)
!5039 = !DILocation(line: 914, column: 143, scope: !890)
!5040 = !DILocation(line: 914, column: 169, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !890, file: !352, line: 914, column: 166)
!5042 = !DILocation(line: 914, column: 186, scope: !5041)
!5043 = !DILocation(line: 914, column: 166, scope: !5041)
!5044 = !DILocation(line: 914, column: 196, scope: !5041)
!5045 = !DILocation(line: 914, column: 166, scope: !890)
!5046 = !DILocation(line: 914, column: 166, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !890, file: !352, discriminator: 5)
!5048 = !DILocation(line: 914, column: 227, scope: !5049)
!5049 = !DILexicalBlockFile(scope: !5041, file: !352, discriminator: 6)
!5050 = !DILocation(line: 914, column: 245, scope: !5041)
!5051 = !DILocation(line: 914, column: 255, scope: !5041)
!5052 = !DILocation(line: 914, column: 280, scope: !5041)
!5053 = !DILocation(line: 914, column: 211, scope: !5041)
!5054 = !DILocation(line: 914, column: 299, scope: !5055)
!5055 = !DILexicalBlockFile(scope: !891, file: !352, discriminator: 7)
!5056 = !DILocation(line: 914, column: 299, scope: !890)
!5057 = !DILocation(line: 914, column: 299, scope: !5058)
!5058 = !DILexicalBlockFile(scope: !890, file: !352, discriminator: 8)
!5059 = !DILocation(line: 914, column: 299, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !890, file: !352, discriminator: 9)
!5061 = !DILocation(line: 914, column: 312, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !5063, file: !352, discriminator: 10)
!5063 = !DILexicalBlockFile(scope: !882, file: !352, discriminator: 3)
!5064 = !DILocation(line: 914, column: 312, scope: !888)
!5065 = !DILocation(line: 915, column: 5, scope: !882)
!5066 = !DILocation(line: 915, column: 10, scope: !5067)
!5067 = !DILexicalBlockFile(scope: !893, file: !352, discriminator: 1)
!5068 = !DILocation(line: 915, column: 20, scope: !893)
!5069 = !DILocation(line: 915, column: 51, scope: !893)
!5070 = !DILocation(line: 915, column: 55, scope: !893)
!5071 = !{!5030, !2680, i64 16}
!5072 = !DILocation(line: 915, column: 64, scope: !896)
!5073 = !DILocation(line: 915, column: 80, scope: !896)
!5074 = !DILocation(line: 915, column: 64, scope: !893)
!5075 = !DILocation(line: 915, column: 95, scope: !5076)
!5076 = !DILexicalBlockFile(scope: !896, file: !352, discriminator: 2)
!5077 = !DILocation(line: 915, column: 100, scope: !5078)
!5078 = !DILexicalBlockFile(scope: !895, file: !352, discriminator: 4)
!5079 = !DILocation(line: 915, column: 110, scope: !895)
!5080 = !DILocation(line: 915, column: 140, scope: !895)
!5081 = !DILocation(line: 915, column: 166, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !895, file: !352, line: 915, column: 163)
!5083 = !DILocation(line: 915, column: 183, scope: !5082)
!5084 = !DILocation(line: 915, column: 163, scope: !5082)
!5085 = !DILocation(line: 915, column: 193, scope: !5082)
!5086 = !DILocation(line: 915, column: 163, scope: !895)
!5087 = !DILocation(line: 915, column: 163, scope: !5088)
!5088 = !DILexicalBlockFile(scope: !895, file: !352, discriminator: 5)
!5089 = !DILocation(line: 915, column: 224, scope: !5090)
!5090 = !DILexicalBlockFile(scope: !5082, file: !352, discriminator: 6)
!5091 = !DILocation(line: 915, column: 242, scope: !5082)
!5092 = !DILocation(line: 915, column: 252, scope: !5082)
!5093 = !DILocation(line: 915, column: 277, scope: !5082)
!5094 = !DILocation(line: 915, column: 208, scope: !5082)
!5095 = !DILocation(line: 915, column: 296, scope: !5096)
!5096 = !DILexicalBlockFile(scope: !896, file: !352, discriminator: 7)
!5097 = !DILocation(line: 915, column: 296, scope: !895)
!5098 = !DILocation(line: 915, column: 296, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !895, file: !352, discriminator: 8)
!5100 = !DILocation(line: 915, column: 296, scope: !5101)
!5101 = !DILexicalBlockFile(scope: !895, file: !352, discriminator: 9)
!5102 = !DILocation(line: 915, column: 309, scope: !5062)
!5103 = !DILocation(line: 915, column: 309, scope: !893)
!5104 = !DILocation(line: 916, column: 19, scope: !882)
!5105 = !DILocation(line: 916, column: 7, scope: !882)
!5106 = !DILocation(line: 916, column: 25, scope: !882)
!5107 = !DILocation(line: 916, column: 35, scope: !882)
!5108 = !DILocation(line: 916, column: 43, scope: !882)
!5109 = !DILocation(line: 916, column: 5, scope: !882)
!5110 = !DILocation(line: 917, column: 1, scope: !882)
!5111 = !DILocation(line: 920, column: 29, scope: !897)
!5112 = !DILocation(line: 920, column: 43, scope: !897)
!5113 = !DILocation(line: 920, column: 56, scope: !897)
!5114 = !DILocation(line: 922, column: 5, scope: !897)
!5115 = !DILocation(line: 922, column: 14, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !906, file: !352, discriminator: 1)
!5117 = !DILocation(line: 922, column: 18, scope: !906)
!5118 = !DILocation(line: 922, column: 14, scope: !906)
!5119 = !DILocation(line: 922, column: 14, scope: !907)
!5120 = !DILocation(line: 922, column: 24, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !905, file: !352, discriminator: 2)
!5122 = !DILocation(line: 922, column: 28, scope: !905)
!5123 = !DILocation(line: 922, column: 35, scope: !905)
!5124 = !DILocation(line: 922, column: 54, scope: !905)
!5125 = !DILocation(line: 922, column: 58, scope: !905)
!5126 = !DILocation(line: 922, column: 63, scope: !905)
!5127 = !DILocation(line: 922, column: 73, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !905, file: !352, line: 922, column: 73)
!5129 = !DILocation(line: 922, column: 73, scope: !905)
!5130 = !DILocation(line: 922, column: 86, scope: !5131)
!5131 = !DILexicalBlockFile(scope: !5128, file: !352, discriminator: 4)
!5132 = !DILocation(line: 922, column: 79, scope: !5128)
!5133 = !DILocation(line: 922, column: 92, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !906, file: !352, discriminator: 5)
!5135 = !DILocation(line: 922, column: 92, scope: !5136)
!5136 = !DILexicalBlockFile(scope: !5137, file: !352, discriminator: 7)
!5137 = !DILexicalBlockFile(scope: !906, file: !352, discriminator: 6)
!5138 = !DILocation(line: 922, column: 92, scope: !905)
!5139 = !DILocation(line: 922, column: 94, scope: !5140)
!5140 = !DILexicalBlockFile(scope: !5141, file: !352, discriminator: 8)
!5141 = !DILexicalBlockFile(scope: !907, file: !352, discriminator: 3)
!5142 = !DILocation(line: 923, column: 5, scope: !897)
!5143 = !DILocation(line: 923, column: 14, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !910, file: !352, discriminator: 1)
!5145 = !DILocation(line: 923, column: 18, scope: !910)
!5146 = !DILocation(line: 923, column: 14, scope: !910)
!5147 = !DILocation(line: 923, column: 14, scope: !911)
!5148 = !DILocation(line: 923, column: 27, scope: !5149)
!5149 = !DILexicalBlockFile(scope: !909, file: !352, discriminator: 2)
!5150 = !DILocation(line: 923, column: 31, scope: !909)
!5151 = !DILocation(line: 923, column: 38, scope: !909)
!5152 = !DILocation(line: 923, column: 57, scope: !909)
!5153 = !DILocation(line: 923, column: 61, scope: !909)
!5154 = !DILocation(line: 923, column: 69, scope: !909)
!5155 = !DILocation(line: 923, column: 79, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !909, file: !352, line: 923, column: 79)
!5157 = !DILocation(line: 923, column: 79, scope: !909)
!5158 = !DILocation(line: 923, column: 92, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !5156, file: !352, discriminator: 4)
!5160 = !DILocation(line: 923, column: 85, scope: !5156)
!5161 = !DILocation(line: 923, column: 98, scope: !5162)
!5162 = !DILexicalBlockFile(scope: !910, file: !352, discriminator: 5)
!5163 = !DILocation(line: 923, column: 98, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !5165, file: !352, discriminator: 7)
!5165 = !DILexicalBlockFile(scope: !910, file: !352, discriminator: 6)
!5166 = !DILocation(line: 923, column: 98, scope: !909)
!5167 = !DILocation(line: 923, column: 100, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !5169, file: !352, discriminator: 8)
!5169 = !DILexicalBlockFile(scope: !911, file: !352, discriminator: 3)
!5170 = !DILocation(line: 924, column: 5, scope: !897)
!5171 = !DILocation(line: 925, column: 1, scope: !897)
!5172 = !DILocation(line: 928, column: 25, scope: !912)
!5173 = !DILocation(line: 930, column: 5, scope: !912)
!5174 = !DILocation(line: 930, column: 15, scope: !912)
!5175 = !DILocation(line: 931, column: 5, scope: !912)
!5176 = !DILocation(line: 931, column: 15, scope: !912)
!5177 = !DILocation(line: 932, column: 5, scope: !912)
!5178 = !DILocation(line: 932, column: 15, scope: !912)
!5179 = !DILocation(line: 934, column: 5, scope: !912)
!5180 = !DILocation(line: 934, column: 5, scope: !5181)
!5181 = !DILexicalBlockFile(scope: !5182, file: !352, discriminator: 2)
!5182 = !DILexicalBlockFile(scope: !912, file: !352, discriminator: 1)
!5183 = !DILocation(line: 935, column: 28, scope: !926)
!5184 = !DILocation(line: 935, column: 32, scope: !926)
!5185 = !DILocation(line: 935, column: 16, scope: !926)
!5186 = !DILocation(line: 935, column: 14, scope: !926)
!5187 = !DILocation(line: 936, column: 13, scope: !925)
!5188 = !DILocation(line: 936, column: 18, scope: !925)
!5189 = !DILocation(line: 936, column: 13, scope: !926)
!5190 = !DILocation(line: 937, column: 18, scope: !923)
!5191 = !DILocation(line: 937, column: 22, scope: !923)
!5192 = !{!5030, !2692, i64 32}
!5193 = !DILocation(line: 937, column: 32, scope: !923)
!5194 = !DILocation(line: 937, column: 49, scope: !5195)
!5195 = !DILexicalBlockFile(scope: !923, file: !352, discriminator: 1)
!5196 = !DILocation(line: 937, column: 53, scope: !923)
!5197 = !DILocation(line: 937, column: 60, scope: !923)
!5198 = !DILocation(line: 937, column: 35, scope: !923)
!5199 = !DILocation(line: 937, column: 17, scope: !924)
!5200 = !DILocation(line: 938, column: 17, scope: !922)
!5201 = !DILocation(line: 938, column: 22, scope: !5202)
!5202 = !DILexicalBlockFile(scope: !921, file: !352, discriminator: 1)
!5203 = !DILocation(line: 938, column: 32, scope: !921)
!5204 = !DILocation(line: 938, column: 62, scope: !921)
!5205 = !DILocation(line: 938, column: 77, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !921, file: !352, line: 938, column: 74)
!5207 = !DILocation(line: 938, column: 94, scope: !5206)
!5208 = !DILocation(line: 938, column: 74, scope: !5206)
!5209 = !DILocation(line: 938, column: 104, scope: !5206)
!5210 = !DILocation(line: 938, column: 74, scope: !921)
!5211 = !DILocation(line: 938, column: 74, scope: !5212)
!5212 = !DILexicalBlockFile(scope: !921, file: !352, discriminator: 2)
!5213 = !DILocation(line: 938, column: 135, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5206, file: !352, discriminator: 3)
!5215 = !DILocation(line: 938, column: 153, scope: !5206)
!5216 = !DILocation(line: 938, column: 163, scope: !5206)
!5217 = !DILocation(line: 938, column: 188, scope: !5206)
!5218 = !DILocation(line: 938, column: 119, scope: !5206)
!5219 = !DILocation(line: 938, column: 207, scope: !5220)
!5220 = !DILexicalBlockFile(scope: !922, file: !352, discriminator: 4)
!5221 = !DILocation(line: 938, column: 207, scope: !921)
!5222 = !DILocation(line: 938, column: 207, scope: !5223)
!5223 = !DILexicalBlockFile(scope: !921, file: !352, discriminator: 5)
!5224 = !DILocation(line: 939, column: 17, scope: !922)
!5225 = !DILocation(line: 941, column: 20, scope: !924)
!5226 = !DILocation(line: 941, column: 13, scope: !924)
!5227 = !DILocation(line: 943, column: 13, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !926, file: !352, line: 943, column: 13)
!5229 = !DILocation(line: 943, column: 13, scope: !926)
!5230 = !DILocation(line: 944, column: 40, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !352, line: 944, column: 17)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !352, line: 943, column: 31)
!5233 = !DILocation(line: 944, column: 17, scope: !5231)
!5234 = !DILocation(line: 944, column: 17, scope: !5232)
!5235 = !DILocation(line: 945, column: 17, scope: !5231)
!5236 = !DILocation(line: 947, column: 17, scope: !5231)
!5237 = !DILocation(line: 948, column: 9, scope: !5232)
!5238 = !DILocation(line: 949, column: 25, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !926, file: !352, line: 949, column: 13)
!5240 = !DILocation(line: 949, column: 29, scope: !5239)
!5241 = !DILocation(line: 949, column: 13, scope: !5239)
!5242 = !DILocation(line: 949, column: 36, scope: !5239)
!5243 = !DILocation(line: 949, column: 13, scope: !926)
!5244 = !DILocation(line: 950, column: 13, scope: !5239)
!5245 = !DILocation(line: 951, column: 31, scope: !926)
!5246 = !DILocation(line: 951, column: 35, scope: !926)
!5247 = !DILocation(line: 951, column: 14, scope: !926)
!5248 = !DILocation(line: 951, column: 12, scope: !926)
!5249 = !DILocation(line: 952, column: 13, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !926, file: !352, line: 952, column: 13)
!5251 = !DILocation(line: 952, column: 16, scope: !5250)
!5252 = !DILocation(line: 952, column: 13, scope: !926)
!5253 = !DILocation(line: 953, column: 13, scope: !5250)
!5254 = !DILocation(line: 954, column: 15, scope: !926)
!5255 = !DILocation(line: 954, column: 19, scope: !926)
!5256 = !DILocation(line: 954, column: 13, scope: !926)
!5257 = !DILocation(line: 955, column: 18, scope: !926)
!5258 = !DILocation(line: 955, column: 9, scope: !926)
!5259 = !DILocation(line: 955, column: 13, scope: !926)
!5260 = !DILocation(line: 955, column: 16, scope: !926)
!5261 = !DILocation(line: 956, column: 9, scope: !926)
!5262 = !DILocation(line: 956, column: 13, scope: !926)
!5263 = !DILocation(line: 956, column: 23, scope: !926)
!5264 = !DILocation(line: 957, column: 9, scope: !926)
!5265 = !DILocation(line: 957, column: 14, scope: !5266)
!5266 = !DILexicalBlockFile(scope: !928, file: !352, discriminator: 1)
!5267 = !DILocation(line: 957, column: 24, scope: !928)
!5268 = !DILocation(line: 957, column: 54, scope: !928)
!5269 = !DILocation(line: 957, column: 68, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !928, file: !352, line: 957, column: 65)
!5271 = !DILocation(line: 957, column: 85, scope: !5270)
!5272 = !DILocation(line: 957, column: 65, scope: !5270)
!5273 = !DILocation(line: 957, column: 95, scope: !5270)
!5274 = !DILocation(line: 957, column: 65, scope: !928)
!5275 = !DILocation(line: 957, column: 65, scope: !5276)
!5276 = !DILexicalBlockFile(scope: !928, file: !352, discriminator: 2)
!5277 = !DILocation(line: 957, column: 126, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5270, file: !352, discriminator: 3)
!5279 = !DILocation(line: 957, column: 144, scope: !5270)
!5280 = !DILocation(line: 957, column: 154, scope: !5270)
!5281 = !DILocation(line: 957, column: 179, scope: !5270)
!5282 = !DILocation(line: 957, column: 110, scope: !5270)
!5283 = !DILocation(line: 957, column: 198, scope: !5284)
!5284 = !DILexicalBlockFile(scope: !926, file: !352, discriminator: 4)
!5285 = !DILocation(line: 957, column: 198, scope: !928)
!5286 = !DILocation(line: 957, column: 198, scope: !5287)
!5287 = !DILexicalBlockFile(scope: !928, file: !352, discriminator: 5)
!5288 = !DILocation(line: 959, column: 1, scope: !912)
!5289 = !DILocation(line: 872, column: 25, scope: !948)
!5290 = !DILocation(line: 872, column: 41, scope: !948)
!5291 = !DILocation(line: 872, column: 57, scope: !948)
!5292 = !DILocation(line: 874, column: 5, scope: !948)
!5293 = !DILocation(line: 874, column: 15, scope: !948)
!5294 = !DILocation(line: 875, column: 5, scope: !948)
!5295 = !DILocation(line: 875, column: 15, scope: !948)
!5296 = !DILocation(line: 876, column: 5, scope: !948)
!5297 = !DILocation(line: 876, column: 15, scope: !948)
!5298 = !DILocation(line: 877, column: 5, scope: !948)
!5299 = !DILocation(line: 877, column: 18, scope: !948)
!5300 = !DILocation(line: 879, column: 9, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !948, file: !352, line: 879, column: 9)
!5302 = !DILocation(line: 879, column: 14, scope: !5301)
!5303 = !DILocation(line: 879, column: 29, scope: !5301)
!5304 = !DILocation(line: 879, column: 62, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !5301, file: !352, discriminator: 1)
!5306 = !DILocation(line: 879, column: 33, scope: !5301)
!5307 = !DILocation(line: 879, column: 9, scope: !948)
!5308 = !DILocation(line: 880, column: 9, scope: !5301)
!5309 = !DILocation(line: 882, column: 28, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !948, file: !352, line: 882, column: 9)
!5311 = !DILocation(line: 882, column: 10, scope: !5310)
!5312 = !DILocation(line: 882, column: 9, scope: !948)
!5313 = !DILocation(line: 883, column: 9, scope: !5310)
!5314 = !DILocation(line: 886, column: 27, scope: !948)
!5315 = !DILocation(line: 886, column: 10, scope: !948)
!5316 = !DILocation(line: 886, column: 8, scope: !948)
!5317 = !DILocation(line: 887, column: 9, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !948, file: !352, line: 887, column: 9)
!5319 = !DILocation(line: 887, column: 12, scope: !5318)
!5320 = !DILocation(line: 887, column: 9, scope: !948)
!5321 = !DILocation(line: 888, column: 9, scope: !5318)
!5322 = !DILocation(line: 890, column: 13, scope: !948)
!5323 = !DILocation(line: 890, column: 11, scope: !948)
!5324 = !DILocation(line: 891, column: 9, scope: !960)
!5325 = !DILocation(line: 891, column: 15, scope: !960)
!5326 = !DILocation(line: 891, column: 9, scope: !948)
!5327 = !DILocation(line: 892, column: 9, scope: !959)
!5328 = !DILocation(line: 892, column: 14, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !958, file: !352, discriminator: 1)
!5330 = !DILocation(line: 892, column: 24, scope: !958)
!5331 = !DILocation(line: 892, column: 54, scope: !958)
!5332 = !DILocation(line: 892, column: 67, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !958, file: !352, line: 892, column: 64)
!5334 = !DILocation(line: 892, column: 84, scope: !5333)
!5335 = !DILocation(line: 892, column: 64, scope: !5333)
!5336 = !DILocation(line: 892, column: 94, scope: !5333)
!5337 = !DILocation(line: 892, column: 64, scope: !958)
!5338 = !DILocation(line: 892, column: 64, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !958, file: !352, discriminator: 2)
!5340 = !DILocation(line: 892, column: 125, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5333, file: !352, discriminator: 3)
!5342 = !DILocation(line: 892, column: 143, scope: !5333)
!5343 = !DILocation(line: 892, column: 153, scope: !5333)
!5344 = !DILocation(line: 892, column: 178, scope: !5333)
!5345 = !DILocation(line: 892, column: 109, scope: !5333)
!5346 = !DILocation(line: 892, column: 197, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !959, file: !352, discriminator: 4)
!5348 = !DILocation(line: 892, column: 197, scope: !958)
!5349 = !DILocation(line: 892, column: 197, scope: !5350)
!5350 = !DILexicalBlockFile(scope: !958, file: !352, discriminator: 5)
!5351 = !DILocation(line: 893, column: 9, scope: !959)
!5352 = !DILocation(line: 897, column: 25, scope: !948)
!5353 = !DILocation(line: 897, column: 31, scope: !948)
!5354 = !DILocation(line: 897, column: 40, scope: !948)
!5355 = !DILocation(line: 897, column: 10, scope: !948)
!5356 = !DILocation(line: 897, column: 8, scope: !948)
!5357 = !DILocation(line: 898, column: 9, scope: !964)
!5358 = !DILocation(line: 898, column: 12, scope: !964)
!5359 = !DILocation(line: 898, column: 9, scope: !948)
!5360 = !DILocation(line: 899, column: 9, scope: !963)
!5361 = !DILocation(line: 899, column: 14, scope: !5362)
!5362 = !DILexicalBlockFile(scope: !962, file: !352, discriminator: 1)
!5363 = !DILocation(line: 899, column: 24, scope: !962)
!5364 = !DILocation(line: 899, column: 54, scope: !962)
!5365 = !DILocation(line: 899, column: 67, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !962, file: !352, line: 899, column: 64)
!5367 = !DILocation(line: 899, column: 84, scope: !5366)
!5368 = !DILocation(line: 899, column: 64, scope: !5366)
!5369 = !DILocation(line: 899, column: 94, scope: !5366)
!5370 = !DILocation(line: 899, column: 64, scope: !962)
!5371 = !DILocation(line: 899, column: 64, scope: !5372)
!5372 = !DILexicalBlockFile(scope: !962, file: !352, discriminator: 2)
!5373 = !DILocation(line: 899, column: 125, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5366, file: !352, discriminator: 3)
!5375 = !DILocation(line: 899, column: 143, scope: !5366)
!5376 = !DILocation(line: 899, column: 153, scope: !5366)
!5377 = !DILocation(line: 899, column: 178, scope: !5366)
!5378 = !DILocation(line: 899, column: 109, scope: !5366)
!5379 = !DILocation(line: 899, column: 197, scope: !5380)
!5380 = !DILexicalBlockFile(scope: !963, file: !352, discriminator: 4)
!5381 = !DILocation(line: 899, column: 197, scope: !962)
!5382 = !DILocation(line: 899, column: 197, scope: !5383)
!5383 = !DILexicalBlockFile(scope: !962, file: !352, discriminator: 5)
!5384 = !DILocation(line: 900, column: 9, scope: !963)
!5385 = !DILocation(line: 900, column: 14, scope: !5386)
!5386 = !DILexicalBlockFile(scope: !966, file: !352, discriminator: 1)
!5387 = !DILocation(line: 900, column: 24, scope: !966)
!5388 = !DILocation(line: 900, column: 54, scope: !966)
!5389 = !DILocation(line: 900, column: 70, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !966, file: !352, line: 900, column: 67)
!5391 = !DILocation(line: 900, column: 87, scope: !5390)
!5392 = !DILocation(line: 900, column: 67, scope: !5390)
!5393 = !DILocation(line: 900, column: 97, scope: !5390)
!5394 = !DILocation(line: 900, column: 67, scope: !966)
!5395 = !DILocation(line: 900, column: 67, scope: !5396)
!5396 = !DILexicalBlockFile(scope: !966, file: !352, discriminator: 2)
!5397 = !DILocation(line: 900, column: 128, scope: !5398)
!5398 = !DILexicalBlockFile(scope: !5390, file: !352, discriminator: 3)
!5399 = !DILocation(line: 900, column: 146, scope: !5390)
!5400 = !DILocation(line: 900, column: 156, scope: !5390)
!5401 = !DILocation(line: 900, column: 181, scope: !5390)
!5402 = !DILocation(line: 900, column: 112, scope: !5390)
!5403 = !DILocation(line: 900, column: 200, scope: !5380)
!5404 = !DILocation(line: 900, column: 200, scope: !966)
!5405 = !DILocation(line: 900, column: 200, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !966, file: !352, discriminator: 5)
!5407 = !DILocation(line: 901, column: 9, scope: !963)
!5408 = !DILocation(line: 903, column: 14, scope: !948)
!5409 = !DILocation(line: 903, column: 5, scope: !948)
!5410 = !DILocation(line: 903, column: 9, scope: !948)
!5411 = !DILocation(line: 903, column: 12, scope: !948)
!5412 = !DILocation(line: 904, column: 17, scope: !948)
!5413 = !DILocation(line: 904, column: 5, scope: !948)
!5414 = !DILocation(line: 904, column: 9, scope: !948)
!5415 = !DILocation(line: 904, column: 15, scope: !948)
!5416 = !DILocation(line: 905, column: 5, scope: !948)
!5417 = !DILocation(line: 905, column: 9, scope: !948)
!5418 = !DILocation(line: 905, column: 19, scope: !948)
!5419 = !DILocation(line: 907, column: 24, scope: !948)
!5420 = !DILocation(line: 907, column: 12, scope: !948)
!5421 = !DILocation(line: 907, column: 5, scope: !948)
!5422 = !DILocation(line: 908, column: 1, scope: !948)
!5423 = !DILocation(line: 962, column: 27, scope: !929)
!5424 = !DILocation(line: 967, column: 52, scope: !929)
!5425 = !DILocation(line: 967, column: 40, scope: !929)
!5426 = !DILocation(line: 967, column: 58, scope: !929)
!5427 = !DILocation(line: 968, column: 9, scope: !929)
!5428 = !DILocation(line: 968, column: 13, scope: !929)
!5429 = !DILocation(line: 968, column: 17, scope: !929)
!5430 = !DILocation(line: 968, column: 21, scope: !929)
!5431 = !DILocation(line: 968, column: 28, scope: !929)
!5432 = !DILocation(line: 968, column: 32, scope: !929)
!5433 = !DILocation(line: 967, column: 12, scope: !929)
!5434 = !DILocation(line: 967, column: 5, scope: !929)
!5435 = !DILocation(line: 972, column: 29, scope: !932)
!5436 = !DILocation(line: 972, column: 43, scope: !932)
!5437 = !DILocation(line: 974, column: 5, scope: !932)
!5438 = !DILocation(line: 974, column: 15, scope: !932)
!5439 = !DILocation(line: 975, column: 5, scope: !932)
!5440 = !DILocation(line: 975, column: 9, scope: !932)
!5441 = !DILocation(line: 976, column: 27, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !932, file: !352, line: 976, column: 9)
!5443 = !DILocation(line: 976, column: 10, scope: !5442)
!5444 = !DILocation(line: 976, column: 9, scope: !932)
!5445 = !DILocation(line: 977, column: 9, scope: !5442)
!5446 = !DILocation(line: 978, column: 5, scope: !932)
!5447 = !DILocation(line: 978, column: 10, scope: !5448)
!5448 = !DILexicalBlockFile(scope: !941, file: !352, discriminator: 1)
!5449 = !DILocation(line: 978, column: 20, scope: !941)
!5450 = !DILocation(line: 978, column: 43, scope: !941)
!5451 = !DILocation(line: 978, column: 47, scope: !941)
!5452 = !DILocation(line: 978, column: 59, scope: !945)
!5453 = !DILocation(line: 978, column: 67, scope: !945)
!5454 = !DILocation(line: 978, column: 59, scope: !941)
!5455 = !DILocation(line: 978, column: 85, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !944, file: !352, discriminator: 2)
!5457 = !DILocation(line: 978, column: 89, scope: !944)
!5458 = !DILocation(line: 978, column: 96, scope: !944)
!5459 = !DILocation(line: 978, column: 110, scope: !944)
!5460 = !DILocation(line: 978, column: 115, scope: !5461)
!5461 = !DILexicalBlockFile(scope: !943, file: !352, discriminator: 4)
!5462 = !DILocation(line: 978, column: 125, scope: !943)
!5463 = !DILocation(line: 978, column: 155, scope: !943)
!5464 = !DILocation(line: 978, column: 173, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !943, file: !352, line: 978, column: 170)
!5466 = !DILocation(line: 978, column: 190, scope: !5465)
!5467 = !DILocation(line: 978, column: 170, scope: !5465)
!5468 = !DILocation(line: 978, column: 200, scope: !5465)
!5469 = !DILocation(line: 978, column: 170, scope: !943)
!5470 = !DILocation(line: 978, column: 170, scope: !5471)
!5471 = !DILexicalBlockFile(scope: !943, file: !352, discriminator: 5)
!5472 = !DILocation(line: 978, column: 231, scope: !5473)
!5473 = !DILexicalBlockFile(scope: !5465, file: !352, discriminator: 6)
!5474 = !DILocation(line: 978, column: 249, scope: !5465)
!5475 = !DILocation(line: 978, column: 259, scope: !5465)
!5476 = !DILocation(line: 978, column: 284, scope: !5465)
!5477 = !DILocation(line: 978, column: 215, scope: !5465)
!5478 = !DILocation(line: 978, column: 303, scope: !5479)
!5479 = !DILexicalBlockFile(scope: !944, file: !352, discriminator: 7)
!5480 = !DILocation(line: 978, column: 303, scope: !943)
!5481 = !DILocation(line: 978, column: 303, scope: !5482)
!5482 = !DILexicalBlockFile(scope: !943, file: !352, discriminator: 8)
!5483 = !DILocation(line: 978, column: 316, scope: !5484)
!5484 = !DILexicalBlockFile(scope: !944, file: !352, discriminator: 9)
!5485 = !DILocation(line: 978, column: 318, scope: !5486)
!5486 = !DILexicalBlockFile(scope: !5487, file: !352, discriminator: 10)
!5487 = !DILexicalBlockFile(scope: !932, file: !352, discriminator: 3)
!5488 = !DILocation(line: 978, column: 318, scope: !941)
!5489 = !DILocation(line: 978, column: 318, scope: !5490)
!5490 = !DILexicalBlockFile(scope: !941, file: !352, discriminator: 11)
!5491 = !DILocation(line: 979, column: 17, scope: !932)
!5492 = !DILocation(line: 979, column: 5, scope: !932)
!5493 = !DILocation(line: 979, column: 9, scope: !932)
!5494 = !DILocation(line: 979, column: 15, scope: !932)
!5495 = !DILocation(line: 980, column: 5, scope: !932)
!5496 = !DILocation(line: 980, column: 10, scope: !5497)
!5497 = !DILexicalBlockFile(scope: !947, file: !352, discriminator: 1)
!5498 = !DILocation(line: 980, column: 20, scope: !947)
!5499 = !DILocation(line: 980, column: 51, scope: !947)
!5500 = !DILocation(line: 980, column: 55, scope: !947)
!5501 = !DILocation(line: 980, column: 67, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !947, file: !352, line: 980, column: 67)
!5503 = !DILocation(line: 980, column: 83, scope: !5502)
!5504 = !DILocation(line: 980, column: 67, scope: !947)
!5505 = !DILocation(line: 980, column: 114, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5502, file: !352, discriminator: 2)
!5507 = !DILocation(line: 980, column: 133, scope: !5502)
!5508 = !DILocation(line: 980, column: 142, scope: !5502)
!5509 = !DILocation(line: 980, column: 98, scope: !5502)
!5510 = !DILocation(line: 980, column: 147, scope: !5511)
!5511 = !DILexicalBlockFile(scope: !5487, file: !352, discriminator: 4)
!5512 = !DILocation(line: 980, column: 147, scope: !947)
!5513 = !DILocation(line: 980, column: 147, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !947, file: !352, discriminator: 5)
!5515 = !DILocation(line: 981, column: 21, scope: !932)
!5516 = !DILocation(line: 981, column: 31, scope: !932)
!5517 = !DILocation(line: 981, column: 5, scope: !932)
!5518 = !DILocation(line: 981, column: 9, scope: !932)
!5519 = !DILocation(line: 981, column: 19, scope: !932)
!5520 = !DILocation(line: 982, column: 58, scope: !932)
!5521 = !DILocation(line: 982, column: 5, scope: !932)
!5522 = !DILocation(line: 983, column: 1, scope: !932)
!5523 = !DILocation(line: 1088, column: 36, scope: !967)
!5524 = !DILocation(line: 1090, column: 25, scope: !967)
!5525 = !DILocation(line: 1090, column: 5, scope: !967)
!5526 = !DILocation(line: 1091, column: 5, scope: !967)
!5527 = !DILocation(line: 1091, column: 10, scope: !5528)
!5528 = !DILexicalBlockFile(scope: !973, file: !352, discriminator: 1)
!5529 = !DILocation(line: 1091, column: 20, scope: !973)
!5530 = !DILocation(line: 1091, column: 51, scope: !973)
!5531 = !DILocation(line: 1091, column: 55, scope: !973)
!5532 = !{!5533, !2680, i64 16}
!5533 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2677, i64 32}
!5534 = !DILocation(line: 1091, column: 66, scope: !976)
!5535 = !DILocation(line: 1091, column: 82, scope: !976)
!5536 = !DILocation(line: 1091, column: 66, scope: !973)
!5537 = !DILocation(line: 1091, column: 97, scope: !5538)
!5538 = !DILexicalBlockFile(scope: !976, file: !352, discriminator: 2)
!5539 = !DILocation(line: 1091, column: 102, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !975, file: !352, discriminator: 4)
!5541 = !DILocation(line: 1091, column: 112, scope: !975)
!5542 = !DILocation(line: 1091, column: 142, scope: !975)
!5543 = !DILocation(line: 1091, column: 168, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !975, file: !352, line: 1091, column: 165)
!5545 = !DILocation(line: 1091, column: 185, scope: !5544)
!5546 = !DILocation(line: 1091, column: 165, scope: !5544)
!5547 = !DILocation(line: 1091, column: 195, scope: !5544)
!5548 = !DILocation(line: 1091, column: 165, scope: !975)
!5549 = !DILocation(line: 1091, column: 165, scope: !5550)
!5550 = !DILexicalBlockFile(scope: !975, file: !352, discriminator: 5)
!5551 = !DILocation(line: 1091, column: 226, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !5544, file: !352, discriminator: 6)
!5553 = !DILocation(line: 1091, column: 244, scope: !5544)
!5554 = !DILocation(line: 1091, column: 254, scope: !5544)
!5555 = !DILocation(line: 1091, column: 279, scope: !5544)
!5556 = !DILocation(line: 1091, column: 210, scope: !5544)
!5557 = !DILocation(line: 1091, column: 298, scope: !5558)
!5558 = !DILexicalBlockFile(scope: !976, file: !352, discriminator: 7)
!5559 = !DILocation(line: 1091, column: 298, scope: !975)
!5560 = !DILocation(line: 1091, column: 298, scope: !5561)
!5561 = !DILexicalBlockFile(scope: !975, file: !352, discriminator: 8)
!5562 = !DILocation(line: 1091, column: 298, scope: !5563)
!5563 = !DILexicalBlockFile(scope: !975, file: !352, discriminator: 9)
!5564 = !DILocation(line: 1091, column: 311, scope: !5565)
!5565 = !DILexicalBlockFile(scope: !5566, file: !352, discriminator: 10)
!5566 = !DILexicalBlockFile(scope: !967, file: !352, discriminator: 3)
!5567 = !DILocation(line: 1091, column: 311, scope: !973)
!5568 = !DILocation(line: 1092, column: 5, scope: !967)
!5569 = !DILocation(line: 1092, column: 10, scope: !5570)
!5570 = !DILexicalBlockFile(scope: !978, file: !352, discriminator: 1)
!5571 = !DILocation(line: 1092, column: 20, scope: !978)
!5572 = !DILocation(line: 1092, column: 51, scope: !978)
!5573 = !DILocation(line: 1092, column: 55, scope: !978)
!5574 = !{!5533, !2680, i64 24}
!5575 = !DILocation(line: 1092, column: 64, scope: !981)
!5576 = !DILocation(line: 1092, column: 80, scope: !981)
!5577 = !DILocation(line: 1092, column: 64, scope: !978)
!5578 = !DILocation(line: 1092, column: 95, scope: !5579)
!5579 = !DILexicalBlockFile(scope: !981, file: !352, discriminator: 2)
!5580 = !DILocation(line: 1092, column: 100, scope: !5581)
!5581 = !DILexicalBlockFile(scope: !980, file: !352, discriminator: 4)
!5582 = !DILocation(line: 1092, column: 110, scope: !980)
!5583 = !DILocation(line: 1092, column: 140, scope: !980)
!5584 = !DILocation(line: 1092, column: 166, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !980, file: !352, line: 1092, column: 163)
!5586 = !DILocation(line: 1092, column: 183, scope: !5585)
!5587 = !DILocation(line: 1092, column: 163, scope: !5585)
!5588 = !DILocation(line: 1092, column: 193, scope: !5585)
!5589 = !DILocation(line: 1092, column: 163, scope: !980)
!5590 = !DILocation(line: 1092, column: 163, scope: !5591)
!5591 = !DILexicalBlockFile(scope: !980, file: !352, discriminator: 5)
!5592 = !DILocation(line: 1092, column: 224, scope: !5593)
!5593 = !DILexicalBlockFile(scope: !5585, file: !352, discriminator: 6)
!5594 = !DILocation(line: 1092, column: 242, scope: !5585)
!5595 = !DILocation(line: 1092, column: 252, scope: !5585)
!5596 = !DILocation(line: 1092, column: 277, scope: !5585)
!5597 = !DILocation(line: 1092, column: 208, scope: !5585)
!5598 = !DILocation(line: 1092, column: 296, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !981, file: !352, discriminator: 7)
!5600 = !DILocation(line: 1092, column: 296, scope: !980)
!5601 = !DILocation(line: 1092, column: 296, scope: !5602)
!5602 = !DILexicalBlockFile(scope: !980, file: !352, discriminator: 8)
!5603 = !DILocation(line: 1092, column: 296, scope: !5604)
!5604 = !DILexicalBlockFile(scope: !980, file: !352, discriminator: 9)
!5605 = !DILocation(line: 1092, column: 309, scope: !5565)
!5606 = !DILocation(line: 1092, column: 309, scope: !978)
!5607 = !DILocation(line: 1093, column: 19, scope: !967)
!5608 = !DILocation(line: 1093, column: 7, scope: !967)
!5609 = !DILocation(line: 1093, column: 25, scope: !967)
!5610 = !DILocation(line: 1093, column: 35, scope: !967)
!5611 = !DILocation(line: 1093, column: 43, scope: !967)
!5612 = !DILocation(line: 1093, column: 5, scope: !967)
!5613 = !DILocation(line: 1094, column: 1, scope: !967)
!5614 = !DILocation(line: 1097, column: 37, scope: !982)
!5615 = !DILocation(line: 1097, column: 51, scope: !982)
!5616 = !DILocation(line: 1097, column: 64, scope: !982)
!5617 = !DILocation(line: 1099, column: 5, scope: !982)
!5618 = !DILocation(line: 1099, column: 14, scope: !5619)
!5619 = !DILexicalBlockFile(scope: !991, file: !352, discriminator: 1)
!5620 = !DILocation(line: 1099, column: 18, scope: !991)
!5621 = !DILocation(line: 1099, column: 14, scope: !991)
!5622 = !DILocation(line: 1099, column: 14, scope: !992)
!5623 = !DILocation(line: 1099, column: 24, scope: !5624)
!5624 = !DILexicalBlockFile(scope: !990, file: !352, discriminator: 2)
!5625 = !DILocation(line: 1099, column: 28, scope: !990)
!5626 = !DILocation(line: 1099, column: 35, scope: !990)
!5627 = !DILocation(line: 1099, column: 54, scope: !990)
!5628 = !DILocation(line: 1099, column: 58, scope: !990)
!5629 = !DILocation(line: 1099, column: 63, scope: !990)
!5630 = !DILocation(line: 1099, column: 73, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !990, file: !352, line: 1099, column: 73)
!5632 = !DILocation(line: 1099, column: 73, scope: !990)
!5633 = !DILocation(line: 1099, column: 86, scope: !5634)
!5634 = !DILexicalBlockFile(scope: !5631, file: !352, discriminator: 4)
!5635 = !DILocation(line: 1099, column: 79, scope: !5631)
!5636 = !DILocation(line: 1099, column: 92, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !991, file: !352, discriminator: 5)
!5638 = !DILocation(line: 1099, column: 92, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !5640, file: !352, discriminator: 7)
!5640 = !DILexicalBlockFile(scope: !991, file: !352, discriminator: 6)
!5641 = !DILocation(line: 1099, column: 92, scope: !990)
!5642 = !DILocation(line: 1099, column: 94, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5644, file: !352, discriminator: 8)
!5644 = !DILexicalBlockFile(scope: !992, file: !352, discriminator: 3)
!5645 = !DILocation(line: 1100, column: 5, scope: !982)
!5646 = !DILocation(line: 1100, column: 14, scope: !5647)
!5647 = !DILexicalBlockFile(scope: !995, file: !352, discriminator: 1)
!5648 = !DILocation(line: 1100, column: 18, scope: !995)
!5649 = !DILocation(line: 1100, column: 14, scope: !995)
!5650 = !DILocation(line: 1100, column: 14, scope: !996)
!5651 = !DILocation(line: 1100, column: 26, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !994, file: !352, discriminator: 2)
!5653 = !DILocation(line: 1100, column: 30, scope: !994)
!5654 = !DILocation(line: 1100, column: 37, scope: !994)
!5655 = !DILocation(line: 1100, column: 56, scope: !994)
!5656 = !DILocation(line: 1100, column: 60, scope: !994)
!5657 = !DILocation(line: 1100, column: 67, scope: !994)
!5658 = !DILocation(line: 1100, column: 77, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !994, file: !352, line: 1100, column: 77)
!5660 = !DILocation(line: 1100, column: 77, scope: !994)
!5661 = !DILocation(line: 1100, column: 90, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !5659, file: !352, discriminator: 4)
!5663 = !DILocation(line: 1100, column: 83, scope: !5659)
!5664 = !DILocation(line: 1100, column: 96, scope: !5665)
!5665 = !DILexicalBlockFile(scope: !995, file: !352, discriminator: 5)
!5666 = !DILocation(line: 1100, column: 96, scope: !5667)
!5667 = !DILexicalBlockFile(scope: !5668, file: !352, discriminator: 7)
!5668 = !DILexicalBlockFile(scope: !995, file: !352, discriminator: 6)
!5669 = !DILocation(line: 1100, column: 96, scope: !994)
!5670 = !DILocation(line: 1100, column: 98, scope: !5671)
!5671 = !DILexicalBlockFile(scope: !5672, file: !352, discriminator: 8)
!5672 = !DILexicalBlockFile(scope: !996, file: !352, discriminator: 3)
!5673 = !DILocation(line: 1101, column: 5, scope: !982)
!5674 = !DILocation(line: 1102, column: 1, scope: !982)
!5675 = !DILocation(line: 1105, column: 33, scope: !997)
!5676 = !DILocation(line: 1107, column: 5, scope: !997)
!5677 = !DILocation(line: 1107, column: 15, scope: !997)
!5678 = !DILocation(line: 1107, column: 22, scope: !997)
!5679 = !DILocation(line: 1108, column: 5, scope: !997)
!5680 = !DILocation(line: 1108, column: 15, scope: !997)
!5681 = !DILocation(line: 1108, column: 20, scope: !997)
!5682 = !DILocation(line: 1108, column: 24, scope: !997)
!5683 = !DILocation(line: 1109, column: 5, scope: !997)
!5684 = !DILocation(line: 1109, column: 10, scope: !997)
!5685 = !DILocation(line: 1110, column: 5, scope: !997)
!5686 = !DILocation(line: 1110, column: 17, scope: !997)
!5687 = !DILocation(line: 1112, column: 31, scope: !997)
!5688 = !DILocation(line: 1112, column: 37, scope: !997)
!5689 = !DILocation(line: 1112, column: 47, scope: !997)
!5690 = !{!2713, !2680, i64 224}
!5691 = !DILocation(line: 1112, column: 14, scope: !997)
!5692 = !DILocation(line: 1113, column: 5, scope: !997)
!5693 = !DILocation(line: 1114, column: 16, scope: !1011)
!5694 = !DILocation(line: 1114, column: 25, scope: !1011)
!5695 = !DILocation(line: 1114, column: 14, scope: !1011)
!5696 = !DILocation(line: 1115, column: 13, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1115, column: 13)
!5698 = !DILocation(line: 1115, column: 18, scope: !5697)
!5699 = !DILocation(line: 1115, column: 13, scope: !1011)
!5700 = !DILocation(line: 1116, column: 13, scope: !5697)
!5701 = !DILocation(line: 1117, column: 13, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1117, column: 13)
!5703 = !DILocation(line: 1117, column: 17, scope: !5702)
!5704 = !{!5533, !2677, i64 32}
!5705 = !DILocation(line: 1117, column: 23, scope: !5702)
!5706 = !DILocation(line: 1117, column: 13, scope: !1011)
!5707 = !DILocation(line: 1118, column: 20, scope: !5702)
!5708 = !DILocation(line: 1118, column: 13, scope: !5702)
!5709 = !DILocation(line: 1120, column: 45, scope: !1011)
!5710 = !DILocation(line: 1120, column: 49, scope: !1011)
!5711 = !DILocation(line: 1120, column: 55, scope: !1011)
!5712 = !DILocation(line: 1120, column: 16, scope: !1011)
!5713 = !DILocation(line: 1120, column: 14, scope: !1011)
!5714 = !DILocation(line: 1121, column: 13, scope: !1010)
!5715 = !DILocation(line: 1121, column: 18, scope: !1010)
!5716 = !DILocation(line: 1121, column: 13, scope: !1011)
!5717 = !DILocation(line: 1122, column: 13, scope: !1009)
!5718 = !DILocation(line: 1122, column: 18, scope: !5719)
!5719 = !DILexicalBlockFile(scope: !1008, file: !352, discriminator: 1)
!5720 = !DILocation(line: 1122, column: 28, scope: !1008)
!5721 = !DILocation(line: 1122, column: 58, scope: !1008)
!5722 = !DILocation(line: 1122, column: 73, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !1008, file: !352, line: 1122, column: 70)
!5724 = !DILocation(line: 1122, column: 90, scope: !5723)
!5725 = !DILocation(line: 1122, column: 70, scope: !5723)
!5726 = !DILocation(line: 1122, column: 100, scope: !5723)
!5727 = !DILocation(line: 1122, column: 70, scope: !1008)
!5728 = !DILocation(line: 1122, column: 70, scope: !5729)
!5729 = !DILexicalBlockFile(scope: !1008, file: !352, discriminator: 2)
!5730 = !DILocation(line: 1122, column: 131, scope: !5731)
!5731 = !DILexicalBlockFile(scope: !5723, file: !352, discriminator: 3)
!5732 = !DILocation(line: 1122, column: 149, scope: !5723)
!5733 = !DILocation(line: 1122, column: 159, scope: !5723)
!5734 = !DILocation(line: 1122, column: 184, scope: !5723)
!5735 = !DILocation(line: 1122, column: 115, scope: !5723)
!5736 = !DILocation(line: 1122, column: 203, scope: !5737)
!5737 = !DILexicalBlockFile(scope: !1009, file: !352, discriminator: 4)
!5738 = !DILocation(line: 1122, column: 203, scope: !1008)
!5739 = !DILocation(line: 1122, column: 203, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !1008, file: !352, discriminator: 5)
!5741 = !DILocation(line: 1123, column: 13, scope: !1009)
!5742 = !DILocation(line: 1125, column: 30, scope: !1011)
!5743 = !DILocation(line: 1125, column: 14, scope: !1011)
!5744 = !DILocation(line: 1125, column: 12, scope: !1011)
!5745 = !DILocation(line: 1126, column: 9, scope: !1011)
!5746 = !DILocation(line: 1126, column: 14, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !1015, file: !352, discriminator: 1)
!5748 = !DILocation(line: 1126, column: 24, scope: !1015)
!5749 = !DILocation(line: 1126, column: 54, scope: !1015)
!5750 = !DILocation(line: 1126, column: 69, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !1015, file: !352, line: 1126, column: 66)
!5752 = !DILocation(line: 1126, column: 86, scope: !5751)
!5753 = !DILocation(line: 1126, column: 66, scope: !5751)
!5754 = !DILocation(line: 1126, column: 96, scope: !5751)
!5755 = !DILocation(line: 1126, column: 66, scope: !1015)
!5756 = !DILocation(line: 1126, column: 66, scope: !5757)
!5757 = !DILexicalBlockFile(scope: !1015, file: !352, discriminator: 2)
!5758 = !DILocation(line: 1126, column: 127, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5751, file: !352, discriminator: 3)
!5760 = !DILocation(line: 1126, column: 145, scope: !5751)
!5761 = !DILocation(line: 1126, column: 155, scope: !5751)
!5762 = !DILocation(line: 1126, column: 180, scope: !5751)
!5763 = !DILocation(line: 1126, column: 111, scope: !5751)
!5764 = !DILocation(line: 1126, column: 199, scope: !5765)
!5765 = !DILexicalBlockFile(scope: !1011, file: !352, discriminator: 4)
!5766 = !DILocation(line: 1126, column: 199, scope: !1015)
!5767 = !DILocation(line: 1126, column: 199, scope: !5768)
!5768 = !DILexicalBlockFile(scope: !1015, file: !352, discriminator: 5)
!5769 = !DILocation(line: 1127, column: 13, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1127, column: 13)
!5771 = !DILocation(line: 1127, column: 16, scope: !5770)
!5772 = !DILocation(line: 1127, column: 13, scope: !1011)
!5773 = !DILocation(line: 1128, column: 13, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !352, line: 1127, column: 22)
!5775 = !DILocation(line: 1128, column: 17, scope: !5774)
!5776 = !DILocation(line: 1128, column: 23, scope: !5774)
!5777 = !DILocation(line: 1129, column: 20, scope: !5774)
!5778 = !DILocation(line: 1129, column: 13, scope: !5774)
!5779 = !DILocation(line: 1131, column: 9, scope: !1011)
!5780 = !DILocation(line: 1131, column: 14, scope: !5781)
!5781 = !DILexicalBlockFile(scope: !1017, file: !352, discriminator: 1)
!5782 = !DILocation(line: 1131, column: 24, scope: !1017)
!5783 = !DILocation(line: 1131, column: 54, scope: !1017)
!5784 = !DILocation(line: 1131, column: 69, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !1017, file: !352, line: 1131, column: 66)
!5786 = !DILocation(line: 1131, column: 86, scope: !5785)
!5787 = !DILocation(line: 1131, column: 66, scope: !5785)
!5788 = !DILocation(line: 1131, column: 96, scope: !5785)
!5789 = !DILocation(line: 1131, column: 66, scope: !1017)
!5790 = !DILocation(line: 1131, column: 66, scope: !5791)
!5791 = !DILexicalBlockFile(scope: !1017, file: !352, discriminator: 2)
!5792 = !DILocation(line: 1131, column: 127, scope: !5793)
!5793 = !DILexicalBlockFile(scope: !5785, file: !352, discriminator: 3)
!5794 = !DILocation(line: 1131, column: 145, scope: !5785)
!5795 = !DILocation(line: 1131, column: 155, scope: !5785)
!5796 = !DILocation(line: 1131, column: 180, scope: !5785)
!5797 = !DILocation(line: 1131, column: 111, scope: !5785)
!5798 = !DILocation(line: 1131, column: 199, scope: !5765)
!5799 = !DILocation(line: 1131, column: 199, scope: !1017)
!5800 = !DILocation(line: 1131, column: 199, scope: !5801)
!5801 = !DILexicalBlockFile(scope: !1017, file: !352, discriminator: 5)
!5802 = !DILocation(line: 1132, column: 13, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !1011, file: !352, line: 1132, column: 13)
!5804 = !DILocation(line: 1132, column: 16, scope: !5803)
!5805 = !DILocation(line: 1132, column: 13, scope: !1011)
!5806 = !DILocation(line: 1133, column: 13, scope: !5803)
!5807 = !DILocation(line: 1113, column: 5, scope: !1012)
!5808 = !DILocation(line: 1135, column: 1, scope: !997)
!5809 = !DILocation(line: 1056, column: 29, scope: !1028)
!5810 = !DILocation(line: 1056, column: 45, scope: !1028)
!5811 = !DILocation(line: 1056, column: 61, scope: !1028)
!5812 = !DILocation(line: 1058, column: 5, scope: !1028)
!5813 = !DILocation(line: 1058, column: 15, scope: !1028)
!5814 = !DILocation(line: 1058, column: 22, scope: !1028)
!5815 = !DILocation(line: 1059, column: 5, scope: !1028)
!5816 = !DILocation(line: 1059, column: 15, scope: !1028)
!5817 = !DILocation(line: 1060, column: 5, scope: !1028)
!5818 = !DILocation(line: 1060, column: 22, scope: !1028)
!5819 = !DILocation(line: 1062, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !1028, file: !352, line: 1062, column: 9)
!5821 = !DILocation(line: 1062, column: 14, scope: !5820)
!5822 = !DILocation(line: 1062, column: 33, scope: !5820)
!5823 = !DILocation(line: 1062, column: 70, scope: !5824)
!5824 = !DILexicalBlockFile(scope: !5820, file: !352, discriminator: 1)
!5825 = !DILocation(line: 1062, column: 37, scope: !5820)
!5826 = !DILocation(line: 1062, column: 9, scope: !1028)
!5827 = !DILocation(line: 1063, column: 9, scope: !5820)
!5828 = !DILocation(line: 1065, column: 28, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !1028, file: !352, line: 1065, column: 9)
!5830 = !DILocation(line: 1065, column: 10, scope: !5829)
!5831 = !DILocation(line: 1065, column: 9, scope: !1028)
!5832 = !DILocation(line: 1066, column: 9, scope: !5829)
!5833 = !DILocation(line: 1069, column: 27, scope: !1028)
!5834 = !DILocation(line: 1069, column: 10, scope: !1028)
!5835 = !DILocation(line: 1069, column: 8, scope: !1028)
!5836 = !DILocation(line: 1070, column: 9, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !1028, file: !352, line: 1070, column: 9)
!5838 = !DILocation(line: 1070, column: 12, scope: !5837)
!5839 = !DILocation(line: 1070, column: 9, scope: !1028)
!5840 = !DILocation(line: 1071, column: 9, scope: !5837)
!5841 = !DILocation(line: 1074, column: 29, scope: !1028)
!5842 = !DILocation(line: 1074, column: 35, scope: !1028)
!5843 = !DILocation(line: 1074, column: 44, scope: !1028)
!5844 = !DILocation(line: 1074, column: 10, scope: !1028)
!5845 = !DILocation(line: 1074, column: 8, scope: !1028)
!5846 = !DILocation(line: 1075, column: 9, scope: !1040)
!5847 = !DILocation(line: 1075, column: 12, scope: !1040)
!5848 = !DILocation(line: 1075, column: 9, scope: !1028)
!5849 = !DILocation(line: 1076, column: 9, scope: !1039)
!5850 = !DILocation(line: 1076, column: 14, scope: !5851)
!5851 = !DILexicalBlockFile(scope: !1038, file: !352, discriminator: 1)
!5852 = !DILocation(line: 1076, column: 24, scope: !1038)
!5853 = !DILocation(line: 1076, column: 54, scope: !1038)
!5854 = !DILocation(line: 1076, column: 67, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !1038, file: !352, line: 1076, column: 64)
!5856 = !DILocation(line: 1076, column: 84, scope: !5855)
!5857 = !DILocation(line: 1076, column: 64, scope: !5855)
!5858 = !DILocation(line: 1076, column: 94, scope: !5855)
!5859 = !DILocation(line: 1076, column: 64, scope: !1038)
!5860 = !DILocation(line: 1076, column: 64, scope: !5861)
!5861 = !DILexicalBlockFile(scope: !1038, file: !352, discriminator: 2)
!5862 = !DILocation(line: 1076, column: 125, scope: !5863)
!5863 = !DILexicalBlockFile(scope: !5855, file: !352, discriminator: 3)
!5864 = !DILocation(line: 1076, column: 143, scope: !5855)
!5865 = !DILocation(line: 1076, column: 153, scope: !5855)
!5866 = !DILocation(line: 1076, column: 178, scope: !5855)
!5867 = !DILocation(line: 1076, column: 109, scope: !5855)
!5868 = !DILocation(line: 1076, column: 197, scope: !5869)
!5869 = !DILexicalBlockFile(scope: !1039, file: !352, discriminator: 4)
!5870 = !DILocation(line: 1076, column: 197, scope: !1038)
!5871 = !DILocation(line: 1076, column: 197, scope: !5872)
!5872 = !DILexicalBlockFile(scope: !1038, file: !352, discriminator: 5)
!5873 = !DILocation(line: 1077, column: 9, scope: !1039)
!5874 = !DILocation(line: 1079, column: 21, scope: !1028)
!5875 = !DILocation(line: 1079, column: 29, scope: !1028)
!5876 = !DILocation(line: 1079, column: 38, scope: !1028)
!5877 = !DILocation(line: 1080, column: 16, scope: !1028)
!5878 = !DILocation(line: 1080, column: 5, scope: !1028)
!5879 = !DILocation(line: 1080, column: 9, scope: !1028)
!5880 = !DILocation(line: 1080, column: 14, scope: !1028)
!5881 = !DILocation(line: 1081, column: 14, scope: !1028)
!5882 = !DILocation(line: 1081, column: 5, scope: !1028)
!5883 = !DILocation(line: 1081, column: 9, scope: !1028)
!5884 = !DILocation(line: 1081, column: 12, scope: !1028)
!5885 = !DILocation(line: 1082, column: 5, scope: !1028)
!5886 = !DILocation(line: 1082, column: 9, scope: !1028)
!5887 = !DILocation(line: 1082, column: 15, scope: !1028)
!5888 = !DILocation(line: 1084, column: 24, scope: !1028)
!5889 = !DILocation(line: 1084, column: 12, scope: !1028)
!5890 = !DILocation(line: 1084, column: 5, scope: !1028)
!5891 = !DILocation(line: 1085, column: 1, scope: !1028)
!5892 = !DILocation(line: 1138, column: 35, scope: !1018)
!5893 = !DILocation(line: 1140, column: 50, scope: !1018)
!5894 = !DILocation(line: 1140, column: 38, scope: !1018)
!5895 = !DILocation(line: 1140, column: 56, scope: !1018)
!5896 = !DILocation(line: 1141, column: 26, scope: !1018)
!5897 = !DILocation(line: 1141, column: 30, scope: !1018)
!5898 = !DILocation(line: 1141, column: 36, scope: !1018)
!5899 = !DILocation(line: 1141, column: 40, scope: !1018)
!5900 = !DILocation(line: 1141, column: 44, scope: !1018)
!5901 = !DILocation(line: 1141, column: 48, scope: !1018)
!5902 = !DILocation(line: 1140, column: 12, scope: !1018)
!5903 = !DILocation(line: 1140, column: 5, scope: !1018)
!5904 = !DILocation(line: 1145, column: 37, scope: !1021)
!5905 = !DILocation(line: 1145, column: 51, scope: !1021)
!5906 = !DILocation(line: 1147, column: 5, scope: !1021)
!5907 = !DILocation(line: 1147, column: 9, scope: !1021)
!5908 = !DILocation(line: 1147, column: 33, scope: !1021)
!5909 = !DILocation(line: 1147, column: 17, scope: !1021)
!5910 = !DILocation(line: 1148, column: 9, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !1021, file: !352, line: 1148, column: 9)
!5912 = !DILocation(line: 1148, column: 15, scope: !5911)
!5913 = !DILocation(line: 1148, column: 9, scope: !1021)
!5914 = !DILocation(line: 1149, column: 9, scope: !5911)
!5915 = !DILocation(line: 1150, column: 17, scope: !1021)
!5916 = !DILocation(line: 1150, column: 5, scope: !1021)
!5917 = !DILocation(line: 1150, column: 9, scope: !1021)
!5918 = !DILocation(line: 1150, column: 15, scope: !1021)
!5919 = !DILocation(line: 1151, column: 58, scope: !1021)
!5920 = !DILocation(line: 1151, column: 5, scope: !1021)
!5921 = !DILocation(line: 1152, column: 1, scope: !1021)
!5922 = !DILocation(line: 1257, column: 36, scope: !1041)
!5923 = !DILocation(line: 1259, column: 25, scope: !1041)
!5924 = !DILocation(line: 1259, column: 5, scope: !1041)
!5925 = !DILocation(line: 1260, column: 5, scope: !1041)
!5926 = !DILocation(line: 1260, column: 10, scope: !5927)
!5927 = !DILexicalBlockFile(scope: !1047, file: !352, discriminator: 1)
!5928 = !DILocation(line: 1260, column: 20, scope: !1047)
!5929 = !DILocation(line: 1260, column: 51, scope: !1047)
!5930 = !DILocation(line: 1260, column: 55, scope: !1047)
!5931 = !DILocation(line: 1260, column: 66, scope: !1050)
!5932 = !DILocation(line: 1260, column: 82, scope: !1050)
!5933 = !DILocation(line: 1260, column: 66, scope: !1047)
!5934 = !DILocation(line: 1260, column: 97, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !1050, file: !352, discriminator: 2)
!5936 = !DILocation(line: 1260, column: 102, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !1049, file: !352, discriminator: 4)
!5938 = !DILocation(line: 1260, column: 112, scope: !1049)
!5939 = !DILocation(line: 1260, column: 142, scope: !1049)
!5940 = !DILocation(line: 1260, column: 168, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !1049, file: !352, line: 1260, column: 165)
!5942 = !DILocation(line: 1260, column: 185, scope: !5941)
!5943 = !DILocation(line: 1260, column: 165, scope: !5941)
!5944 = !DILocation(line: 1260, column: 195, scope: !5941)
!5945 = !DILocation(line: 1260, column: 165, scope: !1049)
!5946 = !DILocation(line: 1260, column: 165, scope: !5947)
!5947 = !DILexicalBlockFile(scope: !1049, file: !352, discriminator: 5)
!5948 = !DILocation(line: 1260, column: 226, scope: !5949)
!5949 = !DILexicalBlockFile(scope: !5941, file: !352, discriminator: 6)
!5950 = !DILocation(line: 1260, column: 244, scope: !5941)
!5951 = !DILocation(line: 1260, column: 254, scope: !5941)
!5952 = !DILocation(line: 1260, column: 279, scope: !5941)
!5953 = !DILocation(line: 1260, column: 210, scope: !5941)
!5954 = !DILocation(line: 1260, column: 298, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !1050, file: !352, discriminator: 7)
!5956 = !DILocation(line: 1260, column: 298, scope: !1049)
!5957 = !DILocation(line: 1260, column: 298, scope: !5958)
!5958 = !DILexicalBlockFile(scope: !1049, file: !352, discriminator: 8)
!5959 = !DILocation(line: 1260, column: 298, scope: !5960)
!5960 = !DILexicalBlockFile(scope: !1049, file: !352, discriminator: 9)
!5961 = !DILocation(line: 1260, column: 311, scope: !5962)
!5962 = !DILexicalBlockFile(scope: !5963, file: !352, discriminator: 10)
!5963 = !DILexicalBlockFile(scope: !1041, file: !352, discriminator: 3)
!5964 = !DILocation(line: 1260, column: 311, scope: !1047)
!5965 = !DILocation(line: 1261, column: 5, scope: !1041)
!5966 = !DILocation(line: 1261, column: 10, scope: !5967)
!5967 = !DILexicalBlockFile(scope: !1052, file: !352, discriminator: 1)
!5968 = !DILocation(line: 1261, column: 20, scope: !1052)
!5969 = !DILocation(line: 1261, column: 51, scope: !1052)
!5970 = !DILocation(line: 1261, column: 55, scope: !1052)
!5971 = !DILocation(line: 1261, column: 64, scope: !1055)
!5972 = !DILocation(line: 1261, column: 80, scope: !1055)
!5973 = !DILocation(line: 1261, column: 64, scope: !1052)
!5974 = !DILocation(line: 1261, column: 95, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !1055, file: !352, discriminator: 2)
!5976 = !DILocation(line: 1261, column: 100, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !1054, file: !352, discriminator: 4)
!5978 = !DILocation(line: 1261, column: 110, scope: !1054)
!5979 = !DILocation(line: 1261, column: 140, scope: !1054)
!5980 = !DILocation(line: 1261, column: 166, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !1054, file: !352, line: 1261, column: 163)
!5982 = !DILocation(line: 1261, column: 183, scope: !5981)
!5983 = !DILocation(line: 1261, column: 163, scope: !5981)
!5984 = !DILocation(line: 1261, column: 193, scope: !5981)
!5985 = !DILocation(line: 1261, column: 163, scope: !1054)
!5986 = !DILocation(line: 1261, column: 163, scope: !5987)
!5987 = !DILexicalBlockFile(scope: !1054, file: !352, discriminator: 5)
!5988 = !DILocation(line: 1261, column: 224, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !5981, file: !352, discriminator: 6)
!5990 = !DILocation(line: 1261, column: 242, scope: !5981)
!5991 = !DILocation(line: 1261, column: 252, scope: !5981)
!5992 = !DILocation(line: 1261, column: 277, scope: !5981)
!5993 = !DILocation(line: 1261, column: 208, scope: !5981)
!5994 = !DILocation(line: 1261, column: 296, scope: !5995)
!5995 = !DILexicalBlockFile(scope: !1055, file: !352, discriminator: 7)
!5996 = !DILocation(line: 1261, column: 296, scope: !1054)
!5997 = !DILocation(line: 1261, column: 296, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !1054, file: !352, discriminator: 8)
!5999 = !DILocation(line: 1261, column: 296, scope: !6000)
!6000 = !DILexicalBlockFile(scope: !1054, file: !352, discriminator: 9)
!6001 = !DILocation(line: 1261, column: 309, scope: !5962)
!6002 = !DILocation(line: 1261, column: 309, scope: !1052)
!6003 = !DILocation(line: 1262, column: 19, scope: !1041)
!6004 = !DILocation(line: 1262, column: 7, scope: !1041)
!6005 = !DILocation(line: 1262, column: 25, scope: !1041)
!6006 = !DILocation(line: 1262, column: 35, scope: !1041)
!6007 = !DILocation(line: 1262, column: 43, scope: !1041)
!6008 = !DILocation(line: 1262, column: 5, scope: !1041)
!6009 = !DILocation(line: 1263, column: 1, scope: !1041)
!6010 = !DILocation(line: 1266, column: 37, scope: !1056)
!6011 = !DILocation(line: 1266, column: 51, scope: !1056)
!6012 = !DILocation(line: 1266, column: 64, scope: !1056)
!6013 = !DILocation(line: 1268, column: 5, scope: !1056)
!6014 = !DILocation(line: 1268, column: 14, scope: !6015)
!6015 = !DILexicalBlockFile(scope: !1065, file: !352, discriminator: 1)
!6016 = !DILocation(line: 1268, column: 18, scope: !1065)
!6017 = !DILocation(line: 1268, column: 14, scope: !1065)
!6018 = !DILocation(line: 1268, column: 14, scope: !1066)
!6019 = !DILocation(line: 1268, column: 24, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !1064, file: !352, discriminator: 2)
!6021 = !DILocation(line: 1268, column: 28, scope: !1064)
!6022 = !DILocation(line: 1268, column: 35, scope: !1064)
!6023 = !DILocation(line: 1268, column: 54, scope: !1064)
!6024 = !DILocation(line: 1268, column: 58, scope: !1064)
!6025 = !DILocation(line: 1268, column: 63, scope: !1064)
!6026 = !DILocation(line: 1268, column: 73, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !1064, file: !352, line: 1268, column: 73)
!6028 = !DILocation(line: 1268, column: 73, scope: !1064)
!6029 = !DILocation(line: 1268, column: 86, scope: !6030)
!6030 = !DILexicalBlockFile(scope: !6027, file: !352, discriminator: 4)
!6031 = !DILocation(line: 1268, column: 79, scope: !6027)
!6032 = !DILocation(line: 1268, column: 92, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !1065, file: !352, discriminator: 5)
!6034 = !DILocation(line: 1268, column: 92, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !6036, file: !352, discriminator: 7)
!6036 = !DILexicalBlockFile(scope: !1065, file: !352, discriminator: 6)
!6037 = !DILocation(line: 1268, column: 92, scope: !1064)
!6038 = !DILocation(line: 1268, column: 94, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !6040, file: !352, discriminator: 8)
!6040 = !DILexicalBlockFile(scope: !1066, file: !352, discriminator: 3)
!6041 = !DILocation(line: 1269, column: 5, scope: !1056)
!6042 = !DILocation(line: 1269, column: 14, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !1069, file: !352, discriminator: 1)
!6044 = !DILocation(line: 1269, column: 18, scope: !1069)
!6045 = !DILocation(line: 1269, column: 14, scope: !1069)
!6046 = !DILocation(line: 1269, column: 14, scope: !1070)
!6047 = !DILocation(line: 1269, column: 26, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !1068, file: !352, discriminator: 2)
!6049 = !DILocation(line: 1269, column: 30, scope: !1068)
!6050 = !DILocation(line: 1269, column: 37, scope: !1068)
!6051 = !DILocation(line: 1269, column: 56, scope: !1068)
!6052 = !DILocation(line: 1269, column: 60, scope: !1068)
!6053 = !DILocation(line: 1269, column: 67, scope: !1068)
!6054 = !DILocation(line: 1269, column: 77, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !1068, file: !352, line: 1269, column: 77)
!6056 = !DILocation(line: 1269, column: 77, scope: !1068)
!6057 = !DILocation(line: 1269, column: 90, scope: !6058)
!6058 = !DILexicalBlockFile(scope: !6055, file: !352, discriminator: 4)
!6059 = !DILocation(line: 1269, column: 83, scope: !6055)
!6060 = !DILocation(line: 1269, column: 96, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !1069, file: !352, discriminator: 5)
!6062 = !DILocation(line: 1269, column: 96, scope: !6063)
!6063 = !DILexicalBlockFile(scope: !6064, file: !352, discriminator: 7)
!6064 = !DILexicalBlockFile(scope: !1069, file: !352, discriminator: 6)
!6065 = !DILocation(line: 1269, column: 96, scope: !1068)
!6066 = !DILocation(line: 1269, column: 98, scope: !6067)
!6067 = !DILexicalBlockFile(scope: !6068, file: !352, discriminator: 8)
!6068 = !DILexicalBlockFile(scope: !1070, file: !352, discriminator: 3)
!6069 = !DILocation(line: 1270, column: 5, scope: !1056)
!6070 = !DILocation(line: 1271, column: 1, scope: !1056)
!6071 = !DILocation(line: 1274, column: 33, scope: !1071)
!6072 = !DILocation(line: 1276, column: 5, scope: !1071)
!6073 = !DILocation(line: 1276, column: 15, scope: !1071)
!6074 = !DILocation(line: 1276, column: 22, scope: !1071)
!6075 = !DILocation(line: 1277, column: 5, scope: !1071)
!6076 = !DILocation(line: 1277, column: 15, scope: !1071)
!6077 = !DILocation(line: 1277, column: 20, scope: !1071)
!6078 = !DILocation(line: 1277, column: 24, scope: !1071)
!6079 = !DILocation(line: 1278, column: 5, scope: !1071)
!6080 = !DILocation(line: 1278, column: 10, scope: !1071)
!6081 = !DILocation(line: 1280, column: 9, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1280, column: 9)
!6083 = !DILocation(line: 1280, column: 13, scope: !6082)
!6084 = !DILocation(line: 1280, column: 18, scope: !6082)
!6085 = !DILocation(line: 1280, column: 9, scope: !1071)
!6086 = !DILocation(line: 1281, column: 9, scope: !6082)
!6087 = !DILocation(line: 1283, column: 28, scope: !1071)
!6088 = !DILocation(line: 1283, column: 34, scope: !1071)
!6089 = !DILocation(line: 1283, column: 44, scope: !1071)
!6090 = !DILocation(line: 1283, column: 57, scope: !1071)
!6091 = !DILocation(line: 1283, column: 12, scope: !1071)
!6092 = !DILocation(line: 1283, column: 10, scope: !1071)
!6093 = !DILocation(line: 1284, column: 9, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1284, column: 9)
!6095 = !DILocation(line: 1284, column: 14, scope: !6094)
!6096 = !DILocation(line: 1284, column: 9, scope: !1071)
!6097 = !DILocation(line: 1285, column: 9, scope: !6094)
!6098 = !DILocation(line: 1287, column: 41, scope: !1071)
!6099 = !DILocation(line: 1287, column: 45, scope: !1071)
!6100 = !DILocation(line: 1287, column: 51, scope: !1071)
!6101 = !DILocation(line: 1287, column: 12, scope: !1071)
!6102 = !DILocation(line: 1287, column: 10, scope: !1071)
!6103 = !DILocation(line: 1288, column: 9, scope: !1083)
!6104 = !DILocation(line: 1288, column: 14, scope: !1083)
!6105 = !DILocation(line: 1288, column: 9, scope: !1071)
!6106 = !DILocation(line: 1289, column: 9, scope: !1082)
!6107 = !DILocation(line: 1289, column: 14, scope: !6108)
!6108 = !DILexicalBlockFile(scope: !1081, file: !352, discriminator: 1)
!6109 = !DILocation(line: 1289, column: 24, scope: !1081)
!6110 = !DILocation(line: 1289, column: 54, scope: !1081)
!6111 = !DILocation(line: 1289, column: 69, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !1081, file: !352, line: 1289, column: 66)
!6113 = !DILocation(line: 1289, column: 86, scope: !6112)
!6114 = !DILocation(line: 1289, column: 66, scope: !6112)
!6115 = !DILocation(line: 1289, column: 96, scope: !6112)
!6116 = !DILocation(line: 1289, column: 66, scope: !1081)
!6117 = !DILocation(line: 1289, column: 66, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !1081, file: !352, discriminator: 2)
!6119 = !DILocation(line: 1289, column: 127, scope: !6120)
!6120 = !DILexicalBlockFile(scope: !6112, file: !352, discriminator: 3)
!6121 = !DILocation(line: 1289, column: 145, scope: !6112)
!6122 = !DILocation(line: 1289, column: 155, scope: !6112)
!6123 = !DILocation(line: 1289, column: 180, scope: !6112)
!6124 = !DILocation(line: 1289, column: 111, scope: !6112)
!6125 = !DILocation(line: 1289, column: 199, scope: !6126)
!6126 = !DILexicalBlockFile(scope: !1082, file: !352, discriminator: 4)
!6127 = !DILocation(line: 1289, column: 199, scope: !1081)
!6128 = !DILocation(line: 1289, column: 199, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !1081, file: !352, discriminator: 5)
!6130 = !DILocation(line: 1290, column: 9, scope: !1082)
!6131 = !DILocation(line: 1292, column: 26, scope: !1071)
!6132 = !DILocation(line: 1292, column: 10, scope: !1071)
!6133 = !DILocation(line: 1292, column: 8, scope: !1071)
!6134 = !DILocation(line: 1293, column: 5, scope: !1071)
!6135 = !DILocation(line: 1293, column: 10, scope: !6136)
!6136 = !DILexicalBlockFile(scope: !1085, file: !352, discriminator: 1)
!6137 = !DILocation(line: 1293, column: 20, scope: !1085)
!6138 = !DILocation(line: 1293, column: 50, scope: !1085)
!6139 = !DILocation(line: 1293, column: 65, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !1085, file: !352, line: 1293, column: 62)
!6141 = !DILocation(line: 1293, column: 82, scope: !6140)
!6142 = !DILocation(line: 1293, column: 62, scope: !6140)
!6143 = !DILocation(line: 1293, column: 92, scope: !6140)
!6144 = !DILocation(line: 1293, column: 62, scope: !1085)
!6145 = !DILocation(line: 1293, column: 62, scope: !6146)
!6146 = !DILexicalBlockFile(scope: !1085, file: !352, discriminator: 2)
!6147 = !DILocation(line: 1293, column: 123, scope: !6148)
!6148 = !DILexicalBlockFile(scope: !6140, file: !352, discriminator: 3)
!6149 = !DILocation(line: 1293, column: 141, scope: !6140)
!6150 = !DILocation(line: 1293, column: 151, scope: !6140)
!6151 = !DILocation(line: 1293, column: 176, scope: !6140)
!6152 = !DILocation(line: 1293, column: 107, scope: !6140)
!6153 = !DILocation(line: 1293, column: 195, scope: !6154)
!6154 = !DILexicalBlockFile(scope: !1071, file: !352, discriminator: 4)
!6155 = !DILocation(line: 1293, column: 195, scope: !1085)
!6156 = !DILocation(line: 1293, column: 195, scope: !6157)
!6157 = !DILexicalBlockFile(scope: !1085, file: !352, discriminator: 5)
!6158 = !DILocation(line: 1294, column: 9, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1294, column: 9)
!6160 = !DILocation(line: 1294, column: 12, scope: !6159)
!6161 = !DILocation(line: 1294, column: 9, scope: !1071)
!6162 = !DILocation(line: 1295, column: 16, scope: !6159)
!6163 = !DILocation(line: 1295, column: 9, scope: !6159)
!6164 = !DILocation(line: 1296, column: 5, scope: !1071)
!6165 = !DILocation(line: 1296, column: 10, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !1087, file: !352, discriminator: 1)
!6167 = !DILocation(line: 1296, column: 20, scope: !1087)
!6168 = !DILocation(line: 1296, column: 50, scope: !1087)
!6169 = !DILocation(line: 1296, column: 65, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !1087, file: !352, line: 1296, column: 62)
!6171 = !DILocation(line: 1296, column: 82, scope: !6170)
!6172 = !DILocation(line: 1296, column: 62, scope: !6170)
!6173 = !DILocation(line: 1296, column: 92, scope: !6170)
!6174 = !DILocation(line: 1296, column: 62, scope: !1087)
!6175 = !DILocation(line: 1296, column: 62, scope: !6176)
!6176 = !DILexicalBlockFile(scope: !1087, file: !352, discriminator: 2)
!6177 = !DILocation(line: 1296, column: 123, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !6170, file: !352, discriminator: 3)
!6179 = !DILocation(line: 1296, column: 141, scope: !6170)
!6180 = !DILocation(line: 1296, column: 151, scope: !6170)
!6181 = !DILocation(line: 1296, column: 176, scope: !6170)
!6182 = !DILocation(line: 1296, column: 107, scope: !6170)
!6183 = !DILocation(line: 1296, column: 195, scope: !6154)
!6184 = !DILocation(line: 1296, column: 195, scope: !1087)
!6185 = !DILocation(line: 1296, column: 195, scope: !6186)
!6186 = !DILexicalBlockFile(scope: !1087, file: !352, discriminator: 5)
!6187 = !DILocation(line: 1297, column: 9, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !1071, file: !352, line: 1297, column: 9)
!6189 = !DILocation(line: 1297, column: 12, scope: !6188)
!6190 = !DILocation(line: 1297, column: 9, scope: !1071)
!6191 = !DILocation(line: 1298, column: 9, scope: !6188)
!6192 = !DILocation(line: 1298, column: 13, scope: !6188)
!6193 = !DILocation(line: 1298, column: 18, scope: !6188)
!6194 = !DILocation(line: 1299, column: 5, scope: !1071)
!6195 = !DILocation(line: 1300, column: 1, scope: !1071)
!6196 = !DILocation(line: 1225, column: 29, scope: !1098)
!6197 = !DILocation(line: 1225, column: 45, scope: !1098)
!6198 = !DILocation(line: 1225, column: 61, scope: !1098)
!6199 = !DILocation(line: 1227, column: 5, scope: !1098)
!6200 = !DILocation(line: 1227, column: 15, scope: !1098)
!6201 = !DILocation(line: 1227, column: 22, scope: !1098)
!6202 = !DILocation(line: 1228, column: 5, scope: !1098)
!6203 = !DILocation(line: 1228, column: 15, scope: !1098)
!6204 = !DILocation(line: 1229, column: 5, scope: !1098)
!6205 = !DILocation(line: 1229, column: 22, scope: !1098)
!6206 = !DILocation(line: 1231, column: 9, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !1098, file: !352, line: 1231, column: 9)
!6208 = !DILocation(line: 1231, column: 14, scope: !6207)
!6209 = !DILocation(line: 1231, column: 33, scope: !6207)
!6210 = !DILocation(line: 1231, column: 70, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !6207, file: !352, discriminator: 1)
!6212 = !DILocation(line: 1231, column: 37, scope: !6207)
!6213 = !DILocation(line: 1231, column: 9, scope: !1098)
!6214 = !DILocation(line: 1232, column: 9, scope: !6207)
!6215 = !DILocation(line: 1234, column: 28, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !1098, file: !352, line: 1234, column: 9)
!6217 = !DILocation(line: 1234, column: 10, scope: !6216)
!6218 = !DILocation(line: 1234, column: 9, scope: !1098)
!6219 = !DILocation(line: 1235, column: 9, scope: !6216)
!6220 = !DILocation(line: 1238, column: 27, scope: !1098)
!6221 = !DILocation(line: 1238, column: 10, scope: !1098)
!6222 = !DILocation(line: 1238, column: 8, scope: !1098)
!6223 = !DILocation(line: 1239, column: 9, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !1098, file: !352, line: 1239, column: 9)
!6225 = !DILocation(line: 1239, column: 12, scope: !6224)
!6226 = !DILocation(line: 1239, column: 9, scope: !1098)
!6227 = !DILocation(line: 1240, column: 9, scope: !6224)
!6228 = !DILocation(line: 1243, column: 29, scope: !1098)
!6229 = !DILocation(line: 1243, column: 35, scope: !1098)
!6230 = !DILocation(line: 1243, column: 44, scope: !1098)
!6231 = !DILocation(line: 1243, column: 10, scope: !1098)
!6232 = !DILocation(line: 1243, column: 8, scope: !1098)
!6233 = !DILocation(line: 1244, column: 9, scope: !1110)
!6234 = !DILocation(line: 1244, column: 12, scope: !1110)
!6235 = !DILocation(line: 1244, column: 9, scope: !1098)
!6236 = !DILocation(line: 1245, column: 9, scope: !1109)
!6237 = !DILocation(line: 1245, column: 14, scope: !6238)
!6238 = !DILexicalBlockFile(scope: !1108, file: !352, discriminator: 1)
!6239 = !DILocation(line: 1245, column: 24, scope: !1108)
!6240 = !DILocation(line: 1245, column: 54, scope: !1108)
!6241 = !DILocation(line: 1245, column: 67, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !1108, file: !352, line: 1245, column: 64)
!6243 = !DILocation(line: 1245, column: 84, scope: !6242)
!6244 = !DILocation(line: 1245, column: 64, scope: !6242)
!6245 = !DILocation(line: 1245, column: 94, scope: !6242)
!6246 = !DILocation(line: 1245, column: 64, scope: !1108)
!6247 = !DILocation(line: 1245, column: 64, scope: !6248)
!6248 = !DILexicalBlockFile(scope: !1108, file: !352, discriminator: 2)
!6249 = !DILocation(line: 1245, column: 125, scope: !6250)
!6250 = !DILexicalBlockFile(scope: !6242, file: !352, discriminator: 3)
!6251 = !DILocation(line: 1245, column: 143, scope: !6242)
!6252 = !DILocation(line: 1245, column: 153, scope: !6242)
!6253 = !DILocation(line: 1245, column: 178, scope: !6242)
!6254 = !DILocation(line: 1245, column: 109, scope: !6242)
!6255 = !DILocation(line: 1245, column: 197, scope: !6256)
!6256 = !DILexicalBlockFile(scope: !1109, file: !352, discriminator: 4)
!6257 = !DILocation(line: 1245, column: 197, scope: !1108)
!6258 = !DILocation(line: 1245, column: 197, scope: !6259)
!6259 = !DILexicalBlockFile(scope: !1108, file: !352, discriminator: 5)
!6260 = !DILocation(line: 1246, column: 9, scope: !1109)
!6261 = !DILocation(line: 1248, column: 21, scope: !1098)
!6262 = !DILocation(line: 1248, column: 29, scope: !1098)
!6263 = !DILocation(line: 1248, column: 38, scope: !1098)
!6264 = !DILocation(line: 1249, column: 16, scope: !1098)
!6265 = !DILocation(line: 1249, column: 5, scope: !1098)
!6266 = !DILocation(line: 1249, column: 9, scope: !1098)
!6267 = !DILocation(line: 1249, column: 14, scope: !1098)
!6268 = !DILocation(line: 1250, column: 14, scope: !1098)
!6269 = !DILocation(line: 1250, column: 5, scope: !1098)
!6270 = !DILocation(line: 1250, column: 9, scope: !1098)
!6271 = !DILocation(line: 1250, column: 12, scope: !1098)
!6272 = !DILocation(line: 1251, column: 5, scope: !1098)
!6273 = !DILocation(line: 1251, column: 9, scope: !1098)
!6274 = !DILocation(line: 1251, column: 14, scope: !1098)
!6275 = !DILocation(line: 1253, column: 24, scope: !1098)
!6276 = !DILocation(line: 1253, column: 12, scope: !1098)
!6277 = !DILocation(line: 1253, column: 5, scope: !1098)
!6278 = !DILocation(line: 1254, column: 1, scope: !1098)
!6279 = !DILocation(line: 1303, column: 35, scope: !1088)
!6280 = !DILocation(line: 1305, column: 50, scope: !1088)
!6281 = !DILocation(line: 1305, column: 38, scope: !1088)
!6282 = !DILocation(line: 1305, column: 56, scope: !1088)
!6283 = !DILocation(line: 1306, column: 26, scope: !1088)
!6284 = !DILocation(line: 1306, column: 30, scope: !1088)
!6285 = !DILocation(line: 1306, column: 36, scope: !1088)
!6286 = !DILocation(line: 1306, column: 40, scope: !1088)
!6287 = !DILocation(line: 1306, column: 44, scope: !1088)
!6288 = !DILocation(line: 1306, column: 48, scope: !1088)
!6289 = !DILocation(line: 1305, column: 12, scope: !1088)
!6290 = !DILocation(line: 1305, column: 5, scope: !1088)
!6291 = !DILocation(line: 1310, column: 44, scope: !1091)
!6292 = !DILocation(line: 1310, column: 58, scope: !1091)
!6293 = !DILocation(line: 1312, column: 5, scope: !1091)
!6294 = !DILocation(line: 1312, column: 9, scope: !1091)
!6295 = !DILocation(line: 1312, column: 32, scope: !1091)
!6296 = !DILocation(line: 1312, column: 16, scope: !1091)
!6297 = !DILocation(line: 1313, column: 9, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !1091, file: !352, line: 1313, column: 9)
!6299 = !DILocation(line: 1313, column: 14, scope: !6298)
!6300 = !DILocation(line: 1313, column: 9, scope: !1091)
!6301 = !DILocation(line: 1314, column: 9, scope: !6298)
!6302 = !DILocation(line: 1315, column: 16, scope: !1091)
!6303 = !DILocation(line: 1315, column: 5, scope: !1091)
!6304 = !DILocation(line: 1315, column: 9, scope: !1091)
!6305 = !DILocation(line: 1315, column: 14, scope: !1091)
!6306 = !DILocation(line: 1316, column: 58, scope: !1091)
!6307 = !DILocation(line: 1316, column: 5, scope: !1091)
!6308 = !DILocation(line: 1317, column: 1, scope: !1091)
!6309 = !DILocation(line: 1472, column: 30, scope: !1111)
!6310 = !DILocation(line: 1474, column: 25, scope: !1111)
!6311 = !DILocation(line: 1474, column: 5, scope: !1111)
!6312 = !DILocation(line: 1475, column: 5, scope: !1111)
!6313 = !DILocation(line: 1475, column: 10, scope: !6314)
!6314 = !DILexicalBlockFile(scope: !1117, file: !352, discriminator: 1)
!6315 = !DILocation(line: 1475, column: 20, scope: !1117)
!6316 = !DILocation(line: 1475, column: 51, scope: !1117)
!6317 = !DILocation(line: 1475, column: 55, scope: !1117)
!6318 = !{!6319, !2680, i64 16}
!6319 = !{!"", !2676, i64 0, !2680, i64 16, !2677, i64 24, !2677, i64 32, !2677, i64 40, !2677, i64 48}
!6320 = !DILocation(line: 1475, column: 64, scope: !1120)
!6321 = !DILocation(line: 1475, column: 80, scope: !1120)
!6322 = !DILocation(line: 1475, column: 64, scope: !1117)
!6323 = !DILocation(line: 1475, column: 95, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !1120, file: !352, discriminator: 2)
!6325 = !DILocation(line: 1475, column: 100, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !1119, file: !352, discriminator: 4)
!6327 = !DILocation(line: 1475, column: 110, scope: !1119)
!6328 = !DILocation(line: 1475, column: 140, scope: !1119)
!6329 = !DILocation(line: 1475, column: 166, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !1119, file: !352, line: 1475, column: 163)
!6331 = !DILocation(line: 1475, column: 183, scope: !6330)
!6332 = !DILocation(line: 1475, column: 163, scope: !6330)
!6333 = !DILocation(line: 1475, column: 193, scope: !6330)
!6334 = !DILocation(line: 1475, column: 163, scope: !1119)
!6335 = !DILocation(line: 1475, column: 163, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !1119, file: !352, discriminator: 5)
!6337 = !DILocation(line: 1475, column: 224, scope: !6338)
!6338 = !DILexicalBlockFile(scope: !6330, file: !352, discriminator: 6)
!6339 = !DILocation(line: 1475, column: 242, scope: !6330)
!6340 = !DILocation(line: 1475, column: 252, scope: !6330)
!6341 = !DILocation(line: 1475, column: 277, scope: !6330)
!6342 = !DILocation(line: 1475, column: 208, scope: !6330)
!6343 = !DILocation(line: 1475, column: 296, scope: !6344)
!6344 = !DILexicalBlockFile(scope: !1120, file: !352, discriminator: 7)
!6345 = !DILocation(line: 1475, column: 296, scope: !1119)
!6346 = !DILocation(line: 1475, column: 296, scope: !6347)
!6347 = !DILexicalBlockFile(scope: !1119, file: !352, discriminator: 8)
!6348 = !DILocation(line: 1475, column: 296, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !1119, file: !352, discriminator: 9)
!6350 = !DILocation(line: 1475, column: 309, scope: !6351)
!6351 = !DILexicalBlockFile(scope: !6352, file: !352, discriminator: 10)
!6352 = !DILexicalBlockFile(scope: !1111, file: !352, discriminator: 3)
!6353 = !DILocation(line: 1475, column: 309, scope: !1117)
!6354 = !DILocation(line: 1476, column: 19, scope: !1111)
!6355 = !DILocation(line: 1476, column: 7, scope: !1111)
!6356 = !DILocation(line: 1476, column: 25, scope: !1111)
!6357 = !DILocation(line: 1476, column: 35, scope: !1111)
!6358 = !DILocation(line: 1476, column: 43, scope: !1111)
!6359 = !DILocation(line: 1476, column: 5, scope: !1111)
!6360 = !DILocation(line: 1477, column: 1, scope: !1111)
!6361 = !DILocation(line: 1480, column: 31, scope: !1121)
!6362 = !DILocation(line: 1480, column: 45, scope: !1121)
!6363 = !DILocation(line: 1480, column: 58, scope: !1121)
!6364 = !DILocation(line: 1482, column: 5, scope: !1121)
!6365 = !DILocation(line: 1482, column: 14, scope: !6366)
!6366 = !DILexicalBlockFile(scope: !1130, file: !352, discriminator: 1)
!6367 = !DILocation(line: 1482, column: 18, scope: !1130)
!6368 = !DILocation(line: 1482, column: 14, scope: !1130)
!6369 = !DILocation(line: 1482, column: 14, scope: !1131)
!6370 = !DILocation(line: 1482, column: 24, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !1129, file: !352, discriminator: 2)
!6372 = !DILocation(line: 1482, column: 28, scope: !1129)
!6373 = !DILocation(line: 1482, column: 35, scope: !1129)
!6374 = !DILocation(line: 1482, column: 54, scope: !1129)
!6375 = !DILocation(line: 1482, column: 58, scope: !1129)
!6376 = !DILocation(line: 1482, column: 63, scope: !1129)
!6377 = !DILocation(line: 1482, column: 73, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !1129, file: !352, line: 1482, column: 73)
!6379 = !DILocation(line: 1482, column: 73, scope: !1129)
!6380 = !DILocation(line: 1482, column: 86, scope: !6381)
!6381 = !DILexicalBlockFile(scope: !6378, file: !352, discriminator: 4)
!6382 = !DILocation(line: 1482, column: 79, scope: !6378)
!6383 = !DILocation(line: 1482, column: 92, scope: !6384)
!6384 = !DILexicalBlockFile(scope: !1130, file: !352, discriminator: 5)
!6385 = !DILocation(line: 1482, column: 92, scope: !6386)
!6386 = !DILexicalBlockFile(scope: !6387, file: !352, discriminator: 7)
!6387 = !DILexicalBlockFile(scope: !1130, file: !352, discriminator: 6)
!6388 = !DILocation(line: 1482, column: 92, scope: !1129)
!6389 = !DILocation(line: 1482, column: 94, scope: !6390)
!6390 = !DILexicalBlockFile(scope: !6391, file: !352, discriminator: 8)
!6391 = !DILexicalBlockFile(scope: !1131, file: !352, discriminator: 3)
!6392 = !DILocation(line: 1483, column: 5, scope: !1121)
!6393 = !DILocation(line: 1484, column: 1, scope: !1121)
!6394 = !DILocation(line: 1487, column: 27, scope: !1132)
!6395 = !DILocation(line: 1489, column: 5, scope: !1132)
!6396 = !DILocation(line: 1489, column: 15, scope: !1132)
!6397 = !DILocation(line: 1490, column: 5, scope: !1132)
!6398 = !DILocation(line: 1490, column: 15, scope: !1132)
!6399 = !DILocation(line: 1490, column: 20, scope: !1132)
!6400 = !DILocation(line: 1490, column: 24, scope: !1132)
!6401 = !DILocation(line: 1491, column: 5, scope: !1132)
!6402 = !DILocation(line: 1491, column: 16, scope: !1132)
!6403 = !DILocation(line: 1491, column: 23, scope: !1132)
!6404 = !DILocation(line: 1491, column: 27, scope: !1132)
!6405 = !{!6319, !2677, i64 32}
!6406 = !DILocation(line: 1492, column: 5, scope: !1132)
!6407 = !DILocation(line: 1492, column: 16, scope: !1132)
!6408 = !DILocation(line: 1493, column: 5, scope: !1132)
!6409 = !DILocation(line: 1493, column: 17, scope: !1132)
!6410 = !DILocation(line: 1495, column: 9, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !1132, file: !352, line: 1495, column: 9)
!6412 = !DILocation(line: 1495, column: 12, scope: !6411)
!6413 = !DILocation(line: 1495, column: 9, scope: !1132)
!6414 = !DILocation(line: 1496, column: 9, scope: !6411)
!6415 = !DILocation(line: 1498, column: 31, scope: !1132)
!6416 = !DILocation(line: 1498, column: 37, scope: !1132)
!6417 = !DILocation(line: 1498, column: 47, scope: !1132)
!6418 = !DILocation(line: 1498, column: 14, scope: !1132)
!6419 = !DILocation(line: 1499, column: 5, scope: !1132)
!6420 = !DILocation(line: 1499, column: 12, scope: !6421)
!6421 = !DILexicalBlockFile(scope: !6422, file: !352, discriminator: 2)
!6422 = !DILexicalBlockFile(scope: !1132, file: !352, discriminator: 1)
!6423 = !DILocation(line: 1499, column: 16, scope: !1132)
!6424 = !{!6319, !2677, i64 48}
!6425 = !DILocation(line: 1499, column: 22, scope: !1132)
!6426 = !DILocation(line: 1499, column: 26, scope: !1132)
!6427 = !{!6319, !2677, i64 24}
!6428 = !DILocation(line: 1499, column: 20, scope: !1132)
!6429 = !DILocation(line: 1500, column: 16, scope: !1144)
!6430 = !DILocation(line: 1500, column: 25, scope: !1144)
!6431 = !DILocation(line: 1500, column: 14, scope: !1144)
!6432 = !DILocation(line: 1501, column: 13, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !1144, file: !352, line: 1501, column: 13)
!6434 = !DILocation(line: 1501, column: 18, scope: !6433)
!6435 = !DILocation(line: 1501, column: 13, scope: !1144)
!6436 = !DILocation(line: 1502, column: 13, scope: !6433)
!6437 = !DILocation(line: 1503, column: 9, scope: !1144)
!6438 = !DILocation(line: 1503, column: 14, scope: !6439)
!6439 = !DILexicalBlockFile(scope: !1143, file: !352, discriminator: 1)
!6440 = !DILocation(line: 1503, column: 24, scope: !1143)
!6441 = !DILocation(line: 1503, column: 54, scope: !1143)
!6442 = !DILocation(line: 1503, column: 69, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !1143, file: !352, line: 1503, column: 66)
!6444 = !DILocation(line: 1503, column: 86, scope: !6443)
!6445 = !DILocation(line: 1503, column: 66, scope: !6443)
!6446 = !DILocation(line: 1503, column: 96, scope: !6443)
!6447 = !DILocation(line: 1503, column: 66, scope: !1143)
!6448 = !DILocation(line: 1503, column: 66, scope: !6449)
!6449 = !DILexicalBlockFile(scope: !1143, file: !352, discriminator: 2)
!6450 = !DILocation(line: 1503, column: 127, scope: !6451)
!6451 = !DILexicalBlockFile(scope: !6443, file: !352, discriminator: 3)
!6452 = !DILocation(line: 1503, column: 145, scope: !6443)
!6453 = !DILocation(line: 1503, column: 155, scope: !6443)
!6454 = !DILocation(line: 1503, column: 180, scope: !6443)
!6455 = !DILocation(line: 1503, column: 111, scope: !6443)
!6456 = !DILocation(line: 1503, column: 199, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !1144, file: !352, discriminator: 4)
!6458 = !DILocation(line: 1503, column: 199, scope: !1143)
!6459 = !DILocation(line: 1503, column: 199, scope: !6460)
!6460 = !DILexicalBlockFile(scope: !1143, file: !352, discriminator: 5)
!6461 = !DILocation(line: 1504, column: 9, scope: !1144)
!6462 = !DILocation(line: 1504, column: 13, scope: !1144)
!6463 = !DILocation(line: 1504, column: 16, scope: !1144)
!6464 = !DILocation(line: 1506, column: 9, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !1132, file: !352, line: 1506, column: 9)
!6466 = !DILocation(line: 1506, column: 14, scope: !6465)
!6467 = !DILocation(line: 1506, column: 20, scope: !6465)
!6468 = !DILocation(line: 1506, column: 23, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !6465, file: !352, discriminator: 1)
!6470 = !DILocation(line: 1506, column: 27, scope: !6465)
!6471 = !DILocation(line: 1506, column: 34, scope: !6465)
!6472 = !DILocation(line: 1506, column: 31, scope: !6465)
!6473 = !DILocation(line: 1506, column: 9, scope: !1132)
!6474 = !DILocation(line: 1507, column: 9, scope: !6465)
!6475 = !DILocation(line: 1508, column: 12, scope: !1132)
!6476 = !DILocation(line: 1508, column: 21, scope: !1132)
!6477 = !DILocation(line: 1508, column: 10, scope: !1132)
!6478 = !DILocation(line: 1509, column: 9, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !1132, file: !352, line: 1509, column: 9)
!6480 = !DILocation(line: 1509, column: 14, scope: !6479)
!6481 = !DILocation(line: 1509, column: 9, scope: !1132)
!6482 = !DILocation(line: 1510, column: 9, scope: !6479)
!6483 = !DILocation(line: 1511, column: 5, scope: !1132)
!6484 = !DILocation(line: 1511, column: 9, scope: !1132)
!6485 = !DILocation(line: 1511, column: 12, scope: !1132)
!6486 = !DILocation(line: 1512, column: 15, scope: !1132)
!6487 = !DILocation(line: 1512, column: 19, scope: !1132)
!6488 = !DILocation(line: 1512, column: 13, scope: !1132)
!6489 = !DILocation(line: 1515, column: 25, scope: !1132)
!6490 = !DILocation(line: 1515, column: 29, scope: !1132)
!6491 = !{!6319, !2677, i64 40}
!6492 = !DILocation(line: 1515, column: 5, scope: !1132)
!6493 = !DILocation(line: 1515, column: 9, scope: !1132)
!6494 = !DILocation(line: 1515, column: 14, scope: !1132)
!6495 = !DILocation(line: 1516, column: 9, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !1132, file: !352, line: 1516, column: 9)
!6497 = !DILocation(line: 1516, column: 13, scope: !6496)
!6498 = !DILocation(line: 1516, column: 20, scope: !6496)
!6499 = !DILocation(line: 1516, column: 18, scope: !6496)
!6500 = !DILocation(line: 1516, column: 28, scope: !6496)
!6501 = !DILocation(line: 1516, column: 32, scope: !6502)
!6502 = !DILexicalBlockFile(scope: !6496, file: !352, discriminator: 1)
!6503 = !DILocation(line: 1516, column: 37, scope: !6496)
!6504 = !DILocation(line: 1516, column: 43, scope: !6496)
!6505 = !DILocation(line: 1516, column: 46, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6496, file: !352, discriminator: 2)
!6507 = !DILocation(line: 1516, column: 50, scope: !6496)
!6508 = !DILocation(line: 1516, column: 57, scope: !6496)
!6509 = !DILocation(line: 1516, column: 55, scope: !6496)
!6510 = !DILocation(line: 1516, column: 9, scope: !1132)
!6511 = !DILocation(line: 1517, column: 20, scope: !6496)
!6512 = !DILocation(line: 1517, column: 9, scope: !6496)
!6513 = !DILocation(line: 1517, column: 13, scope: !6496)
!6514 = !DILocation(line: 1517, column: 18, scope: !6496)
!6515 = !DILocation(line: 1518, column: 12, scope: !1132)
!6516 = !DILocation(line: 1518, column: 5, scope: !1132)
!6517 = !DILocation(line: 1521, column: 5, scope: !1132)
!6518 = !DILocation(line: 1521, column: 10, scope: !6519)
!6519 = !DILexicalBlockFile(scope: !1146, file: !352, discriminator: 1)
!6520 = !DILocation(line: 1521, column: 20, scope: !1146)
!6521 = !DILocation(line: 1521, column: 43, scope: !1146)
!6522 = !DILocation(line: 1521, column: 47, scope: !1146)
!6523 = !DILocation(line: 1521, column: 56, scope: !1150)
!6524 = !DILocation(line: 1521, column: 64, scope: !1150)
!6525 = !DILocation(line: 1521, column: 56, scope: !1146)
!6526 = !DILocation(line: 1521, column: 82, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !1149, file: !352, discriminator: 2)
!6528 = !DILocation(line: 1521, column: 86, scope: !1149)
!6529 = !DILocation(line: 1521, column: 90, scope: !1149)
!6530 = !DILocation(line: 1521, column: 104, scope: !1149)
!6531 = !DILocation(line: 1521, column: 109, scope: !6532)
!6532 = !DILexicalBlockFile(scope: !1148, file: !352, discriminator: 4)
!6533 = !DILocation(line: 1521, column: 119, scope: !1148)
!6534 = !DILocation(line: 1521, column: 149, scope: !1148)
!6535 = !DILocation(line: 1521, column: 167, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !1148, file: !352, line: 1521, column: 164)
!6537 = !DILocation(line: 1521, column: 184, scope: !6536)
!6538 = !DILocation(line: 1521, column: 164, scope: !6536)
!6539 = !DILocation(line: 1521, column: 194, scope: !6536)
!6540 = !DILocation(line: 1521, column: 164, scope: !1148)
!6541 = !DILocation(line: 1521, column: 164, scope: !6542)
!6542 = !DILexicalBlockFile(scope: !1148, file: !352, discriminator: 5)
!6543 = !DILocation(line: 1521, column: 225, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6536, file: !352, discriminator: 6)
!6545 = !DILocation(line: 1521, column: 243, scope: !6536)
!6546 = !DILocation(line: 1521, column: 253, scope: !6536)
!6547 = !DILocation(line: 1521, column: 278, scope: !6536)
!6548 = !DILocation(line: 1521, column: 209, scope: !6536)
!6549 = !DILocation(line: 1521, column: 297, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !1149, file: !352, discriminator: 7)
!6551 = !DILocation(line: 1521, column: 297, scope: !1148)
!6552 = !DILocation(line: 1521, column: 297, scope: !6553)
!6553 = !DILexicalBlockFile(scope: !1148, file: !352, discriminator: 8)
!6554 = !DILocation(line: 1521, column: 310, scope: !6555)
!6555 = !DILexicalBlockFile(scope: !1149, file: !352, discriminator: 9)
!6556 = !DILocation(line: 1521, column: 312, scope: !6557)
!6557 = !DILexicalBlockFile(scope: !6558, file: !352, discriminator: 10)
!6558 = !DILexicalBlockFile(scope: !1132, file: !352, discriminator: 3)
!6559 = !DILocation(line: 1521, column: 312, scope: !1146)
!6560 = !DILocation(line: 1521, column: 312, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !1146, file: !352, discriminator: 11)
!6562 = !DILocation(line: 1522, column: 5, scope: !1132)
!6563 = !DILocation(line: 1523, column: 1, scope: !1132)
!6564 = !DILocation(line: 1391, column: 26, scope: !1168)
!6565 = !DILocation(line: 1391, column: 42, scope: !1168)
!6566 = !DILocation(line: 1391, column: 58, scope: !1168)
!6567 = !DILocation(line: 1393, column: 5, scope: !1168)
!6568 = !DILocation(line: 1393, column: 15, scope: !1168)
!6569 = !DILocation(line: 1394, column: 5, scope: !1168)
!6570 = !DILocation(line: 1394, column: 16, scope: !1168)
!6571 = !DILocation(line: 1394, column: 25, scope: !1168)
!6572 = !DILocation(line: 1394, column: 34, scope: !1168)
!6573 = !DILocation(line: 1395, column: 5, scope: !1168)
!6574 = !DILocation(line: 1395, column: 15, scope: !1168)
!6575 = !DILocation(line: 1395, column: 20, scope: !1168)
!6576 = !DILocation(line: 1395, column: 36, scope: !1168)
!6577 = !DILocation(line: 1395, column: 52, scope: !1168)
!6578 = !DILocation(line: 1396, column: 5, scope: !1168)
!6579 = !DILocation(line: 1396, column: 16, scope: !1168)
!6580 = !DILocation(line: 1397, column: 5, scope: !1168)
!6581 = !DILocation(line: 1397, column: 19, scope: !1168)
!6582 = !DILocation(line: 1399, column: 9, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1399, column: 9)
!6584 = !DILocation(line: 1399, column: 14, scope: !6583)
!6585 = !DILocation(line: 1399, column: 30, scope: !6583)
!6586 = !DILocation(line: 1399, column: 64, scope: !6587)
!6587 = !DILexicalBlockFile(scope: !6583, file: !352, discriminator: 1)
!6588 = !DILocation(line: 1399, column: 34, scope: !6583)
!6589 = !DILocation(line: 1399, column: 9, scope: !1168)
!6590 = !DILocation(line: 1400, column: 9, scope: !6583)
!6591 = !DILocation(line: 1402, column: 28, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1402, column: 9)
!6593 = !DILocation(line: 1402, column: 10, scope: !6592)
!6594 = !DILocation(line: 1402, column: 9, scope: !1168)
!6595 = !DILocation(line: 1403, column: 9, scope: !6592)
!6596 = !DILocation(line: 1405, column: 28, scope: !1168)
!6597 = !DILocation(line: 1405, column: 15, scope: !1168)
!6598 = !DILocation(line: 1405, column: 13, scope: !1168)
!6599 = !DILocation(line: 1406, column: 9, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1406, column: 9)
!6601 = !DILocation(line: 1406, column: 17, scope: !6600)
!6602 = !DILocation(line: 1406, column: 9, scope: !1168)
!6603 = !DILocation(line: 1407, column: 13, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !352, line: 1407, column: 13)
!6605 = distinct !DILexicalBlock(scope: !6600, file: !352, line: 1406, column: 23)
!6606 = !DILocation(line: 1407, column: 16, scope: !6604)
!6607 = !DILocation(line: 1407, column: 13, scope: !6605)
!6608 = !DILocation(line: 1408, column: 37, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6604, file: !352, line: 1407, column: 38)
!6610 = !DILocation(line: 1408, column: 20, scope: !6609)
!6611 = !DILocation(line: 1408, column: 18, scope: !6609)
!6612 = !DILocation(line: 1409, column: 17, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6609, file: !352, line: 1409, column: 17)
!6614 = !DILocation(line: 1409, column: 22, scope: !6613)
!6615 = !DILocation(line: 1409, column: 17, scope: !6609)
!6616 = !DILocation(line: 1410, column: 21, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !352, line: 1410, column: 21)
!6618 = distinct !DILexicalBlock(scope: !6613, file: !352, line: 1409, column: 29)
!6619 = !DILocation(line: 1410, column: 21, scope: !6618)
!6620 = !DILocation(line: 1411, column: 21, scope: !6617)
!6621 = !DILocation(line: 1412, column: 33, scope: !6618)
!6622 = !DILocation(line: 1412, column: 17, scope: !6618)
!6623 = !DILocation(line: 1414, column: 17, scope: !6618)
!6624 = !DILocation(line: 1416, column: 9, scope: !6609)
!6625 = !DILocation(line: 1417, column: 5, scope: !6605)
!6626 = !DILocation(line: 1418, column: 13, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !352, line: 1418, column: 13)
!6628 = distinct !DILexicalBlock(scope: !6600, file: !352, line: 1417, column: 12)
!6629 = !DILocation(line: 1418, column: 16, scope: !6627)
!6630 = !DILocation(line: 1418, column: 13, scope: !6628)
!6631 = !DILocation(line: 1419, column: 38, scope: !6627)
!6632 = !DILocation(line: 1419, column: 21, scope: !6627)
!6633 = !DILocation(line: 1419, column: 19, scope: !6627)
!6634 = !DILocation(line: 1419, column: 13, scope: !6627)
!6635 = !DILocation(line: 1420, column: 13, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6628, file: !352, line: 1420, column: 13)
!6637 = !DILocation(line: 1420, column: 19, scope: !6636)
!6638 = !DILocation(line: 1420, column: 25, scope: !6636)
!6639 = !DILocation(line: 1420, column: 28, scope: !6640)
!6640 = !DILexicalBlockFile(scope: !6636, file: !352, discriminator: 1)
!6641 = !DILocation(line: 1420, column: 13, scope: !6628)
!6642 = !DILocation(line: 1421, column: 13, scope: !6636)
!6643 = !DILocation(line: 1422, column: 13, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6628, file: !352, line: 1422, column: 13)
!6645 = !DILocation(line: 1422, column: 16, scope: !6644)
!6646 = !DILocation(line: 1422, column: 13, scope: !6628)
!6647 = !DILocation(line: 1423, column: 37, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6644, file: !352, line: 1422, column: 38)
!6649 = !DILocation(line: 1423, column: 20, scope: !6648)
!6650 = !DILocation(line: 1423, column: 18, scope: !6648)
!6651 = !DILocation(line: 1424, column: 17, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6648, file: !352, line: 1424, column: 17)
!6653 = !DILocation(line: 1424, column: 22, scope: !6652)
!6654 = !DILocation(line: 1424, column: 17, scope: !6648)
!6655 = !DILocation(line: 1425, column: 21, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !352, line: 1425, column: 21)
!6657 = distinct !DILexicalBlock(scope: !6652, file: !352, line: 1424, column: 29)
!6658 = !DILocation(line: 1425, column: 21, scope: !6657)
!6659 = !DILocation(line: 1426, column: 21, scope: !6656)
!6660 = !DILocation(line: 1427, column: 33, scope: !6657)
!6661 = !DILocation(line: 1427, column: 17, scope: !6657)
!6662 = !DILocation(line: 1429, column: 17, scope: !6657)
!6663 = !DILocation(line: 1431, column: 9, scope: !6648)
!6664 = !DILocation(line: 1433, column: 9, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1433, column: 9)
!6666 = !DILocation(line: 1433, column: 14, scope: !6665)
!6667 = !DILocation(line: 1433, column: 17, scope: !6665)
!6668 = !DILocation(line: 1433, column: 20, scope: !6669)
!6669 = !DILexicalBlockFile(scope: !6665, file: !352, discriminator: 1)
!6670 = !DILocation(line: 1433, column: 24, scope: !6665)
!6671 = !DILocation(line: 1433, column: 9, scope: !1168)
!6672 = !DILocation(line: 1434, column: 25, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6665, file: !352, line: 1433, column: 29)
!6674 = !DILocation(line: 1434, column: 9, scope: !6673)
!6675 = !DILocation(line: 1436, column: 9, scope: !6673)
!6676 = !DILocation(line: 1439, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1439, column: 9)
!6678 = !DILocation(line: 1439, column: 12, scope: !6677)
!6679 = !DILocation(line: 1439, column: 9, scope: !1168)
!6680 = !DILocation(line: 1440, column: 13, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !352, line: 1440, column: 13)
!6682 = distinct !DILexicalBlock(scope: !6677, file: !352, line: 1439, column: 27)
!6683 = !DILocation(line: 1440, column: 16, scope: !6681)
!6684 = !DILocation(line: 1440, column: 13, scope: !6682)
!6685 = !DILocation(line: 1441, column: 37, scope: !6681)
!6686 = !DILocation(line: 1441, column: 20, scope: !6681)
!6687 = !DILocation(line: 1441, column: 18, scope: !6681)
!6688 = !DILocation(line: 1441, column: 13, scope: !6681)
!6689 = !DILocation(line: 1442, column: 13, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6682, file: !352, line: 1442, column: 13)
!6691 = !DILocation(line: 1442, column: 18, scope: !6690)
!6692 = !DILocation(line: 1442, column: 24, scope: !6690)
!6693 = !DILocation(line: 1442, column: 27, scope: !6694)
!6694 = !DILexicalBlockFile(scope: !6690, file: !352, discriminator: 1)
!6695 = !DILocation(line: 1442, column: 13, scope: !6682)
!6696 = !DILocation(line: 1443, column: 13, scope: !6690)
!6697 = !DILocation(line: 1444, column: 5, scope: !6682)
!6698 = !DILocation(line: 1445, column: 9, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1445, column: 9)
!6700 = !DILocation(line: 1445, column: 13, scope: !6699)
!6701 = !DILocation(line: 1445, column: 9, scope: !1168)
!6702 = !DILocation(line: 1446, column: 25, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6699, file: !352, line: 1445, column: 17)
!6704 = !DILocation(line: 1446, column: 9, scope: !6703)
!6705 = !DILocation(line: 1448, column: 9, scope: !6703)
!6706 = !DILocation(line: 1452, column: 27, scope: !1168)
!6707 = !DILocation(line: 1452, column: 10, scope: !1168)
!6708 = !DILocation(line: 1452, column: 8, scope: !1168)
!6709 = !DILocation(line: 1453, column: 9, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !1168, file: !352, line: 1453, column: 9)
!6711 = !DILocation(line: 1453, column: 12, scope: !6710)
!6712 = !DILocation(line: 1453, column: 9, scope: !1168)
!6713 = !DILocation(line: 1454, column: 9, scope: !6710)
!6714 = !DILocation(line: 1457, column: 26, scope: !1168)
!6715 = !DILocation(line: 1457, column: 32, scope: !1168)
!6716 = !DILocation(line: 1457, column: 41, scope: !1168)
!6717 = !DILocation(line: 1457, column: 10, scope: !1168)
!6718 = !DILocation(line: 1457, column: 8, scope: !1168)
!6719 = !DILocation(line: 1458, column: 9, scope: !1186)
!6720 = !DILocation(line: 1458, column: 12, scope: !1186)
!6721 = !DILocation(line: 1458, column: 9, scope: !1168)
!6722 = !DILocation(line: 1459, column: 9, scope: !1185)
!6723 = !DILocation(line: 1459, column: 14, scope: !6724)
!6724 = !DILexicalBlockFile(scope: !1184, file: !352, discriminator: 1)
!6725 = !DILocation(line: 1459, column: 24, scope: !1184)
!6726 = !DILocation(line: 1459, column: 54, scope: !1184)
!6727 = !DILocation(line: 1459, column: 67, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !1184, file: !352, line: 1459, column: 64)
!6729 = !DILocation(line: 1459, column: 84, scope: !6728)
!6730 = !DILocation(line: 1459, column: 64, scope: !6728)
!6731 = !DILocation(line: 1459, column: 94, scope: !6728)
!6732 = !DILocation(line: 1459, column: 64, scope: !1184)
!6733 = !DILocation(line: 1459, column: 64, scope: !6734)
!6734 = !DILexicalBlockFile(scope: !1184, file: !352, discriminator: 2)
!6735 = !DILocation(line: 1459, column: 125, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6728, file: !352, discriminator: 3)
!6737 = !DILocation(line: 1459, column: 143, scope: !6728)
!6738 = !DILocation(line: 1459, column: 153, scope: !6728)
!6739 = !DILocation(line: 1459, column: 178, scope: !6728)
!6740 = !DILocation(line: 1459, column: 109, scope: !6728)
!6741 = !DILocation(line: 1459, column: 197, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !1185, file: !352, discriminator: 4)
!6743 = !DILocation(line: 1459, column: 197, scope: !1184)
!6744 = !DILocation(line: 1459, column: 197, scope: !6745)
!6745 = !DILexicalBlockFile(scope: !1184, file: !352, discriminator: 5)
!6746 = !DILocation(line: 1460, column: 9, scope: !1185)
!6747 = !DILocation(line: 1462, column: 14, scope: !1168)
!6748 = !DILocation(line: 1462, column: 5, scope: !1168)
!6749 = !DILocation(line: 1462, column: 9, scope: !1168)
!6750 = !DILocation(line: 1462, column: 12, scope: !1168)
!6751 = !DILocation(line: 1463, column: 16, scope: !1168)
!6752 = !DILocation(line: 1463, column: 5, scope: !1168)
!6753 = !DILocation(line: 1463, column: 9, scope: !1168)
!6754 = !DILocation(line: 1463, column: 14, scope: !1168)
!6755 = !DILocation(line: 1464, column: 16, scope: !1168)
!6756 = !DILocation(line: 1464, column: 5, scope: !1168)
!6757 = !DILocation(line: 1464, column: 9, scope: !1168)
!6758 = !DILocation(line: 1464, column: 14, scope: !1168)
!6759 = !DILocation(line: 1465, column: 16, scope: !1168)
!6760 = !DILocation(line: 1465, column: 5, scope: !1168)
!6761 = !DILocation(line: 1465, column: 9, scope: !1168)
!6762 = !DILocation(line: 1465, column: 14, scope: !1168)
!6763 = !DILocation(line: 1466, column: 5, scope: !1168)
!6764 = !DILocation(line: 1466, column: 9, scope: !1168)
!6765 = !DILocation(line: 1466, column: 13, scope: !1168)
!6766 = !DILocation(line: 1468, column: 24, scope: !1168)
!6767 = !DILocation(line: 1468, column: 12, scope: !1168)
!6768 = !DILocation(line: 1468, column: 5, scope: !1168)
!6769 = !DILocation(line: 1469, column: 1, scope: !1168)
!6770 = !DILocation(line: 1526, column: 29, scope: !1151)
!6771 = !DILocation(line: 1531, column: 5, scope: !1151)
!6772 = !DILocation(line: 1531, column: 15, scope: !1151)
!6773 = !DILocation(line: 1532, column: 9, scope: !1157)
!6774 = !DILocation(line: 1532, column: 13, scope: !1157)
!6775 = !DILocation(line: 1532, column: 16, scope: !1157)
!6776 = !DILocation(line: 1532, column: 9, scope: !1151)
!6777 = !DILocation(line: 1533, column: 9, scope: !1156)
!6778 = !DILocation(line: 1533, column: 19, scope: !1156)
!6779 = !DILocation(line: 1534, column: 9, scope: !1156)
!6780 = !DILocation(line: 1534, column: 19, scope: !1156)
!6781 = !DILocation(line: 1535, column: 22, scope: !1156)
!6782 = !DILocation(line: 1535, column: 20, scope: !1156)
!6783 = !DILocation(line: 1536, column: 13, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !1156, file: !352, line: 1536, column: 13)
!6785 = !DILocation(line: 1536, column: 24, scope: !6784)
!6786 = !DILocation(line: 1536, column: 13, scope: !1156)
!6787 = !DILocation(line: 1537, column: 13, scope: !6784)
!6788 = !DILocation(line: 1538, column: 37, scope: !1156)
!6789 = !DILocation(line: 1538, column: 20, scope: !1156)
!6790 = !DILocation(line: 1538, column: 18, scope: !1156)
!6791 = !DILocation(line: 1539, column: 9, scope: !1156)
!6792 = !DILocation(line: 1539, column: 14, scope: !6793)
!6793 = !DILexicalBlockFile(scope: !1160, file: !352, discriminator: 1)
!6794 = !DILocation(line: 1539, column: 24, scope: !1160)
!6795 = !DILocation(line: 1539, column: 54, scope: !1160)
!6796 = !DILocation(line: 1539, column: 75, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !1160, file: !352, line: 1539, column: 72)
!6798 = !DILocation(line: 1539, column: 92, scope: !6797)
!6799 = !DILocation(line: 1539, column: 72, scope: !6797)
!6800 = !DILocation(line: 1539, column: 102, scope: !6797)
!6801 = !DILocation(line: 1539, column: 72, scope: !1160)
!6802 = !DILocation(line: 1539, column: 72, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !1160, file: !352, discriminator: 2)
!6804 = !DILocation(line: 1539, column: 133, scope: !6805)
!6805 = !DILexicalBlockFile(scope: !6797, file: !352, discriminator: 3)
!6806 = !DILocation(line: 1539, column: 151, scope: !6797)
!6807 = !DILocation(line: 1539, column: 161, scope: !6797)
!6808 = !DILocation(line: 1539, column: 186, scope: !6797)
!6809 = !DILocation(line: 1539, column: 117, scope: !6797)
!6810 = !DILocation(line: 1539, column: 205, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !1156, file: !352, discriminator: 4)
!6812 = !DILocation(line: 1539, column: 205, scope: !1160)
!6813 = !DILocation(line: 1539, column: 205, scope: !6814)
!6814 = !DILexicalBlockFile(scope: !1160, file: !352, discriminator: 5)
!6815 = !DILocation(line: 1540, column: 13, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !1156, file: !352, line: 1540, column: 13)
!6817 = !DILocation(line: 1540, column: 22, scope: !6816)
!6818 = !DILocation(line: 1540, column: 13, scope: !1156)
!6819 = !DILocation(line: 1541, column: 13, scope: !6816)
!6820 = !DILocation(line: 1542, column: 54, scope: !1156)
!6821 = !DILocation(line: 1542, column: 42, scope: !1156)
!6822 = !DILocation(line: 1542, column: 60, scope: !1156)
!6823 = !DILocation(line: 1542, column: 70, scope: !1156)
!6824 = !DILocation(line: 1542, column: 16, scope: !1156)
!6825 = !DILocation(line: 1542, column: 9, scope: !1156)
!6826 = !DILocation(line: 1543, column: 5, scope: !1157)
!6827 = !DILocation(line: 1544, column: 9, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !1151, file: !352, line: 1544, column: 9)
!6829 = !DILocation(line: 1544, column: 13, scope: !6828)
!6830 = !DILocation(line: 1544, column: 18, scope: !6828)
!6831 = !DILocation(line: 1544, column: 9, scope: !1151)
!6832 = !DILocation(line: 1545, column: 14, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6828, file: !352, line: 1544, column: 25)
!6834 = !DILocation(line: 1546, column: 25, scope: !6833)
!6835 = !DILocation(line: 1546, column: 33, scope: !6833)
!6836 = !DILocation(line: 1546, column: 42, scope: !6833)
!6837 = !DILocation(line: 1547, column: 5, scope: !6833)
!6838 = !DILocation(line: 1548, column: 35, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6828, file: !352, line: 1547, column: 12)
!6840 = !DILocation(line: 1548, column: 39, scope: !6839)
!6841 = !DILocation(line: 1548, column: 16, scope: !6839)
!6842 = !DILocation(line: 1548, column: 14, scope: !6839)
!6843 = !DILocation(line: 1549, column: 13, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6839, file: !352, line: 1549, column: 13)
!6845 = !DILocation(line: 1549, column: 18, scope: !6844)
!6846 = !DILocation(line: 1549, column: 13, scope: !6839)
!6847 = !DILocation(line: 1550, column: 13, scope: !6844)
!6848 = !DILocation(line: 1552, column: 52, scope: !1151)
!6849 = !DILocation(line: 1552, column: 40, scope: !1151)
!6850 = !DILocation(line: 1552, column: 58, scope: !1151)
!6851 = !DILocation(line: 1553, column: 9, scope: !1151)
!6852 = !DILocation(line: 1553, column: 13, scope: !1151)
!6853 = !DILocation(line: 1553, column: 17, scope: !1151)
!6854 = !DILocation(line: 1553, column: 21, scope: !1151)
!6855 = !DILocation(line: 1553, column: 27, scope: !1151)
!6856 = !DILocation(line: 1553, column: 33, scope: !1151)
!6857 = !DILocation(line: 1553, column: 37, scope: !1151)
!6858 = !DILocation(line: 1554, column: 9, scope: !1151)
!6859 = !DILocation(line: 1554, column: 13, scope: !1151)
!6860 = !DILocation(line: 1552, column: 12, scope: !1151)
!6861 = !DILocation(line: 1552, column: 5, scope: !1151)
!6862 = !DILocation(line: 1555, column: 1, scope: !1151)
!6863 = !DILocation(line: 1558, column: 31, scope: !1161)
!6864 = !DILocation(line: 1558, column: 45, scope: !1161)
!6865 = !DILocation(line: 1560, column: 5, scope: !1161)
!6866 = !DILocation(line: 1560, column: 16, scope: !1161)
!6867 = !DILocation(line: 1560, column: 39, scope: !1161)
!6868 = !DILocation(line: 1560, column: 22, scope: !1161)
!6869 = !DILocation(line: 1561, column: 9, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !1161, file: !352, line: 1561, column: 9)
!6871 = !DILocation(line: 1561, column: 13, scope: !6870)
!6872 = !DILocation(line: 1561, column: 19, scope: !6870)
!6873 = !DILocation(line: 1561, column: 22, scope: !6874)
!6874 = !DILexicalBlockFile(scope: !6870, file: !352, discriminator: 1)
!6875 = !DILocation(line: 1561, column: 9, scope: !1161)
!6876 = !DILocation(line: 1562, column: 9, scope: !6870)
!6877 = !DILocation(line: 1563, column: 15, scope: !1161)
!6878 = !DILocation(line: 1563, column: 5, scope: !1161)
!6879 = !DILocation(line: 1563, column: 9, scope: !1161)
!6880 = !DILocation(line: 1563, column: 13, scope: !1161)
!6881 = !DILocation(line: 1564, column: 58, scope: !1161)
!6882 = !DILocation(line: 1564, column: 5, scope: !1161)
!6883 = !DILocation(line: 1565, column: 1, scope: !1161)
!6884 = !DILocation(line: 1673, column: 32, scope: !1187)
!6885 = !DILocation(line: 1675, column: 25, scope: !1187)
!6886 = !DILocation(line: 1675, column: 5, scope: !1187)
!6887 = !DILocation(line: 1676, column: 5, scope: !1187)
!6888 = !DILocation(line: 1676, column: 10, scope: !6889)
!6889 = !DILexicalBlockFile(scope: !1193, file: !352, discriminator: 1)
!6890 = !DILocation(line: 1676, column: 20, scope: !1193)
!6891 = !DILocation(line: 1676, column: 51, scope: !1193)
!6892 = !DILocation(line: 1676, column: 55, scope: !1193)
!6893 = !{!6894, !2680, i64 16}
!6894 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24}
!6895 = !DILocation(line: 1676, column: 66, scope: !1196)
!6896 = !DILocation(line: 1676, column: 82, scope: !1196)
!6897 = !DILocation(line: 1676, column: 66, scope: !1193)
!6898 = !DILocation(line: 1676, column: 97, scope: !6899)
!6899 = !DILexicalBlockFile(scope: !1196, file: !352, discriminator: 2)
!6900 = !DILocation(line: 1676, column: 102, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !1195, file: !352, discriminator: 4)
!6902 = !DILocation(line: 1676, column: 112, scope: !1195)
!6903 = !DILocation(line: 1676, column: 142, scope: !1195)
!6904 = !DILocation(line: 1676, column: 168, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !1195, file: !352, line: 1676, column: 165)
!6906 = !DILocation(line: 1676, column: 185, scope: !6905)
!6907 = !DILocation(line: 1676, column: 165, scope: !6905)
!6908 = !DILocation(line: 1676, column: 195, scope: !6905)
!6909 = !DILocation(line: 1676, column: 165, scope: !1195)
!6910 = !DILocation(line: 1676, column: 165, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !1195, file: !352, discriminator: 5)
!6912 = !DILocation(line: 1676, column: 226, scope: !6913)
!6913 = !DILexicalBlockFile(scope: !6905, file: !352, discriminator: 6)
!6914 = !DILocation(line: 1676, column: 244, scope: !6905)
!6915 = !DILocation(line: 1676, column: 254, scope: !6905)
!6916 = !DILocation(line: 1676, column: 279, scope: !6905)
!6917 = !DILocation(line: 1676, column: 210, scope: !6905)
!6918 = !DILocation(line: 1676, column: 298, scope: !6919)
!6919 = !DILexicalBlockFile(scope: !1196, file: !352, discriminator: 7)
!6920 = !DILocation(line: 1676, column: 298, scope: !1195)
!6921 = !DILocation(line: 1676, column: 298, scope: !6922)
!6922 = !DILexicalBlockFile(scope: !1195, file: !352, discriminator: 8)
!6923 = !DILocation(line: 1676, column: 298, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !1195, file: !352, discriminator: 9)
!6925 = !DILocation(line: 1676, column: 311, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !6927, file: !352, discriminator: 10)
!6927 = !DILexicalBlockFile(scope: !1187, file: !352, discriminator: 3)
!6928 = !DILocation(line: 1676, column: 311, scope: !1193)
!6929 = !DILocation(line: 1677, column: 5, scope: !1187)
!6930 = !DILocation(line: 1677, column: 10, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !1198, file: !352, discriminator: 1)
!6932 = !DILocation(line: 1677, column: 20, scope: !1198)
!6933 = !DILocation(line: 1677, column: 51, scope: !1198)
!6934 = !DILocation(line: 1677, column: 55, scope: !1198)
!6935 = !{!6894, !2680, i64 24}
!6936 = !DILocation(line: 1677, column: 64, scope: !1201)
!6937 = !DILocation(line: 1677, column: 80, scope: !1201)
!6938 = !DILocation(line: 1677, column: 64, scope: !1198)
!6939 = !DILocation(line: 1677, column: 95, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !1201, file: !352, discriminator: 2)
!6941 = !DILocation(line: 1677, column: 100, scope: !6942)
!6942 = !DILexicalBlockFile(scope: !1200, file: !352, discriminator: 4)
!6943 = !DILocation(line: 1677, column: 110, scope: !1200)
!6944 = !DILocation(line: 1677, column: 140, scope: !1200)
!6945 = !DILocation(line: 1677, column: 166, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !1200, file: !352, line: 1677, column: 163)
!6947 = !DILocation(line: 1677, column: 183, scope: !6946)
!6948 = !DILocation(line: 1677, column: 163, scope: !6946)
!6949 = !DILocation(line: 1677, column: 193, scope: !6946)
!6950 = !DILocation(line: 1677, column: 163, scope: !1200)
!6951 = !DILocation(line: 1677, column: 163, scope: !6952)
!6952 = !DILexicalBlockFile(scope: !1200, file: !352, discriminator: 5)
!6953 = !DILocation(line: 1677, column: 224, scope: !6954)
!6954 = !DILexicalBlockFile(scope: !6946, file: !352, discriminator: 6)
!6955 = !DILocation(line: 1677, column: 242, scope: !6946)
!6956 = !DILocation(line: 1677, column: 252, scope: !6946)
!6957 = !DILocation(line: 1677, column: 277, scope: !6946)
!6958 = !DILocation(line: 1677, column: 208, scope: !6946)
!6959 = !DILocation(line: 1677, column: 296, scope: !6960)
!6960 = !DILexicalBlockFile(scope: !1201, file: !352, discriminator: 7)
!6961 = !DILocation(line: 1677, column: 296, scope: !1200)
!6962 = !DILocation(line: 1677, column: 296, scope: !6963)
!6963 = !DILexicalBlockFile(scope: !1200, file: !352, discriminator: 8)
!6964 = !DILocation(line: 1677, column: 296, scope: !6965)
!6965 = !DILexicalBlockFile(scope: !1200, file: !352, discriminator: 9)
!6966 = !DILocation(line: 1677, column: 309, scope: !6926)
!6967 = !DILocation(line: 1677, column: 309, scope: !1198)
!6968 = !DILocation(line: 1678, column: 19, scope: !1187)
!6969 = !DILocation(line: 1678, column: 7, scope: !1187)
!6970 = !DILocation(line: 1678, column: 25, scope: !1187)
!6971 = !DILocation(line: 1678, column: 35, scope: !1187)
!6972 = !DILocation(line: 1678, column: 43, scope: !1187)
!6973 = !DILocation(line: 1678, column: 5, scope: !1187)
!6974 = !DILocation(line: 1679, column: 1, scope: !1187)
!6975 = !DILocation(line: 1682, column: 33, scope: !1202)
!6976 = !DILocation(line: 1682, column: 47, scope: !1202)
!6977 = !DILocation(line: 1682, column: 60, scope: !1202)
!6978 = !DILocation(line: 1684, column: 5, scope: !1202)
!6979 = !DILocation(line: 1684, column: 14, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !1211, file: !352, discriminator: 1)
!6981 = !DILocation(line: 1684, column: 18, scope: !1211)
!6982 = !DILocation(line: 1684, column: 14, scope: !1211)
!6983 = !DILocation(line: 1684, column: 14, scope: !1212)
!6984 = !DILocation(line: 1684, column: 24, scope: !6985)
!6985 = !DILexicalBlockFile(scope: !1210, file: !352, discriminator: 2)
!6986 = !DILocation(line: 1684, column: 28, scope: !1210)
!6987 = !DILocation(line: 1684, column: 35, scope: !1210)
!6988 = !DILocation(line: 1684, column: 54, scope: !1210)
!6989 = !DILocation(line: 1684, column: 58, scope: !1210)
!6990 = !DILocation(line: 1684, column: 63, scope: !1210)
!6991 = !DILocation(line: 1684, column: 73, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !1210, file: !352, line: 1684, column: 73)
!6993 = !DILocation(line: 1684, column: 73, scope: !1210)
!6994 = !DILocation(line: 1684, column: 86, scope: !6995)
!6995 = !DILexicalBlockFile(scope: !6992, file: !352, discriminator: 4)
!6996 = !DILocation(line: 1684, column: 79, scope: !6992)
!6997 = !DILocation(line: 1684, column: 92, scope: !6998)
!6998 = !DILexicalBlockFile(scope: !1211, file: !352, discriminator: 5)
!6999 = !DILocation(line: 1684, column: 92, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !7001, file: !352, discriminator: 7)
!7001 = !DILexicalBlockFile(scope: !1211, file: !352, discriminator: 6)
!7002 = !DILocation(line: 1684, column: 92, scope: !1210)
!7003 = !DILocation(line: 1684, column: 94, scope: !7004)
!7004 = !DILexicalBlockFile(scope: !7005, file: !352, discriminator: 8)
!7005 = !DILexicalBlockFile(scope: !1212, file: !352, discriminator: 3)
!7006 = !DILocation(line: 1685, column: 5, scope: !1202)
!7007 = !DILocation(line: 1685, column: 14, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !1215, file: !352, discriminator: 1)
!7009 = !DILocation(line: 1685, column: 18, scope: !1215)
!7010 = !DILocation(line: 1685, column: 14, scope: !1215)
!7011 = !DILocation(line: 1685, column: 14, scope: !1216)
!7012 = !DILocation(line: 1685, column: 26, scope: !7013)
!7013 = !DILexicalBlockFile(scope: !1214, file: !352, discriminator: 2)
!7014 = !DILocation(line: 1685, column: 30, scope: !1214)
!7015 = !DILocation(line: 1685, column: 37, scope: !1214)
!7016 = !DILocation(line: 1685, column: 56, scope: !1214)
!7017 = !DILocation(line: 1685, column: 60, scope: !1214)
!7018 = !DILocation(line: 1685, column: 67, scope: !1214)
!7019 = !DILocation(line: 1685, column: 77, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !1214, file: !352, line: 1685, column: 77)
!7021 = !DILocation(line: 1685, column: 77, scope: !1214)
!7022 = !DILocation(line: 1685, column: 90, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !7020, file: !352, discriminator: 4)
!7024 = !DILocation(line: 1685, column: 83, scope: !7020)
!7025 = !DILocation(line: 1685, column: 96, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !1215, file: !352, discriminator: 5)
!7027 = !DILocation(line: 1685, column: 96, scope: !7028)
!7028 = !DILexicalBlockFile(scope: !7029, file: !352, discriminator: 7)
!7029 = !DILexicalBlockFile(scope: !1215, file: !352, discriminator: 6)
!7030 = !DILocation(line: 1685, column: 96, scope: !1214)
!7031 = !DILocation(line: 1685, column: 98, scope: !7032)
!7032 = !DILexicalBlockFile(scope: !7033, file: !352, discriminator: 8)
!7033 = !DILexicalBlockFile(scope: !1216, file: !352, discriminator: 3)
!7034 = !DILocation(line: 1686, column: 5, scope: !1202)
!7035 = !DILocation(line: 1687, column: 1, scope: !1202)
!7036 = !DILocation(line: 1690, column: 29, scope: !1217)
!7037 = !DILocation(line: 1692, column: 5, scope: !1217)
!7038 = !DILocation(line: 1692, column: 15, scope: !1217)
!7039 = !DILocation(line: 1693, column: 5, scope: !1217)
!7040 = !DILocation(line: 1693, column: 15, scope: !1217)
!7041 = !DILocation(line: 1694, column: 5, scope: !1217)
!7042 = !DILocation(line: 1694, column: 15, scope: !1217)
!7043 = !DILocation(line: 1694, column: 20, scope: !1217)
!7044 = !DILocation(line: 1694, column: 24, scope: !1217)
!7045 = !DILocation(line: 1696, column: 28, scope: !1217)
!7046 = !DILocation(line: 1696, column: 34, scope: !1217)
!7047 = !DILocation(line: 1696, column: 44, scope: !1217)
!7048 = !DILocation(line: 1696, column: 57, scope: !1217)
!7049 = !DILocation(line: 1696, column: 12, scope: !1217)
!7050 = !DILocation(line: 1696, column: 10, scope: !1217)
!7051 = !DILocation(line: 1697, column: 9, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !1217, file: !352, line: 1697, column: 9)
!7053 = !DILocation(line: 1697, column: 14, scope: !7052)
!7054 = !DILocation(line: 1697, column: 9, scope: !1217)
!7055 = !DILocation(line: 1698, column: 9, scope: !7052)
!7056 = !DILocation(line: 1699, column: 25, scope: !1227)
!7057 = !DILocation(line: 1699, column: 33, scope: !1227)
!7058 = !DILocation(line: 1699, column: 42, scope: !1227)
!7059 = !DILocation(line: 1699, column: 9, scope: !1217)
!7060 = !DILocation(line: 1700, column: 9, scope: !1226)
!7061 = !DILocation(line: 1700, column: 19, scope: !1226)
!7062 = !DILocation(line: 1700, column: 46, scope: !1226)
!7063 = !DILocation(line: 1700, column: 29, scope: !1226)
!7064 = !DILocation(line: 1701, column: 9, scope: !1226)
!7065 = !DILocation(line: 1701, column: 14, scope: !7066)
!7066 = !DILexicalBlockFile(scope: !1229, file: !352, discriminator: 1)
!7067 = !DILocation(line: 1701, column: 24, scope: !1229)
!7068 = !DILocation(line: 1701, column: 54, scope: !1229)
!7069 = !DILocation(line: 1701, column: 69, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !1229, file: !352, line: 1701, column: 66)
!7071 = !DILocation(line: 1701, column: 86, scope: !7070)
!7072 = !DILocation(line: 1701, column: 66, scope: !7070)
!7073 = !DILocation(line: 1701, column: 96, scope: !7070)
!7074 = !DILocation(line: 1701, column: 66, scope: !1229)
!7075 = !DILocation(line: 1701, column: 66, scope: !7076)
!7076 = !DILexicalBlockFile(scope: !1229, file: !352, discriminator: 2)
!7077 = !DILocation(line: 1701, column: 127, scope: !7078)
!7078 = !DILexicalBlockFile(scope: !7070, file: !352, discriminator: 3)
!7079 = !DILocation(line: 1701, column: 145, scope: !7070)
!7080 = !DILocation(line: 1701, column: 155, scope: !7070)
!7081 = !DILocation(line: 1701, column: 180, scope: !7070)
!7082 = !DILocation(line: 1701, column: 111, scope: !7070)
!7083 = !DILocation(line: 1701, column: 199, scope: !7084)
!7084 = !DILexicalBlockFile(scope: !1226, file: !352, discriminator: 4)
!7085 = !DILocation(line: 1701, column: 199, scope: !1229)
!7086 = !DILocation(line: 1701, column: 199, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !1229, file: !352, discriminator: 5)
!7088 = !DILocation(line: 1702, column: 13, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !1226, file: !352, line: 1702, column: 13)
!7090 = !DILocation(line: 1702, column: 21, scope: !7089)
!7091 = !DILocation(line: 1702, column: 13, scope: !1226)
!7092 = !DILocation(line: 1703, column: 13, scope: !7089)
!7093 = !DILocation(line: 1704, column: 16, scope: !1226)
!7094 = !DILocation(line: 1704, column: 14, scope: !1226)
!7095 = !DILocation(line: 1705, column: 5, scope: !1227)
!7096 = !DILocation(line: 1705, column: 5, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !1227, file: !352, discriminator: 1)
!7098 = !DILocation(line: 1705, column: 5, scope: !1226)
!7099 = !DILocation(line: 1706, column: 28, scope: !1217)
!7100 = !DILocation(line: 1706, column: 32, scope: !1217)
!7101 = !DILocation(line: 1706, column: 38, scope: !1217)
!7102 = !DILocation(line: 1706, column: 14, scope: !1217)
!7103 = !DILocation(line: 1706, column: 12, scope: !1217)
!7104 = !DILocation(line: 1707, column: 5, scope: !1217)
!7105 = !DILocation(line: 1707, column: 10, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !1231, file: !352, discriminator: 1)
!7107 = !DILocation(line: 1707, column: 20, scope: !1231)
!7108 = !DILocation(line: 1707, column: 50, scope: !1231)
!7109 = !DILocation(line: 1707, column: 65, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !1231, file: !352, line: 1707, column: 62)
!7111 = !DILocation(line: 1707, column: 82, scope: !7110)
!7112 = !DILocation(line: 1707, column: 62, scope: !7110)
!7113 = !DILocation(line: 1707, column: 92, scope: !7110)
!7114 = !DILocation(line: 1707, column: 62, scope: !1231)
!7115 = !DILocation(line: 1707, column: 62, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !1231, file: !352, discriminator: 2)
!7117 = !DILocation(line: 1707, column: 123, scope: !7118)
!7118 = !DILexicalBlockFile(scope: !7110, file: !352, discriminator: 3)
!7119 = !DILocation(line: 1707, column: 141, scope: !7110)
!7120 = !DILocation(line: 1707, column: 151, scope: !7110)
!7121 = !DILocation(line: 1707, column: 176, scope: !7110)
!7122 = !DILocation(line: 1707, column: 107, scope: !7110)
!7123 = !DILocation(line: 1707, column: 195, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !1217, file: !352, discriminator: 4)
!7125 = !DILocation(line: 1707, column: 195, scope: !1231)
!7126 = !DILocation(line: 1707, column: 195, scope: !7127)
!7127 = !DILexicalBlockFile(scope: !1231, file: !352, discriminator: 5)
!7128 = !DILocation(line: 1708, column: 12, scope: !1217)
!7129 = !DILocation(line: 1708, column: 5, scope: !1217)
!7130 = !DILocation(line: 1709, column: 1, scope: !1217)
!7131 = !DILocation(line: 1642, column: 27, scope: !1235)
!7132 = !DILocation(line: 1642, column: 43, scope: !1235)
!7133 = !DILocation(line: 1642, column: 59, scope: !1235)
!7134 = !DILocation(line: 1644, column: 5, scope: !1235)
!7135 = !DILocation(line: 1644, column: 15, scope: !1235)
!7136 = !DILocation(line: 1644, column: 22, scope: !1235)
!7137 = !DILocation(line: 1645, column: 5, scope: !1235)
!7138 = !DILocation(line: 1645, column: 15, scope: !1235)
!7139 = !DILocation(line: 1646, column: 5, scope: !1235)
!7140 = !DILocation(line: 1646, column: 20, scope: !1235)
!7141 = !DILocation(line: 1648, column: 9, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !1235, file: !352, line: 1648, column: 9)
!7143 = !DILocation(line: 1648, column: 14, scope: !7142)
!7144 = !DILocation(line: 1648, column: 31, scope: !7142)
!7145 = !DILocation(line: 1648, column: 66, scope: !7146)
!7146 = !DILexicalBlockFile(scope: !7142, file: !352, discriminator: 1)
!7147 = !DILocation(line: 1648, column: 35, scope: !7142)
!7148 = !DILocation(line: 1648, column: 9, scope: !1235)
!7149 = !DILocation(line: 1649, column: 9, scope: !7142)
!7150 = !DILocation(line: 1651, column: 28, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !1235, file: !352, line: 1651, column: 9)
!7152 = !DILocation(line: 1651, column: 10, scope: !7151)
!7153 = !DILocation(line: 1651, column: 9, scope: !1235)
!7154 = !DILocation(line: 1652, column: 9, scope: !7151)
!7155 = !DILocation(line: 1655, column: 27, scope: !1235)
!7156 = !DILocation(line: 1655, column: 10, scope: !1235)
!7157 = !DILocation(line: 1655, column: 8, scope: !1235)
!7158 = !DILocation(line: 1656, column: 9, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !1235, file: !352, line: 1656, column: 9)
!7160 = !DILocation(line: 1656, column: 12, scope: !7159)
!7161 = !DILocation(line: 1656, column: 9, scope: !1235)
!7162 = !DILocation(line: 1657, column: 9, scope: !7159)
!7163 = !DILocation(line: 1660, column: 27, scope: !1235)
!7164 = !DILocation(line: 1660, column: 33, scope: !1235)
!7165 = !DILocation(line: 1660, column: 42, scope: !1235)
!7166 = !DILocation(line: 1660, column: 10, scope: !1235)
!7167 = !DILocation(line: 1660, column: 8, scope: !1235)
!7168 = !DILocation(line: 1661, column: 9, scope: !1247)
!7169 = !DILocation(line: 1661, column: 12, scope: !1247)
!7170 = !DILocation(line: 1661, column: 9, scope: !1235)
!7171 = !DILocation(line: 1662, column: 9, scope: !1246)
!7172 = !DILocation(line: 1662, column: 14, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !1245, file: !352, discriminator: 1)
!7174 = !DILocation(line: 1662, column: 24, scope: !1245)
!7175 = !DILocation(line: 1662, column: 54, scope: !1245)
!7176 = !DILocation(line: 1662, column: 67, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !1245, file: !352, line: 1662, column: 64)
!7178 = !DILocation(line: 1662, column: 84, scope: !7177)
!7179 = !DILocation(line: 1662, column: 64, scope: !7177)
!7180 = !DILocation(line: 1662, column: 94, scope: !7177)
!7181 = !DILocation(line: 1662, column: 64, scope: !1245)
!7182 = !DILocation(line: 1662, column: 64, scope: !7183)
!7183 = !DILexicalBlockFile(scope: !1245, file: !352, discriminator: 2)
!7184 = !DILocation(line: 1662, column: 125, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !7177, file: !352, discriminator: 3)
!7186 = !DILocation(line: 1662, column: 143, scope: !7177)
!7187 = !DILocation(line: 1662, column: 153, scope: !7177)
!7188 = !DILocation(line: 1662, column: 178, scope: !7177)
!7189 = !DILocation(line: 1662, column: 109, scope: !7177)
!7190 = !DILocation(line: 1662, column: 197, scope: !7191)
!7191 = !DILexicalBlockFile(scope: !1246, file: !352, discriminator: 4)
!7192 = !DILocation(line: 1662, column: 197, scope: !1245)
!7193 = !DILocation(line: 1662, column: 197, scope: !7194)
!7194 = !DILexicalBlockFile(scope: !1245, file: !352, discriminator: 5)
!7195 = !DILocation(line: 1663, column: 9, scope: !1246)
!7196 = !DILocation(line: 1665, column: 21, scope: !1235)
!7197 = !DILocation(line: 1665, column: 29, scope: !1235)
!7198 = !DILocation(line: 1665, column: 38, scope: !1235)
!7199 = !DILocation(line: 1666, column: 16, scope: !1235)
!7200 = !DILocation(line: 1666, column: 5, scope: !1235)
!7201 = !DILocation(line: 1666, column: 9, scope: !1235)
!7202 = !DILocation(line: 1666, column: 14, scope: !1235)
!7203 = !DILocation(line: 1667, column: 14, scope: !1235)
!7204 = !DILocation(line: 1667, column: 5, scope: !1235)
!7205 = !DILocation(line: 1667, column: 9, scope: !1235)
!7206 = !DILocation(line: 1667, column: 12, scope: !1235)
!7207 = !DILocation(line: 1669, column: 24, scope: !1235)
!7208 = !DILocation(line: 1669, column: 12, scope: !1235)
!7209 = !DILocation(line: 1669, column: 5, scope: !1235)
!7210 = !DILocation(line: 1670, column: 1, scope: !1235)
!7211 = !DILocation(line: 1712, column: 31, scope: !1232)
!7212 = !DILocation(line: 1715, column: 49, scope: !1232)
!7213 = !DILocation(line: 1715, column: 37, scope: !1232)
!7214 = !DILocation(line: 1715, column: 55, scope: !1232)
!7215 = !DILocation(line: 1715, column: 65, scope: !1232)
!7216 = !DILocation(line: 1715, column: 69, scope: !1232)
!7217 = !DILocation(line: 1715, column: 75, scope: !1232)
!7218 = !DILocation(line: 1715, column: 79, scope: !1232)
!7219 = !DILocation(line: 1715, column: 12, scope: !1232)
!7220 = !DILocation(line: 1715, column: 5, scope: !1232)
!7221 = !DILocation(line: 1829, column: 28, scope: !1248)
!7222 = !DILocation(line: 1831, column: 25, scope: !1248)
!7223 = !DILocation(line: 1831, column: 5, scope: !1248)
!7224 = !DILocation(line: 1832, column: 5, scope: !1248)
!7225 = !DILocation(line: 1832, column: 10, scope: !7226)
!7226 = !DILexicalBlockFile(scope: !1254, file: !352, discriminator: 1)
!7227 = !DILocation(line: 1832, column: 20, scope: !1254)
!7228 = !DILocation(line: 1832, column: 51, scope: !1254)
!7229 = !DILocation(line: 1832, column: 55, scope: !1254)
!7230 = !DILocation(line: 1832, column: 68, scope: !1257)
!7231 = !DILocation(line: 1832, column: 84, scope: !1257)
!7232 = !DILocation(line: 1832, column: 68, scope: !1254)
!7233 = !DILocation(line: 1832, column: 99, scope: !7234)
!7234 = !DILexicalBlockFile(scope: !1257, file: !352, discriminator: 2)
!7235 = !DILocation(line: 1832, column: 104, scope: !7236)
!7236 = !DILexicalBlockFile(scope: !1256, file: !352, discriminator: 4)
!7237 = !DILocation(line: 1832, column: 114, scope: !1256)
!7238 = !DILocation(line: 1832, column: 144, scope: !1256)
!7239 = !DILocation(line: 1832, column: 170, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !1256, file: !352, line: 1832, column: 167)
!7241 = !DILocation(line: 1832, column: 187, scope: !7240)
!7242 = !DILocation(line: 1832, column: 167, scope: !7240)
!7243 = !DILocation(line: 1832, column: 197, scope: !7240)
!7244 = !DILocation(line: 1832, column: 167, scope: !1256)
!7245 = !DILocation(line: 1832, column: 167, scope: !7246)
!7246 = !DILexicalBlockFile(scope: !1256, file: !352, discriminator: 5)
!7247 = !DILocation(line: 1832, column: 228, scope: !7248)
!7248 = !DILexicalBlockFile(scope: !7240, file: !352, discriminator: 6)
!7249 = !DILocation(line: 1832, column: 246, scope: !7240)
!7250 = !DILocation(line: 1832, column: 256, scope: !7240)
!7251 = !DILocation(line: 1832, column: 281, scope: !7240)
!7252 = !DILocation(line: 1832, column: 212, scope: !7240)
!7253 = !DILocation(line: 1832, column: 300, scope: !7254)
!7254 = !DILexicalBlockFile(scope: !1257, file: !352, discriminator: 7)
!7255 = !DILocation(line: 1832, column: 300, scope: !1256)
!7256 = !DILocation(line: 1832, column: 300, scope: !7257)
!7257 = !DILexicalBlockFile(scope: !1256, file: !352, discriminator: 8)
!7258 = !DILocation(line: 1832, column: 300, scope: !7259)
!7259 = !DILexicalBlockFile(scope: !1256, file: !352, discriminator: 9)
!7260 = !DILocation(line: 1832, column: 313, scope: !7261)
!7261 = !DILexicalBlockFile(scope: !7262, file: !352, discriminator: 10)
!7262 = !DILexicalBlockFile(scope: !1248, file: !352, discriminator: 3)
!7263 = !DILocation(line: 1832, column: 313, scope: !1254)
!7264 = !DILocation(line: 1833, column: 5, scope: !1248)
!7265 = !DILocation(line: 1833, column: 10, scope: !7266)
!7266 = !DILexicalBlockFile(scope: !1259, file: !352, discriminator: 1)
!7267 = !DILocation(line: 1833, column: 20, scope: !1259)
!7268 = !DILocation(line: 1833, column: 51, scope: !1259)
!7269 = !DILocation(line: 1833, column: 55, scope: !1259)
!7270 = !DILocation(line: 1833, column: 68, scope: !1262)
!7271 = !DILocation(line: 1833, column: 84, scope: !1262)
!7272 = !DILocation(line: 1833, column: 68, scope: !1259)
!7273 = !DILocation(line: 1833, column: 99, scope: !7274)
!7274 = !DILexicalBlockFile(scope: !1262, file: !352, discriminator: 2)
!7275 = !DILocation(line: 1833, column: 104, scope: !7276)
!7276 = !DILexicalBlockFile(scope: !1261, file: !352, discriminator: 4)
!7277 = !DILocation(line: 1833, column: 114, scope: !1261)
!7278 = !DILocation(line: 1833, column: 144, scope: !1261)
!7279 = !DILocation(line: 1833, column: 170, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !1261, file: !352, line: 1833, column: 167)
!7281 = !DILocation(line: 1833, column: 187, scope: !7280)
!7282 = !DILocation(line: 1833, column: 167, scope: !7280)
!7283 = !DILocation(line: 1833, column: 197, scope: !7280)
!7284 = !DILocation(line: 1833, column: 167, scope: !1261)
!7285 = !DILocation(line: 1833, column: 167, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !1261, file: !352, discriminator: 5)
!7287 = !DILocation(line: 1833, column: 228, scope: !7288)
!7288 = !DILexicalBlockFile(scope: !7280, file: !352, discriminator: 6)
!7289 = !DILocation(line: 1833, column: 246, scope: !7280)
!7290 = !DILocation(line: 1833, column: 256, scope: !7280)
!7291 = !DILocation(line: 1833, column: 281, scope: !7280)
!7292 = !DILocation(line: 1833, column: 212, scope: !7280)
!7293 = !DILocation(line: 1833, column: 300, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !1262, file: !352, discriminator: 7)
!7295 = !DILocation(line: 1833, column: 300, scope: !1261)
!7296 = !DILocation(line: 1833, column: 300, scope: !7297)
!7297 = !DILexicalBlockFile(scope: !1261, file: !352, discriminator: 8)
!7298 = !DILocation(line: 1833, column: 300, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !1261, file: !352, discriminator: 9)
!7300 = !DILocation(line: 1833, column: 313, scope: !7261)
!7301 = !DILocation(line: 1833, column: 313, scope: !1259)
!7302 = !DILocation(line: 1834, column: 19, scope: !1248)
!7303 = !DILocation(line: 1834, column: 7, scope: !1248)
!7304 = !DILocation(line: 1834, column: 25, scope: !1248)
!7305 = !DILocation(line: 1834, column: 35, scope: !1248)
!7306 = !DILocation(line: 1834, column: 43, scope: !1248)
!7307 = !DILocation(line: 1834, column: 5, scope: !1248)
!7308 = !DILocation(line: 1835, column: 1, scope: !1248)
!7309 = !DILocation(line: 1838, column: 29, scope: !1263)
!7310 = !DILocation(line: 1838, column: 43, scope: !1263)
!7311 = !DILocation(line: 1838, column: 56, scope: !1263)
!7312 = !DILocation(line: 1840, column: 5, scope: !1263)
!7313 = !DILocation(line: 1840, column: 14, scope: !7314)
!7314 = !DILexicalBlockFile(scope: !1272, file: !352, discriminator: 1)
!7315 = !DILocation(line: 1840, column: 18, scope: !1272)
!7316 = !DILocation(line: 1840, column: 14, scope: !1272)
!7317 = !DILocation(line: 1840, column: 14, scope: !1273)
!7318 = !DILocation(line: 1840, column: 28, scope: !7319)
!7319 = !DILexicalBlockFile(scope: !1271, file: !352, discriminator: 2)
!7320 = !DILocation(line: 1840, column: 32, scope: !1271)
!7321 = !DILocation(line: 1840, column: 39, scope: !1271)
!7322 = !DILocation(line: 1840, column: 58, scope: !1271)
!7323 = !DILocation(line: 1840, column: 62, scope: !1271)
!7324 = !DILocation(line: 1840, column: 71, scope: !1271)
!7325 = !DILocation(line: 1840, column: 81, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !1271, file: !352, line: 1840, column: 81)
!7327 = !DILocation(line: 1840, column: 81, scope: !1271)
!7328 = !DILocation(line: 1840, column: 94, scope: !7329)
!7329 = !DILexicalBlockFile(scope: !7326, file: !352, discriminator: 4)
!7330 = !DILocation(line: 1840, column: 87, scope: !7326)
!7331 = !DILocation(line: 1840, column: 100, scope: !7332)
!7332 = !DILexicalBlockFile(scope: !1272, file: !352, discriminator: 5)
!7333 = !DILocation(line: 1840, column: 100, scope: !7334)
!7334 = !DILexicalBlockFile(scope: !7335, file: !352, discriminator: 7)
!7335 = !DILexicalBlockFile(scope: !1272, file: !352, discriminator: 6)
!7336 = !DILocation(line: 1840, column: 100, scope: !1271)
!7337 = !DILocation(line: 1840, column: 102, scope: !7338)
!7338 = !DILexicalBlockFile(scope: !7339, file: !352, discriminator: 8)
!7339 = !DILexicalBlockFile(scope: !1273, file: !352, discriminator: 3)
!7340 = !DILocation(line: 1841, column: 5, scope: !1263)
!7341 = !DILocation(line: 1841, column: 14, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !1276, file: !352, discriminator: 1)
!7343 = !DILocation(line: 1841, column: 18, scope: !1276)
!7344 = !DILocation(line: 1841, column: 14, scope: !1276)
!7345 = !DILocation(line: 1841, column: 14, scope: !1277)
!7346 = !DILocation(line: 1841, column: 28, scope: !7347)
!7347 = !DILexicalBlockFile(scope: !1275, file: !352, discriminator: 2)
!7348 = !DILocation(line: 1841, column: 32, scope: !1275)
!7349 = !DILocation(line: 1841, column: 39, scope: !1275)
!7350 = !DILocation(line: 1841, column: 58, scope: !1275)
!7351 = !DILocation(line: 1841, column: 62, scope: !1275)
!7352 = !DILocation(line: 1841, column: 71, scope: !1275)
!7353 = !DILocation(line: 1841, column: 81, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !1275, file: !352, line: 1841, column: 81)
!7355 = !DILocation(line: 1841, column: 81, scope: !1275)
!7356 = !DILocation(line: 1841, column: 94, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !7354, file: !352, discriminator: 4)
!7358 = !DILocation(line: 1841, column: 87, scope: !7354)
!7359 = !DILocation(line: 1841, column: 100, scope: !7360)
!7360 = !DILexicalBlockFile(scope: !1276, file: !352, discriminator: 5)
!7361 = !DILocation(line: 1841, column: 100, scope: !7362)
!7362 = !DILexicalBlockFile(scope: !7363, file: !352, discriminator: 7)
!7363 = !DILexicalBlockFile(scope: !1276, file: !352, discriminator: 6)
!7364 = !DILocation(line: 1841, column: 100, scope: !1275)
!7365 = !DILocation(line: 1841, column: 102, scope: !7366)
!7366 = !DILexicalBlockFile(scope: !7367, file: !352, discriminator: 8)
!7367 = !DILexicalBlockFile(scope: !1277, file: !352, discriminator: 3)
!7368 = !DILocation(line: 1842, column: 5, scope: !1263)
!7369 = !DILocation(line: 1843, column: 1, scope: !1263)
!7370 = !DILocation(line: 1846, column: 25, scope: !1278)
!7371 = !DILocation(line: 1848, column: 5, scope: !1278)
!7372 = !DILocation(line: 1848, column: 15, scope: !1278)
!7373 = !DILocation(line: 1850, column: 9, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !1278, file: !352, line: 1850, column: 9)
!7375 = !DILocation(line: 1850, column: 13, scope: !7374)
!7376 = !DILocation(line: 1850, column: 20, scope: !7374)
!7377 = !DILocation(line: 1850, column: 9, scope: !1278)
!7378 = !DILocation(line: 1851, column: 9, scope: !7374)
!7379 = !DILocation(line: 1853, column: 9, scope: !1286)
!7380 = !DILocation(line: 1853, column: 13, scope: !1286)
!7381 = !DILocation(line: 1853, column: 20, scope: !1286)
!7382 = !DILocation(line: 1853, column: 9, scope: !1278)
!7383 = !DILocation(line: 1854, column: 9, scope: !1285)
!7384 = !DILocation(line: 1854, column: 19, scope: !1285)
!7385 = !DILocation(line: 1854, column: 42, scope: !1285)
!7386 = !DILocation(line: 1854, column: 46, scope: !1285)
!7387 = !DILocation(line: 1854, column: 30, scope: !1285)
!7388 = !DILocation(line: 1855, column: 13, scope: !1290)
!7389 = !DILocation(line: 1855, column: 22, scope: !1290)
!7390 = !DILocation(line: 1855, column: 13, scope: !1285)
!7391 = !DILocation(line: 1856, column: 13, scope: !1289)
!7392 = !DILocation(line: 1856, column: 18, scope: !7393)
!7393 = !DILexicalBlockFile(scope: !1288, file: !352, discriminator: 1)
!7394 = !DILocation(line: 1856, column: 28, scope: !1288)
!7395 = !DILocation(line: 1856, column: 51, scope: !1288)
!7396 = !DILocation(line: 1856, column: 55, scope: !1288)
!7397 = !DILocation(line: 1856, column: 68, scope: !1294)
!7398 = !DILocation(line: 1856, column: 76, scope: !1294)
!7399 = !DILocation(line: 1856, column: 68, scope: !1288)
!7400 = !DILocation(line: 1856, column: 94, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !1293, file: !352, discriminator: 2)
!7402 = !DILocation(line: 1856, column: 98, scope: !1293)
!7403 = !DILocation(line: 1856, column: 106, scope: !1293)
!7404 = !DILocation(line: 1856, column: 120, scope: !1293)
!7405 = !DILocation(line: 1856, column: 125, scope: !7406)
!7406 = !DILexicalBlockFile(scope: !1292, file: !352, discriminator: 4)
!7407 = !DILocation(line: 1856, column: 135, scope: !1292)
!7408 = !DILocation(line: 1856, column: 165, scope: !1292)
!7409 = !DILocation(line: 1856, column: 183, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !1292, file: !352, line: 1856, column: 180)
!7411 = !DILocation(line: 1856, column: 200, scope: !7410)
!7412 = !DILocation(line: 1856, column: 180, scope: !7410)
!7413 = !DILocation(line: 1856, column: 210, scope: !7410)
!7414 = !DILocation(line: 1856, column: 180, scope: !1292)
!7415 = !DILocation(line: 1856, column: 180, scope: !7416)
!7416 = !DILexicalBlockFile(scope: !1292, file: !352, discriminator: 5)
!7417 = !DILocation(line: 1856, column: 241, scope: !7418)
!7418 = !DILexicalBlockFile(scope: !7410, file: !352, discriminator: 6)
!7419 = !DILocation(line: 1856, column: 259, scope: !7410)
!7420 = !DILocation(line: 1856, column: 269, scope: !7410)
!7421 = !DILocation(line: 1856, column: 294, scope: !7410)
!7422 = !DILocation(line: 1856, column: 225, scope: !7410)
!7423 = !DILocation(line: 1856, column: 313, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !1293, file: !352, discriminator: 7)
!7425 = !DILocation(line: 1856, column: 313, scope: !1292)
!7426 = !DILocation(line: 1856, column: 313, scope: !7427)
!7427 = !DILexicalBlockFile(scope: !1292, file: !352, discriminator: 8)
!7428 = !DILocation(line: 1856, column: 326, scope: !7429)
!7429 = !DILexicalBlockFile(scope: !1293, file: !352, discriminator: 9)
!7430 = !DILocation(line: 1856, column: 328, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !7432, file: !352, discriminator: 10)
!7432 = !DILexicalBlockFile(scope: !1289, file: !352, discriminator: 3)
!7433 = !DILocation(line: 1856, column: 328, scope: !1288)
!7434 = !DILocation(line: 1856, column: 328, scope: !7435)
!7435 = !DILexicalBlockFile(scope: !1288, file: !352, discriminator: 11)
!7436 = !DILocation(line: 1857, column: 13, scope: !1289)
!7437 = !DILocation(line: 1859, column: 39, scope: !1285)
!7438 = !DILocation(line: 1859, column: 22, scope: !1285)
!7439 = !DILocation(line: 1859, column: 9, scope: !1285)
!7440 = !DILocation(line: 1859, column: 13, scope: !1285)
!7441 = !DILocation(line: 1859, column: 20, scope: !1285)
!7442 = !DILocation(line: 1860, column: 9, scope: !1285)
!7443 = !DILocation(line: 1860, column: 14, scope: !7444)
!7444 = !DILexicalBlockFile(scope: !1296, file: !352, discriminator: 1)
!7445 = !DILocation(line: 1860, column: 24, scope: !1296)
!7446 = !DILocation(line: 1860, column: 54, scope: !1296)
!7447 = !DILocation(line: 1860, column: 73, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !1296, file: !352, line: 1860, column: 70)
!7449 = !DILocation(line: 1860, column: 90, scope: !7448)
!7450 = !DILocation(line: 1860, column: 70, scope: !7448)
!7451 = !DILocation(line: 1860, column: 100, scope: !7448)
!7452 = !DILocation(line: 1860, column: 70, scope: !1296)
!7453 = !DILocation(line: 1860, column: 70, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !1296, file: !352, discriminator: 2)
!7455 = !DILocation(line: 1860, column: 131, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7448, file: !352, discriminator: 3)
!7457 = !DILocation(line: 1860, column: 149, scope: !7448)
!7458 = !DILocation(line: 1860, column: 159, scope: !7448)
!7459 = !DILocation(line: 1860, column: 184, scope: !7448)
!7460 = !DILocation(line: 1860, column: 115, scope: !7448)
!7461 = !DILocation(line: 1860, column: 203, scope: !7462)
!7462 = !DILexicalBlockFile(scope: !1285, file: !352, discriminator: 4)
!7463 = !DILocation(line: 1860, column: 203, scope: !1296)
!7464 = !DILocation(line: 1860, column: 203, scope: !7465)
!7465 = !DILexicalBlockFile(scope: !1296, file: !352, discriminator: 5)
!7466 = !DILocation(line: 1861, column: 13, scope: !1300)
!7467 = !DILocation(line: 1861, column: 17, scope: !1300)
!7468 = !DILocation(line: 1861, column: 24, scope: !1300)
!7469 = !DILocation(line: 1861, column: 13, scope: !1285)
!7470 = !DILocation(line: 1862, column: 13, scope: !1299)
!7471 = !DILocation(line: 1862, column: 18, scope: !7472)
!7472 = !DILexicalBlockFile(scope: !1298, file: !352, discriminator: 1)
!7473 = !DILocation(line: 1862, column: 28, scope: !1298)
!7474 = !DILocation(line: 1862, column: 51, scope: !1298)
!7475 = !DILocation(line: 1862, column: 55, scope: !1298)
!7476 = !DILocation(line: 1862, column: 68, scope: !1304)
!7477 = !DILocation(line: 1862, column: 76, scope: !1304)
!7478 = !DILocation(line: 1862, column: 68, scope: !1298)
!7479 = !DILocation(line: 1862, column: 94, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !1303, file: !352, discriminator: 2)
!7481 = !DILocation(line: 1862, column: 98, scope: !1303)
!7482 = !DILocation(line: 1862, column: 106, scope: !1303)
!7483 = !DILocation(line: 1862, column: 120, scope: !1303)
!7484 = !DILocation(line: 1862, column: 125, scope: !7485)
!7485 = !DILexicalBlockFile(scope: !1302, file: !352, discriminator: 4)
!7486 = !DILocation(line: 1862, column: 135, scope: !1302)
!7487 = !DILocation(line: 1862, column: 165, scope: !1302)
!7488 = !DILocation(line: 1862, column: 183, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !1302, file: !352, line: 1862, column: 180)
!7490 = !DILocation(line: 1862, column: 200, scope: !7489)
!7491 = !DILocation(line: 1862, column: 180, scope: !7489)
!7492 = !DILocation(line: 1862, column: 210, scope: !7489)
!7493 = !DILocation(line: 1862, column: 180, scope: !1302)
!7494 = !DILocation(line: 1862, column: 180, scope: !7495)
!7495 = !DILexicalBlockFile(scope: !1302, file: !352, discriminator: 5)
!7496 = !DILocation(line: 1862, column: 241, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7489, file: !352, discriminator: 6)
!7498 = !DILocation(line: 1862, column: 259, scope: !7489)
!7499 = !DILocation(line: 1862, column: 269, scope: !7489)
!7500 = !DILocation(line: 1862, column: 294, scope: !7489)
!7501 = !DILocation(line: 1862, column: 225, scope: !7489)
!7502 = !DILocation(line: 1862, column: 313, scope: !7503)
!7503 = !DILexicalBlockFile(scope: !1303, file: !352, discriminator: 7)
!7504 = !DILocation(line: 1862, column: 313, scope: !1302)
!7505 = !DILocation(line: 1862, column: 313, scope: !7506)
!7506 = !DILexicalBlockFile(scope: !1302, file: !352, discriminator: 8)
!7507 = !DILocation(line: 1862, column: 326, scope: !7508)
!7508 = !DILexicalBlockFile(scope: !1303, file: !352, discriminator: 9)
!7509 = !DILocation(line: 1862, column: 328, scope: !7510)
!7510 = !DILexicalBlockFile(scope: !7511, file: !352, discriminator: 10)
!7511 = !DILexicalBlockFile(scope: !1299, file: !352, discriminator: 3)
!7512 = !DILocation(line: 1862, column: 328, scope: !1298)
!7513 = !DILocation(line: 1862, column: 328, scope: !7514)
!7514 = !DILexicalBlockFile(scope: !1298, file: !352, discriminator: 11)
!7515 = !DILocation(line: 1863, column: 13, scope: !1299)
!7516 = !DILocation(line: 1865, column: 5, scope: !1286)
!7517 = !DILocation(line: 1865, column: 5, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !1286, file: !352, discriminator: 1)
!7519 = !DILocation(line: 1865, column: 5, scope: !1285)
!7520 = !DILocation(line: 1866, column: 24, scope: !1278)
!7521 = !DILocation(line: 1866, column: 28, scope: !1278)
!7522 = !DILocation(line: 1866, column: 12, scope: !1278)
!7523 = !DILocation(line: 1866, column: 10, scope: !1278)
!7524 = !DILocation(line: 1867, column: 9, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !1278, file: !352, line: 1867, column: 9)
!7526 = !DILocation(line: 1867, column: 14, scope: !7525)
!7527 = !DILocation(line: 1867, column: 9, scope: !1278)
!7528 = !DILocation(line: 1868, column: 16, scope: !7525)
!7529 = !DILocation(line: 1868, column: 9, scope: !7525)
!7530 = !DILocation(line: 1869, column: 9, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !1278, file: !352, line: 1869, column: 9)
!7532 = !DILocation(line: 1869, column: 9, scope: !1278)
!7533 = !DILocation(line: 1870, column: 36, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !352, line: 1870, column: 13)
!7535 = distinct !DILexicalBlock(scope: !7531, file: !352, line: 1869, column: 27)
!7536 = !DILocation(line: 1870, column: 13, scope: !7534)
!7537 = !DILocation(line: 1870, column: 13, scope: !7535)
!7538 = !DILocation(line: 1871, column: 13, scope: !7534)
!7539 = !DILocation(line: 1873, column: 13, scope: !7534)
!7540 = !DILocation(line: 1874, column: 5, scope: !7535)
!7541 = !DILocation(line: 1875, column: 5, scope: !1278)
!7542 = !DILocation(line: 1875, column: 10, scope: !7543)
!7543 = !DILexicalBlockFile(scope: !1306, file: !352, discriminator: 1)
!7544 = !DILocation(line: 1875, column: 20, scope: !1306)
!7545 = !DILocation(line: 1875, column: 43, scope: !1306)
!7546 = !DILocation(line: 1875, column: 47, scope: !1306)
!7547 = !DILocation(line: 1875, column: 60, scope: !1310)
!7548 = !DILocation(line: 1875, column: 68, scope: !1310)
!7549 = !DILocation(line: 1875, column: 60, scope: !1306)
!7550 = !DILocation(line: 1875, column: 86, scope: !7551)
!7551 = !DILexicalBlockFile(scope: !1309, file: !352, discriminator: 2)
!7552 = !DILocation(line: 1875, column: 90, scope: !1309)
!7553 = !DILocation(line: 1875, column: 98, scope: !1309)
!7554 = !DILocation(line: 1875, column: 112, scope: !1309)
!7555 = !DILocation(line: 1875, column: 117, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !1308, file: !352, discriminator: 4)
!7557 = !DILocation(line: 1875, column: 127, scope: !1308)
!7558 = !DILocation(line: 1875, column: 157, scope: !1308)
!7559 = !DILocation(line: 1875, column: 175, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !1308, file: !352, line: 1875, column: 172)
!7561 = !DILocation(line: 1875, column: 192, scope: !7560)
!7562 = !DILocation(line: 1875, column: 172, scope: !7560)
!7563 = !DILocation(line: 1875, column: 202, scope: !7560)
!7564 = !DILocation(line: 1875, column: 172, scope: !1308)
!7565 = !DILocation(line: 1875, column: 172, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !1308, file: !352, discriminator: 5)
!7567 = !DILocation(line: 1875, column: 233, scope: !7568)
!7568 = !DILexicalBlockFile(scope: !7560, file: !352, discriminator: 6)
!7569 = !DILocation(line: 1875, column: 251, scope: !7560)
!7570 = !DILocation(line: 1875, column: 261, scope: !7560)
!7571 = !DILocation(line: 1875, column: 286, scope: !7560)
!7572 = !DILocation(line: 1875, column: 217, scope: !7560)
!7573 = !DILocation(line: 1875, column: 305, scope: !7574)
!7574 = !DILexicalBlockFile(scope: !1309, file: !352, discriminator: 7)
!7575 = !DILocation(line: 1875, column: 305, scope: !1308)
!7576 = !DILocation(line: 1875, column: 305, scope: !7577)
!7577 = !DILexicalBlockFile(scope: !1308, file: !352, discriminator: 8)
!7578 = !DILocation(line: 1875, column: 318, scope: !7579)
!7579 = !DILexicalBlockFile(scope: !1309, file: !352, discriminator: 9)
!7580 = !DILocation(line: 1875, column: 320, scope: !7581)
!7581 = !DILexicalBlockFile(scope: !7582, file: !352, discriminator: 10)
!7582 = !DILexicalBlockFile(scope: !1278, file: !352, discriminator: 3)
!7583 = !DILocation(line: 1875, column: 320, scope: !1306)
!7584 = !DILocation(line: 1875, column: 320, scope: !7585)
!7585 = !DILexicalBlockFile(scope: !1306, file: !352, discriminator: 11)
!7586 = !DILocation(line: 1876, column: 23, scope: !1278)
!7587 = !DILocation(line: 1876, column: 12, scope: !1278)
!7588 = !DILocation(line: 1876, column: 5, scope: !1278)
!7589 = !DILocation(line: 1877, column: 1, scope: !1278)
!7590 = !DILocation(line: 1802, column: 25, scope: !1352)
!7591 = !DILocation(line: 1802, column: 41, scope: !1352)
!7592 = !DILocation(line: 1802, column: 57, scope: !1352)
!7593 = !DILocation(line: 1804, column: 5, scope: !1352)
!7594 = !DILocation(line: 1804, column: 15, scope: !1352)
!7595 = !DILocation(line: 1806, column: 9, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !1352, file: !352, line: 1806, column: 9)
!7597 = !DILocation(line: 1806, column: 14, scope: !7596)
!7598 = !DILocation(line: 1806, column: 29, scope: !7596)
!7599 = !DILocation(line: 1806, column: 62, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !7596, file: !352, discriminator: 1)
!7601 = !DILocation(line: 1806, column: 33, scope: !7596)
!7602 = !DILocation(line: 1806, column: 9, scope: !1352)
!7603 = !DILocation(line: 1807, column: 9, scope: !7596)
!7604 = !DILocation(line: 1809, column: 31, scope: !1352)
!7605 = !DILocation(line: 1809, column: 14, scope: !1352)
!7606 = !DILocation(line: 1809, column: 12, scope: !1352)
!7607 = !DILocation(line: 1810, column: 9, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !1352, file: !352, line: 1810, column: 9)
!7609 = !DILocation(line: 1810, column: 16, scope: !7608)
!7610 = !DILocation(line: 1810, column: 9, scope: !1352)
!7611 = !DILocation(line: 1811, column: 9, scope: !7608)
!7612 = !DILocation(line: 1813, column: 31, scope: !1352)
!7613 = !DILocation(line: 1813, column: 37, scope: !1352)
!7614 = !DILocation(line: 1813, column: 12, scope: !1352)
!7615 = !DILocation(line: 1813, column: 5, scope: !1352)
!7616 = !DILocation(line: 1814, column: 1, scope: !1352)
!7617 = !DILocation(line: 1817, column: 39, scope: !1311)
!7618 = !DILocation(line: 1817, column: 55, scope: !1311)
!7619 = !DILocation(line: 1819, column: 5, scope: !1311)
!7620 = !DILocation(line: 1819, column: 15, scope: !1311)
!7621 = !DILocation(line: 1821, column: 31, scope: !1311)
!7622 = !DILocation(line: 1821, column: 14, scope: !1311)
!7623 = !DILocation(line: 1821, column: 12, scope: !1311)
!7624 = !DILocation(line: 1822, column: 9, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !1311, file: !352, line: 1822, column: 9)
!7626 = !DILocation(line: 1822, column: 16, scope: !7625)
!7627 = !DILocation(line: 1822, column: 9, scope: !1311)
!7628 = !DILocation(line: 1823, column: 9, scope: !7625)
!7629 = !DILocation(line: 1825, column: 31, scope: !1311)
!7630 = !DILocation(line: 1825, column: 37, scope: !1311)
!7631 = !DILocation(line: 1825, column: 12, scope: !1311)
!7632 = !DILocation(line: 1825, column: 5, scope: !1311)
!7633 = !DILocation(line: 1826, column: 1, scope: !1311)
!7634 = !DILocation(line: 1880, column: 27, scope: !1327)
!7635 = !DILocation(line: 1882, column: 9, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !1327, file: !352, line: 1882, column: 9)
!7637 = !DILocation(line: 1882, column: 13, scope: !7636)
!7638 = !DILocation(line: 1882, column: 9, scope: !1327)
!7639 = !DILocation(line: 1887, column: 13, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !352, line: 1887, column: 13)
!7641 = distinct !DILexicalBlock(scope: !7636, file: !352, line: 1882, column: 21)
!7642 = !DILocation(line: 1887, column: 17, scope: !7640)
!7643 = !DILocation(line: 1887, column: 13, scope: !7641)
!7644 = !DILocation(line: 1888, column: 59, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7640, file: !352, line: 1887, column: 25)
!7646 = !DILocation(line: 1888, column: 47, scope: !7645)
!7647 = !DILocation(line: 1888, column: 65, scope: !7645)
!7648 = !DILocation(line: 1888, column: 75, scope: !7645)
!7649 = !DILocation(line: 1888, column: 79, scope: !7645)
!7650 = !DILocation(line: 1888, column: 87, scope: !7645)
!7651 = !DILocation(line: 1888, column: 91, scope: !7645)
!7652 = !DILocation(line: 1888, column: 20, scope: !7645)
!7653 = !DILocation(line: 1888, column: 13, scope: !7645)
!7654 = !DILocation(line: 1890, column: 58, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7640, file: !352, line: 1889, column: 16)
!7656 = !DILocation(line: 1890, column: 46, scope: !7655)
!7657 = !DILocation(line: 1890, column: 64, scope: !7655)
!7658 = !DILocation(line: 1890, column: 74, scope: !7655)
!7659 = !DILocation(line: 1890, column: 78, scope: !7655)
!7660 = !DILocation(line: 1890, column: 20, scope: !7655)
!7661 = !DILocation(line: 1890, column: 13, scope: !7655)
!7662 = !DILocation(line: 1893, column: 51, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7636, file: !352, line: 1892, column: 12)
!7664 = !DILocation(line: 1893, column: 39, scope: !7663)
!7665 = !DILocation(line: 1893, column: 57, scope: !7663)
!7666 = !DILocation(line: 1893, column: 16, scope: !7663)
!7667 = !DILocation(line: 1893, column: 9, scope: !7663)
!7668 = !DILocation(line: 1896, column: 1, scope: !1327)
!7669 = !DILocation(line: 1899, column: 29, scope: !1330)
!7670 = !DILocation(line: 1899, column: 43, scope: !1330)
!7671 = !DILocation(line: 1901, column: 5, scope: !1330)
!7672 = !DILocation(line: 1901, column: 15, scope: !1330)
!7673 = !DILocation(line: 1901, column: 24, scope: !1330)
!7674 = !DILocation(line: 1902, column: 28, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !1330, file: !352, line: 1902, column: 9)
!7676 = !DILocation(line: 1902, column: 11, scope: !7675)
!7677 = !DILocation(line: 1902, column: 9, scope: !1330)
!7678 = !DILocation(line: 1903, column: 9, scope: !7675)
!7679 = !DILocation(line: 1905, column: 5, scope: !1330)
!7680 = !DILocation(line: 1905, column: 10, scope: !7681)
!7681 = !DILexicalBlockFile(scope: !1339, file: !352, discriminator: 1)
!7682 = !DILocation(line: 1905, column: 20, scope: !1339)
!7683 = !DILocation(line: 1905, column: 43, scope: !1339)
!7684 = !DILocation(line: 1905, column: 47, scope: !1339)
!7685 = !DILocation(line: 1905, column: 60, scope: !1343)
!7686 = !DILocation(line: 1905, column: 68, scope: !1343)
!7687 = !DILocation(line: 1905, column: 60, scope: !1339)
!7688 = !DILocation(line: 1905, column: 86, scope: !7689)
!7689 = !DILexicalBlockFile(scope: !1342, file: !352, discriminator: 2)
!7690 = !DILocation(line: 1905, column: 90, scope: !1342)
!7691 = !DILocation(line: 1905, column: 98, scope: !1342)
!7692 = !DILocation(line: 1905, column: 112, scope: !1342)
!7693 = !DILocation(line: 1905, column: 117, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !1341, file: !352, discriminator: 4)
!7695 = !DILocation(line: 1905, column: 127, scope: !1341)
!7696 = !DILocation(line: 1905, column: 157, scope: !1341)
!7697 = !DILocation(line: 1905, column: 175, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !1341, file: !352, line: 1905, column: 172)
!7699 = !DILocation(line: 1905, column: 192, scope: !7698)
!7700 = !DILocation(line: 1905, column: 172, scope: !7698)
!7701 = !DILocation(line: 1905, column: 202, scope: !7698)
!7702 = !DILocation(line: 1905, column: 172, scope: !1341)
!7703 = !DILocation(line: 1905, column: 172, scope: !7704)
!7704 = !DILexicalBlockFile(scope: !1341, file: !352, discriminator: 5)
!7705 = !DILocation(line: 1905, column: 233, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7698, file: !352, discriminator: 6)
!7707 = !DILocation(line: 1905, column: 251, scope: !7698)
!7708 = !DILocation(line: 1905, column: 261, scope: !7698)
!7709 = !DILocation(line: 1905, column: 286, scope: !7698)
!7710 = !DILocation(line: 1905, column: 217, scope: !7698)
!7711 = !DILocation(line: 1905, column: 305, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !1342, file: !352, discriminator: 7)
!7713 = !DILocation(line: 1905, column: 305, scope: !1341)
!7714 = !DILocation(line: 1905, column: 305, scope: !7715)
!7715 = !DILexicalBlockFile(scope: !1341, file: !352, discriminator: 8)
!7716 = !DILocation(line: 1905, column: 318, scope: !7717)
!7717 = !DILexicalBlockFile(scope: !1342, file: !352, discriminator: 9)
!7718 = !DILocation(line: 1905, column: 320, scope: !7719)
!7719 = !DILexicalBlockFile(scope: !7720, file: !352, discriminator: 10)
!7720 = !DILexicalBlockFile(scope: !1330, file: !352, discriminator: 3)
!7721 = !DILocation(line: 1905, column: 320, scope: !1339)
!7722 = !DILocation(line: 1905, column: 320, scope: !7723)
!7723 = !DILexicalBlockFile(scope: !1339, file: !352, discriminator: 11)
!7724 = !DILocation(line: 1906, column: 18, scope: !1330)
!7725 = !DILocation(line: 1906, column: 5, scope: !1330)
!7726 = !DILocation(line: 1906, column: 9, scope: !1330)
!7727 = !DILocation(line: 1906, column: 16, scope: !1330)
!7728 = !DILocation(line: 1907, column: 21, scope: !1330)
!7729 = !DILocation(line: 1907, column: 25, scope: !1330)
!7730 = !DILocation(line: 1907, column: 35, scope: !1330)
!7731 = !DILocation(line: 1907, column: 44, scope: !1330)
!7732 = !DILocation(line: 1908, column: 5, scope: !1330)
!7733 = !DILocation(line: 1908, column: 10, scope: !7734)
!7734 = !DILexicalBlockFile(scope: !1345, file: !352, discriminator: 1)
!7735 = !DILocation(line: 1908, column: 20, scope: !1345)
!7736 = !DILocation(line: 1908, column: 43, scope: !1345)
!7737 = !DILocation(line: 1908, column: 47, scope: !1345)
!7738 = !DILocation(line: 1908, column: 60, scope: !1349)
!7739 = !DILocation(line: 1908, column: 68, scope: !1349)
!7740 = !DILocation(line: 1908, column: 60, scope: !1345)
!7741 = !DILocation(line: 1908, column: 86, scope: !7742)
!7742 = !DILexicalBlockFile(scope: !1348, file: !352, discriminator: 2)
!7743 = !DILocation(line: 1908, column: 90, scope: !1348)
!7744 = !DILocation(line: 1908, column: 98, scope: !1348)
!7745 = !DILocation(line: 1908, column: 112, scope: !1348)
!7746 = !DILocation(line: 1908, column: 117, scope: !7747)
!7747 = !DILexicalBlockFile(scope: !1347, file: !352, discriminator: 4)
!7748 = !DILocation(line: 1908, column: 127, scope: !1347)
!7749 = !DILocation(line: 1908, column: 157, scope: !1347)
!7750 = !DILocation(line: 1908, column: 175, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !1347, file: !352, line: 1908, column: 172)
!7752 = !DILocation(line: 1908, column: 192, scope: !7751)
!7753 = !DILocation(line: 1908, column: 172, scope: !7751)
!7754 = !DILocation(line: 1908, column: 202, scope: !7751)
!7755 = !DILocation(line: 1908, column: 172, scope: !1347)
!7756 = !DILocation(line: 1908, column: 172, scope: !7757)
!7757 = !DILexicalBlockFile(scope: !1347, file: !352, discriminator: 5)
!7758 = !DILocation(line: 1908, column: 233, scope: !7759)
!7759 = !DILexicalBlockFile(scope: !7751, file: !352, discriminator: 6)
!7760 = !DILocation(line: 1908, column: 251, scope: !7751)
!7761 = !DILocation(line: 1908, column: 261, scope: !7751)
!7762 = !DILocation(line: 1908, column: 286, scope: !7751)
!7763 = !DILocation(line: 1908, column: 217, scope: !7751)
!7764 = !DILocation(line: 1908, column: 305, scope: !7765)
!7765 = !DILexicalBlockFile(scope: !1348, file: !352, discriminator: 7)
!7766 = !DILocation(line: 1908, column: 305, scope: !1347)
!7767 = !DILocation(line: 1908, column: 305, scope: !7768)
!7768 = !DILexicalBlockFile(scope: !1347, file: !352, discriminator: 8)
!7769 = !DILocation(line: 1908, column: 318, scope: !7770)
!7770 = !DILexicalBlockFile(scope: !1348, file: !352, discriminator: 9)
!7771 = !DILocation(line: 1908, column: 320, scope: !7719)
!7772 = !DILocation(line: 1908, column: 320, scope: !1345)
!7773 = !DILocation(line: 1908, column: 320, scope: !7774)
!7774 = !DILexicalBlockFile(scope: !1345, file: !352, discriminator: 11)
!7775 = !DILocation(line: 1909, column: 18, scope: !1330)
!7776 = !DILocation(line: 1909, column: 5, scope: !1330)
!7777 = !DILocation(line: 1909, column: 9, scope: !1330)
!7778 = !DILocation(line: 1909, column: 16, scope: !1330)
!7779 = !DILocation(line: 1910, column: 5, scope: !1330)
!7780 = !DILocation(line: 1910, column: 10, scope: !7781)
!7781 = !DILexicalBlockFile(scope: !1351, file: !352, discriminator: 1)
!7782 = !DILocation(line: 1910, column: 20, scope: !1351)
!7783 = !DILocation(line: 1910, column: 51, scope: !1351)
!7784 = !DILocation(line: 1910, column: 55, scope: !1351)
!7785 = !DILocation(line: 1910, column: 68, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !1351, file: !352, line: 1910, column: 68)
!7787 = !DILocation(line: 1910, column: 84, scope: !7786)
!7788 = !DILocation(line: 1910, column: 68, scope: !1351)
!7789 = !DILocation(line: 1910, column: 115, scope: !7790)
!7790 = !DILexicalBlockFile(scope: !7786, file: !352, discriminator: 2)
!7791 = !DILocation(line: 1910, column: 134, scope: !7786)
!7792 = !DILocation(line: 1910, column: 143, scope: !7786)
!7793 = !DILocation(line: 1910, column: 99, scope: !7786)
!7794 = !DILocation(line: 1910, column: 148, scope: !7795)
!7795 = !DILexicalBlockFile(scope: !7720, file: !352, discriminator: 4)
!7796 = !DILocation(line: 1910, column: 148, scope: !1351)
!7797 = !DILocation(line: 1910, column: 148, scope: !7798)
!7798 = !DILexicalBlockFile(scope: !1351, file: !352, discriminator: 5)
!7799 = !DILocation(line: 1911, column: 58, scope: !1330)
!7800 = !DILocation(line: 1911, column: 5, scope: !1330)
!7801 = !DILocation(line: 1912, column: 1, scope: !1330)
!7802 = !DILocation(line: 1786, column: 34, scope: !1318)
!7803 = !DILocation(line: 1786, column: 50, scope: !1318)
!7804 = !DILocation(line: 1788, column: 5, scope: !1318)
!7805 = !DILocation(line: 1788, column: 18, scope: !1318)
!7806 = !DILocation(line: 1790, column: 25, scope: !1318)
!7807 = !DILocation(line: 1790, column: 31, scope: !1318)
!7808 = !DILocation(line: 1790, column: 40, scope: !1318)
!7809 = !DILocation(line: 1790, column: 10, scope: !1318)
!7810 = !DILocation(line: 1790, column: 8, scope: !1318)
!7811 = !DILocation(line: 1791, column: 9, scope: !1326)
!7812 = !DILocation(line: 1791, column: 12, scope: !1326)
!7813 = !DILocation(line: 1791, column: 9, scope: !1318)
!7814 = !DILocation(line: 1792, column: 9, scope: !1325)
!7815 = !DILocation(line: 1792, column: 14, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !1324, file: !352, discriminator: 1)
!7817 = !DILocation(line: 1792, column: 24, scope: !1324)
!7818 = !DILocation(line: 1792, column: 54, scope: !1324)
!7819 = !DILocation(line: 1792, column: 71, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !1324, file: !352, line: 1792, column: 68)
!7821 = !DILocation(line: 1792, column: 88, scope: !7820)
!7822 = !DILocation(line: 1792, column: 68, scope: !7820)
!7823 = !DILocation(line: 1792, column: 98, scope: !7820)
!7824 = !DILocation(line: 1792, column: 68, scope: !1324)
!7825 = !DILocation(line: 1792, column: 68, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !1324, file: !352, discriminator: 2)
!7827 = !DILocation(line: 1792, column: 129, scope: !7828)
!7828 = !DILexicalBlockFile(scope: !7820, file: !352, discriminator: 3)
!7829 = !DILocation(line: 1792, column: 147, scope: !7820)
!7830 = !DILocation(line: 1792, column: 157, scope: !7820)
!7831 = !DILocation(line: 1792, column: 182, scope: !7820)
!7832 = !DILocation(line: 1792, column: 113, scope: !7820)
!7833 = !DILocation(line: 1792, column: 201, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !1325, file: !352, discriminator: 4)
!7835 = !DILocation(line: 1792, column: 201, scope: !1324)
!7836 = !DILocation(line: 1792, column: 201, scope: !7837)
!7837 = !DILexicalBlockFile(scope: !1324, file: !352, discriminator: 5)
!7838 = !DILocation(line: 1793, column: 9, scope: !1325)
!7839 = !DILocation(line: 1796, column: 18, scope: !1318)
!7840 = !DILocation(line: 1796, column: 5, scope: !1318)
!7841 = !DILocation(line: 1796, column: 9, scope: !1318)
!7842 = !DILocation(line: 1796, column: 16, scope: !1318)
!7843 = !DILocation(line: 1797, column: 5, scope: !1318)
!7844 = !DILocation(line: 1797, column: 9, scope: !1318)
!7845 = !DILocation(line: 1797, column: 16, scope: !1318)
!7846 = !DILocation(line: 1798, column: 24, scope: !1318)
!7847 = !DILocation(line: 1798, column: 12, scope: !1318)
!7848 = !DILocation(line: 1798, column: 5, scope: !1318)
!7849 = !DILocation(line: 1799, column: 1, scope: !1318)
!7850 = !DILocation(line: 3581, column: 34, scope: !1358)
!7851 = !DILocation(line: 3583, column: 25, scope: !1358)
!7852 = !DILocation(line: 3583, column: 5, scope: !1358)
!7853 = !DILocation(line: 3584, column: 5, scope: !1358)
!7854 = !DILocation(line: 3584, column: 10, scope: !7855)
!7855 = !DILexicalBlockFile(scope: !1364, file: !352, discriminator: 1)
!7856 = !DILocation(line: 3584, column: 20, scope: !1364)
!7857 = !DILocation(line: 3584, column: 51, scope: !1364)
!7858 = !DILocation(line: 3584, column: 55, scope: !1364)
!7859 = !DILocation(line: 3584, column: 66, scope: !1367)
!7860 = !DILocation(line: 3584, column: 82, scope: !1367)
!7861 = !DILocation(line: 3584, column: 66, scope: !1364)
!7862 = !DILocation(line: 3584, column: 97, scope: !7863)
!7863 = !DILexicalBlockFile(scope: !1367, file: !352, discriminator: 2)
!7864 = !DILocation(line: 3584, column: 102, scope: !7865)
!7865 = !DILexicalBlockFile(scope: !1366, file: !352, discriminator: 4)
!7866 = !DILocation(line: 3584, column: 112, scope: !1366)
!7867 = !DILocation(line: 3584, column: 142, scope: !1366)
!7868 = !DILocation(line: 3584, column: 168, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !1366, file: !352, line: 3584, column: 165)
!7870 = !DILocation(line: 3584, column: 185, scope: !7869)
!7871 = !DILocation(line: 3584, column: 165, scope: !7869)
!7872 = !DILocation(line: 3584, column: 195, scope: !7869)
!7873 = !DILocation(line: 3584, column: 165, scope: !1366)
!7874 = !DILocation(line: 3584, column: 165, scope: !7875)
!7875 = !DILexicalBlockFile(scope: !1366, file: !352, discriminator: 5)
!7876 = !DILocation(line: 3584, column: 226, scope: !7877)
!7877 = !DILexicalBlockFile(scope: !7869, file: !352, discriminator: 6)
!7878 = !DILocation(line: 3584, column: 244, scope: !7869)
!7879 = !DILocation(line: 3584, column: 254, scope: !7869)
!7880 = !DILocation(line: 3584, column: 279, scope: !7869)
!7881 = !DILocation(line: 3584, column: 210, scope: !7869)
!7882 = !DILocation(line: 3584, column: 298, scope: !7883)
!7883 = !DILexicalBlockFile(scope: !1367, file: !352, discriminator: 7)
!7884 = !DILocation(line: 3584, column: 298, scope: !1366)
!7885 = !DILocation(line: 3584, column: 298, scope: !7886)
!7886 = !DILexicalBlockFile(scope: !1366, file: !352, discriminator: 8)
!7887 = !DILocation(line: 3584, column: 298, scope: !7888)
!7888 = !DILexicalBlockFile(scope: !1366, file: !352, discriminator: 9)
!7889 = !DILocation(line: 3584, column: 311, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7891, file: !352, discriminator: 10)
!7891 = !DILexicalBlockFile(scope: !1358, file: !352, discriminator: 3)
!7892 = !DILocation(line: 3584, column: 311, scope: !1364)
!7893 = !DILocation(line: 3585, column: 5, scope: !1358)
!7894 = !DILocation(line: 3585, column: 10, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !1369, file: !352, discriminator: 1)
!7896 = !DILocation(line: 3585, column: 20, scope: !1369)
!7897 = !DILocation(line: 3585, column: 51, scope: !1369)
!7898 = !DILocation(line: 3585, column: 55, scope: !1369)
!7899 = !DILocation(line: 3585, column: 71, scope: !1372)
!7900 = !DILocation(line: 3585, column: 87, scope: !1372)
!7901 = !DILocation(line: 3585, column: 71, scope: !1369)
!7902 = !DILocation(line: 3585, column: 102, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !1372, file: !352, discriminator: 2)
!7904 = !DILocation(line: 3585, column: 107, scope: !7905)
!7905 = !DILexicalBlockFile(scope: !1371, file: !352, discriminator: 4)
!7906 = !DILocation(line: 3585, column: 117, scope: !1371)
!7907 = !DILocation(line: 3585, column: 147, scope: !1371)
!7908 = !DILocation(line: 3585, column: 173, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !1371, file: !352, line: 3585, column: 170)
!7910 = !DILocation(line: 3585, column: 190, scope: !7909)
!7911 = !DILocation(line: 3585, column: 170, scope: !7909)
!7912 = !DILocation(line: 3585, column: 200, scope: !7909)
!7913 = !DILocation(line: 3585, column: 170, scope: !1371)
!7914 = !DILocation(line: 3585, column: 170, scope: !7915)
!7915 = !DILexicalBlockFile(scope: !1371, file: !352, discriminator: 5)
!7916 = !DILocation(line: 3585, column: 231, scope: !7917)
!7917 = !DILexicalBlockFile(scope: !7909, file: !352, discriminator: 6)
!7918 = !DILocation(line: 3585, column: 249, scope: !7909)
!7919 = !DILocation(line: 3585, column: 259, scope: !7909)
!7920 = !DILocation(line: 3585, column: 284, scope: !7909)
!7921 = !DILocation(line: 3585, column: 215, scope: !7909)
!7922 = !DILocation(line: 3585, column: 303, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !1372, file: !352, discriminator: 7)
!7924 = !DILocation(line: 3585, column: 303, scope: !1371)
!7925 = !DILocation(line: 3585, column: 303, scope: !7926)
!7926 = !DILexicalBlockFile(scope: !1371, file: !352, discriminator: 8)
!7927 = !DILocation(line: 3585, column: 303, scope: !7928)
!7928 = !DILexicalBlockFile(scope: !1371, file: !352, discriminator: 9)
!7929 = !DILocation(line: 3585, column: 316, scope: !7890)
!7930 = !DILocation(line: 3585, column: 316, scope: !1369)
!7931 = !DILocation(line: 3586, column: 19, scope: !1358)
!7932 = !DILocation(line: 3586, column: 7, scope: !1358)
!7933 = !DILocation(line: 3586, column: 25, scope: !1358)
!7934 = !DILocation(line: 3586, column: 35, scope: !1358)
!7935 = !DILocation(line: 3586, column: 43, scope: !1358)
!7936 = !DILocation(line: 3586, column: 5, scope: !1358)
!7937 = !DILocation(line: 3587, column: 1, scope: !1358)
!7938 = !DILocation(line: 3590, column: 35, scope: !1373)
!7939 = !DILocation(line: 3590, column: 49, scope: !1373)
!7940 = !DILocation(line: 3590, column: 62, scope: !1373)
!7941 = !DILocation(line: 3592, column: 5, scope: !1373)
!7942 = !DILocation(line: 3592, column: 14, scope: !7943)
!7943 = !DILexicalBlockFile(scope: !1382, file: !352, discriminator: 1)
!7944 = !DILocation(line: 3592, column: 18, scope: !1382)
!7945 = !DILocation(line: 3592, column: 14, scope: !1382)
!7946 = !DILocation(line: 3592, column: 14, scope: !1383)
!7947 = !DILocation(line: 3592, column: 26, scope: !7948)
!7948 = !DILexicalBlockFile(scope: !1381, file: !352, discriminator: 2)
!7949 = !DILocation(line: 3592, column: 30, scope: !1381)
!7950 = !DILocation(line: 3592, column: 37, scope: !1381)
!7951 = !DILocation(line: 3592, column: 56, scope: !1381)
!7952 = !DILocation(line: 3592, column: 60, scope: !1381)
!7953 = !DILocation(line: 3592, column: 67, scope: !1381)
!7954 = !DILocation(line: 3592, column: 77, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !1381, file: !352, line: 3592, column: 77)
!7956 = !DILocation(line: 3592, column: 77, scope: !1381)
!7957 = !DILocation(line: 3592, column: 90, scope: !7958)
!7958 = !DILexicalBlockFile(scope: !7955, file: !352, discriminator: 4)
!7959 = !DILocation(line: 3592, column: 83, scope: !7955)
!7960 = !DILocation(line: 3592, column: 96, scope: !7961)
!7961 = !DILexicalBlockFile(scope: !1382, file: !352, discriminator: 5)
!7962 = !DILocation(line: 3592, column: 96, scope: !7963)
!7963 = !DILexicalBlockFile(scope: !7964, file: !352, discriminator: 7)
!7964 = !DILexicalBlockFile(scope: !1382, file: !352, discriminator: 6)
!7965 = !DILocation(line: 3592, column: 96, scope: !1381)
!7966 = !DILocation(line: 3592, column: 98, scope: !7967)
!7967 = !DILexicalBlockFile(scope: !7968, file: !352, discriminator: 8)
!7968 = !DILexicalBlockFile(scope: !1383, file: !352, discriminator: 3)
!7969 = !DILocation(line: 3593, column: 5, scope: !1373)
!7970 = !DILocation(line: 3593, column: 14, scope: !7971)
!7971 = !DILexicalBlockFile(scope: !1386, file: !352, discriminator: 1)
!7972 = !DILocation(line: 3593, column: 18, scope: !1386)
!7973 = !DILocation(line: 3593, column: 14, scope: !1386)
!7974 = !DILocation(line: 3593, column: 14, scope: !1387)
!7975 = !DILocation(line: 3593, column: 31, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !1385, file: !352, discriminator: 2)
!7977 = !DILocation(line: 3593, column: 35, scope: !1385)
!7978 = !DILocation(line: 3593, column: 42, scope: !1385)
!7979 = !DILocation(line: 3593, column: 61, scope: !1385)
!7980 = !DILocation(line: 3593, column: 65, scope: !1385)
!7981 = !DILocation(line: 3593, column: 77, scope: !1385)
!7982 = !DILocation(line: 3593, column: 87, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !1385, file: !352, line: 3593, column: 87)
!7984 = !DILocation(line: 3593, column: 87, scope: !1385)
!7985 = !DILocation(line: 3593, column: 100, scope: !7986)
!7986 = !DILexicalBlockFile(scope: !7983, file: !352, discriminator: 4)
!7987 = !DILocation(line: 3593, column: 93, scope: !7983)
!7988 = !DILocation(line: 3593, column: 106, scope: !7989)
!7989 = !DILexicalBlockFile(scope: !1386, file: !352, discriminator: 5)
!7990 = !DILocation(line: 3593, column: 106, scope: !7991)
!7991 = !DILexicalBlockFile(scope: !7992, file: !352, discriminator: 7)
!7992 = !DILexicalBlockFile(scope: !1386, file: !352, discriminator: 6)
!7993 = !DILocation(line: 3593, column: 106, scope: !1385)
!7994 = !DILocation(line: 3593, column: 108, scope: !7995)
!7995 = !DILexicalBlockFile(scope: !7996, file: !352, discriminator: 8)
!7996 = !DILexicalBlockFile(scope: !1387, file: !352, discriminator: 3)
!7997 = !DILocation(line: 3594, column: 5, scope: !1373)
!7998 = !DILocation(line: 3595, column: 1, scope: !1373)
!7999 = !DILocation(line: 3598, column: 31, scope: !1388)
!8000 = !DILocation(line: 3600, column: 5, scope: !1388)
!8001 = !DILocation(line: 3600, column: 15, scope: !1388)
!8002 = !DILocation(line: 3600, column: 22, scope: !1388)
!8003 = !DILocation(line: 3600, column: 26, scope: !1388)
!8004 = !DILocation(line: 3600, column: 33, scope: !1388)
!8005 = !DILocation(line: 3600, column: 45, scope: !1388)
!8006 = !DILocation(line: 3600, column: 49, scope: !1388)
!8007 = !DILocation(line: 3601, column: 5, scope: !1388)
!8008 = !DILocation(line: 3601, column: 15, scope: !1388)
!8009 = !DILocation(line: 3601, column: 23, scope: !1388)
!8010 = !DILocation(line: 3602, column: 5, scope: !1388)
!8011 = !DILocation(line: 3602, column: 17, scope: !1388)
!8012 = !DILocation(line: 3602, column: 56, scope: !1388)
!8013 = !DILocation(line: 3602, column: 64, scope: !1388)
!8014 = !DILocation(line: 3602, column: 74, scope: !1388)
!8015 = !DILocation(line: 3603, column: 5, scope: !1388)
!8016 = !DILocation(line: 3603, column: 17, scope: !1388)
!8017 = !DILocation(line: 3603, column: 60, scope: !1388)
!8018 = !DILocation(line: 3603, column: 73, scope: !1388)
!8019 = !DILocation(line: 3603, column: 83, scope: !1388)
!8020 = !DILocation(line: 3604, column: 5, scope: !1388)
!8021 = !DILocation(line: 3604, column: 9, scope: !1388)
!8022 = !DILocation(line: 3606, column: 5, scope: !1388)
!8023 = !DILocation(line: 3606, column: 5, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !8025, file: !352, discriminator: 2)
!8025 = !DILexicalBlockFile(scope: !1388, file: !352, discriminator: 1)
!8026 = !DILocation(line: 3613, column: 17, scope: !1404)
!8027 = !DILocation(line: 3613, column: 26, scope: !1404)
!8028 = !DILocation(line: 3613, column: 15, scope: !1404)
!8029 = !DILocation(line: 3614, column: 13, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !1404, file: !352, line: 3614, column: 13)
!8031 = !DILocation(line: 3614, column: 19, scope: !8030)
!8032 = !DILocation(line: 3614, column: 13, scope: !1404)
!8033 = !DILocation(line: 3615, column: 13, scope: !8030)
!8034 = !DILocation(line: 3617, column: 20, scope: !1404)
!8035 = !DILocation(line: 3617, column: 33, scope: !1404)
!8036 = !DILocation(line: 3617, column: 18, scope: !1404)
!8037 = !DILocation(line: 3618, column: 13, scope: !1403)
!8038 = !DILocation(line: 3618, column: 22, scope: !1403)
!8039 = !DILocation(line: 3618, column: 13, scope: !1404)
!8040 = !DILocation(line: 3619, column: 13, scope: !1402)
!8041 = !DILocation(line: 3619, column: 18, scope: !8042)
!8042 = !DILexicalBlockFile(scope: !1401, file: !352, discriminator: 1)
!8043 = !DILocation(line: 3619, column: 28, scope: !1401)
!8044 = !DILocation(line: 3619, column: 58, scope: !1401)
!8045 = !DILocation(line: 3619, column: 74, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !1401, file: !352, line: 3619, column: 71)
!8047 = !DILocation(line: 3619, column: 91, scope: !8046)
!8048 = !DILocation(line: 3619, column: 71, scope: !8046)
!8049 = !DILocation(line: 3619, column: 101, scope: !8046)
!8050 = !DILocation(line: 3619, column: 71, scope: !1401)
!8051 = !DILocation(line: 3619, column: 71, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !1401, file: !352, discriminator: 2)
!8053 = !DILocation(line: 3619, column: 132, scope: !8054)
!8054 = !DILexicalBlockFile(scope: !8046, file: !352, discriminator: 3)
!8055 = !DILocation(line: 3619, column: 150, scope: !8046)
!8056 = !DILocation(line: 3619, column: 160, scope: !8046)
!8057 = !DILocation(line: 3619, column: 185, scope: !8046)
!8058 = !DILocation(line: 3619, column: 116, scope: !8046)
!8059 = !DILocation(line: 3619, column: 204, scope: !8060)
!8060 = !DILexicalBlockFile(scope: !1402, file: !352, discriminator: 4)
!8061 = !DILocation(line: 3619, column: 204, scope: !1401)
!8062 = !DILocation(line: 3619, column: 204, scope: !8063)
!8063 = !DILexicalBlockFile(scope: !1401, file: !352, discriminator: 5)
!8064 = !DILocation(line: 3620, column: 13, scope: !1402)
!8065 = !DILocation(line: 3623, column: 30, scope: !1404)
!8066 = !DILocation(line: 3623, column: 14, scope: !1404)
!8067 = !DILocation(line: 3623, column: 12, scope: !1404)
!8068 = !DILocation(line: 3624, column: 9, scope: !1404)
!8069 = !DILocation(line: 3624, column: 14, scope: !8070)
!8070 = !DILexicalBlockFile(scope: !1406, file: !352, discriminator: 1)
!8071 = !DILocation(line: 3624, column: 24, scope: !1406)
!8072 = !DILocation(line: 3624, column: 54, scope: !1406)
!8073 = !DILocation(line: 3624, column: 73, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !1406, file: !352, line: 3624, column: 70)
!8075 = !DILocation(line: 3624, column: 90, scope: !8074)
!8076 = !DILocation(line: 3624, column: 70, scope: !8074)
!8077 = !DILocation(line: 3624, column: 100, scope: !8074)
!8078 = !DILocation(line: 3624, column: 70, scope: !1406)
!8079 = !DILocation(line: 3624, column: 70, scope: !8080)
!8080 = !DILexicalBlockFile(scope: !1406, file: !352, discriminator: 2)
!8081 = !DILocation(line: 3624, column: 131, scope: !8082)
!8082 = !DILexicalBlockFile(scope: !8074, file: !352, discriminator: 3)
!8083 = !DILocation(line: 3624, column: 149, scope: !8074)
!8084 = !DILocation(line: 3624, column: 159, scope: !8074)
!8085 = !DILocation(line: 3624, column: 184, scope: !8074)
!8086 = !DILocation(line: 3624, column: 115, scope: !8074)
!8087 = !DILocation(line: 3624, column: 203, scope: !8088)
!8088 = !DILexicalBlockFile(scope: !1404, file: !352, discriminator: 4)
!8089 = !DILocation(line: 3624, column: 203, scope: !1406)
!8090 = !DILocation(line: 3624, column: 203, scope: !8091)
!8091 = !DILexicalBlockFile(scope: !1406, file: !352, discriminator: 5)
!8092 = !DILocation(line: 3625, column: 13, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !1404, file: !352, line: 3625, column: 13)
!8094 = !DILocation(line: 3625, column: 16, scope: !8093)
!8095 = !DILocation(line: 3625, column: 13, scope: !1404)
!8096 = !DILocation(line: 3626, column: 20, scope: !8093)
!8097 = !DILocation(line: 3626, column: 13, scope: !8093)
!8098 = !DILocation(line: 3627, column: 9, scope: !1404)
!8099 = !DILocation(line: 3627, column: 14, scope: !8100)
!8100 = !DILexicalBlockFile(scope: !1408, file: !352, discriminator: 1)
!8101 = !DILocation(line: 3627, column: 24, scope: !1408)
!8102 = !DILocation(line: 3627, column: 54, scope: !1408)
!8103 = !DILocation(line: 3627, column: 70, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !1408, file: !352, line: 3627, column: 67)
!8105 = !DILocation(line: 3627, column: 87, scope: !8104)
!8106 = !DILocation(line: 3627, column: 67, scope: !8104)
!8107 = !DILocation(line: 3627, column: 97, scope: !8104)
!8108 = !DILocation(line: 3627, column: 67, scope: !1408)
!8109 = !DILocation(line: 3627, column: 67, scope: !8110)
!8110 = !DILexicalBlockFile(scope: !1408, file: !352, discriminator: 2)
!8111 = !DILocation(line: 3627, column: 128, scope: !8112)
!8112 = !DILexicalBlockFile(scope: !8104, file: !352, discriminator: 3)
!8113 = !DILocation(line: 3627, column: 146, scope: !8104)
!8114 = !DILocation(line: 3627, column: 156, scope: !8104)
!8115 = !DILocation(line: 3627, column: 181, scope: !8104)
!8116 = !DILocation(line: 3627, column: 112, scope: !8104)
!8117 = !DILocation(line: 3627, column: 200, scope: !8088)
!8118 = !DILocation(line: 3627, column: 200, scope: !1408)
!8119 = !DILocation(line: 3627, column: 200, scope: !8120)
!8120 = !DILexicalBlockFile(scope: !1408, file: !352, discriminator: 5)
!8121 = !DILocation(line: 3628, column: 13, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !1404, file: !352, line: 3628, column: 13)
!8123 = !DILocation(line: 3628, column: 16, scope: !8122)
!8124 = !DILocation(line: 3628, column: 13, scope: !1404)
!8125 = !DILocation(line: 3629, column: 13, scope: !8122)
!8126 = !DILocation(line: 3631, column: 1, scope: !1388)
!8127 = !DILocation(line: 3549, column: 28, scope: !1412)
!8128 = !DILocation(line: 3549, column: 44, scope: !1412)
!8129 = !DILocation(line: 3549, column: 60, scope: !1412)
!8130 = !DILocation(line: 3551, column: 5, scope: !1412)
!8131 = !DILocation(line: 3551, column: 15, scope: !1412)
!8132 = !DILocation(line: 3551, column: 22, scope: !1412)
!8133 = !DILocation(line: 3552, column: 5, scope: !1412)
!8134 = !DILocation(line: 3552, column: 15, scope: !1412)
!8135 = !DILocation(line: 3552, column: 33, scope: !1412)
!8136 = !DILocation(line: 3553, column: 5, scope: !1412)
!8137 = !DILocation(line: 3553, column: 21, scope: !1412)
!8138 = !DILocation(line: 3556, column: 38, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !1412, file: !352, line: 3556, column: 9)
!8140 = !DILocation(line: 3556, column: 44, scope: !8139)
!8141 = !DILocation(line: 3556, column: 10, scope: !8139)
!8142 = !DILocation(line: 3556, column: 9, scope: !1412)
!8143 = !DILocation(line: 3557, column: 9, scope: !8139)
!8144 = !DILocation(line: 3559, column: 29, scope: !1412)
!8145 = !DILocation(line: 3559, column: 12, scope: !1412)
!8146 = !DILocation(line: 3559, column: 10, scope: !1412)
!8147 = !DILocation(line: 3560, column: 9, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !1412, file: !352, line: 3560, column: 9)
!8149 = !DILocation(line: 3560, column: 14, scope: !8148)
!8150 = !DILocation(line: 3560, column: 9, scope: !1412)
!8151 = !DILocation(line: 3561, column: 9, scope: !8148)
!8152 = !DILocation(line: 3562, column: 34, scope: !1412)
!8153 = !DILocation(line: 3562, column: 17, scope: !1412)
!8154 = !DILocation(line: 3562, column: 15, scope: !1412)
!8155 = !DILocation(line: 3563, column: 9, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !1412, file: !352, line: 3563, column: 9)
!8157 = !DILocation(line: 3563, column: 19, scope: !8156)
!8158 = !DILocation(line: 3563, column: 9, scope: !1412)
!8159 = !DILocation(line: 3564, column: 9, scope: !8156)
!8160 = !DILocation(line: 3567, column: 28, scope: !1412)
!8161 = !DILocation(line: 3567, column: 34, scope: !1412)
!8162 = !DILocation(line: 3567, column: 43, scope: !1412)
!8163 = !DILocation(line: 3567, column: 10, scope: !1412)
!8164 = !DILocation(line: 3567, column: 8, scope: !1412)
!8165 = !DILocation(line: 3568, column: 9, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !1412, file: !352, line: 3568, column: 9)
!8167 = !DILocation(line: 3568, column: 12, scope: !8166)
!8168 = !DILocation(line: 3568, column: 9, scope: !1412)
!8169 = !DILocation(line: 3569, column: 9, scope: !8166)
!8170 = !DILocation(line: 3570, column: 16, scope: !1412)
!8171 = !DILocation(line: 3570, column: 5, scope: !1412)
!8172 = !DILocation(line: 3570, column: 9, scope: !1412)
!8173 = !DILocation(line: 3570, column: 14, scope: !1412)
!8174 = !DILocation(line: 3571, column: 21, scope: !1412)
!8175 = !DILocation(line: 3571, column: 5, scope: !1412)
!8176 = !DILocation(line: 3571, column: 9, scope: !1412)
!8177 = !DILocation(line: 3571, column: 19, scope: !1412)
!8178 = !DILocation(line: 3572, column: 24, scope: !1412)
!8179 = !DILocation(line: 3572, column: 12, scope: !1412)
!8180 = !DILocation(line: 3572, column: 5, scope: !1412)
!8181 = !DILocation(line: 3575, column: 5, scope: !1412)
!8182 = !DILocation(line: 3575, column: 10, scope: !8183)
!8183 = !DILexicalBlockFile(scope: !1423, file: !352, discriminator: 1)
!8184 = !DILocation(line: 3575, column: 20, scope: !1423)
!8185 = !DILocation(line: 3575, column: 51, scope: !1423)
!8186 = !DILocation(line: 3575, column: 62, scope: !1426)
!8187 = !DILocation(line: 3575, column: 78, scope: !1426)
!8188 = !DILocation(line: 3575, column: 62, scope: !1423)
!8189 = !DILocation(line: 3575, column: 93, scope: !8190)
!8190 = !DILexicalBlockFile(scope: !1426, file: !352, discriminator: 2)
!8191 = !DILocation(line: 3575, column: 98, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !1425, file: !352, discriminator: 4)
!8193 = !DILocation(line: 3575, column: 108, scope: !1425)
!8194 = !DILocation(line: 3575, column: 138, scope: !1425)
!8195 = !DILocation(line: 3575, column: 164, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !1425, file: !352, line: 3575, column: 161)
!8197 = !DILocation(line: 3575, column: 181, scope: !8196)
!8198 = !DILocation(line: 3575, column: 161, scope: !8196)
!8199 = !DILocation(line: 3575, column: 191, scope: !8196)
!8200 = !DILocation(line: 3575, column: 161, scope: !1425)
!8201 = !DILocation(line: 3575, column: 161, scope: !8202)
!8202 = !DILexicalBlockFile(scope: !1425, file: !352, discriminator: 5)
!8203 = !DILocation(line: 3575, column: 222, scope: !8204)
!8204 = !DILexicalBlockFile(scope: !8196, file: !352, discriminator: 6)
!8205 = !DILocation(line: 3575, column: 240, scope: !8196)
!8206 = !DILocation(line: 3575, column: 250, scope: !8196)
!8207 = !DILocation(line: 3575, column: 275, scope: !8196)
!8208 = !DILocation(line: 3575, column: 206, scope: !8196)
!8209 = !DILocation(line: 3575, column: 294, scope: !8210)
!8210 = !DILexicalBlockFile(scope: !1426, file: !352, discriminator: 7)
!8211 = !DILocation(line: 3575, column: 294, scope: !1425)
!8212 = !DILocation(line: 3575, column: 294, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !1425, file: !352, discriminator: 8)
!8214 = !DILocation(line: 3575, column: 294, scope: !8215)
!8215 = !DILexicalBlockFile(scope: !1425, file: !352, discriminator: 9)
!8216 = !DILocation(line: 3575, column: 307, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !8218, file: !352, discriminator: 10)
!8218 = !DILexicalBlockFile(scope: !1412, file: !352, discriminator: 3)
!8219 = !DILocation(line: 3575, column: 307, scope: !1423)
!8220 = !DILocation(line: 3575, column: 307, scope: !8221)
!8221 = !DILexicalBlockFile(scope: !1423, file: !352, discriminator: 11)
!8222 = !DILocation(line: 3576, column: 5, scope: !1412)
!8223 = !DILocation(line: 3576, column: 10, scope: !8224)
!8224 = !DILexicalBlockFile(scope: !1428, file: !352, discriminator: 1)
!8225 = !DILocation(line: 3576, column: 20, scope: !1428)
!8226 = !DILocation(line: 3576, column: 51, scope: !1428)
!8227 = !DILocation(line: 3576, column: 67, scope: !1431)
!8228 = !DILocation(line: 3576, column: 83, scope: !1431)
!8229 = !DILocation(line: 3576, column: 67, scope: !1428)
!8230 = !DILocation(line: 3576, column: 98, scope: !8231)
!8231 = !DILexicalBlockFile(scope: !1431, file: !352, discriminator: 2)
!8232 = !DILocation(line: 3576, column: 103, scope: !8233)
!8233 = !DILexicalBlockFile(scope: !1430, file: !352, discriminator: 4)
!8234 = !DILocation(line: 3576, column: 113, scope: !1430)
!8235 = !DILocation(line: 3576, column: 143, scope: !1430)
!8236 = !DILocation(line: 3576, column: 169, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !1430, file: !352, line: 3576, column: 166)
!8238 = !DILocation(line: 3576, column: 186, scope: !8237)
!8239 = !DILocation(line: 3576, column: 166, scope: !8237)
!8240 = !DILocation(line: 3576, column: 196, scope: !8237)
!8241 = !DILocation(line: 3576, column: 166, scope: !1430)
!8242 = !DILocation(line: 3576, column: 166, scope: !8243)
!8243 = !DILexicalBlockFile(scope: !1430, file: !352, discriminator: 5)
!8244 = !DILocation(line: 3576, column: 227, scope: !8245)
!8245 = !DILexicalBlockFile(scope: !8237, file: !352, discriminator: 6)
!8246 = !DILocation(line: 3576, column: 245, scope: !8237)
!8247 = !DILocation(line: 3576, column: 255, scope: !8237)
!8248 = !DILocation(line: 3576, column: 280, scope: !8237)
!8249 = !DILocation(line: 3576, column: 211, scope: !8237)
!8250 = !DILocation(line: 3576, column: 299, scope: !8251)
!8251 = !DILexicalBlockFile(scope: !1431, file: !352, discriminator: 7)
!8252 = !DILocation(line: 3576, column: 299, scope: !1430)
!8253 = !DILocation(line: 3576, column: 299, scope: !8254)
!8254 = !DILexicalBlockFile(scope: !1430, file: !352, discriminator: 8)
!8255 = !DILocation(line: 3576, column: 299, scope: !8256)
!8256 = !DILexicalBlockFile(scope: !1430, file: !352, discriminator: 9)
!8257 = !DILocation(line: 3576, column: 312, scope: !8217)
!8258 = !DILocation(line: 3576, column: 312, scope: !1428)
!8259 = !DILocation(line: 3576, column: 312, scope: !8260)
!8260 = !DILexicalBlockFile(scope: !1428, file: !352, discriminator: 11)
!8261 = !DILocation(line: 3577, column: 5, scope: !1412)
!8262 = !DILocation(line: 3578, column: 1, scope: !1412)
!8263 = !DILocation(line: 3634, column: 33, scope: !1409)
!8264 = !DILocation(line: 3636, column: 49, scope: !1409)
!8265 = !DILocation(line: 3636, column: 37, scope: !1409)
!8266 = !DILocation(line: 3636, column: 55, scope: !1409)
!8267 = !DILocation(line: 3637, column: 9, scope: !1409)
!8268 = !DILocation(line: 3637, column: 13, scope: !1409)
!8269 = !DILocation(line: 3637, column: 19, scope: !1409)
!8270 = !DILocation(line: 3637, column: 23, scope: !1409)
!8271 = !DILocation(line: 3636, column: 12, scope: !1409)
!8272 = !DILocation(line: 3636, column: 5, scope: !1409)
!8273 = !DILocation(line: 3741, column: 40, scope: !1432)
!8274 = !DILocation(line: 3743, column: 25, scope: !1432)
!8275 = !DILocation(line: 3743, column: 5, scope: !1432)
!8276 = !DILocation(line: 3744, column: 5, scope: !1432)
!8277 = !DILocation(line: 3744, column: 10, scope: !8278)
!8278 = !DILexicalBlockFile(scope: !1438, file: !352, discriminator: 1)
!8279 = !DILocation(line: 3744, column: 20, scope: !1438)
!8280 = !DILocation(line: 3744, column: 51, scope: !1438)
!8281 = !DILocation(line: 3744, column: 55, scope: !1438)
!8282 = !DILocation(line: 3744, column: 66, scope: !1441)
!8283 = !DILocation(line: 3744, column: 82, scope: !1441)
!8284 = !DILocation(line: 3744, column: 66, scope: !1438)
!8285 = !DILocation(line: 3744, column: 97, scope: !8286)
!8286 = !DILexicalBlockFile(scope: !1441, file: !352, discriminator: 2)
!8287 = !DILocation(line: 3744, column: 102, scope: !8288)
!8288 = !DILexicalBlockFile(scope: !1440, file: !352, discriminator: 4)
!8289 = !DILocation(line: 3744, column: 112, scope: !1440)
!8290 = !DILocation(line: 3744, column: 142, scope: !1440)
!8291 = !DILocation(line: 3744, column: 168, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !1440, file: !352, line: 3744, column: 165)
!8293 = !DILocation(line: 3744, column: 185, scope: !8292)
!8294 = !DILocation(line: 3744, column: 165, scope: !8292)
!8295 = !DILocation(line: 3744, column: 195, scope: !8292)
!8296 = !DILocation(line: 3744, column: 165, scope: !1440)
!8297 = !DILocation(line: 3744, column: 165, scope: !8298)
!8298 = !DILexicalBlockFile(scope: !1440, file: !352, discriminator: 5)
!8299 = !DILocation(line: 3744, column: 226, scope: !8300)
!8300 = !DILexicalBlockFile(scope: !8292, file: !352, discriminator: 6)
!8301 = !DILocation(line: 3744, column: 244, scope: !8292)
!8302 = !DILocation(line: 3744, column: 254, scope: !8292)
!8303 = !DILocation(line: 3744, column: 279, scope: !8292)
!8304 = !DILocation(line: 3744, column: 210, scope: !8292)
!8305 = !DILocation(line: 3744, column: 298, scope: !8306)
!8306 = !DILexicalBlockFile(scope: !1441, file: !352, discriminator: 7)
!8307 = !DILocation(line: 3744, column: 298, scope: !1440)
!8308 = !DILocation(line: 3744, column: 298, scope: !8309)
!8309 = !DILexicalBlockFile(scope: !1440, file: !352, discriminator: 8)
!8310 = !DILocation(line: 3744, column: 298, scope: !8311)
!8311 = !DILexicalBlockFile(scope: !1440, file: !352, discriminator: 9)
!8312 = !DILocation(line: 3744, column: 311, scope: !8313)
!8313 = !DILexicalBlockFile(scope: !8314, file: !352, discriminator: 10)
!8314 = !DILexicalBlockFile(scope: !1432, file: !352, discriminator: 3)
!8315 = !DILocation(line: 3744, column: 311, scope: !1438)
!8316 = !DILocation(line: 3745, column: 5, scope: !1432)
!8317 = !DILocation(line: 3745, column: 10, scope: !8318)
!8318 = !DILexicalBlockFile(scope: !1443, file: !352, discriminator: 1)
!8319 = !DILocation(line: 3745, column: 20, scope: !1443)
!8320 = !DILocation(line: 3745, column: 51, scope: !1443)
!8321 = !DILocation(line: 3745, column: 55, scope: !1443)
!8322 = !DILocation(line: 3745, column: 64, scope: !1446)
!8323 = !DILocation(line: 3745, column: 80, scope: !1446)
!8324 = !DILocation(line: 3745, column: 64, scope: !1443)
!8325 = !DILocation(line: 3745, column: 95, scope: !8326)
!8326 = !DILexicalBlockFile(scope: !1446, file: !352, discriminator: 2)
!8327 = !DILocation(line: 3745, column: 100, scope: !8328)
!8328 = !DILexicalBlockFile(scope: !1445, file: !352, discriminator: 4)
!8329 = !DILocation(line: 3745, column: 110, scope: !1445)
!8330 = !DILocation(line: 3745, column: 140, scope: !1445)
!8331 = !DILocation(line: 3745, column: 166, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !1445, file: !352, line: 3745, column: 163)
!8333 = !DILocation(line: 3745, column: 183, scope: !8332)
!8334 = !DILocation(line: 3745, column: 163, scope: !8332)
!8335 = !DILocation(line: 3745, column: 193, scope: !8332)
!8336 = !DILocation(line: 3745, column: 163, scope: !1445)
!8337 = !DILocation(line: 3745, column: 163, scope: !8338)
!8338 = !DILexicalBlockFile(scope: !1445, file: !352, discriminator: 5)
!8339 = !DILocation(line: 3745, column: 224, scope: !8340)
!8340 = !DILexicalBlockFile(scope: !8332, file: !352, discriminator: 6)
!8341 = !DILocation(line: 3745, column: 242, scope: !8332)
!8342 = !DILocation(line: 3745, column: 252, scope: !8332)
!8343 = !DILocation(line: 3745, column: 277, scope: !8332)
!8344 = !DILocation(line: 3745, column: 208, scope: !8332)
!8345 = !DILocation(line: 3745, column: 296, scope: !8346)
!8346 = !DILexicalBlockFile(scope: !1446, file: !352, discriminator: 7)
!8347 = !DILocation(line: 3745, column: 296, scope: !1445)
!8348 = !DILocation(line: 3745, column: 296, scope: !8349)
!8349 = !DILexicalBlockFile(scope: !1445, file: !352, discriminator: 8)
!8350 = !DILocation(line: 3745, column: 296, scope: !8351)
!8351 = !DILexicalBlockFile(scope: !1445, file: !352, discriminator: 9)
!8352 = !DILocation(line: 3745, column: 309, scope: !8313)
!8353 = !DILocation(line: 3745, column: 309, scope: !1443)
!8354 = !DILocation(line: 3746, column: 19, scope: !1432)
!8355 = !DILocation(line: 3746, column: 7, scope: !1432)
!8356 = !DILocation(line: 3746, column: 25, scope: !1432)
!8357 = !DILocation(line: 3746, column: 35, scope: !1432)
!8358 = !DILocation(line: 3746, column: 43, scope: !1432)
!8359 = !DILocation(line: 3746, column: 5, scope: !1432)
!8360 = !DILocation(line: 3747, column: 1, scope: !1432)
!8361 = !DILocation(line: 3750, column: 41, scope: !1447)
!8362 = !DILocation(line: 3750, column: 55, scope: !1447)
!8363 = !DILocation(line: 3750, column: 68, scope: !1447)
!8364 = !DILocation(line: 3752, column: 5, scope: !1447)
!8365 = !DILocation(line: 3752, column: 14, scope: !8366)
!8366 = !DILexicalBlockFile(scope: !1456, file: !352, discriminator: 1)
!8367 = !DILocation(line: 3752, column: 18, scope: !1456)
!8368 = !DILocation(line: 3752, column: 14, scope: !1456)
!8369 = !DILocation(line: 3752, column: 14, scope: !1457)
!8370 = !DILocation(line: 3752, column: 24, scope: !8371)
!8371 = !DILexicalBlockFile(scope: !1455, file: !352, discriminator: 2)
!8372 = !DILocation(line: 3752, column: 28, scope: !1455)
!8373 = !DILocation(line: 3752, column: 35, scope: !1455)
!8374 = !DILocation(line: 3752, column: 54, scope: !1455)
!8375 = !DILocation(line: 3752, column: 58, scope: !1455)
!8376 = !DILocation(line: 3752, column: 63, scope: !1455)
!8377 = !DILocation(line: 3752, column: 73, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !1455, file: !352, line: 3752, column: 73)
!8379 = !DILocation(line: 3752, column: 73, scope: !1455)
!8380 = !DILocation(line: 3752, column: 86, scope: !8381)
!8381 = !DILexicalBlockFile(scope: !8378, file: !352, discriminator: 4)
!8382 = !DILocation(line: 3752, column: 79, scope: !8378)
!8383 = !DILocation(line: 3752, column: 92, scope: !8384)
!8384 = !DILexicalBlockFile(scope: !1456, file: !352, discriminator: 5)
!8385 = !DILocation(line: 3752, column: 92, scope: !8386)
!8386 = !DILexicalBlockFile(scope: !8387, file: !352, discriminator: 7)
!8387 = !DILexicalBlockFile(scope: !1456, file: !352, discriminator: 6)
!8388 = !DILocation(line: 3752, column: 92, scope: !1455)
!8389 = !DILocation(line: 3752, column: 94, scope: !8390)
!8390 = !DILexicalBlockFile(scope: !8391, file: !352, discriminator: 8)
!8391 = !DILexicalBlockFile(scope: !1457, file: !352, discriminator: 3)
!8392 = !DILocation(line: 3753, column: 5, scope: !1447)
!8393 = !DILocation(line: 3753, column: 14, scope: !8394)
!8394 = !DILexicalBlockFile(scope: !1460, file: !352, discriminator: 1)
!8395 = !DILocation(line: 3753, column: 18, scope: !1460)
!8396 = !DILocation(line: 3753, column: 14, scope: !1460)
!8397 = !DILocation(line: 3753, column: 14, scope: !1461)
!8398 = !DILocation(line: 3753, column: 26, scope: !8399)
!8399 = !DILexicalBlockFile(scope: !1459, file: !352, discriminator: 2)
!8400 = !DILocation(line: 3753, column: 30, scope: !1459)
!8401 = !DILocation(line: 3753, column: 37, scope: !1459)
!8402 = !DILocation(line: 3753, column: 56, scope: !1459)
!8403 = !DILocation(line: 3753, column: 60, scope: !1459)
!8404 = !DILocation(line: 3753, column: 67, scope: !1459)
!8405 = !DILocation(line: 3753, column: 77, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !1459, file: !352, line: 3753, column: 77)
!8407 = !DILocation(line: 3753, column: 77, scope: !1459)
!8408 = !DILocation(line: 3753, column: 90, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8406, file: !352, discriminator: 4)
!8410 = !DILocation(line: 3753, column: 83, scope: !8406)
!8411 = !DILocation(line: 3753, column: 96, scope: !8412)
!8412 = !DILexicalBlockFile(scope: !1460, file: !352, discriminator: 5)
!8413 = !DILocation(line: 3753, column: 96, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !8415, file: !352, discriminator: 7)
!8415 = !DILexicalBlockFile(scope: !1460, file: !352, discriminator: 6)
!8416 = !DILocation(line: 3753, column: 96, scope: !1459)
!8417 = !DILocation(line: 3753, column: 98, scope: !8418)
!8418 = !DILexicalBlockFile(scope: !8419, file: !352, discriminator: 8)
!8419 = !DILexicalBlockFile(scope: !1461, file: !352, discriminator: 3)
!8420 = !DILocation(line: 3754, column: 5, scope: !1447)
!8421 = !DILocation(line: 3755, column: 1, scope: !1447)
!8422 = !DILocation(line: 3758, column: 37, scope: !1462)
!8423 = !DILocation(line: 3760, column: 5, scope: !1462)
!8424 = !DILocation(line: 3760, column: 15, scope: !1462)
!8425 = !DILocation(line: 3761, column: 5, scope: !1462)
!8426 = !DILocation(line: 3761, column: 15, scope: !1462)
!8427 = !DILocation(line: 3761, column: 20, scope: !1462)
!8428 = !DILocation(line: 3761, column: 24, scope: !1462)
!8429 = !DILocation(line: 3762, column: 5, scope: !1462)
!8430 = !DILocation(line: 3762, column: 10, scope: !1462)
!8431 = !DILocation(line: 3763, column: 5, scope: !1462)
!8432 = !DILocation(line: 3763, column: 17, scope: !1462)
!8433 = !DILocation(line: 3765, column: 31, scope: !1462)
!8434 = !DILocation(line: 3765, column: 37, scope: !1462)
!8435 = !DILocation(line: 3765, column: 47, scope: !1462)
!8436 = !DILocation(line: 3765, column: 14, scope: !1462)
!8437 = !DILocation(line: 3766, column: 5, scope: !1462)
!8438 = !DILocation(line: 3767, column: 16, scope: !1474)
!8439 = !DILocation(line: 3767, column: 25, scope: !1474)
!8440 = !DILocation(line: 3767, column: 14, scope: !1474)
!8441 = !DILocation(line: 3768, column: 13, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !1474, file: !352, line: 3768, column: 13)
!8443 = !DILocation(line: 3768, column: 18, scope: !8442)
!8444 = !DILocation(line: 3768, column: 13, scope: !1474)
!8445 = !DILocation(line: 3769, column: 13, scope: !8442)
!8446 = !DILocation(line: 3771, column: 13, scope: !1473)
!8447 = !DILocation(line: 3771, column: 17, scope: !1473)
!8448 = !DILocation(line: 3771, column: 22, scope: !1473)
!8449 = !DILocation(line: 3771, column: 43, scope: !1473)
!8450 = !DILocation(line: 3771, column: 46, scope: !8451)
!8451 = !DILexicalBlockFile(scope: !1473, file: !352, discriminator: 1)
!8452 = !DILocation(line: 3771, column: 50, scope: !1473)
!8453 = !DILocation(line: 3771, column: 55, scope: !1473)
!8454 = !DILocation(line: 3771, column: 13, scope: !1474)
!8455 = !DILocation(line: 3772, column: 34, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !1473, file: !352, line: 3771, column: 84)
!8457 = !DILocation(line: 3772, column: 18, scope: !8456)
!8458 = !DILocation(line: 3772, column: 16, scope: !8456)
!8459 = !DILocation(line: 3773, column: 9, scope: !8456)
!8460 = !DILocation(line: 3774, column: 13, scope: !1472)
!8461 = !DILocation(line: 3774, column: 23, scope: !1472)
!8462 = !DILocation(line: 3775, column: 49, scope: !1472)
!8463 = !DILocation(line: 3775, column: 53, scope: !1472)
!8464 = !DILocation(line: 3776, column: 49, scope: !1472)
!8465 = !DILocation(line: 3775, column: 20, scope: !1472)
!8466 = !DILocation(line: 3775, column: 18, scope: !1472)
!8467 = !DILocation(line: 3777, column: 17, scope: !1480)
!8468 = !DILocation(line: 3777, column: 22, scope: !1480)
!8469 = !DILocation(line: 3777, column: 17, scope: !1472)
!8470 = !DILocation(line: 3778, column: 17, scope: !1479)
!8471 = !DILocation(line: 3778, column: 22, scope: !8472)
!8472 = !DILexicalBlockFile(scope: !1478, file: !352, discriminator: 1)
!8473 = !DILocation(line: 3778, column: 32, scope: !1478)
!8474 = !DILocation(line: 3778, column: 62, scope: !1478)
!8475 = !DILocation(line: 3778, column: 77, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !1478, file: !352, line: 3778, column: 74)
!8477 = !DILocation(line: 3778, column: 94, scope: !8476)
!8478 = !DILocation(line: 3778, column: 74, scope: !8476)
!8479 = !DILocation(line: 3778, column: 104, scope: !8476)
!8480 = !DILocation(line: 3778, column: 74, scope: !1478)
!8481 = !DILocation(line: 3778, column: 74, scope: !8482)
!8482 = !DILexicalBlockFile(scope: !1478, file: !352, discriminator: 2)
!8483 = !DILocation(line: 3778, column: 135, scope: !8484)
!8484 = !DILexicalBlockFile(scope: !8476, file: !352, discriminator: 3)
!8485 = !DILocation(line: 3778, column: 153, scope: !8476)
!8486 = !DILocation(line: 3778, column: 163, scope: !8476)
!8487 = !DILocation(line: 3778, column: 188, scope: !8476)
!8488 = !DILocation(line: 3778, column: 119, scope: !8476)
!8489 = !DILocation(line: 3778, column: 207, scope: !8490)
!8490 = !DILexicalBlockFile(scope: !1479, file: !352, discriminator: 4)
!8491 = !DILocation(line: 3778, column: 207, scope: !1478)
!8492 = !DILocation(line: 3778, column: 207, scope: !8493)
!8493 = !DILexicalBlockFile(scope: !1478, file: !352, discriminator: 5)
!8494 = !DILocation(line: 3779, column: 17, scope: !1479)
!8495 = !DILocation(line: 3781, column: 34, scope: !1472)
!8496 = !DILocation(line: 3781, column: 18, scope: !1472)
!8497 = !DILocation(line: 3781, column: 16, scope: !1472)
!8498 = !DILocation(line: 3782, column: 13, scope: !1472)
!8499 = !DILocation(line: 3782, column: 18, scope: !8500)
!8500 = !DILexicalBlockFile(scope: !1482, file: !352, discriminator: 1)
!8501 = !DILocation(line: 3782, column: 28, scope: !1482)
!8502 = !DILocation(line: 3782, column: 58, scope: !1482)
!8503 = !DILocation(line: 3782, column: 73, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !1482, file: !352, line: 3782, column: 70)
!8505 = !DILocation(line: 3782, column: 90, scope: !8504)
!8506 = !DILocation(line: 3782, column: 70, scope: !8504)
!8507 = !DILocation(line: 3782, column: 100, scope: !8504)
!8508 = !DILocation(line: 3782, column: 70, scope: !1482)
!8509 = !DILocation(line: 3782, column: 70, scope: !8510)
!8510 = !DILexicalBlockFile(scope: !1482, file: !352, discriminator: 2)
!8511 = !DILocation(line: 3782, column: 131, scope: !8512)
!8512 = !DILexicalBlockFile(scope: !8504, file: !352, discriminator: 3)
!8513 = !DILocation(line: 3782, column: 149, scope: !8504)
!8514 = !DILocation(line: 3782, column: 159, scope: !8504)
!8515 = !DILocation(line: 3782, column: 184, scope: !8504)
!8516 = !DILocation(line: 3782, column: 115, scope: !8504)
!8517 = !DILocation(line: 3782, column: 203, scope: !8518)
!8518 = !DILexicalBlockFile(scope: !1472, file: !352, discriminator: 4)
!8519 = !DILocation(line: 3782, column: 203, scope: !1482)
!8520 = !DILocation(line: 3782, column: 203, scope: !8521)
!8521 = !DILexicalBlockFile(scope: !1482, file: !352, discriminator: 5)
!8522 = !DILocation(line: 3783, column: 9, scope: !1473)
!8523 = !DILocation(line: 3783, column: 9, scope: !8451)
!8524 = !DILocation(line: 3784, column: 13, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !1474, file: !352, line: 3784, column: 13)
!8526 = !DILocation(line: 3784, column: 16, scope: !8525)
!8527 = !DILocation(line: 3784, column: 13, scope: !1474)
!8528 = !DILocation(line: 3785, column: 20, scope: !8525)
!8529 = !DILocation(line: 3785, column: 13, scope: !8525)
!8530 = !DILocation(line: 3786, column: 9, scope: !1474)
!8531 = !DILocation(line: 3786, column: 14, scope: !8532)
!8532 = !DILexicalBlockFile(scope: !1484, file: !352, discriminator: 1)
!8533 = !DILocation(line: 3786, column: 24, scope: !1484)
!8534 = !DILocation(line: 3786, column: 54, scope: !1484)
!8535 = !DILocation(line: 3786, column: 69, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !1484, file: !352, line: 3786, column: 66)
!8537 = !DILocation(line: 3786, column: 86, scope: !8536)
!8538 = !DILocation(line: 3786, column: 66, scope: !8536)
!8539 = !DILocation(line: 3786, column: 96, scope: !8536)
!8540 = !DILocation(line: 3786, column: 66, scope: !1484)
!8541 = !DILocation(line: 3786, column: 66, scope: !8542)
!8542 = !DILexicalBlockFile(scope: !1484, file: !352, discriminator: 2)
!8543 = !DILocation(line: 3786, column: 127, scope: !8544)
!8544 = !DILexicalBlockFile(scope: !8536, file: !352, discriminator: 3)
!8545 = !DILocation(line: 3786, column: 145, scope: !8536)
!8546 = !DILocation(line: 3786, column: 155, scope: !8536)
!8547 = !DILocation(line: 3786, column: 180, scope: !8536)
!8548 = !DILocation(line: 3786, column: 111, scope: !8536)
!8549 = !DILocation(line: 3786, column: 199, scope: !8550)
!8550 = !DILexicalBlockFile(scope: !1474, file: !352, discriminator: 4)
!8551 = !DILocation(line: 3786, column: 199, scope: !1484)
!8552 = !DILocation(line: 3786, column: 199, scope: !8553)
!8553 = !DILexicalBlockFile(scope: !1484, file: !352, discriminator: 5)
!8554 = !DILocation(line: 3787, column: 13, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !1474, file: !352, line: 3787, column: 13)
!8556 = !DILocation(line: 3787, column: 16, scope: !8555)
!8557 = !DILocation(line: 3787, column: 13, scope: !1474)
!8558 = !DILocation(line: 3788, column: 13, scope: !8555)
!8559 = !DILocation(line: 3766, column: 5, scope: !1475)
!8560 = !DILocation(line: 3790, column: 1, scope: !1462)
!8561 = !DILocation(line: 3709, column: 31, scope: !1488)
!8562 = !DILocation(line: 3709, column: 47, scope: !1488)
!8563 = !DILocation(line: 3709, column: 63, scope: !1488)
!8564 = !DILocation(line: 3711, column: 5, scope: !1488)
!8565 = !DILocation(line: 3711, column: 15, scope: !1488)
!8566 = !DILocation(line: 3711, column: 22, scope: !1488)
!8567 = !DILocation(line: 3712, column: 5, scope: !1488)
!8568 = !DILocation(line: 3712, column: 15, scope: !1488)
!8569 = !DILocation(line: 3713, column: 5, scope: !1488)
!8570 = !DILocation(line: 3713, column: 24, scope: !1488)
!8571 = !DILocation(line: 3715, column: 9, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !1488, file: !352, line: 3715, column: 9)
!8573 = !DILocation(line: 3715, column: 14, scope: !8572)
!8574 = !DILocation(line: 3715, column: 35, scope: !8572)
!8575 = !DILocation(line: 3716, column: 45, scope: !8572)
!8576 = !DILocation(line: 3716, column: 10, scope: !8572)
!8577 = !DILocation(line: 3715, column: 9, scope: !1488)
!8578 = !DILocation(line: 3717, column: 9, scope: !8572)
!8579 = !DILocation(line: 3719, column: 28, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !1488, file: !352, line: 3719, column: 9)
!8581 = !DILocation(line: 3719, column: 10, scope: !8580)
!8582 = !DILocation(line: 3719, column: 9, scope: !1488)
!8583 = !DILocation(line: 3720, column: 9, scope: !8580)
!8584 = !DILocation(line: 3723, column: 27, scope: !1488)
!8585 = !DILocation(line: 3723, column: 10, scope: !1488)
!8586 = !DILocation(line: 3723, column: 8, scope: !1488)
!8587 = !DILocation(line: 3724, column: 9, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !1488, file: !352, line: 3724, column: 9)
!8589 = !DILocation(line: 3724, column: 12, scope: !8588)
!8590 = !DILocation(line: 3724, column: 9, scope: !1488)
!8591 = !DILocation(line: 3725, column: 9, scope: !8588)
!8592 = !DILocation(line: 3728, column: 31, scope: !1488)
!8593 = !DILocation(line: 3728, column: 37, scope: !1488)
!8594 = !DILocation(line: 3728, column: 46, scope: !1488)
!8595 = !DILocation(line: 3728, column: 10, scope: !1488)
!8596 = !DILocation(line: 3728, column: 8, scope: !1488)
!8597 = !DILocation(line: 3729, column: 9, scope: !1500)
!8598 = !DILocation(line: 3729, column: 12, scope: !1500)
!8599 = !DILocation(line: 3729, column: 9, scope: !1488)
!8600 = !DILocation(line: 3730, column: 9, scope: !1499)
!8601 = !DILocation(line: 3730, column: 14, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !1498, file: !352, discriminator: 1)
!8603 = !DILocation(line: 3730, column: 24, scope: !1498)
!8604 = !DILocation(line: 3730, column: 54, scope: !1498)
!8605 = !DILocation(line: 3730, column: 67, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !1498, file: !352, line: 3730, column: 64)
!8607 = !DILocation(line: 3730, column: 84, scope: !8606)
!8608 = !DILocation(line: 3730, column: 64, scope: !8606)
!8609 = !DILocation(line: 3730, column: 94, scope: !8606)
!8610 = !DILocation(line: 3730, column: 64, scope: !1498)
!8611 = !DILocation(line: 3730, column: 64, scope: !8612)
!8612 = !DILexicalBlockFile(scope: !1498, file: !352, discriminator: 2)
!8613 = !DILocation(line: 3730, column: 125, scope: !8614)
!8614 = !DILexicalBlockFile(scope: !8606, file: !352, discriminator: 3)
!8615 = !DILocation(line: 3730, column: 143, scope: !8606)
!8616 = !DILocation(line: 3730, column: 153, scope: !8606)
!8617 = !DILocation(line: 3730, column: 178, scope: !8606)
!8618 = !DILocation(line: 3730, column: 109, scope: !8606)
!8619 = !DILocation(line: 3730, column: 197, scope: !8620)
!8620 = !DILexicalBlockFile(scope: !1499, file: !352, discriminator: 4)
!8621 = !DILocation(line: 3730, column: 197, scope: !1498)
!8622 = !DILocation(line: 3730, column: 197, scope: !8623)
!8623 = !DILexicalBlockFile(scope: !1498, file: !352, discriminator: 5)
!8624 = !DILocation(line: 3731, column: 9, scope: !1499)
!8625 = !DILocation(line: 3733, column: 21, scope: !1488)
!8626 = !DILocation(line: 3733, column: 29, scope: !1488)
!8627 = !DILocation(line: 3733, column: 38, scope: !1488)
!8628 = !DILocation(line: 3734, column: 16, scope: !1488)
!8629 = !DILocation(line: 3734, column: 5, scope: !1488)
!8630 = !DILocation(line: 3734, column: 9, scope: !1488)
!8631 = !DILocation(line: 3734, column: 14, scope: !1488)
!8632 = !DILocation(line: 3735, column: 14, scope: !1488)
!8633 = !DILocation(line: 3735, column: 5, scope: !1488)
!8634 = !DILocation(line: 3735, column: 9, scope: !1488)
!8635 = !DILocation(line: 3735, column: 12, scope: !1488)
!8636 = !DILocation(line: 3737, column: 24, scope: !1488)
!8637 = !DILocation(line: 3737, column: 12, scope: !1488)
!8638 = !DILocation(line: 3737, column: 5, scope: !1488)
!8639 = !DILocation(line: 3738, column: 1, scope: !1488)
!8640 = !DILocation(line: 3793, column: 39, scope: !1485)
!8641 = !DILocation(line: 3795, column: 49, scope: !1485)
!8642 = !DILocation(line: 3795, column: 37, scope: !1485)
!8643 = !DILocation(line: 3795, column: 55, scope: !1485)
!8644 = !DILocation(line: 3796, column: 9, scope: !1485)
!8645 = !DILocation(line: 3796, column: 13, scope: !1485)
!8646 = !DILocation(line: 3796, column: 19, scope: !1485)
!8647 = !DILocation(line: 3796, column: 23, scope: !1485)
!8648 = !DILocation(line: 3795, column: 12, scope: !1485)
!8649 = !DILocation(line: 3795, column: 5, scope: !1485)
!8650 = !DILocation(line: 3961, column: 28, scope: !1501)
!8651 = !DILocation(line: 3963, column: 25, scope: !1501)
!8652 = !DILocation(line: 3963, column: 5, scope: !1501)
!8653 = !DILocation(line: 3964, column: 5, scope: !1501)
!8654 = !DILocation(line: 3964, column: 10, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !1507, file: !352, discriminator: 1)
!8656 = !DILocation(line: 3964, column: 20, scope: !1507)
!8657 = !DILocation(line: 3964, column: 51, scope: !1507)
!8658 = !DILocation(line: 3964, column: 55, scope: !1507)
!8659 = !{!8660, !2680, i64 24}
!8660 = !{!"", !2676, i64 0, !2677, i64 16, !2680, i64 24, !2680, i64 32}
!8661 = !DILocation(line: 3964, column: 70, scope: !1510)
!8662 = !DILocation(line: 3964, column: 86, scope: !1510)
!8663 = !DILocation(line: 3964, column: 70, scope: !1507)
!8664 = !DILocation(line: 3964, column: 101, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !1510, file: !352, discriminator: 2)
!8666 = !DILocation(line: 3964, column: 106, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !1509, file: !352, discriminator: 4)
!8668 = !DILocation(line: 3964, column: 116, scope: !1509)
!8669 = !DILocation(line: 3964, column: 146, scope: !1509)
!8670 = !DILocation(line: 3964, column: 172, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !1509, file: !352, line: 3964, column: 169)
!8672 = !DILocation(line: 3964, column: 189, scope: !8671)
!8673 = !DILocation(line: 3964, column: 169, scope: !8671)
!8674 = !DILocation(line: 3964, column: 199, scope: !8671)
!8675 = !DILocation(line: 3964, column: 169, scope: !1509)
!8676 = !DILocation(line: 3964, column: 169, scope: !8677)
!8677 = !DILexicalBlockFile(scope: !1509, file: !352, discriminator: 5)
!8678 = !DILocation(line: 3964, column: 230, scope: !8679)
!8679 = !DILexicalBlockFile(scope: !8671, file: !352, discriminator: 6)
!8680 = !DILocation(line: 3964, column: 248, scope: !8671)
!8681 = !DILocation(line: 3964, column: 258, scope: !8671)
!8682 = !DILocation(line: 3964, column: 283, scope: !8671)
!8683 = !DILocation(line: 3964, column: 214, scope: !8671)
!8684 = !DILocation(line: 3964, column: 302, scope: !8685)
!8685 = !DILexicalBlockFile(scope: !1510, file: !352, discriminator: 7)
!8686 = !DILocation(line: 3964, column: 302, scope: !1509)
!8687 = !DILocation(line: 3964, column: 302, scope: !8688)
!8688 = !DILexicalBlockFile(scope: !1509, file: !352, discriminator: 8)
!8689 = !DILocation(line: 3964, column: 302, scope: !8690)
!8690 = !DILexicalBlockFile(scope: !1509, file: !352, discriminator: 9)
!8691 = !DILocation(line: 3964, column: 315, scope: !8692)
!8692 = !DILexicalBlockFile(scope: !8693, file: !352, discriminator: 10)
!8693 = !DILexicalBlockFile(scope: !1501, file: !352, discriminator: 3)
!8694 = !DILocation(line: 3964, column: 315, scope: !1507)
!8695 = !DILocation(line: 3965, column: 5, scope: !1501)
!8696 = !DILocation(line: 3965, column: 10, scope: !8697)
!8697 = !DILexicalBlockFile(scope: !1512, file: !352, discriminator: 1)
!8698 = !DILocation(line: 3965, column: 20, scope: !1512)
!8699 = !DILocation(line: 3965, column: 51, scope: !1512)
!8700 = !DILocation(line: 3965, column: 55, scope: !1512)
!8701 = !{!8660, !2680, i64 32}
!8702 = !DILocation(line: 3965, column: 71, scope: !1515)
!8703 = !DILocation(line: 3965, column: 87, scope: !1515)
!8704 = !DILocation(line: 3965, column: 71, scope: !1512)
!8705 = !DILocation(line: 3965, column: 102, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !1515, file: !352, discriminator: 2)
!8707 = !DILocation(line: 3965, column: 107, scope: !8708)
!8708 = !DILexicalBlockFile(scope: !1514, file: !352, discriminator: 4)
!8709 = !DILocation(line: 3965, column: 117, scope: !1514)
!8710 = !DILocation(line: 3965, column: 147, scope: !1514)
!8711 = !DILocation(line: 3965, column: 173, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !1514, file: !352, line: 3965, column: 170)
!8713 = !DILocation(line: 3965, column: 190, scope: !8712)
!8714 = !DILocation(line: 3965, column: 170, scope: !8712)
!8715 = !DILocation(line: 3965, column: 200, scope: !8712)
!8716 = !DILocation(line: 3965, column: 170, scope: !1514)
!8717 = !DILocation(line: 3965, column: 170, scope: !8718)
!8718 = !DILexicalBlockFile(scope: !1514, file: !352, discriminator: 5)
!8719 = !DILocation(line: 3965, column: 231, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8712, file: !352, discriminator: 6)
!8721 = !DILocation(line: 3965, column: 249, scope: !8712)
!8722 = !DILocation(line: 3965, column: 259, scope: !8712)
!8723 = !DILocation(line: 3965, column: 284, scope: !8712)
!8724 = !DILocation(line: 3965, column: 215, scope: !8712)
!8725 = !DILocation(line: 3965, column: 303, scope: !8726)
!8726 = !DILexicalBlockFile(scope: !1515, file: !352, discriminator: 7)
!8727 = !DILocation(line: 3965, column: 303, scope: !1514)
!8728 = !DILocation(line: 3965, column: 303, scope: !8729)
!8729 = !DILexicalBlockFile(scope: !1514, file: !352, discriminator: 8)
!8730 = !DILocation(line: 3965, column: 303, scope: !8731)
!8731 = !DILexicalBlockFile(scope: !1514, file: !352, discriminator: 9)
!8732 = !DILocation(line: 3965, column: 316, scope: !8692)
!8733 = !DILocation(line: 3965, column: 316, scope: !1512)
!8734 = !DILocation(line: 3966, column: 19, scope: !1501)
!8735 = !DILocation(line: 3966, column: 7, scope: !1501)
!8736 = !DILocation(line: 3966, column: 25, scope: !1501)
!8737 = !DILocation(line: 3966, column: 35, scope: !1501)
!8738 = !DILocation(line: 3966, column: 43, scope: !1501)
!8739 = !DILocation(line: 3966, column: 5, scope: !1501)
!8740 = !DILocation(line: 3967, column: 1, scope: !1501)
!8741 = !DILocation(line: 4008, column: 25, scope: !1516)
!8742 = !DILocation(line: 4010, column: 9, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !1516, file: !352, line: 4010, column: 9)
!8744 = !DILocation(line: 4010, column: 13, scope: !8743)
!8745 = !{!8660, !2677, i64 16}
!8746 = !DILocation(line: 4010, column: 17, scope: !8743)
!8747 = !DILocation(line: 4010, column: 9, scope: !1516)
!8748 = !DILocation(line: 4011, column: 51, scope: !8743)
!8749 = !DILocation(line: 4011, column: 55, scope: !8743)
!8750 = !DILocation(line: 4011, column: 16, scope: !8743)
!8751 = !DILocation(line: 4011, column: 9, scope: !8743)
!8752 = !DILocation(line: 4013, column: 26, scope: !1523)
!8753 = !DILocation(line: 4013, column: 30, scope: !1523)
!8754 = !DILocation(line: 4013, column: 43, scope: !1523)
!8755 = !DILocation(line: 4013, column: 54, scope: !1523)
!8756 = !DILocation(line: 4013, column: 63, scope: !1523)
!8757 = !DILocation(line: 4013, column: 80, scope: !1523)
!8758 = !DILocation(line: 4013, column: 9, scope: !1516)
!8759 = !DILocation(line: 4014, column: 9, scope: !1522)
!8760 = !DILocation(line: 4014, column: 14, scope: !1522)
!8761 = !DILocation(line: 4014, column: 35, scope: !1522)
!8762 = !DILocation(line: 4014, column: 39, scope: !1522)
!8763 = !DILocation(line: 4014, column: 21, scope: !1522)
!8764 = !DILocation(line: 4015, column: 13, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !1522, file: !352, line: 4015, column: 13)
!8766 = !DILocation(line: 4015, column: 18, scope: !8765)
!8767 = !DILocation(line: 4015, column: 24, scope: !8765)
!8768 = !DILocation(line: 4015, column: 27, scope: !8769)
!8769 = !DILexicalBlockFile(scope: !8765, file: !352, discriminator: 1)
!8770 = !DILocation(line: 4015, column: 13, scope: !1522)
!8771 = !DILocation(line: 4016, column: 13, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8765, file: !352, line: 4015, column: 45)
!8773 = !DILocation(line: 4017, column: 9, scope: !8772)
!8774 = !DILocation(line: 4018, column: 13, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !1522, file: !352, line: 4018, column: 13)
!8776 = !DILocation(line: 4018, column: 18, scope: !8775)
!8777 = !DILocation(line: 4018, column: 13, scope: !1522)
!8778 = !DILocation(line: 4020, column: 54, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8775, file: !352, line: 4018, column: 24)
!8780 = !DILocation(line: 4020, column: 58, scope: !8779)
!8781 = !DILocation(line: 4020, column: 20, scope: !8779)
!8782 = !DILocation(line: 4020, column: 13, scope: !8779)
!8783 = !DILocation(line: 4022, column: 5, scope: !1523)
!8784 = !DILocation(line: 4022, column: 5, scope: !8785)
!8785 = !DILexicalBlockFile(scope: !1523, file: !352, discriminator: 1)
!8786 = !DILocation(line: 4022, column: 5, scope: !1522)
!8787 = !DILocation(line: 4024, column: 61, scope: !1516)
!8788 = !DILocation(line: 4024, column: 65, scope: !1516)
!8789 = !DILocation(line: 4024, column: 75, scope: !1516)
!8790 = !DILocation(line: 4024, column: 79, scope: !1516)
!8791 = !DILocation(line: 4023, column: 12, scope: !1516)
!8792 = !DILocation(line: 4023, column: 5, scope: !1516)
!8793 = !DILocation(line: 4025, column: 1, scope: !1516)
!8794 = !DILocation(line: 3970, column: 29, scope: !1524)
!8795 = !DILocation(line: 3970, column: 43, scope: !1524)
!8796 = !DILocation(line: 3970, column: 56, scope: !1524)
!8797 = !DILocation(line: 3972, column: 5, scope: !1524)
!8798 = !DILocation(line: 3972, column: 14, scope: !8799)
!8799 = !DILexicalBlockFile(scope: !1533, file: !352, discriminator: 1)
!8800 = !DILocation(line: 3972, column: 18, scope: !1533)
!8801 = !DILocation(line: 3972, column: 14, scope: !1533)
!8802 = !DILocation(line: 3972, column: 14, scope: !1534)
!8803 = !DILocation(line: 3972, column: 30, scope: !8804)
!8804 = !DILexicalBlockFile(scope: !1532, file: !352, discriminator: 2)
!8805 = !DILocation(line: 3972, column: 34, scope: !1532)
!8806 = !DILocation(line: 3972, column: 41, scope: !1532)
!8807 = !DILocation(line: 3972, column: 60, scope: !1532)
!8808 = !DILocation(line: 3972, column: 64, scope: !1532)
!8809 = !DILocation(line: 3972, column: 75, scope: !1532)
!8810 = !DILocation(line: 3972, column: 85, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !1532, file: !352, line: 3972, column: 85)
!8812 = !DILocation(line: 3972, column: 85, scope: !1532)
!8813 = !DILocation(line: 3972, column: 98, scope: !8814)
!8814 = !DILexicalBlockFile(scope: !8811, file: !352, discriminator: 4)
!8815 = !DILocation(line: 3972, column: 91, scope: !8811)
!8816 = !DILocation(line: 3972, column: 104, scope: !8817)
!8817 = !DILexicalBlockFile(scope: !1533, file: !352, discriminator: 5)
!8818 = !DILocation(line: 3972, column: 104, scope: !8819)
!8819 = !DILexicalBlockFile(scope: !8820, file: !352, discriminator: 7)
!8820 = !DILexicalBlockFile(scope: !1533, file: !352, discriminator: 6)
!8821 = !DILocation(line: 3972, column: 104, scope: !1532)
!8822 = !DILocation(line: 3972, column: 106, scope: !8823)
!8823 = !DILexicalBlockFile(scope: !8824, file: !352, discriminator: 8)
!8824 = !DILexicalBlockFile(scope: !1534, file: !352, discriminator: 3)
!8825 = !DILocation(line: 3973, column: 5, scope: !1524)
!8826 = !DILocation(line: 3973, column: 14, scope: !8827)
!8827 = !DILexicalBlockFile(scope: !1537, file: !352, discriminator: 1)
!8828 = !DILocation(line: 3973, column: 18, scope: !1537)
!8829 = !DILocation(line: 3973, column: 14, scope: !1537)
!8830 = !DILocation(line: 3973, column: 14, scope: !1538)
!8831 = !DILocation(line: 3973, column: 31, scope: !8832)
!8832 = !DILexicalBlockFile(scope: !1536, file: !352, discriminator: 2)
!8833 = !DILocation(line: 3973, column: 35, scope: !1536)
!8834 = !DILocation(line: 3973, column: 42, scope: !1536)
!8835 = !DILocation(line: 3973, column: 61, scope: !1536)
!8836 = !DILocation(line: 3973, column: 65, scope: !1536)
!8837 = !DILocation(line: 3973, column: 77, scope: !1536)
!8838 = !DILocation(line: 3973, column: 87, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !1536, file: !352, line: 3973, column: 87)
!8840 = !DILocation(line: 3973, column: 87, scope: !1536)
!8841 = !DILocation(line: 3973, column: 100, scope: !8842)
!8842 = !DILexicalBlockFile(scope: !8839, file: !352, discriminator: 4)
!8843 = !DILocation(line: 3973, column: 93, scope: !8839)
!8844 = !DILocation(line: 3973, column: 106, scope: !8845)
!8845 = !DILexicalBlockFile(scope: !1537, file: !352, discriminator: 5)
!8846 = !DILocation(line: 3973, column: 106, scope: !8847)
!8847 = !DILexicalBlockFile(scope: !8848, file: !352, discriminator: 7)
!8848 = !DILexicalBlockFile(scope: !1537, file: !352, discriminator: 6)
!8849 = !DILocation(line: 3973, column: 106, scope: !1536)
!8850 = !DILocation(line: 3973, column: 108, scope: !8851)
!8851 = !DILexicalBlockFile(scope: !8852, file: !352, discriminator: 8)
!8852 = !DILexicalBlockFile(scope: !1538, file: !352, discriminator: 3)
!8853 = !DILocation(line: 3974, column: 5, scope: !1524)
!8854 = !DILocation(line: 3975, column: 1, scope: !1524)
!8855 = !DILocation(line: 4000, column: 25, scope: !1539)
!8856 = !DILocation(line: 4002, column: 9, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !1539, file: !352, line: 4002, column: 9)
!8858 = !DILocation(line: 4002, column: 13, scope: !8857)
!8859 = !DILocation(line: 4002, column: 17, scope: !8857)
!8860 = !DILocation(line: 4002, column: 9, scope: !1539)
!8861 = !DILocation(line: 4003, column: 31, scope: !8857)
!8862 = !DILocation(line: 4003, column: 16, scope: !8857)
!8863 = !DILocation(line: 4003, column: 9, scope: !8857)
!8864 = !DILocation(line: 4004, column: 31, scope: !1539)
!8865 = !DILocation(line: 4004, column: 35, scope: !1539)
!8866 = !DILocation(line: 4004, column: 38, scope: !1539)
!8867 = !DILocation(line: 4004, column: 12, scope: !1539)
!8868 = !DILocation(line: 4004, column: 5, scope: !1539)
!8869 = !DILocation(line: 4005, column: 1, scope: !1539)
!8870 = !DILocation(line: 3885, column: 25, scope: !1550)
!8871 = !DILocation(line: 3885, column: 41, scope: !1550)
!8872 = !DILocation(line: 3885, column: 57, scope: !1550)
!8873 = !DILocation(line: 3887, column: 5, scope: !1550)
!8874 = !DILocation(line: 3887, column: 18, scope: !1550)
!8875 = !DILocation(line: 3888, column: 5, scope: !1550)
!8876 = !DILocation(line: 3888, column: 9, scope: !1550)
!8877 = !DILocation(line: 3889, column: 5, scope: !1550)
!8878 = !DILocation(line: 3889, column: 16, scope: !1550)
!8879 = !DILocation(line: 3890, column: 5, scope: !1550)
!8880 = !DILocation(line: 3890, column: 15, scope: !1550)
!8881 = !DILocation(line: 3891, column: 5, scope: !1550)
!8882 = !DILocation(line: 3891, column: 15, scope: !1550)
!8883 = !DILocation(line: 3892, column: 5, scope: !1550)
!8884 = !DILocation(line: 3892, column: 10, scope: !1550)
!8885 = !DILocation(line: 3895, column: 38, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3895, column: 9)
!8887 = !DILocation(line: 3895, column: 44, scope: !8886)
!8888 = !DILocation(line: 3895, column: 10, scope: !8886)
!8889 = !DILocation(line: 3895, column: 9, scope: !1550)
!8890 = !DILocation(line: 3897, column: 9, scope: !8886)
!8891 = !DILocation(line: 3899, column: 10, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3899, column: 9)
!8893 = !DILocation(line: 3899, column: 19, scope: !8892)
!8894 = !DILocation(line: 3899, column: 33, scope: !8892)
!8895 = !DILocation(line: 3899, column: 52, scope: !8896)
!8896 = !DILexicalBlockFile(scope: !8892, file: !352, discriminator: 1)
!8897 = !DILocation(line: 3899, column: 37, scope: !8892)
!8898 = !DILocation(line: 3899, column: 63, scope: !8892)
!8899 = !DILocation(line: 3900, column: 10, scope: !8892)
!8900 = !DILocation(line: 3900, column: 20, scope: !8892)
!8901 = !DILocation(line: 3900, column: 34, scope: !8892)
!8902 = !DILocation(line: 3900, column: 53, scope: !8896)
!8903 = !DILocation(line: 3900, column: 38, scope: !8892)
!8904 = !DILocation(line: 3899, column: 9, scope: !1550)
!8905 = !DILocation(line: 3901, column: 37, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8892, file: !352, line: 3900, column: 66)
!8907 = !DILocation(line: 3901, column: 21, scope: !8906)
!8908 = !DILocation(line: 3902, column: 21, scope: !8906)
!8909 = !DILocation(line: 3905, column: 9, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3905, column: 9)
!8911 = !DILocation(line: 3905, column: 18, scope: !8910)
!8912 = !DILocation(line: 3905, column: 9, scope: !1550)
!8913 = !DILocation(line: 3906, column: 32, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !352, line: 3905, column: 33)
!8915 = !DILocation(line: 3906, column: 15, scope: !8914)
!8916 = !DILocation(line: 3906, column: 13, scope: !8914)
!8917 = !DILocation(line: 3907, column: 14, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8914, file: !352, line: 3907, column: 13)
!8919 = !DILocation(line: 3907, column: 18, scope: !8918)
!8920 = !DILocation(line: 3907, column: 24, scope: !8918)
!8921 = !DILocation(line: 3907, column: 27, scope: !8922)
!8922 = !DILexicalBlockFile(scope: !8918, file: !352, discriminator: 1)
!8923 = !DILocation(line: 3907, column: 45, scope: !8918)
!8924 = !DILocation(line: 3907, column: 66, scope: !8925)
!8925 = !DILexicalBlockFile(scope: !8926, file: !352, discriminator: 3)
!8926 = !DILexicalBlockFile(scope: !8918, file: !352, discriminator: 2)
!8927 = !DILocation(line: 3907, column: 78, scope: !8918)
!8928 = !DILocation(line: 3907, column: 89, scope: !8918)
!8929 = !DILocation(line: 3907, column: 98, scope: !8918)
!8930 = !DILocation(line: 3907, column: 115, scope: !8918)
!8931 = !DILocation(line: 3907, column: 13, scope: !8914)
!8932 = !DILocation(line: 3908, column: 13, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8918, file: !352, line: 3907, column: 122)
!8934 = !DILocation(line: 3909, column: 23, scope: !8933)
!8935 = !DILocation(line: 3910, column: 9, scope: !8933)
!8936 = !DILocation(line: 3911, column: 25, scope: !8914)
!8937 = !DILocation(line: 3911, column: 37, scope: !8914)
!8938 = !DILocation(line: 3911, column: 46, scope: !8914)
!8939 = !DILocation(line: 3912, column: 5, scope: !8914)
!8940 = !DILocation(line: 3913, column: 13, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8910, file: !352, line: 3912, column: 12)
!8942 = !DILocation(line: 3914, column: 20, scope: !8941)
!8943 = !DILocation(line: 3914, column: 18, scope: !8941)
!8944 = !DILocation(line: 3918, column: 9, scope: !1566)
!8945 = !DILocation(line: 3918, column: 19, scope: !1566)
!8946 = !DILocation(line: 3918, column: 9, scope: !1550)
!8947 = !DILocation(line: 3919, column: 21, scope: !1565)
!8948 = !DILocation(line: 3919, column: 19, scope: !1565)
!8949 = !DILocation(line: 3920, column: 13, scope: !1564)
!8950 = !DILocation(line: 3920, column: 23, scope: !1564)
!8951 = !DILocation(line: 3920, column: 13, scope: !1565)
!8952 = !DILocation(line: 3921, column: 13, scope: !1563)
!8953 = !DILocation(line: 3921, column: 18, scope: !8954)
!8954 = !DILexicalBlockFile(scope: !1562, file: !352, discriminator: 1)
!8955 = !DILocation(line: 3921, column: 28, scope: !1562)
!8956 = !DILocation(line: 3921, column: 58, scope: !1562)
!8957 = !DILocation(line: 3921, column: 77, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !1562, file: !352, line: 3921, column: 74)
!8959 = !DILocation(line: 3921, column: 94, scope: !8958)
!8960 = !DILocation(line: 3921, column: 74, scope: !8958)
!8961 = !DILocation(line: 3921, column: 104, scope: !8958)
!8962 = !DILocation(line: 3921, column: 74, scope: !1562)
!8963 = !DILocation(line: 3921, column: 74, scope: !8964)
!8964 = !DILexicalBlockFile(scope: !1562, file: !352, discriminator: 2)
!8965 = !DILocation(line: 3921, column: 135, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !8958, file: !352, discriminator: 3)
!8967 = !DILocation(line: 3921, column: 153, scope: !8958)
!8968 = !DILocation(line: 3921, column: 163, scope: !8958)
!8969 = !DILocation(line: 3921, column: 188, scope: !8958)
!8970 = !DILocation(line: 3921, column: 119, scope: !8958)
!8971 = !DILocation(line: 3921, column: 207, scope: !8972)
!8972 = !DILexicalBlockFile(scope: !1563, file: !352, discriminator: 4)
!8973 = !DILocation(line: 3921, column: 207, scope: !1562)
!8974 = !DILocation(line: 3921, column: 207, scope: !8975)
!8975 = !DILexicalBlockFile(scope: !1562, file: !352, discriminator: 5)
!8976 = !DILocation(line: 3922, column: 13, scope: !1563)
!8977 = !DILocation(line: 3924, column: 5, scope: !1565)
!8978 = !DILocation(line: 3925, column: 25, scope: !1566)
!8979 = !DILocation(line: 3925, column: 38, scope: !1566)
!8980 = !DILocation(line: 3925, column: 47, scope: !1566)
!8981 = !DILocation(line: 3930, column: 26, scope: !1550)
!8982 = !DILocation(line: 3930, column: 12, scope: !1550)
!8983 = !DILocation(line: 3930, column: 10, scope: !1550)
!8984 = !DILocation(line: 3931, column: 9, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !1550, file: !352, line: 3931, column: 9)
!8986 = !DILocation(line: 3931, column: 14, scope: !8985)
!8987 = !DILocation(line: 3931, column: 9, scope: !1550)
!8988 = !DILocation(line: 3932, column: 19, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !352, line: 3931, column: 20)
!8990 = !DILocation(line: 3933, column: 13, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8989, file: !352, line: 3933, column: 13)
!8992 = !DILocation(line: 3933, column: 18, scope: !8991)
!8993 = !DILocation(line: 3933, column: 24, scope: !8991)
!8994 = !DILocation(line: 3933, column: 27, scope: !8995)
!8995 = !DILexicalBlockFile(scope: !8991, file: !352, discriminator: 1)
!8996 = !DILocation(line: 3933, column: 13, scope: !8989)
!8997 = !DILocation(line: 3934, column: 13, scope: !8991)
!8998 = !DILocation(line: 3935, column: 5, scope: !8989)
!8999 = !DILocation(line: 3937, column: 9, scope: !1569)
!9000 = !DILocation(line: 3937, column: 9, scope: !1550)
!9001 = !DILocation(line: 3938, column: 13, scope: !1569)
!9002 = !DILocation(line: 3938, column: 9, scope: !1569)
!9003 = !DILocation(line: 3940, column: 9, scope: !1569)
!9004 = !DILocation(line: 3940, column: 14, scope: !9005)
!9005 = !DILexicalBlockFile(scope: !1568, file: !352, discriminator: 1)
!9006 = !DILocation(line: 3940, column: 24, scope: !1568)
!9007 = !DILocation(line: 3940, column: 47, scope: !1568)
!9008 = !DILocation(line: 3940, column: 62, scope: !1573)
!9009 = !DILocation(line: 3940, column: 70, scope: !1573)
!9010 = !DILocation(line: 3940, column: 62, scope: !1568)
!9011 = !DILocation(line: 3940, column: 98, scope: !9012)
!9012 = !DILexicalBlockFile(scope: !1572, file: !352, discriminator: 2)
!9013 = !DILocation(line: 3940, column: 112, scope: !1572)
!9014 = !DILocation(line: 3940, column: 117, scope: !9015)
!9015 = !DILexicalBlockFile(scope: !1571, file: !352, discriminator: 4)
!9016 = !DILocation(line: 3940, column: 127, scope: !1571)
!9017 = !DILocation(line: 3940, column: 157, scope: !1571)
!9018 = !DILocation(line: 3940, column: 175, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !1571, file: !352, line: 3940, column: 172)
!9020 = !DILocation(line: 3940, column: 192, scope: !9019)
!9021 = !DILocation(line: 3940, column: 172, scope: !9019)
!9022 = !DILocation(line: 3940, column: 202, scope: !9019)
!9023 = !DILocation(line: 3940, column: 172, scope: !1571)
!9024 = !DILocation(line: 3940, column: 172, scope: !9025)
!9025 = !DILexicalBlockFile(scope: !1571, file: !352, discriminator: 5)
!9026 = !DILocation(line: 3940, column: 233, scope: !9027)
!9027 = !DILexicalBlockFile(scope: !9019, file: !352, discriminator: 6)
!9028 = !DILocation(line: 3940, column: 251, scope: !9019)
!9029 = !DILocation(line: 3940, column: 261, scope: !9019)
!9030 = !DILocation(line: 3940, column: 286, scope: !9019)
!9031 = !DILocation(line: 3940, column: 217, scope: !9019)
!9032 = !DILocation(line: 3940, column: 305, scope: !9033)
!9033 = !DILexicalBlockFile(scope: !1572, file: !352, discriminator: 7)
!9034 = !DILocation(line: 3940, column: 305, scope: !1571)
!9035 = !DILocation(line: 3940, column: 305, scope: !9036)
!9036 = !DILexicalBlockFile(scope: !1571, file: !352, discriminator: 8)
!9037 = !DILocation(line: 3940, column: 318, scope: !9038)
!9038 = !DILexicalBlockFile(scope: !1572, file: !352, discriminator: 9)
!9039 = !DILocation(line: 3940, column: 320, scope: !9040)
!9040 = !DILexicalBlockFile(scope: !9041, file: !352, discriminator: 10)
!9041 = !DILexicalBlockFile(scope: !1569, file: !352, discriminator: 3)
!9042 = !DILocation(line: 3940, column: 320, scope: !1568)
!9043 = !DILocation(line: 3940, column: 320, scope: !9044)
!9044 = !DILexicalBlockFile(scope: !1568, file: !352, discriminator: 11)
!9045 = !DILocation(line: 3948, column: 25, scope: !1550)
!9046 = !DILocation(line: 3948, column: 31, scope: !1550)
!9047 = !DILocation(line: 3948, column: 40, scope: !1550)
!9048 = !DILocation(line: 3948, column: 10, scope: !1550)
!9049 = !DILocation(line: 3948, column: 8, scope: !1550)
!9050 = !DILocation(line: 3949, column: 9, scope: !1577)
!9051 = !DILocation(line: 3949, column: 12, scope: !1577)
!9052 = !DILocation(line: 3949, column: 9, scope: !1550)
!9053 = !DILocation(line: 3950, column: 9, scope: !1576)
!9054 = !DILocation(line: 3950, column: 14, scope: !9055)
!9055 = !DILexicalBlockFile(scope: !1575, file: !352, discriminator: 1)
!9056 = !DILocation(line: 3950, column: 24, scope: !1575)
!9057 = !DILocation(line: 3950, column: 55, scope: !1575)
!9058 = !DILocation(line: 3950, column: 70, scope: !1580)
!9059 = !DILocation(line: 3950, column: 86, scope: !1580)
!9060 = !DILocation(line: 3950, column: 70, scope: !1575)
!9061 = !DILocation(line: 3950, column: 101, scope: !9062)
!9062 = !DILexicalBlockFile(scope: !1580, file: !352, discriminator: 2)
!9063 = !DILocation(line: 3950, column: 106, scope: !9064)
!9064 = !DILexicalBlockFile(scope: !1579, file: !352, discriminator: 4)
!9065 = !DILocation(line: 3950, column: 116, scope: !1579)
!9066 = !DILocation(line: 3950, column: 146, scope: !1579)
!9067 = !DILocation(line: 3950, column: 172, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !1579, file: !352, line: 3950, column: 169)
!9069 = !DILocation(line: 3950, column: 189, scope: !9068)
!9070 = !DILocation(line: 3950, column: 169, scope: !9068)
!9071 = !DILocation(line: 3950, column: 199, scope: !9068)
!9072 = !DILocation(line: 3950, column: 169, scope: !1579)
!9073 = !DILocation(line: 3950, column: 169, scope: !9074)
!9074 = !DILexicalBlockFile(scope: !1579, file: !352, discriminator: 5)
!9075 = !DILocation(line: 3950, column: 230, scope: !9076)
!9076 = !DILexicalBlockFile(scope: !9068, file: !352, discriminator: 6)
!9077 = !DILocation(line: 3950, column: 248, scope: !9068)
!9078 = !DILocation(line: 3950, column: 258, scope: !9068)
!9079 = !DILocation(line: 3950, column: 283, scope: !9068)
!9080 = !DILocation(line: 3950, column: 214, scope: !9068)
!9081 = !DILocation(line: 3950, column: 302, scope: !9082)
!9082 = !DILexicalBlockFile(scope: !1580, file: !352, discriminator: 7)
!9083 = !DILocation(line: 3950, column: 302, scope: !1579)
!9084 = !DILocation(line: 3950, column: 302, scope: !9085)
!9085 = !DILexicalBlockFile(scope: !1579, file: !352, discriminator: 8)
!9086 = !DILocation(line: 3950, column: 302, scope: !9087)
!9087 = !DILexicalBlockFile(scope: !1579, file: !352, discriminator: 9)
!9088 = !DILocation(line: 3950, column: 315, scope: !9089)
!9089 = !DILexicalBlockFile(scope: !9090, file: !352, discriminator: 10)
!9090 = !DILexicalBlockFile(scope: !1576, file: !352, discriminator: 3)
!9091 = !DILocation(line: 3950, column: 315, scope: !1575)
!9092 = !DILocation(line: 3950, column: 315, scope: !9093)
!9093 = !DILexicalBlockFile(scope: !1575, file: !352, discriminator: 11)
!9094 = !DILocation(line: 3951, column: 9, scope: !1576)
!9095 = !DILocation(line: 3953, column: 15, scope: !1550)
!9096 = !DILocation(line: 3953, column: 5, scope: !1550)
!9097 = !DILocation(line: 3953, column: 9, scope: !1550)
!9098 = !DILocation(line: 3953, column: 13, scope: !1550)
!9099 = !DILocation(line: 3954, column: 20, scope: !1550)
!9100 = !DILocation(line: 3954, column: 5, scope: !1550)
!9101 = !DILocation(line: 3954, column: 9, scope: !1550)
!9102 = !DILocation(line: 3954, column: 18, scope: !1550)
!9103 = !DILocation(line: 3955, column: 21, scope: !1550)
!9104 = !DILocation(line: 3955, column: 5, scope: !1550)
!9105 = !DILocation(line: 3955, column: 9, scope: !1550)
!9106 = !DILocation(line: 3955, column: 19, scope: !1550)
!9107 = !DILocation(line: 3957, column: 24, scope: !1550)
!9108 = !DILocation(line: 3957, column: 12, scope: !1550)
!9109 = !DILocation(line: 3957, column: 5, scope: !1550)
!9110 = !DILocation(line: 3958, column: 1, scope: !1550)
!9111 = !DILocation(line: 3978, column: 29, scope: !1542)
!9112 = !DILocation(line: 3980, column: 5, scope: !1542)
!9113 = !DILocation(line: 3980, column: 15, scope: !1542)
!9114 = !DILocation(line: 3981, column: 5, scope: !1542)
!9115 = !DILocation(line: 3981, column: 15, scope: !1542)
!9116 = !DILocation(line: 3983, column: 16, scope: !1542)
!9117 = !DILocation(line: 3983, column: 20, scope: !1542)
!9118 = !DILocation(line: 3983, column: 14, scope: !1542)
!9119 = !DILocation(line: 3984, column: 9, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !1542, file: !352, line: 3984, column: 9)
!9121 = !DILocation(line: 3984, column: 18, scope: !9120)
!9122 = !DILocation(line: 3984, column: 9, scope: !1542)
!9123 = !DILocation(line: 3986, column: 20, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9120, file: !352, line: 3984, column: 33)
!9125 = !DILocation(line: 3986, column: 18, scope: !9124)
!9126 = !DILocation(line: 3987, column: 13, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9124, file: !352, line: 3987, column: 13)
!9128 = !DILocation(line: 3987, column: 22, scope: !9127)
!9129 = !DILocation(line: 3987, column: 13, scope: !9124)
!9130 = !DILocation(line: 3988, column: 13, scope: !9127)
!9131 = !DILocation(line: 3989, column: 5, scope: !9124)
!9132 = !DILocation(line: 3992, column: 31, scope: !1542)
!9133 = !DILocation(line: 3992, column: 41, scope: !1542)
!9134 = !DILocation(line: 3992, column: 45, scope: !1542)
!9135 = !DILocation(line: 3992, column: 18, scope: !1542)
!9136 = !DILocation(line: 3992, column: 16, scope: !1542)
!9137 = !DILocation(line: 3993, column: 9, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !1542, file: !352, line: 3993, column: 9)
!9139 = !DILocation(line: 3993, column: 20, scope: !9138)
!9140 = !DILocation(line: 3993, column: 9, scope: !1542)
!9141 = !DILocation(line: 3994, column: 9, scope: !9138)
!9142 = !DILocation(line: 3995, column: 20, scope: !1542)
!9143 = !DILocation(line: 3995, column: 5, scope: !1542)
!9144 = !DILocation(line: 3995, column: 9, scope: !1542)
!9145 = !DILocation(line: 3995, column: 18, scope: !1542)
!9146 = !DILocation(line: 3996, column: 12, scope: !1542)
!9147 = !DILocation(line: 3996, column: 5, scope: !1542)
!9148 = !DILocation(line: 3997, column: 1, scope: !1542)
!9149 = !DILocation(line: 4028, column: 27, scope: !1547)
!9150 = !DILocation(line: 4030, column: 9, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !1547, file: !352, line: 4030, column: 9)
!9152 = !DILocation(line: 4030, column: 13, scope: !9151)
!9153 = !DILocation(line: 4030, column: 17, scope: !9151)
!9154 = !DILocation(line: 4030, column: 9, scope: !1547)
!9155 = !DILocation(line: 4031, column: 53, scope: !9151)
!9156 = !DILocation(line: 4031, column: 41, scope: !9151)
!9157 = !DILocation(line: 4031, column: 59, scope: !9151)
!9158 = !DILocation(line: 4031, column: 69, scope: !9151)
!9159 = !DILocation(line: 4031, column: 73, scope: !9151)
!9160 = !DILocation(line: 4031, column: 83, scope: !9151)
!9161 = !DILocation(line: 4031, column: 87, scope: !9151)
!9162 = !DILocation(line: 4031, column: 16, scope: !9151)
!9163 = !DILocation(line: 4031, column: 9, scope: !9151)
!9164 = !DILocation(line: 4032, column: 48, scope: !1547)
!9165 = !DILocation(line: 4032, column: 36, scope: !1547)
!9166 = !DILocation(line: 4032, column: 54, scope: !1547)
!9167 = !DILocation(line: 4032, column: 64, scope: !1547)
!9168 = !DILocation(line: 4032, column: 68, scope: !1547)
!9169 = !DILocation(line: 4032, column: 12, scope: !1547)
!9170 = !DILocation(line: 4032, column: 5, scope: !1547)
!9171 = !DILocation(line: 4033, column: 1, scope: !1547)
!9172 = !DILocation(line: 4328, column: 39, scope: !1581)
!9173 = !DILocation(line: 4330, column: 25, scope: !1581)
!9174 = !DILocation(line: 4330, column: 5, scope: !1581)
!9175 = !DILocation(line: 4331, column: 5, scope: !1581)
!9176 = !DILocation(line: 4331, column: 10, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !1587, file: !352, discriminator: 1)
!9178 = !DILocation(line: 4331, column: 20, scope: !1587)
!9179 = !DILocation(line: 4331, column: 51, scope: !1587)
!9180 = !DILocation(line: 4331, column: 55, scope: !1587)
!9181 = !{!9182, !2680, i64 32}
!9182 = !{!"", !2676, i64 0, !2677, i64 16, !2677, i64 24, !2680, i64 32, !2680, i64 40, !2680, i64 48}
!9183 = !DILocation(line: 4331, column: 69, scope: !1590)
!9184 = !DILocation(line: 4331, column: 85, scope: !1590)
!9185 = !DILocation(line: 4331, column: 69, scope: !1587)
!9186 = !DILocation(line: 4331, column: 100, scope: !9187)
!9187 = !DILexicalBlockFile(scope: !1590, file: !352, discriminator: 2)
!9188 = !DILocation(line: 4331, column: 105, scope: !9189)
!9189 = !DILexicalBlockFile(scope: !1589, file: !352, discriminator: 4)
!9190 = !DILocation(line: 4331, column: 115, scope: !1589)
!9191 = !DILocation(line: 4331, column: 145, scope: !1589)
!9192 = !DILocation(line: 4331, column: 171, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !1589, file: !352, line: 4331, column: 168)
!9194 = !DILocation(line: 4331, column: 188, scope: !9193)
!9195 = !DILocation(line: 4331, column: 168, scope: !9193)
!9196 = !DILocation(line: 4331, column: 198, scope: !9193)
!9197 = !DILocation(line: 4331, column: 168, scope: !1589)
!9198 = !DILocation(line: 4331, column: 168, scope: !9199)
!9199 = !DILexicalBlockFile(scope: !1589, file: !352, discriminator: 5)
!9200 = !DILocation(line: 4331, column: 229, scope: !9201)
!9201 = !DILexicalBlockFile(scope: !9193, file: !352, discriminator: 6)
!9202 = !DILocation(line: 4331, column: 247, scope: !9193)
!9203 = !DILocation(line: 4331, column: 257, scope: !9193)
!9204 = !DILocation(line: 4331, column: 282, scope: !9193)
!9205 = !DILocation(line: 4331, column: 213, scope: !9193)
!9206 = !DILocation(line: 4331, column: 301, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !1590, file: !352, discriminator: 7)
!9208 = !DILocation(line: 4331, column: 301, scope: !1589)
!9209 = !DILocation(line: 4331, column: 301, scope: !9210)
!9210 = !DILexicalBlockFile(scope: !1589, file: !352, discriminator: 8)
!9211 = !DILocation(line: 4331, column: 301, scope: !9212)
!9212 = !DILexicalBlockFile(scope: !1589, file: !352, discriminator: 9)
!9213 = !DILocation(line: 4331, column: 314, scope: !9214)
!9214 = !DILexicalBlockFile(scope: !9215, file: !352, discriminator: 10)
!9215 = !DILexicalBlockFile(scope: !1581, file: !352, discriminator: 3)
!9216 = !DILocation(line: 4331, column: 314, scope: !1587)
!9217 = !DILocation(line: 4332, column: 5, scope: !1581)
!9218 = !DILocation(line: 4332, column: 10, scope: !9219)
!9219 = !DILexicalBlockFile(scope: !1592, file: !352, discriminator: 1)
!9220 = !DILocation(line: 4332, column: 20, scope: !1592)
!9221 = !DILocation(line: 4332, column: 51, scope: !1592)
!9222 = !DILocation(line: 4332, column: 55, scope: !1592)
!9223 = !{!9182, !2680, i64 40}
!9224 = !DILocation(line: 4332, column: 68, scope: !1595)
!9225 = !DILocation(line: 4332, column: 84, scope: !1595)
!9226 = !DILocation(line: 4332, column: 68, scope: !1592)
!9227 = !DILocation(line: 4332, column: 99, scope: !9228)
!9228 = !DILexicalBlockFile(scope: !1595, file: !352, discriminator: 2)
!9229 = !DILocation(line: 4332, column: 104, scope: !9230)
!9230 = !DILexicalBlockFile(scope: !1594, file: !352, discriminator: 4)
!9231 = !DILocation(line: 4332, column: 114, scope: !1594)
!9232 = !DILocation(line: 4332, column: 144, scope: !1594)
!9233 = !DILocation(line: 4332, column: 170, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !1594, file: !352, line: 4332, column: 167)
!9235 = !DILocation(line: 4332, column: 187, scope: !9234)
!9236 = !DILocation(line: 4332, column: 167, scope: !9234)
!9237 = !DILocation(line: 4332, column: 197, scope: !9234)
!9238 = !DILocation(line: 4332, column: 167, scope: !1594)
!9239 = !DILocation(line: 4332, column: 167, scope: !9240)
!9240 = !DILexicalBlockFile(scope: !1594, file: !352, discriminator: 5)
!9241 = !DILocation(line: 4332, column: 228, scope: !9242)
!9242 = !DILexicalBlockFile(scope: !9234, file: !352, discriminator: 6)
!9243 = !DILocation(line: 4332, column: 246, scope: !9234)
!9244 = !DILocation(line: 4332, column: 256, scope: !9234)
!9245 = !DILocation(line: 4332, column: 281, scope: !9234)
!9246 = !DILocation(line: 4332, column: 212, scope: !9234)
!9247 = !DILocation(line: 4332, column: 300, scope: !9248)
!9248 = !DILexicalBlockFile(scope: !1595, file: !352, discriminator: 7)
!9249 = !DILocation(line: 4332, column: 300, scope: !1594)
!9250 = !DILocation(line: 4332, column: 300, scope: !9251)
!9251 = !DILexicalBlockFile(scope: !1594, file: !352, discriminator: 8)
!9252 = !DILocation(line: 4332, column: 300, scope: !9253)
!9253 = !DILexicalBlockFile(scope: !1594, file: !352, discriminator: 9)
!9254 = !DILocation(line: 4332, column: 313, scope: !9214)
!9255 = !DILocation(line: 4332, column: 313, scope: !1592)
!9256 = !DILocation(line: 4333, column: 5, scope: !1581)
!9257 = !DILocation(line: 4333, column: 10, scope: !9258)
!9258 = !DILexicalBlockFile(scope: !1597, file: !352, discriminator: 1)
!9259 = !DILocation(line: 4333, column: 20, scope: !1597)
!9260 = !DILocation(line: 4333, column: 51, scope: !1597)
!9261 = !DILocation(line: 4333, column: 55, scope: !1597)
!9262 = !{!9182, !2680, i64 48}
!9263 = !DILocation(line: 4333, column: 71, scope: !1600)
!9264 = !DILocation(line: 4333, column: 87, scope: !1600)
!9265 = !DILocation(line: 4333, column: 71, scope: !1597)
!9266 = !DILocation(line: 4333, column: 102, scope: !9267)
!9267 = !DILexicalBlockFile(scope: !1600, file: !352, discriminator: 2)
!9268 = !DILocation(line: 4333, column: 107, scope: !9269)
!9269 = !DILexicalBlockFile(scope: !1599, file: !352, discriminator: 4)
!9270 = !DILocation(line: 4333, column: 117, scope: !1599)
!9271 = !DILocation(line: 4333, column: 147, scope: !1599)
!9272 = !DILocation(line: 4333, column: 173, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !1599, file: !352, line: 4333, column: 170)
!9274 = !DILocation(line: 4333, column: 190, scope: !9273)
!9275 = !DILocation(line: 4333, column: 170, scope: !9273)
!9276 = !DILocation(line: 4333, column: 200, scope: !9273)
!9277 = !DILocation(line: 4333, column: 170, scope: !1599)
!9278 = !DILocation(line: 4333, column: 170, scope: !9279)
!9279 = !DILexicalBlockFile(scope: !1599, file: !352, discriminator: 5)
!9280 = !DILocation(line: 4333, column: 231, scope: !9281)
!9281 = !DILexicalBlockFile(scope: !9273, file: !352, discriminator: 6)
!9282 = !DILocation(line: 4333, column: 249, scope: !9273)
!9283 = !DILocation(line: 4333, column: 259, scope: !9273)
!9284 = !DILocation(line: 4333, column: 284, scope: !9273)
!9285 = !DILocation(line: 4333, column: 215, scope: !9273)
!9286 = !DILocation(line: 4333, column: 303, scope: !9287)
!9287 = !DILexicalBlockFile(scope: !1600, file: !352, discriminator: 7)
!9288 = !DILocation(line: 4333, column: 303, scope: !1599)
!9289 = !DILocation(line: 4333, column: 303, scope: !9290)
!9290 = !DILexicalBlockFile(scope: !1599, file: !352, discriminator: 8)
!9291 = !DILocation(line: 4333, column: 303, scope: !9292)
!9292 = !DILexicalBlockFile(scope: !1599, file: !352, discriminator: 9)
!9293 = !DILocation(line: 4333, column: 316, scope: !9214)
!9294 = !DILocation(line: 4333, column: 316, scope: !1597)
!9295 = !DILocation(line: 4334, column: 19, scope: !1581)
!9296 = !DILocation(line: 4334, column: 7, scope: !1581)
!9297 = !DILocation(line: 4334, column: 25, scope: !1581)
!9298 = !DILocation(line: 4334, column: 35, scope: !1581)
!9299 = !DILocation(line: 4334, column: 43, scope: !1581)
!9300 = !DILocation(line: 4334, column: 5, scope: !1581)
!9301 = !DILocation(line: 4335, column: 1, scope: !1581)
!9302 = !DILocation(line: 4338, column: 40, scope: !1601)
!9303 = !DILocation(line: 4338, column: 54, scope: !1601)
!9304 = !DILocation(line: 4338, column: 67, scope: !1601)
!9305 = !DILocation(line: 4340, column: 5, scope: !1601)
!9306 = !DILocation(line: 4340, column: 14, scope: !9307)
!9307 = !DILexicalBlockFile(scope: !1610, file: !352, discriminator: 1)
!9308 = !DILocation(line: 4340, column: 18, scope: !1610)
!9309 = !DILocation(line: 4340, column: 14, scope: !1610)
!9310 = !DILocation(line: 4340, column: 14, scope: !1611)
!9311 = !DILocation(line: 4340, column: 29, scope: !9312)
!9312 = !DILexicalBlockFile(scope: !1609, file: !352, discriminator: 2)
!9313 = !DILocation(line: 4340, column: 33, scope: !1609)
!9314 = !DILocation(line: 4340, column: 40, scope: !1609)
!9315 = !DILocation(line: 4340, column: 59, scope: !1609)
!9316 = !DILocation(line: 4340, column: 63, scope: !1609)
!9317 = !DILocation(line: 4340, column: 73, scope: !1609)
!9318 = !DILocation(line: 4340, column: 83, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !1609, file: !352, line: 4340, column: 83)
!9320 = !DILocation(line: 4340, column: 83, scope: !1609)
!9321 = !DILocation(line: 4340, column: 96, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9319, file: !352, discriminator: 4)
!9323 = !DILocation(line: 4340, column: 89, scope: !9319)
!9324 = !DILocation(line: 4340, column: 102, scope: !9325)
!9325 = !DILexicalBlockFile(scope: !1610, file: !352, discriminator: 5)
!9326 = !DILocation(line: 4340, column: 102, scope: !9327)
!9327 = !DILexicalBlockFile(scope: !9328, file: !352, discriminator: 7)
!9328 = !DILexicalBlockFile(scope: !1610, file: !352, discriminator: 6)
!9329 = !DILocation(line: 4340, column: 102, scope: !1609)
!9330 = !DILocation(line: 4340, column: 104, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !9332, file: !352, discriminator: 8)
!9332 = !DILexicalBlockFile(scope: !1611, file: !352, discriminator: 3)
!9333 = !DILocation(line: 4341, column: 5, scope: !1601)
!9334 = !DILocation(line: 4341, column: 14, scope: !9335)
!9335 = !DILexicalBlockFile(scope: !1614, file: !352, discriminator: 1)
!9336 = !DILocation(line: 4341, column: 18, scope: !1614)
!9337 = !DILocation(line: 4341, column: 14, scope: !1614)
!9338 = !DILocation(line: 4341, column: 14, scope: !1615)
!9339 = !DILocation(line: 4341, column: 28, scope: !9340)
!9340 = !DILexicalBlockFile(scope: !1613, file: !352, discriminator: 2)
!9341 = !DILocation(line: 4341, column: 32, scope: !1613)
!9342 = !DILocation(line: 4341, column: 39, scope: !1613)
!9343 = !DILocation(line: 4341, column: 58, scope: !1613)
!9344 = !DILocation(line: 4341, column: 62, scope: !1613)
!9345 = !DILocation(line: 4341, column: 71, scope: !1613)
!9346 = !DILocation(line: 4341, column: 81, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !1613, file: !352, line: 4341, column: 81)
!9348 = !DILocation(line: 4341, column: 81, scope: !1613)
!9349 = !DILocation(line: 4341, column: 94, scope: !9350)
!9350 = !DILexicalBlockFile(scope: !9347, file: !352, discriminator: 4)
!9351 = !DILocation(line: 4341, column: 87, scope: !9347)
!9352 = !DILocation(line: 4341, column: 100, scope: !9353)
!9353 = !DILexicalBlockFile(scope: !1614, file: !352, discriminator: 5)
!9354 = !DILocation(line: 4341, column: 100, scope: !9355)
!9355 = !DILexicalBlockFile(scope: !9356, file: !352, discriminator: 7)
!9356 = !DILexicalBlockFile(scope: !1614, file: !352, discriminator: 6)
!9357 = !DILocation(line: 4341, column: 100, scope: !1613)
!9358 = !DILocation(line: 4341, column: 102, scope: !9359)
!9359 = !DILexicalBlockFile(scope: !9360, file: !352, discriminator: 8)
!9360 = !DILexicalBlockFile(scope: !1615, file: !352, discriminator: 3)
!9361 = !DILocation(line: 4342, column: 5, scope: !1601)
!9362 = !DILocation(line: 4342, column: 14, scope: !9363)
!9363 = !DILexicalBlockFile(scope: !1618, file: !352, discriminator: 1)
!9364 = !DILocation(line: 4342, column: 18, scope: !1618)
!9365 = !DILocation(line: 4342, column: 14, scope: !1618)
!9366 = !DILocation(line: 4342, column: 14, scope: !1619)
!9367 = !DILocation(line: 4342, column: 31, scope: !9368)
!9368 = !DILexicalBlockFile(scope: !1617, file: !352, discriminator: 2)
!9369 = !DILocation(line: 4342, column: 35, scope: !1617)
!9370 = !DILocation(line: 4342, column: 42, scope: !1617)
!9371 = !DILocation(line: 4342, column: 61, scope: !1617)
!9372 = !DILocation(line: 4342, column: 65, scope: !1617)
!9373 = !DILocation(line: 4342, column: 77, scope: !1617)
!9374 = !DILocation(line: 4342, column: 87, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !1617, file: !352, line: 4342, column: 87)
!9376 = !DILocation(line: 4342, column: 87, scope: !1617)
!9377 = !DILocation(line: 4342, column: 100, scope: !9378)
!9378 = !DILexicalBlockFile(scope: !9375, file: !352, discriminator: 4)
!9379 = !DILocation(line: 4342, column: 93, scope: !9375)
!9380 = !DILocation(line: 4342, column: 106, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !1618, file: !352, discriminator: 5)
!9382 = !DILocation(line: 4342, column: 106, scope: !9383)
!9383 = !DILexicalBlockFile(scope: !9384, file: !352, discriminator: 7)
!9384 = !DILexicalBlockFile(scope: !1618, file: !352, discriminator: 6)
!9385 = !DILocation(line: 4342, column: 106, scope: !1617)
!9386 = !DILocation(line: 4342, column: 108, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9388, file: !352, discriminator: 8)
!9388 = !DILexicalBlockFile(scope: !1619, file: !352, discriminator: 3)
!9389 = !DILocation(line: 4343, column: 5, scope: !1601)
!9390 = !DILocation(line: 4344, column: 1, scope: !1601)
!9391 = !DILocation(line: 4347, column: 36, scope: !1620)
!9392 = !DILocation(line: 4349, column: 5, scope: !1620)
!9393 = !DILocation(line: 4349, column: 16, scope: !1620)
!9394 = !DILocation(line: 4350, column: 5, scope: !1620)
!9395 = !DILocation(line: 4350, column: 16, scope: !1620)
!9396 = !DILocation(line: 4350, column: 28, scope: !1620)
!9397 = !DILocation(line: 4350, column: 32, scope: !1620)
!9398 = !{!9182, !2677, i64 16}
!9399 = !DILocation(line: 4351, column: 5, scope: !1620)
!9400 = !DILocation(line: 4351, column: 15, scope: !1620)
!9401 = !DILocation(line: 4351, column: 24, scope: !1620)
!9402 = !DILocation(line: 4351, column: 28, scope: !1620)
!9403 = !DILocation(line: 4352, column: 5, scope: !1620)
!9404 = !DILocation(line: 4352, column: 15, scope: !1620)
!9405 = !DILocation(line: 4353, column: 5, scope: !1620)
!9406 = !DILocation(line: 4353, column: 15, scope: !1620)
!9407 = !DILocation(line: 4354, column: 5, scope: !1620)
!9408 = !DILocation(line: 4354, column: 15, scope: !1620)
!9409 = !DILocation(line: 4356, column: 9, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !1620, file: !352, line: 4356, column: 9)
!9411 = !DILocation(line: 4356, column: 19, scope: !9410)
!9412 = !DILocation(line: 4356, column: 9, scope: !1620)
!9413 = !DILocation(line: 4357, column: 9, scope: !9410)
!9414 = !DILocation(line: 4358, column: 9, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !1620, file: !352, line: 4358, column: 9)
!9416 = !DILocation(line: 4358, column: 13, scope: !9415)
!9417 = !{!9182, !2677, i64 24}
!9418 = !DILocation(line: 4358, column: 23, scope: !9415)
!9419 = !DILocation(line: 4358, column: 9, scope: !1620)
!9420 = !DILocation(line: 4359, column: 9, scope: !9415)
!9421 = !DILocation(line: 4360, column: 23, scope: !1643)
!9422 = !DILocation(line: 4360, column: 33, scope: !1643)
!9423 = !DILocation(line: 4360, column: 44, scope: !1643)
!9424 = !DILocation(line: 4360, column: 9, scope: !1620)
!9425 = !DILocation(line: 4361, column: 25, scope: !1642)
!9426 = !DILocation(line: 4361, column: 35, scope: !1642)
!9427 = !DILocation(line: 4361, column: 44, scope: !1642)
!9428 = !DILocation(line: 4362, column: 15, scope: !1641)
!9429 = !DILocation(line: 4362, column: 14, scope: !1641)
!9430 = !DILocation(line: 4362, column: 20, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !9432, file: !352, discriminator: 2)
!9432 = !DILexicalBlockFile(scope: !1640, file: !352, discriminator: 1)
!9433 = !DILocation(line: 4362, column: 24, scope: !1640)
!9434 = !DILocation(line: 4362, column: 22, scope: !1640)
!9435 = !DILocation(line: 4362, column: 9, scope: !1641)
!9436 = !DILocation(line: 4363, column: 61, scope: !1639)
!9437 = !DILocation(line: 4363, column: 38, scope: !1639)
!9438 = !DILocation(line: 4363, column: 42, scope: !1639)
!9439 = !DILocation(line: 4363, column: 20, scope: !1639)
!9440 = !DILocation(line: 4363, column: 53, scope: !1639)
!9441 = !DILocation(line: 4363, column: 19, scope: !1639)
!9442 = !DILocation(line: 4363, column: 16, scope: !1639)
!9443 = !DILocation(line: 4364, column: 17, scope: !1638)
!9444 = !DILocation(line: 4364, column: 20, scope: !1638)
!9445 = !DILocation(line: 4364, column: 17, scope: !1639)
!9446 = !DILocation(line: 4365, column: 33, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !1638, file: !352, line: 4364, column: 35)
!9448 = !DILocation(line: 4365, column: 37, scope: !9447)
!9449 = !DILocation(line: 4365, column: 50, scope: !9447)
!9450 = !DILocation(line: 4365, column: 59, scope: !9447)
!9451 = !DILocation(line: 4366, column: 24, scope: !9447)
!9452 = !DILocation(line: 4366, column: 28, scope: !9447)
!9453 = !DILocation(line: 4366, column: 22, scope: !9447)
!9454 = !DILocation(line: 4367, column: 13, scope: !9447)
!9455 = !DILocation(line: 4368, column: 36, scope: !1637)
!9456 = !DILocation(line: 4368, column: 24, scope: !1637)
!9457 = !DILocation(line: 4368, column: 22, scope: !1637)
!9458 = !DILocation(line: 4369, column: 21, scope: !1636)
!9459 = !DILocation(line: 4369, column: 26, scope: !1636)
!9460 = !DILocation(line: 4369, column: 21, scope: !1637)
!9461 = !DILocation(line: 4370, column: 21, scope: !1635)
!9462 = !DILocation(line: 4370, column: 25, scope: !1635)
!9463 = !DILocation(line: 4370, column: 35, scope: !1635)
!9464 = !DILocation(line: 4371, column: 25, scope: !1634)
!9465 = !DILocation(line: 4371, column: 29, scope: !1634)
!9466 = !DILocation(line: 4371, column: 39, scope: !1634)
!9467 = !DILocation(line: 4371, column: 44, scope: !1634)
!9468 = !DILocation(line: 4371, column: 47, scope: !9469)
!9469 = !DILexicalBlockFile(scope: !1634, file: !352, discriminator: 1)
!9470 = !DILocation(line: 4371, column: 25, scope: !1635)
!9471 = !DILocation(line: 4372, column: 25, scope: !1633)
!9472 = !DILocation(line: 4372, column: 29, scope: !1633)
!9473 = !DILocation(line: 4372, column: 39, scope: !1633)
!9474 = !DILocation(line: 4373, column: 25, scope: !1633)
!9475 = !DILocation(line: 4373, column: 30, scope: !9476)
!9476 = !DILexicalBlockFile(scope: !1632, file: !352, discriminator: 1)
!9477 = !DILocation(line: 4373, column: 40, scope: !1632)
!9478 = !DILocation(line: 4373, column: 70, scope: !1632)
!9479 = !DILocation(line: 4373, column: 87, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !1632, file: !352, line: 4373, column: 84)
!9481 = !DILocation(line: 4373, column: 104, scope: !9480)
!9482 = !DILocation(line: 4373, column: 84, scope: !9480)
!9483 = !DILocation(line: 4373, column: 114, scope: !9480)
!9484 = !DILocation(line: 4373, column: 84, scope: !1632)
!9485 = !DILocation(line: 4373, column: 84, scope: !9486)
!9486 = !DILexicalBlockFile(scope: !1632, file: !352, discriminator: 2)
!9487 = !DILocation(line: 4373, column: 145, scope: !9488)
!9488 = !DILexicalBlockFile(scope: !9480, file: !352, discriminator: 3)
!9489 = !DILocation(line: 4373, column: 163, scope: !9480)
!9490 = !DILocation(line: 4373, column: 173, scope: !9480)
!9491 = !DILocation(line: 4373, column: 198, scope: !9480)
!9492 = !DILocation(line: 4373, column: 129, scope: !9480)
!9493 = !DILocation(line: 4373, column: 217, scope: !9494)
!9494 = !DILexicalBlockFile(scope: !1633, file: !352, discriminator: 4)
!9495 = !DILocation(line: 4373, column: 217, scope: !1632)
!9496 = !DILocation(line: 4373, column: 217, scope: !9497)
!9497 = !DILexicalBlockFile(scope: !1632, file: !352, discriminator: 5)
!9498 = !DILocation(line: 4374, column: 25, scope: !1633)
!9499 = !DILocation(line: 4376, column: 41, scope: !1646)
!9500 = !DILocation(line: 4376, column: 45, scope: !1646)
!9501 = !DILocation(line: 4376, column: 58, scope: !1646)
!9502 = !DILocation(line: 4376, column: 67, scope: !1646)
!9503 = !DILocation(line: 4377, column: 32, scope: !1646)
!9504 = !DILocation(line: 4377, column: 36, scope: !1646)
!9505 = !DILocation(line: 4377, column: 30, scope: !1646)
!9506 = !DILocation(line: 4378, column: 68, scope: !1646)
!9507 = !DILocation(line: 4378, column: 45, scope: !1646)
!9508 = !DILocation(line: 4378, column: 49, scope: !1646)
!9509 = !DILocation(line: 4378, column: 27, scope: !1646)
!9510 = !DILocation(line: 4378, column: 60, scope: !1646)
!9511 = !DILocation(line: 4378, column: 26, scope: !1646)
!9512 = !DILocation(line: 4378, column: 71, scope: !1646)
!9513 = !DILocation(line: 4379, column: 25, scope: !1646)
!9514 = !DILocation(line: 4379, column: 30, scope: !9515)
!9515 = !DILexicalBlockFile(scope: !1645, file: !352, discriminator: 1)
!9516 = !DILocation(line: 4379, column: 40, scope: !1645)
!9517 = !DILocation(line: 4379, column: 70, scope: !1645)
!9518 = !DILocation(line: 4379, column: 83, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !1645, file: !352, line: 4379, column: 80)
!9520 = !DILocation(line: 4379, column: 100, scope: !9519)
!9521 = !DILocation(line: 4379, column: 80, scope: !9519)
!9522 = !DILocation(line: 4379, column: 110, scope: !9519)
!9523 = !DILocation(line: 4379, column: 80, scope: !1645)
!9524 = !DILocation(line: 4379, column: 80, scope: !9525)
!9525 = !DILexicalBlockFile(scope: !1645, file: !352, discriminator: 2)
!9526 = !DILocation(line: 4379, column: 141, scope: !9527)
!9527 = !DILexicalBlockFile(scope: !9519, file: !352, discriminator: 3)
!9528 = !DILocation(line: 4379, column: 159, scope: !9519)
!9529 = !DILocation(line: 4379, column: 169, scope: !9519)
!9530 = !DILocation(line: 4379, column: 194, scope: !9519)
!9531 = !DILocation(line: 4379, column: 125, scope: !9519)
!9532 = !DILocation(line: 4379, column: 213, scope: !9533)
!9533 = !DILexicalBlockFile(scope: !1646, file: !352, discriminator: 4)
!9534 = !DILocation(line: 4379, column: 213, scope: !1645)
!9535 = !DILocation(line: 4379, column: 213, scope: !9536)
!9536 = !DILexicalBlockFile(scope: !1645, file: !352, discriminator: 5)
!9537 = !DILocation(line: 4381, column: 17, scope: !1635)
!9538 = !DILocation(line: 4383, column: 61, scope: !1639)
!9539 = !DILocation(line: 4383, column: 43, scope: !1639)
!9540 = !DILocation(line: 4383, column: 25, scope: !1639)
!9541 = !DILocation(line: 4383, column: 53, scope: !1639)
!9542 = !DILocation(line: 4383, column: 24, scope: !1639)
!9543 = !DILocation(line: 4383, column: 21, scope: !1639)
!9544 = !DILocation(line: 4384, column: 56, scope: !1639)
!9545 = !DILocation(line: 4384, column: 51, scope: !1639)
!9546 = !DILocation(line: 4384, column: 33, scope: !1639)
!9547 = !DILocation(line: 4384, column: 15, scope: !1639)
!9548 = !DILocation(line: 4384, column: 43, scope: !1639)
!9549 = !DILocation(line: 4384, column: 14, scope: !1639)
!9550 = !DILocation(line: 4384, column: 54, scope: !1639)
!9551 = !DILocation(line: 4385, column: 13, scope: !1639)
!9552 = !DILocation(line: 4385, column: 18, scope: !9553)
!9553 = !DILexicalBlockFile(scope: !1648, file: !352, discriminator: 1)
!9554 = !DILocation(line: 4385, column: 28, scope: !1648)
!9555 = !DILocation(line: 4385, column: 58, scope: !1648)
!9556 = !DILocation(line: 4385, column: 76, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !1648, file: !352, line: 4385, column: 73)
!9558 = !DILocation(line: 4385, column: 93, scope: !9557)
!9559 = !DILocation(line: 4385, column: 73, scope: !9557)
!9560 = !DILocation(line: 4385, column: 103, scope: !9557)
!9561 = !DILocation(line: 4385, column: 73, scope: !1648)
!9562 = !DILocation(line: 4385, column: 73, scope: !9563)
!9563 = !DILexicalBlockFile(scope: !1648, file: !352, discriminator: 2)
!9564 = !DILocation(line: 4385, column: 134, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9557, file: !352, discriminator: 3)
!9566 = !DILocation(line: 4385, column: 152, scope: !9557)
!9567 = !DILocation(line: 4385, column: 162, scope: !9557)
!9568 = !DILocation(line: 4385, column: 187, scope: !9557)
!9569 = !DILocation(line: 4385, column: 118, scope: !9557)
!9570 = !DILocation(line: 4385, column: 206, scope: !9571)
!9571 = !DILexicalBlockFile(scope: !1639, file: !352, discriminator: 4)
!9572 = !DILocation(line: 4385, column: 206, scope: !1648)
!9573 = !DILocation(line: 4385, column: 206, scope: !9574)
!9574 = !DILexicalBlockFile(scope: !1648, file: !352, discriminator: 5)
!9575 = !DILocation(line: 4386, column: 9, scope: !1639)
!9576 = !DILocation(line: 4362, column: 37, scope: !1640)
!9577 = !DILocation(line: 4362, column: 9, scope: !1640)
!9578 = !DILocation(line: 4387, column: 5, scope: !1642)
!9579 = !DILocation(line: 4388, column: 30, scope: !1660)
!9580 = !DILocation(line: 4388, column: 18, scope: !1660)
!9581 = !DILocation(line: 4388, column: 16, scope: !1660)
!9582 = !DILocation(line: 4389, column: 13, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !1660, file: !352, line: 4389, column: 13)
!9584 = !DILocation(line: 4389, column: 20, scope: !9583)
!9585 = !DILocation(line: 4389, column: 13, scope: !1660)
!9586 = !DILocation(line: 4390, column: 13, scope: !9583)
!9587 = !DILocation(line: 4391, column: 15, scope: !1659)
!9588 = !DILocation(line: 4391, column: 14, scope: !1659)
!9589 = !DILocation(line: 4391, column: 20, scope: !9590)
!9590 = !DILexicalBlockFile(scope: !9591, file: !352, discriminator: 2)
!9591 = !DILexicalBlockFile(scope: !1658, file: !352, discriminator: 1)
!9592 = !DILocation(line: 4391, column: 24, scope: !1658)
!9593 = !DILocation(line: 4391, column: 22, scope: !1658)
!9594 = !DILocation(line: 4391, column: 9, scope: !1659)
!9595 = !DILocation(line: 4392, column: 61, scope: !1657)
!9596 = !DILocation(line: 4392, column: 38, scope: !1657)
!9597 = !DILocation(line: 4392, column: 42, scope: !1657)
!9598 = !DILocation(line: 4392, column: 20, scope: !1657)
!9599 = !DILocation(line: 4392, column: 53, scope: !1657)
!9600 = !DILocation(line: 4392, column: 19, scope: !1657)
!9601 = !DILocation(line: 4392, column: 16, scope: !1657)
!9602 = !DILocation(line: 4393, column: 17, scope: !1656)
!9603 = !DILocation(line: 4393, column: 20, scope: !1656)
!9604 = !DILocation(line: 4393, column: 17, scope: !1657)
!9605 = !DILocation(line: 4394, column: 33, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !1656, file: !352, line: 4393, column: 35)
!9607 = !DILocation(line: 4394, column: 37, scope: !9606)
!9608 = !DILocation(line: 4394, column: 50, scope: !9606)
!9609 = !DILocation(line: 4394, column: 59, scope: !9606)
!9610 = !DILocation(line: 4395, column: 24, scope: !9606)
!9611 = !DILocation(line: 4395, column: 28, scope: !9606)
!9612 = !DILocation(line: 4395, column: 22, scope: !9606)
!9613 = !DILocation(line: 4396, column: 13, scope: !9606)
!9614 = !DILocation(line: 4397, column: 36, scope: !1655)
!9615 = !DILocation(line: 4397, column: 24, scope: !1655)
!9616 = !DILocation(line: 4397, column: 22, scope: !1655)
!9617 = !DILocation(line: 4398, column: 21, scope: !1654)
!9618 = !DILocation(line: 4398, column: 26, scope: !1654)
!9619 = !DILocation(line: 4398, column: 21, scope: !1655)
!9620 = !DILocation(line: 4399, column: 21, scope: !1653)
!9621 = !DILocation(line: 4399, column: 25, scope: !1653)
!9622 = !DILocation(line: 4399, column: 35, scope: !1653)
!9623 = !DILocation(line: 4400, column: 25, scope: !1652)
!9624 = !DILocation(line: 4400, column: 29, scope: !1652)
!9625 = !DILocation(line: 4400, column: 39, scope: !1652)
!9626 = !DILocation(line: 4400, column: 44, scope: !1652)
!9627 = !DILocation(line: 4400, column: 47, scope: !9628)
!9628 = !DILexicalBlockFile(scope: !1652, file: !352, discriminator: 1)
!9629 = !DILocation(line: 4400, column: 25, scope: !1653)
!9630 = !DILocation(line: 4401, column: 25, scope: !1651)
!9631 = !DILocation(line: 4401, column: 29, scope: !1651)
!9632 = !DILocation(line: 4401, column: 39, scope: !1651)
!9633 = !DILocation(line: 4402, column: 25, scope: !1651)
!9634 = !DILocation(line: 4402, column: 30, scope: !9635)
!9635 = !DILexicalBlockFile(scope: !1650, file: !352, discriminator: 1)
!9636 = !DILocation(line: 4402, column: 40, scope: !1650)
!9637 = !DILocation(line: 4402, column: 70, scope: !1650)
!9638 = !DILocation(line: 4402, column: 87, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !1650, file: !352, line: 4402, column: 84)
!9640 = !DILocation(line: 4402, column: 104, scope: !9639)
!9641 = !DILocation(line: 4402, column: 84, scope: !9639)
!9642 = !DILocation(line: 4402, column: 114, scope: !9639)
!9643 = !DILocation(line: 4402, column: 84, scope: !1650)
!9644 = !DILocation(line: 4402, column: 84, scope: !9645)
!9645 = !DILexicalBlockFile(scope: !1650, file: !352, discriminator: 2)
!9646 = !DILocation(line: 4402, column: 145, scope: !9647)
!9647 = !DILexicalBlockFile(scope: !9639, file: !352, discriminator: 3)
!9648 = !DILocation(line: 4402, column: 163, scope: !9639)
!9649 = !DILocation(line: 4402, column: 173, scope: !9639)
!9650 = !DILocation(line: 4402, column: 198, scope: !9639)
!9651 = !DILocation(line: 4402, column: 129, scope: !9639)
!9652 = !DILocation(line: 4402, column: 217, scope: !9653)
!9653 = !DILexicalBlockFile(scope: !1651, file: !352, discriminator: 4)
!9654 = !DILocation(line: 4402, column: 217, scope: !1650)
!9655 = !DILocation(line: 4402, column: 217, scope: !9656)
!9656 = !DILexicalBlockFile(scope: !1650, file: !352, discriminator: 5)
!9657 = !DILocation(line: 4403, column: 25, scope: !1651)
!9658 = !DILocation(line: 4405, column: 41, scope: !1663)
!9659 = !DILocation(line: 4405, column: 45, scope: !1663)
!9660 = !DILocation(line: 4405, column: 58, scope: !1663)
!9661 = !DILocation(line: 4405, column: 67, scope: !1663)
!9662 = !DILocation(line: 4406, column: 32, scope: !1663)
!9663 = !DILocation(line: 4406, column: 36, scope: !1663)
!9664 = !DILocation(line: 4406, column: 30, scope: !1663)
!9665 = !DILocation(line: 4407, column: 68, scope: !1663)
!9666 = !DILocation(line: 4407, column: 45, scope: !1663)
!9667 = !DILocation(line: 4407, column: 49, scope: !1663)
!9668 = !DILocation(line: 4407, column: 27, scope: !1663)
!9669 = !DILocation(line: 4407, column: 60, scope: !1663)
!9670 = !DILocation(line: 4407, column: 26, scope: !1663)
!9671 = !DILocation(line: 4407, column: 71, scope: !1663)
!9672 = !DILocation(line: 4408, column: 25, scope: !1663)
!9673 = !DILocation(line: 4408, column: 30, scope: !9674)
!9674 = !DILexicalBlockFile(scope: !1662, file: !352, discriminator: 1)
!9675 = !DILocation(line: 4408, column: 40, scope: !1662)
!9676 = !DILocation(line: 4408, column: 70, scope: !1662)
!9677 = !DILocation(line: 4408, column: 83, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !1662, file: !352, line: 4408, column: 80)
!9679 = !DILocation(line: 4408, column: 100, scope: !9678)
!9680 = !DILocation(line: 4408, column: 80, scope: !9678)
!9681 = !DILocation(line: 4408, column: 110, scope: !9678)
!9682 = !DILocation(line: 4408, column: 80, scope: !1662)
!9683 = !DILocation(line: 4408, column: 80, scope: !9684)
!9684 = !DILexicalBlockFile(scope: !1662, file: !352, discriminator: 2)
!9685 = !DILocation(line: 4408, column: 141, scope: !9686)
!9686 = !DILexicalBlockFile(scope: !9678, file: !352, discriminator: 3)
!9687 = !DILocation(line: 4408, column: 159, scope: !9678)
!9688 = !DILocation(line: 4408, column: 169, scope: !9678)
!9689 = !DILocation(line: 4408, column: 194, scope: !9678)
!9690 = !DILocation(line: 4408, column: 125, scope: !9678)
!9691 = !DILocation(line: 4408, column: 213, scope: !9692)
!9692 = !DILexicalBlockFile(scope: !1663, file: !352, discriminator: 4)
!9693 = !DILocation(line: 4408, column: 213, scope: !1662)
!9694 = !DILocation(line: 4408, column: 213, scope: !9695)
!9695 = !DILexicalBlockFile(scope: !1662, file: !352, discriminator: 5)
!9696 = !DILocation(line: 4410, column: 17, scope: !1653)
!9697 = !DILocation(line: 4412, column: 56, scope: !1657)
!9698 = !DILocation(line: 4412, column: 51, scope: !1657)
!9699 = !DILocation(line: 4412, column: 33, scope: !1657)
!9700 = !DILocation(line: 4412, column: 15, scope: !1657)
!9701 = !DILocation(line: 4412, column: 43, scope: !1657)
!9702 = !DILocation(line: 4412, column: 14, scope: !1657)
!9703 = !DILocation(line: 4412, column: 54, scope: !1657)
!9704 = !DILocation(line: 4413, column: 9, scope: !1657)
!9705 = !DILocation(line: 4391, column: 37, scope: !1658)
!9706 = !DILocation(line: 4391, column: 9, scope: !1658)
!9707 = !DILocation(line: 4415, column: 12, scope: !1620)
!9708 = !DILocation(line: 4415, column: 5, scope: !1620)
!9709 = !DILocation(line: 4416, column: 1, scope: !1620)
!9710 = !DILocation(line: 4261, column: 31, scope: !1691)
!9711 = !DILocation(line: 4261, column: 47, scope: !1691)
!9712 = !DILocation(line: 4261, column: 63, scope: !1691)
!9713 = !DILocation(line: 4263, column: 5, scope: !1691)
!9714 = !DILocation(line: 4263, column: 23, scope: !1691)
!9715 = !DILocation(line: 4264, column: 5, scope: !1691)
!9716 = !DILocation(line: 4264, column: 16, scope: !1691)
!9717 = !DILocation(line: 4265, column: 5, scope: !1691)
!9718 = !DILocation(line: 4265, column: 15, scope: !1691)
!9719 = !DILocation(line: 4266, column: 5, scope: !1691)
!9720 = !DILocation(line: 4266, column: 15, scope: !1691)
!9721 = !DILocation(line: 4267, column: 5, scope: !1691)
!9722 = !DILocation(line: 4267, column: 15, scope: !1691)
!9723 = !DILocation(line: 4268, column: 5, scope: !1691)
!9724 = !DILocation(line: 4268, column: 16, scope: !1691)
!9725 = !DILocation(line: 4268, column: 44, scope: !1691)
!9726 = !DILocation(line: 4268, column: 28, scope: !1691)
!9727 = !DILocation(line: 4270, column: 9, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !1691, file: !352, line: 4270, column: 9)
!9729 = !DILocation(line: 4270, column: 14, scope: !9728)
!9730 = !DILocation(line: 4270, column: 28, scope: !9728)
!9731 = !DILocation(line: 4270, column: 46, scope: !9732)
!9732 = !DILexicalBlockFile(scope: !9728, file: !352, discriminator: 1)
!9733 = !DILocation(line: 4270, column: 54, scope: !9728)
!9734 = !DILocation(line: 4270, column: 63, scope: !9728)
!9735 = !DILocation(line: 4270, column: 80, scope: !9728)
!9736 = !DILocation(line: 4270, column: 95, scope: !9737)
!9737 = !DILexicalBlockFile(scope: !9728, file: !352, discriminator: 2)
!9738 = !DILocation(line: 4270, column: 83, scope: !9728)
!9739 = !DILocation(line: 4270, column: 101, scope: !9728)
!9740 = !DILocation(line: 4270, column: 9, scope: !1691)
!9741 = !DILocation(line: 4271, column: 42, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9728, file: !352, line: 4270, column: 106)
!9743 = !DILocation(line: 4271, column: 21, scope: !9742)
!9744 = !DILocation(line: 4271, column: 19, scope: !9742)
!9745 = !DILocation(line: 4272, column: 13, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9742, file: !352, line: 4272, column: 13)
!9747 = !DILocation(line: 4272, column: 23, scope: !9746)
!9748 = !DILocation(line: 4272, column: 37, scope: !9746)
!9749 = !DILocation(line: 4272, column: 52, scope: !9750)
!9750 = !DILexicalBlockFile(scope: !9746, file: !352, discriminator: 1)
!9751 = !DILocation(line: 4272, column: 40, scope: !9746)
!9752 = !DILocation(line: 4272, column: 58, scope: !9746)
!9753 = !DILocation(line: 4272, column: 13, scope: !9742)
!9754 = !DILocation(line: 4273, column: 29, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9746, file: !352, line: 4272, column: 63)
!9756 = !DILocation(line: 4273, column: 13, scope: !9755)
!9757 = !DILocation(line: 4275, column: 13, scope: !9755)
!9758 = !DILocation(line: 4277, column: 5, scope: !9742)
!9759 = !DILocation(line: 4283, column: 27, scope: !1691)
!9760 = !DILocation(line: 4283, column: 15, scope: !1691)
!9761 = !DILocation(line: 4283, column: 13, scope: !1691)
!9762 = !DILocation(line: 4284, column: 9, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !1691, file: !352, line: 4284, column: 9)
!9764 = !DILocation(line: 4284, column: 17, scope: !9763)
!9765 = !DILocation(line: 4284, column: 9, scope: !1691)
!9766 = !DILocation(line: 4285, column: 9, scope: !9763)
!9767 = !DILocation(line: 4286, column: 11, scope: !1705)
!9768 = !DILocation(line: 4286, column: 10, scope: !1705)
!9769 = !DILocation(line: 4286, column: 15, scope: !9770)
!9770 = !DILexicalBlockFile(scope: !9771, file: !352, discriminator: 2)
!9771 = !DILexicalBlockFile(scope: !1704, file: !352, discriminator: 1)
!9772 = !DILocation(line: 4286, column: 19, scope: !1704)
!9773 = !DILocation(line: 4286, column: 17, scope: !1704)
!9774 = !DILocation(line: 4286, column: 5, scope: !1705)
!9775 = !DILocation(line: 4287, column: 9, scope: !1703)
!9776 = !DILocation(line: 4287, column: 19, scope: !1703)
!9777 = !DILocation(line: 4287, column: 62, scope: !1703)
!9778 = !DILocation(line: 4287, column: 46, scope: !1703)
!9779 = !DILocation(line: 4287, column: 28, scope: !1703)
!9780 = !DILocation(line: 4287, column: 54, scope: !1703)
!9781 = !DILocation(line: 4287, column: 27, scope: !1703)
!9782 = !DILocation(line: 4288, column: 9, scope: !1703)
!9783 = !DILocation(line: 4288, column: 19, scope: !1703)
!9784 = !DILocation(line: 4288, column: 41, scope: !1703)
!9785 = !DILocation(line: 4288, column: 24, scope: !1703)
!9786 = !DILocation(line: 4289, column: 13, scope: !1710)
!9787 = !DILocation(line: 4289, column: 16, scope: !1710)
!9788 = !DILocation(line: 4289, column: 13, scope: !1703)
!9789 = !DILocation(line: 4290, column: 40, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !1709, file: !352, line: 4290, column: 17)
!9791 = !DILocation(line: 4290, column: 17, scope: !9790)
!9792 = !DILocation(line: 4290, column: 17, scope: !1709)
!9793 = !DILocation(line: 4291, column: 30, scope: !9790)
!9794 = !DILocation(line: 4293, column: 21, scope: !9790)
!9795 = !DILocation(line: 4293, column: 22, scope: !9790)
!9796 = !DILocation(line: 4291, column: 17, scope: !9790)
!9797 = !DILocation(line: 4294, column: 13, scope: !1709)
!9798 = !DILocation(line: 4294, column: 18, scope: !9799)
!9799 = !DILexicalBlockFile(scope: !1708, file: !352, discriminator: 1)
!9800 = !DILocation(line: 4294, column: 28, scope: !1708)
!9801 = !DILocation(line: 4294, column: 58, scope: !1708)
!9802 = !DILocation(line: 4294, column: 76, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !1708, file: !352, line: 4294, column: 73)
!9804 = !DILocation(line: 4294, column: 93, scope: !9803)
!9805 = !DILocation(line: 4294, column: 73, scope: !9803)
!9806 = !DILocation(line: 4294, column: 103, scope: !9803)
!9807 = !DILocation(line: 4294, column: 73, scope: !1708)
!9808 = !DILocation(line: 4294, column: 73, scope: !9809)
!9809 = !DILexicalBlockFile(scope: !1708, file: !352, discriminator: 2)
!9810 = !DILocation(line: 4294, column: 134, scope: !9811)
!9811 = !DILexicalBlockFile(scope: !9803, file: !352, discriminator: 3)
!9812 = !DILocation(line: 4294, column: 152, scope: !9803)
!9813 = !DILocation(line: 4294, column: 162, scope: !9803)
!9814 = !DILocation(line: 4294, column: 187, scope: !9803)
!9815 = !DILocation(line: 4294, column: 118, scope: !9803)
!9816 = !DILocation(line: 4294, column: 206, scope: !9817)
!9817 = !DILexicalBlockFile(scope: !1709, file: !352, discriminator: 4)
!9818 = !DILocation(line: 4294, column: 206, scope: !1708)
!9819 = !DILocation(line: 4294, column: 206, scope: !9820)
!9820 = !DILexicalBlockFile(scope: !1708, file: !352, discriminator: 5)
!9821 = !DILocation(line: 4295, column: 13, scope: !1709)
!9822 = !DILocation(line: 4297, column: 53, scope: !1703)
!9823 = !DILocation(line: 4297, column: 48, scope: !1703)
!9824 = !DILocation(line: 4297, column: 29, scope: !1703)
!9825 = !DILocation(line: 4297, column: 11, scope: !1703)
!9826 = !DILocation(line: 4297, column: 40, scope: !1703)
!9827 = !DILocation(line: 4297, column: 10, scope: !1703)
!9828 = !DILocation(line: 4297, column: 51, scope: !1703)
!9829 = !DILocation(line: 4298, column: 5, scope: !1704)
!9830 = !DILocation(line: 4298, column: 5, scope: !9771)
!9831 = !DILocation(line: 4298, column: 5, scope: !1703)
!9832 = !DILocation(line: 4286, column: 30, scope: !1704)
!9833 = !DILocation(line: 4286, column: 5, scope: !1704)
!9834 = !DILocation(line: 4301, column: 26, scope: !1691)
!9835 = !DILocation(line: 4301, column: 14, scope: !1691)
!9836 = !DILocation(line: 4301, column: 12, scope: !1691)
!9837 = !DILocation(line: 4302, column: 9, scope: !1714)
!9838 = !DILocation(line: 4302, column: 16, scope: !1714)
!9839 = !DILocation(line: 4302, column: 9, scope: !1691)
!9840 = !DILocation(line: 4303, column: 9, scope: !1713)
!9841 = !DILocation(line: 4303, column: 14, scope: !9842)
!9842 = !DILexicalBlockFile(scope: !1712, file: !352, discriminator: 1)
!9843 = !DILocation(line: 4303, column: 24, scope: !1712)
!9844 = !DILocation(line: 4303, column: 54, scope: !1712)
!9845 = !DILocation(line: 4303, column: 72, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !1712, file: !352, line: 4303, column: 69)
!9847 = !DILocation(line: 4303, column: 89, scope: !9846)
!9848 = !DILocation(line: 4303, column: 69, scope: !9846)
!9849 = !DILocation(line: 4303, column: 99, scope: !9846)
!9850 = !DILocation(line: 4303, column: 69, scope: !1712)
!9851 = !DILocation(line: 4303, column: 69, scope: !9852)
!9852 = !DILexicalBlockFile(scope: !1712, file: !352, discriminator: 2)
!9853 = !DILocation(line: 4303, column: 130, scope: !9854)
!9854 = !DILexicalBlockFile(scope: !9846, file: !352, discriminator: 3)
!9855 = !DILocation(line: 4303, column: 148, scope: !9846)
!9856 = !DILocation(line: 4303, column: 158, scope: !9846)
!9857 = !DILocation(line: 4303, column: 183, scope: !9846)
!9858 = !DILocation(line: 4303, column: 114, scope: !9846)
!9859 = !DILocation(line: 4303, column: 202, scope: !9860)
!9860 = !DILexicalBlockFile(scope: !1713, file: !352, discriminator: 4)
!9861 = !DILocation(line: 4303, column: 202, scope: !1712)
!9862 = !DILocation(line: 4303, column: 202, scope: !9863)
!9863 = !DILexicalBlockFile(scope: !1712, file: !352, discriminator: 5)
!9864 = !DILocation(line: 4304, column: 9, scope: !1713)
!9865 = !DILocation(line: 4306, column: 11, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !1691, file: !352, line: 4306, column: 5)
!9867 = !DILocation(line: 4306, column: 10, scope: !9866)
!9868 = !DILocation(line: 4306, column: 16, scope: !9869)
!9869 = !DILexicalBlockFile(scope: !9870, file: !352, discriminator: 2)
!9870 = !DILexicalBlockFile(scope: !9871, file: !352, discriminator: 1)
!9871 = distinct !DILexicalBlock(scope: !9866, file: !352, line: 4306, column: 5)
!9872 = !DILocation(line: 4306, column: 20, scope: !9871)
!9873 = !DILocation(line: 4306, column: 18, scope: !9871)
!9874 = !DILocation(line: 4306, column: 5, scope: !9866)
!9875 = !DILocation(line: 4307, column: 55, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9871, file: !352, line: 4306, column: 37)
!9877 = !DILocation(line: 4308, column: 47, scope: !9876)
!9878 = !DILocation(line: 4308, column: 29, scope: !9876)
!9879 = !DILocation(line: 4308, column: 11, scope: !9876)
!9880 = !DILocation(line: 4308, column: 39, scope: !9876)
!9881 = !DILocation(line: 4308, column: 10, scope: !9876)
!9882 = !DILocation(line: 4308, column: 50, scope: !9876)
!9883 = !DILocation(line: 4309, column: 5, scope: !9876)
!9884 = !DILocation(line: 4306, column: 33, scope: !9871)
!9885 = !DILocation(line: 4306, column: 5, scope: !9871)
!9886 = !DILocation(line: 4312, column: 30, scope: !1691)
!9887 = !DILocation(line: 4312, column: 36, scope: !1691)
!9888 = !DILocation(line: 4312, column: 45, scope: !1691)
!9889 = !DILocation(line: 4312, column: 10, scope: !1691)
!9890 = !DILocation(line: 4312, column: 8, scope: !1691)
!9891 = !DILocation(line: 4313, column: 9, scope: !1718)
!9892 = !DILocation(line: 4313, column: 12, scope: !1718)
!9893 = !DILocation(line: 4313, column: 9, scope: !1691)
!9894 = !DILocation(line: 4314, column: 9, scope: !1717)
!9895 = !DILocation(line: 4314, column: 14, scope: !9896)
!9896 = !DILexicalBlockFile(scope: !1716, file: !352, discriminator: 1)
!9897 = !DILocation(line: 4314, column: 24, scope: !1716)
!9898 = !DILocation(line: 4314, column: 54, scope: !1716)
!9899 = !DILocation(line: 4314, column: 72, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !1716, file: !352, line: 4314, column: 69)
!9901 = !DILocation(line: 4314, column: 89, scope: !9900)
!9902 = !DILocation(line: 4314, column: 69, scope: !9900)
!9903 = !DILocation(line: 4314, column: 99, scope: !9900)
!9904 = !DILocation(line: 4314, column: 69, scope: !1716)
!9905 = !DILocation(line: 4314, column: 69, scope: !9906)
!9906 = !DILexicalBlockFile(scope: !1716, file: !352, discriminator: 2)
!9907 = !DILocation(line: 4314, column: 130, scope: !9908)
!9908 = !DILexicalBlockFile(scope: !9900, file: !352, discriminator: 3)
!9909 = !DILocation(line: 4314, column: 148, scope: !9900)
!9910 = !DILocation(line: 4314, column: 158, scope: !9900)
!9911 = !DILocation(line: 4314, column: 183, scope: !9900)
!9912 = !DILocation(line: 4314, column: 114, scope: !9900)
!9913 = !DILocation(line: 4314, column: 202, scope: !9914)
!9914 = !DILexicalBlockFile(scope: !1717, file: !352, discriminator: 4)
!9915 = !DILocation(line: 4314, column: 202, scope: !1716)
!9916 = !DILocation(line: 4314, column: 202, scope: !9917)
!9917 = !DILexicalBlockFile(scope: !1716, file: !352, discriminator: 5)
!9918 = !DILocation(line: 4315, column: 9, scope: !1717)
!9919 = !DILocation(line: 4315, column: 14, scope: !9920)
!9920 = !DILexicalBlockFile(scope: !1720, file: !352, discriminator: 1)
!9921 = !DILocation(line: 4315, column: 24, scope: !1720)
!9922 = !DILocation(line: 4315, column: 54, scope: !1720)
!9923 = !DILocation(line: 4315, column: 71, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !1720, file: !352, line: 4315, column: 68)
!9925 = !DILocation(line: 4315, column: 88, scope: !9924)
!9926 = !DILocation(line: 4315, column: 68, scope: !9924)
!9927 = !DILocation(line: 4315, column: 98, scope: !9924)
!9928 = !DILocation(line: 4315, column: 68, scope: !1720)
!9929 = !DILocation(line: 4315, column: 68, scope: !9930)
!9930 = !DILexicalBlockFile(scope: !1720, file: !352, discriminator: 2)
!9931 = !DILocation(line: 4315, column: 129, scope: !9932)
!9932 = !DILexicalBlockFile(scope: !9924, file: !352, discriminator: 3)
!9933 = !DILocation(line: 4315, column: 147, scope: !9924)
!9934 = !DILocation(line: 4315, column: 157, scope: !9924)
!9935 = !DILocation(line: 4315, column: 182, scope: !9924)
!9936 = !DILocation(line: 4315, column: 113, scope: !9924)
!9937 = !DILocation(line: 4315, column: 201, scope: !9914)
!9938 = !DILocation(line: 4315, column: 201, scope: !1720)
!9939 = !DILocation(line: 4315, column: 201, scope: !9940)
!9940 = !DILexicalBlockFile(scope: !1720, file: !352, discriminator: 5)
!9941 = !DILocation(line: 4316, column: 9, scope: !1717)
!9942 = !DILocation(line: 4318, column: 19, scope: !1691)
!9943 = !DILocation(line: 4318, column: 5, scope: !1691)
!9944 = !DILocation(line: 4318, column: 9, scope: !1691)
!9945 = !DILocation(line: 4318, column: 17, scope: !1691)
!9946 = !DILocation(line: 4319, column: 21, scope: !1691)
!9947 = !DILocation(line: 4319, column: 5, scope: !1691)
!9948 = !DILocation(line: 4319, column: 9, scope: !1691)
!9949 = !DILocation(line: 4319, column: 19, scope: !1691)
!9950 = !DILocation(line: 4320, column: 21, scope: !1691)
!9951 = !DILocation(line: 4320, column: 5, scope: !1691)
!9952 = !DILocation(line: 4320, column: 9, scope: !1691)
!9953 = !DILocation(line: 4320, column: 19, scope: !1691)
!9954 = !DILocation(line: 4321, column: 18, scope: !1691)
!9955 = !DILocation(line: 4321, column: 5, scope: !1691)
!9956 = !DILocation(line: 4321, column: 9, scope: !1691)
!9957 = !DILocation(line: 4321, column: 16, scope: !1691)
!9958 = !DILocation(line: 4322, column: 21, scope: !1691)
!9959 = !DILocation(line: 4322, column: 34, scope: !1691)
!9960 = !DILocation(line: 4322, column: 43, scope: !1691)
!9961 = !DILocation(line: 4323, column: 21, scope: !1691)
!9962 = !DILocation(line: 4323, column: 5, scope: !1691)
!9963 = !DILocation(line: 4323, column: 9, scope: !1691)
!9964 = !DILocation(line: 4323, column: 19, scope: !1691)
!9965 = !DILocation(line: 4324, column: 24, scope: !1691)
!9966 = !DILocation(line: 4324, column: 12, scope: !1691)
!9967 = !DILocation(line: 4324, column: 5, scope: !1691)
!9968 = !DILocation(line: 4325, column: 1, scope: !1691)
!9969 = !DILocation(line: 4419, column: 38, scope: !1664)
!9970 = !DILocation(line: 4425, column: 5, scope: !1664)
!9971 = !DILocation(line: 4425, column: 9, scope: !1664)
!9972 = !DILocation(line: 4426, column: 5, scope: !1664)
!9973 = !DILocation(line: 4426, column: 15, scope: !1664)
!9974 = !DILocation(line: 4426, column: 51, scope: !1664)
!9975 = !DILocation(line: 4426, column: 55, scope: !1664)
!9976 = !DILocation(line: 4426, column: 36, scope: !1664)
!9977 = !DILocation(line: 4426, column: 66, scope: !1664)
!9978 = !DILocation(line: 4426, column: 22, scope: !1664)
!9979 = !DILocation(line: 4427, column: 9, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !1664, file: !352, line: 4427, column: 9)
!9981 = !DILocation(line: 4427, column: 14, scope: !9980)
!9982 = !DILocation(line: 4427, column: 9, scope: !1664)
!9983 = !DILocation(line: 4428, column: 9, scope: !9980)
!9984 = !DILocation(line: 4429, column: 11, scope: !1672)
!9985 = !DILocation(line: 4429, column: 10, scope: !1672)
!9986 = !DILocation(line: 4429, column: 15, scope: !9987)
!9987 = !DILexicalBlockFile(scope: !9988, file: !352, discriminator: 2)
!9988 = !DILexicalBlockFile(scope: !1671, file: !352, discriminator: 1)
!9989 = !DILocation(line: 4429, column: 34, scope: !1671)
!9990 = !DILocation(line: 4429, column: 38, scope: !1671)
!9991 = !DILocation(line: 4429, column: 19, scope: !1671)
!9992 = !DILocation(line: 4429, column: 49, scope: !1671)
!9993 = !DILocation(line: 4429, column: 16, scope: !1671)
!9994 = !DILocation(line: 4429, column: 5, scope: !1672)
!9995 = !DILocation(line: 4430, column: 9, scope: !1670)
!9996 = !DILocation(line: 4430, column: 19, scope: !1670)
!9997 = !DILocation(line: 4430, column: 69, scope: !1670)
!9998 = !DILocation(line: 4430, column: 27, scope: !1670)
!9999 = !DILocation(line: 4430, column: 46, scope: !1670)
!10000 = !DILocation(line: 4430, column: 50, scope: !1670)
!10001 = !DILocation(line: 4430, column: 28, scope: !1670)
!10002 = !DILocation(line: 4430, column: 61, scope: !1670)
!10003 = !DILocation(line: 4431, column: 13, scope: !1678)
!10004 = !DILocation(line: 4431, column: 18, scope: !1678)
!10005 = !DILocation(line: 4431, column: 13, scope: !1670)
!10006 = !DILocation(line: 4432, column: 20, scope: !1677)
!10007 = !DILocation(line: 4432, column: 18, scope: !1677)
!10008 = !DILocation(line: 4433, column: 17, scope: !1676)
!10009 = !DILocation(line: 4433, column: 22, scope: !1676)
!10010 = !DILocation(line: 4433, column: 17, scope: !1677)
!10011 = !DILocation(line: 4434, column: 17, scope: !1675)
!10012 = !DILocation(line: 4434, column: 22, scope: !10013)
!10013 = !DILexicalBlockFile(scope: !1674, file: !352, discriminator: 1)
!10014 = !DILocation(line: 4434, column: 32, scope: !1674)
!10015 = !DILocation(line: 4434, column: 62, scope: !1674)
!10016 = !DILocation(line: 4434, column: 77, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !1674, file: !352, line: 4434, column: 74)
!10018 = !DILocation(line: 4434, column: 94, scope: !10017)
!10019 = !DILocation(line: 4434, column: 74, scope: !10017)
!10020 = !DILocation(line: 4434, column: 104, scope: !10017)
!10021 = !DILocation(line: 4434, column: 74, scope: !1674)
!10022 = !DILocation(line: 4434, column: 74, scope: !10023)
!10023 = !DILexicalBlockFile(scope: !1674, file: !352, discriminator: 2)
!10024 = !DILocation(line: 4434, column: 135, scope: !10025)
!10025 = !DILexicalBlockFile(scope: !10017, file: !352, discriminator: 3)
!10026 = !DILocation(line: 4434, column: 153, scope: !10017)
!10027 = !DILocation(line: 4434, column: 163, scope: !10017)
!10028 = !DILocation(line: 4434, column: 188, scope: !10017)
!10029 = !DILocation(line: 4434, column: 119, scope: !10017)
!10030 = !DILocation(line: 4434, column: 207, scope: !10031)
!10031 = !DILexicalBlockFile(scope: !1675, file: !352, discriminator: 4)
!10032 = !DILocation(line: 4434, column: 207, scope: !1674)
!10033 = !DILocation(line: 4434, column: 207, scope: !10034)
!10034 = !DILexicalBlockFile(scope: !1674, file: !352, discriminator: 5)
!10035 = !DILocation(line: 4435, column: 17, scope: !1675)
!10036 = !DILocation(line: 4437, column: 9, scope: !1677)
!10037 = !DILocation(line: 4438, column: 29, scope: !1678)
!10038 = !DILocation(line: 4438, column: 37, scope: !1678)
!10039 = !DILocation(line: 4438, column: 46, scope: !1678)
!10040 = !DILocation(line: 4439, column: 50, scope: !1670)
!10041 = !DILocation(line: 4439, column: 45, scope: !1670)
!10042 = !DILocation(line: 4439, column: 10, scope: !1670)
!10043 = !DILocation(line: 4439, column: 29, scope: !1670)
!10044 = !DILocation(line: 4439, column: 11, scope: !1670)
!10045 = !DILocation(line: 4439, column: 37, scope: !1670)
!10046 = !DILocation(line: 4439, column: 48, scope: !1670)
!10047 = !DILocation(line: 4440, column: 5, scope: !1671)
!10048 = !DILocation(line: 4440, column: 5, scope: !9988)
!10049 = !DILocation(line: 4440, column: 5, scope: !1670)
!10050 = !DILocation(line: 4429, column: 60, scope: !1671)
!10051 = !DILocation(line: 4429, column: 5, scope: !1671)
!10052 = !DILocation(line: 4441, column: 47, scope: !1664)
!10053 = !DILocation(line: 4441, column: 35, scope: !1664)
!10054 = !DILocation(line: 4441, column: 53, scope: !1664)
!10055 = !DILocation(line: 4441, column: 63, scope: !1664)
!10056 = !DILocation(line: 4441, column: 69, scope: !1664)
!10057 = !DILocation(line: 4441, column: 73, scope: !1664)
!10058 = !DILocation(line: 4441, column: 12, scope: !1664)
!10059 = !DILocation(line: 4441, column: 5, scope: !1664)
!10060 = !DILocation(line: 4442, column: 1, scope: !1664)
!10061 = !DILocation(line: 4445, column: 40, scope: !1679)
!10062 = !DILocation(line: 4445, column: 54, scope: !1679)
!10063 = !DILocation(line: 4447, column: 5, scope: !1679)
!10064 = !DILocation(line: 4447, column: 10, scope: !10065)
!10065 = !DILexicalBlockFile(scope: !1686, file: !352, discriminator: 1)
!10066 = !DILocation(line: 4447, column: 20, scope: !1686)
!10067 = !DILocation(line: 4447, column: 43, scope: !1686)
!10068 = !DILocation(line: 4447, column: 47, scope: !1686)
!10069 = !DILocation(line: 4447, column: 63, scope: !1690)
!10070 = !DILocation(line: 4447, column: 71, scope: !1690)
!10071 = !DILocation(line: 4447, column: 63, scope: !1686)
!10072 = !DILocation(line: 4447, column: 89, scope: !10073)
!10073 = !DILexicalBlockFile(scope: !1689, file: !352, discriminator: 2)
!10074 = !DILocation(line: 4447, column: 93, scope: !1689)
!10075 = !DILocation(line: 4447, column: 104, scope: !1689)
!10076 = !DILocation(line: 4447, column: 118, scope: !1689)
!10077 = !DILocation(line: 4447, column: 123, scope: !10078)
!10078 = !DILexicalBlockFile(scope: !1688, file: !352, discriminator: 4)
!10079 = !DILocation(line: 4447, column: 133, scope: !1688)
!10080 = !DILocation(line: 4447, column: 163, scope: !1688)
!10081 = !DILocation(line: 4447, column: 181, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !1688, file: !352, line: 4447, column: 178)
!10083 = !DILocation(line: 4447, column: 198, scope: !10082)
!10084 = !DILocation(line: 4447, column: 178, scope: !10082)
!10085 = !DILocation(line: 4447, column: 208, scope: !10082)
!10086 = !DILocation(line: 4447, column: 178, scope: !1688)
!10087 = !DILocation(line: 4447, column: 178, scope: !10088)
!10088 = !DILexicalBlockFile(scope: !1688, file: !352, discriminator: 5)
!10089 = !DILocation(line: 4447, column: 239, scope: !10090)
!10090 = !DILexicalBlockFile(scope: !10082, file: !352, discriminator: 6)
!10091 = !DILocation(line: 4447, column: 257, scope: !10082)
!10092 = !DILocation(line: 4447, column: 267, scope: !10082)
!10093 = !DILocation(line: 4447, column: 292, scope: !10082)
!10094 = !DILocation(line: 4447, column: 223, scope: !10082)
!10095 = !DILocation(line: 4447, column: 311, scope: !10096)
!10096 = !DILexicalBlockFile(scope: !1689, file: !352, discriminator: 7)
!10097 = !DILocation(line: 4447, column: 311, scope: !1688)
!10098 = !DILocation(line: 4447, column: 311, scope: !10099)
!10099 = !DILexicalBlockFile(scope: !1688, file: !352, discriminator: 8)
!10100 = !DILocation(line: 4447, column: 324, scope: !10101)
!10101 = !DILexicalBlockFile(scope: !1689, file: !352, discriminator: 9)
!10102 = !DILocation(line: 4447, column: 326, scope: !10103)
!10103 = !DILexicalBlockFile(scope: !10104, file: !352, discriminator: 10)
!10104 = !DILexicalBlockFile(scope: !1679, file: !352, discriminator: 3)
!10105 = !DILocation(line: 4447, column: 326, scope: !1686)
!10106 = !DILocation(line: 4448, column: 21, scope: !1679)
!10107 = !DILocation(line: 4448, column: 5, scope: !1679)
!10108 = !DILocation(line: 4448, column: 9, scope: !1679)
!10109 = !DILocation(line: 4448, column: 19, scope: !1679)
!10110 = !DILocation(line: 4449, column: 21, scope: !1679)
!10111 = !DILocation(line: 4449, column: 25, scope: !1679)
!10112 = !DILocation(line: 4449, column: 38, scope: !1679)
!10113 = !DILocation(line: 4449, column: 47, scope: !1679)
!10114 = !DILocation(line: 4450, column: 58, scope: !1679)
!10115 = !DILocation(line: 4450, column: 5, scope: !1679)
!10116 = !DILocation(line: 3080, column: 42, scope: !1721)
!10117 = !DILocation(line: 3082, column: 25, scope: !1721)
!10118 = !DILocation(line: 3082, column: 5, scope: !1721)
!10119 = !DILocation(line: 3083, column: 5, scope: !1721)
!10120 = !DILocation(line: 3083, column: 10, scope: !10121)
!10121 = !DILexicalBlockFile(scope: !1727, file: !352, discriminator: 1)
!10122 = !DILocation(line: 3083, column: 20, scope: !1727)
!10123 = !DILocation(line: 3083, column: 51, scope: !1727)
!10124 = !DILocation(line: 3083, column: 55, scope: !1727)
!10125 = !{!10126, !2680, i64 16}
!10126 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2680, i64 32, !2680, i64 40, !2677, i64 48, !2692, i64 56}
!10127 = !DILocation(line: 3083, column: 66, scope: !1730)
!10128 = !DILocation(line: 3083, column: 82, scope: !1730)
!10129 = !DILocation(line: 3083, column: 66, scope: !1727)
!10130 = !DILocation(line: 3083, column: 97, scope: !10131)
!10131 = !DILexicalBlockFile(scope: !1730, file: !352, discriminator: 2)
!10132 = !DILocation(line: 3083, column: 102, scope: !10133)
!10133 = !DILexicalBlockFile(scope: !1729, file: !352, discriminator: 4)
!10134 = !DILocation(line: 3083, column: 112, scope: !1729)
!10135 = !DILocation(line: 3083, column: 142, scope: !1729)
!10136 = !DILocation(line: 3083, column: 168, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !1729, file: !352, line: 3083, column: 165)
!10138 = !DILocation(line: 3083, column: 185, scope: !10137)
!10139 = !DILocation(line: 3083, column: 165, scope: !10137)
!10140 = !DILocation(line: 3083, column: 195, scope: !10137)
!10141 = !DILocation(line: 3083, column: 165, scope: !1729)
!10142 = !DILocation(line: 3083, column: 165, scope: !10143)
!10143 = !DILexicalBlockFile(scope: !1729, file: !352, discriminator: 5)
!10144 = !DILocation(line: 3083, column: 226, scope: !10145)
!10145 = !DILexicalBlockFile(scope: !10137, file: !352, discriminator: 6)
!10146 = !DILocation(line: 3083, column: 244, scope: !10137)
!10147 = !DILocation(line: 3083, column: 254, scope: !10137)
!10148 = !DILocation(line: 3083, column: 279, scope: !10137)
!10149 = !DILocation(line: 3083, column: 210, scope: !10137)
!10150 = !DILocation(line: 3083, column: 298, scope: !10151)
!10151 = !DILexicalBlockFile(scope: !1730, file: !352, discriminator: 7)
!10152 = !DILocation(line: 3083, column: 298, scope: !1729)
!10153 = !DILocation(line: 3083, column: 298, scope: !10154)
!10154 = !DILexicalBlockFile(scope: !1729, file: !352, discriminator: 8)
!10155 = !DILocation(line: 3083, column: 298, scope: !10156)
!10156 = !DILexicalBlockFile(scope: !1729, file: !352, discriminator: 9)
!10157 = !DILocation(line: 3083, column: 311, scope: !10158)
!10158 = !DILexicalBlockFile(scope: !10159, file: !352, discriminator: 10)
!10159 = !DILexicalBlockFile(scope: !1721, file: !352, discriminator: 3)
!10160 = !DILocation(line: 3083, column: 311, scope: !1727)
!10161 = !DILocation(line: 3084, column: 5, scope: !1721)
!10162 = !DILocation(line: 3084, column: 10, scope: !10163)
!10163 = !DILexicalBlockFile(scope: !1732, file: !352, discriminator: 1)
!10164 = !DILocation(line: 3084, column: 20, scope: !1732)
!10165 = !DILocation(line: 3084, column: 51, scope: !1732)
!10166 = !DILocation(line: 3084, column: 55, scope: !1732)
!10167 = !{!10126, !2680, i64 40}
!10168 = !DILocation(line: 3084, column: 68, scope: !1735)
!10169 = !DILocation(line: 3084, column: 84, scope: !1735)
!10170 = !DILocation(line: 3084, column: 68, scope: !1732)
!10171 = !DILocation(line: 3084, column: 99, scope: !10172)
!10172 = !DILexicalBlockFile(scope: !1735, file: !352, discriminator: 2)
!10173 = !DILocation(line: 3084, column: 104, scope: !10174)
!10174 = !DILexicalBlockFile(scope: !1734, file: !352, discriminator: 4)
!10175 = !DILocation(line: 3084, column: 114, scope: !1734)
!10176 = !DILocation(line: 3084, column: 144, scope: !1734)
!10177 = !DILocation(line: 3084, column: 170, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !1734, file: !352, line: 3084, column: 167)
!10179 = !DILocation(line: 3084, column: 187, scope: !10178)
!10180 = !DILocation(line: 3084, column: 167, scope: !10178)
!10181 = !DILocation(line: 3084, column: 197, scope: !10178)
!10182 = !DILocation(line: 3084, column: 167, scope: !1734)
!10183 = !DILocation(line: 3084, column: 167, scope: !10184)
!10184 = !DILexicalBlockFile(scope: !1734, file: !352, discriminator: 5)
!10185 = !DILocation(line: 3084, column: 228, scope: !10186)
!10186 = !DILexicalBlockFile(scope: !10178, file: !352, discriminator: 6)
!10187 = !DILocation(line: 3084, column: 246, scope: !10178)
!10188 = !DILocation(line: 3084, column: 256, scope: !10178)
!10189 = !DILocation(line: 3084, column: 281, scope: !10178)
!10190 = !DILocation(line: 3084, column: 212, scope: !10178)
!10191 = !DILocation(line: 3084, column: 300, scope: !10192)
!10192 = !DILexicalBlockFile(scope: !1735, file: !352, discriminator: 7)
!10193 = !DILocation(line: 3084, column: 300, scope: !1734)
!10194 = !DILocation(line: 3084, column: 300, scope: !10195)
!10195 = !DILexicalBlockFile(scope: !1734, file: !352, discriminator: 8)
!10196 = !DILocation(line: 3084, column: 300, scope: !10197)
!10197 = !DILexicalBlockFile(scope: !1734, file: !352, discriminator: 9)
!10198 = !DILocation(line: 3084, column: 313, scope: !10158)
!10199 = !DILocation(line: 3084, column: 313, scope: !1732)
!10200 = !DILocation(line: 3085, column: 16, scope: !1721)
!10201 = !DILocation(line: 3085, column: 20, scope: !1721)
!10202 = !{!10126, !2680, i64 24}
!10203 = !DILocation(line: 3085, column: 5, scope: !1721)
!10204 = !DILocation(line: 3086, column: 16, scope: !1721)
!10205 = !DILocation(line: 3086, column: 20, scope: !1721)
!10206 = !{!10126, !2680, i64 32}
!10207 = !DILocation(line: 3086, column: 5, scope: !1721)
!10208 = !DILocation(line: 3087, column: 19, scope: !1721)
!10209 = !DILocation(line: 3087, column: 7, scope: !1721)
!10210 = !DILocation(line: 3087, column: 25, scope: !1721)
!10211 = !DILocation(line: 3087, column: 35, scope: !1721)
!10212 = !DILocation(line: 3087, column: 43, scope: !1721)
!10213 = !DILocation(line: 3087, column: 5, scope: !1721)
!10214 = !DILocation(line: 3088, column: 1, scope: !1721)
!10215 = !DILocation(line: 3102, column: 43, scope: !1736)
!10216 = !DILocation(line: 3102, column: 57, scope: !1736)
!10217 = !DILocation(line: 3102, column: 70, scope: !1736)
!10218 = !DILocation(line: 3104, column: 5, scope: !1736)
!10219 = !DILocation(line: 3104, column: 14, scope: !10220)
!10220 = !DILexicalBlockFile(scope: !1745, file: !352, discriminator: 1)
!10221 = !DILocation(line: 3104, column: 18, scope: !1745)
!10222 = !DILocation(line: 3104, column: 14, scope: !1745)
!10223 = !DILocation(line: 3104, column: 14, scope: !1746)
!10224 = !DILocation(line: 3104, column: 26, scope: !10225)
!10225 = !DILexicalBlockFile(scope: !1744, file: !352, discriminator: 2)
!10226 = !DILocation(line: 3104, column: 30, scope: !1744)
!10227 = !DILocation(line: 3104, column: 37, scope: !1744)
!10228 = !DILocation(line: 3104, column: 56, scope: !1744)
!10229 = !DILocation(line: 3104, column: 60, scope: !1744)
!10230 = !DILocation(line: 3104, column: 67, scope: !1744)
!10231 = !DILocation(line: 3104, column: 77, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !1744, file: !352, line: 3104, column: 77)
!10233 = !DILocation(line: 3104, column: 77, scope: !1744)
!10234 = !DILocation(line: 3104, column: 90, scope: !10235)
!10235 = !DILexicalBlockFile(scope: !10232, file: !352, discriminator: 4)
!10236 = !DILocation(line: 3104, column: 83, scope: !10232)
!10237 = !DILocation(line: 3104, column: 96, scope: !10238)
!10238 = !DILexicalBlockFile(scope: !1745, file: !352, discriminator: 5)
!10239 = !DILocation(line: 3104, column: 96, scope: !10240)
!10240 = !DILexicalBlockFile(scope: !10241, file: !352, discriminator: 7)
!10241 = !DILexicalBlockFile(scope: !1745, file: !352, discriminator: 6)
!10242 = !DILocation(line: 3104, column: 96, scope: !1744)
!10243 = !DILocation(line: 3104, column: 98, scope: !10244)
!10244 = !DILexicalBlockFile(scope: !10245, file: !352, discriminator: 8)
!10245 = !DILexicalBlockFile(scope: !1746, file: !352, discriminator: 3)
!10246 = !DILocation(line: 3105, column: 5, scope: !1736)
!10247 = !DILocation(line: 3105, column: 14, scope: !10248)
!10248 = !DILexicalBlockFile(scope: !1749, file: !352, discriminator: 1)
!10249 = !DILocation(line: 3105, column: 18, scope: !1749)
!10250 = !DILocation(line: 3105, column: 14, scope: !1749)
!10251 = !DILocation(line: 3105, column: 14, scope: !1750)
!10252 = !DILocation(line: 3105, column: 28, scope: !10253)
!10253 = !DILexicalBlockFile(scope: !1748, file: !352, discriminator: 2)
!10254 = !DILocation(line: 3105, column: 32, scope: !1748)
!10255 = !DILocation(line: 3105, column: 39, scope: !1748)
!10256 = !DILocation(line: 3105, column: 58, scope: !1748)
!10257 = !DILocation(line: 3105, column: 62, scope: !1748)
!10258 = !DILocation(line: 3105, column: 71, scope: !1748)
!10259 = !DILocation(line: 3105, column: 81, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !1748, file: !352, line: 3105, column: 81)
!10261 = !DILocation(line: 3105, column: 81, scope: !1748)
!10262 = !DILocation(line: 3105, column: 94, scope: !10263)
!10263 = !DILexicalBlockFile(scope: !10260, file: !352, discriminator: 4)
!10264 = !DILocation(line: 3105, column: 87, scope: !10260)
!10265 = !DILocation(line: 3105, column: 100, scope: !10266)
!10266 = !DILexicalBlockFile(scope: !1749, file: !352, discriminator: 5)
!10267 = !DILocation(line: 3105, column: 100, scope: !10268)
!10268 = !DILexicalBlockFile(scope: !10269, file: !352, discriminator: 7)
!10269 = !DILexicalBlockFile(scope: !1749, file: !352, discriminator: 6)
!10270 = !DILocation(line: 3105, column: 100, scope: !1748)
!10271 = !DILocation(line: 3105, column: 102, scope: !10272)
!10272 = !DILexicalBlockFile(scope: !10273, file: !352, discriminator: 8)
!10273 = !DILexicalBlockFile(scope: !1750, file: !352, discriminator: 3)
!10274 = !DILocation(line: 3106, column: 5, scope: !1736)
!10275 = !DILocation(line: 3107, column: 1, scope: !1736)
!10276 = !DILocation(line: 3110, column: 39, scope: !1751)
!10277 = !DILocation(line: 3112, column: 5, scope: !1751)
!10278 = !DILocation(line: 3112, column: 15, scope: !1751)
!10279 = !DILocation(line: 3113, column: 5, scope: !1751)
!10280 = !DILocation(line: 3113, column: 15, scope: !1751)
!10281 = !DILocation(line: 3114, column: 5, scope: !1751)
!10282 = !DILocation(line: 3114, column: 15, scope: !1751)
!10283 = !DILocation(line: 3114, column: 22, scope: !1751)
!10284 = !DILocation(line: 3114, column: 26, scope: !1751)
!10285 = !DILocation(line: 3115, column: 5, scope: !1751)
!10286 = !DILocation(line: 3115, column: 17, scope: !1751)
!10287 = !DILocation(line: 3115, column: 27, scope: !1751)
!10288 = !DILocation(line: 3115, column: 31, scope: !1751)
!10289 = !DILocation(line: 3116, column: 5, scope: !1751)
!10290 = !DILocation(line: 3116, column: 17, scope: !1751)
!10291 = !DILocation(line: 3116, column: 26, scope: !1751)
!10292 = !DILocation(line: 3116, column: 30, scope: !1751)
!10293 = !DILocation(line: 3117, column: 5, scope: !1751)
!10294 = !DILocation(line: 3117, column: 15, scope: !1751)
!10295 = !DILocation(line: 3117, column: 24, scope: !1751)
!10296 = !DILocation(line: 3117, column: 28, scope: !1751)
!10297 = !DILocation(line: 3118, column: 5, scope: !1751)
!10298 = !DILocation(line: 3118, column: 16, scope: !1751)
!10299 = !DILocation(line: 3118, column: 37, scope: !1751)
!10300 = !DILocation(line: 3118, column: 22, scope: !1751)
!10301 = !DILocation(line: 3118, column: 45, scope: !1751)
!10302 = !DILocation(line: 3119, column: 5, scope: !1751)
!10303 = !DILocation(line: 3119, column: 16, scope: !1751)
!10304 = !DILocation(line: 3119, column: 20, scope: !1751)
!10305 = !DILocation(line: 3119, column: 24, scope: !1751)
!10306 = !{!10126, !2677, i64 48}
!10307 = !DILocation(line: 3120, column: 5, scope: !1751)
!10308 = !DILocation(line: 3120, column: 16, scope: !1751)
!10309 = !DILocation(line: 3120, column: 19, scope: !1751)
!10310 = !DILocation(line: 3120, column: 22, scope: !1751)
!10311 = !DILocation(line: 3120, column: 25, scope: !1751)
!10312 = !DILocation(line: 3122, column: 9, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !1751, file: !352, line: 3122, column: 9)
!10314 = !DILocation(line: 3122, column: 13, scope: !10313)
!10315 = !{!10126, !2692, i64 56}
!10316 = !DILocation(line: 3122, column: 9, scope: !1751)
!10317 = !DILocation(line: 3123, column: 9, scope: !10313)
!10318 = !DILocation(line: 3125, column: 9, scope: !1772)
!10319 = !DILocation(line: 3125, column: 16, scope: !1772)
!10320 = !DILocation(line: 3125, column: 9, scope: !1751)
!10321 = !DILocation(line: 3127, column: 30, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !1772, file: !352, line: 3125, column: 31)
!10323 = !DILocation(line: 3127, column: 18, scope: !10322)
!10324 = !DILocation(line: 3127, column: 16, scope: !10322)
!10325 = !DILocation(line: 3128, column: 13, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10322, file: !352, line: 3128, column: 13)
!10327 = !DILocation(line: 3128, column: 20, scope: !10326)
!10328 = !DILocation(line: 3128, column: 13, scope: !10322)
!10329 = !DILocation(line: 3129, column: 13, scope: !10326)
!10330 = !DILocation(line: 3130, column: 22, scope: !10322)
!10331 = !DILocation(line: 3130, column: 9, scope: !10322)
!10332 = !DILocation(line: 3130, column: 13, scope: !10322)
!10333 = !DILocation(line: 3130, column: 20, scope: !10322)
!10334 = !DILocation(line: 3131, column: 15, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10322, file: !352, line: 3131, column: 9)
!10336 = !DILocation(line: 3131, column: 14, scope: !10335)
!10337 = !DILocation(line: 3131, column: 19, scope: !10338)
!10338 = !DILexicalBlockFile(scope: !10339, file: !352, discriminator: 2)
!10339 = !DILexicalBlockFile(scope: !10340, file: !352, discriminator: 1)
!10340 = distinct !DILexicalBlock(scope: !10335, file: !352, line: 3131, column: 9)
!10341 = !DILocation(line: 3131, column: 21, scope: !10340)
!10342 = !DILocation(line: 3131, column: 20, scope: !10340)
!10343 = !DILocation(line: 3131, column: 9, scope: !10335)
!10344 = !DILocation(line: 3132, column: 29, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10340, file: !352, line: 3131, column: 30)
!10346 = !DILocation(line: 3132, column: 21, scope: !10345)
!10347 = !DILocation(line: 3132, column: 19, scope: !10345)
!10348 = !DILocation(line: 3133, column: 56, scope: !10345)
!10349 = !DILocation(line: 3133, column: 40, scope: !10345)
!10350 = !DILocation(line: 3133, column: 22, scope: !10345)
!10351 = !DILocation(line: 3133, column: 48, scope: !10345)
!10352 = !DILocation(line: 3133, column: 21, scope: !10345)
!10353 = !DILocation(line: 3133, column: 18, scope: !10345)
!10354 = !DILocation(line: 3134, column: 29, scope: !10345)
!10355 = !DILocation(line: 3134, column: 37, scope: !10345)
!10356 = !DILocation(line: 3134, column: 46, scope: !10345)
!10357 = !DILocation(line: 3135, column: 56, scope: !10345)
!10358 = !DILocation(line: 3135, column: 51, scope: !10345)
!10359 = !DILocation(line: 3135, column: 33, scope: !10345)
!10360 = !DILocation(line: 3135, column: 15, scope: !10345)
!10361 = !DILocation(line: 3135, column: 43, scope: !10345)
!10362 = !DILocation(line: 3135, column: 14, scope: !10345)
!10363 = !DILocation(line: 3135, column: 54, scope: !10345)
!10364 = !DILocation(line: 3136, column: 9, scope: !10345)
!10365 = !DILocation(line: 3131, column: 26, scope: !10340)
!10366 = !DILocation(line: 3131, column: 9, scope: !10340)
!10367 = !DILocation(line: 3137, column: 5, scope: !10322)
!10368 = !DILocation(line: 3138, column: 13, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !1771, file: !352, line: 3138, column: 13)
!10370 = !DILocation(line: 3138, column: 15, scope: !10369)
!10371 = !DILocation(line: 3138, column: 13, scope: !1771)
!10372 = !DILocation(line: 3139, column: 13, scope: !10369)
!10373 = !DILocation(line: 3142, column: 27, scope: !1770)
!10374 = !DILocation(line: 3142, column: 37, scope: !1770)
!10375 = !DILocation(line: 3142, column: 48, scope: !1770)
!10376 = !DILocation(line: 3142, column: 13, scope: !1771)
!10377 = !DILocation(line: 3143, column: 13, scope: !1769)
!10378 = !DILocation(line: 3143, column: 23, scope: !1769)
!10379 = !DILocation(line: 3143, column: 36, scope: !1769)
!10380 = !DILocation(line: 3144, column: 34, scope: !1769)
!10381 = !DILocation(line: 3144, column: 22, scope: !1769)
!10382 = !DILocation(line: 3144, column: 20, scope: !1769)
!10383 = !DILocation(line: 3145, column: 17, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !1769, file: !352, line: 3145, column: 17)
!10385 = !DILocation(line: 3145, column: 24, scope: !10384)
!10386 = !DILocation(line: 3145, column: 17, scope: !1769)
!10387 = !DILocation(line: 3146, column: 17, scope: !10384)
!10388 = !DILocation(line: 3147, column: 26, scope: !1769)
!10389 = !DILocation(line: 3147, column: 13, scope: !1769)
!10390 = !DILocation(line: 3147, column: 17, scope: !1769)
!10391 = !DILocation(line: 3147, column: 24, scope: !1769)
!10392 = !DILocation(line: 3148, column: 19, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !1769, file: !352, line: 3148, column: 13)
!10394 = !DILocation(line: 3148, column: 18, scope: !10393)
!10395 = !DILocation(line: 3148, column: 23, scope: !10396)
!10396 = !DILexicalBlockFile(scope: !10397, file: !352, discriminator: 2)
!10397 = !DILexicalBlockFile(scope: !10398, file: !352, discriminator: 1)
!10398 = distinct !DILexicalBlock(scope: !10393, file: !352, line: 3148, column: 13)
!10399 = !DILocation(line: 3148, column: 25, scope: !10398)
!10400 = !DILocation(line: 3148, column: 24, scope: !10398)
!10401 = !DILocation(line: 3148, column: 13, scope: !10393)
!10402 = !DILocation(line: 3149, column: 66, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10398, file: !352, line: 3148, column: 34)
!10404 = !DILocation(line: 3149, column: 44, scope: !10403)
!10405 = !DILocation(line: 3149, column: 26, scope: !10403)
!10406 = !DILocation(line: 3149, column: 58, scope: !10403)
!10407 = !DILocation(line: 3149, column: 25, scope: !10403)
!10408 = !DILocation(line: 3149, column: 22, scope: !10403)
!10409 = !DILocation(line: 3150, column: 33, scope: !10403)
!10410 = !DILocation(line: 3150, column: 41, scope: !10403)
!10411 = !DILocation(line: 3150, column: 50, scope: !10403)
!10412 = !DILocation(line: 3151, column: 60, scope: !10403)
!10413 = !DILocation(line: 3151, column: 55, scope: !10403)
!10414 = !DILocation(line: 3151, column: 37, scope: !10403)
!10415 = !DILocation(line: 3151, column: 19, scope: !10403)
!10416 = !DILocation(line: 3151, column: 47, scope: !10403)
!10417 = !DILocation(line: 3151, column: 18, scope: !10403)
!10418 = !DILocation(line: 3151, column: 58, scope: !10403)
!10419 = !DILocation(line: 3152, column: 13, scope: !10403)
!10420 = !DILocation(line: 3148, column: 30, scope: !10398)
!10421 = !DILocation(line: 3148, column: 13, scope: !10398)
!10422 = !DILocation(line: 3153, column: 13, scope: !1769)
!10423 = !DILocation(line: 3153, column: 18, scope: !10424)
!10424 = !DILexicalBlockFile(scope: !1774, file: !352, discriminator: 1)
!10425 = !DILocation(line: 3153, column: 28, scope: !1774)
!10426 = !DILocation(line: 3153, column: 58, scope: !1774)
!10427 = !DILocation(line: 3153, column: 79, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !1774, file: !352, line: 3153, column: 76)
!10429 = !DILocation(line: 3153, column: 96, scope: !10428)
!10430 = !DILocation(line: 3153, column: 76, scope: !10428)
!10431 = !DILocation(line: 3153, column: 106, scope: !10428)
!10432 = !DILocation(line: 3153, column: 76, scope: !1774)
!10433 = !DILocation(line: 3153, column: 76, scope: !10434)
!10434 = !DILexicalBlockFile(scope: !1774, file: !352, discriminator: 2)
!10435 = !DILocation(line: 3153, column: 137, scope: !10436)
!10436 = !DILexicalBlockFile(scope: !10428, file: !352, discriminator: 3)
!10437 = !DILocation(line: 3153, column: 155, scope: !10428)
!10438 = !DILocation(line: 3153, column: 165, scope: !10428)
!10439 = !DILocation(line: 3153, column: 190, scope: !10428)
!10440 = !DILocation(line: 3153, column: 121, scope: !10428)
!10441 = !DILocation(line: 3153, column: 209, scope: !10442)
!10442 = !DILexicalBlockFile(scope: !1769, file: !352, discriminator: 4)
!10443 = !DILocation(line: 3153, column: 209, scope: !1774)
!10444 = !DILocation(line: 3153, column: 209, scope: !10445)
!10445 = !DILexicalBlockFile(scope: !1774, file: !352, discriminator: 5)
!10446 = !DILocation(line: 3154, column: 9, scope: !1770)
!10447 = !DILocation(line: 3154, column: 9, scope: !10448)
!10448 = !DILexicalBlockFile(scope: !1770, file: !352, discriminator: 1)
!10449 = !DILocation(line: 3154, column: 9, scope: !1769)
!10450 = !DILocation(line: 3159, column: 16, scope: !1784)
!10451 = !DILocation(line: 3159, column: 17, scope: !1784)
!10452 = !DILocation(line: 3159, column: 15, scope: !1784)
!10453 = !DILocation(line: 3159, column: 14, scope: !1784)
!10454 = !DILocation(line: 3159, column: 22, scope: !10455)
!10455 = !DILexicalBlockFile(scope: !10456, file: !352, discriminator: 2)
!10456 = !DILexicalBlockFile(scope: !1783, file: !352, discriminator: 1)
!10457 = !DILocation(line: 3159, column: 23, scope: !1783)
!10458 = !DILocation(line: 3159, column: 9, scope: !1784)
!10459 = !DILocation(line: 3160, column: 20, scope: !1782)
!10460 = !DILocation(line: 3160, column: 13, scope: !1782)
!10461 = !DILocation(line: 3160, column: 23, scope: !1782)
!10462 = !DILocation(line: 3161, column: 24, scope: !1781)
!10463 = !DILocation(line: 3161, column: 17, scope: !1781)
!10464 = !DILocation(line: 3161, column: 27, scope: !1781)
!10465 = !DILocation(line: 3161, column: 17, scope: !1782)
!10466 = !DILocation(line: 3163, column: 33, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !1781, file: !352, line: 3161, column: 33)
!10468 = !DILocation(line: 3163, column: 25, scope: !10467)
!10469 = !DILocation(line: 3163, column: 23, scope: !10467)
!10470 = !DILocation(line: 3164, column: 24, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10467, file: !352, line: 3164, column: 17)
!10472 = !DILocation(line: 3164, column: 23, scope: !10471)
!10473 = !DILocation(line: 3164, column: 22, scope: !10471)
!10474 = !DILocation(line: 3164, column: 28, scope: !10475)
!10475 = !DILexicalBlockFile(scope: !10476, file: !352, discriminator: 2)
!10476 = !DILexicalBlockFile(scope: !10477, file: !352, discriminator: 1)
!10477 = distinct !DILexicalBlock(scope: !10471, file: !352, line: 3164, column: 17)
!10478 = !DILocation(line: 3164, column: 30, scope: !10477)
!10479 = !DILocation(line: 3164, column: 31, scope: !10477)
!10480 = !DILocation(line: 3164, column: 29, scope: !10477)
!10481 = !DILocation(line: 3164, column: 17, scope: !10471)
!10482 = !DILocation(line: 3165, column: 42, scope: !10477)
!10483 = !DILocation(line: 3165, column: 43, scope: !10477)
!10484 = !DILocation(line: 3165, column: 34, scope: !10477)
!10485 = !DILocation(line: 3165, column: 29, scope: !10477)
!10486 = !DILocation(line: 3165, column: 21, scope: !10477)
!10487 = !DILocation(line: 3165, column: 32, scope: !10477)
!10488 = !DILocation(line: 3164, column: 37, scope: !10477)
!10489 = !DILocation(line: 3164, column: 17, scope: !10477)
!10490 = !DILocation(line: 3166, column: 32, scope: !10467)
!10491 = !DILocation(line: 3166, column: 25, scope: !10467)
!10492 = !DILocation(line: 3166, column: 26, scope: !10467)
!10493 = !DILocation(line: 3166, column: 17, scope: !10467)
!10494 = !DILocation(line: 3166, column: 30, scope: !10467)
!10495 = !DILocation(line: 3167, column: 29, scope: !10467)
!10496 = !DILocation(line: 3167, column: 33, scope: !10467)
!10497 = !DILocation(line: 3167, column: 31, scope: !10467)
!10498 = !DILocation(line: 3167, column: 24, scope: !10467)
!10499 = !DILocation(line: 3167, column: 17, scope: !10467)
!10500 = !DILocation(line: 3167, column: 27, scope: !10467)
!10501 = !DILocation(line: 3168, column: 13, scope: !10467)
!10502 = !DILocation(line: 3169, column: 28, scope: !1780)
!10503 = !DILocation(line: 3169, column: 21, scope: !1780)
!10504 = !DILocation(line: 3169, column: 19, scope: !1780)
!10505 = !DILocation(line: 3170, column: 33, scope: !1780)
!10506 = !DILocation(line: 3170, column: 25, scope: !1780)
!10507 = !DILocation(line: 3170, column: 23, scope: !1780)
!10508 = !DILocation(line: 3171, column: 38, scope: !1780)
!10509 = !DILocation(line: 3171, column: 40, scope: !1780)
!10510 = !DILocation(line: 3171, column: 39, scope: !1780)
!10511 = !DILocation(line: 3171, column: 30, scope: !1780)
!10512 = !DILocation(line: 3171, column: 25, scope: !1780)
!10513 = !DILocation(line: 3171, column: 17, scope: !1780)
!10514 = !DILocation(line: 3171, column: 28, scope: !1780)
!10515 = !DILocation(line: 3172, column: 32, scope: !1780)
!10516 = !DILocation(line: 3172, column: 25, scope: !1780)
!10517 = !DILocation(line: 3172, column: 27, scope: !1780)
!10518 = !DILocation(line: 3172, column: 26, scope: !1780)
!10519 = !DILocation(line: 3172, column: 17, scope: !1780)
!10520 = !DILocation(line: 3172, column: 30, scope: !1780)
!10521 = !DILocation(line: 3174, column: 24, scope: !1779)
!10522 = !DILocation(line: 3174, column: 23, scope: !1779)
!10523 = !DILocation(line: 3174, column: 22, scope: !1779)
!10524 = !DILocation(line: 3174, column: 27, scope: !10525)
!10525 = !DILexicalBlockFile(scope: !10526, file: !352, discriminator: 2)
!10526 = !DILexicalBlockFile(scope: !1778, file: !352, discriminator: 1)
!10527 = !DILocation(line: 3174, column: 29, scope: !1778)
!10528 = !DILocation(line: 3174, column: 28, scope: !1778)
!10529 = !DILocation(line: 3174, column: 17, scope: !1779)
!10530 = !DILocation(line: 3177, column: 37, scope: !1777)
!10531 = !DILocation(line: 3177, column: 29, scope: !1777)
!10532 = !DILocation(line: 3177, column: 27, scope: !1777)
!10533 = !DILocation(line: 3178, column: 64, scope: !1777)
!10534 = !DILocation(line: 3178, column: 48, scope: !1777)
!10535 = !DILocation(line: 3178, column: 30, scope: !1777)
!10536 = !DILocation(line: 3178, column: 56, scope: !1777)
!10537 = !DILocation(line: 3178, column: 29, scope: !1777)
!10538 = !DILocation(line: 3178, column: 26, scope: !1777)
!10539 = !DILocation(line: 3179, column: 37, scope: !1777)
!10540 = !DILocation(line: 3179, column: 45, scope: !1777)
!10541 = !DILocation(line: 3179, column: 54, scope: !1777)
!10542 = !DILocation(line: 3180, column: 69, scope: !1777)
!10543 = !DILocation(line: 3180, column: 51, scope: !1777)
!10544 = !DILocation(line: 3180, column: 33, scope: !1777)
!10545 = !DILocation(line: 3180, column: 61, scope: !1777)
!10546 = !DILocation(line: 3180, column: 32, scope: !1777)
!10547 = !DILocation(line: 3180, column: 29, scope: !1777)
!10548 = !DILocation(line: 3181, column: 64, scope: !1777)
!10549 = !DILocation(line: 3181, column: 59, scope: !1777)
!10550 = !DILocation(line: 3181, column: 41, scope: !1777)
!10551 = !DILocation(line: 3181, column: 23, scope: !1777)
!10552 = !DILocation(line: 3181, column: 51, scope: !1777)
!10553 = !DILocation(line: 3181, column: 22, scope: !1777)
!10554 = !DILocation(line: 3181, column: 62, scope: !1777)
!10555 = !DILocation(line: 3182, column: 21, scope: !1777)
!10556 = !DILocation(line: 3182, column: 26, scope: !10557)
!10557 = !DILexicalBlockFile(scope: !1776, file: !352, discriminator: 1)
!10558 = !DILocation(line: 3182, column: 36, scope: !1776)
!10559 = !DILocation(line: 3182, column: 66, scope: !1776)
!10560 = !DILocation(line: 3182, column: 84, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !1776, file: !352, line: 3182, column: 81)
!10562 = !DILocation(line: 3182, column: 101, scope: !10561)
!10563 = !DILocation(line: 3182, column: 81, scope: !10561)
!10564 = !DILocation(line: 3182, column: 111, scope: !10561)
!10565 = !DILocation(line: 3182, column: 81, scope: !1776)
!10566 = !DILocation(line: 3182, column: 81, scope: !10567)
!10567 = !DILexicalBlockFile(scope: !1776, file: !352, discriminator: 2)
!10568 = !DILocation(line: 3182, column: 142, scope: !10569)
!10569 = !DILexicalBlockFile(scope: !10561, file: !352, discriminator: 3)
!10570 = !DILocation(line: 3182, column: 160, scope: !10561)
!10571 = !DILocation(line: 3182, column: 170, scope: !10561)
!10572 = !DILocation(line: 3182, column: 195, scope: !10561)
!10573 = !DILocation(line: 3182, column: 126, scope: !10561)
!10574 = !DILocation(line: 3182, column: 214, scope: !10575)
!10575 = !DILexicalBlockFile(scope: !1777, file: !352, discriminator: 4)
!10576 = !DILocation(line: 3182, column: 214, scope: !1776)
!10577 = !DILocation(line: 3182, column: 214, scope: !10578)
!10578 = !DILexicalBlockFile(scope: !1776, file: !352, discriminator: 5)
!10579 = !DILocation(line: 3183, column: 17, scope: !1777)
!10580 = !DILocation(line: 3174, column: 34, scope: !1778)
!10581 = !DILocation(line: 3174, column: 17, scope: !1778)
!10582 = !DILocation(line: 3184, column: 17, scope: !1780)
!10583 = !DILocation(line: 3186, column: 9, scope: !1782)
!10584 = !DILocation(line: 3159, column: 30, scope: !1783)
!10585 = !DILocation(line: 3159, column: 9, scope: !1783)
!10586 = !DILocation(line: 3189, column: 13, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !1771, file: !352, line: 3189, column: 13)
!10588 = !DILocation(line: 3189, column: 15, scope: !10587)
!10589 = !DILocation(line: 3189, column: 13, scope: !1771)
!10590 = !DILocation(line: 3190, column: 13, scope: !10587)
!10591 = !DILocation(line: 3192, column: 21, scope: !1751)
!10592 = !DILocation(line: 3192, column: 31, scope: !1751)
!10593 = !DILocation(line: 3192, column: 40, scope: !1751)
!10594 = !DILocation(line: 3193, column: 12, scope: !1751)
!10595 = !DILocation(line: 3193, column: 5, scope: !1751)
!10596 = !DILocation(line: 3196, column: 5, scope: !1751)
!10597 = !DILocation(line: 3196, column: 9, scope: !1751)
!10598 = !DILocation(line: 3196, column: 17, scope: !1751)
!10599 = !DILocation(line: 3197, column: 5, scope: !1751)
!10600 = !DILocation(line: 3198, column: 1, scope: !1751)
!10601 = !DILocation(line: 3007, column: 32, scope: !1851)
!10602 = !DILocation(line: 3007, column: 48, scope: !1851)
!10603 = !DILocation(line: 3007, column: 64, scope: !1851)
!10604 = !DILocation(line: 3009, column: 5, scope: !1851)
!10605 = !DILocation(line: 3009, column: 25, scope: !1851)
!10606 = !DILocation(line: 3010, column: 5, scope: !1851)
!10607 = !DILocation(line: 3010, column: 16, scope: !1851)
!10608 = !DILocation(line: 3011, column: 5, scope: !1851)
!10609 = !DILocation(line: 3011, column: 16, scope: !1851)
!10610 = !DILocation(line: 3012, column: 5, scope: !1851)
!10611 = !DILocation(line: 3012, column: 15, scope: !1851)
!10612 = !DILocation(line: 3013, column: 5, scope: !1851)
!10613 = !DILocation(line: 3013, column: 15, scope: !1851)
!10614 = !DILocation(line: 3014, column: 5, scope: !1851)
!10615 = !DILocation(line: 3014, column: 15, scope: !1851)
!10616 = !DILocation(line: 3015, column: 5, scope: !1851)
!10617 = !DILocation(line: 3015, column: 17, scope: !1851)
!10618 = !DILocation(line: 3016, column: 5, scope: !1851)
!10619 = !DILocation(line: 3016, column: 17, scope: !1851)
!10620 = !DILocation(line: 3017, column: 5, scope: !1851)
!10621 = !DILocation(line: 3017, column: 16, scope: !1851)
!10622 = !DILocation(line: 3020, column: 38, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3020, column: 9)
!10624 = !DILocation(line: 3020, column: 44, scope: !10623)
!10625 = !DILocation(line: 3020, column: 10, scope: !10623)
!10626 = !DILocation(line: 3020, column: 9, scope: !1851)
!10627 = !DILocation(line: 3022, column: 9, scope: !10623)
!10628 = !DILocation(line: 3024, column: 29, scope: !1851)
!10629 = !DILocation(line: 3024, column: 12, scope: !1851)
!10630 = !DILocation(line: 3024, column: 10, scope: !1851)
!10631 = !DILocation(line: 3025, column: 9, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3025, column: 9)
!10633 = !DILocation(line: 3025, column: 14, scope: !10632)
!10634 = !DILocation(line: 3025, column: 9, scope: !1851)
!10635 = !DILocation(line: 3026, column: 9, scope: !10632)
!10636 = !DILocation(line: 3027, column: 26, scope: !1851)
!10637 = !DILocation(line: 3027, column: 11, scope: !1851)
!10638 = !DILocation(line: 3027, column: 34, scope: !1851)
!10639 = !DILocation(line: 3027, column: 7, scope: !1851)
!10640 = !DILocation(line: 3029, column: 9, scope: !1851)
!10641 = !DILocation(line: 3029, column: 7, scope: !1851)
!10642 = !DILocation(line: 3030, column: 9, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3030, column: 9)
!10644 = !DILocation(line: 3030, column: 14, scope: !10643)
!10645 = !DILocation(line: 3030, column: 9, scope: !1851)
!10646 = !DILocation(line: 3031, column: 31, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !352, line: 3031, column: 13)
!10648 = distinct !DILexicalBlock(scope: !10643, file: !352, line: 3030, column: 36)
!10649 = !DILocation(line: 3031, column: 39, scope: !10647)
!10650 = !DILocation(line: 3031, column: 50, scope: !10647)
!10651 = !DILocation(line: 3031, column: 59, scope: !10647)
!10652 = !DILocation(line: 3031, column: 76, scope: !10647)
!10653 = !DILocation(line: 3031, column: 13, scope: !10648)
!10654 = !DILocation(line: 3032, column: 29, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10647, file: !352, line: 3031, column: 83)
!10656 = !DILocation(line: 3032, column: 13, scope: !10655)
!10657 = !DILocation(line: 3033, column: 13, scope: !10655)
!10658 = !DILocation(line: 3035, column: 30, scope: !10648)
!10659 = !DILocation(line: 3035, column: 13, scope: !10648)
!10660 = !DILocation(line: 3035, column: 11, scope: !10648)
!10661 = !DILocation(line: 3036, column: 13, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10648, file: !352, line: 3036, column: 13)
!10663 = !DILocation(line: 3036, column: 15, scope: !10662)
!10664 = !DILocation(line: 3036, column: 21, scope: !10662)
!10665 = !DILocation(line: 3036, column: 24, scope: !10666)
!10666 = !DILexicalBlockFile(scope: !10662, file: !352, discriminator: 1)
!10667 = !DILocation(line: 3036, column: 13, scope: !10648)
!10668 = !DILocation(line: 3037, column: 13, scope: !10662)
!10669 = !DILocation(line: 3038, column: 5, scope: !10648)
!10670 = !DILocation(line: 3039, column: 9, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3039, column: 9)
!10672 = !DILocation(line: 3039, column: 11, scope: !10671)
!10673 = !DILocation(line: 3039, column: 9, scope: !1851)
!10674 = !DILocation(line: 3040, column: 25, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10671, file: !352, line: 3039, column: 16)
!10676 = !DILocation(line: 3040, column: 9, scope: !10675)
!10677 = !DILocation(line: 3041, column: 9, scope: !10675)
!10678 = !DILocation(line: 3044, column: 28, scope: !1851)
!10679 = !DILocation(line: 3044, column: 30, scope: !1851)
!10680 = !DILocation(line: 3044, column: 15, scope: !1851)
!10681 = !DILocation(line: 3044, column: 13, scope: !1851)
!10682 = !DILocation(line: 3045, column: 27, scope: !1851)
!10683 = !DILocation(line: 3045, column: 29, scope: !1851)
!10684 = !DILocation(line: 3045, column: 14, scope: !1851)
!10685 = !DILocation(line: 3045, column: 12, scope: !1851)
!10686 = !DILocation(line: 3046, column: 9, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3046, column: 9)
!10688 = !DILocation(line: 3046, column: 17, scope: !10687)
!10689 = !DILocation(line: 3046, column: 31, scope: !10687)
!10690 = !DILocation(line: 3046, column: 34, scope: !10691)
!10691 = !DILexicalBlockFile(scope: !10687, file: !352, discriminator: 1)
!10692 = !DILocation(line: 3046, column: 41, scope: !10687)
!10693 = !DILocation(line: 3046, column: 9, scope: !1851)
!10694 = !DILocation(line: 3047, column: 9, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10687, file: !352, line: 3046, column: 56)
!10696 = !DILocation(line: 3048, column: 9, scope: !10695)
!10697 = !DILocation(line: 3051, column: 11, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3051, column: 5)
!10699 = !DILocation(line: 3051, column: 10, scope: !10698)
!10700 = !DILocation(line: 3051, column: 16, scope: !10701)
!10701 = !DILexicalBlockFile(scope: !10702, file: !352, discriminator: 2)
!10702 = !DILexicalBlockFile(scope: !10703, file: !352, discriminator: 1)
!10703 = distinct !DILexicalBlock(scope: !10698, file: !352, line: 3051, column: 5)
!10704 = !DILocation(line: 3051, column: 18, scope: !10703)
!10705 = !DILocation(line: 3051, column: 17, scope: !10703)
!10706 = !DILocation(line: 3051, column: 5, scope: !10698)
!10707 = !DILocation(line: 3052, column: 22, scope: !10703)
!10708 = !DILocation(line: 3052, column: 17, scope: !10703)
!10709 = !DILocation(line: 3052, column: 9, scope: !10703)
!10710 = !DILocation(line: 3052, column: 20, scope: !10703)
!10711 = !DILocation(line: 3051, column: 23, scope: !10703)
!10712 = !DILocation(line: 3051, column: 5, scope: !10703)
!10713 = !DILocation(line: 3053, column: 11, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3053, column: 5)
!10715 = !DILocation(line: 3053, column: 10, scope: !10714)
!10716 = !DILocation(line: 3053, column: 16, scope: !10717)
!10717 = !DILexicalBlockFile(scope: !10718, file: !352, discriminator: 2)
!10718 = !DILexicalBlockFile(scope: !10719, file: !352, discriminator: 1)
!10719 = distinct !DILexicalBlock(scope: !10714, file: !352, line: 3053, column: 5)
!10720 = !DILocation(line: 3053, column: 18, scope: !10719)
!10721 = !DILocation(line: 3053, column: 17, scope: !10719)
!10722 = !DILocation(line: 3053, column: 5, scope: !10714)
!10723 = !DILocation(line: 3054, column: 21, scope: !10719)
!10724 = !DILocation(line: 3054, column: 25, scope: !10719)
!10725 = !DILocation(line: 3054, column: 23, scope: !10719)
!10726 = !DILocation(line: 3054, column: 16, scope: !10719)
!10727 = !DILocation(line: 3054, column: 9, scope: !10719)
!10728 = !DILocation(line: 3054, column: 19, scope: !10719)
!10729 = !DILocation(line: 3053, column: 23, scope: !10719)
!10730 = !DILocation(line: 3053, column: 5, scope: !10719)
!10731 = !DILocation(line: 3057, column: 32, scope: !1851)
!10732 = !DILocation(line: 3057, column: 38, scope: !1851)
!10733 = !DILocation(line: 3057, column: 47, scope: !1851)
!10734 = !DILocation(line: 3057, column: 10, scope: !1851)
!10735 = !DILocation(line: 3057, column: 8, scope: !1851)
!10736 = !DILocation(line: 3058, column: 9, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3058, column: 9)
!10738 = !DILocation(line: 3058, column: 12, scope: !10737)
!10739 = !DILocation(line: 3058, column: 9, scope: !1851)
!10740 = !DILocation(line: 3059, column: 9, scope: !10737)
!10741 = !DILocation(line: 3061, column: 16, scope: !1851)
!10742 = !DILocation(line: 3061, column: 5, scope: !1851)
!10743 = !DILocation(line: 3061, column: 9, scope: !1851)
!10744 = !DILocation(line: 3061, column: 14, scope: !1851)
!10745 = !DILocation(line: 3062, column: 19, scope: !1851)
!10746 = !DILocation(line: 3062, column: 5, scope: !1851)
!10747 = !DILocation(line: 3062, column: 9, scope: !1851)
!10748 = !DILocation(line: 3062, column: 17, scope: !1851)
!10749 = !DILocation(line: 3063, column: 18, scope: !1851)
!10750 = !DILocation(line: 3063, column: 5, scope: !1851)
!10751 = !DILocation(line: 3063, column: 9, scope: !1851)
!10752 = !DILocation(line: 3063, column: 16, scope: !1851)
!10753 = !DILocation(line: 3064, column: 5, scope: !1851)
!10754 = !DILocation(line: 3064, column: 9, scope: !1851)
!10755 = !DILocation(line: 3064, column: 16, scope: !1851)
!10756 = !DILocation(line: 3065, column: 13, scope: !1851)
!10757 = !DILocation(line: 3065, column: 5, scope: !1851)
!10758 = !DILocation(line: 3065, column: 9, scope: !1851)
!10759 = !DILocation(line: 3065, column: 11, scope: !1851)
!10760 = !DILocation(line: 3066, column: 19, scope: !1851)
!10761 = !DILocation(line: 3066, column: 23, scope: !1851)
!10762 = !DILocation(line: 3066, column: 21, scope: !1851)
!10763 = !DILocation(line: 3066, column: 5, scope: !1851)
!10764 = !DILocation(line: 3066, column: 9, scope: !1851)
!10765 = !DILocation(line: 3066, column: 17, scope: !1851)
!10766 = !DILocation(line: 3068, column: 24, scope: !1851)
!10767 = !DILocation(line: 3068, column: 12, scope: !1851)
!10768 = !DILocation(line: 3068, column: 5, scope: !1851)
!10769 = !DILocation(line: 3071, column: 9, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3071, column: 9)
!10771 = !DILocation(line: 3071, column: 17, scope: !10770)
!10772 = !DILocation(line: 3071, column: 9, scope: !1851)
!10773 = !DILocation(line: 3072, column: 20, scope: !10770)
!10774 = !DILocation(line: 3072, column: 9, scope: !10770)
!10775 = !DILocation(line: 3073, column: 9, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !1851, file: !352, line: 3073, column: 9)
!10777 = !DILocation(line: 3073, column: 16, scope: !10776)
!10778 = !DILocation(line: 3073, column: 9, scope: !1851)
!10779 = !DILocation(line: 3074, column: 20, scope: !10776)
!10780 = !DILocation(line: 3074, column: 9, scope: !10776)
!10781 = !DILocation(line: 3075, column: 5, scope: !1851)
!10782 = !DILocation(line: 3075, column: 10, scope: !10783)
!10783 = !DILexicalBlockFile(scope: !1866, file: !352, discriminator: 1)
!10784 = !DILocation(line: 3075, column: 20, scope: !1866)
!10785 = !DILocation(line: 3075, column: 51, scope: !1866)
!10786 = !DILocation(line: 3075, column: 62, scope: !1869)
!10787 = !DILocation(line: 3075, column: 78, scope: !1869)
!10788 = !DILocation(line: 3075, column: 62, scope: !1866)
!10789 = !DILocation(line: 3075, column: 93, scope: !10790)
!10790 = !DILexicalBlockFile(scope: !1869, file: !352, discriminator: 2)
!10791 = !DILocation(line: 3075, column: 98, scope: !10792)
!10792 = !DILexicalBlockFile(scope: !1868, file: !352, discriminator: 4)
!10793 = !DILocation(line: 3075, column: 108, scope: !1868)
!10794 = !DILocation(line: 3075, column: 138, scope: !1868)
!10795 = !DILocation(line: 3075, column: 164, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !1868, file: !352, line: 3075, column: 161)
!10797 = !DILocation(line: 3075, column: 181, scope: !10796)
!10798 = !DILocation(line: 3075, column: 161, scope: !10796)
!10799 = !DILocation(line: 3075, column: 191, scope: !10796)
!10800 = !DILocation(line: 3075, column: 161, scope: !1868)
!10801 = !DILocation(line: 3075, column: 161, scope: !10802)
!10802 = !DILexicalBlockFile(scope: !1868, file: !352, discriminator: 5)
!10803 = !DILocation(line: 3075, column: 222, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !10796, file: !352, discriminator: 6)
!10805 = !DILocation(line: 3075, column: 240, scope: !10796)
!10806 = !DILocation(line: 3075, column: 250, scope: !10796)
!10807 = !DILocation(line: 3075, column: 275, scope: !10796)
!10808 = !DILocation(line: 3075, column: 206, scope: !10796)
!10809 = !DILocation(line: 3075, column: 294, scope: !10810)
!10810 = !DILexicalBlockFile(scope: !1869, file: !352, discriminator: 7)
!10811 = !DILocation(line: 3075, column: 294, scope: !1868)
!10812 = !DILocation(line: 3075, column: 294, scope: !10813)
!10813 = !DILexicalBlockFile(scope: !1868, file: !352, discriminator: 8)
!10814 = !DILocation(line: 3075, column: 294, scope: !10815)
!10815 = !DILexicalBlockFile(scope: !1868, file: !352, discriminator: 9)
!10816 = !DILocation(line: 3075, column: 307, scope: !10817)
!10817 = !DILexicalBlockFile(scope: !10818, file: !352, discriminator: 10)
!10818 = !DILexicalBlockFile(scope: !1851, file: !352, discriminator: 3)
!10819 = !DILocation(line: 3075, column: 307, scope: !1866)
!10820 = !DILocation(line: 3075, column: 307, scope: !10821)
!10821 = !DILexicalBlockFile(scope: !1866, file: !352, discriminator: 11)
!10822 = !DILocation(line: 3076, column: 5, scope: !1851)
!10823 = !DILocation(line: 3077, column: 1, scope: !1851)
!10824 = !DILocation(line: 3201, column: 41, scope: !1785)
!10825 = !DILocation(line: 3203, column: 9, scope: !1791)
!10826 = !DILocation(line: 3203, column: 13, scope: !1791)
!10827 = !DILocation(line: 3203, column: 20, scope: !1791)
!10828 = !DILocation(line: 3203, column: 9, scope: !1785)
!10829 = !DILocation(line: 3204, column: 53, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !1791, file: !352, line: 3203, column: 35)
!10831 = !DILocation(line: 3204, column: 41, scope: !10830)
!10832 = !DILocation(line: 3204, column: 59, scope: !10830)
!10833 = !DILocation(line: 3204, column: 69, scope: !10830)
!10834 = !DILocation(line: 3204, column: 73, scope: !10830)
!10835 = !DILocation(line: 3204, column: 79, scope: !10830)
!10836 = !DILocation(line: 3204, column: 83, scope: !10830)
!10837 = !DILocation(line: 3204, column: 16, scope: !10830)
!10838 = !DILocation(line: 3204, column: 9, scope: !10830)
!10839 = !DILocation(line: 3205, column: 16, scope: !1790)
!10840 = !DILocation(line: 3205, column: 20, scope: !1790)
!10841 = !DILocation(line: 3205, column: 16, scope: !1791)
!10842 = !DILocation(line: 3206, column: 54, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !1790, file: !352, line: 3205, column: 29)
!10844 = !DILocation(line: 3206, column: 42, scope: !10843)
!10845 = !DILocation(line: 3206, column: 60, scope: !10843)
!10846 = !DILocation(line: 3206, column: 70, scope: !10843)
!10847 = !DILocation(line: 3206, column: 74, scope: !10843)
!10848 = !DILocation(line: 3206, column: 16, scope: !10843)
!10849 = !DILocation(line: 3206, column: 9, scope: !10843)
!10850 = !DILocation(line: 3208, column: 9, scope: !1789)
!10851 = !DILocation(line: 3208, column: 19, scope: !1789)
!10852 = !DILocation(line: 3208, column: 40, scope: !1789)
!10853 = !DILocation(line: 3209, column: 9, scope: !1789)
!10854 = !DILocation(line: 3209, column: 20, scope: !1789)
!10855 = !DILocation(line: 3209, column: 23, scope: !1789)
!10856 = !DILocation(line: 3212, column: 30, scope: !1789)
!10857 = !DILocation(line: 3212, column: 34, scope: !1789)
!10858 = !DILocation(line: 3212, column: 15, scope: !1789)
!10859 = !DILocation(line: 3212, column: 42, scope: !1789)
!10860 = !DILocation(line: 3212, column: 11, scope: !1789)
!10861 = !DILocation(line: 3213, column: 31, scope: !1789)
!10862 = !DILocation(line: 3213, column: 19, scope: !1789)
!10863 = !DILocation(line: 3213, column: 17, scope: !1789)
!10864 = !DILocation(line: 3214, column: 13, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !1789, file: !352, line: 3214, column: 13)
!10866 = !DILocation(line: 3214, column: 21, scope: !10865)
!10867 = !DILocation(line: 3214, column: 13, scope: !1789)
!10868 = !DILocation(line: 3215, column: 13, scope: !10865)
!10869 = !DILocation(line: 3216, column: 15, scope: !1798)
!10870 = !DILocation(line: 3216, column: 14, scope: !1798)
!10871 = !DILocation(line: 3216, column: 19, scope: !10872)
!10872 = !DILexicalBlockFile(scope: !10873, file: !352, discriminator: 2)
!10873 = !DILexicalBlockFile(scope: !1797, file: !352, discriminator: 1)
!10874 = !DILocation(line: 3216, column: 21, scope: !1797)
!10875 = !DILocation(line: 3216, column: 20, scope: !1797)
!10876 = !DILocation(line: 3216, column: 9, scope: !1798)
!10877 = !DILocation(line: 3217, column: 13, scope: !1796)
!10878 = !DILocation(line: 3217, column: 23, scope: !1796)
!10879 = !DILocation(line: 3217, column: 62, scope: !1796)
!10880 = !DILocation(line: 3217, column: 50, scope: !1796)
!10881 = !DILocation(line: 3217, column: 54, scope: !1796)
!10882 = !DILocation(line: 3217, column: 31, scope: !1796)
!10883 = !DILocation(line: 3218, column: 18, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !1796, file: !352, line: 3218, column: 17)
!10885 = !DILocation(line: 3218, column: 17, scope: !1796)
!10886 = !DILocation(line: 3219, column: 17, scope: !10884)
!10887 = !DILocation(line: 3220, column: 57, scope: !1796)
!10888 = !DILocation(line: 3220, column: 52, scope: !1796)
!10889 = !DILocation(line: 3220, column: 33, scope: !1796)
!10890 = !DILocation(line: 3220, column: 15, scope: !1796)
!10891 = !DILocation(line: 3220, column: 44, scope: !1796)
!10892 = !DILocation(line: 3220, column: 14, scope: !1796)
!10893 = !DILocation(line: 3220, column: 55, scope: !1796)
!10894 = !DILocation(line: 3221, column: 9, scope: !1797)
!10895 = !DILocation(line: 3221, column: 9, scope: !10873)
!10896 = !DILocation(line: 3221, column: 9, scope: !1796)
!10897 = !DILocation(line: 3216, column: 25, scope: !1797)
!10898 = !DILocation(line: 3216, column: 9, scope: !1797)
!10899 = !DILocation(line: 3223, column: 30, scope: !1789)
!10900 = !DILocation(line: 3223, column: 34, scope: !1789)
!10901 = !DILocation(line: 3223, column: 18, scope: !1789)
!10902 = !DILocation(line: 3223, column: 16, scope: !1789)
!10903 = !DILocation(line: 3224, column: 13, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !1789, file: !352, line: 3224, column: 13)
!10905 = !DILocation(line: 3224, column: 20, scope: !10904)
!10906 = !DILocation(line: 3224, column: 13, scope: !1789)
!10907 = !DILocation(line: 3225, column: 13, scope: !10904)
!10908 = !DILocation(line: 3226, column: 15, scope: !1802)
!10909 = !DILocation(line: 3226, column: 14, scope: !1802)
!10910 = !DILocation(line: 3226, column: 19, scope: !10911)
!10911 = !DILexicalBlockFile(scope: !10912, file: !352, discriminator: 2)
!10912 = !DILexicalBlockFile(scope: !1801, file: !352, discriminator: 1)
!10913 = !DILocation(line: 3226, column: 21, scope: !1801)
!10914 = !DILocation(line: 3226, column: 25, scope: !1801)
!10915 = !DILocation(line: 3226, column: 20, scope: !1801)
!10916 = !DILocation(line: 3226, column: 9, scope: !1802)
!10917 = !DILocation(line: 3228, column: 13, scope: !1800)
!10918 = !DILocation(line: 3228, column: 23, scope: !1800)
!10919 = !DILocation(line: 3228, column: 61, scope: !1800)
!10920 = !DILocation(line: 3228, column: 50, scope: !1800)
!10921 = !DILocation(line: 3228, column: 54, scope: !1800)
!10922 = !DILocation(line: 3228, column: 31, scope: !1800)
!10923 = !DILocation(line: 3229, column: 18, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !1800, file: !352, line: 3229, column: 17)
!10925 = !DILocation(line: 3229, column: 17, scope: !1800)
!10926 = !DILocation(line: 3230, column: 17, scope: !10924)
!10927 = !DILocation(line: 3231, column: 56, scope: !1800)
!10928 = !DILocation(line: 3231, column: 51, scope: !1800)
!10929 = !DILocation(line: 3231, column: 33, scope: !1800)
!10930 = !DILocation(line: 3231, column: 15, scope: !1800)
!10931 = !DILocation(line: 3231, column: 43, scope: !1800)
!10932 = !DILocation(line: 3231, column: 14, scope: !1800)
!10933 = !DILocation(line: 3231, column: 54, scope: !1800)
!10934 = !DILocation(line: 3232, column: 9, scope: !1801)
!10935 = !DILocation(line: 3232, column: 9, scope: !10912)
!10936 = !DILocation(line: 3232, column: 9, scope: !1800)
!10937 = !DILocation(line: 3226, column: 29, scope: !1801)
!10938 = !DILocation(line: 3226, column: 9, scope: !1801)
!10939 = !DILocation(line: 3233, column: 57, scope: !1789)
!10940 = !DILocation(line: 3233, column: 45, scope: !1789)
!10941 = !DILocation(line: 3233, column: 63, scope: !1789)
!10942 = !DILocation(line: 3234, column: 30, scope: !1789)
!10943 = !DILocation(line: 3234, column: 34, scope: !1789)
!10944 = !DILocation(line: 3234, column: 40, scope: !1789)
!10945 = !DILocation(line: 3234, column: 44, scope: !1789)
!10946 = !DILocation(line: 3235, column: 30, scope: !1789)
!10947 = !DILocation(line: 3235, column: 39, scope: !1789)
!10948 = !DILocation(line: 3233, column: 16, scope: !1789)
!10949 = !DILocation(line: 3233, column: 9, scope: !1789)
!10950 = !DILocation(line: 3237, column: 9, scope: !1789)
!10951 = !DILocation(line: 3237, column: 14, scope: !10952)
!10952 = !DILexicalBlockFile(scope: !1804, file: !352, discriminator: 1)
!10953 = !DILocation(line: 3237, column: 24, scope: !1804)
!10954 = !DILocation(line: 3237, column: 55, scope: !1804)
!10955 = !DILocation(line: 3237, column: 69, scope: !1807)
!10956 = !DILocation(line: 3237, column: 85, scope: !1807)
!10957 = !DILocation(line: 3237, column: 69, scope: !1804)
!10958 = !DILocation(line: 3237, column: 100, scope: !10959)
!10959 = !DILexicalBlockFile(scope: !1807, file: !352, discriminator: 2)
!10960 = !DILocation(line: 3237, column: 105, scope: !10961)
!10961 = !DILexicalBlockFile(scope: !1806, file: !352, discriminator: 4)
!10962 = !DILocation(line: 3237, column: 115, scope: !1806)
!10963 = !DILocation(line: 3237, column: 145, scope: !1806)
!10964 = !DILocation(line: 3237, column: 171, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !1806, file: !352, line: 3237, column: 168)
!10966 = !DILocation(line: 3237, column: 188, scope: !10965)
!10967 = !DILocation(line: 3237, column: 168, scope: !10965)
!10968 = !DILocation(line: 3237, column: 198, scope: !10965)
!10969 = !DILocation(line: 3237, column: 168, scope: !1806)
!10970 = !DILocation(line: 3237, column: 168, scope: !10971)
!10971 = !DILexicalBlockFile(scope: !1806, file: !352, discriminator: 5)
!10972 = !DILocation(line: 3237, column: 229, scope: !10973)
!10973 = !DILexicalBlockFile(scope: !10965, file: !352, discriminator: 6)
!10974 = !DILocation(line: 3237, column: 247, scope: !10965)
!10975 = !DILocation(line: 3237, column: 257, scope: !10965)
!10976 = !DILocation(line: 3237, column: 282, scope: !10965)
!10977 = !DILocation(line: 3237, column: 213, scope: !10965)
!10978 = !DILocation(line: 3237, column: 301, scope: !10979)
!10979 = !DILexicalBlockFile(scope: !1807, file: !352, discriminator: 7)
!10980 = !DILocation(line: 3237, column: 301, scope: !1806)
!10981 = !DILocation(line: 3237, column: 301, scope: !10982)
!10982 = !DILexicalBlockFile(scope: !1806, file: !352, discriminator: 8)
!10983 = !DILocation(line: 3237, column: 301, scope: !10984)
!10984 = !DILexicalBlockFile(scope: !1806, file: !352, discriminator: 9)
!10985 = !DILocation(line: 3237, column: 314, scope: !10986)
!10986 = !DILexicalBlockFile(scope: !10987, file: !352, discriminator: 10)
!10987 = !DILexicalBlockFile(scope: !1789, file: !352, discriminator: 3)
!10988 = !DILocation(line: 3237, column: 314, scope: !1804)
!10989 = !DILocation(line: 3237, column: 314, scope: !10990)
!10990 = !DILexicalBlockFile(scope: !1804, file: !352, discriminator: 11)
!10991 = !DILocation(line: 3238, column: 9, scope: !1789)
!10992 = !DILocation(line: 3238, column: 14, scope: !10993)
!10993 = !DILexicalBlockFile(scope: !1809, file: !352, discriminator: 1)
!10994 = !DILocation(line: 3238, column: 24, scope: !1809)
!10995 = !DILocation(line: 3238, column: 55, scope: !1809)
!10996 = !DILocation(line: 3238, column: 68, scope: !1812)
!10997 = !DILocation(line: 3238, column: 84, scope: !1812)
!10998 = !DILocation(line: 3238, column: 68, scope: !1809)
!10999 = !DILocation(line: 3238, column: 99, scope: !11000)
!11000 = !DILexicalBlockFile(scope: !1812, file: !352, discriminator: 2)
!11001 = !DILocation(line: 3238, column: 104, scope: !11002)
!11002 = !DILexicalBlockFile(scope: !1811, file: !352, discriminator: 4)
!11003 = !DILocation(line: 3238, column: 114, scope: !1811)
!11004 = !DILocation(line: 3238, column: 144, scope: !1811)
!11005 = !DILocation(line: 3238, column: 170, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !1811, file: !352, line: 3238, column: 167)
!11007 = !DILocation(line: 3238, column: 187, scope: !11006)
!11008 = !DILocation(line: 3238, column: 167, scope: !11006)
!11009 = !DILocation(line: 3238, column: 197, scope: !11006)
!11010 = !DILocation(line: 3238, column: 167, scope: !1811)
!11011 = !DILocation(line: 3238, column: 167, scope: !11012)
!11012 = !DILexicalBlockFile(scope: !1811, file: !352, discriminator: 5)
!11013 = !DILocation(line: 3238, column: 228, scope: !11014)
!11014 = !DILexicalBlockFile(scope: !11006, file: !352, discriminator: 6)
!11015 = !DILocation(line: 3238, column: 246, scope: !11006)
!11016 = !DILocation(line: 3238, column: 256, scope: !11006)
!11017 = !DILocation(line: 3238, column: 281, scope: !11006)
!11018 = !DILocation(line: 3238, column: 212, scope: !11006)
!11019 = !DILocation(line: 3238, column: 300, scope: !11020)
!11020 = !DILexicalBlockFile(scope: !1812, file: !352, discriminator: 7)
!11021 = !DILocation(line: 3238, column: 300, scope: !1811)
!11022 = !DILocation(line: 3238, column: 300, scope: !11023)
!11023 = !DILexicalBlockFile(scope: !1811, file: !352, discriminator: 8)
!11024 = !DILocation(line: 3238, column: 300, scope: !11025)
!11025 = !DILexicalBlockFile(scope: !1811, file: !352, discriminator: 9)
!11026 = !DILocation(line: 3238, column: 313, scope: !10986)
!11027 = !DILocation(line: 3238, column: 313, scope: !1809)
!11028 = !DILocation(line: 3238, column: 313, scope: !11029)
!11029 = !DILexicalBlockFile(scope: !1809, file: !352, discriminator: 11)
!11030 = !DILocation(line: 3239, column: 9, scope: !1789)
!11031 = !DILocation(line: 3240, column: 5, scope: !1790)
!11032 = !DILocation(line: 3241, column: 1, scope: !1785)
!11033 = !DILocation(line: 3244, column: 43, scope: !1813)
!11034 = !DILocation(line: 3244, column: 57, scope: !1813)
!11035 = !DILocation(line: 3246, column: 5, scope: !1813)
!11036 = !DILocation(line: 3246, column: 15, scope: !1813)
!11037 = !DILocation(line: 3246, column: 25, scope: !1813)
!11038 = !DILocation(line: 3246, column: 34, scope: !1813)
!11039 = !DILocation(line: 3247, column: 5, scope: !1813)
!11040 = !DILocation(line: 3247, column: 16, scope: !1813)
!11041 = !DILocation(line: 3247, column: 19, scope: !1813)
!11042 = !DILocation(line: 3249, column: 27, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3249, column: 9)
!11044 = !DILocation(line: 3249, column: 10, scope: !11043)
!11045 = !DILocation(line: 3249, column: 9, scope: !1813)
!11046 = !DILocation(line: 3252, column: 9, scope: !11043)
!11047 = !DILocation(line: 3254, column: 26, scope: !1813)
!11048 = !DILocation(line: 3254, column: 30, scope: !1813)
!11049 = !DILocation(line: 3254, column: 11, scope: !1813)
!11050 = !DILocation(line: 3254, column: 38, scope: !1813)
!11051 = !DILocation(line: 3254, column: 7, scope: !1813)
!11052 = !DILocation(line: 3255, column: 26, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3255, column: 9)
!11054 = !DILocation(line: 3255, column: 11, scope: !11053)
!11055 = !DILocation(line: 3255, column: 37, scope: !11053)
!11056 = !DILocation(line: 3255, column: 49, scope: !11053)
!11057 = !DILocation(line: 3255, column: 46, scope: !11053)
!11058 = !DILocation(line: 3255, column: 51, scope: !11053)
!11059 = !DILocation(line: 3256, column: 26, scope: !11053)
!11060 = !DILocation(line: 3256, column: 11, scope: !11053)
!11061 = !DILocation(line: 3256, column: 36, scope: !11053)
!11062 = !DILocation(line: 3256, column: 48, scope: !11053)
!11063 = !DILocation(line: 3256, column: 52, scope: !11053)
!11064 = !DILocation(line: 3256, column: 45, scope: !11053)
!11065 = !DILocation(line: 3255, column: 9, scope: !1813)
!11066 = !DILocation(line: 3258, column: 25, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11053, file: !352, line: 3257, column: 5)
!11068 = !DILocation(line: 3258, column: 9, scope: !11067)
!11069 = !DILocation(line: 3259, column: 9, scope: !11067)
!11070 = !DILocation(line: 3262, column: 11, scope: !1827)
!11071 = !DILocation(line: 3262, column: 10, scope: !1827)
!11072 = !DILocation(line: 3262, column: 15, scope: !11073)
!11073 = !DILexicalBlockFile(scope: !11074, file: !352, discriminator: 2)
!11074 = !DILexicalBlockFile(scope: !1826, file: !352, discriminator: 1)
!11075 = !DILocation(line: 3262, column: 17, scope: !1826)
!11076 = !DILocation(line: 3262, column: 16, scope: !1826)
!11077 = !DILocation(line: 3262, column: 5, scope: !1827)
!11078 = !DILocation(line: 3264, column: 9, scope: !1825)
!11079 = !DILocation(line: 3264, column: 19, scope: !1825)
!11080 = !DILocation(line: 3264, column: 72, scope: !1825)
!11081 = !DILocation(line: 3264, column: 53, scope: !1825)
!11082 = !DILocation(line: 3264, column: 35, scope: !1825)
!11083 = !DILocation(line: 3264, column: 64, scope: !1825)
!11084 = !DILocation(line: 3264, column: 34, scope: !1825)
!11085 = !DILocation(line: 3265, column: 9, scope: !1825)
!11086 = !DILocation(line: 3265, column: 20, scope: !1825)
!11087 = !DILocation(line: 3265, column: 45, scope: !1825)
!11088 = !DILocation(line: 3265, column: 28, scope: !1825)
!11089 = !DILocation(line: 3266, column: 13, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !1825, file: !352, line: 3266, column: 13)
!11091 = !DILocation(line: 3266, column: 19, scope: !11090)
!11092 = !DILocation(line: 3266, column: 23, scope: !11090)
!11093 = !DILocation(line: 3266, column: 26, scope: !11094)
!11094 = !DILexicalBlockFile(scope: !11090, file: !352, discriminator: 1)
!11095 = !DILocation(line: 3266, column: 13, scope: !1825)
!11096 = !DILocation(line: 3267, column: 13, scope: !11090)
!11097 = !DILocation(line: 3269, column: 13, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !1825, file: !352, line: 3269, column: 13)
!11099 = !DILocation(line: 3269, column: 19, scope: !11098)
!11100 = !DILocation(line: 3269, column: 13, scope: !1825)
!11101 = !DILocation(line: 3270, column: 19, scope: !11098)
!11102 = !DILocation(line: 3270, column: 13, scope: !11098)
!11103 = !DILocation(line: 3271, column: 18, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11098, file: !352, line: 3271, column: 18)
!11105 = !DILocation(line: 3271, column: 26, scope: !11104)
!11106 = !DILocation(line: 3271, column: 27, scope: !11104)
!11107 = !DILocation(line: 3271, column: 24, scope: !11104)
!11108 = !DILocation(line: 3271, column: 18, scope: !11098)
!11109 = !DILocation(line: 3272, column: 21, scope: !11104)
!11110 = !DILocation(line: 3272, column: 22, scope: !11104)
!11111 = !DILocation(line: 3272, column: 19, scope: !11104)
!11112 = !DILocation(line: 3272, column: 13, scope: !11104)
!11113 = !DILocation(line: 3273, column: 26, scope: !1825)
!11114 = !DILocation(line: 3273, column: 21, scope: !1825)
!11115 = !DILocation(line: 3273, column: 9, scope: !1825)
!11116 = !DILocation(line: 3273, column: 13, scope: !1825)
!11117 = !DILocation(line: 3273, column: 24, scope: !1825)
!11118 = !DILocation(line: 3274, column: 5, scope: !1826)
!11119 = !DILocation(line: 3274, column: 5, scope: !11074)
!11120 = !DILocation(line: 3274, column: 5, scope: !1825)
!11121 = !DILocation(line: 3262, column: 21, scope: !1826)
!11122 = !DILocation(line: 3262, column: 5, scope: !1826)
!11123 = !DILocation(line: 3276, column: 11, scope: !1832)
!11124 = !DILocation(line: 3276, column: 10, scope: !1832)
!11125 = !DILocation(line: 3276, column: 15, scope: !11126)
!11126 = !DILexicalBlockFile(scope: !11127, file: !352, discriminator: 2)
!11127 = !DILexicalBlockFile(scope: !1831, file: !352, discriminator: 1)
!11128 = !DILocation(line: 3276, column: 17, scope: !1831)
!11129 = !DILocation(line: 3276, column: 21, scope: !1831)
!11130 = !DILocation(line: 3276, column: 16, scope: !1831)
!11131 = !DILocation(line: 3276, column: 5, scope: !1832)
!11132 = !DILocation(line: 3278, column: 9, scope: !1830)
!11133 = !DILocation(line: 3278, column: 19, scope: !1830)
!11134 = !DILocation(line: 3278, column: 71, scope: !1830)
!11135 = !DILocation(line: 3278, column: 53, scope: !1830)
!11136 = !DILocation(line: 3278, column: 35, scope: !1830)
!11137 = !DILocation(line: 3278, column: 63, scope: !1830)
!11138 = !DILocation(line: 3278, column: 34, scope: !1830)
!11139 = !DILocation(line: 3279, column: 9, scope: !1830)
!11140 = !DILocation(line: 3279, column: 20, scope: !1830)
!11141 = !DILocation(line: 3279, column: 45, scope: !1830)
!11142 = !DILocation(line: 3279, column: 28, scope: !1830)
!11143 = !DILocation(line: 3280, column: 13, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !1830, file: !352, line: 3280, column: 13)
!11145 = !DILocation(line: 3280, column: 19, scope: !11144)
!11146 = !DILocation(line: 3280, column: 23, scope: !11144)
!11147 = !DILocation(line: 3280, column: 26, scope: !11148)
!11148 = !DILexicalBlockFile(scope: !11144, file: !352, discriminator: 1)
!11149 = !DILocation(line: 3280, column: 13, scope: !1830)
!11150 = !DILocation(line: 3281, column: 13, scope: !11144)
!11151 = !DILocation(line: 3282, column: 13, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !1830, file: !352, line: 3282, column: 13)
!11153 = !DILocation(line: 3282, column: 19, scope: !11152)
!11154 = !DILocation(line: 3282, column: 13, scope: !1830)
!11155 = !DILocation(line: 3283, column: 19, scope: !11152)
!11156 = !DILocation(line: 3283, column: 13, scope: !11152)
!11157 = !DILocation(line: 3284, column: 18, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11152, file: !352, line: 3284, column: 18)
!11159 = !DILocation(line: 3284, column: 26, scope: !11158)
!11160 = !DILocation(line: 3284, column: 28, scope: !11158)
!11161 = !DILocation(line: 3284, column: 27, scope: !11158)
!11162 = !DILocation(line: 3284, column: 24, scope: !11158)
!11163 = !DILocation(line: 3284, column: 18, scope: !11152)
!11164 = !DILocation(line: 3285, column: 21, scope: !11158)
!11165 = !DILocation(line: 3285, column: 23, scope: !11158)
!11166 = !DILocation(line: 3285, column: 22, scope: !11158)
!11167 = !DILocation(line: 3285, column: 19, scope: !11158)
!11168 = !DILocation(line: 3285, column: 13, scope: !11158)
!11169 = !DILocation(line: 3286, column: 25, scope: !1830)
!11170 = !DILocation(line: 3286, column: 20, scope: !1830)
!11171 = !DILocation(line: 3286, column: 9, scope: !1830)
!11172 = !DILocation(line: 3286, column: 13, scope: !1830)
!11173 = !DILocation(line: 3286, column: 23, scope: !1830)
!11174 = !DILocation(line: 3287, column: 5, scope: !1831)
!11175 = !DILocation(line: 3287, column: 5, scope: !11127)
!11176 = !DILocation(line: 3287, column: 5, scope: !1830)
!11177 = !DILocation(line: 3276, column: 25, scope: !1831)
!11178 = !DILocation(line: 3276, column: 5, scope: !1831)
!11179 = !DILocation(line: 3288, column: 26, scope: !1813)
!11180 = !DILocation(line: 3288, column: 30, scope: !1813)
!11181 = !DILocation(line: 3288, column: 14, scope: !1813)
!11182 = !DILocation(line: 3288, column: 12, scope: !1813)
!11183 = !DILocation(line: 3289, column: 9, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !1813, file: !352, line: 3289, column: 9)
!11185 = !DILocation(line: 3289, column: 16, scope: !11184)
!11186 = !DILocation(line: 3289, column: 9, scope: !1813)
!11187 = !DILocation(line: 3290, column: 9, scope: !11184)
!11188 = !DILocation(line: 3291, column: 11, scope: !1837)
!11189 = !DILocation(line: 3291, column: 10, scope: !1837)
!11190 = !DILocation(line: 3291, column: 15, scope: !11191)
!11191 = !DILexicalBlockFile(scope: !11192, file: !352, discriminator: 2)
!11192 = !DILexicalBlockFile(scope: !1836, file: !352, discriminator: 1)
!11193 = !DILocation(line: 3291, column: 17, scope: !1836)
!11194 = !DILocation(line: 3291, column: 21, scope: !1836)
!11195 = !DILocation(line: 3291, column: 16, scope: !1836)
!11196 = !DILocation(line: 3291, column: 5, scope: !1837)
!11197 = !DILocation(line: 3292, column: 9, scope: !1835)
!11198 = !DILocation(line: 3292, column: 19, scope: !1835)
!11199 = !DILocation(line: 3292, column: 81, scope: !1835)
!11200 = !DILocation(line: 3292, column: 69, scope: !1835)
!11201 = !DILocation(line: 3292, column: 73, scope: !1835)
!11202 = !DILocation(line: 3292, column: 49, scope: !1835)
!11203 = !DILocation(line: 3292, column: 53, scope: !1835)
!11204 = !DILocation(line: 3292, column: 31, scope: !1835)
!11205 = !DILocation(line: 3292, column: 61, scope: !1835)
!11206 = !DILocation(line: 3292, column: 30, scope: !1835)
!11207 = !DILocation(line: 3293, column: 25, scope: !1835)
!11208 = !DILocation(line: 3293, column: 36, scope: !1835)
!11209 = !DILocation(line: 3293, column: 45, scope: !1835)
!11210 = !DILocation(line: 3294, column: 52, scope: !1835)
!11211 = !DILocation(line: 3294, column: 47, scope: !1835)
!11212 = !DILocation(line: 3294, column: 29, scope: !1835)
!11213 = !DILocation(line: 3294, column: 11, scope: !1835)
!11214 = !DILocation(line: 3294, column: 39, scope: !1835)
!11215 = !DILocation(line: 3294, column: 10, scope: !1835)
!11216 = !DILocation(line: 3294, column: 50, scope: !1835)
!11217 = !DILocation(line: 3295, column: 5, scope: !1836)
!11218 = !DILocation(line: 3295, column: 5, scope: !1835)
!11219 = !DILocation(line: 3291, column: 25, scope: !1836)
!11220 = !DILocation(line: 3291, column: 5, scope: !1836)
!11221 = !DILocation(line: 3296, column: 5, scope: !1813)
!11222 = !DILocation(line: 3296, column: 10, scope: !11223)
!11223 = !DILexicalBlockFile(scope: !1839, file: !352, discriminator: 1)
!11224 = !DILocation(line: 3296, column: 20, scope: !1839)
!11225 = !DILocation(line: 3296, column: 43, scope: !1839)
!11226 = !DILocation(line: 3296, column: 47, scope: !1839)
!11227 = !DILocation(line: 3296, column: 60, scope: !1843)
!11228 = !DILocation(line: 3296, column: 68, scope: !1843)
!11229 = !DILocation(line: 3296, column: 60, scope: !1839)
!11230 = !DILocation(line: 3296, column: 86, scope: !11231)
!11231 = !DILexicalBlockFile(scope: !1842, file: !352, discriminator: 2)
!11232 = !DILocation(line: 3296, column: 90, scope: !1842)
!11233 = !DILocation(line: 3296, column: 98, scope: !1842)
!11234 = !DILocation(line: 3296, column: 112, scope: !1842)
!11235 = !DILocation(line: 3296, column: 117, scope: !11236)
!11236 = !DILexicalBlockFile(scope: !1841, file: !352, discriminator: 4)
!11237 = !DILocation(line: 3296, column: 127, scope: !1841)
!11238 = !DILocation(line: 3296, column: 157, scope: !1841)
!11239 = !DILocation(line: 3296, column: 175, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !1841, file: !352, line: 3296, column: 172)
!11241 = !DILocation(line: 3296, column: 192, scope: !11240)
!11242 = !DILocation(line: 3296, column: 172, scope: !11240)
!11243 = !DILocation(line: 3296, column: 202, scope: !11240)
!11244 = !DILocation(line: 3296, column: 172, scope: !1841)
!11245 = !DILocation(line: 3296, column: 172, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !1841, file: !352, discriminator: 5)
!11247 = !DILocation(line: 3296, column: 233, scope: !11248)
!11248 = !DILexicalBlockFile(scope: !11240, file: !352, discriminator: 6)
!11249 = !DILocation(line: 3296, column: 251, scope: !11240)
!11250 = !DILocation(line: 3296, column: 261, scope: !11240)
!11251 = !DILocation(line: 3296, column: 286, scope: !11240)
!11252 = !DILocation(line: 3296, column: 217, scope: !11240)
!11253 = !DILocation(line: 3296, column: 305, scope: !11254)
!11254 = !DILexicalBlockFile(scope: !1842, file: !352, discriminator: 7)
!11255 = !DILocation(line: 3296, column: 305, scope: !1841)
!11256 = !DILocation(line: 3296, column: 305, scope: !11257)
!11257 = !DILexicalBlockFile(scope: !1841, file: !352, discriminator: 8)
!11258 = !DILocation(line: 3296, column: 318, scope: !11259)
!11259 = !DILexicalBlockFile(scope: !1842, file: !352, discriminator: 9)
!11260 = !DILocation(line: 3296, column: 320, scope: !11261)
!11261 = !DILexicalBlockFile(scope: !11262, file: !352, discriminator: 10)
!11262 = !DILexicalBlockFile(scope: !1813, file: !352, discriminator: 3)
!11263 = !DILocation(line: 3296, column: 320, scope: !1839)
!11264 = !DILocation(line: 3296, column: 320, scope: !11265)
!11265 = !DILexicalBlockFile(scope: !1839, file: !352, discriminator: 11)
!11266 = !DILocation(line: 3297, column: 18, scope: !1813)
!11267 = !DILocation(line: 3297, column: 5, scope: !1813)
!11268 = !DILocation(line: 3297, column: 9, scope: !1813)
!11269 = !DILocation(line: 3297, column: 16, scope: !1813)
!11270 = !DILocation(line: 3298, column: 58, scope: !1813)
!11271 = !DILocation(line: 3298, column: 5, scope: !1813)
!11272 = !DILocation(line: 3299, column: 1, scope: !1813)
!11273 = !DILocation(line: 3091, column: 41, scope: !1844)
!11274 = !DILocation(line: 3091, column: 51, scope: !1844)
!11275 = !DILocation(line: 3093, column: 5, scope: !1844)
!11276 = !DILocation(line: 3093, column: 16, scope: !1844)
!11277 = !DILocation(line: 3095, column: 9, scope: !1844)
!11278 = !DILocation(line: 3096, column: 29, scope: !1844)
!11279 = !DILocation(line: 3096, column: 33, scope: !1844)
!11280 = !DILocation(line: 3096, column: 14, scope: !1844)
!11281 = !DILocation(line: 3096, column: 41, scope: !1844)
!11282 = !DILocation(line: 3096, column: 50, scope: !1844)
!11283 = !DILocation(line: 3096, column: 9, scope: !1844)
!11284 = !DILocation(line: 3097, column: 12, scope: !1844)
!11285 = !DILocation(line: 3097, column: 16, scope: !1844)
!11286 = !DILocation(line: 3097, column: 18, scope: !1844)
!11287 = !DILocation(line: 3097, column: 9, scope: !1844)
!11288 = !DILocation(line: 3098, column: 31, scope: !1844)
!11289 = !DILocation(line: 3098, column: 12, scope: !1844)
!11290 = !DILocation(line: 3099, column: 1, scope: !1844)
!11291 = !DILocation(line: 3098, column: 5, scope: !1844)
!11292 = !DILocation(line: 2069, column: 32, scope: !1870)
!11293 = !DILocation(line: 2071, column: 25, scope: !1870)
!11294 = !DILocation(line: 2071, column: 5, scope: !1870)
!11295 = !DILocation(line: 2072, column: 5, scope: !1870)
!11296 = !DILocation(line: 2072, column: 10, scope: !11297)
!11297 = !DILexicalBlockFile(scope: !1876, file: !352, discriminator: 1)
!11298 = !DILocation(line: 2072, column: 20, scope: !1876)
!11299 = !DILocation(line: 2072, column: 51, scope: !1876)
!11300 = !DILocation(line: 2072, column: 55, scope: !1876)
!11301 = !{!11302, !2680, i64 16}
!11302 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2680, i64 32, !2692, i64 40}
!11303 = !DILocation(line: 2072, column: 67, scope: !1879)
!11304 = !DILocation(line: 2072, column: 83, scope: !1879)
!11305 = !DILocation(line: 2072, column: 67, scope: !1876)
!11306 = !DILocation(line: 2072, column: 98, scope: !11307)
!11307 = !DILexicalBlockFile(scope: !1879, file: !352, discriminator: 2)
!11308 = !DILocation(line: 2072, column: 103, scope: !11309)
!11309 = !DILexicalBlockFile(scope: !1878, file: !352, discriminator: 4)
!11310 = !DILocation(line: 2072, column: 113, scope: !1878)
!11311 = !DILocation(line: 2072, column: 143, scope: !1878)
!11312 = !DILocation(line: 2072, column: 169, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !1878, file: !352, line: 2072, column: 166)
!11314 = !DILocation(line: 2072, column: 186, scope: !11313)
!11315 = !DILocation(line: 2072, column: 166, scope: !11313)
!11316 = !DILocation(line: 2072, column: 196, scope: !11313)
!11317 = !DILocation(line: 2072, column: 166, scope: !1878)
!11318 = !DILocation(line: 2072, column: 166, scope: !11319)
!11319 = !DILexicalBlockFile(scope: !1878, file: !352, discriminator: 5)
!11320 = !DILocation(line: 2072, column: 227, scope: !11321)
!11321 = !DILexicalBlockFile(scope: !11313, file: !352, discriminator: 6)
!11322 = !DILocation(line: 2072, column: 245, scope: !11313)
!11323 = !DILocation(line: 2072, column: 255, scope: !11313)
!11324 = !DILocation(line: 2072, column: 280, scope: !11313)
!11325 = !DILocation(line: 2072, column: 211, scope: !11313)
!11326 = !DILocation(line: 2072, column: 299, scope: !11327)
!11327 = !DILexicalBlockFile(scope: !1879, file: !352, discriminator: 7)
!11328 = !DILocation(line: 2072, column: 299, scope: !1878)
!11329 = !DILocation(line: 2072, column: 299, scope: !11330)
!11330 = !DILexicalBlockFile(scope: !1878, file: !352, discriminator: 8)
!11331 = !DILocation(line: 2072, column: 299, scope: !11332)
!11332 = !DILexicalBlockFile(scope: !1878, file: !352, discriminator: 9)
!11333 = !DILocation(line: 2072, column: 312, scope: !11334)
!11334 = !DILexicalBlockFile(scope: !11335, file: !352, discriminator: 10)
!11335 = !DILexicalBlockFile(scope: !1870, file: !352, discriminator: 3)
!11336 = !DILocation(line: 2072, column: 312, scope: !1876)
!11337 = !DILocation(line: 2073, column: 5, scope: !1870)
!11338 = !DILocation(line: 2073, column: 10, scope: !11339)
!11339 = !DILexicalBlockFile(scope: !1881, file: !352, discriminator: 1)
!11340 = !DILocation(line: 2073, column: 20, scope: !1881)
!11341 = !DILocation(line: 2073, column: 51, scope: !1881)
!11342 = !DILocation(line: 2073, column: 55, scope: !1881)
!11343 = !{!11302, !2680, i64 32}
!11344 = !DILocation(line: 2073, column: 68, scope: !1884)
!11345 = !DILocation(line: 2073, column: 84, scope: !1884)
!11346 = !DILocation(line: 2073, column: 68, scope: !1881)
!11347 = !DILocation(line: 2073, column: 99, scope: !11348)
!11348 = !DILexicalBlockFile(scope: !1884, file: !352, discriminator: 2)
!11349 = !DILocation(line: 2073, column: 104, scope: !11350)
!11350 = !DILexicalBlockFile(scope: !1883, file: !352, discriminator: 4)
!11351 = !DILocation(line: 2073, column: 114, scope: !1883)
!11352 = !DILocation(line: 2073, column: 144, scope: !1883)
!11353 = !DILocation(line: 2073, column: 170, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !1883, file: !352, line: 2073, column: 167)
!11355 = !DILocation(line: 2073, column: 187, scope: !11354)
!11356 = !DILocation(line: 2073, column: 167, scope: !11354)
!11357 = !DILocation(line: 2073, column: 197, scope: !11354)
!11358 = !DILocation(line: 2073, column: 167, scope: !1883)
!11359 = !DILocation(line: 2073, column: 167, scope: !11360)
!11360 = !DILexicalBlockFile(scope: !1883, file: !352, discriminator: 5)
!11361 = !DILocation(line: 2073, column: 228, scope: !11362)
!11362 = !DILexicalBlockFile(scope: !11354, file: !352, discriminator: 6)
!11363 = !DILocation(line: 2073, column: 246, scope: !11354)
!11364 = !DILocation(line: 2073, column: 256, scope: !11354)
!11365 = !DILocation(line: 2073, column: 281, scope: !11354)
!11366 = !DILocation(line: 2073, column: 212, scope: !11354)
!11367 = !DILocation(line: 2073, column: 300, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !1884, file: !352, discriminator: 7)
!11369 = !DILocation(line: 2073, column: 300, scope: !1883)
!11370 = !DILocation(line: 2073, column: 300, scope: !11371)
!11371 = !DILexicalBlockFile(scope: !1883, file: !352, discriminator: 8)
!11372 = !DILocation(line: 2073, column: 300, scope: !11373)
!11373 = !DILexicalBlockFile(scope: !1883, file: !352, discriminator: 9)
!11374 = !DILocation(line: 2073, column: 313, scope: !11334)
!11375 = !DILocation(line: 2073, column: 313, scope: !1881)
!11376 = !DILocation(line: 2074, column: 9, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !1870, file: !352, line: 2074, column: 9)
!11378 = !DILocation(line: 2074, column: 13, scope: !11377)
!11379 = !{!11302, !2680, i64 24}
!11380 = !DILocation(line: 2074, column: 21, scope: !11377)
!11381 = !DILocation(line: 2074, column: 9, scope: !1870)
!11382 = !DILocation(line: 2075, column: 20, scope: !11377)
!11383 = !DILocation(line: 2075, column: 24, scope: !11377)
!11384 = !DILocation(line: 2075, column: 9, scope: !11377)
!11385 = !DILocation(line: 2076, column: 19, scope: !1870)
!11386 = !DILocation(line: 2076, column: 7, scope: !1870)
!11387 = !DILocation(line: 2076, column: 25, scope: !1870)
!11388 = !DILocation(line: 2076, column: 35, scope: !1870)
!11389 = !DILocation(line: 2076, column: 43, scope: !1870)
!11390 = !DILocation(line: 2076, column: 5, scope: !1870)
!11391 = !DILocation(line: 2077, column: 1, scope: !1870)
!11392 = !DILocation(line: 2092, column: 33, scope: !1885)
!11393 = !DILocation(line: 2092, column: 47, scope: !1885)
!11394 = !DILocation(line: 2092, column: 60, scope: !1885)
!11395 = !DILocation(line: 2094, column: 5, scope: !1885)
!11396 = !DILocation(line: 2094, column: 14, scope: !11397)
!11397 = !DILexicalBlockFile(scope: !1894, file: !352, discriminator: 1)
!11398 = !DILocation(line: 2094, column: 18, scope: !1894)
!11399 = !DILocation(line: 2094, column: 14, scope: !1894)
!11400 = !DILocation(line: 2094, column: 14, scope: !1895)
!11401 = !DILocation(line: 2094, column: 27, scope: !11402)
!11402 = !DILexicalBlockFile(scope: !1893, file: !352, discriminator: 2)
!11403 = !DILocation(line: 2094, column: 31, scope: !1893)
!11404 = !DILocation(line: 2094, column: 38, scope: !1893)
!11405 = !DILocation(line: 2094, column: 57, scope: !1893)
!11406 = !DILocation(line: 2094, column: 61, scope: !1893)
!11407 = !DILocation(line: 2094, column: 69, scope: !1893)
!11408 = !DILocation(line: 2094, column: 79, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !1893, file: !352, line: 2094, column: 79)
!11410 = !DILocation(line: 2094, column: 79, scope: !1893)
!11411 = !DILocation(line: 2094, column: 92, scope: !11412)
!11412 = !DILexicalBlockFile(scope: !11409, file: !352, discriminator: 4)
!11413 = !DILocation(line: 2094, column: 85, scope: !11409)
!11414 = !DILocation(line: 2094, column: 98, scope: !11415)
!11415 = !DILexicalBlockFile(scope: !1894, file: !352, discriminator: 5)
!11416 = !DILocation(line: 2094, column: 98, scope: !11417)
!11417 = !DILexicalBlockFile(scope: !11418, file: !352, discriminator: 7)
!11418 = !DILexicalBlockFile(scope: !1894, file: !352, discriminator: 6)
!11419 = !DILocation(line: 2094, column: 98, scope: !1893)
!11420 = !DILocation(line: 2094, column: 100, scope: !11421)
!11421 = !DILexicalBlockFile(scope: !11422, file: !352, discriminator: 8)
!11422 = !DILexicalBlockFile(scope: !1895, file: !352, discriminator: 3)
!11423 = !DILocation(line: 2095, column: 5, scope: !1885)
!11424 = !DILocation(line: 2095, column: 14, scope: !11425)
!11425 = !DILexicalBlockFile(scope: !1898, file: !352, discriminator: 1)
!11426 = !DILocation(line: 2095, column: 18, scope: !1898)
!11427 = !DILocation(line: 2095, column: 14, scope: !1898)
!11428 = !DILocation(line: 2095, column: 14, scope: !1899)
!11429 = !DILocation(line: 2095, column: 28, scope: !11430)
!11430 = !DILexicalBlockFile(scope: !1897, file: !352, discriminator: 2)
!11431 = !DILocation(line: 2095, column: 32, scope: !1897)
!11432 = !DILocation(line: 2095, column: 39, scope: !1897)
!11433 = !DILocation(line: 2095, column: 58, scope: !1897)
!11434 = !DILocation(line: 2095, column: 62, scope: !1897)
!11435 = !DILocation(line: 2095, column: 71, scope: !1897)
!11436 = !DILocation(line: 2095, column: 81, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !1897, file: !352, line: 2095, column: 81)
!11438 = !DILocation(line: 2095, column: 81, scope: !1897)
!11439 = !DILocation(line: 2095, column: 94, scope: !11440)
!11440 = !DILexicalBlockFile(scope: !11437, file: !352, discriminator: 4)
!11441 = !DILocation(line: 2095, column: 87, scope: !11437)
!11442 = !DILocation(line: 2095, column: 100, scope: !11443)
!11443 = !DILexicalBlockFile(scope: !1898, file: !352, discriminator: 5)
!11444 = !DILocation(line: 2095, column: 100, scope: !11445)
!11445 = !DILexicalBlockFile(scope: !11446, file: !352, discriminator: 7)
!11446 = !DILexicalBlockFile(scope: !1898, file: !352, discriminator: 6)
!11447 = !DILocation(line: 2095, column: 100, scope: !1897)
!11448 = !DILocation(line: 2095, column: 102, scope: !11449)
!11449 = !DILexicalBlockFile(scope: !11450, file: !352, discriminator: 8)
!11450 = !DILexicalBlockFile(scope: !1899, file: !352, discriminator: 3)
!11451 = !DILocation(line: 2096, column: 5, scope: !1885)
!11452 = !DILocation(line: 2097, column: 1, scope: !1885)
!11453 = !DILocation(line: 2100, column: 29, scope: !1900)
!11454 = !DILocation(line: 2102, column: 5, scope: !1900)
!11455 = !DILocation(line: 2102, column: 15, scope: !1900)
!11456 = !DILocation(line: 2103, column: 5, scope: !1900)
!11457 = !DILocation(line: 2103, column: 15, scope: !1900)
!11458 = !DILocation(line: 2104, column: 5, scope: !1900)
!11459 = !DILocation(line: 2104, column: 15, scope: !1900)
!11460 = !DILocation(line: 2105, column: 5, scope: !1900)
!11461 = !DILocation(line: 2105, column: 15, scope: !1900)
!11462 = !DILocation(line: 2105, column: 23, scope: !1900)
!11463 = !DILocation(line: 2105, column: 27, scope: !1900)
!11464 = !DILocation(line: 2106, column: 5, scope: !1900)
!11465 = !DILocation(line: 2106, column: 15, scope: !1900)
!11466 = !DILocation(line: 2106, column: 24, scope: !1900)
!11467 = !DILocation(line: 2106, column: 28, scope: !1900)
!11468 = !DILocation(line: 2107, column: 5, scope: !1900)
!11469 = !DILocation(line: 2107, column: 16, scope: !1900)
!11470 = !DILocation(line: 2107, column: 42, scope: !1900)
!11471 = !DILocation(line: 2107, column: 27, scope: !1900)
!11472 = !DILocation(line: 2107, column: 51, scope: !1900)
!11473 = !DILocation(line: 2108, column: 5, scope: !1900)
!11474 = !DILocation(line: 2108, column: 16, scope: !1900)
!11475 = !DILocation(line: 2110, column: 9, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !1900, file: !352, line: 2110, column: 9)
!11477 = !DILocation(line: 2110, column: 13, scope: !11476)
!11478 = !{!11302, !2692, i64 40}
!11479 = !DILocation(line: 2110, column: 9, scope: !1900)
!11480 = !DILocation(line: 2111, column: 9, scope: !11476)
!11481 = !DILocation(line: 2113, column: 9, scope: !1914)
!11482 = !DILocation(line: 2113, column: 16, scope: !1914)
!11483 = !DILocation(line: 2113, column: 9, scope: !1900)
!11484 = !DILocation(line: 2116, column: 30, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !1914, file: !352, line: 2113, column: 31)
!11486 = !DILocation(line: 2116, column: 18, scope: !11485)
!11487 = !DILocation(line: 2116, column: 16, scope: !11485)
!11488 = !DILocation(line: 2117, column: 13, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11485, file: !352, line: 2117, column: 13)
!11490 = !DILocation(line: 2117, column: 20, scope: !11489)
!11491 = !DILocation(line: 2117, column: 13, scope: !11485)
!11492 = !DILocation(line: 2118, column: 13, scope: !11489)
!11493 = !DILocation(line: 2119, column: 22, scope: !11485)
!11494 = !DILocation(line: 2119, column: 9, scope: !11485)
!11495 = !DILocation(line: 2119, column: 13, scope: !11485)
!11496 = !DILocation(line: 2119, column: 20, scope: !11485)
!11497 = !DILocation(line: 2120, column: 15, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11485, file: !352, line: 2120, column: 9)
!11499 = !DILocation(line: 2120, column: 14, scope: !11498)
!11500 = !DILocation(line: 2120, column: 19, scope: !11501)
!11501 = !DILexicalBlockFile(scope: !11502, file: !352, discriminator: 2)
!11502 = !DILexicalBlockFile(scope: !11503, file: !352, discriminator: 1)
!11503 = distinct !DILexicalBlock(scope: !11498, file: !352, line: 2120, column: 9)
!11504 = !DILocation(line: 2120, column: 23, scope: !11503)
!11505 = !DILocation(line: 2120, column: 21, scope: !11503)
!11506 = !DILocation(line: 2120, column: 9, scope: !11498)
!11507 = !DILocation(line: 2121, column: 57, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11503, file: !352, line: 2120, column: 36)
!11509 = !DILocation(line: 2121, column: 40, scope: !11508)
!11510 = !DILocation(line: 2121, column: 22, scope: !11508)
!11511 = !DILocation(line: 2121, column: 49, scope: !11508)
!11512 = !DILocation(line: 2121, column: 21, scope: !11508)
!11513 = !DILocation(line: 2121, column: 18, scope: !11508)
!11514 = !DILocation(line: 2122, column: 34, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11508, file: !352, line: 2122, column: 17)
!11516 = !DILocation(line: 2122, column: 19, scope: !11515)
!11517 = !DILocation(line: 2122, column: 42, scope: !11515)
!11518 = !DILocation(line: 2122, column: 51, scope: !11515)
!11519 = !DILocation(line: 2122, column: 17, scope: !11508)
!11520 = !DILocation(line: 2123, column: 17, scope: !11515)
!11521 = !DILocation(line: 2124, column: 40, scope: !11508)
!11522 = !DILocation(line: 2124, column: 22, scope: !11508)
!11523 = !DILocation(line: 2124, column: 48, scope: !11508)
!11524 = !DILocation(line: 2124, column: 21, scope: !11508)
!11525 = !DILocation(line: 2124, column: 18, scope: !11508)
!11526 = !DILocation(line: 2125, column: 29, scope: !11508)
!11527 = !DILocation(line: 2125, column: 37, scope: !11508)
!11528 = !DILocation(line: 2125, column: 46, scope: !11508)
!11529 = !DILocation(line: 2126, column: 56, scope: !11508)
!11530 = !DILocation(line: 2126, column: 51, scope: !11508)
!11531 = !DILocation(line: 2126, column: 33, scope: !11508)
!11532 = !DILocation(line: 2126, column: 15, scope: !11508)
!11533 = !DILocation(line: 2126, column: 43, scope: !11508)
!11534 = !DILocation(line: 2126, column: 14, scope: !11508)
!11535 = !DILocation(line: 2126, column: 54, scope: !11508)
!11536 = !DILocation(line: 2127, column: 9, scope: !11508)
!11537 = !DILocation(line: 2120, column: 32, scope: !11503)
!11538 = !DILocation(line: 2120, column: 9, scope: !11503)
!11539 = !DILocation(line: 2128, column: 5, scope: !11485)
!11540 = !DILocation(line: 2129, column: 9, scope: !1913)
!11541 = !DILocation(line: 2129, column: 21, scope: !1913)
!11542 = !DILocation(line: 2129, column: 31, scope: !1913)
!11543 = !DILocation(line: 2129, column: 35, scope: !1913)
!11544 = !DILocation(line: 2132, column: 27, scope: !1917)
!11545 = !DILocation(line: 2132, column: 37, scope: !1917)
!11546 = !DILocation(line: 2132, column: 48, scope: !1917)
!11547 = !DILocation(line: 2132, column: 13, scope: !1913)
!11548 = !DILocation(line: 2133, column: 13, scope: !1916)
!11549 = !DILocation(line: 2133, column: 23, scope: !1916)
!11550 = !DILocation(line: 2133, column: 36, scope: !1916)
!11551 = !DILocation(line: 2134, column: 34, scope: !1916)
!11552 = !DILocation(line: 2134, column: 22, scope: !1916)
!11553 = !DILocation(line: 2134, column: 20, scope: !1916)
!11554 = !DILocation(line: 2135, column: 17, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !1916, file: !352, line: 2135, column: 17)
!11556 = !DILocation(line: 2135, column: 24, scope: !11555)
!11557 = !DILocation(line: 2135, column: 17, scope: !1916)
!11558 = !DILocation(line: 2136, column: 17, scope: !11555)
!11559 = !DILocation(line: 2137, column: 26, scope: !1916)
!11560 = !DILocation(line: 2137, column: 13, scope: !1916)
!11561 = !DILocation(line: 2137, column: 17, scope: !1916)
!11562 = !DILocation(line: 2137, column: 24, scope: !1916)
!11563 = !DILocation(line: 2138, column: 19, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !1916, file: !352, line: 2138, column: 13)
!11565 = !DILocation(line: 2138, column: 18, scope: !11564)
!11566 = !DILocation(line: 2138, column: 23, scope: !11567)
!11567 = !DILexicalBlockFile(scope: !11568, file: !352, discriminator: 2)
!11568 = !DILexicalBlockFile(scope: !11569, file: !352, discriminator: 1)
!11569 = distinct !DILexicalBlock(scope: !11564, file: !352, line: 2138, column: 13)
!11570 = !DILocation(line: 2138, column: 27, scope: !11569)
!11571 = !DILocation(line: 2138, column: 25, scope: !11569)
!11572 = !DILocation(line: 2138, column: 13, scope: !11564)
!11573 = !DILocation(line: 2139, column: 66, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11569, file: !352, line: 2138, column: 40)
!11575 = !DILocation(line: 2139, column: 44, scope: !11574)
!11576 = !DILocation(line: 2139, column: 26, scope: !11574)
!11577 = !DILocation(line: 2139, column: 58, scope: !11574)
!11578 = !DILocation(line: 2139, column: 25, scope: !11574)
!11579 = !DILocation(line: 2139, column: 22, scope: !11574)
!11580 = !DILocation(line: 2140, column: 33, scope: !11574)
!11581 = !DILocation(line: 2140, column: 41, scope: !11574)
!11582 = !DILocation(line: 2140, column: 50, scope: !11574)
!11583 = !DILocation(line: 2141, column: 60, scope: !11574)
!11584 = !DILocation(line: 2141, column: 55, scope: !11574)
!11585 = !DILocation(line: 2141, column: 37, scope: !11574)
!11586 = !DILocation(line: 2141, column: 19, scope: !11574)
!11587 = !DILocation(line: 2141, column: 47, scope: !11574)
!11588 = !DILocation(line: 2141, column: 18, scope: !11574)
!11589 = !DILocation(line: 2141, column: 58, scope: !11574)
!11590 = !DILocation(line: 2142, column: 13, scope: !11574)
!11591 = !DILocation(line: 2138, column: 36, scope: !11569)
!11592 = !DILocation(line: 2138, column: 13, scope: !11569)
!11593 = !DILocation(line: 2143, column: 13, scope: !1916)
!11594 = !DILocation(line: 2143, column: 18, scope: !11595)
!11595 = !DILexicalBlockFile(scope: !1919, file: !352, discriminator: 1)
!11596 = !DILocation(line: 2143, column: 28, scope: !1919)
!11597 = !DILocation(line: 2143, column: 58, scope: !1919)
!11598 = !DILocation(line: 2143, column: 79, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !1919, file: !352, line: 2143, column: 76)
!11600 = !DILocation(line: 2143, column: 96, scope: !11599)
!11601 = !DILocation(line: 2143, column: 76, scope: !11599)
!11602 = !DILocation(line: 2143, column: 106, scope: !11599)
!11603 = !DILocation(line: 2143, column: 76, scope: !1919)
!11604 = !DILocation(line: 2143, column: 76, scope: !11605)
!11605 = !DILexicalBlockFile(scope: !1919, file: !352, discriminator: 2)
!11606 = !DILocation(line: 2143, column: 137, scope: !11607)
!11607 = !DILexicalBlockFile(scope: !11599, file: !352, discriminator: 3)
!11608 = !DILocation(line: 2143, column: 155, scope: !11599)
!11609 = !DILocation(line: 2143, column: 165, scope: !11599)
!11610 = !DILocation(line: 2143, column: 190, scope: !11599)
!11611 = !DILocation(line: 2143, column: 121, scope: !11599)
!11612 = !DILocation(line: 2143, column: 209, scope: !11613)
!11613 = !DILexicalBlockFile(scope: !1916, file: !352, discriminator: 4)
!11614 = !DILocation(line: 2143, column: 209, scope: !1919)
!11615 = !DILocation(line: 2143, column: 209, scope: !11616)
!11616 = !DILexicalBlockFile(scope: !1919, file: !352, discriminator: 5)
!11617 = !DILocation(line: 2144, column: 9, scope: !1917)
!11618 = !DILocation(line: 2144, column: 9, scope: !11619)
!11619 = !DILexicalBlockFile(scope: !1917, file: !352, discriminator: 1)
!11620 = !DILocation(line: 2144, column: 9, scope: !1916)
!11621 = !DILocation(line: 2150, column: 16, scope: !1926)
!11622 = !DILocation(line: 2150, column: 22, scope: !1926)
!11623 = !DILocation(line: 2150, column: 15, scope: !1926)
!11624 = !DILocation(line: 2150, column: 14, scope: !1926)
!11625 = !DILocation(line: 2150, column: 27, scope: !11626)
!11626 = !DILexicalBlockFile(scope: !11627, file: !352, discriminator: 2)
!11627 = !DILexicalBlockFile(scope: !1925, file: !352, discriminator: 1)
!11628 = !DILocation(line: 2150, column: 29, scope: !1925)
!11629 = !DILocation(line: 2150, column: 9, scope: !1926)
!11630 = !DILocation(line: 2151, column: 57, scope: !1924)
!11631 = !DILocation(line: 2151, column: 40, scope: !1924)
!11632 = !DILocation(line: 2151, column: 22, scope: !1924)
!11633 = !DILocation(line: 2151, column: 49, scope: !1924)
!11634 = !DILocation(line: 2151, column: 21, scope: !1924)
!11635 = !DILocation(line: 2151, column: 18, scope: !1924)
!11636 = !DILocation(line: 2152, column: 21, scope: !1924)
!11637 = !DILocation(line: 2152, column: 13, scope: !1924)
!11638 = !DILocation(line: 2152, column: 23, scope: !1924)
!11639 = !DILocation(line: 2153, column: 25, scope: !1923)
!11640 = !DILocation(line: 2153, column: 17, scope: !1923)
!11641 = !DILocation(line: 2153, column: 48, scope: !1923)
!11642 = !DILocation(line: 2153, column: 33, scope: !1923)
!11643 = !DILocation(line: 2153, column: 56, scope: !1923)
!11644 = !DILocation(line: 2153, column: 28, scope: !1923)
!11645 = !DILocation(line: 2153, column: 17, scope: !1924)
!11646 = !DILocation(line: 2155, column: 25, scope: !1922)
!11647 = !DILocation(line: 2155, column: 17, scope: !1922)
!11648 = !DILocation(line: 2155, column: 28, scope: !1922)
!11649 = !DILocation(line: 2156, column: 44, scope: !1922)
!11650 = !DILocation(line: 2156, column: 26, scope: !1922)
!11651 = !DILocation(line: 2156, column: 52, scope: !1922)
!11652 = !DILocation(line: 2156, column: 25, scope: !1922)
!11653 = !DILocation(line: 2156, column: 22, scope: !1922)
!11654 = !DILocation(line: 2157, column: 33, scope: !1922)
!11655 = !DILocation(line: 2157, column: 41, scope: !1922)
!11656 = !DILocation(line: 2157, column: 50, scope: !1922)
!11657 = !DILocation(line: 2158, column: 65, scope: !1922)
!11658 = !DILocation(line: 2158, column: 47, scope: !1922)
!11659 = !DILocation(line: 2158, column: 29, scope: !1922)
!11660 = !DILocation(line: 2158, column: 57, scope: !1922)
!11661 = !DILocation(line: 2158, column: 28, scope: !1922)
!11662 = !DILocation(line: 2158, column: 25, scope: !1922)
!11663 = !DILocation(line: 2159, column: 60, scope: !1922)
!11664 = !DILocation(line: 2159, column: 55, scope: !1922)
!11665 = !DILocation(line: 2159, column: 37, scope: !1922)
!11666 = !DILocation(line: 2159, column: 19, scope: !1922)
!11667 = !DILocation(line: 2159, column: 47, scope: !1922)
!11668 = !DILocation(line: 2159, column: 18, scope: !1922)
!11669 = !DILocation(line: 2159, column: 58, scope: !1922)
!11670 = !DILocation(line: 2160, column: 17, scope: !1922)
!11671 = !DILocation(line: 2160, column: 22, scope: !11672)
!11672 = !DILexicalBlockFile(scope: !1921, file: !352, discriminator: 1)
!11673 = !DILocation(line: 2160, column: 32, scope: !1921)
!11674 = !DILocation(line: 2160, column: 62, scope: !1921)
!11675 = !DILocation(line: 2160, column: 80, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !1921, file: !352, line: 2160, column: 77)
!11677 = !DILocation(line: 2160, column: 97, scope: !11676)
!11678 = !DILocation(line: 2160, column: 77, scope: !11676)
!11679 = !DILocation(line: 2160, column: 107, scope: !11676)
!11680 = !DILocation(line: 2160, column: 77, scope: !1921)
!11681 = !DILocation(line: 2160, column: 77, scope: !11682)
!11682 = !DILexicalBlockFile(scope: !1921, file: !352, discriminator: 2)
!11683 = !DILocation(line: 2160, column: 138, scope: !11684)
!11684 = !DILexicalBlockFile(scope: !11676, file: !352, discriminator: 3)
!11685 = !DILocation(line: 2160, column: 156, scope: !11676)
!11686 = !DILocation(line: 2160, column: 166, scope: !11676)
!11687 = !DILocation(line: 2160, column: 191, scope: !11676)
!11688 = !DILocation(line: 2160, column: 122, scope: !11676)
!11689 = !DILocation(line: 2160, column: 210, scope: !11690)
!11690 = !DILexicalBlockFile(scope: !1922, file: !352, discriminator: 4)
!11691 = !DILocation(line: 2160, column: 210, scope: !1921)
!11692 = !DILocation(line: 2160, column: 210, scope: !11693)
!11693 = !DILexicalBlockFile(scope: !1921, file: !352, discriminator: 5)
!11694 = !DILocation(line: 2161, column: 13, scope: !1922)
!11695 = !DILocation(line: 2163, column: 68, scope: !1929)
!11696 = !DILocation(line: 2163, column: 60, scope: !1929)
!11697 = !DILocation(line: 2163, column: 44, scope: !1929)
!11698 = !DILocation(line: 2163, column: 26, scope: !1929)
!11699 = !DILocation(line: 2163, column: 52, scope: !1929)
!11700 = !DILocation(line: 2163, column: 25, scope: !1929)
!11701 = !DILocation(line: 2163, column: 22, scope: !1929)
!11702 = !DILocation(line: 2164, column: 33, scope: !1929)
!11703 = !DILocation(line: 2164, column: 41, scope: !1929)
!11704 = !DILocation(line: 2164, column: 50, scope: !1929)
!11705 = !DILocation(line: 2165, column: 65, scope: !1929)
!11706 = !DILocation(line: 2165, column: 47, scope: !1929)
!11707 = !DILocation(line: 2165, column: 29, scope: !1929)
!11708 = !DILocation(line: 2165, column: 57, scope: !1929)
!11709 = !DILocation(line: 2165, column: 28, scope: !1929)
!11710 = !DILocation(line: 2165, column: 25, scope: !1929)
!11711 = !DILocation(line: 2166, column: 60, scope: !1929)
!11712 = !DILocation(line: 2166, column: 55, scope: !1929)
!11713 = !DILocation(line: 2166, column: 37, scope: !1929)
!11714 = !DILocation(line: 2166, column: 19, scope: !1929)
!11715 = !DILocation(line: 2166, column: 47, scope: !1929)
!11716 = !DILocation(line: 2166, column: 18, scope: !1929)
!11717 = !DILocation(line: 2166, column: 58, scope: !1929)
!11718 = !DILocation(line: 2167, column: 17, scope: !1929)
!11719 = !DILocation(line: 2167, column: 22, scope: !11720)
!11720 = !DILexicalBlockFile(scope: !1928, file: !352, discriminator: 1)
!11721 = !DILocation(line: 2167, column: 32, scope: !1928)
!11722 = !DILocation(line: 2167, column: 62, scope: !1928)
!11723 = !DILocation(line: 2167, column: 80, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !1928, file: !352, line: 2167, column: 77)
!11725 = !DILocation(line: 2167, column: 97, scope: !11724)
!11726 = !DILocation(line: 2167, column: 77, scope: !11724)
!11727 = !DILocation(line: 2167, column: 107, scope: !11724)
!11728 = !DILocation(line: 2167, column: 77, scope: !1928)
!11729 = !DILocation(line: 2167, column: 77, scope: !11730)
!11730 = !DILexicalBlockFile(scope: !1928, file: !352, discriminator: 2)
!11731 = !DILocation(line: 2167, column: 138, scope: !11732)
!11732 = !DILexicalBlockFile(scope: !11724, file: !352, discriminator: 3)
!11733 = !DILocation(line: 2167, column: 156, scope: !11724)
!11734 = !DILocation(line: 2167, column: 166, scope: !11724)
!11735 = !DILocation(line: 2167, column: 191, scope: !11724)
!11736 = !DILocation(line: 2167, column: 122, scope: !11724)
!11737 = !DILocation(line: 2167, column: 210, scope: !11738)
!11738 = !DILexicalBlockFile(scope: !1929, file: !352, discriminator: 4)
!11739 = !DILocation(line: 2167, column: 210, scope: !1928)
!11740 = !DILocation(line: 2167, column: 210, scope: !11741)
!11741 = !DILexicalBlockFile(scope: !1928, file: !352, discriminator: 5)
!11742 = !DILocation(line: 2168, column: 17, scope: !1929)
!11743 = !DILocation(line: 2170, column: 9, scope: !1924)
!11744 = !DILocation(line: 2150, column: 37, scope: !1925)
!11745 = !DILocation(line: 2150, column: 9, scope: !1925)
!11746 = !DILocation(line: 2174, column: 13, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !1913, file: !352, line: 2174, column: 13)
!11748 = !DILocation(line: 2174, column: 15, scope: !11747)
!11749 = !DILocation(line: 2174, column: 13, scope: !1913)
!11750 = !DILocation(line: 2175, column: 13, scope: !11747)
!11751 = !DILocation(line: 2176, column: 5, scope: !1914)
!11752 = !DILocation(line: 2176, column: 5, scope: !11753)
!11753 = !DILexicalBlockFile(scope: !1914, file: !352, discriminator: 1)
!11754 = !DILocation(line: 2178, column: 21, scope: !1900)
!11755 = !DILocation(line: 2178, column: 31, scope: !1900)
!11756 = !DILocation(line: 2178, column: 40, scope: !1900)
!11757 = !DILocation(line: 2179, column: 12, scope: !1900)
!11758 = !DILocation(line: 2179, column: 5, scope: !1900)
!11759 = !DILocation(line: 2182, column: 5, scope: !1900)
!11760 = !DILocation(line: 2182, column: 9, scope: !1900)
!11761 = !DILocation(line: 2182, column: 17, scope: !1900)
!11762 = !DILocation(line: 2183, column: 5, scope: !1900)
!11763 = !DILocation(line: 2184, column: 1, scope: !1900)
!11764 = !DILocation(line: 1995, column: 27, scope: !1979)
!11765 = !DILocation(line: 1995, column: 43, scope: !1979)
!11766 = !DILocation(line: 1995, column: 59, scope: !1979)
!11767 = !DILocation(line: 1997, column: 5, scope: !1979)
!11768 = !DILocation(line: 1997, column: 20, scope: !1979)
!11769 = !DILocation(line: 1998, column: 5, scope: !1979)
!11770 = !DILocation(line: 1998, column: 16, scope: !1979)
!11771 = !DILocation(line: 1998, column: 23, scope: !1979)
!11772 = !DILocation(line: 1998, column: 31, scope: !1979)
!11773 = !DILocation(line: 1999, column: 5, scope: !1979)
!11774 = !DILocation(line: 1999, column: 15, scope: !1979)
!11775 = !DILocation(line: 2000, column: 5, scope: !1979)
!11776 = !DILocation(line: 2000, column: 17, scope: !1979)
!11777 = !DILocation(line: 2001, column: 5, scope: !1979)
!11778 = !DILocation(line: 2001, column: 16, scope: !1979)
!11779 = !DILocation(line: 2003, column: 9, scope: !1993)
!11780 = !DILocation(line: 2003, column: 14, scope: !1993)
!11781 = !DILocation(line: 2003, column: 9, scope: !1979)
!11782 = !DILocation(line: 2004, column: 9, scope: !1992)
!11783 = !DILocation(line: 2004, column: 15, scope: !1992)
!11784 = !DILocation(line: 2005, column: 9, scope: !1992)
!11785 = !DILocation(line: 2005, column: 19, scope: !1992)
!11786 = !DILocation(line: 2005, column: 29, scope: !1992)
!11787 = !DILocation(line: 2006, column: 13, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !1992, file: !352, line: 2006, column: 13)
!11789 = !DILocation(line: 2006, column: 21, scope: !11788)
!11790 = !DILocation(line: 2006, column: 13, scope: !1992)
!11791 = !DILocation(line: 2007, column: 13, scope: !11788)
!11792 = !DILocation(line: 2008, column: 42, scope: !2001)
!11793 = !DILocation(line: 2008, column: 51, scope: !2001)
!11794 = !DILocation(line: 2008, column: 71, scope: !2001)
!11795 = !DILocation(line: 2008, column: 14, scope: !2001)
!11796 = !DILocation(line: 2008, column: 13, scope: !1992)
!11797 = !DILocation(line: 2009, column: 13, scope: !2000)
!11798 = !DILocation(line: 2009, column: 18, scope: !11799)
!11799 = !DILexicalBlockFile(scope: !1999, file: !352, discriminator: 1)
!11800 = !DILocation(line: 2009, column: 28, scope: !1999)
!11801 = !DILocation(line: 2009, column: 58, scope: !1999)
!11802 = !DILocation(line: 2009, column: 76, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !1999, file: !352, line: 2009, column: 73)
!11804 = !DILocation(line: 2009, column: 93, scope: !11803)
!11805 = !DILocation(line: 2009, column: 73, scope: !11803)
!11806 = !DILocation(line: 2009, column: 103, scope: !11803)
!11807 = !DILocation(line: 2009, column: 73, scope: !1999)
!11808 = !DILocation(line: 2009, column: 73, scope: !11809)
!11809 = !DILexicalBlockFile(scope: !1999, file: !352, discriminator: 2)
!11810 = !DILocation(line: 2009, column: 134, scope: !11811)
!11811 = !DILexicalBlockFile(scope: !11803, file: !352, discriminator: 3)
!11812 = !DILocation(line: 2009, column: 152, scope: !11803)
!11813 = !DILocation(line: 2009, column: 162, scope: !11803)
!11814 = !DILocation(line: 2009, column: 187, scope: !11803)
!11815 = !DILocation(line: 2009, column: 118, scope: !11803)
!11816 = !DILocation(line: 2009, column: 206, scope: !11817)
!11817 = !DILexicalBlockFile(scope: !2000, file: !352, discriminator: 4)
!11818 = !DILocation(line: 2009, column: 206, scope: !1999)
!11819 = !DILocation(line: 2009, column: 206, scope: !11820)
!11820 = !DILexicalBlockFile(scope: !1999, file: !352, discriminator: 5)
!11821 = !DILocation(line: 2010, column: 13, scope: !2000)
!11822 = !DILocation(line: 2012, column: 9, scope: !1992)
!11823 = !DILocation(line: 2012, column: 14, scope: !11824)
!11824 = !DILexicalBlockFile(scope: !2003, file: !352, discriminator: 1)
!11825 = !DILocation(line: 2012, column: 24, scope: !2003)
!11826 = !DILocation(line: 2012, column: 54, scope: !2003)
!11827 = !DILocation(line: 2012, column: 72, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !2003, file: !352, line: 2012, column: 69)
!11829 = !DILocation(line: 2012, column: 89, scope: !11828)
!11830 = !DILocation(line: 2012, column: 69, scope: !11828)
!11831 = !DILocation(line: 2012, column: 99, scope: !11828)
!11832 = !DILocation(line: 2012, column: 69, scope: !2003)
!11833 = !DILocation(line: 2012, column: 69, scope: !11834)
!11834 = !DILexicalBlockFile(scope: !2003, file: !352, discriminator: 2)
!11835 = !DILocation(line: 2012, column: 130, scope: !11836)
!11836 = !DILexicalBlockFile(scope: !11828, file: !352, discriminator: 3)
!11837 = !DILocation(line: 2012, column: 148, scope: !11828)
!11838 = !DILocation(line: 2012, column: 158, scope: !11828)
!11839 = !DILocation(line: 2012, column: 183, scope: !11828)
!11840 = !DILocation(line: 2012, column: 114, scope: !11828)
!11841 = !DILocation(line: 2012, column: 202, scope: !11842)
!11842 = !DILexicalBlockFile(scope: !1992, file: !352, discriminator: 4)
!11843 = !DILocation(line: 2012, column: 202, scope: !2003)
!11844 = !DILocation(line: 2012, column: 202, scope: !11845)
!11845 = !DILexicalBlockFile(scope: !2003, file: !352, discriminator: 5)
!11846 = !DILocation(line: 2013, column: 13, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !1992, file: !352, line: 2013, column: 13)
!11848 = !DILocation(line: 2013, column: 20, scope: !11847)
!11849 = !DILocation(line: 2013, column: 13, scope: !1992)
!11850 = !DILocation(line: 2014, column: 29, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !352, line: 2013, column: 25)
!11852 = !DILocation(line: 2014, column: 13, scope: !11851)
!11853 = !DILocation(line: 2016, column: 13, scope: !11851)
!11854 = !DILocation(line: 2018, column: 5, scope: !1993)
!11855 = !DILocation(line: 2018, column: 5, scope: !11856)
!11856 = !DILexicalBlockFile(scope: !1993, file: !352, discriminator: 1)
!11857 = !DILocation(line: 2018, column: 5, scope: !1992)
!11858 = !DILocation(line: 2021, column: 14, scope: !1979)
!11859 = !DILocation(line: 2021, column: 21, scope: !1979)
!11860 = !DILocation(line: 2021, column: 13, scope: !1979)
!11861 = !DILocation(line: 2021, column: 13, scope: !11862)
!11862 = !DILexicalBlockFile(scope: !1979, file: !352, discriminator: 1)
!11863 = !DILocation(line: 2021, column: 50, scope: !11864)
!11864 = !DILexicalBlockFile(scope: !1979, file: !352, discriminator: 2)
!11865 = !DILocation(line: 2021, column: 35, scope: !1979)
!11866 = !DILocation(line: 2021, column: 58, scope: !1979)
!11867 = !DILocation(line: 2021, column: 11, scope: !11868)
!11868 = !DILexicalBlockFile(scope: !11869, file: !352, discriminator: 4)
!11869 = !DILexicalBlockFile(scope: !1979, file: !352, discriminator: 3)
!11870 = !DILocation(line: 2022, column: 14, scope: !1979)
!11871 = !DILocation(line: 2022, column: 22, scope: !1979)
!11872 = !DILocation(line: 2022, column: 20, scope: !1979)
!11873 = !DILocation(line: 2022, column: 12, scope: !1979)
!11874 = !DILocation(line: 2024, column: 28, scope: !1979)
!11875 = !DILocation(line: 2024, column: 35, scope: !1979)
!11876 = !DILocation(line: 2024, column: 15, scope: !1979)
!11877 = !DILocation(line: 2024, column: 13, scope: !1979)
!11878 = !DILocation(line: 2025, column: 9, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2025, column: 9)
!11880 = !DILocation(line: 2025, column: 17, scope: !11879)
!11881 = !DILocation(line: 2025, column: 9, scope: !1979)
!11882 = !DILocation(line: 2026, column: 9, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11879, file: !352, line: 2025, column: 32)
!11884 = !DILocation(line: 2027, column: 9, scope: !11883)
!11885 = !DILocation(line: 2030, column: 25, scope: !1979)
!11886 = !DILocation(line: 2030, column: 13, scope: !1979)
!11887 = !DILocation(line: 2030, column: 11, scope: !1979)
!11888 = !DILocation(line: 2031, column: 9, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2031, column: 9)
!11890 = !DILocation(line: 2031, column: 15, scope: !11889)
!11891 = !DILocation(line: 2031, column: 9, scope: !1979)
!11892 = !DILocation(line: 2032, column: 9, scope: !11889)
!11893 = !DILocation(line: 2034, column: 11, scope: !2007)
!11894 = !DILocation(line: 2034, column: 10, scope: !2007)
!11895 = !DILocation(line: 2034, column: 15, scope: !11896)
!11896 = !DILexicalBlockFile(scope: !11897, file: !352, discriminator: 2)
!11897 = !DILexicalBlockFile(scope: !2006, file: !352, discriminator: 1)
!11898 = !DILocation(line: 2034, column: 19, scope: !2006)
!11899 = !DILocation(line: 2034, column: 17, scope: !2006)
!11900 = !DILocation(line: 2034, column: 5, scope: !2007)
!11901 = !DILocation(line: 2035, column: 9, scope: !2005)
!11902 = !DILocation(line: 2035, column: 19, scope: !2005)
!11903 = !DILocation(line: 2035, column: 62, scope: !2005)
!11904 = !DILocation(line: 2035, column: 46, scope: !2005)
!11905 = !DILocation(line: 2035, column: 28, scope: !2005)
!11906 = !DILocation(line: 2035, column: 54, scope: !2005)
!11907 = !DILocation(line: 2035, column: 27, scope: !2005)
!11908 = !DILocation(line: 2036, column: 9, scope: !2005)
!11909 = !DILocation(line: 2036, column: 19, scope: !2005)
!11910 = !DILocation(line: 2036, column: 43, scope: !2005)
!11911 = !DILocation(line: 2036, column: 26, scope: !2005)
!11912 = !DILocation(line: 2037, column: 13, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !2005, file: !352, line: 2037, column: 13)
!11914 = !DILocation(line: 2037, column: 18, scope: !11913)
!11915 = !DILocation(line: 2037, column: 13, scope: !2005)
!11916 = !DILocation(line: 2038, column: 13, scope: !11913)
!11917 = !DILocation(line: 2039, column: 51, scope: !2005)
!11918 = !DILocation(line: 2039, column: 46, scope: !2005)
!11919 = !DILocation(line: 2039, column: 29, scope: !2005)
!11920 = !DILocation(line: 2039, column: 11, scope: !2005)
!11921 = !DILocation(line: 2039, column: 38, scope: !2005)
!11922 = !DILocation(line: 2039, column: 10, scope: !2005)
!11923 = !DILocation(line: 2039, column: 49, scope: !2005)
!11924 = !DILocation(line: 2040, column: 17, scope: !2005)
!11925 = !DILocation(line: 2040, column: 9, scope: !2005)
!11926 = !DILocation(line: 2040, column: 20, scope: !2005)
!11927 = !DILocation(line: 2041, column: 5, scope: !2006)
!11928 = !DILocation(line: 2041, column: 5, scope: !11897)
!11929 = !DILocation(line: 2041, column: 5, scope: !2005)
!11930 = !DILocation(line: 2034, column: 27, scope: !2006)
!11931 = !DILocation(line: 2034, column: 5, scope: !2006)
!11932 = !DILocation(line: 2042, column: 5, scope: !1979)
!11933 = !DILocation(line: 2042, column: 13, scope: !11934)
!11934 = !DILexicalBlockFile(scope: !11935, file: !352, discriminator: 2)
!11935 = !DILexicalBlockFile(scope: !2011, file: !352, discriminator: 1)
!11936 = !DILocation(line: 2042, column: 17, scope: !2011)
!11937 = !DILocation(line: 2042, column: 15, scope: !2011)
!11938 = !DILocation(line: 2042, column: 5, scope: !2012)
!11939 = !DILocation(line: 2043, column: 9, scope: !2010)
!11940 = !DILocation(line: 2043, column: 19, scope: !2010)
!11941 = !DILocation(line: 2043, column: 63, scope: !2010)
!11942 = !DILocation(line: 2043, column: 67, scope: !2010)
!11943 = !DILocation(line: 2043, column: 65, scope: !2010)
!11944 = !DILocation(line: 2043, column: 46, scope: !2010)
!11945 = !DILocation(line: 2043, column: 28, scope: !2010)
!11946 = !DILocation(line: 2043, column: 55, scope: !2010)
!11947 = !DILocation(line: 2043, column: 27, scope: !2010)
!11948 = !DILocation(line: 2044, column: 25, scope: !2010)
!11949 = !DILocation(line: 2044, column: 33, scope: !2010)
!11950 = !DILocation(line: 2044, column: 42, scope: !2010)
!11951 = !DILocation(line: 2045, column: 51, scope: !2010)
!11952 = !DILocation(line: 2045, column: 46, scope: !2010)
!11953 = !DILocation(line: 2045, column: 29, scope: !2010)
!11954 = !DILocation(line: 2045, column: 11, scope: !2010)
!11955 = !DILocation(line: 2045, column: 38, scope: !2010)
!11956 = !DILocation(line: 2045, column: 10, scope: !2010)
!11957 = !DILocation(line: 2045, column: 49, scope: !2010)
!11958 = !DILocation(line: 2046, column: 17, scope: !2010)
!11959 = !DILocation(line: 2046, column: 9, scope: !2010)
!11960 = !DILocation(line: 2046, column: 20, scope: !2010)
!11961 = !DILocation(line: 2047, column: 5, scope: !2011)
!11962 = !DILocation(line: 2047, column: 5, scope: !2010)
!11963 = !DILocation(line: 2042, column: 25, scope: !2011)
!11964 = !DILocation(line: 2042, column: 5, scope: !2011)
!11965 = !DILocation(line: 2050, column: 27, scope: !1979)
!11966 = !DILocation(line: 2050, column: 33, scope: !1979)
!11967 = !DILocation(line: 2050, column: 42, scope: !1979)
!11968 = !DILocation(line: 2050, column: 10, scope: !1979)
!11969 = !DILocation(line: 2050, column: 8, scope: !1979)
!11970 = !DILocation(line: 2051, column: 9, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2051, column: 9)
!11972 = !DILocation(line: 2051, column: 12, scope: !11971)
!11973 = !DILocation(line: 2051, column: 9, scope: !1979)
!11974 = !DILocation(line: 2052, column: 9, scope: !11971)
!11975 = !DILocation(line: 2054, column: 17, scope: !1979)
!11976 = !DILocation(line: 2054, column: 5, scope: !1979)
!11977 = !DILocation(line: 2054, column: 9, scope: !1979)
!11978 = !DILocation(line: 2054, column: 15, scope: !1979)
!11979 = !DILocation(line: 2055, column: 19, scope: !1979)
!11980 = !DILocation(line: 2055, column: 5, scope: !1979)
!11981 = !DILocation(line: 2055, column: 9, scope: !1979)
!11982 = !DILocation(line: 2055, column: 17, scope: !1979)
!11983 = !DILocation(line: 2056, column: 5, scope: !1979)
!11984 = !DILocation(line: 2056, column: 9, scope: !1979)
!11985 = !DILocation(line: 2056, column: 16, scope: !1979)
!11986 = !DILocation(line: 2057, column: 5, scope: !1979)
!11987 = !DILocation(line: 2057, column: 9, scope: !1979)
!11988 = !DILocation(line: 2057, column: 17, scope: !1979)
!11989 = !DILocation(line: 2059, column: 24, scope: !1979)
!11990 = !DILocation(line: 2059, column: 12, scope: !1979)
!11991 = !DILocation(line: 2059, column: 5, scope: !1979)
!11992 = !DILocation(line: 2062, column: 9, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !1979, file: !352, line: 2062, column: 9)
!11994 = !DILocation(line: 2062, column: 17, scope: !11993)
!11995 = !DILocation(line: 2062, column: 9, scope: !1979)
!11996 = !DILocation(line: 2063, column: 20, scope: !11993)
!11997 = !DILocation(line: 2063, column: 9, scope: !11993)
!11998 = !DILocation(line: 2064, column: 5, scope: !1979)
!11999 = !DILocation(line: 2064, column: 10, scope: !12000)
!12000 = !DILexicalBlockFile(scope: !2014, file: !352, discriminator: 1)
!12001 = !DILocation(line: 2064, column: 20, scope: !2014)
!12002 = !DILocation(line: 2064, column: 51, scope: !2014)
!12003 = !DILocation(line: 2064, column: 63, scope: !2017)
!12004 = !DILocation(line: 2064, column: 79, scope: !2017)
!12005 = !DILocation(line: 2064, column: 63, scope: !2014)
!12006 = !DILocation(line: 2064, column: 94, scope: !12007)
!12007 = !DILexicalBlockFile(scope: !2017, file: !352, discriminator: 2)
!12008 = !DILocation(line: 2064, column: 99, scope: !12009)
!12009 = !DILexicalBlockFile(scope: !2016, file: !352, discriminator: 4)
!12010 = !DILocation(line: 2064, column: 109, scope: !2016)
!12011 = !DILocation(line: 2064, column: 139, scope: !2016)
!12012 = !DILocation(line: 2064, column: 165, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !2016, file: !352, line: 2064, column: 162)
!12014 = !DILocation(line: 2064, column: 182, scope: !12013)
!12015 = !DILocation(line: 2064, column: 162, scope: !12013)
!12016 = !DILocation(line: 2064, column: 192, scope: !12013)
!12017 = !DILocation(line: 2064, column: 162, scope: !2016)
!12018 = !DILocation(line: 2064, column: 162, scope: !12019)
!12019 = !DILexicalBlockFile(scope: !2016, file: !352, discriminator: 5)
!12020 = !DILocation(line: 2064, column: 223, scope: !12021)
!12021 = !DILexicalBlockFile(scope: !12013, file: !352, discriminator: 6)
!12022 = !DILocation(line: 2064, column: 241, scope: !12013)
!12023 = !DILocation(line: 2064, column: 251, scope: !12013)
!12024 = !DILocation(line: 2064, column: 276, scope: !12013)
!12025 = !DILocation(line: 2064, column: 207, scope: !12013)
!12026 = !DILocation(line: 2064, column: 295, scope: !12027)
!12027 = !DILexicalBlockFile(scope: !2017, file: !352, discriminator: 7)
!12028 = !DILocation(line: 2064, column: 295, scope: !2016)
!12029 = !DILocation(line: 2064, column: 295, scope: !12030)
!12030 = !DILexicalBlockFile(scope: !2016, file: !352, discriminator: 8)
!12031 = !DILocation(line: 2064, column: 295, scope: !12032)
!12032 = !DILexicalBlockFile(scope: !2016, file: !352, discriminator: 9)
!12033 = !DILocation(line: 2064, column: 308, scope: !12034)
!12034 = !DILexicalBlockFile(scope: !11869, file: !352, discriminator: 10)
!12035 = !DILocation(line: 2064, column: 308, scope: !2014)
!12036 = !DILocation(line: 2064, column: 308, scope: !12037)
!12037 = !DILexicalBlockFile(scope: !2014, file: !352, discriminator: 11)
!12038 = !DILocation(line: 2065, column: 5, scope: !1979)
!12039 = !DILocation(line: 2066, column: 1, scope: !1979)
!12040 = !DILocation(line: 2187, column: 31, scope: !1930)
!12041 = !DILocation(line: 2189, column: 9, scope: !1936)
!12042 = !DILocation(line: 2189, column: 13, scope: !1936)
!12043 = !DILocation(line: 2189, column: 9, scope: !1930)
!12044 = !DILocation(line: 2190, column: 53, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !1936, file: !352, line: 2189, column: 22)
!12046 = !DILocation(line: 2190, column: 41, scope: !12045)
!12047 = !DILocation(line: 2190, column: 59, scope: !12045)
!12048 = !DILocation(line: 2190, column: 16, scope: !12045)
!12049 = !DILocation(line: 2190, column: 9, scope: !12045)
!12050 = !DILocation(line: 2191, column: 16, scope: !1935)
!12051 = !DILocation(line: 2191, column: 20, scope: !1935)
!12052 = !DILocation(line: 2191, column: 27, scope: !1935)
!12053 = !DILocation(line: 2191, column: 16, scope: !1936)
!12054 = !DILocation(line: 2192, column: 50, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !1935, file: !352, line: 2191, column: 42)
!12056 = !DILocation(line: 2192, column: 38, scope: !12055)
!12057 = !DILocation(line: 2192, column: 56, scope: !12055)
!12058 = !DILocation(line: 2192, column: 66, scope: !12055)
!12059 = !DILocation(line: 2192, column: 70, scope: !12055)
!12060 = !DILocation(line: 2192, column: 16, scope: !12055)
!12061 = !DILocation(line: 2192, column: 9, scope: !12055)
!12062 = !DILocation(line: 2194, column: 9, scope: !1934)
!12063 = !DILocation(line: 2194, column: 19, scope: !1934)
!12064 = !DILocation(line: 2195, column: 9, scope: !1934)
!12065 = !DILocation(line: 2195, column: 20, scope: !1934)
!12066 = !DILocation(line: 2195, column: 23, scope: !1934)
!12067 = !DILocation(line: 2200, column: 30, scope: !1934)
!12068 = !DILocation(line: 2200, column: 34, scope: !1934)
!12069 = !DILocation(line: 2200, column: 15, scope: !1934)
!12070 = !DILocation(line: 2200, column: 43, scope: !1934)
!12071 = !DILocation(line: 2200, column: 11, scope: !1934)
!12072 = !DILocation(line: 2201, column: 31, scope: !1934)
!12073 = !DILocation(line: 2201, column: 19, scope: !1934)
!12074 = !DILocation(line: 2201, column: 17, scope: !1934)
!12075 = !DILocation(line: 2202, column: 13, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !1934, file: !352, line: 2202, column: 13)
!12077 = !DILocation(line: 2202, column: 21, scope: !12076)
!12078 = !DILocation(line: 2202, column: 13, scope: !1934)
!12079 = !DILocation(line: 2203, column: 13, scope: !12076)
!12080 = !DILocation(line: 2204, column: 15, scope: !1942)
!12081 = !DILocation(line: 2204, column: 14, scope: !1942)
!12082 = !DILocation(line: 2204, column: 19, scope: !12083)
!12083 = !DILexicalBlockFile(scope: !12084, file: !352, discriminator: 2)
!12084 = !DILexicalBlockFile(scope: !1941, file: !352, discriminator: 1)
!12085 = !DILocation(line: 2204, column: 21, scope: !1941)
!12086 = !DILocation(line: 2204, column: 20, scope: !1941)
!12087 = !DILocation(line: 2204, column: 9, scope: !1942)
!12088 = !DILocation(line: 2205, column: 13, scope: !1940)
!12089 = !DILocation(line: 2205, column: 23, scope: !1940)
!12090 = !DILocation(line: 2205, column: 62, scope: !1940)
!12091 = !DILocation(line: 2205, column: 50, scope: !1940)
!12092 = !DILocation(line: 2205, column: 54, scope: !1940)
!12093 = !DILocation(line: 2205, column: 31, scope: !1940)
!12094 = !DILocation(line: 2206, column: 18, scope: !1946)
!12095 = !DILocation(line: 2206, column: 17, scope: !1940)
!12096 = !DILocation(line: 2207, column: 17, scope: !1945)
!12097 = !DILocation(line: 2207, column: 22, scope: !12098)
!12098 = !DILexicalBlockFile(scope: !1944, file: !352, discriminator: 1)
!12099 = !DILocation(line: 2207, column: 32, scope: !1944)
!12100 = !DILocation(line: 2207, column: 62, scope: !1944)
!12101 = !DILocation(line: 2207, column: 80, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !1944, file: !352, line: 2207, column: 77)
!12103 = !DILocation(line: 2207, column: 97, scope: !12102)
!12104 = !DILocation(line: 2207, column: 77, scope: !12102)
!12105 = !DILocation(line: 2207, column: 107, scope: !12102)
!12106 = !DILocation(line: 2207, column: 77, scope: !1944)
!12107 = !DILocation(line: 2207, column: 77, scope: !12108)
!12108 = !DILexicalBlockFile(scope: !1944, file: !352, discriminator: 2)
!12109 = !DILocation(line: 2207, column: 138, scope: !12110)
!12110 = !DILexicalBlockFile(scope: !12102, file: !352, discriminator: 3)
!12111 = !DILocation(line: 2207, column: 156, scope: !12102)
!12112 = !DILocation(line: 2207, column: 166, scope: !12102)
!12113 = !DILocation(line: 2207, column: 191, scope: !12102)
!12114 = !DILocation(line: 2207, column: 122, scope: !12102)
!12115 = !DILocation(line: 2207, column: 210, scope: !12116)
!12116 = !DILexicalBlockFile(scope: !1945, file: !352, discriminator: 4)
!12117 = !DILocation(line: 2207, column: 210, scope: !1944)
!12118 = !DILocation(line: 2207, column: 210, scope: !12119)
!12119 = !DILexicalBlockFile(scope: !1944, file: !352, discriminator: 5)
!12120 = !DILocation(line: 2208, column: 17, scope: !1945)
!12121 = !DILocation(line: 2210, column: 57, scope: !1940)
!12122 = !DILocation(line: 2210, column: 52, scope: !1940)
!12123 = !DILocation(line: 2210, column: 33, scope: !1940)
!12124 = !DILocation(line: 2210, column: 15, scope: !1940)
!12125 = !DILocation(line: 2210, column: 44, scope: !1940)
!12126 = !DILocation(line: 2210, column: 14, scope: !1940)
!12127 = !DILocation(line: 2210, column: 55, scope: !1940)
!12128 = !DILocation(line: 2211, column: 9, scope: !1941)
!12129 = !DILocation(line: 2211, column: 9, scope: !12084)
!12130 = !DILocation(line: 2211, column: 9, scope: !1940)
!12131 = !DILocation(line: 2204, column: 25, scope: !1941)
!12132 = !DILocation(line: 2204, column: 9, scope: !1941)
!12133 = !DILocation(line: 2212, column: 51, scope: !1934)
!12134 = !DILocation(line: 2212, column: 39, scope: !1934)
!12135 = !DILocation(line: 2212, column: 57, scope: !1934)
!12136 = !DILocation(line: 2212, column: 67, scope: !1934)
!12137 = !DILocation(line: 2212, column: 71, scope: !1934)
!12138 = !DILocation(line: 2212, column: 78, scope: !1934)
!12139 = !DILocation(line: 2212, column: 16, scope: !1934)
!12140 = !DILocation(line: 2212, column: 9, scope: !1934)
!12141 = !DILocation(line: 2213, column: 5, scope: !1935)
!12142 = !DILocation(line: 2214, column: 1, scope: !1930)
!12143 = !DILocation(line: 2217, column: 33, scope: !1947)
!12144 = !DILocation(line: 2217, column: 47, scope: !1947)
!12145 = !DILocation(line: 2219, column: 5, scope: !1947)
!12146 = !DILocation(line: 2219, column: 15, scope: !1947)
!12147 = !DILocation(line: 2220, column: 5, scope: !1947)
!12148 = !DILocation(line: 2220, column: 16, scope: !1947)
!12149 = !DILocation(line: 2220, column: 19, scope: !1947)
!12150 = !DILocation(line: 2222, column: 26, scope: !1947)
!12151 = !DILocation(line: 2222, column: 30, scope: !1947)
!12152 = !DILocation(line: 2222, column: 11, scope: !1947)
!12153 = !DILocation(line: 2222, column: 39, scope: !1947)
!12154 = !DILocation(line: 2222, column: 7, scope: !1947)
!12155 = !DILocation(line: 2223, column: 27, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !1947, file: !352, line: 2223, column: 9)
!12157 = !DILocation(line: 2223, column: 36, scope: !12156)
!12158 = !DILocation(line: 2223, column: 47, scope: !12156)
!12159 = !DILocation(line: 2223, column: 56, scope: !12156)
!12160 = !DILocation(line: 2223, column: 73, scope: !12156)
!12161 = !DILocation(line: 2223, column: 79, scope: !12156)
!12162 = !DILocation(line: 2223, column: 99, scope: !12163)
!12163 = !DILexicalBlockFile(scope: !12156, file: !352, discriminator: 1)
!12164 = !DILocation(line: 2223, column: 84, scope: !12156)
!12165 = !DILocation(line: 2223, column: 108, scope: !12156)
!12166 = !DILocation(line: 2223, column: 120, scope: !12156)
!12167 = !DILocation(line: 2223, column: 117, scope: !12156)
!12168 = !DILocation(line: 2223, column: 9, scope: !1947)
!12169 = !DILocation(line: 2224, column: 25, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12156, file: !352, line: 2223, column: 123)
!12171 = !DILocation(line: 2224, column: 9, scope: !12170)
!12172 = !DILocation(line: 2225, column: 9, scope: !12170)
!12173 = !DILocation(line: 2227, column: 11, scope: !1959)
!12174 = !DILocation(line: 2227, column: 10, scope: !1959)
!12175 = !DILocation(line: 2227, column: 15, scope: !12176)
!12176 = !DILexicalBlockFile(scope: !12177, file: !352, discriminator: 2)
!12177 = !DILexicalBlockFile(scope: !1958, file: !352, discriminator: 1)
!12178 = !DILocation(line: 2227, column: 17, scope: !1958)
!12179 = !DILocation(line: 2227, column: 16, scope: !1958)
!12180 = !DILocation(line: 2227, column: 5, scope: !1959)
!12181 = !DILocation(line: 2229, column: 9, scope: !1957)
!12182 = !DILocation(line: 2229, column: 19, scope: !1957)
!12183 = !DILocation(line: 2229, column: 70, scope: !1957)
!12184 = !DILocation(line: 2229, column: 53, scope: !1957)
!12185 = !DILocation(line: 2229, column: 35, scope: !1957)
!12186 = !DILocation(line: 2229, column: 62, scope: !1957)
!12187 = !DILocation(line: 2229, column: 34, scope: !1957)
!12188 = !DILocation(line: 2230, column: 9, scope: !1957)
!12189 = !DILocation(line: 2230, column: 20, scope: !1957)
!12190 = !DILocation(line: 2230, column: 45, scope: !1957)
!12191 = !DILocation(line: 2230, column: 28, scope: !1957)
!12192 = !DILocation(line: 2231, column: 13, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !1957, file: !352, line: 2231, column: 13)
!12194 = !DILocation(line: 2231, column: 19, scope: !12193)
!12195 = !DILocation(line: 2231, column: 23, scope: !12193)
!12196 = !DILocation(line: 2231, column: 26, scope: !12197)
!12197 = !DILexicalBlockFile(scope: !12193, file: !352, discriminator: 1)
!12198 = !DILocation(line: 2231, column: 13, scope: !1957)
!12199 = !DILocation(line: 2232, column: 13, scope: !12193)
!12200 = !DILocation(line: 2234, column: 13, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !1957, file: !352, line: 2234, column: 13)
!12202 = !DILocation(line: 2234, column: 19, scope: !12201)
!12203 = !DILocation(line: 2234, column: 13, scope: !1957)
!12204 = !DILocation(line: 2235, column: 19, scope: !12201)
!12205 = !DILocation(line: 2235, column: 13, scope: !12201)
!12206 = !DILocation(line: 2236, column: 18, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12201, file: !352, line: 2236, column: 18)
!12208 = !DILocation(line: 2236, column: 26, scope: !12207)
!12209 = !DILocation(line: 2236, column: 27, scope: !12207)
!12210 = !DILocation(line: 2236, column: 24, scope: !12207)
!12211 = !DILocation(line: 2236, column: 18, scope: !12201)
!12212 = !DILocation(line: 2237, column: 21, scope: !12207)
!12213 = !DILocation(line: 2237, column: 22, scope: !12207)
!12214 = !DILocation(line: 2237, column: 19, scope: !12207)
!12215 = !DILocation(line: 2237, column: 13, scope: !12207)
!12216 = !DILocation(line: 2238, column: 26, scope: !1957)
!12217 = !DILocation(line: 2238, column: 21, scope: !1957)
!12218 = !DILocation(line: 2238, column: 9, scope: !1957)
!12219 = !DILocation(line: 2238, column: 13, scope: !1957)
!12220 = !DILocation(line: 2238, column: 24, scope: !1957)
!12221 = !DILocation(line: 2239, column: 5, scope: !1958)
!12222 = !DILocation(line: 2239, column: 5, scope: !12177)
!12223 = !DILocation(line: 2239, column: 5, scope: !1957)
!12224 = !DILocation(line: 2227, column: 21, scope: !1958)
!12225 = !DILocation(line: 2227, column: 5, scope: !1958)
!12226 = !DILocation(line: 2241, column: 26, scope: !1947)
!12227 = !DILocation(line: 2241, column: 14, scope: !1947)
!12228 = !DILocation(line: 2241, column: 12, scope: !1947)
!12229 = !DILocation(line: 2242, column: 10, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !1947, file: !352, line: 2242, column: 9)
!12231 = !DILocation(line: 2242, column: 9, scope: !1947)
!12232 = !DILocation(line: 2243, column: 9, scope: !12230)
!12233 = !DILocation(line: 2244, column: 11, scope: !1964)
!12234 = !DILocation(line: 2244, column: 10, scope: !1964)
!12235 = !DILocation(line: 2244, column: 15, scope: !12236)
!12236 = !DILexicalBlockFile(scope: !12237, file: !352, discriminator: 2)
!12237 = !DILexicalBlockFile(scope: !1963, file: !352, discriminator: 1)
!12238 = !DILocation(line: 2244, column: 17, scope: !1963)
!12239 = !DILocation(line: 2244, column: 16, scope: !1963)
!12240 = !DILocation(line: 2244, column: 5, scope: !1964)
!12241 = !DILocation(line: 2245, column: 9, scope: !1962)
!12242 = !DILocation(line: 2245, column: 19, scope: !1962)
!12243 = !DILocation(line: 2245, column: 67, scope: !1962)
!12244 = !DILocation(line: 2245, column: 46, scope: !1962)
!12245 = !DILocation(line: 2245, column: 50, scope: !1962)
!12246 = !DILocation(line: 2245, column: 28, scope: !1962)
!12247 = !DILocation(line: 2245, column: 59, scope: !1962)
!12248 = !DILocation(line: 2245, column: 27, scope: !1962)
!12249 = !DILocation(line: 2246, column: 9, scope: !1962)
!12250 = !DILocation(line: 2246, column: 19, scope: !1962)
!12251 = !DILocation(line: 2246, column: 77, scope: !1962)
!12252 = !DILocation(line: 2246, column: 65, scope: !1962)
!12253 = !DILocation(line: 2246, column: 69, scope: !1962)
!12254 = !DILocation(line: 2246, column: 49, scope: !1962)
!12255 = !DILocation(line: 2246, column: 31, scope: !1962)
!12256 = !DILocation(line: 2246, column: 57, scope: !1962)
!12257 = !DILocation(line: 2246, column: 30, scope: !1962)
!12258 = !DILocation(line: 2247, column: 25, scope: !1962)
!12259 = !DILocation(line: 2247, column: 36, scope: !1962)
!12260 = !DILocation(line: 2247, column: 45, scope: !1962)
!12261 = !DILocation(line: 2248, column: 52, scope: !1962)
!12262 = !DILocation(line: 2248, column: 47, scope: !1962)
!12263 = !DILocation(line: 2248, column: 29, scope: !1962)
!12264 = !DILocation(line: 2248, column: 11, scope: !1962)
!12265 = !DILocation(line: 2248, column: 39, scope: !1962)
!12266 = !DILocation(line: 2248, column: 10, scope: !1962)
!12267 = !DILocation(line: 2248, column: 50, scope: !1962)
!12268 = !DILocation(line: 2249, column: 5, scope: !1963)
!12269 = !DILocation(line: 2249, column: 5, scope: !1962)
!12270 = !DILocation(line: 2244, column: 21, scope: !1963)
!12271 = !DILocation(line: 2244, column: 5, scope: !1963)
!12272 = !DILocation(line: 2250, column: 5, scope: !1947)
!12273 = !DILocation(line: 2250, column: 10, scope: !12274)
!12274 = !DILexicalBlockFile(scope: !1967, file: !352, discriminator: 1)
!12275 = !DILocation(line: 2250, column: 20, scope: !1967)
!12276 = !DILocation(line: 2250, column: 43, scope: !1967)
!12277 = !DILocation(line: 2250, column: 47, scope: !1967)
!12278 = !DILocation(line: 2250, column: 60, scope: !1971)
!12279 = !DILocation(line: 2250, column: 68, scope: !1971)
!12280 = !DILocation(line: 2250, column: 60, scope: !1967)
!12281 = !DILocation(line: 2250, column: 86, scope: !12282)
!12282 = !DILexicalBlockFile(scope: !1970, file: !352, discriminator: 2)
!12283 = !DILocation(line: 2250, column: 90, scope: !1970)
!12284 = !DILocation(line: 2250, column: 98, scope: !1970)
!12285 = !DILocation(line: 2250, column: 112, scope: !1970)
!12286 = !DILocation(line: 2250, column: 117, scope: !12287)
!12287 = !DILexicalBlockFile(scope: !1969, file: !352, discriminator: 4)
!12288 = !DILocation(line: 2250, column: 127, scope: !1969)
!12289 = !DILocation(line: 2250, column: 157, scope: !1969)
!12290 = !DILocation(line: 2250, column: 175, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !1969, file: !352, line: 2250, column: 172)
!12292 = !DILocation(line: 2250, column: 192, scope: !12291)
!12293 = !DILocation(line: 2250, column: 172, scope: !12291)
!12294 = !DILocation(line: 2250, column: 202, scope: !12291)
!12295 = !DILocation(line: 2250, column: 172, scope: !1969)
!12296 = !DILocation(line: 2250, column: 172, scope: !12297)
!12297 = !DILexicalBlockFile(scope: !1969, file: !352, discriminator: 5)
!12298 = !DILocation(line: 2250, column: 233, scope: !12299)
!12299 = !DILexicalBlockFile(scope: !12291, file: !352, discriminator: 6)
!12300 = !DILocation(line: 2250, column: 251, scope: !12291)
!12301 = !DILocation(line: 2250, column: 261, scope: !12291)
!12302 = !DILocation(line: 2250, column: 286, scope: !12291)
!12303 = !DILocation(line: 2250, column: 217, scope: !12291)
!12304 = !DILocation(line: 2250, column: 305, scope: !12305)
!12305 = !DILexicalBlockFile(scope: !1970, file: !352, discriminator: 7)
!12306 = !DILocation(line: 2250, column: 305, scope: !1969)
!12307 = !DILocation(line: 2250, column: 305, scope: !12308)
!12308 = !DILexicalBlockFile(scope: !1969, file: !352, discriminator: 8)
!12309 = !DILocation(line: 2250, column: 318, scope: !12310)
!12310 = !DILexicalBlockFile(scope: !1970, file: !352, discriminator: 9)
!12311 = !DILocation(line: 2250, column: 320, scope: !12312)
!12312 = !DILexicalBlockFile(scope: !12313, file: !352, discriminator: 10)
!12313 = !DILexicalBlockFile(scope: !1947, file: !352, discriminator: 3)
!12314 = !DILocation(line: 2250, column: 320, scope: !1967)
!12315 = !DILocation(line: 2250, column: 320, scope: !12316)
!12316 = !DILexicalBlockFile(scope: !1967, file: !352, discriminator: 11)
!12317 = !DILocation(line: 2251, column: 18, scope: !1947)
!12318 = !DILocation(line: 2251, column: 5, scope: !1947)
!12319 = !DILocation(line: 2251, column: 9, scope: !1947)
!12320 = !DILocation(line: 2251, column: 16, scope: !1947)
!12321 = !DILocation(line: 2252, column: 58, scope: !1947)
!12322 = !DILocation(line: 2252, column: 5, scope: !1947)
!12323 = !DILocation(line: 2253, column: 1, scope: !1947)
!12324 = !DILocation(line: 2080, column: 31, scope: !1972)
!12325 = !DILocation(line: 2080, column: 41, scope: !1972)
!12326 = !DILocation(line: 2082, column: 5, scope: !1972)
!12327 = !DILocation(line: 2082, column: 16, scope: !1972)
!12328 = !DILocation(line: 2084, column: 9, scope: !1972)
!12329 = !DILocation(line: 2085, column: 29, scope: !1972)
!12330 = !DILocation(line: 2085, column: 33, scope: !1972)
!12331 = !DILocation(line: 2085, column: 14, scope: !1972)
!12332 = !DILocation(line: 2085, column: 42, scope: !1972)
!12333 = !DILocation(line: 2085, column: 51, scope: !1972)
!12334 = !DILocation(line: 2085, column: 9, scope: !1972)
!12335 = !DILocation(line: 2086, column: 31, scope: !1972)
!12336 = !DILocation(line: 2086, column: 12, scope: !1972)
!12337 = !DILocation(line: 2087, column: 1, scope: !1972)
!12338 = !DILocation(line: 2086, column: 5, scope: !1972)
!12339 = !DILocation(line: 4132, column: 30, scope: !2018)
!12340 = !DILocation(line: 4134, column: 25, scope: !2018)
!12341 = !DILocation(line: 4134, column: 5, scope: !2018)
!12342 = !DILocation(line: 4135, column: 5, scope: !2018)
!12343 = !DILocation(line: 4135, column: 10, scope: !12344)
!12344 = !DILexicalBlockFile(scope: !2024, file: !352, discriminator: 1)
!12345 = !DILocation(line: 4135, column: 20, scope: !2024)
!12346 = !DILocation(line: 4135, column: 51, scope: !2024)
!12347 = !DILocation(line: 4135, column: 55, scope: !2024)
!12348 = !{!12349, !2680, i64 16}
!12349 = !{!"", !2676, i64 0, !2680, i64 16, !2677, i64 24}
!12350 = !DILocation(line: 4135, column: 69, scope: !2027)
!12351 = !DILocation(line: 4135, column: 85, scope: !2027)
!12352 = !DILocation(line: 4135, column: 69, scope: !2024)
!12353 = !DILocation(line: 4135, column: 100, scope: !12354)
!12354 = !DILexicalBlockFile(scope: !2027, file: !352, discriminator: 2)
!12355 = !DILocation(line: 4135, column: 105, scope: !12356)
!12356 = !DILexicalBlockFile(scope: !2026, file: !352, discriminator: 4)
!12357 = !DILocation(line: 4135, column: 115, scope: !2026)
!12358 = !DILocation(line: 4135, column: 145, scope: !2026)
!12359 = !DILocation(line: 4135, column: 171, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !2026, file: !352, line: 4135, column: 168)
!12361 = !DILocation(line: 4135, column: 188, scope: !12360)
!12362 = !DILocation(line: 4135, column: 168, scope: !12360)
!12363 = !DILocation(line: 4135, column: 198, scope: !12360)
!12364 = !DILocation(line: 4135, column: 168, scope: !2026)
!12365 = !DILocation(line: 4135, column: 168, scope: !12366)
!12366 = !DILexicalBlockFile(scope: !2026, file: !352, discriminator: 5)
!12367 = !DILocation(line: 4135, column: 229, scope: !12368)
!12368 = !DILexicalBlockFile(scope: !12360, file: !352, discriminator: 6)
!12369 = !DILocation(line: 4135, column: 247, scope: !12360)
!12370 = !DILocation(line: 4135, column: 257, scope: !12360)
!12371 = !DILocation(line: 4135, column: 282, scope: !12360)
!12372 = !DILocation(line: 4135, column: 213, scope: !12360)
!12373 = !DILocation(line: 4135, column: 301, scope: !12374)
!12374 = !DILexicalBlockFile(scope: !2027, file: !352, discriminator: 7)
!12375 = !DILocation(line: 4135, column: 301, scope: !2026)
!12376 = !DILocation(line: 4135, column: 301, scope: !12377)
!12377 = !DILexicalBlockFile(scope: !2026, file: !352, discriminator: 8)
!12378 = !DILocation(line: 4135, column: 301, scope: !12379)
!12379 = !DILexicalBlockFile(scope: !2026, file: !352, discriminator: 9)
!12380 = !DILocation(line: 4135, column: 314, scope: !12381)
!12381 = !DILexicalBlockFile(scope: !12382, file: !352, discriminator: 10)
!12382 = !DILexicalBlockFile(scope: !2018, file: !352, discriminator: 3)
!12383 = !DILocation(line: 4135, column: 314, scope: !2024)
!12384 = !DILocation(line: 4136, column: 19, scope: !2018)
!12385 = !DILocation(line: 4136, column: 7, scope: !2018)
!12386 = !DILocation(line: 4136, column: 25, scope: !2018)
!12387 = !DILocation(line: 4136, column: 35, scope: !2018)
!12388 = !DILocation(line: 4136, column: 43, scope: !2018)
!12389 = !DILocation(line: 4136, column: 5, scope: !2018)
!12390 = !DILocation(line: 4137, column: 1, scope: !2018)
!12391 = !DILocation(line: 4158, column: 27, scope: !2028)
!12392 = !DILocation(line: 4160, column: 9, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !2028, file: !352, line: 4160, column: 9)
!12394 = !DILocation(line: 4160, column: 13, scope: !12393)
!12395 = !{!12349, !2677, i64 24}
!12396 = !DILocation(line: 4160, column: 17, scope: !12393)
!12397 = !DILocation(line: 4160, column: 9, scope: !2028)
!12398 = !DILocation(line: 4161, column: 51, scope: !12393)
!12399 = !DILocation(line: 4161, column: 55, scope: !12393)
!12400 = !DILocation(line: 4161, column: 16, scope: !12393)
!12401 = !DILocation(line: 4161, column: 9, scope: !12393)
!12402 = !DILocation(line: 4163, column: 56, scope: !12393)
!12403 = !DILocation(line: 4163, column: 60, scope: !12393)
!12404 = !DILocation(line: 4163, column: 69, scope: !12393)
!12405 = !DILocation(line: 4163, column: 73, scope: !12393)
!12406 = !DILocation(line: 4163, column: 16, scope: !12393)
!12407 = !DILocation(line: 4163, column: 9, scope: !12393)
!12408 = !DILocation(line: 4164, column: 1, scope: !2028)
!12409 = !DILocation(line: 4140, column: 31, scope: !2033)
!12410 = !DILocation(line: 4140, column: 45, scope: !2033)
!12411 = !DILocation(line: 4140, column: 58, scope: !2033)
!12412 = !DILocation(line: 4142, column: 5, scope: !2033)
!12413 = !DILocation(line: 4142, column: 14, scope: !12414)
!12414 = !DILexicalBlockFile(scope: !2042, file: !352, discriminator: 1)
!12415 = !DILocation(line: 4142, column: 18, scope: !2042)
!12416 = !DILocation(line: 4142, column: 14, scope: !2042)
!12417 = !DILocation(line: 4142, column: 14, scope: !2043)
!12418 = !DILocation(line: 4142, column: 29, scope: !12419)
!12419 = !DILexicalBlockFile(scope: !2041, file: !352, discriminator: 2)
!12420 = !DILocation(line: 4142, column: 33, scope: !2041)
!12421 = !DILocation(line: 4142, column: 40, scope: !2041)
!12422 = !DILocation(line: 4142, column: 59, scope: !2041)
!12423 = !DILocation(line: 4142, column: 63, scope: !2041)
!12424 = !DILocation(line: 4142, column: 73, scope: !2041)
!12425 = !DILocation(line: 4142, column: 83, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !2041, file: !352, line: 4142, column: 83)
!12427 = !DILocation(line: 4142, column: 83, scope: !2041)
!12428 = !DILocation(line: 4142, column: 96, scope: !12429)
!12429 = !DILexicalBlockFile(scope: !12426, file: !352, discriminator: 4)
!12430 = !DILocation(line: 4142, column: 89, scope: !12426)
!12431 = !DILocation(line: 4142, column: 102, scope: !12432)
!12432 = !DILexicalBlockFile(scope: !2042, file: !352, discriminator: 5)
!12433 = !DILocation(line: 4142, column: 102, scope: !12434)
!12434 = !DILexicalBlockFile(scope: !12435, file: !352, discriminator: 7)
!12435 = !DILexicalBlockFile(scope: !2042, file: !352, discriminator: 6)
!12436 = !DILocation(line: 4142, column: 102, scope: !2041)
!12437 = !DILocation(line: 4142, column: 104, scope: !12438)
!12438 = !DILexicalBlockFile(scope: !12439, file: !352, discriminator: 8)
!12439 = !DILexicalBlockFile(scope: !2043, file: !352, discriminator: 3)
!12440 = !DILocation(line: 4143, column: 5, scope: !2033)
!12441 = !DILocation(line: 4144, column: 1, scope: !2033)
!12442 = !DILocation(line: 4147, column: 27, scope: !2044)
!12443 = !DILocation(line: 4149, column: 9, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !2044, file: !352, line: 4149, column: 9)
!12445 = !DILocation(line: 4149, column: 13, scope: !12444)
!12446 = !DILocation(line: 4149, column: 17, scope: !12444)
!12447 = !DILocation(line: 4149, column: 9, scope: !2044)
!12448 = !DILocation(line: 4150, column: 9, scope: !12444)
!12449 = !DILocation(line: 4151, column: 9, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !2044, file: !352, line: 4151, column: 9)
!12451 = !DILocation(line: 4151, column: 13, scope: !12450)
!12452 = !DILocation(line: 4151, column: 17, scope: !12450)
!12453 = !DILocation(line: 4151, column: 9, scope: !2044)
!12454 = !DILocation(line: 4152, column: 9, scope: !12450)
!12455 = !DILocation(line: 4152, column: 13, scope: !12450)
!12456 = !DILocation(line: 4152, column: 16, scope: !12450)
!12457 = !DILocation(line: 4153, column: 21, scope: !2044)
!12458 = !DILocation(line: 4153, column: 25, scope: !2044)
!12459 = !DILocation(line: 4153, column: 36, scope: !2044)
!12460 = !DILocation(line: 4153, column: 45, scope: !2044)
!12461 = !DILocation(line: 4154, column: 12, scope: !2044)
!12462 = !DILocation(line: 4154, column: 16, scope: !2044)
!12463 = !DILocation(line: 4154, column: 5, scope: !2044)
!12464 = !DILocation(line: 4155, column: 1, scope: !2044)
!12465 = !DILocation(line: 4108, column: 26, scope: !2053)
!12466 = !DILocation(line: 4108, column: 42, scope: !2053)
!12467 = !DILocation(line: 4108, column: 58, scope: !2053)
!12468 = !DILocation(line: 4110, column: 5, scope: !2053)
!12469 = !DILocation(line: 4110, column: 19, scope: !2053)
!12470 = !DILocation(line: 4111, column: 5, scope: !2053)
!12471 = !DILocation(line: 4111, column: 15, scope: !2053)
!12472 = !DILocation(line: 4112, column: 5, scope: !2053)
!12473 = !DILocation(line: 4112, column: 16, scope: !2053)
!12474 = !DILocation(line: 4115, column: 38, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !2053, file: !352, line: 4115, column: 9)
!12476 = !DILocation(line: 4115, column: 44, scope: !12475)
!12477 = !DILocation(line: 4115, column: 10, scope: !12475)
!12478 = !DILocation(line: 4115, column: 9, scope: !2053)
!12479 = !DILocation(line: 4117, column: 9, scope: !12475)
!12480 = !DILocation(line: 4119, column: 22, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !2053, file: !352, line: 4119, column: 9)
!12482 = !DILocation(line: 4119, column: 9, scope: !12481)
!12483 = !DILocation(line: 4119, column: 28, scope: !12481)
!12484 = !DILocation(line: 4119, column: 33, scope: !12481)
!12485 = !DILocation(line: 4119, column: 36, scope: !12486)
!12486 = !DILexicalBlockFile(scope: !12481, file: !352, discriminator: 1)
!12487 = !DILocation(line: 4119, column: 40, scope: !12481)
!12488 = !DILocation(line: 4119, column: 9, scope: !2053)
!12489 = !DILocation(line: 4120, column: 13, scope: !12481)
!12490 = !DILocation(line: 4120, column: 9, scope: !12481)
!12491 = !DILocation(line: 4122, column: 26, scope: !2053)
!12492 = !DILocation(line: 4122, column: 32, scope: !2053)
!12493 = !DILocation(line: 4122, column: 41, scope: !2053)
!12494 = !DILocation(line: 4122, column: 10, scope: !2053)
!12495 = !DILocation(line: 4122, column: 8, scope: !2053)
!12496 = !DILocation(line: 4123, column: 9, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !2053, file: !352, line: 4123, column: 9)
!12498 = !DILocation(line: 4123, column: 12, scope: !12497)
!12499 = !DILocation(line: 4123, column: 9, scope: !2053)
!12500 = !DILocation(line: 4124, column: 9, scope: !12497)
!12501 = !DILocation(line: 4125, column: 21, scope: !2053)
!12502 = !DILocation(line: 4125, column: 32, scope: !2053)
!12503 = !DILocation(line: 4125, column: 41, scope: !2053)
!12504 = !DILocation(line: 4126, column: 19, scope: !2053)
!12505 = !DILocation(line: 4126, column: 5, scope: !2053)
!12506 = !DILocation(line: 4126, column: 9, scope: !2053)
!12507 = !DILocation(line: 4126, column: 17, scope: !2053)
!12508 = !DILocation(line: 4127, column: 15, scope: !2053)
!12509 = !DILocation(line: 4127, column: 5, scope: !2053)
!12510 = !DILocation(line: 4127, column: 9, scope: !2053)
!12511 = !DILocation(line: 4127, column: 13, scope: !2053)
!12512 = !DILocation(line: 4128, column: 24, scope: !2053)
!12513 = !DILocation(line: 4128, column: 12, scope: !2053)
!12514 = !DILocation(line: 4128, column: 5, scope: !2053)
!12515 = !DILocation(line: 4129, column: 1, scope: !2053)
!12516 = !DILocation(line: 4167, column: 26, scope: !2047)
!12517 = !DILocation(line: 4169, column: 9, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !2047, file: !352, line: 4169, column: 9)
!12519 = !DILocation(line: 4169, column: 13, scope: !12518)
!12520 = !DILocation(line: 4169, column: 17, scope: !12518)
!12521 = !DILocation(line: 4169, column: 9, scope: !2047)
!12522 = !DILocation(line: 4170, column: 25, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12518, file: !352, line: 4169, column: 24)
!12524 = !DILocation(line: 4170, column: 9, scope: !12523)
!12525 = !DILocation(line: 4171, column: 9, scope: !12523)
!12526 = !DILocation(line: 4173, column: 30, scope: !2047)
!12527 = !DILocation(line: 4173, column: 34, scope: !2047)
!12528 = !DILocation(line: 4173, column: 12, scope: !2047)
!12529 = !DILocation(line: 4173, column: 5, scope: !2047)
!12530 = !DILocation(line: 4174, column: 1, scope: !2047)
!12531 = !DILocation(line: 4179, column: 29, scope: !2050)
!12532 = !DILocation(line: 4184, column: 9, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !2050, file: !352, line: 4184, column: 9)
!12534 = !DILocation(line: 4184, column: 13, scope: !12533)
!12535 = !DILocation(line: 4184, column: 17, scope: !12533)
!12536 = !DILocation(line: 4184, column: 9, scope: !2050)
!12537 = !DILocation(line: 4185, column: 53, scope: !12533)
!12538 = !DILocation(line: 4185, column: 41, scope: !12533)
!12539 = !DILocation(line: 4185, column: 59, scope: !12533)
!12540 = !DILocation(line: 4185, column: 69, scope: !12533)
!12541 = !DILocation(line: 4185, column: 73, scope: !12533)
!12542 = !DILocation(line: 4185, column: 82, scope: !12533)
!12543 = !DILocation(line: 4185, column: 86, scope: !12533)
!12544 = !DILocation(line: 4185, column: 16, scope: !12533)
!12545 = !DILocation(line: 4185, column: 9, scope: !12533)
!12546 = !DILocation(line: 4187, column: 52, scope: !12533)
!12547 = !DILocation(line: 4187, column: 40, scope: !12533)
!12548 = !DILocation(line: 4187, column: 58, scope: !12533)
!12549 = !DILocation(line: 4187, column: 68, scope: !12533)
!12550 = !DILocation(line: 4187, column: 72, scope: !12533)
!12551 = !DILocation(line: 4187, column: 16, scope: !12533)
!12552 = !DILocation(line: 4187, column: 9, scope: !12533)
!12553 = !DILocation(line: 4188, column: 1, scope: !2050)
!12554 = !DILocation(line: 54, column: 32, scope: !2061)
!12555 = !DILocation(line: 56, column: 25, scope: !2061)
!12556 = !DILocation(line: 56, column: 5, scope: !2061)
!12557 = !DILocation(line: 57, column: 5, scope: !2061)
!12558 = !DILocation(line: 57, column: 10, scope: !12559)
!12559 = !DILexicalBlockFile(scope: !2067, file: !352, discriminator: 1)
!12560 = !DILocation(line: 57, column: 20, scope: !2067)
!12561 = !DILocation(line: 57, column: 51, scope: !2067)
!12562 = !DILocation(line: 57, column: 56, scope: !2067)
!12563 = !{!12564, !2680, i64 16}
!12564 = !{!"", !2676, i64 0, !2680, i64 16, !2680, i64 24, !2680, i64 32, !2680, i64 40, !2680, i64 48}
!12565 = !DILocation(line: 57, column: 65, scope: !2070)
!12566 = !DILocation(line: 57, column: 81, scope: !2070)
!12567 = !DILocation(line: 57, column: 65, scope: !2067)
!12568 = !DILocation(line: 57, column: 96, scope: !12569)
!12569 = !DILexicalBlockFile(scope: !2070, file: !352, discriminator: 2)
!12570 = !DILocation(line: 57, column: 101, scope: !12571)
!12571 = !DILexicalBlockFile(scope: !2069, file: !352, discriminator: 4)
!12572 = !DILocation(line: 57, column: 111, scope: !2069)
!12573 = !DILocation(line: 57, column: 141, scope: !2069)
!12574 = !DILocation(line: 57, column: 167, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !2069, file: !352, line: 57, column: 164)
!12576 = !DILocation(line: 57, column: 184, scope: !12575)
!12577 = !DILocation(line: 57, column: 164, scope: !12575)
!12578 = !DILocation(line: 57, column: 194, scope: !12575)
!12579 = !DILocation(line: 57, column: 164, scope: !2069)
!12580 = !DILocation(line: 57, column: 164, scope: !12581)
!12581 = !DILexicalBlockFile(scope: !2069, file: !352, discriminator: 5)
!12582 = !DILocation(line: 57, column: 225, scope: !12583)
!12583 = !DILexicalBlockFile(scope: !12575, file: !352, discriminator: 6)
!12584 = !DILocation(line: 57, column: 243, scope: !12575)
!12585 = !DILocation(line: 57, column: 253, scope: !12575)
!12586 = !DILocation(line: 57, column: 278, scope: !12575)
!12587 = !DILocation(line: 57, column: 209, scope: !12575)
!12588 = !DILocation(line: 57, column: 297, scope: !12589)
!12589 = !DILexicalBlockFile(scope: !2070, file: !352, discriminator: 7)
!12590 = !DILocation(line: 57, column: 297, scope: !2069)
!12591 = !DILocation(line: 57, column: 297, scope: !12592)
!12592 = !DILexicalBlockFile(scope: !2069, file: !352, discriminator: 8)
!12593 = !DILocation(line: 57, column: 297, scope: !12594)
!12594 = !DILexicalBlockFile(scope: !2069, file: !352, discriminator: 9)
!12595 = !DILocation(line: 57, column: 310, scope: !12596)
!12596 = !DILexicalBlockFile(scope: !12597, file: !352, discriminator: 10)
!12597 = !DILexicalBlockFile(scope: !2061, file: !352, discriminator: 3)
!12598 = !DILocation(line: 57, column: 310, scope: !2067)
!12599 = !DILocation(line: 58, column: 5, scope: !2061)
!12600 = !DILocation(line: 58, column: 10, scope: !12601)
!12601 = !DILexicalBlockFile(scope: !2072, file: !352, discriminator: 1)
!12602 = !DILocation(line: 58, column: 20, scope: !2072)
!12603 = !DILocation(line: 58, column: 51, scope: !2072)
!12604 = !DILocation(line: 58, column: 56, scope: !2072)
!12605 = !{!12564, !2680, i64 24}
!12606 = !DILocation(line: 58, column: 70, scope: !2075)
!12607 = !DILocation(line: 58, column: 86, scope: !2075)
!12608 = !DILocation(line: 58, column: 70, scope: !2072)
!12609 = !DILocation(line: 58, column: 101, scope: !12610)
!12610 = !DILexicalBlockFile(scope: !2075, file: !352, discriminator: 2)
!12611 = !DILocation(line: 58, column: 106, scope: !12612)
!12612 = !DILexicalBlockFile(scope: !2074, file: !352, discriminator: 4)
!12613 = !DILocation(line: 58, column: 116, scope: !2074)
!12614 = !DILocation(line: 58, column: 146, scope: !2074)
!12615 = !DILocation(line: 58, column: 172, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !2074, file: !352, line: 58, column: 169)
!12617 = !DILocation(line: 58, column: 189, scope: !12616)
!12618 = !DILocation(line: 58, column: 169, scope: !12616)
!12619 = !DILocation(line: 58, column: 199, scope: !12616)
!12620 = !DILocation(line: 58, column: 169, scope: !2074)
!12621 = !DILocation(line: 58, column: 169, scope: !12622)
!12622 = !DILexicalBlockFile(scope: !2074, file: !352, discriminator: 5)
!12623 = !DILocation(line: 58, column: 230, scope: !12624)
!12624 = !DILexicalBlockFile(scope: !12616, file: !352, discriminator: 6)
!12625 = !DILocation(line: 58, column: 248, scope: !12616)
!12626 = !DILocation(line: 58, column: 258, scope: !12616)
!12627 = !DILocation(line: 58, column: 283, scope: !12616)
!12628 = !DILocation(line: 58, column: 214, scope: !12616)
!12629 = !DILocation(line: 58, column: 302, scope: !12630)
!12630 = !DILexicalBlockFile(scope: !2075, file: !352, discriminator: 7)
!12631 = !DILocation(line: 58, column: 302, scope: !2074)
!12632 = !DILocation(line: 58, column: 302, scope: !12633)
!12633 = !DILexicalBlockFile(scope: !2074, file: !352, discriminator: 8)
!12634 = !DILocation(line: 58, column: 302, scope: !12635)
!12635 = !DILexicalBlockFile(scope: !2074, file: !352, discriminator: 9)
!12636 = !DILocation(line: 58, column: 315, scope: !12596)
!12637 = !DILocation(line: 58, column: 315, scope: !2072)
!12638 = !DILocation(line: 59, column: 5, scope: !2061)
!12639 = !DILocation(line: 59, column: 10, scope: !12640)
!12640 = !DILexicalBlockFile(scope: !2077, file: !352, discriminator: 1)
!12641 = !DILocation(line: 59, column: 20, scope: !2077)
!12642 = !DILocation(line: 59, column: 51, scope: !2077)
!12643 = !DILocation(line: 59, column: 56, scope: !2077)
!12644 = !{!12564, !2680, i64 32}
!12645 = !DILocation(line: 59, column: 69, scope: !2080)
!12646 = !DILocation(line: 59, column: 85, scope: !2080)
!12647 = !DILocation(line: 59, column: 69, scope: !2077)
!12648 = !DILocation(line: 59, column: 100, scope: !12649)
!12649 = !DILexicalBlockFile(scope: !2080, file: !352, discriminator: 2)
!12650 = !DILocation(line: 59, column: 105, scope: !12651)
!12651 = !DILexicalBlockFile(scope: !2079, file: !352, discriminator: 4)
!12652 = !DILocation(line: 59, column: 115, scope: !2079)
!12653 = !DILocation(line: 59, column: 145, scope: !2079)
!12654 = !DILocation(line: 59, column: 171, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !2079, file: !352, line: 59, column: 168)
!12656 = !DILocation(line: 59, column: 188, scope: !12655)
!12657 = !DILocation(line: 59, column: 168, scope: !12655)
!12658 = !DILocation(line: 59, column: 198, scope: !12655)
!12659 = !DILocation(line: 59, column: 168, scope: !2079)
!12660 = !DILocation(line: 59, column: 168, scope: !12661)
!12661 = !DILexicalBlockFile(scope: !2079, file: !352, discriminator: 5)
!12662 = !DILocation(line: 59, column: 229, scope: !12663)
!12663 = !DILexicalBlockFile(scope: !12655, file: !352, discriminator: 6)
!12664 = !DILocation(line: 59, column: 247, scope: !12655)
!12665 = !DILocation(line: 59, column: 257, scope: !12655)
!12666 = !DILocation(line: 59, column: 282, scope: !12655)
!12667 = !DILocation(line: 59, column: 213, scope: !12655)
!12668 = !DILocation(line: 59, column: 301, scope: !12669)
!12669 = !DILexicalBlockFile(scope: !2080, file: !352, discriminator: 7)
!12670 = !DILocation(line: 59, column: 301, scope: !2079)
!12671 = !DILocation(line: 59, column: 301, scope: !12672)
!12672 = !DILexicalBlockFile(scope: !2079, file: !352, discriminator: 8)
!12673 = !DILocation(line: 59, column: 301, scope: !12674)
!12674 = !DILexicalBlockFile(scope: !2079, file: !352, discriminator: 9)
!12675 = !DILocation(line: 59, column: 314, scope: !12596)
!12676 = !DILocation(line: 59, column: 314, scope: !2077)
!12677 = !DILocation(line: 60, column: 5, scope: !2061)
!12678 = !DILocation(line: 60, column: 10, scope: !12679)
!12679 = !DILexicalBlockFile(scope: !2082, file: !352, discriminator: 1)
!12680 = !DILocation(line: 60, column: 20, scope: !2082)
!12681 = !DILocation(line: 60, column: 51, scope: !2082)
!12682 = !DILocation(line: 60, column: 56, scope: !2082)
!12683 = !{!12564, !2680, i64 40}
!12684 = !DILocation(line: 60, column: 70, scope: !2085)
!12685 = !DILocation(line: 60, column: 86, scope: !2085)
!12686 = !DILocation(line: 60, column: 70, scope: !2082)
!12687 = !DILocation(line: 60, column: 101, scope: !12688)
!12688 = !DILexicalBlockFile(scope: !2085, file: !352, discriminator: 2)
!12689 = !DILocation(line: 60, column: 106, scope: !12690)
!12690 = !DILexicalBlockFile(scope: !2084, file: !352, discriminator: 4)
!12691 = !DILocation(line: 60, column: 116, scope: !2084)
!12692 = !DILocation(line: 60, column: 146, scope: !2084)
!12693 = !DILocation(line: 60, column: 172, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !2084, file: !352, line: 60, column: 169)
!12695 = !DILocation(line: 60, column: 189, scope: !12694)
!12696 = !DILocation(line: 60, column: 169, scope: !12694)
!12697 = !DILocation(line: 60, column: 199, scope: !12694)
!12698 = !DILocation(line: 60, column: 169, scope: !2084)
!12699 = !DILocation(line: 60, column: 169, scope: !12700)
!12700 = !DILexicalBlockFile(scope: !2084, file: !352, discriminator: 5)
!12701 = !DILocation(line: 60, column: 230, scope: !12702)
!12702 = !DILexicalBlockFile(scope: !12694, file: !352, discriminator: 6)
!12703 = !DILocation(line: 60, column: 248, scope: !12694)
!12704 = !DILocation(line: 60, column: 258, scope: !12694)
!12705 = !DILocation(line: 60, column: 283, scope: !12694)
!12706 = !DILocation(line: 60, column: 214, scope: !12694)
!12707 = !DILocation(line: 60, column: 302, scope: !12708)
!12708 = !DILexicalBlockFile(scope: !2085, file: !352, discriminator: 7)
!12709 = !DILocation(line: 60, column: 302, scope: !2084)
!12710 = !DILocation(line: 60, column: 302, scope: !12711)
!12711 = !DILexicalBlockFile(scope: !2084, file: !352, discriminator: 8)
!12712 = !DILocation(line: 60, column: 302, scope: !12713)
!12713 = !DILexicalBlockFile(scope: !2084, file: !352, discriminator: 9)
!12714 = !DILocation(line: 60, column: 315, scope: !12596)
!12715 = !DILocation(line: 60, column: 315, scope: !2082)
!12716 = !DILocation(line: 61, column: 5, scope: !2061)
!12717 = !DILocation(line: 61, column: 10, scope: !12718)
!12718 = !DILexicalBlockFile(scope: !2087, file: !352, discriminator: 1)
!12719 = !DILocation(line: 61, column: 20, scope: !2087)
!12720 = !DILocation(line: 61, column: 51, scope: !2087)
!12721 = !DILocation(line: 61, column: 56, scope: !2087)
!12722 = !{!12564, !2680, i64 48}
!12723 = !DILocation(line: 61, column: 72, scope: !2090)
!12724 = !DILocation(line: 61, column: 88, scope: !2090)
!12725 = !DILocation(line: 61, column: 72, scope: !2087)
!12726 = !DILocation(line: 61, column: 103, scope: !12727)
!12727 = !DILexicalBlockFile(scope: !2090, file: !352, discriminator: 2)
!12728 = !DILocation(line: 61, column: 108, scope: !12729)
!12729 = !DILexicalBlockFile(scope: !2089, file: !352, discriminator: 4)
!12730 = !DILocation(line: 61, column: 118, scope: !2089)
!12731 = !DILocation(line: 61, column: 148, scope: !2089)
!12732 = !DILocation(line: 61, column: 174, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !2089, file: !352, line: 61, column: 171)
!12734 = !DILocation(line: 61, column: 191, scope: !12733)
!12735 = !DILocation(line: 61, column: 171, scope: !12733)
!12736 = !DILocation(line: 61, column: 201, scope: !12733)
!12737 = !DILocation(line: 61, column: 171, scope: !2089)
!12738 = !DILocation(line: 61, column: 171, scope: !12739)
!12739 = !DILexicalBlockFile(scope: !2089, file: !352, discriminator: 5)
!12740 = !DILocation(line: 61, column: 232, scope: !12741)
!12741 = !DILexicalBlockFile(scope: !12733, file: !352, discriminator: 6)
!12742 = !DILocation(line: 61, column: 250, scope: !12733)
!12743 = !DILocation(line: 61, column: 260, scope: !12733)
!12744 = !DILocation(line: 61, column: 285, scope: !12733)
!12745 = !DILocation(line: 61, column: 216, scope: !12733)
!12746 = !DILocation(line: 61, column: 304, scope: !12747)
!12747 = !DILexicalBlockFile(scope: !2090, file: !352, discriminator: 7)
!12748 = !DILocation(line: 61, column: 304, scope: !2089)
!12749 = !DILocation(line: 61, column: 304, scope: !12750)
!12750 = !DILexicalBlockFile(scope: !2089, file: !352, discriminator: 8)
!12751 = !DILocation(line: 61, column: 304, scope: !12752)
!12752 = !DILexicalBlockFile(scope: !2089, file: !352, discriminator: 9)
!12753 = !DILocation(line: 61, column: 317, scope: !12596)
!12754 = !DILocation(line: 61, column: 317, scope: !2087)
!12755 = !DILocation(line: 62, column: 19, scope: !2061)
!12756 = !DILocation(line: 62, column: 7, scope: !2061)
!12757 = !DILocation(line: 62, column: 26, scope: !2061)
!12758 = !DILocation(line: 62, column: 36, scope: !2061)
!12759 = !DILocation(line: 62, column: 44, scope: !2061)
!12760 = !DILocation(line: 62, column: 5, scope: !2061)
!12761 = !DILocation(line: 63, column: 1, scope: !2061)
!12762 = !DILocation(line: 66, column: 33, scope: !2091)
!12763 = !DILocation(line: 66, column: 48, scope: !2091)
!12764 = !DILocation(line: 66, column: 61, scope: !2091)
!12765 = !DILocation(line: 68, column: 5, scope: !2091)
!12766 = !DILocation(line: 68, column: 14, scope: !12767)
!12767 = !DILexicalBlockFile(scope: !2100, file: !352, discriminator: 1)
!12768 = !DILocation(line: 68, column: 19, scope: !2100)
!12769 = !DILocation(line: 68, column: 14, scope: !2100)
!12770 = !DILocation(line: 68, column: 14, scope: !2101)
!12771 = !DILocation(line: 68, column: 25, scope: !12772)
!12772 = !DILexicalBlockFile(scope: !2099, file: !352, discriminator: 2)
!12773 = !DILocation(line: 68, column: 29, scope: !2099)
!12774 = !DILocation(line: 68, column: 36, scope: !2099)
!12775 = !DILocation(line: 68, column: 55, scope: !2099)
!12776 = !DILocation(line: 68, column: 60, scope: !2099)
!12777 = !DILocation(line: 68, column: 65, scope: !2099)
!12778 = !DILocation(line: 68, column: 75, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !2099, file: !352, line: 68, column: 75)
!12780 = !DILocation(line: 68, column: 75, scope: !2099)
!12781 = !DILocation(line: 68, column: 88, scope: !12782)
!12782 = !DILexicalBlockFile(scope: !12779, file: !352, discriminator: 4)
!12783 = !DILocation(line: 68, column: 81, scope: !12779)
!12784 = !DILocation(line: 68, column: 94, scope: !12785)
!12785 = !DILexicalBlockFile(scope: !2100, file: !352, discriminator: 5)
!12786 = !DILocation(line: 68, column: 94, scope: !12787)
!12787 = !DILexicalBlockFile(scope: !12788, file: !352, discriminator: 7)
!12788 = !DILexicalBlockFile(scope: !2100, file: !352, discriminator: 6)
!12789 = !DILocation(line: 68, column: 94, scope: !2099)
!12790 = !DILocation(line: 68, column: 96, scope: !12791)
!12791 = !DILexicalBlockFile(scope: !12792, file: !352, discriminator: 8)
!12792 = !DILexicalBlockFile(scope: !2101, file: !352, discriminator: 3)
!12793 = !DILocation(line: 69, column: 5, scope: !2091)
!12794 = !DILocation(line: 69, column: 14, scope: !12795)
!12795 = !DILexicalBlockFile(scope: !2104, file: !352, discriminator: 1)
!12796 = !DILocation(line: 69, column: 19, scope: !2104)
!12797 = !DILocation(line: 69, column: 14, scope: !2104)
!12798 = !DILocation(line: 69, column: 14, scope: !2105)
!12799 = !DILocation(line: 69, column: 30, scope: !12800)
!12800 = !DILexicalBlockFile(scope: !2103, file: !352, discriminator: 2)
!12801 = !DILocation(line: 69, column: 34, scope: !2103)
!12802 = !DILocation(line: 69, column: 41, scope: !2103)
!12803 = !DILocation(line: 69, column: 60, scope: !2103)
!12804 = !DILocation(line: 69, column: 65, scope: !2103)
!12805 = !DILocation(line: 69, column: 75, scope: !2103)
!12806 = !DILocation(line: 69, column: 85, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !2103, file: !352, line: 69, column: 85)
!12808 = !DILocation(line: 69, column: 85, scope: !2103)
!12809 = !DILocation(line: 69, column: 98, scope: !12810)
!12810 = !DILexicalBlockFile(scope: !12807, file: !352, discriminator: 4)
!12811 = !DILocation(line: 69, column: 91, scope: !12807)
!12812 = !DILocation(line: 69, column: 104, scope: !12813)
!12813 = !DILexicalBlockFile(scope: !2104, file: !352, discriminator: 5)
!12814 = !DILocation(line: 69, column: 104, scope: !12815)
!12815 = !DILexicalBlockFile(scope: !12816, file: !352, discriminator: 7)
!12816 = !DILexicalBlockFile(scope: !2104, file: !352, discriminator: 6)
!12817 = !DILocation(line: 69, column: 104, scope: !2103)
!12818 = !DILocation(line: 69, column: 106, scope: !12819)
!12819 = !DILexicalBlockFile(scope: !12820, file: !352, discriminator: 8)
!12820 = !DILexicalBlockFile(scope: !2105, file: !352, discriminator: 3)
!12821 = !DILocation(line: 70, column: 5, scope: !2091)
!12822 = !DILocation(line: 70, column: 14, scope: !12823)
!12823 = !DILexicalBlockFile(scope: !2108, file: !352, discriminator: 1)
!12824 = !DILocation(line: 70, column: 19, scope: !2108)
!12825 = !DILocation(line: 70, column: 14, scope: !2108)
!12826 = !DILocation(line: 70, column: 14, scope: !2109)
!12827 = !DILocation(line: 70, column: 29, scope: !12828)
!12828 = !DILexicalBlockFile(scope: !2107, file: !352, discriminator: 2)
!12829 = !DILocation(line: 70, column: 33, scope: !2107)
!12830 = !DILocation(line: 70, column: 40, scope: !2107)
!12831 = !DILocation(line: 70, column: 59, scope: !2107)
!12832 = !DILocation(line: 70, column: 64, scope: !2107)
!12833 = !DILocation(line: 70, column: 73, scope: !2107)
!12834 = !DILocation(line: 70, column: 83, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !2107, file: !352, line: 70, column: 83)
!12836 = !DILocation(line: 70, column: 83, scope: !2107)
!12837 = !DILocation(line: 70, column: 96, scope: !12838)
!12838 = !DILexicalBlockFile(scope: !12835, file: !352, discriminator: 4)
!12839 = !DILocation(line: 70, column: 89, scope: !12835)
!12840 = !DILocation(line: 70, column: 102, scope: !12841)
!12841 = !DILexicalBlockFile(scope: !2108, file: !352, discriminator: 5)
!12842 = !DILocation(line: 70, column: 102, scope: !12843)
!12843 = !DILexicalBlockFile(scope: !12844, file: !352, discriminator: 7)
!12844 = !DILexicalBlockFile(scope: !2108, file: !352, discriminator: 6)
!12845 = !DILocation(line: 70, column: 102, scope: !2107)
!12846 = !DILocation(line: 70, column: 104, scope: !12847)
!12847 = !DILexicalBlockFile(scope: !12848, file: !352, discriminator: 8)
!12848 = !DILexicalBlockFile(scope: !2109, file: !352, discriminator: 3)
!12849 = !DILocation(line: 71, column: 5, scope: !2091)
!12850 = !DILocation(line: 71, column: 14, scope: !12851)
!12851 = !DILexicalBlockFile(scope: !2112, file: !352, discriminator: 1)
!12852 = !DILocation(line: 71, column: 19, scope: !2112)
!12853 = !DILocation(line: 71, column: 14, scope: !2112)
!12854 = !DILocation(line: 71, column: 14, scope: !2113)
!12855 = !DILocation(line: 71, column: 30, scope: !12856)
!12856 = !DILexicalBlockFile(scope: !2111, file: !352, discriminator: 2)
!12857 = !DILocation(line: 71, column: 34, scope: !2111)
!12858 = !DILocation(line: 71, column: 41, scope: !2111)
!12859 = !DILocation(line: 71, column: 60, scope: !2111)
!12860 = !DILocation(line: 71, column: 65, scope: !2111)
!12861 = !DILocation(line: 71, column: 75, scope: !2111)
!12862 = !DILocation(line: 71, column: 85, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !2111, file: !352, line: 71, column: 85)
!12864 = !DILocation(line: 71, column: 85, scope: !2111)
!12865 = !DILocation(line: 71, column: 98, scope: !12866)
!12866 = !DILexicalBlockFile(scope: !12863, file: !352, discriminator: 4)
!12867 = !DILocation(line: 71, column: 91, scope: !12863)
!12868 = !DILocation(line: 71, column: 104, scope: !12869)
!12869 = !DILexicalBlockFile(scope: !2112, file: !352, discriminator: 5)
!12870 = !DILocation(line: 71, column: 104, scope: !12871)
!12871 = !DILexicalBlockFile(scope: !12872, file: !352, discriminator: 7)
!12872 = !DILexicalBlockFile(scope: !2112, file: !352, discriminator: 6)
!12873 = !DILocation(line: 71, column: 104, scope: !2111)
!12874 = !DILocation(line: 71, column: 106, scope: !12875)
!12875 = !DILexicalBlockFile(scope: !12876, file: !352, discriminator: 8)
!12876 = !DILexicalBlockFile(scope: !2113, file: !352, discriminator: 3)
!12877 = !DILocation(line: 72, column: 5, scope: !2091)
!12878 = !DILocation(line: 72, column: 14, scope: !12879)
!12879 = !DILexicalBlockFile(scope: !2116, file: !352, discriminator: 1)
!12880 = !DILocation(line: 72, column: 19, scope: !2116)
!12881 = !DILocation(line: 72, column: 14, scope: !2116)
!12882 = !DILocation(line: 72, column: 14, scope: !2117)
!12883 = !DILocation(line: 72, column: 32, scope: !12884)
!12884 = !DILexicalBlockFile(scope: !2115, file: !352, discriminator: 2)
!12885 = !DILocation(line: 72, column: 36, scope: !2115)
!12886 = !DILocation(line: 72, column: 43, scope: !2115)
!12887 = !DILocation(line: 72, column: 62, scope: !2115)
!12888 = !DILocation(line: 72, column: 67, scope: !2115)
!12889 = !DILocation(line: 72, column: 79, scope: !2115)
!12890 = !DILocation(line: 72, column: 89, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !2115, file: !352, line: 72, column: 89)
!12892 = !DILocation(line: 72, column: 89, scope: !2115)
!12893 = !DILocation(line: 72, column: 102, scope: !12894)
!12894 = !DILexicalBlockFile(scope: !12891, file: !352, discriminator: 4)
!12895 = !DILocation(line: 72, column: 95, scope: !12891)
!12896 = !DILocation(line: 72, column: 108, scope: !12897)
!12897 = !DILexicalBlockFile(scope: !2116, file: !352, discriminator: 5)
!12898 = !DILocation(line: 72, column: 108, scope: !12899)
!12899 = !DILexicalBlockFile(scope: !12900, file: !352, discriminator: 7)
!12900 = !DILexicalBlockFile(scope: !2116, file: !352, discriminator: 6)
!12901 = !DILocation(line: 72, column: 108, scope: !2115)
!12902 = !DILocation(line: 72, column: 110, scope: !12903)
!12903 = !DILexicalBlockFile(scope: !12904, file: !352, discriminator: 8)
!12904 = !DILexicalBlockFile(scope: !2117, file: !352, discriminator: 3)
!12905 = !DILocation(line: 73, column: 5, scope: !2091)
!12906 = !DILocation(line: 74, column: 1, scope: !2091)
!12907 = !DILocation(line: 77, column: 29, scope: !2118)
!12908 = !DILocation(line: 79, column: 5, scope: !2118)
!12909 = !DILocation(line: 79, column: 15, scope: !2118)
!12910 = !DILocation(line: 79, column: 26, scope: !2118)
!12911 = !DILocation(line: 79, column: 35, scope: !2118)
!12912 = !DILocation(line: 79, column: 39, scope: !2118)
!12913 = !DILocation(line: 79, column: 49, scope: !2118)
!12914 = !DILocation(line: 82, column: 5, scope: !2118)
!12915 = !DILocation(line: 83, column: 13, scope: !2131)
!12916 = !DILocation(line: 83, column: 18, scope: !2131)
!12917 = !DILocation(line: 83, column: 26, scope: !2131)
!12918 = !DILocation(line: 83, column: 13, scope: !2132)
!12919 = !DILocation(line: 83, column: 13, scope: !12920)
!12920 = !DILexicalBlockFile(scope: !2132, file: !352, discriminator: 1)
!12921 = !DILocation(line: 85, column: 18, scope: !2130)
!12922 = !DILocation(line: 85, column: 23, scope: !2130)
!12923 = !DILocation(line: 85, column: 30, scope: !2130)
!12924 = !DILocation(line: 85, column: 18, scope: !2131)
!12925 = !DILocation(line: 86, column: 13, scope: !2130)
!12926 = !DILocation(line: 88, column: 13, scope: !2129)
!12927 = !DILocation(line: 88, column: 17, scope: !2129)
!12928 = !DILocation(line: 90, column: 45, scope: !2129)
!12929 = !DILocation(line: 90, column: 50, scope: !2129)
!12930 = !DILocation(line: 91, column: 45, scope: !2129)
!12931 = !DILocation(line: 91, column: 50, scope: !2129)
!12932 = !DILocation(line: 90, column: 20, scope: !2129)
!12933 = !DILocation(line: 90, column: 18, scope: !2129)
!12934 = !DILocation(line: 92, column: 17, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !2129, file: !352, line: 92, column: 17)
!12936 = !DILocation(line: 92, column: 22, scope: !12935)
!12937 = !DILocation(line: 92, column: 17, scope: !2129)
!12938 = !DILocation(line: 93, column: 17, scope: !12935)
!12939 = !DILocation(line: 94, column: 22, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12935, file: !352, line: 94, column: 22)
!12941 = !DILocation(line: 94, column: 27, scope: !12940)
!12942 = !DILocation(line: 94, column: 22, scope: !12935)
!12943 = !DILocation(line: 95, column: 17, scope: !12940)
!12944 = !DILocation(line: 96, column: 9, scope: !2130)
!12945 = !DILocation(line: 96, column: 9, scope: !12946)
!12946 = !DILexicalBlockFile(scope: !2130, file: !352, discriminator: 1)
!12947 = !DILocation(line: 98, column: 32, scope: !2132)
!12948 = !DILocation(line: 98, column: 37, scope: !2132)
!12949 = !DILocation(line: 98, column: 20, scope: !2132)
!12950 = !DILocation(line: 98, column: 18, scope: !2132)
!12951 = !DILocation(line: 99, column: 13, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !2132, file: !352, line: 99, column: 13)
!12953 = !DILocation(line: 99, column: 22, scope: !12952)
!12954 = !DILocation(line: 99, column: 13, scope: !2132)
!12955 = !DILocation(line: 100, column: 13, scope: !12952)
!12956 = !DILocation(line: 102, column: 13, scope: !2140)
!12957 = !DILocation(line: 102, column: 18, scope: !2140)
!12958 = !DILocation(line: 102, column: 26, scope: !2140)
!12959 = !DILocation(line: 102, column: 13, scope: !2132)
!12960 = !DILocation(line: 103, column: 22, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !2140, file: !352, line: 102, column: 48)
!12962 = !DILocation(line: 103, column: 20, scope: !12961)
!12963 = !DILocation(line: 104, column: 29, scope: !12961)
!12964 = !DILocation(line: 104, column: 41, scope: !12961)
!12965 = !DILocation(line: 104, column: 50, scope: !12961)
!12966 = !DILocation(line: 105, column: 9, scope: !12961)
!12967 = !DILocation(line: 106, column: 51, scope: !2139)
!12968 = !DILocation(line: 106, column: 56, scope: !2139)
!12969 = !DILocation(line: 107, column: 51, scope: !2139)
!12970 = !DILocation(line: 106, column: 22, scope: !2139)
!12971 = !DILocation(line: 106, column: 20, scope: !2139)
!12972 = !DILocation(line: 108, column: 17, scope: !2138)
!12973 = !DILocation(line: 108, column: 24, scope: !2138)
!12974 = !DILocation(line: 108, column: 17, scope: !2139)
!12975 = !DILocation(line: 109, column: 17, scope: !2137)
!12976 = !DILocation(line: 109, column: 22, scope: !12977)
!12977 = !DILexicalBlockFile(scope: !2136, file: !352, discriminator: 1)
!12978 = !DILocation(line: 109, column: 32, scope: !2136)
!12979 = !DILocation(line: 109, column: 62, scope: !2136)
!12980 = !DILocation(line: 109, column: 81, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !2136, file: !352, line: 109, column: 78)
!12982 = !DILocation(line: 109, column: 98, scope: !12981)
!12983 = !DILocation(line: 109, column: 78, scope: !12981)
!12984 = !DILocation(line: 109, column: 108, scope: !12981)
!12985 = !DILocation(line: 109, column: 78, scope: !2136)
!12986 = !DILocation(line: 109, column: 78, scope: !12987)
!12987 = !DILexicalBlockFile(scope: !2136, file: !352, discriminator: 2)
!12988 = !DILocation(line: 109, column: 139, scope: !12989)
!12989 = !DILexicalBlockFile(scope: !12981, file: !352, discriminator: 3)
!12990 = !DILocation(line: 109, column: 157, scope: !12981)
!12991 = !DILocation(line: 109, column: 167, scope: !12981)
!12992 = !DILocation(line: 109, column: 192, scope: !12981)
!12993 = !DILocation(line: 109, column: 123, scope: !12981)
!12994 = !DILocation(line: 109, column: 211, scope: !12995)
!12995 = !DILexicalBlockFile(scope: !2137, file: !352, discriminator: 4)
!12996 = !DILocation(line: 109, column: 211, scope: !2136)
!12997 = !DILocation(line: 109, column: 211, scope: !12998)
!12998 = !DILexicalBlockFile(scope: !2136, file: !352, discriminator: 5)
!12999 = !DILocation(line: 110, column: 17, scope: !2137)
!13000 = !DILocation(line: 114, column: 15, scope: !2132)
!13001 = !DILocation(line: 114, column: 20, scope: !2132)
!13002 = !DILocation(line: 114, column: 13, scope: !2132)
!13003 = !DILocation(line: 115, column: 24, scope: !2132)
!13004 = !DILocation(line: 115, column: 9, scope: !2132)
!13005 = !DILocation(line: 115, column: 14, scope: !2132)
!13006 = !DILocation(line: 115, column: 22, scope: !2132)
!13007 = !DILocation(line: 116, column: 9, scope: !2132)
!13008 = !DILocation(line: 116, column: 14, scope: !13009)
!13009 = !DILexicalBlockFile(scope: !2142, file: !352, discriminator: 1)
!13010 = !DILocation(line: 116, column: 24, scope: !2142)
!13011 = !DILocation(line: 116, column: 55, scope: !2142)
!13012 = !DILocation(line: 116, column: 65, scope: !2145)
!13013 = !DILocation(line: 116, column: 81, scope: !2145)
!13014 = !DILocation(line: 116, column: 65, scope: !2142)
!13015 = !DILocation(line: 116, column: 96, scope: !13016)
!13016 = !DILexicalBlockFile(scope: !2145, file: !352, discriminator: 2)
!13017 = !DILocation(line: 116, column: 101, scope: !13018)
!13018 = !DILexicalBlockFile(scope: !2144, file: !352, discriminator: 4)
!13019 = !DILocation(line: 116, column: 111, scope: !2144)
!13020 = !DILocation(line: 116, column: 141, scope: !2144)
!13021 = !DILocation(line: 116, column: 167, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !2144, file: !352, line: 116, column: 164)
!13023 = !DILocation(line: 116, column: 184, scope: !13022)
!13024 = !DILocation(line: 116, column: 164, scope: !13022)
!13025 = !DILocation(line: 116, column: 194, scope: !13022)
!13026 = !DILocation(line: 116, column: 164, scope: !2144)
!13027 = !DILocation(line: 116, column: 164, scope: !13028)
!13028 = !DILexicalBlockFile(scope: !2144, file: !352, discriminator: 5)
!13029 = !DILocation(line: 116, column: 225, scope: !13030)
!13030 = !DILexicalBlockFile(scope: !13022, file: !352, discriminator: 6)
!13031 = !DILocation(line: 116, column: 243, scope: !13022)
!13032 = !DILocation(line: 116, column: 253, scope: !13022)
!13033 = !DILocation(line: 116, column: 278, scope: !13022)
!13034 = !DILocation(line: 116, column: 209, scope: !13022)
!13035 = !DILocation(line: 116, column: 297, scope: !13036)
!13036 = !DILexicalBlockFile(scope: !2145, file: !352, discriminator: 7)
!13037 = !DILocation(line: 116, column: 297, scope: !2144)
!13038 = !DILocation(line: 116, column: 297, scope: !13039)
!13039 = !DILexicalBlockFile(scope: !2144, file: !352, discriminator: 8)
!13040 = !DILocation(line: 116, column: 297, scope: !13041)
!13041 = !DILexicalBlockFile(scope: !2144, file: !352, discriminator: 9)
!13042 = !DILocation(line: 116, column: 310, scope: !13043)
!13043 = !DILexicalBlockFile(scope: !13044, file: !352, discriminator: 10)
!13044 = !DILexicalBlockFile(scope: !2132, file: !352, discriminator: 3)
!13045 = !DILocation(line: 116, column: 310, scope: !2142)
!13046 = !DILocation(line: 116, column: 310, scope: !13047)
!13047 = !DILexicalBlockFile(scope: !2142, file: !352, discriminator: 11)
!13048 = !DILocation(line: 118, column: 15, scope: !2132)
!13049 = !DILocation(line: 118, column: 20, scope: !2132)
!13050 = !DILocation(line: 118, column: 13, scope: !2132)
!13051 = !DILocation(line: 119, column: 26, scope: !2132)
!13052 = !DILocation(line: 119, column: 9, scope: !2132)
!13053 = !DILocation(line: 119, column: 14, scope: !2132)
!13054 = !DILocation(line: 119, column: 24, scope: !2132)
!13055 = !DILocation(line: 120, column: 9, scope: !2132)
!13056 = !DILocation(line: 120, column: 14, scope: !13057)
!13057 = !DILexicalBlockFile(scope: !2147, file: !352, discriminator: 1)
!13058 = !DILocation(line: 120, column: 24, scope: !2147)
!13059 = !DILocation(line: 120, column: 55, scope: !2147)
!13060 = !DILocation(line: 120, column: 65, scope: !2150)
!13061 = !DILocation(line: 120, column: 81, scope: !2150)
!13062 = !DILocation(line: 120, column: 65, scope: !2147)
!13063 = !DILocation(line: 120, column: 96, scope: !13064)
!13064 = !DILexicalBlockFile(scope: !2150, file: !352, discriminator: 2)
!13065 = !DILocation(line: 120, column: 101, scope: !13066)
!13066 = !DILexicalBlockFile(scope: !2149, file: !352, discriminator: 4)
!13067 = !DILocation(line: 120, column: 111, scope: !2149)
!13068 = !DILocation(line: 120, column: 141, scope: !2149)
!13069 = !DILocation(line: 120, column: 167, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !2149, file: !352, line: 120, column: 164)
!13071 = !DILocation(line: 120, column: 184, scope: !13070)
!13072 = !DILocation(line: 120, column: 164, scope: !13070)
!13073 = !DILocation(line: 120, column: 194, scope: !13070)
!13074 = !DILocation(line: 120, column: 164, scope: !2149)
!13075 = !DILocation(line: 120, column: 164, scope: !13076)
!13076 = !DILexicalBlockFile(scope: !2149, file: !352, discriminator: 5)
!13077 = !DILocation(line: 120, column: 225, scope: !13078)
!13078 = !DILexicalBlockFile(scope: !13070, file: !352, discriminator: 6)
!13079 = !DILocation(line: 120, column: 243, scope: !13070)
!13080 = !DILocation(line: 120, column: 253, scope: !13070)
!13081 = !DILocation(line: 120, column: 278, scope: !13070)
!13082 = !DILocation(line: 120, column: 209, scope: !13070)
!13083 = !DILocation(line: 120, column: 297, scope: !13084)
!13084 = !DILexicalBlockFile(scope: !2150, file: !352, discriminator: 7)
!13085 = !DILocation(line: 120, column: 297, scope: !2149)
!13086 = !DILocation(line: 120, column: 297, scope: !13087)
!13087 = !DILexicalBlockFile(scope: !2149, file: !352, discriminator: 8)
!13088 = !DILocation(line: 120, column: 297, scope: !13089)
!13089 = !DILexicalBlockFile(scope: !2149, file: !352, discriminator: 9)
!13090 = !DILocation(line: 120, column: 310, scope: !13043)
!13091 = !DILocation(line: 120, column: 310, scope: !2147)
!13092 = !DILocation(line: 120, column: 310, scope: !13093)
!13093 = !DILexicalBlockFile(scope: !2147, file: !352, discriminator: 11)
!13094 = !DILocation(line: 82, column: 5, scope: !2133)
!13095 = !DILocation(line: 123, column: 21, scope: !2118)
!13096 = !DILocation(line: 123, column: 26, scope: !2118)
!13097 = !DILocation(line: 123, column: 37, scope: !2118)
!13098 = !DILocation(line: 123, column: 46, scope: !2118)
!13099 = !DILocation(line: 124, column: 11, scope: !2118)
!13100 = !DILocation(line: 124, column: 16, scope: !2118)
!13101 = !DILocation(line: 124, column: 9, scope: !2118)
!13102 = !DILocation(line: 125, column: 19, scope: !2118)
!13103 = !DILocation(line: 125, column: 24, scope: !2118)
!13104 = !DILocation(line: 125, column: 5, scope: !2118)
!13105 = !DILocation(line: 125, column: 10, scope: !2118)
!13106 = !DILocation(line: 125, column: 17, scope: !2118)
!13107 = !DILocation(line: 126, column: 5, scope: !2118)
!13108 = !DILocation(line: 126, column: 10, scope: !13109)
!13109 = !DILexicalBlockFile(scope: !2152, file: !352, discriminator: 1)
!13110 = !DILocation(line: 126, column: 20, scope: !2152)
!13111 = !DILocation(line: 126, column: 51, scope: !2152)
!13112 = !DILocation(line: 126, column: 61, scope: !2155)
!13113 = !DILocation(line: 126, column: 77, scope: !2155)
!13114 = !DILocation(line: 126, column: 61, scope: !2152)
!13115 = !DILocation(line: 126, column: 92, scope: !13116)
!13116 = !DILexicalBlockFile(scope: !2155, file: !352, discriminator: 2)
!13117 = !DILocation(line: 126, column: 97, scope: !13118)
!13118 = !DILexicalBlockFile(scope: !2154, file: !352, discriminator: 4)
!13119 = !DILocation(line: 126, column: 107, scope: !2154)
!13120 = !DILocation(line: 126, column: 137, scope: !2154)
!13121 = !DILocation(line: 126, column: 163, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !2154, file: !352, line: 126, column: 160)
!13123 = !DILocation(line: 126, column: 180, scope: !13122)
!13124 = !DILocation(line: 126, column: 160, scope: !13122)
!13125 = !DILocation(line: 126, column: 190, scope: !13122)
!13126 = !DILocation(line: 126, column: 160, scope: !2154)
!13127 = !DILocation(line: 126, column: 160, scope: !13128)
!13128 = !DILexicalBlockFile(scope: !2154, file: !352, discriminator: 5)
!13129 = !DILocation(line: 126, column: 221, scope: !13130)
!13130 = !DILexicalBlockFile(scope: !13122, file: !352, discriminator: 6)
!13131 = !DILocation(line: 126, column: 239, scope: !13122)
!13132 = !DILocation(line: 126, column: 249, scope: !13122)
!13133 = !DILocation(line: 126, column: 274, scope: !13122)
!13134 = !DILocation(line: 126, column: 205, scope: !13122)
!13135 = !DILocation(line: 126, column: 293, scope: !13136)
!13136 = !DILexicalBlockFile(scope: !2155, file: !352, discriminator: 7)
!13137 = !DILocation(line: 126, column: 293, scope: !2154)
!13138 = !DILocation(line: 126, column: 293, scope: !13139)
!13139 = !DILexicalBlockFile(scope: !2154, file: !352, discriminator: 8)
!13140 = !DILocation(line: 126, column: 293, scope: !13141)
!13141 = !DILexicalBlockFile(scope: !2154, file: !352, discriminator: 9)
!13142 = !DILocation(line: 126, column: 306, scope: !13143)
!13143 = !DILexicalBlockFile(scope: !13144, file: !352, discriminator: 10)
!13144 = !DILexicalBlockFile(scope: !2118, file: !352, discriminator: 3)
!13145 = !DILocation(line: 126, column: 306, scope: !2152)
!13146 = !DILocation(line: 126, column: 306, scope: !13147)
!13147 = !DILexicalBlockFile(scope: !2152, file: !352, discriminator: 11)
!13148 = !DILocation(line: 128, column: 31, scope: !2118)
!13149 = !DILocation(line: 128, column: 36, scope: !2118)
!13150 = !DILocation(line: 128, column: 41, scope: !2118)
!13151 = !DILocation(line: 128, column: 15, scope: !2118)
!13152 = !DILocation(line: 128, column: 13, scope: !2118)
!13153 = !DILocation(line: 129, column: 9, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !2118, file: !352, line: 129, column: 9)
!13155 = !DILocation(line: 129, column: 17, scope: !13154)
!13156 = !DILocation(line: 129, column: 9, scope: !2118)
!13157 = !DILocation(line: 130, column: 9, scope: !13154)
!13158 = !DILocation(line: 132, column: 25, scope: !2118)
!13159 = !DILocation(line: 132, column: 30, scope: !2118)
!13160 = !DILocation(line: 132, column: 39, scope: !2118)
!13161 = !DILocation(line: 132, column: 9, scope: !2118)
!13162 = !DILocation(line: 132, column: 7, scope: !2118)
!13163 = !DILocation(line: 133, column: 5, scope: !2118)
!13164 = !DILocation(line: 133, column: 10, scope: !13165)
!13165 = !DILexicalBlockFile(scope: !2157, file: !352, discriminator: 1)
!13166 = !DILocation(line: 133, column: 20, scope: !2157)
!13167 = !DILocation(line: 133, column: 50, scope: !2157)
!13168 = !DILocation(line: 133, column: 68, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !2157, file: !352, line: 133, column: 65)
!13170 = !DILocation(line: 133, column: 85, scope: !13169)
!13171 = !DILocation(line: 133, column: 65, scope: !13169)
!13172 = !DILocation(line: 133, column: 95, scope: !13169)
!13173 = !DILocation(line: 133, column: 65, scope: !2157)
!13174 = !DILocation(line: 133, column: 65, scope: !13175)
!13175 = !DILexicalBlockFile(scope: !2157, file: !352, discriminator: 2)
!13176 = !DILocation(line: 133, column: 126, scope: !13177)
!13177 = !DILexicalBlockFile(scope: !13169, file: !352, discriminator: 3)
!13178 = !DILocation(line: 133, column: 144, scope: !13169)
!13179 = !DILocation(line: 133, column: 154, scope: !13169)
!13180 = !DILocation(line: 133, column: 179, scope: !13169)
!13181 = !DILocation(line: 133, column: 110, scope: !13169)
!13182 = !DILocation(line: 133, column: 198, scope: !13183)
!13183 = !DILexicalBlockFile(scope: !2118, file: !352, discriminator: 4)
!13184 = !DILocation(line: 133, column: 198, scope: !2157)
!13185 = !DILocation(line: 133, column: 198, scope: !13186)
!13186 = !DILexicalBlockFile(scope: !2157, file: !352, discriminator: 5)
!13187 = !DILocation(line: 134, column: 12, scope: !2118)
!13188 = !DILocation(line: 134, column: 5, scope: !2118)
!13189 = !DILocation(line: 135, column: 1, scope: !2118)
!13190 = !DILocation(line: 27, column: 27, scope: !2194)
!13191 = !DILocation(line: 27, column: 43, scope: !2194)
!13192 = !DILocation(line: 27, column: 59, scope: !2194)
!13193 = !DILocation(line: 30, column: 5, scope: !2194)
!13194 = !DILocation(line: 30, column: 20, scope: !2194)
!13195 = !DILocation(line: 31, column: 5, scope: !2194)
!13196 = !DILocation(line: 31, column: 15, scope: !2194)
!13197 = !DILocation(line: 31, column: 20, scope: !2194)
!13198 = !DILocation(line: 33, column: 38, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !2194, file: !352, line: 33, column: 9)
!13200 = !DILocation(line: 33, column: 44, scope: !13199)
!13201 = !DILocation(line: 33, column: 10, scope: !13199)
!13202 = !DILocation(line: 33, column: 9, scope: !2194)
!13203 = !DILocation(line: 35, column: 9, scope: !13199)
!13204 = !DILocation(line: 37, column: 28, scope: !2194)
!13205 = !DILocation(line: 37, column: 34, scope: !2194)
!13206 = !DILocation(line: 37, column: 43, scope: !2194)
!13207 = !DILocation(line: 37, column: 11, scope: !2194)
!13208 = !DILocation(line: 37, column: 9, scope: !2194)
!13209 = !DILocation(line: 38, column: 9, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !2194, file: !352, line: 38, column: 9)
!13211 = !DILocation(line: 38, column: 13, scope: !13210)
!13212 = !DILocation(line: 38, column: 9, scope: !2194)
!13213 = !DILocation(line: 39, column: 9, scope: !13210)
!13214 = !DILocation(line: 40, column: 5, scope: !2194)
!13215 = !DILocation(line: 40, column: 10, scope: !2194)
!13216 = !DILocation(line: 40, column: 17, scope: !2194)
!13217 = !DILocation(line: 41, column: 5, scope: !2194)
!13218 = !DILocation(line: 41, column: 10, scope: !2194)
!13219 = !DILocation(line: 41, column: 18, scope: !2194)
!13220 = !DILocation(line: 42, column: 5, scope: !2194)
!13221 = !DILocation(line: 42, column: 10, scope: !2194)
!13222 = !DILocation(line: 42, column: 20, scope: !2194)
!13223 = !DILocation(line: 43, column: 20, scope: !2194)
!13224 = !DILocation(line: 43, column: 5, scope: !2194)
!13225 = !DILocation(line: 43, column: 10, scope: !2194)
!13226 = !DILocation(line: 43, column: 18, scope: !2194)
!13227 = !DILocation(line: 44, column: 21, scope: !2194)
!13228 = !DILocation(line: 44, column: 32, scope: !2194)
!13229 = !DILocation(line: 44, column: 41, scope: !2194)
!13230 = !DILocation(line: 45, column: 32, scope: !2194)
!13231 = !DILocation(line: 45, column: 15, scope: !2194)
!13232 = !DILocation(line: 45, column: 5, scope: !2194)
!13233 = !DILocation(line: 45, column: 10, scope: !2194)
!13234 = !DILocation(line: 45, column: 13, scope: !2194)
!13235 = !DILocation(line: 46, column: 9, scope: !2205)
!13236 = !DILocation(line: 46, column: 14, scope: !2205)
!13237 = !DILocation(line: 46, column: 17, scope: !2205)
!13238 = !DILocation(line: 46, column: 9, scope: !2194)
!13239 = !DILocation(line: 47, column: 9, scope: !2204)
!13240 = !DILocation(line: 47, column: 14, scope: !13241)
!13241 = !DILexicalBlockFile(scope: !2203, file: !352, discriminator: 1)
!13242 = !DILocation(line: 47, column: 24, scope: !2203)
!13243 = !DILocation(line: 47, column: 54, scope: !2203)
!13244 = !DILocation(line: 47, column: 41, scope: !2203)
!13245 = !DILocation(line: 47, column: 68, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !2203, file: !352, line: 47, column: 65)
!13247 = !DILocation(line: 47, column: 85, scope: !13246)
!13248 = !DILocation(line: 47, column: 65, scope: !13246)
!13249 = !DILocation(line: 47, column: 95, scope: !13246)
!13250 = !DILocation(line: 47, column: 65, scope: !2203)
!13251 = !DILocation(line: 47, column: 65, scope: !13252)
!13252 = !DILexicalBlockFile(scope: !2203, file: !352, discriminator: 2)
!13253 = !DILocation(line: 47, column: 126, scope: !13254)
!13254 = !DILexicalBlockFile(scope: !13246, file: !352, discriminator: 3)
!13255 = !DILocation(line: 47, column: 144, scope: !13246)
!13256 = !DILocation(line: 47, column: 154, scope: !13246)
!13257 = !DILocation(line: 47, column: 179, scope: !13246)
!13258 = !DILocation(line: 47, column: 110, scope: !13246)
!13259 = !DILocation(line: 47, column: 198, scope: !13260)
!13260 = !DILexicalBlockFile(scope: !2204, file: !352, discriminator: 4)
!13261 = !DILocation(line: 47, column: 198, scope: !2203)
!13262 = !DILocation(line: 47, column: 198, scope: !13263)
!13263 = !DILexicalBlockFile(scope: !2203, file: !352, discriminator: 5)
!13264 = !DILocation(line: 48, column: 9, scope: !2204)
!13265 = !DILocation(line: 50, column: 24, scope: !2194)
!13266 = !DILocation(line: 50, column: 12, scope: !2194)
!13267 = !DILocation(line: 50, column: 5, scope: !2194)
!13268 = !DILocation(line: 51, column: 1, scope: !2194)
!13269 = !DILocation(line: 255, column: 32, scope: !2158)
!13270 = !DILocation(line: 255, column: 50, scope: !2158)
!13271 = !DILocation(line: 257, column: 5, scope: !2158)
!13272 = !DILocation(line: 257, column: 21, scope: !2158)
!13273 = !DILocation(line: 259, column: 32, scope: !2158)
!13274 = !DILocation(line: 259, column: 13, scope: !2158)
!13275 = !DILocation(line: 259, column: 9, scope: !2158)
!13276 = !DILocation(line: 260, column: 9, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !2158, file: !352, line: 260, column: 9)
!13278 = !DILocation(line: 260, column: 13, scope: !13277)
!13279 = !DILocation(line: 260, column: 9, scope: !2158)
!13280 = !DILocation(line: 261, column: 9, scope: !13277)
!13281 = !DILocation(line: 262, column: 31, scope: !2158)
!13282 = !DILocation(line: 262, column: 19, scope: !2158)
!13283 = !DILocation(line: 262, column: 5, scope: !2158)
!13284 = !DILocation(line: 262, column: 10, scope: !2158)
!13285 = !DILocation(line: 262, column: 17, scope: !2158)
!13286 = !DILocation(line: 263, column: 21, scope: !2158)
!13287 = !DILocation(line: 263, column: 8, scope: !2158)
!13288 = !DILocation(line: 263, column: 31, scope: !2158)
!13289 = !DILocation(line: 263, column: 40, scope: !2158)
!13290 = !DILocation(line: 264, column: 19, scope: !2158)
!13291 = !DILocation(line: 264, column: 5, scope: !2158)
!13292 = !DILocation(line: 264, column: 10, scope: !2158)
!13293 = !DILocation(line: 264, column: 17, scope: !2158)
!13294 = !DILocation(line: 265, column: 21, scope: !2158)
!13295 = !DILocation(line: 265, column: 31, scope: !2158)
!13296 = !DILocation(line: 265, column: 40, scope: !2158)
!13297 = !DILocation(line: 267, column: 23, scope: !2158)
!13298 = !DILocation(line: 267, column: 5, scope: !2158)
!13299 = !DILocation(line: 268, column: 24, scope: !2158)
!13300 = !DILocation(line: 268, column: 12, scope: !2158)
!13301 = !DILocation(line: 268, column: 5, scope: !2158)
!13302 = !DILocation(line: 269, column: 1, scope: !2158)
!13303 = !DILocation(line: 138, column: 31, scope: !2165)
!13304 = !DILocation(line: 143, column: 5, scope: !2165)
!13305 = !DILocation(line: 143, column: 15, scope: !2165)
!13306 = !DILocation(line: 144, column: 9, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !2165, file: !352, line: 144, column: 9)
!13308 = !DILocation(line: 144, column: 13, scope: !13307)
!13309 = !DILocation(line: 144, column: 20, scope: !13307)
!13310 = !DILocation(line: 144, column: 23, scope: !13311)
!13311 = !DILexicalBlockFile(scope: !13307, file: !352, discriminator: 1)
!13312 = !DILocation(line: 144, column: 27, scope: !13307)
!13313 = !DILocation(line: 144, column: 23, scope: !13307)
!13314 = !DILocation(line: 144, column: 35, scope: !13307)
!13315 = !DILocation(line: 144, column: 38, scope: !13316)
!13316 = !DILexicalBlockFile(scope: !13307, file: !352, discriminator: 2)
!13317 = !DILocation(line: 144, column: 42, scope: !13307)
!13318 = !DILocation(line: 144, column: 38, scope: !13307)
!13319 = !DILocation(line: 144, column: 9, scope: !2165)
!13320 = !DILocation(line: 145, column: 59, scope: !13307)
!13321 = !DILocation(line: 145, column: 47, scope: !13307)
!13322 = !DILocation(line: 145, column: 65, scope: !13307)
!13323 = !DILocation(line: 146, column: 13, scope: !13307)
!13324 = !DILocation(line: 146, column: 17, scope: !13307)
!13325 = !DILocation(line: 146, column: 21, scope: !13307)
!13326 = !DILocation(line: 146, column: 25, scope: !13307)
!13327 = !DILocation(line: 146, column: 34, scope: !13307)
!13328 = !DILocation(line: 146, column: 38, scope: !13307)
!13329 = !DILocation(line: 146, column: 47, scope: !13307)
!13330 = !DILocation(line: 146, column: 51, scope: !13307)
!13331 = !DILocation(line: 146, column: 62, scope: !13307)
!13332 = !DILocation(line: 146, column: 66, scope: !13307)
!13333 = !DILocation(line: 145, column: 17, scope: !13307)
!13334 = !DILocation(line: 145, column: 15, scope: !13307)
!13335 = !DILocation(line: 145, column: 9, scope: !13307)
!13336 = !DILocation(line: 148, column: 54, scope: !13307)
!13337 = !DILocation(line: 148, column: 42, scope: !13307)
!13338 = !DILocation(line: 148, column: 60, scope: !13307)
!13339 = !DILocation(line: 149, column: 13, scope: !13307)
!13340 = !DILocation(line: 149, column: 17, scope: !13307)
!13341 = !DILocation(line: 149, column: 21, scope: !13307)
!13342 = !DILocation(line: 149, column: 25, scope: !13307)
!13343 = !DILocation(line: 148, column: 17, scope: !13307)
!13344 = !DILocation(line: 148, column: 15, scope: !13307)
!13345 = !DILocation(line: 151, column: 12, scope: !2165)
!13346 = !DILocation(line: 152, column: 1, scope: !2165)
!13347 = !DILocation(line: 151, column: 5, scope: !2165)
!13348 = !DILocation(line: 157, column: 33, scope: !2169)
!13349 = !DILocation(line: 157, column: 47, scope: !2169)
!13350 = !DILocation(line: 159, column: 5, scope: !2169)
!13351 = !DILocation(line: 159, column: 15, scope: !2169)
!13352 = !DILocation(line: 159, column: 25, scope: !2169)
!13353 = !DILocation(line: 159, column: 37, scope: !2169)
!13354 = !DILocation(line: 160, column: 27, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !2169, file: !352, line: 160, column: 9)
!13356 = !DILocation(line: 160, column: 10, scope: !13355)
!13357 = !DILocation(line: 160, column: 9, scope: !2169)
!13358 = !DILocation(line: 161, column: 9, scope: !13355)
!13359 = !DILocation(line: 162, column: 5, scope: !2169)
!13360 = !DILocation(line: 162, column: 10, scope: !13361)
!13361 = !DILexicalBlockFile(scope: !2177, file: !352, discriminator: 1)
!13362 = !DILocation(line: 162, column: 20, scope: !2177)
!13363 = !DILocation(line: 162, column: 43, scope: !2177)
!13364 = !DILocation(line: 162, column: 47, scope: !2177)
!13365 = !DILocation(line: 162, column: 61, scope: !2181)
!13366 = !DILocation(line: 162, column: 69, scope: !2181)
!13367 = !DILocation(line: 162, column: 61, scope: !2177)
!13368 = !DILocation(line: 162, column: 87, scope: !13369)
!13369 = !DILexicalBlockFile(scope: !2180, file: !352, discriminator: 2)
!13370 = !DILocation(line: 162, column: 91, scope: !2180)
!13371 = !DILocation(line: 162, column: 100, scope: !2180)
!13372 = !DILocation(line: 162, column: 114, scope: !2180)
!13373 = !DILocation(line: 162, column: 119, scope: !13374)
!13374 = !DILexicalBlockFile(scope: !2179, file: !352, discriminator: 4)
!13375 = !DILocation(line: 162, column: 129, scope: !2179)
!13376 = !DILocation(line: 162, column: 159, scope: !2179)
!13377 = !DILocation(line: 162, column: 177, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !2179, file: !352, line: 162, column: 174)
!13379 = !DILocation(line: 162, column: 194, scope: !13378)
!13380 = !DILocation(line: 162, column: 174, scope: !13378)
!13381 = !DILocation(line: 162, column: 204, scope: !13378)
!13382 = !DILocation(line: 162, column: 174, scope: !2179)
!13383 = !DILocation(line: 162, column: 174, scope: !13384)
!13384 = !DILexicalBlockFile(scope: !2179, file: !352, discriminator: 5)
!13385 = !DILocation(line: 162, column: 235, scope: !13386)
!13386 = !DILexicalBlockFile(scope: !13378, file: !352, discriminator: 6)
!13387 = !DILocation(line: 162, column: 253, scope: !13378)
!13388 = !DILocation(line: 162, column: 263, scope: !13378)
!13389 = !DILocation(line: 162, column: 288, scope: !13378)
!13390 = !DILocation(line: 162, column: 219, scope: !13378)
!13391 = !DILocation(line: 162, column: 307, scope: !13392)
!13392 = !DILexicalBlockFile(scope: !2180, file: !352, discriminator: 7)
!13393 = !DILocation(line: 162, column: 307, scope: !2179)
!13394 = !DILocation(line: 162, column: 307, scope: !13395)
!13395 = !DILexicalBlockFile(scope: !2179, file: !352, discriminator: 8)
!13396 = !DILocation(line: 162, column: 320, scope: !13397)
!13397 = !DILexicalBlockFile(scope: !2180, file: !352, discriminator: 9)
!13398 = !DILocation(line: 162, column: 322, scope: !13399)
!13399 = !DILexicalBlockFile(scope: !13400, file: !352, discriminator: 10)
!13400 = !DILexicalBlockFile(scope: !2169, file: !352, discriminator: 3)
!13401 = !DILocation(line: 162, column: 322, scope: !2177)
!13402 = !DILocation(line: 162, column: 322, scope: !13403)
!13403 = !DILexicalBlockFile(scope: !2177, file: !352, discriminator: 11)
!13404 = !DILocation(line: 163, column: 19, scope: !2169)
!13405 = !DILocation(line: 163, column: 5, scope: !2169)
!13406 = !DILocation(line: 163, column: 9, scope: !2169)
!13407 = !DILocation(line: 163, column: 17, scope: !2169)
!13408 = !DILocation(line: 164, column: 21, scope: !2169)
!13409 = !DILocation(line: 164, column: 25, scope: !2169)
!13410 = !DILocation(line: 164, column: 36, scope: !2169)
!13411 = !DILocation(line: 164, column: 45, scope: !2169)
!13412 = !DILocation(line: 165, column: 5, scope: !2169)
!13413 = !DILocation(line: 165, column: 10, scope: !13414)
!13414 = !DILexicalBlockFile(scope: !2183, file: !352, discriminator: 1)
!13415 = !DILocation(line: 165, column: 20, scope: !2183)
!13416 = !DILocation(line: 165, column: 43, scope: !2183)
!13417 = !DILocation(line: 165, column: 47, scope: !2183)
!13418 = !DILocation(line: 165, column: 63, scope: !2187)
!13419 = !DILocation(line: 165, column: 71, scope: !2187)
!13420 = !DILocation(line: 165, column: 63, scope: !2183)
!13421 = !DILocation(line: 165, column: 89, scope: !13422)
!13422 = !DILexicalBlockFile(scope: !2186, file: !352, discriminator: 2)
!13423 = !DILocation(line: 165, column: 93, scope: !2186)
!13424 = !DILocation(line: 165, column: 104, scope: !2186)
!13425 = !DILocation(line: 165, column: 118, scope: !2186)
!13426 = !DILocation(line: 165, column: 123, scope: !13427)
!13427 = !DILexicalBlockFile(scope: !2185, file: !352, discriminator: 4)
!13428 = !DILocation(line: 165, column: 133, scope: !2185)
!13429 = !DILocation(line: 165, column: 163, scope: !2185)
!13430 = !DILocation(line: 165, column: 181, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !2185, file: !352, line: 165, column: 178)
!13432 = !DILocation(line: 165, column: 198, scope: !13431)
!13433 = !DILocation(line: 165, column: 178, scope: !13431)
!13434 = !DILocation(line: 165, column: 208, scope: !13431)
!13435 = !DILocation(line: 165, column: 178, scope: !2185)
!13436 = !DILocation(line: 165, column: 178, scope: !13437)
!13437 = !DILexicalBlockFile(scope: !2185, file: !352, discriminator: 5)
!13438 = !DILocation(line: 165, column: 239, scope: !13439)
!13439 = !DILexicalBlockFile(scope: !13431, file: !352, discriminator: 6)
!13440 = !DILocation(line: 165, column: 257, scope: !13431)
!13441 = !DILocation(line: 165, column: 267, scope: !13431)
!13442 = !DILocation(line: 165, column: 292, scope: !13431)
!13443 = !DILocation(line: 165, column: 223, scope: !13431)
!13444 = !DILocation(line: 165, column: 311, scope: !13445)
!13445 = !DILexicalBlockFile(scope: !2186, file: !352, discriminator: 7)
!13446 = !DILocation(line: 165, column: 311, scope: !2185)
!13447 = !DILocation(line: 165, column: 311, scope: !13448)
!13448 = !DILexicalBlockFile(scope: !2185, file: !352, discriminator: 8)
!13449 = !DILocation(line: 165, column: 324, scope: !13450)
!13450 = !DILexicalBlockFile(scope: !2186, file: !352, discriminator: 9)
!13451 = !DILocation(line: 165, column: 326, scope: !13399)
!13452 = !DILocation(line: 165, column: 326, scope: !2183)
!13453 = !DILocation(line: 165, column: 326, scope: !13454)
!13454 = !DILexicalBlockFile(scope: !2183, file: !352, discriminator: 11)
!13455 = !DILocation(line: 166, column: 21, scope: !2169)
!13456 = !DILocation(line: 166, column: 5, scope: !2169)
!13457 = !DILocation(line: 166, column: 9, scope: !2169)
!13458 = !DILocation(line: 166, column: 19, scope: !2169)
!13459 = !DILocation(line: 167, column: 21, scope: !2169)
!13460 = !DILocation(line: 167, column: 25, scope: !2169)
!13461 = !DILocation(line: 167, column: 38, scope: !2169)
!13462 = !DILocation(line: 167, column: 47, scope: !2169)
!13463 = !DILocation(line: 168, column: 5, scope: !2169)
!13464 = !DILocation(line: 168, column: 10, scope: !13465)
!13465 = !DILexicalBlockFile(scope: !2189, file: !352, discriminator: 1)
!13466 = !DILocation(line: 168, column: 20, scope: !2189)
!13467 = !DILocation(line: 168, column: 43, scope: !2189)
!13468 = !DILocation(line: 168, column: 47, scope: !2189)
!13469 = !DILocation(line: 168, column: 60, scope: !2193)
!13470 = !DILocation(line: 168, column: 68, scope: !2193)
!13471 = !DILocation(line: 168, column: 60, scope: !2189)
!13472 = !DILocation(line: 168, column: 86, scope: !13473)
!13473 = !DILexicalBlockFile(scope: !2192, file: !352, discriminator: 2)
!13474 = !DILocation(line: 168, column: 90, scope: !2192)
!13475 = !DILocation(line: 168, column: 98, scope: !2192)
!13476 = !DILocation(line: 168, column: 112, scope: !2192)
!13477 = !DILocation(line: 168, column: 117, scope: !13478)
!13478 = !DILexicalBlockFile(scope: !2191, file: !352, discriminator: 4)
!13479 = !DILocation(line: 168, column: 127, scope: !2191)
!13480 = !DILocation(line: 168, column: 157, scope: !2191)
!13481 = !DILocation(line: 168, column: 175, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !2191, file: !352, line: 168, column: 172)
!13483 = !DILocation(line: 168, column: 192, scope: !13482)
!13484 = !DILocation(line: 168, column: 172, scope: !13482)
!13485 = !DILocation(line: 168, column: 202, scope: !13482)
!13486 = !DILocation(line: 168, column: 172, scope: !2191)
!13487 = !DILocation(line: 168, column: 172, scope: !13488)
!13488 = !DILexicalBlockFile(scope: !2191, file: !352, discriminator: 5)
!13489 = !DILocation(line: 168, column: 233, scope: !13490)
!13490 = !DILexicalBlockFile(scope: !13482, file: !352, discriminator: 6)
!13491 = !DILocation(line: 168, column: 251, scope: !13482)
!13492 = !DILocation(line: 168, column: 261, scope: !13482)
!13493 = !DILocation(line: 168, column: 286, scope: !13482)
!13494 = !DILocation(line: 168, column: 217, scope: !13482)
!13495 = !DILocation(line: 168, column: 305, scope: !13496)
!13496 = !DILexicalBlockFile(scope: !2192, file: !352, discriminator: 7)
!13497 = !DILocation(line: 168, column: 305, scope: !2191)
!13498 = !DILocation(line: 168, column: 305, scope: !13499)
!13499 = !DILexicalBlockFile(scope: !2191, file: !352, discriminator: 8)
!13500 = !DILocation(line: 168, column: 318, scope: !13501)
!13501 = !DILexicalBlockFile(scope: !2192, file: !352, discriminator: 9)
!13502 = !DILocation(line: 168, column: 320, scope: !13399)
!13503 = !DILocation(line: 168, column: 320, scope: !2189)
!13504 = !DILocation(line: 168, column: 320, scope: !13505)
!13505 = !DILexicalBlockFile(scope: !2189, file: !352, discriminator: 11)
!13506 = !DILocation(line: 169, column: 18, scope: !2169)
!13507 = !DILocation(line: 169, column: 5, scope: !2169)
!13508 = !DILocation(line: 169, column: 9, scope: !2169)
!13509 = !DILocation(line: 169, column: 16, scope: !2169)
!13510 = !DILocation(line: 170, column: 21, scope: !2169)
!13511 = !DILocation(line: 170, column: 25, scope: !2169)
!13512 = !DILocation(line: 170, column: 35, scope: !2169)
!13513 = !DILocation(line: 170, column: 44, scope: !2169)
!13514 = !DILocation(line: 171, column: 58, scope: !2169)
!13515 = !DILocation(line: 171, column: 5, scope: !2169)
!13516 = !DILocation(line: 172, column: 1, scope: !2169)
!13517 = !DILocation(line: 272, column: 34, scope: !2206)
!13518 = !DILocation(line: 274, column: 25, scope: !2206)
!13519 = !DILocation(line: 274, column: 5, scope: !2206)
!13520 = !DILocation(line: 275, column: 5, scope: !2206)
!13521 = !DILocation(line: 275, column: 10, scope: !13522)
!13522 = !DILexicalBlockFile(scope: !2212, file: !352, discriminator: 1)
!13523 = !DILocation(line: 275, column: 20, scope: !2212)
!13524 = !DILocation(line: 275, column: 50, scope: !2212)
!13525 = !DILocation(line: 275, column: 55, scope: !2212)
!13526 = !DILocation(line: 275, column: 72, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !2212, file: !352, line: 275, column: 69)
!13528 = !DILocation(line: 275, column: 89, scope: !13527)
!13529 = !DILocation(line: 275, column: 69, scope: !13527)
!13530 = !DILocation(line: 275, column: 99, scope: !13527)
!13531 = !DILocation(line: 275, column: 69, scope: !2212)
!13532 = !DILocation(line: 275, column: 69, scope: !13533)
!13533 = !DILexicalBlockFile(scope: !2212, file: !352, discriminator: 2)
!13534 = !DILocation(line: 275, column: 130, scope: !13535)
!13535 = !DILexicalBlockFile(scope: !13527, file: !352, discriminator: 3)
!13536 = !DILocation(line: 275, column: 148, scope: !13527)
!13537 = !DILocation(line: 275, column: 158, scope: !13527)
!13538 = !DILocation(line: 275, column: 183, scope: !13527)
!13539 = !DILocation(line: 275, column: 114, scope: !13527)
!13540 = !DILocation(line: 275, column: 202, scope: !13541)
!13541 = !DILexicalBlockFile(scope: !2206, file: !352, discriminator: 4)
!13542 = !DILocation(line: 275, column: 202, scope: !2212)
!13543 = !DILocation(line: 276, column: 5, scope: !2206)
!13544 = !DILocation(line: 276, column: 10, scope: !13545)
!13545 = !DILexicalBlockFile(scope: !2214, file: !352, discriminator: 1)
!13546 = !DILocation(line: 276, column: 20, scope: !2214)
!13547 = !DILocation(line: 276, column: 50, scope: !2214)
!13548 = !DILocation(line: 276, column: 55, scope: !2214)
!13549 = !DILocation(line: 276, column: 72, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !2214, file: !352, line: 276, column: 69)
!13551 = !DILocation(line: 276, column: 89, scope: !13550)
!13552 = !DILocation(line: 276, column: 69, scope: !13550)
!13553 = !DILocation(line: 276, column: 99, scope: !13550)
!13554 = !DILocation(line: 276, column: 69, scope: !2214)
!13555 = !DILocation(line: 276, column: 69, scope: !13556)
!13556 = !DILexicalBlockFile(scope: !2214, file: !352, discriminator: 2)
!13557 = !DILocation(line: 276, column: 130, scope: !13558)
!13558 = !DILexicalBlockFile(scope: !13550, file: !352, discriminator: 3)
!13559 = !DILocation(line: 276, column: 148, scope: !13550)
!13560 = !DILocation(line: 276, column: 158, scope: !13550)
!13561 = !DILocation(line: 276, column: 183, scope: !13550)
!13562 = !DILocation(line: 276, column: 114, scope: !13550)
!13563 = !DILocation(line: 276, column: 202, scope: !13541)
!13564 = !DILocation(line: 276, column: 202, scope: !2214)
!13565 = !DILocation(line: 277, column: 21, scope: !2206)
!13566 = !DILocation(line: 277, column: 5, scope: !2206)
!13567 = !DILocation(line: 278, column: 1, scope: !2206)
!13568 = !DILocation(line: 281, column: 35, scope: !2215)
!13569 = !DILocation(line: 281, column: 50, scope: !2215)
!13570 = !DILocation(line: 281, column: 63, scope: !2215)
!13571 = !DILocation(line: 283, column: 5, scope: !2215)
!13572 = !DILocation(line: 283, column: 14, scope: !13573)
!13573 = !DILexicalBlockFile(scope: !2224, file: !352, discriminator: 1)
!13574 = !DILocation(line: 283, column: 19, scope: !2224)
!13575 = !DILocation(line: 283, column: 14, scope: !2224)
!13576 = !DILocation(line: 283, column: 14, scope: !2225)
!13577 = !DILocation(line: 283, column: 29, scope: !13578)
!13578 = !DILexicalBlockFile(scope: !2223, file: !352, discriminator: 2)
!13579 = !DILocation(line: 283, column: 33, scope: !2223)
!13580 = !DILocation(line: 283, column: 40, scope: !2223)
!13581 = !DILocation(line: 283, column: 59, scope: !2223)
!13582 = !DILocation(line: 283, column: 64, scope: !2223)
!13583 = !DILocation(line: 283, column: 73, scope: !2223)
!13584 = !DILocation(line: 283, column: 83, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !2223, file: !352, line: 283, column: 83)
!13586 = !DILocation(line: 283, column: 83, scope: !2223)
!13587 = !DILocation(line: 283, column: 96, scope: !13588)
!13588 = !DILexicalBlockFile(scope: !13585, file: !352, discriminator: 4)
!13589 = !DILocation(line: 283, column: 89, scope: !13585)
!13590 = !DILocation(line: 283, column: 102, scope: !13591)
!13591 = !DILexicalBlockFile(scope: !2224, file: !352, discriminator: 5)
!13592 = !DILocation(line: 283, column: 102, scope: !13593)
!13593 = !DILexicalBlockFile(scope: !13594, file: !352, discriminator: 7)
!13594 = !DILexicalBlockFile(scope: !2224, file: !352, discriminator: 6)
!13595 = !DILocation(line: 283, column: 102, scope: !2223)
!13596 = !DILocation(line: 283, column: 104, scope: !13597)
!13597 = !DILexicalBlockFile(scope: !13598, file: !352, discriminator: 8)
!13598 = !DILexicalBlockFile(scope: !2225, file: !352, discriminator: 3)
!13599 = !DILocation(line: 284, column: 5, scope: !2215)
!13600 = !DILocation(line: 284, column: 14, scope: !13601)
!13601 = !DILexicalBlockFile(scope: !2228, file: !352, discriminator: 1)
!13602 = !DILocation(line: 284, column: 19, scope: !2228)
!13603 = !DILocation(line: 284, column: 14, scope: !2228)
!13604 = !DILocation(line: 284, column: 14, scope: !2229)
!13605 = !DILocation(line: 284, column: 29, scope: !13606)
!13606 = !DILexicalBlockFile(scope: !2227, file: !352, discriminator: 2)
!13607 = !DILocation(line: 284, column: 33, scope: !2227)
!13608 = !DILocation(line: 284, column: 40, scope: !2227)
!13609 = !DILocation(line: 284, column: 59, scope: !2227)
!13610 = !DILocation(line: 284, column: 64, scope: !2227)
!13611 = !DILocation(line: 284, column: 73, scope: !2227)
!13612 = !DILocation(line: 284, column: 83, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !2227, file: !352, line: 284, column: 83)
!13614 = !DILocation(line: 284, column: 83, scope: !2227)
!13615 = !DILocation(line: 284, column: 96, scope: !13616)
!13616 = !DILexicalBlockFile(scope: !13613, file: !352, discriminator: 4)
!13617 = !DILocation(line: 284, column: 89, scope: !13613)
!13618 = !DILocation(line: 284, column: 102, scope: !13619)
!13619 = !DILexicalBlockFile(scope: !2228, file: !352, discriminator: 5)
!13620 = !DILocation(line: 284, column: 102, scope: !13621)
!13621 = !DILexicalBlockFile(scope: !13622, file: !352, discriminator: 7)
!13622 = !DILexicalBlockFile(scope: !2228, file: !352, discriminator: 6)
!13623 = !DILocation(line: 284, column: 102, scope: !2227)
!13624 = !DILocation(line: 284, column: 104, scope: !13625)
!13625 = !DILexicalBlockFile(scope: !13626, file: !352, discriminator: 8)
!13626 = !DILexicalBlockFile(scope: !2229, file: !352, discriminator: 3)
!13627 = !DILocation(line: 285, column: 5, scope: !2215)
!13628 = !DILocation(line: 286, column: 1, scope: !2215)
!13629 = !DILocation(line: 289, column: 31, scope: !2230)
!13630 = !DILocation(line: 291, column: 5, scope: !2230)
!13631 = !DILocation(line: 291, column: 20, scope: !2230)
!13632 = !DILocation(line: 291, column: 43, scope: !2230)
!13633 = !DILocation(line: 291, column: 48, scope: !2230)
!13634 = !DILocation(line: 291, column: 26, scope: !2230)
!13635 = !DILocation(line: 292, column: 5, scope: !2230)
!13636 = !DILocation(line: 292, column: 15, scope: !2230)
!13637 = !DILocation(line: 292, column: 26, scope: !2230)
!13638 = !DILocation(line: 292, column: 35, scope: !2230)
!13639 = !DILocation(line: 293, column: 5, scope: !2230)
!13640 = !DILocation(line: 293, column: 9, scope: !2230)
!13641 = !DILocation(line: 295, column: 9, scope: !2247)
!13642 = !DILocation(line: 295, column: 14, scope: !2247)
!13643 = !DILocation(line: 295, column: 24, scope: !2247)
!13644 = !DILocation(line: 295, column: 9, scope: !2230)
!13645 = !DILocation(line: 296, column: 32, scope: !2246)
!13646 = !DILocation(line: 296, column: 37, scope: !2246)
!13647 = !DILocation(line: 296, column: 20, scope: !2246)
!13648 = !DILocation(line: 296, column: 18, scope: !2246)
!13649 = !DILocation(line: 297, column: 13, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !2246, file: !352, line: 297, column: 13)
!13651 = !DILocation(line: 297, column: 22, scope: !13650)
!13652 = !DILocation(line: 297, column: 13, scope: !2246)
!13653 = !DILocation(line: 298, column: 13, scope: !13650)
!13654 = !DILocation(line: 300, column: 13, scope: !2245)
!13655 = !DILocation(line: 300, column: 18, scope: !2245)
!13656 = !DILocation(line: 300, column: 26, scope: !2245)
!13657 = !DILocation(line: 300, column: 13, scope: !2246)
!13658 = !DILocation(line: 301, column: 22, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !2245, file: !352, line: 300, column: 48)
!13660 = !DILocation(line: 301, column: 20, scope: !13659)
!13661 = !DILocation(line: 302, column: 29, scope: !13659)
!13662 = !DILocation(line: 302, column: 41, scope: !13659)
!13663 = !DILocation(line: 302, column: 50, scope: !13659)
!13664 = !DILocation(line: 303, column: 9, scope: !13659)
!13665 = !DILocation(line: 304, column: 51, scope: !2244)
!13666 = !DILocation(line: 304, column: 56, scope: !2244)
!13667 = !DILocation(line: 305, column: 51, scope: !2244)
!13668 = !DILocation(line: 304, column: 22, scope: !2244)
!13669 = !DILocation(line: 304, column: 20, scope: !2244)
!13670 = !DILocation(line: 306, column: 17, scope: !2243)
!13671 = !DILocation(line: 306, column: 24, scope: !2243)
!13672 = !DILocation(line: 306, column: 17, scope: !2244)
!13673 = !DILocation(line: 307, column: 17, scope: !2242)
!13674 = !DILocation(line: 307, column: 22, scope: !13675)
!13675 = !DILexicalBlockFile(scope: !2241, file: !352, discriminator: 1)
!13676 = !DILocation(line: 307, column: 32, scope: !2241)
!13677 = !DILocation(line: 307, column: 62, scope: !2241)
!13678 = !DILocation(line: 307, column: 81, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !2241, file: !352, line: 307, column: 78)
!13680 = !DILocation(line: 307, column: 98, scope: !13679)
!13681 = !DILocation(line: 307, column: 78, scope: !13679)
!13682 = !DILocation(line: 307, column: 108, scope: !13679)
!13683 = !DILocation(line: 307, column: 78, scope: !2241)
!13684 = !DILocation(line: 307, column: 78, scope: !13685)
!13685 = !DILexicalBlockFile(scope: !2241, file: !352, discriminator: 2)
!13686 = !DILocation(line: 307, column: 139, scope: !13687)
!13687 = !DILexicalBlockFile(scope: !13679, file: !352, discriminator: 3)
!13688 = !DILocation(line: 307, column: 157, scope: !13679)
!13689 = !DILocation(line: 307, column: 167, scope: !13679)
!13690 = !DILocation(line: 307, column: 192, scope: !13679)
!13691 = !DILocation(line: 307, column: 123, scope: !13679)
!13692 = !DILocation(line: 307, column: 211, scope: !13693)
!13693 = !DILexicalBlockFile(scope: !2242, file: !352, discriminator: 4)
!13694 = !DILocation(line: 307, column: 211, scope: !2241)
!13695 = !DILocation(line: 307, column: 211, scope: !13696)
!13696 = !DILexicalBlockFile(scope: !2241, file: !352, discriminator: 5)
!13697 = !DILocation(line: 308, column: 17, scope: !2242)
!13698 = !DILocation(line: 313, column: 24, scope: !2246)
!13699 = !DILocation(line: 313, column: 9, scope: !2246)
!13700 = !DILocation(line: 313, column: 14, scope: !2246)
!13701 = !DILocation(line: 313, column: 22, scope: !2246)
!13702 = !DILocation(line: 314, column: 26, scope: !2246)
!13703 = !DILocation(line: 314, column: 9, scope: !2246)
!13704 = !DILocation(line: 314, column: 14, scope: !2246)
!13705 = !DILocation(line: 314, column: 24, scope: !2246)
!13706 = !DILocation(line: 315, column: 5, scope: !2246)
!13707 = !DILocation(line: 318, column: 37, scope: !2230)
!13708 = !DILocation(line: 318, column: 42, scope: !2230)
!13709 = !DILocation(line: 318, column: 50, scope: !2230)
!13710 = !DILocation(line: 318, column: 55, scope: !2230)
!13711 = !DILocation(line: 318, column: 12, scope: !2230)
!13712 = !DILocation(line: 318, column: 10, scope: !2230)
!13713 = !DILocation(line: 319, column: 9, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !2230, file: !352, line: 319, column: 9)
!13715 = !DILocation(line: 319, column: 14, scope: !13714)
!13716 = !DILocation(line: 319, column: 9, scope: !2230)
!13717 = !DILocation(line: 321, column: 9, scope: !13714)
!13718 = !DILocation(line: 323, column: 9, scope: !2230)
!13719 = !DILocation(line: 323, column: 14, scope: !2230)
!13720 = !DILocation(line: 323, column: 7, scope: !2230)
!13721 = !DILocation(line: 324, column: 5, scope: !2230)
!13722 = !DILocation(line: 324, column: 10, scope: !2230)
!13723 = !DILocation(line: 324, column: 20, scope: !2230)
!13724 = !DILocation(line: 325, column: 5, scope: !2230)
!13725 = !DILocation(line: 325, column: 10, scope: !13726)
!13726 = !DILexicalBlockFile(scope: !2249, file: !352, discriminator: 1)
!13727 = !DILocation(line: 325, column: 20, scope: !2249)
!13728 = !DILocation(line: 325, column: 43, scope: !2249)
!13729 = !DILocation(line: 325, column: 48, scope: !2249)
!13730 = !DILocation(line: 325, column: 62, scope: !2253)
!13731 = !DILocation(line: 325, column: 70, scope: !2253)
!13732 = !DILocation(line: 325, column: 62, scope: !2249)
!13733 = !DILocation(line: 325, column: 88, scope: !13734)
!13734 = !DILexicalBlockFile(scope: !2252, file: !352, discriminator: 2)
!13735 = !DILocation(line: 325, column: 93, scope: !2252)
!13736 = !DILocation(line: 325, column: 102, scope: !2252)
!13737 = !DILocation(line: 325, column: 116, scope: !2252)
!13738 = !DILocation(line: 325, column: 121, scope: !13739)
!13739 = !DILexicalBlockFile(scope: !2251, file: !352, discriminator: 4)
!13740 = !DILocation(line: 325, column: 131, scope: !2251)
!13741 = !DILocation(line: 325, column: 161, scope: !2251)
!13742 = !DILocation(line: 325, column: 179, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !2251, file: !352, line: 325, column: 176)
!13744 = !DILocation(line: 325, column: 196, scope: !13743)
!13745 = !DILocation(line: 325, column: 176, scope: !13743)
!13746 = !DILocation(line: 325, column: 206, scope: !13743)
!13747 = !DILocation(line: 325, column: 176, scope: !2251)
!13748 = !DILocation(line: 325, column: 176, scope: !13749)
!13749 = !DILexicalBlockFile(scope: !2251, file: !352, discriminator: 5)
!13750 = !DILocation(line: 325, column: 237, scope: !13751)
!13751 = !DILexicalBlockFile(scope: !13743, file: !352, discriminator: 6)
!13752 = !DILocation(line: 325, column: 255, scope: !13743)
!13753 = !DILocation(line: 325, column: 265, scope: !13743)
!13754 = !DILocation(line: 325, column: 290, scope: !13743)
!13755 = !DILocation(line: 325, column: 221, scope: !13743)
!13756 = !DILocation(line: 325, column: 309, scope: !13757)
!13757 = !DILexicalBlockFile(scope: !2252, file: !352, discriminator: 7)
!13758 = !DILocation(line: 325, column: 309, scope: !2251)
!13759 = !DILocation(line: 325, column: 309, scope: !13760)
!13760 = !DILexicalBlockFile(scope: !2251, file: !352, discriminator: 8)
!13761 = !DILocation(line: 325, column: 322, scope: !13762)
!13762 = !DILexicalBlockFile(scope: !2252, file: !352, discriminator: 9)
!13763 = !DILocation(line: 325, column: 324, scope: !13764)
!13764 = !DILexicalBlockFile(scope: !13765, file: !352, discriminator: 10)
!13765 = !DILexicalBlockFile(scope: !2230, file: !352, discriminator: 3)
!13766 = !DILocation(line: 325, column: 324, scope: !2249)
!13767 = !DILocation(line: 325, column: 324, scope: !13768)
!13768 = !DILexicalBlockFile(scope: !2249, file: !352, discriminator: 11)
!13769 = !DILocation(line: 327, column: 12, scope: !2230)
!13770 = !DILocation(line: 327, column: 5, scope: !2230)
!13771 = !DILocation(line: 328, column: 1, scope: !2230)
!13772 = !DILocation(line: 244, column: 28, scope: !2257)
!13773 = !DILocation(line: 244, column: 44, scope: !2257)
!13774 = !DILocation(line: 244, column: 60, scope: !2257)
!13775 = !DILocation(line: 246, column: 5, scope: !2257)
!13776 = !DILocation(line: 246, column: 15, scope: !2257)
!13777 = !DILocation(line: 246, column: 24, scope: !2257)
!13778 = !DILocation(line: 248, column: 27, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !2257, file: !352, line: 248, column: 9)
!13780 = !DILocation(line: 248, column: 10, scope: !13779)
!13781 = !DILocation(line: 248, column: 9, scope: !2257)
!13782 = !DILocation(line: 249, column: 9, scope: !13779)
!13783 = !DILocation(line: 251, column: 45, scope: !2257)
!13784 = !DILocation(line: 251, column: 28, scope: !2257)
!13785 = !DILocation(line: 251, column: 53, scope: !2257)
!13786 = !DILocation(line: 251, column: 12, scope: !2257)
!13787 = !DILocation(line: 251, column: 5, scope: !2257)
!13788 = !DILocation(line: 252, column: 1, scope: !2257)
!13789 = !DILocation(line: 331, column: 33, scope: !2254)
!13790 = !DILocation(line: 333, column: 49, scope: !2254)
!13791 = !DILocation(line: 333, column: 37, scope: !2254)
!13792 = !DILocation(line: 333, column: 55, scope: !2254)
!13793 = !DILocation(line: 334, column: 13, scope: !2254)
!13794 = !DILocation(line: 334, column: 17, scope: !2254)
!13795 = !DILocation(line: 334, column: 25, scope: !2254)
!13796 = !DILocation(line: 334, column: 29, scope: !2254)
!13797 = !DILocation(line: 333, column: 12, scope: !2254)
!13798 = !DILocation(line: 333, column: 5, scope: !2254)
!13799 = !DILocation(line: 727, column: 24, scope: !2264)
!13800 = !DILocation(line: 729, column: 25, scope: !2264)
!13801 = !DILocation(line: 729, column: 5, scope: !2264)
!13802 = !DILocation(line: 730, column: 15, scope: !2264)
!13803 = !DILocation(line: 730, column: 5, scope: !2264)
!13804 = !DILocation(line: 731, column: 21, scope: !2264)
!13805 = !DILocation(line: 731, column: 5, scope: !2264)
!13806 = !DILocation(line: 732, column: 1, scope: !2264)
!13807 = !DILocation(line: 651, column: 25, scope: !2269)
!13808 = !DILocation(line: 651, column: 39, scope: !2269)
!13809 = !DILocation(line: 651, column: 52, scope: !2269)
!13810 = !DILocation(line: 653, column: 5, scope: !2269)
!13811 = !DILocation(line: 653, column: 26, scope: !13812)
!13812 = !DILexicalBlockFile(scope: !2278, file: !352, discriminator: 1)
!13813 = !DILocation(line: 653, column: 30, scope: !2278)
!13814 = !{!13815, !2680, i64 16}
!13815 = !{!"", !2676, i64 0, !2680, i64 16, !2692, i64 24, !2680, i64 32}
!13816 = !DILocation(line: 653, column: 14, scope: !2278)
!13817 = !DILocation(line: 653, column: 14, scope: !2279)
!13818 = !DILocation(line: 653, column: 41, scope: !13819)
!13819 = !DILexicalBlockFile(scope: !2277, file: !352, discriminator: 2)
!13820 = !DILocation(line: 653, column: 45, scope: !2277)
!13821 = !DILocation(line: 653, column: 52, scope: !2277)
!13822 = !DILocation(line: 653, column: 83, scope: !2277)
!13823 = !DILocation(line: 653, column: 87, scope: !2277)
!13824 = !DILocation(line: 653, column: 71, scope: !2277)
!13825 = !DILocation(line: 653, column: 97, scope: !2277)
!13826 = !DILocation(line: 653, column: 107, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !2277, file: !352, line: 653, column: 107)
!13828 = !DILocation(line: 653, column: 107, scope: !2277)
!13829 = !DILocation(line: 653, column: 120, scope: !13830)
!13830 = !DILexicalBlockFile(scope: !13827, file: !352, discriminator: 4)
!13831 = !DILocation(line: 653, column: 113, scope: !13827)
!13832 = !DILocation(line: 653, column: 126, scope: !13833)
!13833 = !DILexicalBlockFile(scope: !2278, file: !352, discriminator: 5)
!13834 = !DILocation(line: 653, column: 126, scope: !13835)
!13835 = !DILexicalBlockFile(scope: !13836, file: !352, discriminator: 7)
!13836 = !DILexicalBlockFile(scope: !2278, file: !352, discriminator: 6)
!13837 = !DILocation(line: 653, column: 126, scope: !2277)
!13838 = !DILocation(line: 653, column: 128, scope: !13839)
!13839 = !DILexicalBlockFile(scope: !13840, file: !352, discriminator: 8)
!13840 = !DILexicalBlockFile(scope: !2279, file: !352, discriminator: 3)
!13841 = !DILocation(line: 654, column: 5, scope: !2269)
!13842 = !DILocation(line: 655, column: 1, scope: !2269)
!13843 = !DILocation(line: 718, column: 22, scope: !2280)
!13844 = !DILocation(line: 720, column: 9, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !2280, file: !352, line: 720, column: 9)
!13846 = !DILocation(line: 720, column: 13, scope: !13845)
!13847 = !{!13815, !2680, i64 32}
!13848 = !DILocation(line: 720, column: 25, scope: !13845)
!13849 = !DILocation(line: 720, column: 9, scope: !2280)
!13850 = !DILocation(line: 721, column: 45, scope: !13845)
!13851 = !DILocation(line: 721, column: 32, scope: !13845)
!13852 = !DILocation(line: 721, column: 9, scope: !13845)
!13853 = !DILocation(line: 722, column: 5, scope: !2280)
!13854 = !DILocation(line: 722, column: 10, scope: !13855)
!13855 = !DILexicalBlockFile(scope: !2286, file: !352, discriminator: 1)
!13856 = !DILocation(line: 722, column: 20, scope: !2286)
!13857 = !DILocation(line: 722, column: 43, scope: !2286)
!13858 = !DILocation(line: 722, column: 47, scope: !2286)
!13859 = !DILocation(line: 722, column: 30, scope: !2286)
!13860 = !DILocation(line: 722, column: 61, scope: !2290)
!13861 = !DILocation(line: 722, column: 69, scope: !2290)
!13862 = !DILocation(line: 722, column: 61, scope: !2286)
!13863 = !DILocation(line: 722, column: 87, scope: !13864)
!13864 = !DILexicalBlockFile(scope: !2289, file: !352, discriminator: 2)
!13865 = !DILocation(line: 722, column: 91, scope: !2289)
!13866 = !DILocation(line: 722, column: 100, scope: !2289)
!13867 = !DILocation(line: 722, column: 114, scope: !2289)
!13868 = !DILocation(line: 722, column: 119, scope: !13869)
!13869 = !DILexicalBlockFile(scope: !2288, file: !352, discriminator: 4)
!13870 = !DILocation(line: 722, column: 129, scope: !2288)
!13871 = !DILocation(line: 722, column: 159, scope: !2288)
!13872 = !DILocation(line: 722, column: 177, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !2288, file: !352, line: 722, column: 174)
!13874 = !DILocation(line: 722, column: 194, scope: !13873)
!13875 = !DILocation(line: 722, column: 174, scope: !13873)
!13876 = !DILocation(line: 722, column: 204, scope: !13873)
!13877 = !DILocation(line: 722, column: 174, scope: !2288)
!13878 = !DILocation(line: 722, column: 174, scope: !13879)
!13879 = !DILexicalBlockFile(scope: !2288, file: !352, discriminator: 5)
!13880 = !DILocation(line: 722, column: 235, scope: !13881)
!13881 = !DILexicalBlockFile(scope: !13873, file: !352, discriminator: 6)
!13882 = !DILocation(line: 722, column: 253, scope: !13873)
!13883 = !DILocation(line: 722, column: 263, scope: !13873)
!13884 = !DILocation(line: 722, column: 288, scope: !13873)
!13885 = !DILocation(line: 722, column: 219, scope: !13873)
!13886 = !DILocation(line: 722, column: 307, scope: !13887)
!13887 = !DILexicalBlockFile(scope: !2289, file: !352, discriminator: 7)
!13888 = !DILocation(line: 722, column: 307, scope: !2288)
!13889 = !DILocation(line: 722, column: 307, scope: !13890)
!13890 = !DILexicalBlockFile(scope: !2288, file: !352, discriminator: 8)
!13891 = !DILocation(line: 722, column: 320, scope: !13892)
!13892 = !DILexicalBlockFile(scope: !2289, file: !352, discriminator: 9)
!13893 = !DILocation(line: 722, column: 322, scope: !13894)
!13894 = !DILexicalBlockFile(scope: !13895, file: !352, discriminator: 10)
!13895 = !DILexicalBlockFile(scope: !2280, file: !352, discriminator: 3)
!13896 = !DILocation(line: 722, column: 322, scope: !2286)
!13897 = !DILocation(line: 723, column: 5, scope: !2280)
!13898 = !DILocation(line: 631, column: 21, scope: !2291)
!13899 = !DILocation(line: 633, column: 5, scope: !2291)
!13900 = !DILocation(line: 633, column: 15, scope: !2291)
!13901 = !DILocation(line: 633, column: 23, scope: !2291)
!13902 = !DILocation(line: 635, column: 9, scope: !2301)
!13903 = !DILocation(line: 635, column: 13, scope: !2301)
!13904 = !{!13815, !2692, i64 24}
!13905 = !DILocation(line: 635, column: 19, scope: !2301)
!13906 = !DILocation(line: 635, column: 9, scope: !2291)
!13907 = !DILocation(line: 636, column: 39, scope: !2300)
!13908 = !DILocation(line: 636, column: 43, scope: !2300)
!13909 = !DILocation(line: 636, column: 16, scope: !2300)
!13910 = !DILocation(line: 636, column: 14, scope: !2300)
!13911 = !DILocation(line: 637, column: 13, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !2300, file: !352, line: 637, column: 13)
!13913 = !DILocation(line: 637, column: 18, scope: !13912)
!13914 = !DILocation(line: 637, column: 13, scope: !2300)
!13915 = !DILocation(line: 638, column: 13, scope: !13912)
!13916 = !DILocation(line: 639, column: 9, scope: !2300)
!13917 = !DILocation(line: 639, column: 14, scope: !13918)
!13918 = !DILexicalBlockFile(scope: !2299, file: !352, discriminator: 1)
!13919 = !DILocation(line: 639, column: 24, scope: !2299)
!13920 = !DILocation(line: 639, column: 54, scope: !2299)
!13921 = !DILocation(line: 639, column: 58, scope: !2299)
!13922 = !DILocation(line: 639, column: 41, scope: !2299)
!13923 = !DILocation(line: 639, column: 76, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !2299, file: !352, line: 639, column: 73)
!13925 = !DILocation(line: 639, column: 93, scope: !13924)
!13926 = !DILocation(line: 639, column: 73, scope: !13924)
!13927 = !DILocation(line: 639, column: 103, scope: !13924)
!13928 = !DILocation(line: 639, column: 73, scope: !2299)
!13929 = !DILocation(line: 639, column: 73, scope: !13930)
!13930 = !DILexicalBlockFile(scope: !2299, file: !352, discriminator: 2)
!13931 = !DILocation(line: 639, column: 134, scope: !13932)
!13932 = !DILexicalBlockFile(scope: !13924, file: !352, discriminator: 3)
!13933 = !DILocation(line: 639, column: 152, scope: !13924)
!13934 = !DILocation(line: 639, column: 162, scope: !13924)
!13935 = !DILocation(line: 639, column: 187, scope: !13924)
!13936 = !DILocation(line: 639, column: 118, scope: !13924)
!13937 = !DILocation(line: 639, column: 206, scope: !13938)
!13938 = !DILexicalBlockFile(scope: !2300, file: !352, discriminator: 4)
!13939 = !DILocation(line: 639, column: 206, scope: !2299)
!13940 = !DILocation(line: 639, column: 206, scope: !13941)
!13941 = !DILexicalBlockFile(scope: !2299, file: !352, discriminator: 5)
!13942 = !DILocation(line: 640, column: 40, scope: !2300)
!13943 = !DILocation(line: 640, column: 23, scope: !2300)
!13944 = !DILocation(line: 640, column: 9, scope: !2300)
!13945 = !DILocation(line: 640, column: 13, scope: !2300)
!13946 = !DILocation(line: 640, column: 21, scope: !2300)
!13947 = !DILocation(line: 641, column: 9, scope: !2300)
!13948 = !DILocation(line: 641, column: 13, scope: !2300)
!13949 = !DILocation(line: 641, column: 19, scope: !2300)
!13950 = !DILocation(line: 642, column: 5, scope: !2300)
!13951 = !DILocation(line: 643, column: 35, scope: !2291)
!13952 = !DILocation(line: 643, column: 39, scope: !2291)
!13953 = !DILocation(line: 643, column: 48, scope: !2291)
!13954 = !DILocation(line: 643, column: 52, scope: !2291)
!13955 = !DILocation(line: 643, column: 13, scope: !2291)
!13956 = !DILocation(line: 643, column: 11, scope: !2291)
!13957 = !DILocation(line: 644, column: 9, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !2291, file: !352, line: 644, column: 9)
!13959 = !DILocation(line: 644, column: 15, scope: !13958)
!13960 = !DILocation(line: 644, column: 9, scope: !2291)
!13961 = !DILocation(line: 645, column: 9, scope: !13958)
!13962 = !DILocation(line: 646, column: 5, scope: !2291)
!13963 = !DILocation(line: 646, column: 9, scope: !2291)
!13964 = !DILocation(line: 646, column: 14, scope: !2291)
!13965 = !DILocation(line: 647, column: 12, scope: !2291)
!13966 = !DILocation(line: 647, column: 5, scope: !2291)
!13967 = !DILocation(line: 648, column: 1, scope: !2291)
!13968 = !DILocation(line: 708, column: 23, scope: !2341)
!13969 = !DILocation(line: 708, column: 39, scope: !2341)
!13970 = !DILocation(line: 708, column: 55, scope: !2341)
!13971 = !DILocation(line: 710, column: 5, scope: !2341)
!13972 = !DILocation(line: 710, column: 15, scope: !2341)
!13973 = !DILocation(line: 712, column: 28, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !2341, file: !352, line: 712, column: 9)
!13975 = !DILocation(line: 712, column: 10, scope: !13974)
!13976 = !DILocation(line: 712, column: 9, scope: !2341)
!13977 = !DILocation(line: 713, column: 9, scope: !13974)
!13978 = !DILocation(line: 714, column: 29, scope: !2341)
!13979 = !DILocation(line: 714, column: 12, scope: !2341)
!13980 = !DILocation(line: 714, column: 5, scope: !2341)
!13981 = !DILocation(line: 715, column: 1, scope: !2341)
!13982 = !DILocation(line: 436, column: 39, scope: !2302)
!13983 = !DILocation(line: 438, column: 9, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !2302, file: !352, line: 438, column: 9)
!13985 = !DILocation(line: 438, column: 14, scope: !13984)
!13986 = !{!13987, !2680, i64 32}
!13987 = !{!"", !2676, i64 0, !2680, i64 16, !2692, i64 24, !2680, i64 32, !2678, i64 40}
!13988 = !DILocation(line: 438, column: 23, scope: !13984)
!13989 = !DILocation(line: 438, column: 9, scope: !2302)
!13990 = !DILocation(line: 439, column: 51, scope: !13984)
!13991 = !DILocation(line: 439, column: 56, scope: !13984)
!13992 = !{!13987, !2680, i64 16}
!13993 = !DILocation(line: 439, column: 25, scope: !13984)
!13994 = !DILocation(line: 439, column: 9, scope: !13984)
!13995 = !DILocation(line: 439, column: 14, scope: !13984)
!13996 = !DILocation(line: 439, column: 23, scope: !13984)
!13997 = !DILocation(line: 440, column: 5, scope: !2302)
!13998 = !DILocation(line: 440, column: 10, scope: !13999)
!13999 = !DILexicalBlockFile(scope: !2308, file: !352, discriminator: 1)
!14000 = !DILocation(line: 440, column: 20, scope: !2308)
!14001 = !DILocation(line: 440, column: 51, scope: !2308)
!14002 = !DILocation(line: 440, column: 56, scope: !2308)
!14003 = !DILocation(line: 440, column: 71, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !2308, file: !352, line: 440, column: 71)
!14005 = !DILocation(line: 440, column: 87, scope: !14004)
!14006 = !DILocation(line: 440, column: 71, scope: !2308)
!14007 = !DILocation(line: 440, column: 118, scope: !14008)
!14008 = !DILexicalBlockFile(scope: !14004, file: !352, discriminator: 2)
!14009 = !DILocation(line: 440, column: 137, scope: !14004)
!14010 = !DILocation(line: 440, column: 146, scope: !14004)
!14011 = !DILocation(line: 440, column: 102, scope: !14004)
!14012 = !DILocation(line: 440, column: 151, scope: !14013)
!14013 = !DILexicalBlockFile(scope: !14014, file: !352, discriminator: 4)
!14014 = !DILexicalBlockFile(scope: !2302, file: !352, discriminator: 3)
!14015 = !DILocation(line: 440, column: 151, scope: !2308)
!14016 = !DILocation(line: 441, column: 12, scope: !2302)
!14017 = !DILocation(line: 441, column: 17, scope: !2302)
!14018 = !DILocation(line: 441, column: 5, scope: !2302)
!14019 = !DILocation(line: 445, column: 38, scope: !2313)
!14020 = !DILocation(line: 445, column: 47, scope: !2313)
!14021 = !DILocation(line: 447, column: 5, scope: !2313)
!14022 = !DILocation(line: 447, column: 15, scope: !2313)
!14023 = !DILocation(line: 450, column: 9, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !2313, file: !352, line: 450, column: 9)
!14025 = !DILocation(line: 450, column: 13, scope: !14024)
!14026 = !DILocation(line: 450, column: 18, scope: !14024)
!14027 = !{!13987, !2692, i64 24}
!14028 = !DILocation(line: 450, column: 11, scope: !14024)
!14029 = !DILocation(line: 450, column: 9, scope: !2313)
!14030 = !DILocation(line: 451, column: 29, scope: !14024)
!14031 = !DILocation(line: 451, column: 17, scope: !14024)
!14032 = !DILocation(line: 451, column: 22, scope: !14024)
!14033 = !DILocation(line: 451, column: 15, scope: !14024)
!14034 = !DILocation(line: 451, column: 9, scope: !14024)
!14035 = !DILocation(line: 455, column: 29, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14024, file: !352, line: 452, column: 10)
!14037 = !DILocation(line: 455, column: 34, scope: !14036)
!14038 = !DILocation(line: 455, column: 17, scope: !14036)
!14039 = !DILocation(line: 455, column: 15, scope: !14036)
!14040 = !DILocation(line: 456, column: 13, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14036, file: !352, line: 456, column: 13)
!14042 = !DILocation(line: 456, column: 19, scope: !14041)
!14043 = !DILocation(line: 456, column: 13, scope: !14036)
!14044 = !DILocation(line: 457, column: 13, scope: !14041)
!14045 = !DILocation(line: 458, column: 9, scope: !14036)
!14046 = !DILocation(line: 458, column: 14, scope: !14036)
!14047 = !DILocation(line: 458, column: 21, scope: !14036)
!14048 = !DILocation(line: 459, column: 26, scope: !14036)
!14049 = !DILocation(line: 459, column: 21, scope: !14036)
!14050 = !DILocation(line: 459, column: 9, scope: !14036)
!14051 = !DILocation(line: 459, column: 14, scope: !14036)
!14052 = !DILocation(line: 459, column: 24, scope: !14036)
!14053 = !DILocation(line: 461, column: 21, scope: !2313)
!14054 = !DILocation(line: 461, column: 30, scope: !2313)
!14055 = !DILocation(line: 461, column: 39, scope: !2313)
!14056 = !DILocation(line: 462, column: 12, scope: !2313)
!14057 = !DILocation(line: 462, column: 5, scope: !2313)
!14058 = !DILocation(line: 463, column: 1, scope: !2313)
!14059 = !DILocation(line: 419, column: 37, scope: !2309)
!14060 = !DILocation(line: 421, column: 5, scope: !2309)
!14061 = !DILocation(line: 421, column: 20, scope: !2309)
!14062 = !DILocation(line: 423, column: 31, scope: !2309)
!14063 = !DILocation(line: 423, column: 13, scope: !2309)
!14064 = !DILocation(line: 423, column: 9, scope: !2309)
!14065 = !DILocation(line: 424, column: 9, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !2309, file: !352, line: 424, column: 9)
!14067 = !DILocation(line: 424, column: 13, scope: !14066)
!14068 = !DILocation(line: 424, column: 9, scope: !2309)
!14069 = !DILocation(line: 425, column: 9, scope: !14066)
!14070 = !DILocation(line: 427, column: 5, scope: !2309)
!14071 = !DILocation(line: 427, column: 10, scope: !2309)
!14072 = !DILocation(line: 427, column: 18, scope: !2309)
!14073 = !DILocation(line: 428, column: 5, scope: !2309)
!14074 = !DILocation(line: 428, column: 10, scope: !2309)
!14075 = !DILocation(line: 428, column: 19, scope: !2309)
!14076 = !DILocation(line: 429, column: 21, scope: !2309)
!14077 = !DILocation(line: 429, column: 27, scope: !2309)
!14078 = !DILocation(line: 429, column: 36, scope: !2309)
!14079 = !DILocation(line: 430, column: 15, scope: !2309)
!14080 = !DILocation(line: 430, column: 5, scope: !2309)
!14081 = !DILocation(line: 430, column: 10, scope: !2309)
!14082 = !DILocation(line: 430, column: 13, scope: !2309)
!14083 = !DILocation(line: 431, column: 23, scope: !2309)
!14084 = !DILocation(line: 431, column: 5, scope: !2309)
!14085 = !DILocation(line: 432, column: 24, scope: !2309)
!14086 = !DILocation(line: 432, column: 12, scope: !2309)
!14087 = !DILocation(line: 432, column: 5, scope: !2309)
!14088 = !DILocation(line: 433, column: 1, scope: !2309)
!14089 = !DILocation(line: 658, column: 21, scope: !2320)
!14090 = !DILocation(line: 660, column: 5, scope: !2320)
!14091 = !DILocation(line: 660, column: 16, scope: !2320)
!14092 = !DILocation(line: 662, column: 29, scope: !2320)
!14093 = !DILocation(line: 662, column: 15, scope: !2320)
!14094 = !DILocation(line: 662, column: 11, scope: !2320)
!14095 = !DILocation(line: 663, column: 9, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !2320, file: !352, line: 663, column: 9)
!14097 = !DILocation(line: 663, column: 15, scope: !14096)
!14098 = !DILocation(line: 663, column: 9, scope: !2320)
!14099 = !DILocation(line: 664, column: 9, scope: !14096)
!14100 = !DILocation(line: 665, column: 21, scope: !2320)
!14101 = !DILocation(line: 665, column: 25, scope: !2320)
!14102 = !DILocation(line: 665, column: 8, scope: !2320)
!14103 = !DILocation(line: 665, column: 36, scope: !2320)
!14104 = !DILocation(line: 665, column: 45, scope: !2320)
!14105 = !DILocation(line: 666, column: 22, scope: !2320)
!14106 = !DILocation(line: 666, column: 26, scope: !2320)
!14107 = !DILocation(line: 666, column: 5, scope: !2320)
!14108 = !DILocation(line: 666, column: 12, scope: !2320)
!14109 = !DILocation(line: 666, column: 20, scope: !2320)
!14110 = !DILocation(line: 667, column: 20, scope: !2320)
!14111 = !DILocation(line: 667, column: 24, scope: !2320)
!14112 = !DILocation(line: 667, column: 5, scope: !2320)
!14113 = !DILocation(line: 667, column: 12, scope: !2320)
!14114 = !DILocation(line: 667, column: 18, scope: !2320)
!14115 = !DILocation(line: 668, column: 5, scope: !2320)
!14116 = !DILocation(line: 668, column: 12, scope: !2320)
!14117 = !DILocation(line: 668, column: 24, scope: !2320)
!14118 = !DILocation(line: 669, column: 23, scope: !2320)
!14119 = !DILocation(line: 669, column: 5, scope: !2320)
!14120 = !DILocation(line: 670, column: 24, scope: !2320)
!14121 = !DILocation(line: 670, column: 12, scope: !2320)
!14122 = !DILocation(line: 670, column: 5, scope: !2320)
!14123 = !DILocation(line: 671, column: 1, scope: !2320)
!14124 = !DILocation(line: 735, column: 23, scope: !2324)
!14125 = !DILocation(line: 737, column: 53, scope: !2324)
!14126 = !DILocation(line: 737, column: 41, scope: !2324)
!14127 = !DILocation(line: 737, column: 59, scope: !2324)
!14128 = !DILocation(line: 737, column: 69, scope: !2324)
!14129 = !DILocation(line: 737, column: 73, scope: !2324)
!14130 = !DILocation(line: 737, column: 82, scope: !2324)
!14131 = !DILocation(line: 737, column: 86, scope: !2324)
!14132 = !DILocation(line: 737, column: 12, scope: !2324)
!14133 = !DILocation(line: 737, column: 5, scope: !2324)
!14134 = !DILocation(line: 741, column: 25, scope: !2327)
!14135 = !DILocation(line: 741, column: 39, scope: !2327)
!14136 = !DILocation(line: 743, column: 5, scope: !2327)
!14137 = !DILocation(line: 743, column: 20, scope: !2327)
!14138 = !DILocation(line: 744, column: 5, scope: !2327)
!14139 = !DILocation(line: 744, column: 9, scope: !2327)
!14140 = !DILocation(line: 745, column: 27, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !2327, file: !352, line: 745, column: 9)
!14142 = !DILocation(line: 745, column: 10, scope: !14141)
!14143 = !DILocation(line: 745, column: 9, scope: !2327)
!14144 = !DILocation(line: 746, column: 9, scope: !14141)
!14145 = !DILocation(line: 747, column: 9, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !2327, file: !352, line: 747, column: 9)
!14147 = !DILocation(line: 747, column: 15, scope: !14146)
!14148 = !DILocation(line: 747, column: 19, scope: !14146)
!14149 = !DILocation(line: 747, column: 22, scope: !14150)
!14150 = !DILexicalBlockFile(scope: !14146, file: !352, discriminator: 1)
!14151 = !DILocation(line: 747, column: 28, scope: !14146)
!14152 = !DILocation(line: 747, column: 9, scope: !2327)
!14153 = !DILocation(line: 748, column: 25, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14146, file: !352, line: 747, column: 34)
!14155 = !DILocation(line: 748, column: 9, scope: !14154)
!14156 = !DILocation(line: 749, column: 9, scope: !14154)
!14157 = !DILocation(line: 751, column: 5, scope: !2327)
!14158 = !DILocation(line: 751, column: 10, scope: !14159)
!14159 = !DILexicalBlockFile(scope: !2336, file: !352, discriminator: 1)
!14160 = !DILocation(line: 751, column: 20, scope: !2336)
!14161 = !DILocation(line: 751, column: 43, scope: !2336)
!14162 = !DILocation(line: 751, column: 47, scope: !2336)
!14163 = !DILocation(line: 751, column: 30, scope: !2336)
!14164 = !DILocation(line: 751, column: 61, scope: !2340)
!14165 = !DILocation(line: 751, column: 69, scope: !2340)
!14166 = !DILocation(line: 751, column: 61, scope: !2336)
!14167 = !DILocation(line: 751, column: 87, scope: !14168)
!14168 = !DILexicalBlockFile(scope: !2339, file: !352, discriminator: 2)
!14169 = !DILocation(line: 751, column: 91, scope: !2339)
!14170 = !DILocation(line: 751, column: 100, scope: !2339)
!14171 = !DILocation(line: 751, column: 114, scope: !2339)
!14172 = !DILocation(line: 751, column: 119, scope: !14173)
!14173 = !DILexicalBlockFile(scope: !2338, file: !352, discriminator: 4)
!14174 = !DILocation(line: 751, column: 129, scope: !2338)
!14175 = !DILocation(line: 751, column: 159, scope: !2338)
!14176 = !DILocation(line: 751, column: 177, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !2338, file: !352, line: 751, column: 174)
!14178 = !DILocation(line: 751, column: 194, scope: !14177)
!14179 = !DILocation(line: 751, column: 174, scope: !14177)
!14180 = !DILocation(line: 751, column: 204, scope: !14177)
!14181 = !DILocation(line: 751, column: 174, scope: !2338)
!14182 = !DILocation(line: 751, column: 174, scope: !14183)
!14183 = !DILexicalBlockFile(scope: !2338, file: !352, discriminator: 5)
!14184 = !DILocation(line: 751, column: 235, scope: !14185)
!14185 = !DILexicalBlockFile(scope: !14177, file: !352, discriminator: 6)
!14186 = !DILocation(line: 751, column: 253, scope: !14177)
!14187 = !DILocation(line: 751, column: 263, scope: !14177)
!14188 = !DILocation(line: 751, column: 288, scope: !14177)
!14189 = !DILocation(line: 751, column: 219, scope: !14177)
!14190 = !DILocation(line: 751, column: 307, scope: !14191)
!14191 = !DILexicalBlockFile(scope: !2339, file: !352, discriminator: 7)
!14192 = !DILocation(line: 751, column: 307, scope: !2338)
!14193 = !DILocation(line: 751, column: 307, scope: !14194)
!14194 = !DILexicalBlockFile(scope: !2338, file: !352, discriminator: 8)
!14195 = !DILocation(line: 751, column: 320, scope: !14196)
!14196 = !DILexicalBlockFile(scope: !2339, file: !352, discriminator: 9)
!14197 = !DILocation(line: 751, column: 322, scope: !14198)
!14198 = !DILexicalBlockFile(scope: !14199, file: !352, discriminator: 10)
!14199 = !DILexicalBlockFile(scope: !2327, file: !352, discriminator: 3)
!14200 = !DILocation(line: 751, column: 322, scope: !2336)
!14201 = !DILocation(line: 751, column: 322, scope: !14202)
!14202 = !DILexicalBlockFile(scope: !2336, file: !352, discriminator: 11)
!14203 = !DILocation(line: 752, column: 19, scope: !2327)
!14204 = !DILocation(line: 752, column: 5, scope: !2327)
!14205 = !DILocation(line: 752, column: 9, scope: !2327)
!14206 = !DILocation(line: 752, column: 17, scope: !2327)
!14207 = !DILocation(line: 753, column: 21, scope: !2327)
!14208 = !DILocation(line: 753, column: 25, scope: !2327)
!14209 = !DILocation(line: 753, column: 8, scope: !2327)
!14210 = !DILocation(line: 753, column: 36, scope: !2327)
!14211 = !DILocation(line: 753, column: 45, scope: !2327)
!14212 = !DILocation(line: 754, column: 17, scope: !2327)
!14213 = !DILocation(line: 754, column: 5, scope: !2327)
!14214 = !DILocation(line: 754, column: 9, scope: !2327)
!14215 = !DILocation(line: 754, column: 15, scope: !2327)
!14216 = !DILocation(line: 755, column: 58, scope: !2327)
!14217 = !DILocation(line: 755, column: 5, scope: !2327)
!14218 = !DILocation(line: 756, column: 1, scope: !2327)
!14219 = !DILocation(line: 676, column: 28, scope: !2347)
!14220 = !DILocation(line: 678, column: 5, scope: !2347)
!14221 = !DILocation(line: 678, column: 16, scope: !2347)
!14222 = !DILocation(line: 679, column: 5, scope: !2347)
!14223 = !DILocation(line: 679, column: 15, scope: !2347)
!14224 = !DILocation(line: 681, column: 27, scope: !2347)
!14225 = !DILocation(line: 681, column: 10, scope: !2347)
!14226 = !DILocation(line: 681, column: 8, scope: !2347)
!14227 = !DILocation(line: 682, column: 9, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !2347, file: !352, line: 682, column: 9)
!14229 = !DILocation(line: 682, column: 12, scope: !14228)
!14230 = !DILocation(line: 682, column: 9, scope: !2347)
!14231 = !DILocation(line: 683, column: 9, scope: !14228)
!14232 = !DILocation(line: 684, column: 24, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !2347, file: !352, line: 684, column: 9)
!14234 = !DILocation(line: 684, column: 30, scope: !14233)
!14235 = !DILocation(line: 684, column: 39, scope: !14233)
!14236 = !DILocation(line: 684, column: 54, scope: !14233)
!14237 = !DILocation(line: 684, column: 88, scope: !14238)
!14238 = !DILexicalBlockFile(scope: !14233, file: !352, discriminator: 1)
!14239 = !DILocation(line: 684, column: 94, scope: !14233)
!14240 = !DILocation(line: 684, column: 57, scope: !14233)
!14241 = !DILocation(line: 684, column: 9, scope: !2347)
!14242 = !DILocation(line: 685, column: 49, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14233, file: !352, line: 684, column: 119)
!14244 = !DILocation(line: 685, column: 36, scope: !14243)
!14245 = !DILocation(line: 685, column: 27, scope: !14243)
!14246 = !DILocation(line: 685, column: 14, scope: !14243)
!14247 = !DILocation(line: 685, column: 12, scope: !14243)
!14248 = !DILocation(line: 686, column: 9, scope: !14243)
!14249 = !DILocation(line: 689, column: 26, scope: !2347)
!14250 = !DILocation(line: 689, column: 12, scope: !2347)
!14251 = !DILocation(line: 689, column: 8, scope: !2347)
!14252 = !DILocation(line: 690, column: 9, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !2347, file: !352, line: 690, column: 9)
!14254 = !DILocation(line: 690, column: 12, scope: !14253)
!14255 = !DILocation(line: 690, column: 9, scope: !2347)
!14256 = !DILocation(line: 691, column: 9, scope: !14253)
!14257 = !DILocation(line: 692, column: 62, scope: !2347)
!14258 = !DILocation(line: 692, column: 36, scope: !2347)
!14259 = !DILocation(line: 692, column: 19, scope: !2347)
!14260 = !DILocation(line: 692, column: 5, scope: !2347)
!14261 = !DILocation(line: 692, column: 9, scope: !2347)
!14262 = !DILocation(line: 692, column: 17, scope: !2347)
!14263 = !DILocation(line: 693, column: 10, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !2347, file: !352, line: 693, column: 9)
!14265 = !DILocation(line: 693, column: 14, scope: !14264)
!14266 = !DILocation(line: 693, column: 9, scope: !2347)
!14267 = !DILocation(line: 694, column: 25, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14264, file: !352, line: 693, column: 23)
!14269 = !DILocation(line: 694, column: 9, scope: !14268)
!14270 = !DILocation(line: 695, column: 12, scope: !14268)
!14271 = !DILocation(line: 696, column: 9, scope: !14268)
!14272 = !DILocation(line: 699, column: 5, scope: !2347)
!14273 = !DILocation(line: 699, column: 9, scope: !2347)
!14274 = !DILocation(line: 699, column: 15, scope: !2347)
!14275 = !DILocation(line: 700, column: 5, scope: !2347)
!14276 = !DILocation(line: 700, column: 9, scope: !2347)
!14277 = !DILocation(line: 700, column: 21, scope: !2347)
!14278 = !DILocation(line: 701, column: 23, scope: !2347)
!14279 = !DILocation(line: 701, column: 5, scope: !2347)
!14280 = !DILocation(line: 703, column: 5, scope: !2347)
!14281 = !DILocation(line: 703, column: 10, scope: !14282)
!14282 = !DILexicalBlockFile(scope: !2353, file: !352, discriminator: 1)
!14283 = !DILocation(line: 703, column: 20, scope: !2353)
!14284 = !DILocation(line: 703, column: 51, scope: !2353)
!14285 = !DILocation(line: 703, column: 60, scope: !2356)
!14286 = !DILocation(line: 703, column: 76, scope: !2356)
!14287 = !DILocation(line: 703, column: 60, scope: !2353)
!14288 = !DILocation(line: 703, column: 91, scope: !14289)
!14289 = !DILexicalBlockFile(scope: !2356, file: !352, discriminator: 2)
!14290 = !DILocation(line: 703, column: 96, scope: !14291)
!14291 = !DILexicalBlockFile(scope: !2355, file: !352, discriminator: 4)
!14292 = !DILocation(line: 703, column: 106, scope: !2355)
!14293 = !DILocation(line: 703, column: 136, scope: !2355)
!14294 = !DILocation(line: 703, column: 162, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !2355, file: !352, line: 703, column: 159)
!14296 = !DILocation(line: 703, column: 179, scope: !14295)
!14297 = !DILocation(line: 703, column: 159, scope: !14295)
!14298 = !DILocation(line: 703, column: 189, scope: !14295)
!14299 = !DILocation(line: 703, column: 159, scope: !2355)
!14300 = !DILocation(line: 703, column: 159, scope: !14301)
!14301 = !DILexicalBlockFile(scope: !2355, file: !352, discriminator: 5)
!14302 = !DILocation(line: 703, column: 220, scope: !14303)
!14303 = !DILexicalBlockFile(scope: !14295, file: !352, discriminator: 6)
!14304 = !DILocation(line: 703, column: 238, scope: !14295)
!14305 = !DILocation(line: 703, column: 248, scope: !14295)
!14306 = !DILocation(line: 703, column: 273, scope: !14295)
!14307 = !DILocation(line: 703, column: 204, scope: !14295)
!14308 = !DILocation(line: 703, column: 292, scope: !14309)
!14309 = !DILexicalBlockFile(scope: !2356, file: !352, discriminator: 7)
!14310 = !DILocation(line: 703, column: 292, scope: !2355)
!14311 = !DILocation(line: 703, column: 292, scope: !14312)
!14312 = !DILexicalBlockFile(scope: !2355, file: !352, discriminator: 8)
!14313 = !DILocation(line: 703, column: 292, scope: !14314)
!14314 = !DILexicalBlockFile(scope: !2355, file: !352, discriminator: 9)
!14315 = !DILocation(line: 703, column: 305, scope: !14316)
!14316 = !DILexicalBlockFile(scope: !14317, file: !352, discriminator: 10)
!14317 = !DILexicalBlockFile(scope: !2347, file: !352, discriminator: 3)
!14318 = !DILocation(line: 703, column: 305, scope: !2353)
!14319 = !DILocation(line: 703, column: 305, scope: !14320)
!14320 = !DILexicalBlockFile(scope: !2353, file: !352, discriminator: 11)
!14321 = !DILocation(line: 704, column: 24, scope: !2347)
!14322 = !DILocation(line: 704, column: 12, scope: !2347)
!14323 = !DILocation(line: 704, column: 5, scope: !2347)
!14324 = !DILocation(line: 705, column: 1, scope: !2347)
!14325 = !DILocation(line: 505, column: 38, scope: !2357)
!14326 = !DILocation(line: 507, column: 25, scope: !2357)
!14327 = !DILocation(line: 507, column: 5, scope: !2357)
!14328 = !DILocation(line: 508, column: 25, scope: !2357)
!14329 = !DILocation(line: 508, column: 5, scope: !2357)
!14330 = !DILocation(line: 509, column: 21, scope: !2357)
!14331 = !DILocation(line: 509, column: 5, scope: !2357)
!14332 = !DILocation(line: 510, column: 1, scope: !2357)
!14333 = !DILocation(line: 466, column: 39, scope: !2362)
!14334 = !DILocation(line: 466, column: 54, scope: !2362)
!14335 = !DILocation(line: 466, column: 68, scope: !2362)
!14336 = !DILocation(line: 468, column: 5, scope: !2362)
!14337 = !DILocation(line: 468, column: 9, scope: !2362)
!14338 = !DILocation(line: 469, column: 5, scope: !2362)
!14339 = !DILocation(line: 469, column: 14, scope: !14340)
!14340 = !DILexicalBlockFile(scope: !2372, file: !352, discriminator: 1)
!14341 = !DILocation(line: 469, column: 19, scope: !2372)
!14342 = !DILocation(line: 469, column: 14, scope: !2372)
!14343 = !DILocation(line: 469, column: 14, scope: !2373)
!14344 = !DILocation(line: 469, column: 25, scope: !14345)
!14345 = !DILexicalBlockFile(scope: !2371, file: !352, discriminator: 2)
!14346 = !DILocation(line: 469, column: 29, scope: !2371)
!14347 = !DILocation(line: 469, column: 36, scope: !2371)
!14348 = !DILocation(line: 469, column: 55, scope: !2371)
!14349 = !DILocation(line: 469, column: 60, scope: !2371)
!14350 = !DILocation(line: 469, column: 65, scope: !2371)
!14351 = !DILocation(line: 469, column: 75, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !2371, file: !352, line: 469, column: 75)
!14353 = !DILocation(line: 469, column: 75, scope: !2371)
!14354 = !DILocation(line: 469, column: 88, scope: !14355)
!14355 = !DILexicalBlockFile(scope: !14352, file: !352, discriminator: 4)
!14356 = !DILocation(line: 469, column: 81, scope: !14352)
!14357 = !DILocation(line: 469, column: 94, scope: !14358)
!14358 = !DILexicalBlockFile(scope: !2372, file: !352, discriminator: 5)
!14359 = !DILocation(line: 469, column: 94, scope: !14360)
!14360 = !DILexicalBlockFile(scope: !14361, file: !352, discriminator: 7)
!14361 = !DILexicalBlockFile(scope: !2372, file: !352, discriminator: 6)
!14362 = !DILocation(line: 469, column: 94, scope: !2371)
!14363 = !DILocation(line: 469, column: 96, scope: !14364)
!14364 = !DILexicalBlockFile(scope: !14365, file: !352, discriminator: 8)
!14365 = !DILexicalBlockFile(scope: !2373, file: !352, discriminator: 3)
!14366 = !DILocation(line: 469, column: 96, scope: !14367)
!14367 = !DILexicalBlockFile(scope: !2373, file: !352, discriminator: 9)
!14368 = !DILocation(line: 470, column: 12, scope: !2379)
!14369 = !DILocation(line: 470, column: 10, scope: !2379)
!14370 = !DILocation(line: 470, column: 17, scope: !14371)
!14371 = !DILexicalBlockFile(scope: !14372, file: !352, discriminator: 2)
!14372 = !DILexicalBlockFile(scope: !2378, file: !352, discriminator: 1)
!14373 = !DILocation(line: 470, column: 21, scope: !2378)
!14374 = !DILocation(line: 470, column: 26, scope: !2378)
!14375 = !DILocation(line: 470, column: 19, scope: !2378)
!14376 = !DILocation(line: 470, column: 5, scope: !2379)
!14377 = !DILocation(line: 471, column: 9, scope: !2378)
!14378 = !DILocation(line: 471, column: 30, scope: !14379)
!14379 = !DILexicalBlockFile(scope: !2376, file: !352, discriminator: 1)
!14380 = !DILocation(line: 471, column: 18, scope: !2376)
!14381 = !DILocation(line: 471, column: 23, scope: !2376)
!14382 = !DILocation(line: 471, column: 18, scope: !2377)
!14383 = !DILocation(line: 471, column: 36, scope: !14384)
!14384 = !DILexicalBlockFile(scope: !2375, file: !352, discriminator: 2)
!14385 = !DILocation(line: 471, column: 40, scope: !2375)
!14386 = !DILocation(line: 471, column: 47, scope: !2375)
!14387 = !DILocation(line: 471, column: 78, scope: !2375)
!14388 = !DILocation(line: 471, column: 66, scope: !2375)
!14389 = !DILocation(line: 471, column: 71, scope: !2375)
!14390 = !DILocation(line: 471, column: 83, scope: !2375)
!14391 = !DILocation(line: 471, column: 93, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !2375, file: !352, line: 471, column: 93)
!14393 = !DILocation(line: 471, column: 93, scope: !2375)
!14394 = !DILocation(line: 471, column: 106, scope: !14395)
!14395 = !DILexicalBlockFile(scope: !14392, file: !352, discriminator: 4)
!14396 = !DILocation(line: 471, column: 99, scope: !14392)
!14397 = !DILocation(line: 471, column: 112, scope: !14398)
!14398 = !DILexicalBlockFile(scope: !2376, file: !352, discriminator: 5)
!14399 = !DILocation(line: 471, column: 112, scope: !14400)
!14400 = !DILexicalBlockFile(scope: !14401, file: !352, discriminator: 7)
!14401 = !DILexicalBlockFile(scope: !2376, file: !352, discriminator: 6)
!14402 = !DILocation(line: 471, column: 112, scope: !2375)
!14403 = !DILocation(line: 471, column: 114, scope: !14404)
!14404 = !DILexicalBlockFile(scope: !14405, file: !352, discriminator: 8)
!14405 = !DILexicalBlockFile(scope: !2377, file: !352, discriminator: 3)
!14406 = !DILocation(line: 471, column: 114, scope: !14407)
!14407 = !DILexicalBlockFile(scope: !2377, file: !352, discriminator: 9)
!14408 = !DILocation(line: 471, column: 114, scope: !14409)
!14409 = !DILexicalBlockFile(scope: !2377, file: !352, discriminator: 10)
!14410 = !DILocation(line: 470, column: 36, scope: !2378)
!14411 = !DILocation(line: 470, column: 5, scope: !2378)
!14412 = !DILocation(line: 472, column: 5, scope: !2362)
!14413 = !DILocation(line: 472, column: 14, scope: !14414)
!14414 = !DILexicalBlockFile(scope: !2382, file: !352, discriminator: 1)
!14415 = !DILocation(line: 472, column: 19, scope: !2382)
!14416 = !DILocation(line: 472, column: 14, scope: !2382)
!14417 = !DILocation(line: 472, column: 14, scope: !2383)
!14418 = !DILocation(line: 472, column: 31, scope: !14419)
!14419 = !DILexicalBlockFile(scope: !2381, file: !352, discriminator: 2)
!14420 = !DILocation(line: 472, column: 35, scope: !2381)
!14421 = !DILocation(line: 472, column: 42, scope: !2381)
!14422 = !DILocation(line: 472, column: 61, scope: !2381)
!14423 = !DILocation(line: 472, column: 66, scope: !2381)
!14424 = !DILocation(line: 472, column: 77, scope: !2381)
!14425 = !DILocation(line: 472, column: 87, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !2381, file: !352, line: 472, column: 87)
!14427 = !DILocation(line: 472, column: 87, scope: !2381)
!14428 = !DILocation(line: 472, column: 100, scope: !14429)
!14429 = !DILexicalBlockFile(scope: !14426, file: !352, discriminator: 4)
!14430 = !DILocation(line: 472, column: 93, scope: !14426)
!14431 = !DILocation(line: 472, column: 106, scope: !14432)
!14432 = !DILexicalBlockFile(scope: !2382, file: !352, discriminator: 5)
!14433 = !DILocation(line: 472, column: 106, scope: !14434)
!14434 = !DILexicalBlockFile(scope: !14435, file: !352, discriminator: 7)
!14435 = !DILexicalBlockFile(scope: !2382, file: !352, discriminator: 6)
!14436 = !DILocation(line: 472, column: 106, scope: !2381)
!14437 = !DILocation(line: 472, column: 108, scope: !14438)
!14438 = !DILexicalBlockFile(scope: !14439, file: !352, discriminator: 8)
!14439 = !DILexicalBlockFile(scope: !2383, file: !352, discriminator: 3)
!14440 = !DILocation(line: 472, column: 108, scope: !14441)
!14441 = !DILexicalBlockFile(scope: !2383, file: !352, discriminator: 9)
!14442 = !DILocation(line: 473, column: 5, scope: !2362)
!14443 = !DILocation(line: 474, column: 1, scope: !2362)
!14444 = !DILocation(line: 490, column: 36, scope: !2384)
!14445 = !DILocation(line: 492, column: 5, scope: !2384)
!14446 = !DILocation(line: 492, column: 9, scope: !2384)
!14447 = !DILocation(line: 493, column: 5, scope: !2384)
!14448 = !DILocation(line: 493, column: 15, scope: !2384)
!14449 = !DILocation(line: 495, column: 5, scope: !2384)
!14450 = !DILocation(line: 495, column: 10, scope: !14451)
!14451 = !DILexicalBlockFile(scope: !2392, file: !352, discriminator: 1)
!14452 = !DILocation(line: 495, column: 20, scope: !2392)
!14453 = !DILocation(line: 495, column: 43, scope: !2392)
!14454 = !DILocation(line: 495, column: 48, scope: !2392)
!14455 = !DILocation(line: 495, column: 57, scope: !2396)
!14456 = !DILocation(line: 495, column: 65, scope: !2396)
!14457 = !DILocation(line: 495, column: 57, scope: !2392)
!14458 = !DILocation(line: 495, column: 83, scope: !14459)
!14459 = !DILexicalBlockFile(scope: !2395, file: !352, discriminator: 2)
!14460 = !DILocation(line: 495, column: 88, scope: !2395)
!14461 = !DILocation(line: 495, column: 92, scope: !2395)
!14462 = !DILocation(line: 495, column: 106, scope: !2395)
!14463 = !DILocation(line: 495, column: 111, scope: !14464)
!14464 = !DILexicalBlockFile(scope: !2394, file: !352, discriminator: 4)
!14465 = !DILocation(line: 495, column: 121, scope: !2394)
!14466 = !DILocation(line: 495, column: 151, scope: !2394)
!14467 = !DILocation(line: 495, column: 169, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !2394, file: !352, line: 495, column: 166)
!14469 = !DILocation(line: 495, column: 186, scope: !14468)
!14470 = !DILocation(line: 495, column: 166, scope: !14468)
!14471 = !DILocation(line: 495, column: 196, scope: !14468)
!14472 = !DILocation(line: 495, column: 166, scope: !2394)
!14473 = !DILocation(line: 495, column: 166, scope: !14474)
!14474 = !DILexicalBlockFile(scope: !2394, file: !352, discriminator: 5)
!14475 = !DILocation(line: 495, column: 227, scope: !14476)
!14476 = !DILexicalBlockFile(scope: !14468, file: !352, discriminator: 6)
!14477 = !DILocation(line: 495, column: 245, scope: !14468)
!14478 = !DILocation(line: 495, column: 255, scope: !14468)
!14479 = !DILocation(line: 495, column: 280, scope: !14468)
!14480 = !DILocation(line: 495, column: 211, scope: !14468)
!14481 = !DILocation(line: 495, column: 299, scope: !14482)
!14482 = !DILexicalBlockFile(scope: !2395, file: !352, discriminator: 7)
!14483 = !DILocation(line: 495, column: 299, scope: !2394)
!14484 = !DILocation(line: 495, column: 299, scope: !14485)
!14485 = !DILexicalBlockFile(scope: !2394, file: !352, discriminator: 8)
!14486 = !DILocation(line: 495, column: 312, scope: !14487)
!14487 = !DILexicalBlockFile(scope: !2395, file: !352, discriminator: 9)
!14488 = !DILocation(line: 495, column: 314, scope: !14489)
!14489 = !DILexicalBlockFile(scope: !14490, file: !352, discriminator: 10)
!14490 = !DILexicalBlockFile(scope: !2384, file: !352, discriminator: 3)
!14491 = !DILocation(line: 495, column: 314, scope: !2392)
!14492 = !DILocation(line: 495, column: 314, scope: !14493)
!14493 = !DILexicalBlockFile(scope: !2392, file: !352, discriminator: 11)
!14494 = !DILocation(line: 496, column: 11, scope: !2400)
!14495 = !DILocation(line: 496, column: 10, scope: !2400)
!14496 = !DILocation(line: 496, column: 16, scope: !14497)
!14497 = !DILexicalBlockFile(scope: !14498, file: !352, discriminator: 2)
!14498 = !DILexicalBlockFile(scope: !2399, file: !352, discriminator: 1)
!14499 = !DILocation(line: 496, column: 18, scope: !2399)
!14500 = !DILocation(line: 496, column: 23, scope: !2399)
!14501 = !DILocation(line: 496, column: 17, scope: !2399)
!14502 = !DILocation(line: 496, column: 5, scope: !2400)
!14503 = !DILocation(line: 497, column: 9, scope: !2399)
!14504 = !DILocation(line: 497, column: 14, scope: !14505)
!14505 = !DILexicalBlockFile(scope: !2398, file: !352, discriminator: 1)
!14506 = !DILocation(line: 497, column: 24, scope: !2398)
!14507 = !DILocation(line: 497, column: 59, scope: !2398)
!14508 = !DILocation(line: 497, column: 47, scope: !2398)
!14509 = !DILocation(line: 497, column: 52, scope: !2398)
!14510 = !DILocation(line: 497, column: 68, scope: !2404)
!14511 = !DILocation(line: 497, column: 76, scope: !2404)
!14512 = !DILocation(line: 497, column: 68, scope: !2398)
!14513 = !DILocation(line: 497, column: 106, scope: !14514)
!14514 = !DILexicalBlockFile(scope: !2403, file: !352, discriminator: 2)
!14515 = !DILocation(line: 497, column: 94, scope: !2403)
!14516 = !DILocation(line: 497, column: 99, scope: !2403)
!14517 = !DILocation(line: 497, column: 110, scope: !2403)
!14518 = !DILocation(line: 497, column: 124, scope: !2403)
!14519 = !DILocation(line: 497, column: 129, scope: !14520)
!14520 = !DILexicalBlockFile(scope: !2402, file: !352, discriminator: 4)
!14521 = !DILocation(line: 497, column: 139, scope: !2402)
!14522 = !DILocation(line: 497, column: 169, scope: !2402)
!14523 = !DILocation(line: 497, column: 187, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !2402, file: !352, line: 497, column: 184)
!14525 = !DILocation(line: 497, column: 204, scope: !14524)
!14526 = !DILocation(line: 497, column: 184, scope: !14524)
!14527 = !DILocation(line: 497, column: 214, scope: !14524)
!14528 = !DILocation(line: 497, column: 184, scope: !2402)
!14529 = !DILocation(line: 497, column: 184, scope: !14530)
!14530 = !DILexicalBlockFile(scope: !2402, file: !352, discriminator: 5)
!14531 = !DILocation(line: 497, column: 245, scope: !14532)
!14532 = !DILexicalBlockFile(scope: !14524, file: !352, discriminator: 6)
!14533 = !DILocation(line: 497, column: 263, scope: !14524)
!14534 = !DILocation(line: 497, column: 273, scope: !14524)
!14535 = !DILocation(line: 497, column: 298, scope: !14524)
!14536 = !DILocation(line: 497, column: 229, scope: !14524)
!14537 = !DILocation(line: 497, column: 317, scope: !14538)
!14538 = !DILexicalBlockFile(scope: !2403, file: !352, discriminator: 7)
!14539 = !DILocation(line: 497, column: 317, scope: !2402)
!14540 = !DILocation(line: 497, column: 317, scope: !14541)
!14541 = !DILexicalBlockFile(scope: !2402, file: !352, discriminator: 8)
!14542 = !DILocation(line: 497, column: 330, scope: !14543)
!14543 = !DILexicalBlockFile(scope: !2403, file: !352, discriminator: 9)
!14544 = !DILocation(line: 497, column: 332, scope: !14545)
!14545 = !DILexicalBlockFile(scope: !14546, file: !352, discriminator: 10)
!14546 = !DILexicalBlockFile(scope: !2399, file: !352, discriminator: 3)
!14547 = !DILocation(line: 497, column: 332, scope: !2398)
!14548 = !DILocation(line: 497, column: 332, scope: !14549)
!14549 = !DILexicalBlockFile(scope: !2398, file: !352, discriminator: 11)
!14550 = !DILocation(line: 497, column: 332, scope: !14551)
!14551 = !DILexicalBlockFile(scope: !2398, file: !352, discriminator: 12)
!14552 = !DILocation(line: 496, column: 34, scope: !2399)
!14553 = !DILocation(line: 496, column: 5, scope: !2399)
!14554 = !DILocation(line: 498, column: 11, scope: !2384)
!14555 = !DILocation(line: 498, column: 16, scope: !2384)
!14556 = !DILocation(line: 498, column: 9, scope: !2384)
!14557 = !DILocation(line: 499, column: 5, scope: !2384)
!14558 = !DILocation(line: 499, column: 10, scope: !2384)
!14559 = !DILocation(line: 499, column: 19, scope: !2384)
!14560 = !DILocation(line: 500, column: 31, scope: !2384)
!14561 = !DILocation(line: 500, column: 5, scope: !2384)
!14562 = !DILocation(line: 502, column: 1, scope: !2384)
!14563 = !DILocation(line: 501, column: 5, scope: !2384)
!14564 = !DILocation(line: 532, column: 33, scope: !2422)
!14565 = !DILocation(line: 532, column: 49, scope: !2422)
!14566 = !DILocation(line: 532, column: 65, scope: !2422)
!14567 = !DILocation(line: 534, column: 5, scope: !2422)
!14568 = !DILocation(line: 534, column: 20, scope: !2422)
!14569 = !DILocation(line: 535, column: 5, scope: !2422)
!14570 = !DILocation(line: 535, column: 15, scope: !2422)
!14571 = !DILocation(line: 535, column: 20, scope: !2422)
!14572 = !DILocation(line: 535, column: 29, scope: !2422)
!14573 = !DILocation(line: 536, column: 5, scope: !2422)
!14574 = !DILocation(line: 536, column: 16, scope: !2422)
!14575 = !DILocation(line: 536, column: 19, scope: !2422)
!14576 = !DILocation(line: 539, column: 27, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !2422, file: !352, line: 539, column: 9)
!14578 = !DILocation(line: 539, column: 10, scope: !14577)
!14579 = !DILocation(line: 539, column: 9, scope: !2422)
!14580 = !DILocation(line: 540, column: 9, scope: !14577)
!14581 = !DILocation(line: 542, column: 54, scope: !2422)
!14582 = !DILocation(line: 542, column: 28, scope: !2422)
!14583 = !DILocation(line: 542, column: 11, scope: !2422)
!14584 = !DILocation(line: 542, column: 9, scope: !2422)
!14585 = !DILocation(line: 543, column: 10, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !2422, file: !352, line: 543, column: 9)
!14587 = !DILocation(line: 543, column: 9, scope: !2422)
!14588 = !DILocation(line: 544, column: 9, scope: !14586)
!14589 = !DILocation(line: 546, column: 28, scope: !2422)
!14590 = !DILocation(line: 546, column: 13, scope: !2422)
!14591 = !DILocation(line: 546, column: 38, scope: !2422)
!14592 = !DILocation(line: 546, column: 9, scope: !2422)
!14593 = !DILocation(line: 547, column: 9, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !2422, file: !352, line: 547, column: 9)
!14595 = !DILocation(line: 547, column: 13, scope: !14594)
!14596 = !DILocation(line: 547, column: 9, scope: !2422)
!14597 = !DILocation(line: 548, column: 9, scope: !14594)
!14598 = !DILocation(line: 549, column: 11, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !2422, file: !352, line: 549, column: 5)
!14600 = !DILocation(line: 549, column: 10, scope: !14599)
!14601 = !DILocation(line: 549, column: 15, scope: !14602)
!14602 = !DILexicalBlockFile(scope: !14603, file: !352, discriminator: 2)
!14603 = !DILexicalBlockFile(scope: !14604, file: !352, discriminator: 1)
!14604 = distinct !DILexicalBlock(scope: !14599, file: !352, line: 549, column: 5)
!14605 = !DILocation(line: 549, column: 17, scope: !14604)
!14606 = !DILocation(line: 549, column: 16, scope: !14604)
!14607 = !DILocation(line: 549, column: 5, scope: !14599)
!14608 = !DILocation(line: 550, column: 63, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14604, file: !352, line: 549, column: 27)
!14610 = !DILocation(line: 550, column: 45, scope: !14609)
!14611 = !DILocation(line: 550, column: 28, scope: !14609)
!14612 = !DILocation(line: 550, column: 55, scope: !14609)
!14613 = !{!14614, !2680, i64 24}
!14614 = !{!"", !2714, i64 0, !2680, i64 24, !2677, i64 32}
!14615 = !DILocation(line: 550, column: 27, scope: !14609)
!14616 = !DILocation(line: 550, column: 21, scope: !14609)
!14617 = !DILocation(line: 550, column: 9, scope: !14609)
!14618 = !DILocation(line: 550, column: 14, scope: !14609)
!14619 = !DILocation(line: 550, column: 24, scope: !14609)
!14620 = !DILocation(line: 551, column: 37, scope: !14609)
!14621 = !DILocation(line: 551, column: 25, scope: !14609)
!14622 = !DILocation(line: 551, column: 30, scope: !14609)
!14623 = !DILocation(line: 551, column: 43, scope: !14609)
!14624 = !DILocation(line: 551, column: 52, scope: !14609)
!14625 = !DILocation(line: 552, column: 5, scope: !14609)
!14626 = !DILocation(line: 549, column: 23, scope: !14604)
!14627 = !DILocation(line: 549, column: 5, scope: !14604)
!14628 = !DILocation(line: 554, column: 26, scope: !2422)
!14629 = !DILocation(line: 554, column: 20, scope: !2422)
!14630 = !DILocation(line: 554, column: 5, scope: !2422)
!14631 = !DILocation(line: 554, column: 10, scope: !2422)
!14632 = !DILocation(line: 554, column: 18, scope: !2422)
!14633 = !DILocation(line: 556, column: 9, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !2422, file: !352, line: 556, column: 9)
!14635 = !DILocation(line: 556, column: 13, scope: !14634)
!14636 = !DILocation(line: 556, column: 9, scope: !2422)
!14637 = !DILocation(line: 557, column: 13, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14639, file: !352, line: 557, column: 13)
!14639 = distinct !DILexicalBlock(scope: !14634, file: !352, line: 556, column: 20)
!14640 = !DILocation(line: 557, column: 18, scope: !14638)
!14641 = !DILocation(line: 557, column: 13, scope: !14639)
!14642 = !DILocation(line: 558, column: 31, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !352, line: 558, column: 17)
!14644 = distinct !DILexicalBlock(scope: !14638, file: !352, line: 557, column: 40)
!14645 = !DILocation(line: 558, column: 39, scope: !14643)
!14646 = !DILocation(line: 558, column: 48, scope: !14643)
!14647 = !DILocation(line: 558, column: 17, scope: !14644)
!14648 = !DILocation(line: 559, column: 17, scope: !14643)
!14649 = !DILocation(line: 561, column: 29, scope: !14644)
!14650 = !DILocation(line: 561, column: 37, scope: !14644)
!14651 = !DILocation(line: 561, column: 46, scope: !14644)
!14652 = !DILocation(line: 562, column: 29, scope: !14644)
!14653 = !DILocation(line: 562, column: 13, scope: !14644)
!14654 = !DILocation(line: 562, column: 18, scope: !14644)
!14655 = !DILocation(line: 562, column: 27, scope: !14644)
!14656 = !DILocation(line: 563, column: 9, scope: !14644)
!14657 = !DILocation(line: 564, column: 5, scope: !14639)
!14658 = !DILocation(line: 565, column: 13, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14660, file: !352, line: 565, column: 13)
!14660 = distinct !DILexicalBlock(scope: !14634, file: !352, line: 564, column: 12)
!14661 = !DILocation(line: 565, column: 18, scope: !14659)
!14662 = !DILocation(line: 565, column: 13, scope: !14660)
!14663 = !DILocation(line: 566, column: 13, scope: !14659)
!14664 = !DILocation(line: 568, column: 23, scope: !2422)
!14665 = !DILocation(line: 568, column: 12, scope: !2422)
!14666 = !DILocation(line: 568, column: 5, scope: !2422)
!14667 = !DILocation(line: 571, column: 5, scope: !2422)
!14668 = !DILocation(line: 571, column: 10, scope: !14669)
!14669 = !DILexicalBlockFile(scope: !2434, file: !352, discriminator: 1)
!14670 = !DILocation(line: 571, column: 20, scope: !2434)
!14671 = !DILocation(line: 571, column: 51, scope: !2434)
!14672 = !DILocation(line: 571, column: 38, scope: !2434)
!14673 = !DILocation(line: 571, column: 61, scope: !2437)
!14674 = !DILocation(line: 571, column: 77, scope: !2437)
!14675 = !DILocation(line: 571, column: 61, scope: !2434)
!14676 = !DILocation(line: 571, column: 92, scope: !14677)
!14677 = !DILexicalBlockFile(scope: !2437, file: !352, discriminator: 2)
!14678 = !DILocation(line: 571, column: 97, scope: !14679)
!14679 = !DILexicalBlockFile(scope: !2436, file: !352, discriminator: 4)
!14680 = !DILocation(line: 571, column: 107, scope: !2436)
!14681 = !DILocation(line: 571, column: 137, scope: !2436)
!14682 = !DILocation(line: 571, column: 163, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !2436, file: !352, line: 571, column: 160)
!14684 = !DILocation(line: 571, column: 180, scope: !14683)
!14685 = !DILocation(line: 571, column: 160, scope: !14683)
!14686 = !DILocation(line: 571, column: 190, scope: !14683)
!14687 = !DILocation(line: 571, column: 160, scope: !2436)
!14688 = !DILocation(line: 571, column: 160, scope: !14689)
!14689 = !DILexicalBlockFile(scope: !2436, file: !352, discriminator: 5)
!14690 = !DILocation(line: 571, column: 221, scope: !14691)
!14691 = !DILexicalBlockFile(scope: !14683, file: !352, discriminator: 6)
!14692 = !DILocation(line: 571, column: 239, scope: !14683)
!14693 = !DILocation(line: 571, column: 249, scope: !14683)
!14694 = !DILocation(line: 571, column: 274, scope: !14683)
!14695 = !DILocation(line: 571, column: 205, scope: !14683)
!14696 = !DILocation(line: 571, column: 293, scope: !14697)
!14697 = !DILexicalBlockFile(scope: !2437, file: !352, discriminator: 7)
!14698 = !DILocation(line: 571, column: 293, scope: !2436)
!14699 = !DILocation(line: 571, column: 293, scope: !14700)
!14700 = !DILexicalBlockFile(scope: !2436, file: !352, discriminator: 8)
!14701 = !DILocation(line: 571, column: 293, scope: !14702)
!14702 = !DILexicalBlockFile(scope: !2436, file: !352, discriminator: 9)
!14703 = !DILocation(line: 571, column: 306, scope: !14704)
!14704 = !DILexicalBlockFile(scope: !14705, file: !352, discriminator: 10)
!14705 = !DILexicalBlockFile(scope: !2422, file: !352, discriminator: 3)
!14706 = !DILocation(line: 571, column: 306, scope: !2434)
!14707 = !DILocation(line: 571, column: 306, scope: !14708)
!14708 = !DILexicalBlockFile(scope: !2434, file: !352, discriminator: 11)
!14709 = !DILocation(line: 572, column: 21, scope: !2422)
!14710 = !DILocation(line: 572, column: 5, scope: !2422)
!14711 = !DILocation(line: 573, column: 5, scope: !2422)
!14712 = !DILocation(line: 574, column: 1, scope: !2422)
!14713 = !DILocation(line: 477, column: 37, scope: !2405)
!14714 = !DILocation(line: 479, column: 5, scope: !2405)
!14715 = !DILocation(line: 479, column: 12, scope: !14716)
!14716 = !DILexicalBlockFile(scope: !14717, file: !352, discriminator: 5)
!14717 = !DILexicalBlockFile(scope: !2405, file: !352, discriminator: 1)
!14718 = !DILocation(line: 479, column: 16, scope: !2405)
!14719 = !DILocation(line: 479, column: 33, scope: !14720)
!14720 = !DILexicalBlockFile(scope: !2405, file: !352, discriminator: 2)
!14721 = !DILocation(line: 479, column: 40, scope: !2405)
!14722 = !DILocation(line: 479, column: 49, scope: !2405)
!14723 = !DILocation(line: 479, column: 72, scope: !2405)
!14724 = !DILocation(line: 480, column: 26, scope: !2405)
!14725 = !DILocation(line: 480, column: 33, scope: !2405)
!14726 = !DILocation(line: 480, column: 44, scope: !2405)
!14727 = !DILocation(line: 479, column: 5, scope: !14728)
!14728 = !DILexicalBlockFile(scope: !14729, file: !352, discriminator: 4)
!14729 = !DILexicalBlockFile(scope: !2405, file: !352, discriminator: 3)
!14730 = !DILocation(line: 481, column: 9, scope: !2409)
!14731 = !DILocation(line: 481, column: 19, scope: !2409)
!14732 = !DILocation(line: 481, column: 48, scope: !2409)
!14733 = !DILocation(line: 481, column: 31, scope: !2409)
!14734 = !DILocation(line: 481, column: 54, scope: !2409)
!14735 = !DILocation(line: 482, column: 27, scope: !2409)
!14736 = !DILocation(line: 482, column: 10, scope: !2409)
!14737 = !DILocation(line: 482, column: 33, scope: !2409)
!14738 = !DILocation(line: 482, column: 42, scope: !2409)
!14739 = !DILocation(line: 483, column: 9, scope: !2409)
!14740 = !DILocation(line: 483, column: 14, scope: !14741)
!14741 = !DILexicalBlockFile(scope: !2411, file: !352, discriminator: 1)
!14742 = !DILocation(line: 483, column: 24, scope: !2411)
!14743 = !DILocation(line: 483, column: 54, scope: !2411)
!14744 = !DILocation(line: 483, column: 68, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !2411, file: !352, line: 483, column: 65)
!14746 = !DILocation(line: 483, column: 85, scope: !14745)
!14747 = !DILocation(line: 483, column: 65, scope: !14745)
!14748 = !DILocation(line: 483, column: 95, scope: !14745)
!14749 = !DILocation(line: 483, column: 65, scope: !2411)
!14750 = !DILocation(line: 483, column: 65, scope: !14751)
!14751 = !DILexicalBlockFile(scope: !2411, file: !352, discriminator: 2)
!14752 = !DILocation(line: 483, column: 126, scope: !14753)
!14753 = !DILexicalBlockFile(scope: !14745, file: !352, discriminator: 3)
!14754 = !DILocation(line: 483, column: 144, scope: !14745)
!14755 = !DILocation(line: 483, column: 154, scope: !14745)
!14756 = !DILocation(line: 483, column: 179, scope: !14745)
!14757 = !DILocation(line: 483, column: 110, scope: !14745)
!14758 = !DILocation(line: 483, column: 198, scope: !14759)
!14759 = !DILexicalBlockFile(scope: !2409, file: !352, discriminator: 4)
!14760 = !DILocation(line: 483, column: 198, scope: !2411)
!14761 = !DILocation(line: 483, column: 198, scope: !14762)
!14762 = !DILexicalBlockFile(scope: !2411, file: !352, discriminator: 5)
!14763 = !DILocation(line: 484, column: 15, scope: !2409)
!14764 = !DILocation(line: 484, column: 13, scope: !2409)
!14765 = !DILocation(line: 485, column: 5, scope: !2405)
!14766 = !DILocation(line: 486, column: 5, scope: !2405)
!14767 = !DILocation(line: 486, column: 10, scope: !14768)
!14768 = !DILexicalBlockFile(scope: !2413, file: !352, discriminator: 1)
!14769 = !DILocation(line: 486, column: 20, scope: !2413)
!14770 = !DILocation(line: 486, column: 51, scope: !2413)
!14771 = !DILocation(line: 486, column: 61, scope: !2416)
!14772 = !DILocation(line: 486, column: 77, scope: !2416)
!14773 = !DILocation(line: 486, column: 61, scope: !2413)
!14774 = !DILocation(line: 486, column: 92, scope: !14775)
!14775 = !DILexicalBlockFile(scope: !2416, file: !352, discriminator: 2)
!14776 = !DILocation(line: 486, column: 97, scope: !14777)
!14777 = !DILexicalBlockFile(scope: !2415, file: !352, discriminator: 4)
!14778 = !DILocation(line: 486, column: 107, scope: !2415)
!14779 = !DILocation(line: 486, column: 137, scope: !2415)
!14780 = !DILocation(line: 486, column: 163, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !2415, file: !352, line: 486, column: 160)
!14782 = !DILocation(line: 486, column: 180, scope: !14781)
!14783 = !DILocation(line: 486, column: 160, scope: !14781)
!14784 = !DILocation(line: 486, column: 190, scope: !14781)
!14785 = !DILocation(line: 486, column: 160, scope: !2415)
!14786 = !DILocation(line: 486, column: 160, scope: !14787)
!14787 = !DILexicalBlockFile(scope: !2415, file: !352, discriminator: 5)
!14788 = !DILocation(line: 486, column: 221, scope: !14789)
!14789 = !DILexicalBlockFile(scope: !14781, file: !352, discriminator: 6)
!14790 = !DILocation(line: 486, column: 239, scope: !14781)
!14791 = !DILocation(line: 486, column: 249, scope: !14781)
!14792 = !DILocation(line: 486, column: 274, scope: !14781)
!14793 = !DILocation(line: 486, column: 205, scope: !14781)
!14794 = !DILocation(line: 486, column: 293, scope: !14795)
!14795 = !DILexicalBlockFile(scope: !2416, file: !352, discriminator: 7)
!14796 = !DILocation(line: 486, column: 293, scope: !2415)
!14797 = !DILocation(line: 486, column: 293, scope: !14798)
!14798 = !DILexicalBlockFile(scope: !2415, file: !352, discriminator: 8)
!14799 = !DILocation(line: 486, column: 293, scope: !14800)
!14800 = !DILexicalBlockFile(scope: !2415, file: !352, discriminator: 9)
!14801 = !DILocation(line: 486, column: 306, scope: !14802)
!14802 = !DILexicalBlockFile(scope: !14729, file: !352, discriminator: 10)
!14803 = !DILocation(line: 486, column: 306, scope: !2413)
!14804 = !DILocation(line: 487, column: 1, scope: !2405)
!14805 = !DILocation(line: 513, column: 37, scope: !2417)
!14806 = !DILocation(line: 515, column: 5, scope: !2417)
!14807 = !DILocation(line: 515, column: 9, scope: !2417)
!14808 = !DILocation(line: 517, column: 5, scope: !2417)
!14809 = !DILocation(line: 517, column: 15, scope: !2417)
!14810 = !DILocation(line: 517, column: 35, scope: !2417)
!14811 = !DILocation(line: 517, column: 40, scope: !2417)
!14812 = !DILocation(line: 517, column: 24, scope: !2417)
!14813 = !DILocation(line: 518, column: 10, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !2417, file: !352, line: 518, column: 9)
!14815 = !DILocation(line: 518, column: 9, scope: !2417)
!14816 = !DILocation(line: 519, column: 9, scope: !14814)
!14817 = !DILocation(line: 520, column: 11, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !2417, file: !352, line: 520, column: 5)
!14819 = !DILocation(line: 520, column: 10, scope: !14818)
!14820 = !DILocation(line: 520, column: 16, scope: !14821)
!14821 = !DILexicalBlockFile(scope: !14822, file: !352, discriminator: 2)
!14822 = !DILexicalBlockFile(scope: !14823, file: !352, discriminator: 1)
!14823 = distinct !DILexicalBlock(scope: !14818, file: !352, line: 520, column: 5)
!14824 = !DILocation(line: 520, column: 18, scope: !14823)
!14825 = !DILocation(line: 520, column: 23, scope: !14823)
!14826 = !DILocation(line: 520, column: 17, scope: !14823)
!14827 = !DILocation(line: 520, column: 5, scope: !14818)
!14828 = !DILocation(line: 521, column: 37, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14823, file: !352, line: 520, column: 38)
!14830 = !DILocation(line: 521, column: 25, scope: !14829)
!14831 = !DILocation(line: 521, column: 30, scope: !14829)
!14832 = !DILocation(line: 521, column: 43, scope: !14829)
!14833 = !DILocation(line: 521, column: 52, scope: !14829)
!14834 = !DILocation(line: 522, column: 64, scope: !14829)
!14835 = !DILocation(line: 522, column: 52, scope: !14829)
!14836 = !DILocation(line: 522, column: 57, scope: !14829)
!14837 = !DILocation(line: 522, column: 46, scope: !14829)
!14838 = !DILocation(line: 522, column: 10, scope: !14829)
!14839 = !DILocation(line: 522, column: 28, scope: !14829)
!14840 = !DILocation(line: 522, column: 11, scope: !14829)
!14841 = !DILocation(line: 522, column: 38, scope: !14829)
!14842 = !DILocation(line: 522, column: 49, scope: !14829)
!14843 = !DILocation(line: 523, column: 5, scope: !14829)
!14844 = !DILocation(line: 520, column: 34, scope: !14823)
!14845 = !DILocation(line: 520, column: 5, scope: !14823)
!14846 = !DILocation(line: 524, column: 50, scope: !2417)
!14847 = !DILocation(line: 524, column: 38, scope: !2417)
!14848 = !DILocation(line: 524, column: 57, scope: !2417)
!14849 = !DILocation(line: 524, column: 67, scope: !2417)
!14850 = !DILocation(line: 524, column: 72, scope: !2417)
!14851 = !DILocation(line: 525, column: 26, scope: !2417)
!14852 = !DILocation(line: 526, column: 26, scope: !2417)
!14853 = !DILocation(line: 526, column: 31, scope: !2417)
!14854 = !DILocation(line: 526, column: 42, scope: !14855)
!14855 = !DILexicalBlockFile(scope: !2417, file: !352, discriminator: 1)
!14856 = !DILocation(line: 526, column: 47, scope: !2417)
!14857 = !DILocation(line: 526, column: 26, scope: !14858)
!14858 = !DILexicalBlockFile(scope: !2417, file: !352, discriminator: 2)
!14859 = !DILocation(line: 524, column: 12, scope: !2417)
!14860 = !DILocation(line: 524, column: 5, scope: !2417)
!14861 = !DILocation(line: 527, column: 1, scope: !2417)
!14862 = !DILocation(line: 812, column: 15, scope: !2438)
!14863 = !DILocation(line: 812, column: 31, scope: !2438)
!14864 = !DILocation(line: 814, column: 5, scope: !2438)
!14865 = !DILocation(line: 814, column: 16, scope: !2438)
!14866 = !DILocation(line: 814, column: 19, scope: !2438)
!14867 = !DILocation(line: 815, column: 5, scope: !2438)
!14868 = !DILocation(line: 815, column: 15, scope: !2438)
!14869 = !DILocation(line: 815, column: 20, scope: !2438)
!14870 = !DILocation(line: 815, column: 31, scope: !2438)
!14871 = !DILocation(line: 815, column: 42, scope: !2438)
!14872 = !DILocation(line: 818, column: 27, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 818, column: 9)
!14874 = !DILocation(line: 818, column: 10, scope: !14873)
!14875 = !DILocation(line: 818, column: 9, scope: !2438)
!14876 = !DILocation(line: 819, column: 9, scope: !14873)
!14877 = !DILocation(line: 820, column: 9, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 820, column: 9)
!14879 = !DILocation(line: 820, column: 11, scope: !14878)
!14880 = !DILocation(line: 820, column: 9, scope: !2438)
!14881 = !DILocation(line: 821, column: 25, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14878, file: !352, line: 820, column: 16)
!14883 = !DILocation(line: 821, column: 9, scope: !14882)
!14884 = !DILocation(line: 822, column: 9, scope: !14882)
!14885 = !DILocation(line: 824, column: 26, scope: !2438)
!14886 = !DILocation(line: 824, column: 14, scope: !2438)
!14887 = !DILocation(line: 824, column: 12, scope: !2438)
!14888 = !DILocation(line: 825, column: 9, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 825, column: 9)
!14890 = !DILocation(line: 825, column: 16, scope: !14889)
!14891 = !DILocation(line: 825, column: 9, scope: !2438)
!14892 = !DILocation(line: 826, column: 9, scope: !14889)
!14893 = !DILocation(line: 827, column: 9, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !2438, file: !352, line: 827, column: 9)
!14895 = !DILocation(line: 827, column: 11, scope: !14894)
!14896 = !DILocation(line: 827, column: 9, scope: !2438)
!14897 = !DILocation(line: 828, column: 16, scope: !14894)
!14898 = !DILocation(line: 828, column: 9, scope: !14894)
!14899 = !DILocation(line: 829, column: 27, scope: !2438)
!14900 = !DILocation(line: 829, column: 10, scope: !2438)
!14901 = !DILocation(line: 829, column: 8, scope: !2438)
!14902 = !DILocation(line: 830, column: 9, scope: !2451)
!14903 = !DILocation(line: 830, column: 12, scope: !2451)
!14904 = !DILocation(line: 830, column: 9, scope: !2438)
!14905 = !DILocation(line: 831, column: 9, scope: !2450)
!14906 = !DILocation(line: 831, column: 14, scope: !14907)
!14907 = !DILexicalBlockFile(scope: !2449, file: !352, discriminator: 1)
!14908 = !DILocation(line: 831, column: 24, scope: !2449)
!14909 = !DILocation(line: 831, column: 54, scope: !2449)
!14910 = !DILocation(line: 831, column: 71, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !2449, file: !352, line: 831, column: 68)
!14912 = !DILocation(line: 831, column: 88, scope: !14911)
!14913 = !DILocation(line: 831, column: 68, scope: !14911)
!14914 = !DILocation(line: 831, column: 98, scope: !14911)
!14915 = !DILocation(line: 831, column: 68, scope: !2449)
!14916 = !DILocation(line: 831, column: 68, scope: !14917)
!14917 = !DILexicalBlockFile(scope: !2449, file: !352, discriminator: 2)
!14918 = !DILocation(line: 831, column: 129, scope: !14919)
!14919 = !DILexicalBlockFile(scope: !14911, file: !352, discriminator: 3)
!14920 = !DILocation(line: 831, column: 147, scope: !14911)
!14921 = !DILocation(line: 831, column: 157, scope: !14911)
!14922 = !DILocation(line: 831, column: 182, scope: !14911)
!14923 = !DILocation(line: 831, column: 113, scope: !14911)
!14924 = !DILocation(line: 831, column: 201, scope: !14925)
!14925 = !DILexicalBlockFile(scope: !2450, file: !352, discriminator: 4)
!14926 = !DILocation(line: 831, column: 201, scope: !2449)
!14927 = !DILocation(line: 831, column: 201, scope: !14928)
!14928 = !DILexicalBlockFile(scope: !2449, file: !352, discriminator: 5)
!14929 = !DILocation(line: 832, column: 9, scope: !2450)
!14930 = !DILocation(line: 834, column: 30, scope: !2455)
!14931 = !DILocation(line: 834, column: 10, scope: !2455)
!14932 = !DILocation(line: 834, column: 9, scope: !2438)
!14933 = !DILocation(line: 835, column: 37, scope: !2454)
!14934 = !DILocation(line: 835, column: 20, scope: !2454)
!14935 = !DILocation(line: 835, column: 18, scope: !2454)
!14936 = !DILocation(line: 836, column: 9, scope: !2454)
!14937 = !DILocation(line: 836, column: 14, scope: !14938)
!14938 = !DILexicalBlockFile(scope: !2453, file: !352, discriminator: 1)
!14939 = !DILocation(line: 836, column: 24, scope: !2453)
!14940 = !DILocation(line: 836, column: 54, scope: !2453)
!14941 = !DILocation(line: 836, column: 67, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !2453, file: !352, line: 836, column: 64)
!14943 = !DILocation(line: 836, column: 84, scope: !14942)
!14944 = !DILocation(line: 836, column: 64, scope: !14942)
!14945 = !DILocation(line: 836, column: 94, scope: !14942)
!14946 = !DILocation(line: 836, column: 64, scope: !2453)
!14947 = !DILocation(line: 836, column: 64, scope: !14948)
!14948 = !DILexicalBlockFile(scope: !2453, file: !352, discriminator: 2)
!14949 = !DILocation(line: 836, column: 125, scope: !14950)
!14950 = !DILexicalBlockFile(scope: !14942, file: !352, discriminator: 3)
!14951 = !DILocation(line: 836, column: 143, scope: !14942)
!14952 = !DILocation(line: 836, column: 153, scope: !14942)
!14953 = !DILocation(line: 836, column: 178, scope: !14942)
!14954 = !DILocation(line: 836, column: 109, scope: !14942)
!14955 = !DILocation(line: 836, column: 197, scope: !14956)
!14956 = !DILexicalBlockFile(scope: !2454, file: !352, discriminator: 4)
!14957 = !DILocation(line: 836, column: 197, scope: !2453)
!14958 = !DILocation(line: 836, column: 197, scope: !14959)
!14959 = !DILexicalBlockFile(scope: !2453, file: !352, discriminator: 5)
!14960 = !DILocation(line: 837, column: 13, scope: !2459)
!14961 = !DILocation(line: 837, column: 22, scope: !2459)
!14962 = !DILocation(line: 837, column: 13, scope: !2454)
!14963 = !DILocation(line: 838, column: 13, scope: !2458)
!14964 = !DILocation(line: 838, column: 18, scope: !14965)
!14965 = !DILexicalBlockFile(scope: !2457, file: !352, discriminator: 1)
!14966 = !DILocation(line: 838, column: 28, scope: !2457)
!14967 = !DILocation(line: 838, column: 58, scope: !2457)
!14968 = !DILocation(line: 838, column: 75, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !2457, file: !352, line: 838, column: 72)
!14970 = !DILocation(line: 838, column: 92, scope: !14969)
!14971 = !DILocation(line: 838, column: 72, scope: !14969)
!14972 = !DILocation(line: 838, column: 102, scope: !14969)
!14973 = !DILocation(line: 838, column: 72, scope: !2457)
!14974 = !DILocation(line: 838, column: 72, scope: !14975)
!14975 = !DILexicalBlockFile(scope: !2457, file: !352, discriminator: 2)
!14976 = !DILocation(line: 838, column: 133, scope: !14977)
!14977 = !DILexicalBlockFile(scope: !14969, file: !352, discriminator: 3)
!14978 = !DILocation(line: 838, column: 151, scope: !14969)
!14979 = !DILocation(line: 838, column: 161, scope: !14969)
!14980 = !DILocation(line: 838, column: 186, scope: !14969)
!14981 = !DILocation(line: 838, column: 117, scope: !14969)
!14982 = !DILocation(line: 838, column: 205, scope: !14983)
!14983 = !DILexicalBlockFile(scope: !2458, file: !352, discriminator: 4)
!14984 = !DILocation(line: 838, column: 205, scope: !2457)
!14985 = !DILocation(line: 838, column: 205, scope: !14986)
!14986 = !DILexicalBlockFile(scope: !2457, file: !352, discriminator: 5)
!14987 = !DILocation(line: 839, column: 13, scope: !2458)
!14988 = !DILocation(line: 841, column: 5, scope: !2454)
!14989 = !DILocation(line: 842, column: 20, scope: !2455)
!14990 = !DILocation(line: 842, column: 18, scope: !2455)
!14991 = !DILocation(line: 843, column: 48, scope: !2438)
!14992 = !DILocation(line: 843, column: 25, scope: !2438)
!14993 = !DILocation(line: 843, column: 7, scope: !2438)
!14994 = !DILocation(line: 843, column: 35, scope: !2438)
!14995 = !DILocation(line: 843, column: 6, scope: !2438)
!14996 = !DILocation(line: 843, column: 46, scope: !2438)
!14997 = !DILocation(line: 844, column: 11, scope: !2466)
!14998 = !DILocation(line: 844, column: 10, scope: !2466)
!14999 = !DILocation(line: 844, column: 16, scope: !15000)
!15000 = !DILexicalBlockFile(scope: !15001, file: !352, discriminator: 2)
!15001 = !DILexicalBlockFile(scope: !2465, file: !352, discriminator: 1)
!15002 = !DILocation(line: 844, column: 18, scope: !2465)
!15003 = !DILocation(line: 844, column: 17, scope: !2465)
!15004 = !DILocation(line: 844, column: 5, scope: !2466)
!15005 = !DILocation(line: 846, column: 43, scope: !2464)
!15006 = !DILocation(line: 846, column: 20, scope: !2464)
!15007 = !DILocation(line: 846, column: 18, scope: !2464)
!15008 = !DILocation(line: 847, column: 13, scope: !2463)
!15009 = !DILocation(line: 847, column: 22, scope: !2463)
!15010 = !DILocation(line: 847, column: 13, scope: !2464)
!15011 = !DILocation(line: 848, column: 13, scope: !2462)
!15012 = !DILocation(line: 848, column: 18, scope: !15013)
!15013 = !DILexicalBlockFile(scope: !2461, file: !352, discriminator: 1)
!15014 = !DILocation(line: 848, column: 28, scope: !2461)
!15015 = !DILocation(line: 848, column: 58, scope: !2461)
!15016 = !DILocation(line: 848, column: 75, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !2461, file: !352, line: 848, column: 72)
!15018 = !DILocation(line: 848, column: 92, scope: !15017)
!15019 = !DILocation(line: 848, column: 72, scope: !15017)
!15020 = !DILocation(line: 848, column: 102, scope: !15017)
!15021 = !DILocation(line: 848, column: 72, scope: !2461)
!15022 = !DILocation(line: 848, column: 72, scope: !15023)
!15023 = !DILexicalBlockFile(scope: !2461, file: !352, discriminator: 2)
!15024 = !DILocation(line: 848, column: 133, scope: !15025)
!15025 = !DILexicalBlockFile(scope: !15017, file: !352, discriminator: 3)
!15026 = !DILocation(line: 848, column: 151, scope: !15017)
!15027 = !DILocation(line: 848, column: 161, scope: !15017)
!15028 = !DILocation(line: 848, column: 186, scope: !15017)
!15029 = !DILocation(line: 848, column: 117, scope: !15017)
!15030 = !DILocation(line: 848, column: 205, scope: !15031)
!15031 = !DILexicalBlockFile(scope: !2462, file: !352, discriminator: 4)
!15032 = !DILocation(line: 848, column: 205, scope: !2461)
!15033 = !DILocation(line: 848, column: 205, scope: !15034)
!15034 = !DILexicalBlockFile(scope: !2461, file: !352, discriminator: 5)
!15035 = !DILocation(line: 849, column: 13, scope: !2462)
!15036 = !DILocation(line: 851, column: 52, scope: !2464)
!15037 = !DILocation(line: 851, column: 47, scope: !2464)
!15038 = !DILocation(line: 851, column: 29, scope: !2464)
!15039 = !DILocation(line: 851, column: 11, scope: !2464)
!15040 = !DILocation(line: 851, column: 39, scope: !2464)
!15041 = !DILocation(line: 851, column: 10, scope: !2464)
!15042 = !DILocation(line: 851, column: 50, scope: !2464)
!15043 = !DILocation(line: 852, column: 5, scope: !2464)
!15044 = !DILocation(line: 844, column: 23, scope: !2465)
!15045 = !DILocation(line: 844, column: 5, scope: !2465)
!15046 = !DILocation(line: 853, column: 12, scope: !2438)
!15047 = !DILocation(line: 853, column: 5, scope: !2438)
!15048 = !DILocation(line: 854, column: 1, scope: !2438)
