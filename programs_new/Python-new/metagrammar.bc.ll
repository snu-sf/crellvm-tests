; ModuleID = 'programs_new/Python-new/metagrammar.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.grammar = type { i32, %struct.dfa*, %struct.labellist, i32, i32 }
%struct.dfa = type { i32, i8*, i32, i32, %struct.state*, i8* }
%struct.state = type { i32, %struct.arc*, i32, i32, i32*, i32 }
%struct.arc = type { i16, i16 }
%struct.labellist = type { i32, %struct.label* }
%struct.label = type { i32, i8* }

@_PyParser_Grammar = internal global %struct.grammar { i32 6, %struct.dfa* getelementptr inbounds ([6 x %struct.dfa], [6 x %struct.dfa]* @dfas, i32 0, i32 0), %struct.labellist { i32 19, %struct.label* getelementptr inbounds ([19 x %struct.label], [19 x %struct.label]* @labels, i32 0, i32 0) }, i32 256, i32 0 }, align 8
@dfas = internal global [6 x %struct.dfa] [%struct.dfa { i32 256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 0, i32 2, %struct.state* getelementptr inbounds ([2 x %struct.state], [2 x %struct.state]* @states_0, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0) }, %struct.dfa { i32 257, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 5, %struct.state* getelementptr inbounds ([5 x %struct.state], [5 x %struct.state]* @states_1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0) }, %struct.dfa { i32 258, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 2, %struct.state* getelementptr inbounds ([2 x %struct.state], [2 x %struct.state]* @states_2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0) }, %struct.dfa { i32 259, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 2, %struct.state* getelementptr inbounds ([2 x %struct.state], [2 x %struct.state]* @states_3, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0) }, %struct.dfa { i32 260, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i32 0, i32 5, %struct.state* getelementptr inbounds ([5 x %struct.state], [5 x %struct.state]* @states_4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0) }, %struct.dfa { i32 261, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 4, %struct.state* getelementptr inbounds ([4 x %struct.state], [4 x %struct.state]* @states_5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0) }], align 16
@labels = internal global [19 x %struct.label] [%struct.label { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0) }, %struct.label { i32 256, i8* null }, %struct.label { i32 257, i8* null }, %struct.label { i32 4, i8* null }, %struct.label zeroinitializer, %struct.label { i32 1, i8* null }, %struct.label { i32 11, i8* null }, %struct.label { i32 258, i8* null }, %struct.label { i32 259, i8* null }, %struct.label { i32 18, i8* null }, %struct.label { i32 260, i8* null }, %struct.label { i32 9, i8* null }, %struct.label { i32 10, i8* null }, %struct.label { i32 261, i8* null }, %struct.label { i32 16, i8* null }, %struct.label { i32 14, i8* null }, %struct.label { i32 3, i8* null }, %struct.label { i32 7, i8* null }, %struct.label { i32 8, i8* null }], align 16
@.str = private unnamed_addr constant [7 x i8] c"MSTART\00", align 1
@states_0 = internal global [2 x %struct.state] [%struct.state { i32 3, %struct.arc* getelementptr inbounds ([3 x %struct.arc], [3 x %struct.arc]* @arcs_0_0, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_0_1, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }], align 16
@.str.1 = private unnamed_addr constant [4 x i8] c"8\00\00\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"RULE\00", align 1
@states_1 = internal global [5 x %struct.state] [%struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_1_0, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_1_1, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_1_2, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_1_3, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_1_4, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }], align 16
@.str.3 = private unnamed_addr constant [4 x i8] c" \00\00\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"RHS\00", align 1
@states_2 = internal global [2 x %struct.state] [%struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_2_0, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 2, %struct.arc* getelementptr inbounds ([2 x %struct.arc], [2 x %struct.arc]* @arcs_2_1, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }], align 16
@.str.5 = private unnamed_addr constant [4 x i8] c" \08\03\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"ALT\00", align 1
@states_3 = internal global [2 x %struct.state] [%struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_3_0, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 2, %struct.arc* getelementptr inbounds ([2 x %struct.arc], [2 x %struct.arc]* @arcs_3_1, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }], align 16
@.str.7 = private unnamed_addr constant [5 x i8] c"ITEM\00", align 1
@states_4 = internal global [5 x %struct.state] [%struct.state { i32 2, %struct.arc* getelementptr inbounds ([2 x %struct.arc], [2 x %struct.arc]* @arcs_4_0, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_4_1, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 3, %struct.arc* getelementptr inbounds ([3 x %struct.arc], [3 x %struct.arc]* @arcs_4_2, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_4_3, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_4_4, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }], align 16
@.str.8 = private unnamed_addr constant [5 x i8] c"ATOM\00", align 1
@states_5 = internal global [4 x %struct.state] [%struct.state { i32 3, %struct.arc* getelementptr inbounds ([3 x %struct.arc], [3 x %struct.arc]* @arcs_5_0, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_5_1, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_5_2, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }, %struct.state { i32 1, %struct.arc* getelementptr inbounds ([1 x %struct.arc], [1 x %struct.arc]* @arcs_5_3, i32 0, i32 0), i32 0, i32 0, i32* null, i32 0 }], align 16
@.str.9 = private unnamed_addr constant [4 x i8] c" \00\03\00", align 1
@arcs_0_0 = internal global [3 x %struct.arc] [%struct.arc { i16 2, i16 0 }, %struct.arc { i16 3, i16 0 }, %struct.arc { i16 4, i16 1 }], align 2
@arcs_0_1 = internal global [1 x %struct.arc] [%struct.arc { i16 0, i16 1 }], align 2
@arcs_1_0 = internal global [1 x %struct.arc] [%struct.arc { i16 5, i16 1 }], align 2
@arcs_1_1 = internal global [1 x %struct.arc] [%struct.arc { i16 6, i16 2 }], align 2
@arcs_1_2 = internal global [1 x %struct.arc] [%struct.arc { i16 7, i16 3 }], align 2
@arcs_1_3 = internal global [1 x %struct.arc] [%struct.arc { i16 3, i16 4 }], align 2
@arcs_1_4 = internal global [1 x %struct.arc] [%struct.arc { i16 0, i16 4 }], align 2
@arcs_2_0 = internal global [1 x %struct.arc] [%struct.arc { i16 8, i16 1 }], align 2
@arcs_2_1 = internal global [2 x %struct.arc] [%struct.arc { i16 9, i16 0 }, %struct.arc { i16 0, i16 1 }], align 2
@arcs_3_0 = internal global [1 x %struct.arc] [%struct.arc { i16 10, i16 1 }], align 2
@arcs_3_1 = internal global [2 x %struct.arc] [%struct.arc { i16 10, i16 1 }, %struct.arc { i16 0, i16 1 }], align 2
@arcs_4_0 = internal global [2 x %struct.arc] [%struct.arc { i16 11, i16 1 }, %struct.arc { i16 13, i16 2 }], align 2
@arcs_4_1 = internal global [1 x %struct.arc] [%struct.arc { i16 7, i16 3 }], align 2
@arcs_4_2 = internal global [3 x %struct.arc] [%struct.arc { i16 14, i16 4 }, %struct.arc { i16 15, i16 4 }, %struct.arc { i16 0, i16 2 }], align 2
@arcs_4_3 = internal global [1 x %struct.arc] [%struct.arc { i16 12, i16 4 }], align 2
@arcs_4_4 = internal global [1 x %struct.arc] [%struct.arc { i16 0, i16 4 }], align 2
@arcs_5_0 = internal global [3 x %struct.arc] [%struct.arc { i16 5, i16 1 }, %struct.arc { i16 16, i16 1 }, %struct.arc { i16 17, i16 2 }], align 2
@arcs_5_1 = internal global [1 x %struct.arc] [%struct.arc { i16 0, i16 1 }], align 2
@arcs_5_2 = internal global [1 x %struct.arc] [%struct.arc { i16 7, i16 3 }], align 2
@arcs_5_3 = internal global [1 x %struct.arc] [%struct.arc { i16 18, i16 1 }], align 2
@.str.10 = private unnamed_addr constant [6 x i8] c"EMPTY\00", align 1

; Function Attrs: nounwind uwtable
define %struct.grammar* @_Py_meta_grammar() #0 {
entry:
  ret %struct.grammar* @_PyParser_Grammar, !dbg !118
}

; Function Attrs: nounwind uwtable
define %struct.grammar* @Py_meta_grammar() #0 {
entry:
  %call = call %struct.grammar* @_Py_meta_grammar(), !dbg !119
  ret %struct.grammar* %call, !dbg !120
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!115, !116}
!llvm.ident = !{!117}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3, globals: !63)
!1 = !DIFile(filename: "metagrammar.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{}
!3 = !{!4, !62}
!4 = !DISubprogram(name: "_Py_meta_grammar", scope: !5, file: !5, line: 150, type: !6, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: true, function: %struct.grammar* ()* @_Py_meta_grammar, variables: !2)
!5 = !DIFile(filename: "Parser/metagrammar.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!6 = !DISubroutineType(types: !7)
!7 = !{!8}
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "grammar", file: !10, line: 67, baseType: !11)
!10 = !DIFile(filename: "Include/grammar.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!11 = !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 61, size: 320, align: 64, elements: !12)
!12 = !{!13, !15, !48, !60, !61}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "g_ndfas", scope: !11, file: !10, line: 62, baseType: !14, size: 32, align: 32)
!14 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "g_dfa", scope: !11, file: !10, line: 63, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "dfa", file: !10, line: 57, baseType: !18)
!18 = !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 50, size: 320, align: 64, elements: !19)
!19 = !{!20, !21, !24, !25, !26, !45}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !18, file: !10, line: 51, baseType: !14, size: 32, align: 32)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !18, file: !10, line: 52, baseType: !22, size: 64, align: 64, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!23 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "d_initial", scope: !18, file: !10, line: 53, baseType: !14, size: 32, align: 32, offset: 128)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "d_nstates", scope: !18, file: !10, line: 54, baseType: !14, size: 32, align: 32, offset: 160)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "d_state", scope: !18, file: !10, line: 55, baseType: !27, size: 64, align: 64, offset: 192)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "state", file: !10, line: 46, baseType: !29)
!29 = !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 37, size: 320, align: 64, elements: !30)
!30 = !{!31, !32, !40, !41, !42, !44}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "s_narcs", scope: !29, file: !10, line: 38, baseType: !14, size: 32, align: 32)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "s_arc", scope: !29, file: !10, line: 39, baseType: !33, size: 64, align: 64, offset: 64)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "arc", file: !10, line: 33, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 30, size: 32, align: 16, elements: !36)
!36 = !{!37, !39}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "a_lbl", scope: !35, file: !10, line: 31, baseType: !38, size: 16, align: 16)
!38 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "a_arrow", scope: !35, file: !10, line: 32, baseType: !38, size: 16, align: 16, offset: 16)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "s_lower", scope: !29, file: !10, line: 42, baseType: !14, size: 32, align: 32, offset: 128)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "s_upper", scope: !29, file: !10, line: 43, baseType: !14, size: 32, align: 32, offset: 160)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "s_accel", scope: !29, file: !10, line: 44, baseType: !43, size: 64, align: 64, offset: 192)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "s_accept", scope: !29, file: !10, line: 45, baseType: !14, size: 32, align: 32, offset: 256)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "d_first", scope: !18, file: !10, line: 56, baseType: !46, size: 64, align: 64, offset: 256)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitset", file: !47, line: 12, baseType: !22)
!47 = !DIFile(filename: "Include/bitset.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!48 = !DIDerivedType(tag: DW_TAG_member, name: "g_ll", scope: !11, file: !10, line: 64, baseType: !49, size: 128, align: 64, offset: 128)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "labellist", file: !10, line: 26, baseType: !50)
!50 = !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 23, size: 128, align: 64, elements: !51)
!51 = !{!52, !53}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "ll_nlabels", scope: !50, file: !10, line: 24, baseType: !14, size: 32, align: 32)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "ll_label", scope: !50, file: !10, line: 25, baseType: !54, size: 64, align: 64, offset: 64)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "label", file: !10, line: 17, baseType: !56)
!56 = !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 14, size: 128, align: 64, elements: !57)
!57 = !{!58, !59}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "lb_type", scope: !56, file: !10, line: 15, baseType: !14, size: 32, align: 32)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "lb_str", scope: !56, file: !10, line: 16, baseType: !22, size: 64, align: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "g_start", scope: !11, file: !10, line: 65, baseType: !14, size: 32, align: 32, offset: 256)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "g_accel", scope: !11, file: !10, line: 66, baseType: !14, size: 32, align: 32, offset: 288)
!62 = !DISubprogram(name: "Py_meta_grammar", scope: !5, file: !5, line: 156, type: !6, isLocal: false, isDefinition: true, scopeLine: 157, flags: DIFlagPrototyped, isOptimized: true, function: %struct.grammar* ()* @Py_meta_grammar, variables: !2)
!63 = !{!64, !65, !69, !73, !77, !81, !85, !86, !87, !88, !89, !90, !91, !92, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !107, !108, !109, !110, !111}
!64 = !DIGlobalVariable(name: "_PyParser_Grammar", scope: !0, file: !5, line: 142, type: !9, isLocal: true, isDefinition: true, variable: %struct.grammar* @_PyParser_Grammar)
!65 = !DIGlobalVariable(name: "dfas", scope: !0, file: !5, line: 107, type: !66, isLocal: true, isDefinition: true, variable: [6 x %struct.dfa]* @dfas)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1920, align: 64, elements: !67)
!67 = !{!68}
!68 = !DISubrange(count: 6)
!69 = !DIGlobalVariable(name: "states_0", scope: !0, file: !5, line: 14, type: !70, isLocal: true, isDefinition: true, variable: [2 x %struct.state]* @states_0)
!70 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 640, align: 64, elements: !71)
!71 = !{!72}
!72 = !DISubrange(count: 2)
!73 = !DIGlobalVariable(name: "arcs_0_0", scope: !0, file: !5, line: 6, type: !74, isLocal: true, isDefinition: true, variable: [3 x %struct.arc]* @arcs_0_0)
!74 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 96, align: 16, elements: !75)
!75 = !{!76}
!76 = !DISubrange(count: 3)
!77 = !DIGlobalVariable(name: "arcs_0_1", scope: !0, file: !5, line: 11, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_0_1)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 32, align: 16, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 1)
!81 = !DIGlobalVariable(name: "states_1", scope: !0, file: !5, line: 33, type: !82, isLocal: true, isDefinition: true, variable: [5 x %struct.state]* @states_1)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 1600, align: 64, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 5)
!85 = !DIGlobalVariable(name: "arcs_1_0", scope: !0, file: !5, line: 18, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_1_0)
!86 = !DIGlobalVariable(name: "arcs_1_1", scope: !0, file: !5, line: 21, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_1_1)
!87 = !DIGlobalVariable(name: "arcs_1_2", scope: !0, file: !5, line: 24, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_1_2)
!88 = !DIGlobalVariable(name: "arcs_1_3", scope: !0, file: !5, line: 27, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_1_3)
!89 = !DIGlobalVariable(name: "arcs_1_4", scope: !0, file: !5, line: 30, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_1_4)
!90 = !DIGlobalVariable(name: "states_2", scope: !0, file: !5, line: 47, type: !70, isLocal: true, isDefinition: true, variable: [2 x %struct.state]* @states_2)
!91 = !DIGlobalVariable(name: "arcs_2_0", scope: !0, file: !5, line: 40, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_2_0)
!92 = !DIGlobalVariable(name: "arcs_2_1", scope: !0, file: !5, line: 43, type: !93, isLocal: true, isDefinition: true, variable: [2 x %struct.arc]* @arcs_2_1)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 64, align: 16, elements: !71)
!94 = !DIGlobalVariable(name: "states_3", scope: !0, file: !5, line: 58, type: !70, isLocal: true, isDefinition: true, variable: [2 x %struct.state]* @states_3)
!95 = !DIGlobalVariable(name: "arcs_3_0", scope: !0, file: !5, line: 51, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_3_0)
!96 = !DIGlobalVariable(name: "arcs_3_1", scope: !0, file: !5, line: 54, type: !93, isLocal: true, isDefinition: true, variable: [2 x %struct.arc]* @arcs_3_1)
!97 = !DIGlobalVariable(name: "states_4", scope: !0, file: !5, line: 80, type: !82, isLocal: true, isDefinition: true, variable: [5 x %struct.state]* @states_4)
!98 = !DIGlobalVariable(name: "arcs_4_0", scope: !0, file: !5, line: 62, type: !93, isLocal: true, isDefinition: true, variable: [2 x %struct.arc]* @arcs_4_0)
!99 = !DIGlobalVariable(name: "arcs_4_1", scope: !0, file: !5, line: 66, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_4_1)
!100 = !DIGlobalVariable(name: "arcs_4_2", scope: !0, file: !5, line: 69, type: !74, isLocal: true, isDefinition: true, variable: [3 x %struct.arc]* @arcs_4_2)
!101 = !DIGlobalVariable(name: "arcs_4_3", scope: !0, file: !5, line: 74, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_4_3)
!102 = !DIGlobalVariable(name: "arcs_4_4", scope: !0, file: !5, line: 77, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_4_4)
!103 = !DIGlobalVariable(name: "states_5", scope: !0, file: !5, line: 101, type: !104, isLocal: true, isDefinition: true, variable: [4 x %struct.state]* @states_5)
!104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 1280, align: 64, elements: !105)
!105 = !{!106}
!106 = !DISubrange(count: 4)
!107 = !DIGlobalVariable(name: "arcs_5_0", scope: !0, file: !5, line: 87, type: !74, isLocal: true, isDefinition: true, variable: [3 x %struct.arc]* @arcs_5_0)
!108 = !DIGlobalVariable(name: "arcs_5_1", scope: !0, file: !5, line: 92, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_5_1)
!109 = !DIGlobalVariable(name: "arcs_5_2", scope: !0, file: !5, line: 95, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_5_2)
!110 = !DIGlobalVariable(name: "arcs_5_3", scope: !0, file: !5, line: 98, type: !78, isLocal: true, isDefinition: true, variable: [1 x %struct.arc]* @arcs_5_3)
!111 = !DIGlobalVariable(name: "labels", scope: !0, file: !5, line: 121, type: !112, isLocal: true, isDefinition: true, variable: [19 x %struct.label]* @labels)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 2432, align: 64, elements: !113)
!113 = !{!114}
!114 = !DISubrange(count: 19)
!115 = !{i32 2, !"Dwarf Version", i32 4}
!116 = !{i32 2, !"Debug Info Version", i32 3}
!117 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!118 = !DILocation(line: 152, column: 5, scope: !4)
!119 = !DILocation(line: 158, column: 10, scope: !62)
!120 = !DILocation(line: 158, column: 3, scope: !62)
