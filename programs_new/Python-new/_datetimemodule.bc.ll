; ModuleID = 'irs-onlybc/_datetimemodule.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyDateTime_CAPI = type { %struct._typeobject*, %struct._typeobject*, %struct._typeobject*, %struct._typeobject*, %struct._typeobject*, %struct._object* (i32, i32, i32, %struct._typeobject*)*, %struct._object* (i32, i32, i32, i32, i32, i32, i32, %struct._object*, %struct._typeobject*)*, %struct._object* (i32, i32, i32, i32, %struct._object*, %struct._typeobject*)*, %struct._object* (i32, i32, i32, i32, %struct._typeobject*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PyDateTime_Delta = type { %struct._object, i64, i32, i32, i32 }
%struct.PyDateTime_Date = type { %struct._object, i64, i8, [4 x i8] }
%struct.PyDateTime_Time = type { %struct._object, i64, i8, [6 x i8], %struct._object* }
%struct.PyDateTime_DateTime = type { %struct._object, i64, i8, [10 x i8], %struct._object* }
%struct.PyDateTime_TimeZone = type { %struct._object, %struct._object*, %struct._object* }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._PyDateTime_BaseTZInfo = type { %struct._object, i64, i8 }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.timeval = type { i64, i64 }
%struct.PyDateTime_TZInfo = type { %struct._object }

@datetimemodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i32 0, i32 0), i64 -1, %struct.PyMethodDef* getelementptr inbounds ([1 x %struct.PyMethodDef], [1 x %struct.PyMethodDef]* @module_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@PyDateTime_DateType = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* @date_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* bitcast (i64 (%struct.PyDateTime_Date*)* @date_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @date_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* @date_richcompare, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([15 x %struct.PyMethodDef], [15 x %struct.PyMethodDef]* @date_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @date_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @date_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyDateTime_DateTimeType = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.103, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.PyDateTime_DateTime*)* @datetime_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* @datetime_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* bitcast (i64 (%struct.PyDateTime_DateTime*)* @datetime_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([223 x i8], [223 x i8]* @datetime_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* @datetime_richcompare, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([21 x %struct.PyMethodDef], [21 x %struct.PyMethodDef]* @datetime_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([6 x %struct.PyGetSetDef], [6 x %struct.PyGetSetDef]* @datetime_getset, i32 0, i32 0), %struct._typeobject* @PyDateTime_DateType, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* @datetime_alloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @datetime_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyDateTime_DeltaType = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.173, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Delta*)* @delta_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* @delta_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* bitcast (i64 (%struct.PyDateTime_Delta*)* @delta_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Delta*)* @delta_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @delta_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* @delta_richcompare, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @delta_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([4 x %struct.PyMemberDef], [4 x %struct.PyMemberDef]* @delta_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @delta_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyDateTime_TimeType = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.198, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.PyDateTime_Time*)* @time_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*)* @time_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* @time_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* bitcast (i64 (%struct.PyDateTime_Time*)* @time_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*)* @time_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @time_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* @time_richcompare, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([9 x %struct.PyMethodDef], [9 x %struct.PyMethodDef]* @time_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([6 x %struct.PyGetSetDef], [6 x %struct.PyGetSetDef]* @time_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* @time_alloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @time_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyDateTime_TZInfoType = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.209, i32 0, i32 0), i64 16, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @tzinfo_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @tzinfo_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyDateTime_TimeZoneType = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.224, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.PyDateTime_TimeZone*)* @timezone_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*)* @timezone_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* bitcast (i64 (%struct.PyDateTime_TimeZone*)* @timezone_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*)* @timezone_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @timezone_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone*, i32)* @timezone_richcompare to %struct._object* (%struct._object*, %struct._object*, i32)*), i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @timezone_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @PyDateTime_TZInfoType, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @timezone_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str = private unnamed_addr constant [11 x i8] c"resolution\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.3 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@PyDateTime_TimeZone_UTC = internal global %struct._object* null, align 8
@PyDateTime_Epoch = internal global %struct._object* null, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"MINYEAR\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"MAXYEAR\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"timedelta\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"tzinfo\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"timezone\00", align 1
@CAPI = internal global %struct.PyDateTime_CAPI { %struct._typeobject* @PyDateTime_DateType, %struct._typeobject* @PyDateTime_DateTimeType, %struct._typeobject* @PyDateTime_TimeType, %struct._typeobject* @PyDateTime_DeltaType, %struct._typeobject* @PyDateTime_TZInfoType, %struct._object* (i32, i32, i32, %struct._typeobject*)* @new_date_ex, %struct._object* (i32, i32, i32, i32, i32, i32, i32, %struct._object*, %struct._typeobject*)* @new_datetime_ex, %struct._object* (i32, i32, i32, i32, %struct._object*, %struct._typeobject*)* @new_time_ex, %struct._object* (i32, i32, i32, i32, %struct._typeobject*)* @new_delta_ex, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @datetime_fromtimestamp, %struct._object* (%struct._object*, %struct._object*)* @date_fromtimestamp }, align 8
@.str.12 = private unnamed_addr constant [23 x i8] c"datetime.datetime_CAPI\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"datetime_CAPI\00", align 1
@one = internal global %struct._object* null, align 8
@us_per_ms = internal global %struct._object* null, align 8
@us_per_second = internal global %struct._object* null, align 8
@us_per_minute = internal global %struct._object* null, align 8
@seconds_per_day = internal global %struct._object* null, align 8
@us_per_hour = internal global %struct._object* null, align 8
@us_per_day = internal global %struct._object* null, align 8
@us_per_week = internal global %struct._object* null, align 8
@.str.14 = private unnamed_addr constant [10 x i8] c"_datetime\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"Fast implementation of the datetime type.\00", align 1
@module_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16
@.str.16 = private unnamed_addr constant [14 x i8] c"datetime.date\00", align 1
@date_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* @date_add, %struct._object* (%struct._object*, %struct._object*)* @date_subtract, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@date_doc = internal global [39 x i8] c"date(year, month, day) --> date object\00", align 16
@date_methods = internal global [15 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @date_fromtimestamp, i32 17, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.22, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @date_fromordinal, i32 17, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.24, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @date_today, i32 20, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.26, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_ctime to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, %struct._object*, %struct._object*)* @date_strftime to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, %struct._object*)* @date_format to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_timetuple to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.34, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_isocalendar to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.36, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_isoformat to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.37, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_isoweekday to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.39, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_toordinal to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.41, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*)* @date_weekday to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.43, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, %struct._object*, %struct._object*)* @date_replace to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.45, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, %struct._object*)* @date_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@date_getset = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, i8*)* @date_year to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, i8*)* @date_month to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, i8*)* @date_day to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.17 = private unnamed_addr constant [15 x i8] c"%s(%d, %d, %d)\00", align 1
@_Py_NotImplementedStruct = external global %struct._object, align 8
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.18 = private unnamed_addr constant [24 x i8] c"date value out of range\00", align 1
@_days_in_month = internal global [13 x i32] [i32 0, i32 31, i32 28, i32 31, i32 30, i32 31, i32 30, i32 31, i32 31, i32 30, i32 31, i32 30, i32 31], align 16
@_days_before_month = internal global [13 x i32] [i32 0, i32 0, i32 31, i32 59, i32 90, i32 120, i32 151, i32 181, i32 212, i32 243, i32 273, i32 304, i32 334], align 16
@PyId_isoformat = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), %struct._object* null }, align 8
@.str.19 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"isoformat\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.21 = private unnamed_addr constant [14 x i8] c"fromtimestamp\00", align 1
@.str.22 = private unnamed_addr constant [67 x i8] c"timestamp -> local date from a POSIX timestamp (like time.time()).\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"fromordinal\00", align 1
@.str.24 = private unnamed_addr constant [60 x i8] c"int -> date corresponding to a proleptic Gregorian ordinal.\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"today\00", align 1
@.str.26 = private unnamed_addr constant [78 x i8] c"Current date or datetime:  same as self.__class__.fromtimestamp(time.time()).\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Return ctime() style string.\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"format -> strftime() style string.\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"__format__\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"Formats self with strftime.\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"timetuple\00", align 1
@.str.34 = private unnamed_addr constant [53 x i8] c"Return time tuple, compatible with time.localtime().\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"isocalendar\00", align 1
@.str.36 = private unnamed_addr constant [64 x i8] c"Return a 3-tuple containing ISO year, week number, and weekday.\00", align 1
@.str.37 = private unnamed_addr constant [46 x i8] c"Return string in ISO 8601 format, YYYY-MM-DD.\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"isoweekday\00", align 1
@.str.39 = private unnamed_addr constant [80 x i8] c"Return the day of the week represented by the date.\0AMonday == 1 ... Sunday == 7\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"toordinal\00", align 1
@.str.41 = private unnamed_addr constant [67 x i8] c"Return proleptic Gregorian ordinal.  January 1 of year 1 is day 1.\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"weekday\00", align 1
@.str.43 = private unnamed_addr constant [80 x i8] c"Return the day of the week represented by the date.\0AMonday == 0 ... Sunday == 6\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.45 = private unnamed_addr constant [39 x i8] c"Return date with new specified fields.\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@.str.47 = private unnamed_addr constant [29 x i8] c"__reduce__() -> (cls, state)\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"O:fromtimestamp\00", align 1
@PyExc_OSError = external global %struct._object*, align 8
@.str.49 = private unnamed_addr constant [4 x i8] c"iii\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"i:fromordinal\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.51 = private unnamed_addr constant [21 x i8] c"ordinal must be >= 1\00", align 1
@date_today.PyId_fromtimestamp = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0), %struct._object* null }, align 8
@.str.52 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@time_time.PyId_time = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), %struct._object* null }, align 8
@format_ctime.DayNames = internal global [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i32 0, i32 0)], align 16
@.str.53 = private unnamed_addr constant [4 x i8] c"Mon\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"Tue\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"Wed\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"Thu\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"Fri\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"Sat\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"Sun\00", align 1
@format_ctime.MonthNames = internal global [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)], align 16
@.str.60 = private unnamed_addr constant [4 x i8] c"Jan\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"Feb\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"Mar\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"Apr\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"May\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"Jun\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"Jul\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"Aug\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"Sep\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"Oct\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"Nov\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"Dec\00", align 1
@.str.72 = private unnamed_addr constant [30 x i8] c"%s %s %2d %02d:%02d:%02d %04d\00", align 1
@date_strftime.PyId_timetuple = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), %struct._object* null }, align 8
@date_strftime.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"U:strftime\00", align 1
@.str.75 = private unnamed_addr constant [32 x i8] c"strftime format ends with raw %\00", align 1
@.str.76 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PyId_strftime = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), %struct._object* null }, align 8
@.str.77 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"%c%02d%s%02d\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"utcoffset\00", align 1
@.str.80 = private unnamed_addr constant [66 x i8] c"offset must be a timedelta representing a whole number of minutes\00", align 1
@.str.81 = private unnamed_addr constant [90 x i8] c"offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.82 = private unnamed_addr constant [56 x i8] c"tzinfo.%s() must return None or timedelta, not '%.200s'\00", align 1
@make_Zreplacement.PyId_replace = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), %struct._object* null }, align 8
@.str.83 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"%%\00", align 1
@.str.86 = private unnamed_addr constant [41 x i8] c"tzname.replace() did not return a string\00", align 1
@call_tzname.PyId_tzname = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* null }, align 8
@.str.87 = private unnamed_addr constant [7 x i8] c"tzname\00", align 1
@.str.88 = private unnamed_addr constant [55 x i8] c"tzinfo.tzname() must return None or a string, not '%s'\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"%06d\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"U:__format__\00", align 1
@build_struct_time.PyId_struct_time = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i32 0, i32 0), %struct._object* null }, align 8
@.str.91 = private unnamed_addr constant [12 x i8] c"struct_time\00", align 1
@.str.92 = private unnamed_addr constant [14 x i8] c"((iiiiiiiii))\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"%04d-%02d-%02d\00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"|iii:replace\00", align 1
@date_kws = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i8* null], align 16
@.str.95 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"(ON)\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"(N)\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"year is out of range\00", align 1
@.str.101 = private unnamed_addr constant [23 x i8] c"month must be in 1..12\00", align 1
@.str.102 = private unnamed_addr constant [30 x i8] c"day is out of range for month\00", align 1
@.str.103 = private unnamed_addr constant [18 x i8] c"datetime.datetime\00", align 1
@datetime_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* @datetime_add, %struct._object* (%struct._object*, %struct._object*)* @datetime_subtract, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@datetime_doc = internal global [223 x i8] c"datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])\0A\0AThe year, month and day arguments are required. tzinfo may be None, or an\0Ainstance of a tzinfo subclass. The remaining arguments may be ints.\0A\00", align 16
@datetime_methods = internal global [21 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @datetime_datetime_now to %struct._object* (%struct._object*, %struct._object*)*), i32 19, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @datetime_datetime_now__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @datetime_utcnow, i32 20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.115, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @datetime_fromtimestamp to %struct._object* (%struct._object*, %struct._object*)*), i32 19, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.116, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.117, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @datetime_utcfromtimestamp, i32 17, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.118, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @datetime_strptime, i32 17, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.120, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.121, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @datetime_combine to %struct._object* (%struct._object*, %struct._object*)*), i32 19, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.122, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_getdate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.123, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_gettime to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.124, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_gettimetz to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.126, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_ctime to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_timetuple to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.34, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.127, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_timestamp to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.128, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.129, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*)* @datetime_utctimetuple to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.130, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, %struct._object*, %struct._object*)* @datetime_isoformat to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.131, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @datetime_utcoffset, i32 4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.132, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @datetime_tzname, i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.133, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @datetime_dst, i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.135, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, %struct._object*, %struct._object*)* @datetime_replace to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.136, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.137, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct.PyDateTime_DateTime* (%struct.PyDateTime_DateTime*, %struct._object*, %struct._object*)* @datetime_astimezone to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.138, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, %struct._object*)* @datetime_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@datetime_getset = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_hour to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_minute to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_second to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_microsecond to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_tzinfo to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.104 = private unnamed_addr constant [31 x i8] c"%s(%d, %d, %d, %d, %d, %d, %d)\00", align 1
@.str.105 = private unnamed_addr constant [27 x i8] c"%s(%d, %d, %d, %d, %d, %d)\00", align 1
@.str.106 = private unnamed_addr constant [23 x i8] c"%s(%d, %d, %d, %d, %d)\00", align 1
@.str.107 = private unnamed_addr constant [15 x i8] c"%U, tzinfo=%R)\00", align 1
@.str.108 = private unnamed_addr constant [55 x i8] c"can't subtract offset-naive and offset-aware datetimes\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"(s)\00", align 1
@.str.110 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.111 = private unnamed_addr constant [54 x i8] c"can't compare offset-naive and offset-aware datetimes\00", align 1
@.str.112 = private unnamed_addr constant [23 x i8] c"can't compare %s to %s\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@datetime_datetime_now__doc__ = internal global [166 x i8] c"now($type, /, tz=None)\0A--\0A\0AReturns new datetime object representing current time local to tz.\0A\0A  tz\0A    Timezone object.\0A\0AIf no tz is specified, uses local timezone.\00", align 16
@.str.114 = private unnamed_addr constant [7 x i8] c"utcnow\00", align 1
@.str.115 = private unnamed_addr constant [53 x i8] c"Return a new datetime representing UTC day and time.\00", align 1
@.str.116 = private unnamed_addr constant [57 x i8] c"timestamp[, tz] -> tz's local time from POSIX timestamp.\00", align 1
@.str.117 = private unnamed_addr constant [17 x i8] c"utcfromtimestamp\00", align 1
@.str.118 = private unnamed_addr constant [69 x i8] c"timestamp -> UTC datetime from a POSIX timestamp (like time.time()).\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"strptime\00", align 1
@.str.120 = private unnamed_addr constant [76 x i8] c"string, format -> new datetime parsed from a string (like time.strptime()).\00", align 1
@.str.121 = private unnamed_addr constant [8 x i8] c"combine\00", align 1
@.str.122 = private unnamed_addr constant [54 x i8] c"date, time -> datetime with same date and time fields\00", align 1
@.str.123 = private unnamed_addr constant [50 x i8] c"Return date object with same year, month and day.\00", align 1
@.str.124 = private unnamed_addr constant [56 x i8] c"Return time object with same time but with tzinfo=None.\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"timetz\00", align 1
@.str.126 = private unnamed_addr constant [46 x i8] c"Return time object with same time and tzinfo.\00", align 1
@.str.127 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 1
@.str.128 = private unnamed_addr constant [33 x i8] c"Return POSIX timestamp as float.\00", align 1
@.str.129 = private unnamed_addr constant [13 x i8] c"utctimetuple\00", align 1
@.str.130 = private unnamed_addr constant [57 x i8] c"Return UTC time tuple, compatible with time.localtime().\00", align 1
@.str.131 = private unnamed_addr constant [144 x i8] c"[sep] -> string in ISO 8601 format, YYYY-MM-DDTHH:MM:SS[.mmmmmm][+HH:MM].\0A\0Asep is used to separate the year from the time, and defaults to 'T'.\00", align 1
@.str.132 = private unnamed_addr constant [36 x i8] c"Return self.tzinfo.utcoffset(self).\00", align 1
@.str.133 = private unnamed_addr constant [33 x i8] c"Return self.tzinfo.tzname(self).\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"dst\00", align 1
@.str.135 = private unnamed_addr constant [30 x i8] c"Return self.tzinfo.dst(self).\00", align 1
@.str.136 = private unnamed_addr constant [43 x i8] c"Return datetime with new specified fields.\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"astimezone\00", align 1
@.str.138 = private unnamed_addr constant [48 x i8] c"tz -> convert to local time in new timezone tz\0A\00", align 1
@datetime_datetime_now._keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.139, i32 0, i32 0), i8* null], align 16
@.str.139 = private unnamed_addr constant [3 x i8] c"tz\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"|O:now\00", align 1
@PyId_fromutc = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), %struct._object* null }, align 8
@.str.141 = private unnamed_addr constant [68 x i8] c"tzinfo argument must be None or of a tzinfo subclass, not type '%s'\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"iiiiiiiO\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"fromutc\00", align 1
@datetime_fromtimestamp.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.139, i32 0, i32 0), i8* null], align 16
@.str.144 = private unnamed_addr constant [18 x i8] c"O|O:fromtimestamp\00", align 1
@.str.145 = private unnamed_addr constant [19 x i8] c"O:utcfromtimestamp\00", align 1
@datetime_strptime.module = internal global %struct._object* null, align 8
@datetime_strptime.PyId__strptime_datetime = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.146, i32 0, i32 0), %struct._object* null }, align 8
@.str.146 = private unnamed_addr constant [19 x i8] c"_strptime_datetime\00", align 1
@.str.147 = private unnamed_addr constant [12 x i8] c"UU:strptime\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"_strptime\00", align 1
@.str.149 = private unnamed_addr constant [4 x i8] c"OOO\00", align 1
@datetime_combine.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* null], align 16
@.str.150 = private unnamed_addr constant [13 x i8] c"O!O!:combine\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"timestamp out of range\00", align 1
@datetime_isoformat.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i8* null], align 16
@.str.152 = private unnamed_addr constant [4 x i8] c"sep\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"|C:isoformat\00", align 1
@.str.154 = private unnamed_addr constant [36 x i8] c"%04d-%02d-%02d%c%02d:%02d:%02d.%06d\00", align 1
@.str.155 = private unnamed_addr constant [31 x i8] c"%04d-%02d-%02d%c%02d:%02d:%02d\00", align 1
@.str.156 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.157 = private unnamed_addr constant [18 x i8] c"|iiiiiiiO:replace\00", align 1
@datetime_kws = internal global [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* null], align 16
@.str.158 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.160 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.161 = private unnamed_addr constant [12 x i8] c"microsecond\00", align 1
@datetime_astimezone.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.139, i32 0, i32 0), i8* null], align 16
@.str.162 = private unnamed_addr constant [14 x i8] c"|O:astimezone\00", align 1
@.str.163 = private unnamed_addr constant [51 x i8] c"astimezone() cannot be applied to a naive datetime\00", align 1
@.str.164 = private unnamed_addr constant [16 x i8] c"surrogateescape\00", align 1
@.str.165 = private unnamed_addr constant [75 x i8] c"offset must be a timedelta representing a whole number of minutes, not %R.\00", align 1
@.str.166 = private unnamed_addr constant [98 x i8] c"offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24), not %R.\00", align 1
@.str.167 = private unnamed_addr constant [21 x i8] c"bad tzinfo state arg\00", align 1
@.str.168 = private unnamed_addr constant [10 x i8] c"iii|iiiiO\00", align 1
@.str.169 = private unnamed_addr constant [22 x i8] c"hour must be in 0..23\00", align 1
@.str.170 = private unnamed_addr constant [24 x i8] c"minute must be in 0..59\00", align 1
@.str.171 = private unnamed_addr constant [24 x i8] c"second must be in 0..59\00", align 1
@.str.172 = private unnamed_addr constant [33 x i8] c"microsecond must be in 0..999999\00", align 1
@.str.173 = private unnamed_addr constant [19 x i8] c"datetime.timedelta\00", align 1
@delta_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* @delta_add, %struct._object* (%struct._object*, %struct._object*)* @delta_subtract, %struct._object* (%struct._object*, %struct._object*)* @delta_multiply, %struct._object* (%struct._object*, %struct._object*)* @delta_remainder, %struct._object* (%struct._object*, %struct._object*)* @delta_divmod, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Delta*)* @delta_negative to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Delta*)* @delta_positive to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Delta*)* @delta_abs to %struct._object* (%struct._object*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyDateTime_Delta*)* @delta_bool to i32 (%struct._object*)*), %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @delta_divide, %struct._object* (%struct._object*, %struct._object*)* @delta_truedivide, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@delta_doc = internal global [40 x i8] c"Difference between two datetime values.\00", align 16
@delta_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.183, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @delta_total_seconds to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.184, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Delta*)* @delta_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@delta_members = internal global [4 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i32 1, i64 24, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.187, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.188, i32 0, i32 0), i32 1, i64 28, i32 1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.189, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.190, i32 0, i32 0), i32 1, i64 32, i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.191, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.174 = private unnamed_addr constant [11 x i8] c"%s(%d, %d)\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c"%s(%d)\00", align 1
@PyFloat_Type = external global %struct._typeobject, align 8
@.str.176 = private unnamed_addr constant [44 x i8] c"normalized days too large to fit in a C int\00", align 1
@PyId_as_integer_ratio = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.177, i32 0, i32 0), %struct._object* null }, align 8
@.str.177 = private unnamed_addr constant [17 x i8] c"as_integer_ratio\00", align 1
@.str.178 = private unnamed_addr constant [28 x i8] c"%d day%s, %d:%02d:%02d.%06d\00", align 1
@.str.179 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.180 = private unnamed_addr constant [23 x i8] c"%d day%s, %d:%02d:%02d\00", align 1
@.str.181 = private unnamed_addr constant [18 x i8] c"%d:%02d:%02d.%06d\00", align 1
@.str.182 = private unnamed_addr constant [13 x i8] c"%d:%02d:%02d\00", align 1
@.str.183 = private unnamed_addr constant [14 x i8] c"total_seconds\00", align 1
@.str.184 = private unnamed_addr constant [31 x i8] c"Total seconds in the duration.\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.186 = private unnamed_addr constant [5 x i8] c"days\00", align 1
@.str.187 = private unnamed_addr constant [16 x i8] c"Number of days.\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"seconds\00", align 1
@.str.189 = private unnamed_addr constant [46 x i8] c"Number of seconds (>= 0 and less than 1 day).\00", align 1
@.str.190 = private unnamed_addr constant [13 x i8] c"microseconds\00", align 1
@.str.191 = private unnamed_addr constant [54 x i8] c"Number of microseconds (>= 0 and less than 1 second).\00", align 1
@delta_new.keywords = internal global [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0), i8* null], align 16
@.str.192 = private unnamed_addr constant [13 x i8] c"milliseconds\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"minutes\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"hours\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"weeks\00", align 1
@.str.196 = private unnamed_addr constant [17 x i8] c"|OOOOOOO:__new__\00", align 1
@.str.197 = private unnamed_addr constant [48 x i8] c"unsupported type for timedelta %s component: %s\00", align 1
@.str.198 = private unnamed_addr constant [14 x i8] c"datetime.time\00", align 1
@time_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, i32 (%struct._object*)* @time_bool, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@time_doc = internal global [200 x i8] c"time([hour[, minute[, second[, microsecond[, tzinfo]]]]]) --> a time object\0A\0AAll arguments are optional. tzinfo may be None, or an instance of\0Aa tzinfo subclass. The remaining arguments may be ints.\0A\00", align 16
@time_methods = internal global [9 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, %struct._object*)* @time_isoformat to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.201, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, %struct._object*, %struct._object*)* @time_strftime to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Date*, %struct._object*)* @date_format to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @time_utcoffset, i32 4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.132, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, %struct._object*)* @time_tzname to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.133, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @time_dst, i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.135, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, %struct._object*, %struct._object*)* @time_replace to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.202, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, %struct._object*)* @time_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@time_getset = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, i8*)* @time_hour to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, i8*)* @time_minute to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, i8*)* @py_time_second to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, i8*)* @time_microsecond to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyDateTime_Time*, i8*)* @time_tzinfo to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.199 = private unnamed_addr constant [19 x i8] c"%s(%d, %d, %d, %d)\00", align 1
@.str.200 = private unnamed_addr constant [50 x i8] c"can't compare offset-naive and offset-aware times\00", align 1
@.str.201 = private unnamed_addr constant [61 x i8] c"Return string in ISO 8601 format, HH:MM:SS[.mmmmmm][+HH:MM].\00", align 1
@.str.202 = private unnamed_addr constant [39 x i8] c"Return time with new specified fields.\00", align 1
@.str.203 = private unnamed_addr constant [20 x i8] c"%02d:%02d:%02d.%06d\00", align 1
@.str.204 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@time_strftime.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* null], align 16
@.str.205 = private unnamed_addr constant [10 x i8] c"iiiiiiiii\00", align 1
@.str.206 = private unnamed_addr constant [15 x i8] c"|iiiiO:replace\00", align 1
@time_kws = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* null], align 16
@.str.207 = private unnamed_addr constant [6 x i8] c"iiiiO\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"|iiiiO\00", align 1
@.str.209 = private unnamed_addr constant [16 x i8] c"datetime.tzinfo\00", align 1
@tzinfo_doc = internal global [48 x i8] c"Abstract base class for time zone info objects.\00", align 16
@tzinfo_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_tzname to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.210, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_utcoffset to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.211, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_dst to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.212, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_fromutc to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.213, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @tzinfo_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.214, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.210 = private unnamed_addr constant [38 x i8] c"datetime -> string name of time zone.\00", align 1
@.str.211 = private unnamed_addr constant [86 x i8] c"datetime -> timedelta showing offset from UTC, negative values indicating West of UTC\00", align 1
@.str.212 = private unnamed_addr constant [47 x i8] c"datetime -> DST offset in minutes east of UTC.\00", align 1
@.str.213 = private unnamed_addr constant [43 x i8] c"datetime in UTC -> datetime in local time.\00", align 1
@.str.214 = private unnamed_addr constant [16 x i8] c"-> (cls, state)\00", align 1
@PyExc_NotImplementedError = external global %struct._object*, align 8
@.str.215 = private unnamed_addr constant [38 x i8] c"a tzinfo subclass must implement %s()\00", align 1
@.str.216 = private unnamed_addr constant [37 x i8] c"fromutc: argument must be a datetime\00", align 1
@.str.217 = private unnamed_addr constant [31 x i8] c"fromutc: dt.tzinfo is not self\00", align 1
@.str.218 = private unnamed_addr constant [46 x i8] c"fromutc: non-None utcoffset() result required\00", align 1
@.str.219 = private unnamed_addr constant [40 x i8] c"fromutc: non-None dst() result required\00", align 1
@.str.220 = private unnamed_addr constant [59 x i8] c"fromutc: tz.dst() gaveinconsistent results; cannot convert\00", align 1
@tzinfo_reduce.PyId___getinitargs__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.221, i32 0, i32 0), %struct._object* null }, align 8
@.str.221 = private unnamed_addr constant [16 x i8] c"__getinitargs__\00", align 1
@tzinfo_reduce.PyId___getstate__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.222, i32 0, i32 0), %struct._object* null }, align 8
@.str.222 = private unnamed_addr constant [13 x i8] c"__getstate__\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"(ONN)\00", align 1
@.str.224 = private unnamed_addr constant [18 x i8] c"datetime.timezone\00", align 1
@timezone_doc = internal global [48 x i8] c"Fixed offset from UTC implementation of tzinfo.\00", align 16
@timezone_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*, %struct._object*)* @timezone_tzname to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.229, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*, %struct._object*)* @timezone_utcoffset to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.230, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @timezone_dst, i32 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.231, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*, %struct.PyDateTime_DateTime*)* @timezone_fromutc to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.213, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.221, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyDateTime_TimeZone*)* @timezone_getinitargs to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.232, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.225 = private unnamed_addr constant [7 x i8] c"%s.utc\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"%s(%R)\00", align 1
@.str.227 = private unnamed_addr constant [11 x i8] c"%s(%R, %R)\00", align 1
@.str.228 = private unnamed_addr constant [15 x i8] c"UTC%c%02d:%02d\00", align 1
@.str.229 = private unnamed_addr constant [111 x i8] c"If name is specified when timezone is created, returns the name.  Otherwise returns offset as 'UTC(+|-)HH:MM'.\00", align 1
@.str.230 = private unnamed_addr constant [21 x i8] c"Return fixed offset.\00", align 1
@.str.231 = private unnamed_addr constant [13 x i8] c"Return None.\00", align 1
@.str.232 = private unnamed_addr constant [15 x i8] c"pickle support\00", align 1
@.str.233 = private unnamed_addr constant [64 x i8] c"%s(dt) argument must be a datetime instance or None, not %.200s\00", align 1
@.str.234 = private unnamed_addr constant [4 x i8] c"(O)\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"(OO)\00", align 1
@.str.236 = private unnamed_addr constant [15 x i8] c"O!|O!:timezone\00", align 1
@timezone_kws = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.238, i32 0, i32 0), i8* null], align 16
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.237 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.238 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.239 = private unnamed_addr constant [35 x i8] c"days=%d; must have magnitude <= %d\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__datetime() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %d = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %delta = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp99 = alloca %struct._object*, align 8
  %_py_decref_tmp118 = alloca %struct._object*, align 8
  %_py_decref_tmp137 = alloca %struct._object*, align 8
  %_py_decref_tmp156 = alloca %struct._object*, align 8
  %_py_decref_tmp175 = alloca %struct._object*, align 8
  %_py_decref_tmp194 = alloca %struct._object*, align 8
  %_py_decref_tmp213 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %_py_decref_tmp249 = alloca %struct._object*, align 8
  %_py_decref_tmp272 = alloca %struct._object*, align 8
  %_py_decref_tmp290 = alloca %struct._object*, align 8
  %_py_decref_tmp307 = alloca %struct._object*, align 8
  %_py_decref_tmp325 = alloca %struct._object*, align 8
  %0 = bitcast %struct._object** %m to i8*, !dbg !2552
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2552
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !461, metadata !2553), !dbg !2554
  %1 = bitcast %struct._object** %d to i8*, !dbg !2555
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2555
  call void @llvm.dbg.declare(metadata %struct._object** %d, metadata !462, metadata !2553), !dbg !2556
  %2 = bitcast %struct._object** %x to i8*, !dbg !2557
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2557
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !463, metadata !2553), !dbg !2558
  %3 = bitcast %struct._object** %delta to i8*, !dbg !2559
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2559
  call void @llvm.dbg.declare(metadata %struct._object** %delta, metadata !464, metadata !2553), !dbg !2560
  %call = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @datetimemodule, i32 1013), !dbg !2561
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !2562, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %m, align 8, !dbg !2567, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !2569
  br i1 %cmp, label %if.then, label %if.end, !dbg !2570

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2571
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2571

if.end:                                           ; preds = %entry
  %call1 = call i32 @PyType_Ready(%struct._typeobject* @PyDateTime_DateType), !dbg !2572
  %cmp2 = icmp slt i32 %call1, 0, !dbg !2574
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !2575

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !2576
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2576

if.end.4:                                         ; preds = %if.end
  %call5 = call i32 @PyType_Ready(%struct._typeobject* @PyDateTime_DateTimeType), !dbg !2577
  %cmp6 = icmp slt i32 %call5, 0, !dbg !2579
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !2580

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !2581
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2581

if.end.8:                                         ; preds = %if.end.4
  %call9 = call i32 @PyType_Ready(%struct._typeobject* @PyDateTime_DeltaType), !dbg !2582
  %cmp10 = icmp slt i32 %call9, 0, !dbg !2584
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !2585

if.then.11:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %retval, !dbg !2586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2586

if.end.12:                                        ; preds = %if.end.8
  %call13 = call i32 @PyType_Ready(%struct._typeobject* @PyDateTime_TimeType), !dbg !2587
  %cmp14 = icmp slt i32 %call13, 0, !dbg !2589
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !2590

if.then.15:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval, !dbg !2591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2591

if.end.16:                                        ; preds = %if.end.12
  %call17 = call i32 @PyType_Ready(%struct._typeobject* @PyDateTime_TZInfoType), !dbg !2592
  %cmp18 = icmp slt i32 %call17, 0, !dbg !2594
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !2595

if.then.19:                                       ; preds = %if.end.16
  store %struct._object* null, %struct._object** %retval, !dbg !2596
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2596

if.end.20:                                        ; preds = %if.end.16
  %call21 = call i32 @PyType_Ready(%struct._typeobject* @PyDateTime_TimeZoneType), !dbg !2597
  %cmp22 = icmp slt i32 %call21, 0, !dbg !2599
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !2600

if.then.23:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval, !dbg !2601
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2601

if.end.24:                                        ; preds = %if.end.20
  %5 = load %struct._object*, %struct._object** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DeltaType, i32 0, i32 31), align 8, !dbg !2602, !tbaa !2603
  store %struct._object* %5, %struct._object** %d, align 8, !dbg !2609, !tbaa !2563
  %call25 = call %struct._object* @new_delta_ex(i32 0, i32 0, i32 1, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !2610
  store %struct._object* %call25, %struct._object** %x, align 8, !dbg !2611, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %x, align 8, !dbg !2612, !tbaa !2563
  %cmp26 = icmp eq %struct._object* %6, null, !dbg !2614
  br i1 %cmp26, label %if.then.29, label %lor.lhs.false, !dbg !2615

lor.lhs.false:                                    ; preds = %if.end.24
  %7 = load %struct._object*, %struct._object** %d, align 8, !dbg !2616, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %x, align 8, !dbg !2618, !tbaa !2563
  %call27 = call i32 @PyDict_SetItemString(%struct._object* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct._object* %8), !dbg !2619
  %cmp28 = icmp slt i32 %call27, 0, !dbg !2620
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !2621

if.then.29:                                       ; preds = %lor.lhs.false, %if.end.24
  store %struct._object* null, %struct._object** %retval, !dbg !2622
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2622

if.end.30:                                        ; preds = %lor.lhs.false
  br label %do.body, !dbg !2623

do.body:                                          ; preds = %if.end.30
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2624
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !2624
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !465, metadata !2553), !dbg !2626
  %10 = load %struct._object*, %struct._object** %x, align 8, !dbg !2627, !tbaa !2563
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !2626, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2628, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !2630
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !2631, !tbaa !2632
  %dec = add i64 %12, -1, !dbg !2631
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2631, !tbaa !2632
  %cmp31 = icmp ne i64 %dec, 0, !dbg !2633
  br i1 %cmp31, label %if.then.32, label %if.else, !dbg !2634

if.then.32:                                       ; preds = %do.body
  br label %if.end.33, !dbg !2635

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2637, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !2639
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2639, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !2641
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2641, !tbaa !2642
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2643, !tbaa !2563
  call void %15(%struct._object* %16), !dbg !2644
  br label %if.end.33

if.end.33:                                        ; preds = %if.else, %if.then.32
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2645
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !2645
  br label %do.cond, !dbg !2647

do.cond:                                          ; preds = %if.end.33
  br label %do.end, !dbg !2648

do.end:                                           ; preds = %do.cond
  %call34 = call %struct._object* @new_delta_ex(i32 -999999999, i32 0, i32 0, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !2650
  store %struct._object* %call34, %struct._object** %x, align 8, !dbg !2651, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %x, align 8, !dbg !2652, !tbaa !2563
  %cmp35 = icmp eq %struct._object* %18, null, !dbg !2654
  br i1 %cmp35, label %if.then.39, label %lor.lhs.false.36, !dbg !2655

lor.lhs.false.36:                                 ; preds = %do.end
  %19 = load %struct._object*, %struct._object** %d, align 8, !dbg !2656, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %x, align 8, !dbg !2658, !tbaa !2563
  %call37 = call i32 @PyDict_SetItemString(%struct._object* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct._object* %20), !dbg !2659
  %cmp38 = icmp slt i32 %call37, 0, !dbg !2660
  br i1 %cmp38, label %if.then.39, label %if.end.40, !dbg !2661

if.then.39:                                       ; preds = %lor.lhs.false.36, %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !2662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2662

if.end.40:                                        ; preds = %lor.lhs.false.36
  br label %do.body.41, !dbg !2663

do.body.41:                                       ; preds = %if.end.40
  %21 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !2664
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !2664
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !467, metadata !2553), !dbg !2666
  %22 = load %struct._object*, %struct._object** %x, align 8, !dbg !2667, !tbaa !2563
  store %struct._object* %22, %struct._object** %_py_decref_tmp42, align 8, !dbg !2666, !tbaa !2563
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !2668, !tbaa !2563
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2670
  %24 = load i64, i64* %ob_refcnt43, align 8, !dbg !2671, !tbaa !2632
  %dec44 = add i64 %24, -1, !dbg !2671
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !2671, !tbaa !2632
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !2672
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !2673

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !2674

if.else.47:                                       ; preds = %do.body.41
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !2676, !tbaa !2563
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2678
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !2678, !tbaa !2640
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2679
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !2679, !tbaa !2642
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !2680, !tbaa !2563
  call void %27(%struct._object* %28), !dbg !2681
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %29 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !2682
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !2682
  br label %do.cond.51, !dbg !2683

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !2684

do.end.52:                                        ; preds = %do.cond.51
  %call53 = call %struct._object* @new_delta_ex(i32 999999999, i32 86399, i32 999999, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !2686
  store %struct._object* %call53, %struct._object** %x, align 8, !dbg !2687, !tbaa !2563
  %30 = load %struct._object*, %struct._object** %x, align 8, !dbg !2688, !tbaa !2563
  %cmp54 = icmp eq %struct._object* %30, null, !dbg !2690
  br i1 %cmp54, label %if.then.58, label %lor.lhs.false.55, !dbg !2691

lor.lhs.false.55:                                 ; preds = %do.end.52
  %31 = load %struct._object*, %struct._object** %d, align 8, !dbg !2692, !tbaa !2563
  %32 = load %struct._object*, %struct._object** %x, align 8, !dbg !2694, !tbaa !2563
  %call56 = call i32 @PyDict_SetItemString(%struct._object* %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), %struct._object* %32), !dbg !2695
  %cmp57 = icmp slt i32 %call56, 0, !dbg !2696
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !2697

if.then.58:                                       ; preds = %lor.lhs.false.55, %do.end.52
  store %struct._object* null, %struct._object** %retval, !dbg !2698
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2698

if.end.59:                                        ; preds = %lor.lhs.false.55
  br label %do.body.60, !dbg !2699

do.body.60:                                       ; preds = %if.end.59
  %33 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !2700
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !2700
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp61, metadata !469, metadata !2553), !dbg !2702
  %34 = load %struct._object*, %struct._object** %x, align 8, !dbg !2703, !tbaa !2563
  store %struct._object* %34, %struct._object** %_py_decref_tmp61, align 8, !dbg !2702, !tbaa !2563
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !2704, !tbaa !2563
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !2706
  %36 = load i64, i64* %ob_refcnt62, align 8, !dbg !2707, !tbaa !2632
  %dec63 = add i64 %36, -1, !dbg !2707
  store i64 %dec63, i64* %ob_refcnt62, align 8, !dbg !2707, !tbaa !2632
  %cmp64 = icmp ne i64 %dec63, 0, !dbg !2708
  br i1 %cmp64, label %if.then.65, label %if.else.66, !dbg !2709

if.then.65:                                       ; preds = %do.body.60
  br label %if.end.69, !dbg !2710

if.else.66:                                       ; preds = %do.body.60
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !2712, !tbaa !2563
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !2714
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !2714, !tbaa !2640
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !2715
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !2715, !tbaa !2642
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !2716, !tbaa !2563
  call void %39(%struct._object* %40), !dbg !2717
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %41 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !2718
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !2718
  br label %do.cond.70, !dbg !2719

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !2720

do.end.71:                                        ; preds = %do.cond.70
  %42 = load %struct._object*, %struct._object** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateType, i32 0, i32 31), align 8, !dbg !2722, !tbaa !2603
  store %struct._object* %42, %struct._object** %d, align 8, !dbg !2723, !tbaa !2563
  %call72 = call %struct._object* @new_date_ex(i32 1, i32 1, i32 1, %struct._typeobject* @PyDateTime_DateType), !dbg !2724
  store %struct._object* %call72, %struct._object** %x, align 8, !dbg !2725, !tbaa !2563
  %43 = load %struct._object*, %struct._object** %x, align 8, !dbg !2726, !tbaa !2563
  %cmp73 = icmp eq %struct._object* %43, null, !dbg !2728
  br i1 %cmp73, label %if.then.77, label %lor.lhs.false.74, !dbg !2729

lor.lhs.false.74:                                 ; preds = %do.end.71
  %44 = load %struct._object*, %struct._object** %d, align 8, !dbg !2730, !tbaa !2563
  %45 = load %struct._object*, %struct._object** %x, align 8, !dbg !2732, !tbaa !2563
  %call75 = call i32 @PyDict_SetItemString(%struct._object* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct._object* %45), !dbg !2733
  %cmp76 = icmp slt i32 %call75, 0, !dbg !2734
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !2735

if.then.77:                                       ; preds = %lor.lhs.false.74, %do.end.71
  store %struct._object* null, %struct._object** %retval, !dbg !2736
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2736

if.end.78:                                        ; preds = %lor.lhs.false.74
  br label %do.body.79, !dbg !2737

do.body.79:                                       ; preds = %if.end.78
  %46 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !2738
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !2738
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp80, metadata !471, metadata !2553), !dbg !2740
  %47 = load %struct._object*, %struct._object** %x, align 8, !dbg !2741, !tbaa !2563
  store %struct._object* %47, %struct._object** %_py_decref_tmp80, align 8, !dbg !2740, !tbaa !2563
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !2742, !tbaa !2563
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !2744
  %49 = load i64, i64* %ob_refcnt81, align 8, !dbg !2745, !tbaa !2632
  %dec82 = add i64 %49, -1, !dbg !2745
  store i64 %dec82, i64* %ob_refcnt81, align 8, !dbg !2745, !tbaa !2632
  %cmp83 = icmp ne i64 %dec82, 0, !dbg !2746
  br i1 %cmp83, label %if.then.84, label %if.else.85, !dbg !2747

if.then.84:                                       ; preds = %do.body.79
  br label %if.end.88, !dbg !2748

if.else.85:                                       ; preds = %do.body.79
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !2750, !tbaa !2563
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !2752
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !2752, !tbaa !2640
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4, !dbg !2753
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !2753, !tbaa !2642
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !2754, !tbaa !2563
  call void %52(%struct._object* %53), !dbg !2755
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %54 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !2756
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !2756
  br label %do.cond.89, !dbg !2757

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !2758

do.end.90:                                        ; preds = %do.cond.89
  %call91 = call %struct._object* @new_date_ex(i32 9999, i32 12, i32 31, %struct._typeobject* @PyDateTime_DateType), !dbg !2760
  store %struct._object* %call91, %struct._object** %x, align 8, !dbg !2761, !tbaa !2563
  %55 = load %struct._object*, %struct._object** %x, align 8, !dbg !2762, !tbaa !2563
  %cmp92 = icmp eq %struct._object* %55, null, !dbg !2764
  br i1 %cmp92, label %if.then.96, label %lor.lhs.false.93, !dbg !2765

lor.lhs.false.93:                                 ; preds = %do.end.90
  %56 = load %struct._object*, %struct._object** %d, align 8, !dbg !2766, !tbaa !2563
  %57 = load %struct._object*, %struct._object** %x, align 8, !dbg !2768, !tbaa !2563
  %call94 = call i32 @PyDict_SetItemString(%struct._object* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), %struct._object* %57), !dbg !2769
  %cmp95 = icmp slt i32 %call94, 0, !dbg !2770
  br i1 %cmp95, label %if.then.96, label %if.end.97, !dbg !2771

if.then.96:                                       ; preds = %lor.lhs.false.93, %do.end.90
  store %struct._object* null, %struct._object** %retval, !dbg !2772
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2772

if.end.97:                                        ; preds = %lor.lhs.false.93
  br label %do.body.98, !dbg !2773

do.body.98:                                       ; preds = %if.end.97
  %58 = bitcast %struct._object** %_py_decref_tmp99 to i8*, !dbg !2774
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !2774
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp99, metadata !473, metadata !2553), !dbg !2776
  %59 = load %struct._object*, %struct._object** %x, align 8, !dbg !2777, !tbaa !2563
  store %struct._object* %59, %struct._object** %_py_decref_tmp99, align 8, !dbg !2776, !tbaa !2563
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !2778, !tbaa !2563
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !2780
  %61 = load i64, i64* %ob_refcnt100, align 8, !dbg !2781, !tbaa !2632
  %dec101 = add i64 %61, -1, !dbg !2781
  store i64 %dec101, i64* %ob_refcnt100, align 8, !dbg !2781, !tbaa !2632
  %cmp102 = icmp ne i64 %dec101, 0, !dbg !2782
  br i1 %cmp102, label %if.then.103, label %if.else.104, !dbg !2783

if.then.103:                                      ; preds = %do.body.98
  br label %if.end.107, !dbg !2784

if.else.104:                                      ; preds = %do.body.98
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !2786, !tbaa !2563
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !2788
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !2788, !tbaa !2640
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !2789
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8, !dbg !2789, !tbaa !2642
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !2790, !tbaa !2563
  call void %64(%struct._object* %65), !dbg !2791
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  %66 = bitcast %struct._object** %_py_decref_tmp99 to i8*, !dbg !2792
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !2792
  br label %do.cond.108, !dbg !2793

do.cond.108:                                      ; preds = %if.end.107
  br label %do.end.109, !dbg !2794

do.end.109:                                       ; preds = %do.cond.108
  %call110 = call %struct._object* @new_delta_ex(i32 1, i32 0, i32 0, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !2796
  store %struct._object* %call110, %struct._object** %x, align 8, !dbg !2797, !tbaa !2563
  %67 = load %struct._object*, %struct._object** %x, align 8, !dbg !2798, !tbaa !2563
  %cmp111 = icmp eq %struct._object* %67, null, !dbg !2800
  br i1 %cmp111, label %if.then.115, label %lor.lhs.false.112, !dbg !2801

lor.lhs.false.112:                                ; preds = %do.end.109
  %68 = load %struct._object*, %struct._object** %d, align 8, !dbg !2802, !tbaa !2563
  %69 = load %struct._object*, %struct._object** %x, align 8, !dbg !2804, !tbaa !2563
  %call113 = call i32 @PyDict_SetItemString(%struct._object* %68, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct._object* %69), !dbg !2805
  %cmp114 = icmp slt i32 %call113, 0, !dbg !2806
  br i1 %cmp114, label %if.then.115, label %if.end.116, !dbg !2807

if.then.115:                                      ; preds = %lor.lhs.false.112, %do.end.109
  store %struct._object* null, %struct._object** %retval, !dbg !2808
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2808

if.end.116:                                       ; preds = %lor.lhs.false.112
  br label %do.body.117, !dbg !2809

do.body.117:                                      ; preds = %if.end.116
  %70 = bitcast %struct._object** %_py_decref_tmp118 to i8*, !dbg !2810
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !2810
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp118, metadata !475, metadata !2553), !dbg !2812
  %71 = load %struct._object*, %struct._object** %x, align 8, !dbg !2813, !tbaa !2563
  store %struct._object* %71, %struct._object** %_py_decref_tmp118, align 8, !dbg !2812, !tbaa !2563
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp118, align 8, !dbg !2814, !tbaa !2563
  %ob_refcnt119 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !2816
  %73 = load i64, i64* %ob_refcnt119, align 8, !dbg !2817, !tbaa !2632
  %dec120 = add i64 %73, -1, !dbg !2817
  store i64 %dec120, i64* %ob_refcnt119, align 8, !dbg !2817, !tbaa !2632
  %cmp121 = icmp ne i64 %dec120, 0, !dbg !2818
  br i1 %cmp121, label %if.then.122, label %if.else.123, !dbg !2819

if.then.122:                                      ; preds = %do.body.117
  br label %if.end.126, !dbg !2820

if.else.123:                                      ; preds = %do.body.117
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp118, align 8, !dbg !2822, !tbaa !2563
  %ob_type124 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !2824
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type124, align 8, !dbg !2824, !tbaa !2640
  %tp_dealloc125 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !2825
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc125, align 8, !dbg !2825, !tbaa !2642
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp118, align 8, !dbg !2826, !tbaa !2563
  call void %76(%struct._object* %77), !dbg !2827
  br label %if.end.126

if.end.126:                                       ; preds = %if.else.123, %if.then.122
  %78 = bitcast %struct._object** %_py_decref_tmp118 to i8*, !dbg !2828
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !2828
  br label %do.cond.127, !dbg !2829

do.cond.127:                                      ; preds = %if.end.126
  br label %do.end.128, !dbg !2830

do.end.128:                                       ; preds = %do.cond.127
  %79 = load %struct._object*, %struct._object** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeType, i32 0, i32 31), align 8, !dbg !2832, !tbaa !2603
  store %struct._object* %79, %struct._object** %d, align 8, !dbg !2833, !tbaa !2563
  %call129 = call %struct._object* @new_time_ex(i32 0, i32 0, i32 0, i32 0, %struct._object* @_Py_NoneStruct, %struct._typeobject* @PyDateTime_TimeType), !dbg !2834
  store %struct._object* %call129, %struct._object** %x, align 8, !dbg !2835, !tbaa !2563
  %80 = load %struct._object*, %struct._object** %x, align 8, !dbg !2836, !tbaa !2563
  %cmp130 = icmp eq %struct._object* %80, null, !dbg !2838
  br i1 %cmp130, label %if.then.134, label %lor.lhs.false.131, !dbg !2839

lor.lhs.false.131:                                ; preds = %do.end.128
  %81 = load %struct._object*, %struct._object** %d, align 8, !dbg !2840, !tbaa !2563
  %82 = load %struct._object*, %struct._object** %x, align 8, !dbg !2842, !tbaa !2563
  %call132 = call i32 @PyDict_SetItemString(%struct._object* %81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct._object* %82), !dbg !2843
  %cmp133 = icmp slt i32 %call132, 0, !dbg !2844
  br i1 %cmp133, label %if.then.134, label %if.end.135, !dbg !2845

if.then.134:                                      ; preds = %lor.lhs.false.131, %do.end.128
  store %struct._object* null, %struct._object** %retval, !dbg !2846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2846

if.end.135:                                       ; preds = %lor.lhs.false.131
  br label %do.body.136, !dbg !2847

do.body.136:                                      ; preds = %if.end.135
  %83 = bitcast %struct._object** %_py_decref_tmp137 to i8*, !dbg !2848
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !2848
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp137, metadata !477, metadata !2553), !dbg !2850
  %84 = load %struct._object*, %struct._object** %x, align 8, !dbg !2851, !tbaa !2563
  store %struct._object* %84, %struct._object** %_py_decref_tmp137, align 8, !dbg !2850, !tbaa !2563
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp137, align 8, !dbg !2852, !tbaa !2563
  %ob_refcnt138 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !2854
  %86 = load i64, i64* %ob_refcnt138, align 8, !dbg !2855, !tbaa !2632
  %dec139 = add i64 %86, -1, !dbg !2855
  store i64 %dec139, i64* %ob_refcnt138, align 8, !dbg !2855, !tbaa !2632
  %cmp140 = icmp ne i64 %dec139, 0, !dbg !2856
  br i1 %cmp140, label %if.then.141, label %if.else.142, !dbg !2857

if.then.141:                                      ; preds = %do.body.136
  br label %if.end.145, !dbg !2858

if.else.142:                                      ; preds = %do.body.136
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp137, align 8, !dbg !2860, !tbaa !2563
  %ob_type143 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !2862
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type143, align 8, !dbg !2862, !tbaa !2640
  %tp_dealloc144 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !2863
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc144, align 8, !dbg !2863, !tbaa !2642
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp137, align 8, !dbg !2864, !tbaa !2563
  call void %89(%struct._object* %90), !dbg !2865
  br label %if.end.145

if.end.145:                                       ; preds = %if.else.142, %if.then.141
  %91 = bitcast %struct._object** %_py_decref_tmp137 to i8*, !dbg !2866
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !2866
  br label %do.cond.146, !dbg !2867

do.cond.146:                                      ; preds = %if.end.145
  br label %do.end.147, !dbg !2868

do.end.147:                                       ; preds = %do.cond.146
  %call148 = call %struct._object* @new_time_ex(i32 23, i32 59, i32 59, i32 999999, %struct._object* @_Py_NoneStruct, %struct._typeobject* @PyDateTime_TimeType), !dbg !2870
  store %struct._object* %call148, %struct._object** %x, align 8, !dbg !2871, !tbaa !2563
  %92 = load %struct._object*, %struct._object** %x, align 8, !dbg !2872, !tbaa !2563
  %cmp149 = icmp eq %struct._object* %92, null, !dbg !2874
  br i1 %cmp149, label %if.then.153, label %lor.lhs.false.150, !dbg !2875

lor.lhs.false.150:                                ; preds = %do.end.147
  %93 = load %struct._object*, %struct._object** %d, align 8, !dbg !2876, !tbaa !2563
  %94 = load %struct._object*, %struct._object** %x, align 8, !dbg !2878, !tbaa !2563
  %call151 = call i32 @PyDict_SetItemString(%struct._object* %93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), %struct._object* %94), !dbg !2879
  %cmp152 = icmp slt i32 %call151, 0, !dbg !2880
  br i1 %cmp152, label %if.then.153, label %if.end.154, !dbg !2881

if.then.153:                                      ; preds = %lor.lhs.false.150, %do.end.147
  store %struct._object* null, %struct._object** %retval, !dbg !2882
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2882

if.end.154:                                       ; preds = %lor.lhs.false.150
  br label %do.body.155, !dbg !2883

do.body.155:                                      ; preds = %if.end.154
  %95 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !2884
  call void @llvm.lifetime.start(i64 8, i8* %95) #1, !dbg !2884
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp156, metadata !479, metadata !2553), !dbg !2886
  %96 = load %struct._object*, %struct._object** %x, align 8, !dbg !2887, !tbaa !2563
  store %struct._object* %96, %struct._object** %_py_decref_tmp156, align 8, !dbg !2886, !tbaa !2563
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !2888, !tbaa !2563
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !2890
  %98 = load i64, i64* %ob_refcnt157, align 8, !dbg !2891, !tbaa !2632
  %dec158 = add i64 %98, -1, !dbg !2891
  store i64 %dec158, i64* %ob_refcnt157, align 8, !dbg !2891, !tbaa !2632
  %cmp159 = icmp ne i64 %dec158, 0, !dbg !2892
  br i1 %cmp159, label %if.then.160, label %if.else.161, !dbg !2893

if.then.160:                                      ; preds = %do.body.155
  br label %if.end.164, !dbg !2894

if.else.161:                                      ; preds = %do.body.155
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !2896, !tbaa !2563
  %ob_type162 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !2898
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type162, align 8, !dbg !2898, !tbaa !2640
  %tp_dealloc163 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !2899
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc163, align 8, !dbg !2899, !tbaa !2642
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !2900, !tbaa !2563
  call void %101(%struct._object* %102), !dbg !2901
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.161, %if.then.160
  %103 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !2902
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !2902
  br label %do.cond.165, !dbg !2903

do.cond.165:                                      ; preds = %if.end.164
  br label %do.end.166, !dbg !2904

do.end.166:                                       ; preds = %do.cond.165
  %call167 = call %struct._object* @new_delta_ex(i32 0, i32 0, i32 1, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !2906
  store %struct._object* %call167, %struct._object** %x, align 8, !dbg !2907, !tbaa !2563
  %104 = load %struct._object*, %struct._object** %x, align 8, !dbg !2908, !tbaa !2563
  %cmp168 = icmp eq %struct._object* %104, null, !dbg !2910
  br i1 %cmp168, label %if.then.172, label %lor.lhs.false.169, !dbg !2911

lor.lhs.false.169:                                ; preds = %do.end.166
  %105 = load %struct._object*, %struct._object** %d, align 8, !dbg !2912, !tbaa !2563
  %106 = load %struct._object*, %struct._object** %x, align 8, !dbg !2914, !tbaa !2563
  %call170 = call i32 @PyDict_SetItemString(%struct._object* %105, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct._object* %106), !dbg !2915
  %cmp171 = icmp slt i32 %call170, 0, !dbg !2916
  br i1 %cmp171, label %if.then.172, label %if.end.173, !dbg !2917

if.then.172:                                      ; preds = %lor.lhs.false.169, %do.end.166
  store %struct._object* null, %struct._object** %retval, !dbg !2918
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2918

if.end.173:                                       ; preds = %lor.lhs.false.169
  br label %do.body.174, !dbg !2919

do.body.174:                                      ; preds = %if.end.173
  %107 = bitcast %struct._object** %_py_decref_tmp175 to i8*, !dbg !2920
  call void @llvm.lifetime.start(i64 8, i8* %107) #1, !dbg !2920
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp175, metadata !481, metadata !2553), !dbg !2922
  %108 = load %struct._object*, %struct._object** %x, align 8, !dbg !2923, !tbaa !2563
  store %struct._object* %108, %struct._object** %_py_decref_tmp175, align 8, !dbg !2922, !tbaa !2563
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8, !dbg !2924, !tbaa !2563
  %ob_refcnt176 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 0, !dbg !2926
  %110 = load i64, i64* %ob_refcnt176, align 8, !dbg !2927, !tbaa !2632
  %dec177 = add i64 %110, -1, !dbg !2927
  store i64 %dec177, i64* %ob_refcnt176, align 8, !dbg !2927, !tbaa !2632
  %cmp178 = icmp ne i64 %dec177, 0, !dbg !2928
  br i1 %cmp178, label %if.then.179, label %if.else.180, !dbg !2929

if.then.179:                                      ; preds = %do.body.174
  br label %if.end.183, !dbg !2930

if.else.180:                                      ; preds = %do.body.174
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8, !dbg !2932, !tbaa !2563
  %ob_type181 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 1, !dbg !2934
  %112 = load %struct._typeobject*, %struct._typeobject** %ob_type181, align 8, !dbg !2934, !tbaa !2640
  %tp_dealloc182 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %112, i32 0, i32 4, !dbg !2935
  %113 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc182, align 8, !dbg !2935, !tbaa !2642
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8, !dbg !2936, !tbaa !2563
  call void %113(%struct._object* %114), !dbg !2937
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.180, %if.then.179
  %115 = bitcast %struct._object** %_py_decref_tmp175 to i8*, !dbg !2938
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !2938
  br label %do.cond.184, !dbg !2939

do.cond.184:                                      ; preds = %if.end.183
  br label %do.end.185, !dbg !2940

do.end.185:                                       ; preds = %do.cond.184
  %116 = load %struct._object*, %struct._object** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateTimeType, i32 0, i32 31), align 8, !dbg !2942, !tbaa !2603
  store %struct._object* %116, %struct._object** %d, align 8, !dbg !2943, !tbaa !2563
  %call186 = call %struct._object* @new_datetime_ex(i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, %struct._object* @_Py_NoneStruct, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !2944
  store %struct._object* %call186, %struct._object** %x, align 8, !dbg !2945, !tbaa !2563
  %117 = load %struct._object*, %struct._object** %x, align 8, !dbg !2946, !tbaa !2563
  %cmp187 = icmp eq %struct._object* %117, null, !dbg !2948
  br i1 %cmp187, label %if.then.191, label %lor.lhs.false.188, !dbg !2949

lor.lhs.false.188:                                ; preds = %do.end.185
  %118 = load %struct._object*, %struct._object** %d, align 8, !dbg !2950, !tbaa !2563
  %119 = load %struct._object*, %struct._object** %x, align 8, !dbg !2952, !tbaa !2563
  %call189 = call i32 @PyDict_SetItemString(%struct._object* %118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct._object* %119), !dbg !2953
  %cmp190 = icmp slt i32 %call189, 0, !dbg !2954
  br i1 %cmp190, label %if.then.191, label %if.end.192, !dbg !2955

if.then.191:                                      ; preds = %lor.lhs.false.188, %do.end.185
  store %struct._object* null, %struct._object** %retval, !dbg !2956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2956

if.end.192:                                       ; preds = %lor.lhs.false.188
  br label %do.body.193, !dbg !2957

do.body.193:                                      ; preds = %if.end.192
  %120 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !2958
  call void @llvm.lifetime.start(i64 8, i8* %120) #1, !dbg !2958
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp194, metadata !483, metadata !2553), !dbg !2960
  %121 = load %struct._object*, %struct._object** %x, align 8, !dbg !2961, !tbaa !2563
  store %struct._object* %121, %struct._object** %_py_decref_tmp194, align 8, !dbg !2960, !tbaa !2563
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !2962, !tbaa !2563
  %ob_refcnt195 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0, !dbg !2964
  %123 = load i64, i64* %ob_refcnt195, align 8, !dbg !2965, !tbaa !2632
  %dec196 = add i64 %123, -1, !dbg !2965
  store i64 %dec196, i64* %ob_refcnt195, align 8, !dbg !2965, !tbaa !2632
  %cmp197 = icmp ne i64 %dec196, 0, !dbg !2966
  br i1 %cmp197, label %if.then.198, label %if.else.199, !dbg !2967

if.then.198:                                      ; preds = %do.body.193
  br label %if.end.202, !dbg !2968

if.else.199:                                      ; preds = %do.body.193
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !2970, !tbaa !2563
  %ob_type200 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 1, !dbg !2972
  %125 = load %struct._typeobject*, %struct._typeobject** %ob_type200, align 8, !dbg !2972, !tbaa !2640
  %tp_dealloc201 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %125, i32 0, i32 4, !dbg !2973
  %126 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc201, align 8, !dbg !2973, !tbaa !2642
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !2974, !tbaa !2563
  call void %126(%struct._object* %127), !dbg !2975
  br label %if.end.202

if.end.202:                                       ; preds = %if.else.199, %if.then.198
  %128 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !2976
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !2976
  br label %do.cond.203, !dbg !2977

do.cond.203:                                      ; preds = %if.end.202
  br label %do.end.204, !dbg !2978

do.end.204:                                       ; preds = %do.cond.203
  %call205 = call %struct._object* @new_datetime_ex(i32 9999, i32 12, i32 31, i32 23, i32 59, i32 59, i32 999999, %struct._object* @_Py_NoneStruct, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !2980
  store %struct._object* %call205, %struct._object** %x, align 8, !dbg !2981, !tbaa !2563
  %129 = load %struct._object*, %struct._object** %x, align 8, !dbg !2982, !tbaa !2563
  %cmp206 = icmp eq %struct._object* %129, null, !dbg !2984
  br i1 %cmp206, label %if.then.210, label %lor.lhs.false.207, !dbg !2985

lor.lhs.false.207:                                ; preds = %do.end.204
  %130 = load %struct._object*, %struct._object** %d, align 8, !dbg !2986, !tbaa !2563
  %131 = load %struct._object*, %struct._object** %x, align 8, !dbg !2988, !tbaa !2563
  %call208 = call i32 @PyDict_SetItemString(%struct._object* %130, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), %struct._object* %131), !dbg !2989
  %cmp209 = icmp slt i32 %call208, 0, !dbg !2990
  br i1 %cmp209, label %if.then.210, label %if.end.211, !dbg !2991

if.then.210:                                      ; preds = %lor.lhs.false.207, %do.end.204
  store %struct._object* null, %struct._object** %retval, !dbg !2992
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2992

if.end.211:                                       ; preds = %lor.lhs.false.207
  br label %do.body.212, !dbg !2993

do.body.212:                                      ; preds = %if.end.211
  %132 = bitcast %struct._object** %_py_decref_tmp213 to i8*, !dbg !2994
  call void @llvm.lifetime.start(i64 8, i8* %132) #1, !dbg !2994
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp213, metadata !485, metadata !2553), !dbg !2996
  %133 = load %struct._object*, %struct._object** %x, align 8, !dbg !2997, !tbaa !2563
  store %struct._object* %133, %struct._object** %_py_decref_tmp213, align 8, !dbg !2996, !tbaa !2563
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp213, align 8, !dbg !2998, !tbaa !2563
  %ob_refcnt214 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 0, !dbg !3000
  %135 = load i64, i64* %ob_refcnt214, align 8, !dbg !3001, !tbaa !2632
  %dec215 = add i64 %135, -1, !dbg !3001
  store i64 %dec215, i64* %ob_refcnt214, align 8, !dbg !3001, !tbaa !2632
  %cmp216 = icmp ne i64 %dec215, 0, !dbg !3002
  br i1 %cmp216, label %if.then.217, label %if.else.218, !dbg !3003

if.then.217:                                      ; preds = %do.body.212
  br label %if.end.221, !dbg !3004

if.else.218:                                      ; preds = %do.body.212
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp213, align 8, !dbg !3006, !tbaa !2563
  %ob_type219 = getelementptr inbounds %struct._object, %struct._object* %136, i32 0, i32 1, !dbg !3008
  %137 = load %struct._typeobject*, %struct._typeobject** %ob_type219, align 8, !dbg !3008, !tbaa !2640
  %tp_dealloc220 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %137, i32 0, i32 4, !dbg !3009
  %138 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc220, align 8, !dbg !3009, !tbaa !2642
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp213, align 8, !dbg !3010, !tbaa !2563
  call void %138(%struct._object* %139), !dbg !3011
  br label %if.end.221

if.end.221:                                       ; preds = %if.else.218, %if.then.217
  %140 = bitcast %struct._object** %_py_decref_tmp213 to i8*, !dbg !3012
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !3012
  br label %do.cond.222, !dbg !3013

do.cond.222:                                      ; preds = %if.end.221
  br label %do.end.223, !dbg !3014

do.end.223:                                       ; preds = %do.cond.222
  %call224 = call %struct._object* @new_delta_ex(i32 0, i32 0, i32 1, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3016
  store %struct._object* %call224, %struct._object** %x, align 8, !dbg !3017, !tbaa !2563
  %141 = load %struct._object*, %struct._object** %x, align 8, !dbg !3018, !tbaa !2563
  %cmp225 = icmp eq %struct._object* %141, null, !dbg !3020
  br i1 %cmp225, label %if.then.229, label %lor.lhs.false.226, !dbg !3021

lor.lhs.false.226:                                ; preds = %do.end.223
  %142 = load %struct._object*, %struct._object** %d, align 8, !dbg !3022, !tbaa !2563
  %143 = load %struct._object*, %struct._object** %x, align 8, !dbg !3024, !tbaa !2563
  %call227 = call i32 @PyDict_SetItemString(%struct._object* %142, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct._object* %143), !dbg !3025
  %cmp228 = icmp slt i32 %call227, 0, !dbg !3026
  br i1 %cmp228, label %if.then.229, label %if.end.230, !dbg !3027

if.then.229:                                      ; preds = %lor.lhs.false.226, %do.end.223
  store %struct._object* null, %struct._object** %retval, !dbg !3028
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3028

if.end.230:                                       ; preds = %lor.lhs.false.226
  br label %do.body.231, !dbg !3029

do.body.231:                                      ; preds = %if.end.230
  %144 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !3030
  call void @llvm.lifetime.start(i64 8, i8* %144) #1, !dbg !3030
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !487, metadata !2553), !dbg !3032
  %145 = load %struct._object*, %struct._object** %x, align 8, !dbg !3033, !tbaa !2563
  store %struct._object* %145, %struct._object** %_py_decref_tmp232, align 8, !dbg !3032, !tbaa !2563
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !3034, !tbaa !2563
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 0, !dbg !3036
  %147 = load i64, i64* %ob_refcnt233, align 8, !dbg !3037, !tbaa !2632
  %dec234 = add i64 %147, -1, !dbg !3037
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !3037, !tbaa !2632
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !3038
  br i1 %cmp235, label %if.then.236, label %if.else.237, !dbg !3039

if.then.236:                                      ; preds = %do.body.231
  br label %if.end.240, !dbg !3040

if.else.237:                                      ; preds = %do.body.231
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !3042, !tbaa !2563
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 1, !dbg !3044
  %149 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8, !dbg !3044, !tbaa !2640
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %149, i32 0, i32 4, !dbg !3045
  %150 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8, !dbg !3045, !tbaa !2642
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !3046, !tbaa !2563
  call void %150(%struct._object* %151), !dbg !3047
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  %152 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !3048
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !3048
  br label %do.cond.241, !dbg !3049

do.cond.241:                                      ; preds = %if.end.240
  br label %do.end.242, !dbg !3050

do.end.242:                                       ; preds = %do.cond.241
  %153 = load %struct._object*, %struct._object** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeZoneType, i32 0, i32 31), align 8, !dbg !3052, !tbaa !2603
  store %struct._object* %153, %struct._object** %d, align 8, !dbg !3053, !tbaa !2563
  %call243 = call %struct._object* @new_delta_ex(i32 0, i32 0, i32 0, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3054
  store %struct._object* %call243, %struct._object** %delta, align 8, !dbg !3055, !tbaa !2563
  %154 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3056, !tbaa !2563
  %cmp244 = icmp eq %struct._object* %154, null, !dbg !3058
  br i1 %cmp244, label %if.then.245, label %if.end.246, !dbg !3059

if.then.245:                                      ; preds = %do.end.242
  store %struct._object* null, %struct._object** %retval, !dbg !3060
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3060

if.end.246:                                       ; preds = %do.end.242
  %155 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3061, !tbaa !2563
  %call247 = call %struct._object* @create_timezone(%struct._object* %155, %struct._object* null), !dbg !3062
  store %struct._object* %call247, %struct._object** %x, align 8, !dbg !3063, !tbaa !2563
  br label %do.body.248, !dbg !3064

do.body.248:                                      ; preds = %if.end.246
  %156 = bitcast %struct._object** %_py_decref_tmp249 to i8*, !dbg !3065
  call void @llvm.lifetime.start(i64 8, i8* %156) #1, !dbg !3065
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp249, metadata !489, metadata !2553), !dbg !3067
  %157 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3068, !tbaa !2563
  store %struct._object* %157, %struct._object** %_py_decref_tmp249, align 8, !dbg !3067, !tbaa !2563
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !3069, !tbaa !2563
  %ob_refcnt250 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 0, !dbg !3071
  %159 = load i64, i64* %ob_refcnt250, align 8, !dbg !3072, !tbaa !2632
  %dec251 = add i64 %159, -1, !dbg !3072
  store i64 %dec251, i64* %ob_refcnt250, align 8, !dbg !3072, !tbaa !2632
  %cmp252 = icmp ne i64 %dec251, 0, !dbg !3073
  br i1 %cmp252, label %if.then.253, label %if.else.254, !dbg !3074

if.then.253:                                      ; preds = %do.body.248
  br label %if.end.257, !dbg !3075

if.else.254:                                      ; preds = %do.body.248
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !3077, !tbaa !2563
  %ob_type255 = getelementptr inbounds %struct._object, %struct._object* %160, i32 0, i32 1, !dbg !3079
  %161 = load %struct._typeobject*, %struct._typeobject** %ob_type255, align 8, !dbg !3079, !tbaa !2640
  %tp_dealloc256 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %161, i32 0, i32 4, !dbg !3080
  %162 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc256, align 8, !dbg !3080, !tbaa !2642
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !3081, !tbaa !2563
  call void %162(%struct._object* %163), !dbg !3082
  br label %if.end.257

if.end.257:                                       ; preds = %if.else.254, %if.then.253
  %164 = bitcast %struct._object** %_py_decref_tmp249 to i8*, !dbg !3083
  call void @llvm.lifetime.end(i64 8, i8* %164) #1, !dbg !3083
  br label %do.cond.258, !dbg !3084

do.cond.258:                                      ; preds = %if.end.257
  br label %do.end.259, !dbg !3085

do.end.259:                                       ; preds = %do.cond.258
  %165 = load %struct._object*, %struct._object** %x, align 8, !dbg !3087, !tbaa !2563
  %cmp260 = icmp eq %struct._object* %165, null, !dbg !3089
  br i1 %cmp260, label %if.then.264, label %lor.lhs.false.261, !dbg !3090

lor.lhs.false.261:                                ; preds = %do.end.259
  %166 = load %struct._object*, %struct._object** %d, align 8, !dbg !3091, !tbaa !2563
  %167 = load %struct._object*, %struct._object** %x, align 8, !dbg !3093, !tbaa !2563
  %call262 = call i32 @PyDict_SetItemString(%struct._object* %166, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), %struct._object* %167), !dbg !3094
  %cmp263 = icmp slt i32 %call262, 0, !dbg !3095
  br i1 %cmp263, label %if.then.264, label %if.end.265, !dbg !3096

if.then.264:                                      ; preds = %lor.lhs.false.261, %do.end.259
  store %struct._object* null, %struct._object** %retval, !dbg !3097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3097

if.end.265:                                       ; preds = %lor.lhs.false.261
  %168 = load %struct._object*, %struct._object** %x, align 8, !dbg !3098, !tbaa !2563
  store %struct._object* %168, %struct._object** @PyDateTime_TimeZone_UTC, align 8, !dbg !3099, !tbaa !2563
  %call266 = call %struct._object* @new_delta_ex(i32 -1, i32 60, i32 0, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3100
  store %struct._object* %call266, %struct._object** %delta, align 8, !dbg !3101, !tbaa !2563
  %169 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3102, !tbaa !2563
  %cmp267 = icmp eq %struct._object* %169, null, !dbg !3104
  br i1 %cmp267, label %if.then.268, label %if.end.269, !dbg !3105

if.then.268:                                      ; preds = %if.end.265
  store %struct._object* null, %struct._object** %retval, !dbg !3106
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3106

if.end.269:                                       ; preds = %if.end.265
  %170 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3107, !tbaa !2563
  %call270 = call %struct._object* @create_timezone(%struct._object* %170, %struct._object* null), !dbg !3108
  store %struct._object* %call270, %struct._object** %x, align 8, !dbg !3109, !tbaa !2563
  br label %do.body.271, !dbg !3110

do.body.271:                                      ; preds = %if.end.269
  %171 = bitcast %struct._object** %_py_decref_tmp272 to i8*, !dbg !3111
  call void @llvm.lifetime.start(i64 8, i8* %171) #1, !dbg !3111
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp272, metadata !491, metadata !2553), !dbg !3113
  %172 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3114, !tbaa !2563
  store %struct._object* %172, %struct._object** %_py_decref_tmp272, align 8, !dbg !3113, !tbaa !2563
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp272, align 8, !dbg !3115, !tbaa !2563
  %ob_refcnt273 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 0, !dbg !3117
  %174 = load i64, i64* %ob_refcnt273, align 8, !dbg !3118, !tbaa !2632
  %dec274 = add i64 %174, -1, !dbg !3118
  store i64 %dec274, i64* %ob_refcnt273, align 8, !dbg !3118, !tbaa !2632
  %cmp275 = icmp ne i64 %dec274, 0, !dbg !3119
  br i1 %cmp275, label %if.then.276, label %if.else.277, !dbg !3120

if.then.276:                                      ; preds = %do.body.271
  br label %if.end.280, !dbg !3121

if.else.277:                                      ; preds = %do.body.271
  %175 = load %struct._object*, %struct._object** %_py_decref_tmp272, align 8, !dbg !3123, !tbaa !2563
  %ob_type278 = getelementptr inbounds %struct._object, %struct._object* %175, i32 0, i32 1, !dbg !3125
  %176 = load %struct._typeobject*, %struct._typeobject** %ob_type278, align 8, !dbg !3125, !tbaa !2640
  %tp_dealloc279 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %176, i32 0, i32 4, !dbg !3126
  %177 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc279, align 8, !dbg !3126, !tbaa !2642
  %178 = load %struct._object*, %struct._object** %_py_decref_tmp272, align 8, !dbg !3127, !tbaa !2563
  call void %177(%struct._object* %178), !dbg !3128
  br label %if.end.280

if.end.280:                                       ; preds = %if.else.277, %if.then.276
  %179 = bitcast %struct._object** %_py_decref_tmp272 to i8*, !dbg !3129
  call void @llvm.lifetime.end(i64 8, i8* %179) #1, !dbg !3129
  br label %do.cond.281, !dbg !3130

do.cond.281:                                      ; preds = %if.end.280
  br label %do.end.282, !dbg !3131

do.end.282:                                       ; preds = %do.cond.281
  %180 = load %struct._object*, %struct._object** %x, align 8, !dbg !3133, !tbaa !2563
  %cmp283 = icmp eq %struct._object* %180, null, !dbg !3135
  br i1 %cmp283, label %if.then.287, label %lor.lhs.false.284, !dbg !3136

lor.lhs.false.284:                                ; preds = %do.end.282
  %181 = load %struct._object*, %struct._object** %d, align 8, !dbg !3137, !tbaa !2563
  %182 = load %struct._object*, %struct._object** %x, align 8, !dbg !3139, !tbaa !2563
  %call285 = call i32 @PyDict_SetItemString(%struct._object* %181, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct._object* %182), !dbg !3140
  %cmp286 = icmp slt i32 %call285, 0, !dbg !3141
  br i1 %cmp286, label %if.then.287, label %if.end.288, !dbg !3142

if.then.287:                                      ; preds = %lor.lhs.false.284, %do.end.282
  store %struct._object* null, %struct._object** %retval, !dbg !3143
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3143

if.end.288:                                       ; preds = %lor.lhs.false.284
  br label %do.body.289, !dbg !3144

do.body.289:                                      ; preds = %if.end.288
  %183 = bitcast %struct._object** %_py_decref_tmp290 to i8*, !dbg !3145
  call void @llvm.lifetime.start(i64 8, i8* %183) #1, !dbg !3145
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp290, metadata !493, metadata !2553), !dbg !3147
  %184 = load %struct._object*, %struct._object** %x, align 8, !dbg !3148, !tbaa !2563
  store %struct._object* %184, %struct._object** %_py_decref_tmp290, align 8, !dbg !3147, !tbaa !2563
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp290, align 8, !dbg !3149, !tbaa !2563
  %ob_refcnt291 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 0, !dbg !3151
  %186 = load i64, i64* %ob_refcnt291, align 8, !dbg !3152, !tbaa !2632
  %dec292 = add i64 %186, -1, !dbg !3152
  store i64 %dec292, i64* %ob_refcnt291, align 8, !dbg !3152, !tbaa !2632
  %cmp293 = icmp ne i64 %dec292, 0, !dbg !3153
  br i1 %cmp293, label %if.then.294, label %if.else.295, !dbg !3154

if.then.294:                                      ; preds = %do.body.289
  br label %if.end.298, !dbg !3155

if.else.295:                                      ; preds = %do.body.289
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp290, align 8, !dbg !3157, !tbaa !2563
  %ob_type296 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 1, !dbg !3159
  %188 = load %struct._typeobject*, %struct._typeobject** %ob_type296, align 8, !dbg !3159, !tbaa !2640
  %tp_dealloc297 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %188, i32 0, i32 4, !dbg !3160
  %189 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc297, align 8, !dbg !3160, !tbaa !2642
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp290, align 8, !dbg !3161, !tbaa !2563
  call void %189(%struct._object* %190), !dbg !3162
  br label %if.end.298

if.end.298:                                       ; preds = %if.else.295, %if.then.294
  %191 = bitcast %struct._object** %_py_decref_tmp290 to i8*, !dbg !3163
  call void @llvm.lifetime.end(i64 8, i8* %191) #1, !dbg !3163
  br label %do.cond.299, !dbg !3164

do.cond.299:                                      ; preds = %if.end.298
  br label %do.end.300, !dbg !3165

do.end.300:                                       ; preds = %do.cond.299
  %call301 = call %struct._object* @new_delta_ex(i32 0, i32 86340, i32 0, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3167
  store %struct._object* %call301, %struct._object** %delta, align 8, !dbg !3168, !tbaa !2563
  %192 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3169, !tbaa !2563
  %cmp302 = icmp eq %struct._object* %192, null, !dbg !3171
  br i1 %cmp302, label %if.then.303, label %if.end.304, !dbg !3172

if.then.303:                                      ; preds = %do.end.300
  store %struct._object* null, %struct._object** %retval, !dbg !3173
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3173

if.end.304:                                       ; preds = %do.end.300
  %193 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3174, !tbaa !2563
  %call305 = call %struct._object* @create_timezone(%struct._object* %193, %struct._object* null), !dbg !3175
  store %struct._object* %call305, %struct._object** %x, align 8, !dbg !3176, !tbaa !2563
  br label %do.body.306, !dbg !3177

do.body.306:                                      ; preds = %if.end.304
  %194 = bitcast %struct._object** %_py_decref_tmp307 to i8*, !dbg !3178
  call void @llvm.lifetime.start(i64 8, i8* %194) #1, !dbg !3178
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp307, metadata !495, metadata !2553), !dbg !3180
  %195 = load %struct._object*, %struct._object** %delta, align 8, !dbg !3181, !tbaa !2563
  store %struct._object* %195, %struct._object** %_py_decref_tmp307, align 8, !dbg !3180, !tbaa !2563
  %196 = load %struct._object*, %struct._object** %_py_decref_tmp307, align 8, !dbg !3182, !tbaa !2563
  %ob_refcnt308 = getelementptr inbounds %struct._object, %struct._object* %196, i32 0, i32 0, !dbg !3184
  %197 = load i64, i64* %ob_refcnt308, align 8, !dbg !3185, !tbaa !2632
  %dec309 = add i64 %197, -1, !dbg !3185
  store i64 %dec309, i64* %ob_refcnt308, align 8, !dbg !3185, !tbaa !2632
  %cmp310 = icmp ne i64 %dec309, 0, !dbg !3186
  br i1 %cmp310, label %if.then.311, label %if.else.312, !dbg !3187

if.then.311:                                      ; preds = %do.body.306
  br label %if.end.315, !dbg !3188

if.else.312:                                      ; preds = %do.body.306
  %198 = load %struct._object*, %struct._object** %_py_decref_tmp307, align 8, !dbg !3190, !tbaa !2563
  %ob_type313 = getelementptr inbounds %struct._object, %struct._object* %198, i32 0, i32 1, !dbg !3192
  %199 = load %struct._typeobject*, %struct._typeobject** %ob_type313, align 8, !dbg !3192, !tbaa !2640
  %tp_dealloc314 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %199, i32 0, i32 4, !dbg !3193
  %200 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc314, align 8, !dbg !3193, !tbaa !2642
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp307, align 8, !dbg !3194, !tbaa !2563
  call void %200(%struct._object* %201), !dbg !3195
  br label %if.end.315

if.end.315:                                       ; preds = %if.else.312, %if.then.311
  %202 = bitcast %struct._object** %_py_decref_tmp307 to i8*, !dbg !3196
  call void @llvm.lifetime.end(i64 8, i8* %202) #1, !dbg !3196
  br label %do.cond.316, !dbg !3197

do.cond.316:                                      ; preds = %if.end.315
  br label %do.end.317, !dbg !3198

do.end.317:                                       ; preds = %do.cond.316
  %203 = load %struct._object*, %struct._object** %x, align 8, !dbg !3200, !tbaa !2563
  %cmp318 = icmp eq %struct._object* %203, null, !dbg !3202
  br i1 %cmp318, label %if.then.322, label %lor.lhs.false.319, !dbg !3203

lor.lhs.false.319:                                ; preds = %do.end.317
  %204 = load %struct._object*, %struct._object** %d, align 8, !dbg !3204, !tbaa !2563
  %205 = load %struct._object*, %struct._object** %x, align 8, !dbg !3206, !tbaa !2563
  %call320 = call i32 @PyDict_SetItemString(%struct._object* %204, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), %struct._object* %205), !dbg !3207
  %cmp321 = icmp slt i32 %call320, 0, !dbg !3208
  br i1 %cmp321, label %if.then.322, label %if.end.323, !dbg !3209

if.then.322:                                      ; preds = %lor.lhs.false.319, %do.end.317
  store %struct._object* null, %struct._object** %retval, !dbg !3210
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3210

if.end.323:                                       ; preds = %lor.lhs.false.319
  br label %do.body.324, !dbg !3211

do.body.324:                                      ; preds = %if.end.323
  %206 = bitcast %struct._object** %_py_decref_tmp325 to i8*, !dbg !3212
  call void @llvm.lifetime.start(i64 8, i8* %206) #1, !dbg !3212
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp325, metadata !497, metadata !2553), !dbg !3214
  %207 = load %struct._object*, %struct._object** %x, align 8, !dbg !3215, !tbaa !2563
  store %struct._object* %207, %struct._object** %_py_decref_tmp325, align 8, !dbg !3214, !tbaa !2563
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp325, align 8, !dbg !3216, !tbaa !2563
  %ob_refcnt326 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 0, !dbg !3218
  %209 = load i64, i64* %ob_refcnt326, align 8, !dbg !3219, !tbaa !2632
  %dec327 = add i64 %209, -1, !dbg !3219
  store i64 %dec327, i64* %ob_refcnt326, align 8, !dbg !3219, !tbaa !2632
  %cmp328 = icmp ne i64 %dec327, 0, !dbg !3220
  br i1 %cmp328, label %if.then.329, label %if.else.330, !dbg !3221

if.then.329:                                      ; preds = %do.body.324
  br label %if.end.333, !dbg !3222

if.else.330:                                      ; preds = %do.body.324
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp325, align 8, !dbg !3224, !tbaa !2563
  %ob_type331 = getelementptr inbounds %struct._object, %struct._object* %210, i32 0, i32 1, !dbg !3226
  %211 = load %struct._typeobject*, %struct._typeobject** %ob_type331, align 8, !dbg !3226, !tbaa !2640
  %tp_dealloc332 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %211, i32 0, i32 4, !dbg !3227
  %212 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc332, align 8, !dbg !3227, !tbaa !2642
  %213 = load %struct._object*, %struct._object** %_py_decref_tmp325, align 8, !dbg !3228, !tbaa !2563
  call void %212(%struct._object* %213), !dbg !3229
  br label %if.end.333

if.end.333:                                       ; preds = %if.else.330, %if.then.329
  %214 = bitcast %struct._object** %_py_decref_tmp325 to i8*, !dbg !3230
  call void @llvm.lifetime.end(i64 8, i8* %214) #1, !dbg !3230
  br label %do.cond.334, !dbg !3231

do.cond.334:                                      ; preds = %if.end.333
  br label %do.end.335, !dbg !3232

do.end.335:                                       ; preds = %do.cond.334
  %215 = load %struct._object*, %struct._object** @PyDateTime_TimeZone_UTC, align 8, !dbg !3234, !tbaa !2563
  %call336 = call %struct._object* @new_datetime_ex(i32 1970, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, %struct._object* %215, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !3235
  store %struct._object* %call336, %struct._object** @PyDateTime_Epoch, align 8, !dbg !3236, !tbaa !2563
  %216 = load %struct._object*, %struct._object** @PyDateTime_Epoch, align 8, !dbg !3237, !tbaa !2563
  %cmp337 = icmp eq %struct._object* %216, null, !dbg !3239
  br i1 %cmp337, label %if.then.338, label %if.end.339, !dbg !3240

if.then.338:                                      ; preds = %do.end.335
  store %struct._object* null, %struct._object** %retval, !dbg !3241
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3241

if.end.339:                                       ; preds = %do.end.335
  %217 = load %struct._object*, %struct._object** %m, align 8, !dbg !3242, !tbaa !2563
  %call340 = call i32 @PyModule_AddIntConstant(%struct._object* %217, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i64 1), !dbg !3243
  %218 = load %struct._object*, %struct._object** %m, align 8, !dbg !3244, !tbaa !2563
  %call341 = call i32 @PyModule_AddIntConstant(%struct._object* %218, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i64 9999), !dbg !3245
  %219 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3246, !tbaa !2632
  %inc = add i64 %219, 1, !dbg !3246
  store i64 %inc, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3246, !tbaa !2632
  %220 = load %struct._object*, %struct._object** %m, align 8, !dbg !3247, !tbaa !2563
  %call342 = call i32 @PyModule_AddObject(%struct._object* %220, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateType, i32 0, i32 0, i32 0)), !dbg !3248
  %221 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateTimeType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3249, !tbaa !2632
  %inc343 = add i64 %221, 1, !dbg !3249
  store i64 %inc343, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateTimeType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3249, !tbaa !2632
  %222 = load %struct._object*, %struct._object** %m, align 8, !dbg !3250, !tbaa !2563
  %call344 = call i32 @PyModule_AddObject(%struct._object* %222, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DateTimeType, i32 0, i32 0, i32 0)), !dbg !3251
  %223 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3252, !tbaa !2632
  %inc345 = add i64 %223, 1, !dbg !3252
  store i64 %inc345, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3252, !tbaa !2632
  %224 = load %struct._object*, %struct._object** %m, align 8, !dbg !3253, !tbaa !2563
  %call346 = call i32 @PyModule_AddObject(%struct._object* %224, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeType, i32 0, i32 0, i32 0)), !dbg !3254
  %225 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DeltaType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3255, !tbaa !2632
  %inc347 = add i64 %225, 1, !dbg !3255
  store i64 %inc347, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DeltaType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3255, !tbaa !2632
  %226 = load %struct._object*, %struct._object** %m, align 8, !dbg !3256, !tbaa !2563
  %call348 = call i32 @PyModule_AddObject(%struct._object* %226, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_DeltaType, i32 0, i32 0, i32 0)), !dbg !3257
  %227 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TZInfoType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3258, !tbaa !2632
  %inc349 = add i64 %227, 1, !dbg !3258
  store i64 %inc349, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TZInfoType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3258, !tbaa !2632
  %228 = load %struct._object*, %struct._object** %m, align 8, !dbg !3259, !tbaa !2563
  %call350 = call i32 @PyModule_AddObject(%struct._object* %228, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TZInfoType, i32 0, i32 0, i32 0)), !dbg !3260
  %229 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeZoneType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3261, !tbaa !2632
  %inc351 = add i64 %229, 1, !dbg !3261
  store i64 %inc351, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeZoneType, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !3261, !tbaa !2632
  %230 = load %struct._object*, %struct._object** %m, align 8, !dbg !3262, !tbaa !2563
  %call352 = call i32 @PyModule_AddObject(%struct._object* %230, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyDateTime_TimeZoneType, i32 0, i32 0, i32 0)), !dbg !3263
  %call353 = call %struct._object* @PyCapsule_New(i8* bitcast (%struct.PyDateTime_CAPI* @CAPI to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i32 0, i32 0), void (%struct._object*)* null), !dbg !3264
  store %struct._object* %call353, %struct._object** %x, align 8, !dbg !3265, !tbaa !2563
  %231 = load %struct._object*, %struct._object** %x, align 8, !dbg !3266, !tbaa !2563
  %cmp354 = icmp eq %struct._object* %231, null, !dbg !3268
  br i1 %cmp354, label %if.then.355, label %if.end.356, !dbg !3269

if.then.355:                                      ; preds = %if.end.339
  store %struct._object* null, %struct._object** %retval, !dbg !3270
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3270

if.end.356:                                       ; preds = %if.end.339
  %232 = load %struct._object*, %struct._object** %m, align 8, !dbg !3271, !tbaa !2563
  %233 = load %struct._object*, %struct._object** %x, align 8, !dbg !3272, !tbaa !2563
  %call357 = call i32 @PyModule_AddObject(%struct._object* %232, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), %struct._object* %233), !dbg !3273
  %call358 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !3274
  store %struct._object* %call358, %struct._object** @one, align 8, !dbg !3275, !tbaa !2563
  %call359 = call %struct._object* @PyLong_FromLong(i64 1000), !dbg !3276
  store %struct._object* %call359, %struct._object** @us_per_ms, align 8, !dbg !3277, !tbaa !2563
  %call360 = call %struct._object* @PyLong_FromLong(i64 1000000), !dbg !3278
  store %struct._object* %call360, %struct._object** @us_per_second, align 8, !dbg !3279, !tbaa !2563
  %call361 = call %struct._object* @PyLong_FromLong(i64 60000000), !dbg !3280
  store %struct._object* %call361, %struct._object** @us_per_minute, align 8, !dbg !3281, !tbaa !2563
  %call362 = call %struct._object* @PyLong_FromLong(i64 86400), !dbg !3282
  store %struct._object* %call362, %struct._object** @seconds_per_day, align 8, !dbg !3283, !tbaa !2563
  %234 = load %struct._object*, %struct._object** @one, align 8, !dbg !3284, !tbaa !2563
  %cmp363 = icmp eq %struct._object* %234, null, !dbg !3286
  br i1 %cmp363, label %if.then.372, label %lor.lhs.false.364, !dbg !3287

lor.lhs.false.364:                                ; preds = %if.end.356
  %235 = load %struct._object*, %struct._object** @us_per_ms, align 8, !dbg !3288, !tbaa !2563
  %cmp365 = icmp eq %struct._object* %235, null, !dbg !3290
  br i1 %cmp365, label %if.then.372, label %lor.lhs.false.366, !dbg !3291

lor.lhs.false.366:                                ; preds = %lor.lhs.false.364
  %236 = load %struct._object*, %struct._object** @us_per_second, align 8, !dbg !3292, !tbaa !2563
  %cmp367 = icmp eq %struct._object* %236, null, !dbg !3294
  br i1 %cmp367, label %if.then.372, label %lor.lhs.false.368, !dbg !3295

lor.lhs.false.368:                                ; preds = %lor.lhs.false.366
  %237 = load %struct._object*, %struct._object** @us_per_minute, align 8, !dbg !3296, !tbaa !2563
  %cmp369 = icmp eq %struct._object* %237, null, !dbg !3297
  br i1 %cmp369, label %if.then.372, label %lor.lhs.false.370, !dbg !3298

lor.lhs.false.370:                                ; preds = %lor.lhs.false.368
  %238 = load %struct._object*, %struct._object** @seconds_per_day, align 8, !dbg !3299, !tbaa !2563
  %cmp371 = icmp eq %struct._object* %238, null, !dbg !3300
  br i1 %cmp371, label %if.then.372, label %if.end.373, !dbg !3301

if.then.372:                                      ; preds = %lor.lhs.false.370, %lor.lhs.false.368, %lor.lhs.false.366, %lor.lhs.false.364, %if.end.356
  store %struct._object* null, %struct._object** %retval, !dbg !3302
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3302

if.end.373:                                       ; preds = %lor.lhs.false.370
  %call374 = call %struct._object* @PyLong_FromDouble(double 3.600000e+09), !dbg !3303
  store %struct._object* %call374, %struct._object** @us_per_hour, align 8, !dbg !3304, !tbaa !2563
  %call375 = call %struct._object* @PyLong_FromDouble(double 8.640000e+10), !dbg !3305
  store %struct._object* %call375, %struct._object** @us_per_day, align 8, !dbg !3306, !tbaa !2563
  %call376 = call %struct._object* @PyLong_FromDouble(double 6.048000e+11), !dbg !3307
  store %struct._object* %call376, %struct._object** @us_per_week, align 8, !dbg !3308, !tbaa !2563
  %239 = load %struct._object*, %struct._object** @us_per_hour, align 8, !dbg !3309, !tbaa !2563
  %cmp377 = icmp eq %struct._object* %239, null, !dbg !3311
  br i1 %cmp377, label %if.then.382, label %lor.lhs.false.378, !dbg !3312

lor.lhs.false.378:                                ; preds = %if.end.373
  %240 = load %struct._object*, %struct._object** @us_per_day, align 8, !dbg !3313, !tbaa !2563
  %cmp379 = icmp eq %struct._object* %240, null, !dbg !3315
  br i1 %cmp379, label %if.then.382, label %lor.lhs.false.380, !dbg !3316

lor.lhs.false.380:                                ; preds = %lor.lhs.false.378
  %241 = load %struct._object*, %struct._object** @us_per_week, align 8, !dbg !3317, !tbaa !2563
  %cmp381 = icmp eq %struct._object* %241, null, !dbg !3319
  br i1 %cmp381, label %if.then.382, label %if.end.383, !dbg !3320

if.then.382:                                      ; preds = %lor.lhs.false.380, %lor.lhs.false.378, %if.end.373
  store %struct._object* null, %struct._object** %retval, !dbg !3321
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3321

if.end.383:                                       ; preds = %lor.lhs.false.380
  %242 = load %struct._object*, %struct._object** %m, align 8, !dbg !3322, !tbaa !2563
  store %struct._object* %242, %struct._object** %retval, !dbg !3323
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3323

cleanup:                                          ; preds = %if.end.383, %if.then.382, %if.then.372, %if.then.355, %if.then.338, %if.then.322, %if.then.303, %if.then.287, %if.then.268, %if.then.264, %if.then.245, %if.then.229, %if.then.210, %if.then.191, %if.then.172, %if.then.153, %if.then.134, %if.then.115, %if.then.96, %if.then.77, %if.then.58, %if.then.39, %if.then.29, %if.then.23, %if.then.19, %if.then.15, %if.then.11, %if.then.7, %if.then.3, %if.then
  %243 = bitcast %struct._object** %delta to i8*, !dbg !3324
  call void @llvm.lifetime.end(i64 8, i8* %243) #1, !dbg !3324
  %244 = bitcast %struct._object** %x to i8*, !dbg !3324
  call void @llvm.lifetime.end(i64 8, i8* %244) #1, !dbg !3324
  %245 = bitcast %struct._object** %d to i8*, !dbg !3324
  call void @llvm.lifetime.end(i64 8, i8* %245) #1, !dbg !3324
  %246 = bitcast %struct._object** %m to i8*, !dbg !3324
  call void @llvm.lifetime.end(i64 8, i8* %246) #1, !dbg !3324
  %247 = load %struct._object*, %struct._object** %retval, !dbg !3324
  ret %struct._object* %247, !dbg !3324
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyType_Ready(%struct._typeobject*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @new_delta_ex(i32 %days, i32 %seconds, i32 %microseconds, i32 %normalize, %struct._typeobject* %type) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %days.addr = alloca i32, align 4
  %seconds.addr = alloca i32, align 4
  %microseconds.addr = alloca i32, align 4
  %normalize.addr = alloca i32, align 4
  %type.addr = alloca %struct._typeobject*, align 8
  %self = alloca %struct.PyDateTime_Delta*, align 8
  %cleanup.dest.slot = alloca i32
  store i32 %days, i32* %days.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %days.addr, metadata !2306, metadata !2553), !dbg !3326
  store i32 %seconds, i32* %seconds.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %seconds.addr, metadata !2307, metadata !2553), !dbg !3327
  store i32 %microseconds, i32* %microseconds.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %microseconds.addr, metadata !2308, metadata !2553), !dbg !3328
  store i32 %normalize, i32* %normalize.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %normalize.addr, metadata !2309, metadata !2553), !dbg !3329
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2310, metadata !2553), !dbg !3330
  %0 = bitcast %struct.PyDateTime_Delta** %self to i8*, !dbg !3331
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3331
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self, metadata !2311, metadata !2553), !dbg !3332
  %1 = load i32, i32* %normalize.addr, align 4, !dbg !3333, !tbaa !3325
  %tobool = icmp ne i32 %1, 0, !dbg !3333
  br i1 %tobool, label %if.then, label %if.end, !dbg !3335

if.then:                                          ; preds = %entry
  call void @normalize_d_s_us(i32* %days.addr, i32* %seconds.addr, i32* %microseconds.addr), !dbg !3336
  br label %if.end, !dbg !3336

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %days.addr, align 4, !dbg !3337, !tbaa !3325
  %call = call i32 @check_delta_day_range(i32 %2), !dbg !3339
  %cmp = icmp slt i32 %call, 0, !dbg !3340
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !3341

if.then.1:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3342

if.end.2:                                         ; preds = %if.end
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3343, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 36, !dbg !3344
  %4 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3344, !tbaa !3345
  %5 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3346, !tbaa !2563
  %call3 = call %struct._object* %4(%struct._typeobject* %5, i64 0), !dbg !3343
  %6 = bitcast %struct._object* %call3 to %struct.PyDateTime_Delta*, !dbg !3347
  store %struct.PyDateTime_Delta* %6, %struct.PyDateTime_Delta** %self, align 8, !dbg !3348, !tbaa !2563
  %7 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self, align 8, !dbg !3349, !tbaa !2563
  %cmp4 = icmp ne %struct.PyDateTime_Delta* %7, null, !dbg !3351
  br i1 %cmp4, label %if.then.5, label %if.end.9, !dbg !3352

if.then.5:                                        ; preds = %if.end.2
  %8 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self, align 8, !dbg !3353, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %8, i32 0, i32 1, !dbg !3355
  store i64 -1, i64* %hashcode, align 8, !dbg !3356, !tbaa !3357
  %9 = load i32, i32* %days.addr, align 4, !dbg !3359, !tbaa !3325
  %10 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self, align 8, !dbg !3360, !tbaa !2563
  %days6 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %10, i32 0, i32 2, !dbg !3361
  store i32 %9, i32* %days6, align 4, !dbg !3362, !tbaa !3363
  %11 = load i32, i32* %seconds.addr, align 4, !dbg !3364, !tbaa !3325
  %12 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self, align 8, !dbg !3365, !tbaa !2563
  %seconds7 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %12, i32 0, i32 3, !dbg !3366
  store i32 %11, i32* %seconds7, align 4, !dbg !3367, !tbaa !3368
  %13 = load i32, i32* %microseconds.addr, align 4, !dbg !3369, !tbaa !3325
  %14 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self, align 8, !dbg !3370, !tbaa !2563
  %microseconds8 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %14, i32 0, i32 4, !dbg !3371
  store i32 %13, i32* %microseconds8, align 4, !dbg !3372, !tbaa !3373
  br label %if.end.9, !dbg !3374

if.end.9:                                         ; preds = %if.then.5, %if.end.2
  %15 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self, align 8, !dbg !3375, !tbaa !2563
  %16 = bitcast %struct.PyDateTime_Delta* %15 to %struct._object*, !dbg !3376
  store %struct._object* %16, %struct._object** %retval, !dbg !3377
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3377

cleanup:                                          ; preds = %if.end.9, %if.then.1
  %17 = bitcast %struct.PyDateTime_Delta** %self to i8*, !dbg !3378
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !3378
  %18 = load %struct._object*, %struct._object** %retval, !dbg !3378
  ret %struct._object* %18, !dbg !3378
}

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @new_date_ex(i32 %year, i32 %month, i32 %day, %struct._typeobject* %type) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  %type.addr = alloca %struct._typeobject*, align 8
  %self = alloca %struct.PyDateTime_Date*, align 8
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !2326, metadata !2553), !dbg !3379
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !2327, metadata !2553), !dbg !3380
  store i32 %day, i32* %day.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %day.addr, metadata !2328, metadata !2553), !dbg !3381
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2329, metadata !2553), !dbg !3382
  %0 = bitcast %struct.PyDateTime_Date** %self to i8*, !dbg !3383
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3383
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self, metadata !2330, metadata !2553), !dbg !3384
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3385, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 36, !dbg !3386
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3386, !tbaa !3345
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3387, !tbaa !2563
  %call = call %struct._object* %2(%struct._typeobject* %3, i64 0), !dbg !3385
  %4 = bitcast %struct._object* %call to %struct.PyDateTime_Date*, !dbg !3388
  store %struct.PyDateTime_Date* %4, %struct.PyDateTime_Date** %self, align 8, !dbg !3389, !tbaa !2563
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self, align 8, !dbg !3390, !tbaa !2563
  %cmp = icmp ne %struct.PyDateTime_Date* %5, null, !dbg !3392
  br i1 %cmp, label %if.then, label %if.end, !dbg !3393

if.then:                                          ; preds = %entry
  %6 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self, align 8, !dbg !3394, !tbaa !2563
  %7 = load i32, i32* %year.addr, align 4, !dbg !3395, !tbaa !3325
  %8 = load i32, i32* %month.addr, align 4, !dbg !3396, !tbaa !3325
  %9 = load i32, i32* %day.addr, align 4, !dbg !3397, !tbaa !3325
  call void @set_date_fields(%struct.PyDateTime_Date* %6, i32 %7, i32 %8, i32 %9), !dbg !3398
  br label %if.end, !dbg !3398

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self, align 8, !dbg !3399, !tbaa !2563
  %11 = bitcast %struct.PyDateTime_Date* %10 to %struct._object*, !dbg !3400
  %12 = bitcast %struct.PyDateTime_Date** %self to i8*, !dbg !3401
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !3401
  ret %struct._object* %11, !dbg !3402
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @new_time_ex(i32 %hour, i32 %minute, i32 %second, i32 %usecond, %struct._object* %tzinfo, %struct._typeobject* %type) #0 {
entry:
  %hour.addr = alloca i32, align 4
  %minute.addr = alloca i32, align 4
  %second.addr = alloca i32, align 4
  %usecond.addr = alloca i32, align 4
  %tzinfo.addr = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %self = alloca %struct.PyDateTime_Time*, align 8
  %aware = alloca i8, align 1
  store i32 %hour, i32* %hour.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %hour.addr, metadata !2343, metadata !2553), !dbg !3403
  store i32 %minute, i32* %minute.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %minute.addr, metadata !2344, metadata !2553), !dbg !3404
  store i32 %second, i32* %second.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %second.addr, metadata !2345, metadata !2553), !dbg !3405
  store i32 %usecond, i32* %usecond.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %usecond.addr, metadata !2346, metadata !2553), !dbg !3406
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !2347, metadata !2553), !dbg !3407
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2348, metadata !2553), !dbg !3408
  %0 = bitcast %struct.PyDateTime_Time** %self to i8*, !dbg !3409
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3409
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self, metadata !2349, metadata !2553), !dbg !3410
  call void @llvm.lifetime.start(i64 1, i8* %aware) #1, !dbg !3411
  call void @llvm.dbg.declare(metadata i8* %aware, metadata !2350, metadata !2553), !dbg !3412
  %1 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !3413, !tbaa !2563
  %cmp = icmp ne %struct._object* %1, @_Py_NoneStruct, !dbg !3414
  %conv = zext i1 %cmp to i32, !dbg !3414
  %conv1 = trunc i32 %conv to i8, !dbg !3413
  store i8 %conv1, i8* %aware, align 1, !dbg !3412, !tbaa !3415
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3416, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 36, !dbg !3417
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3417, !tbaa !3345
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3418, !tbaa !2563
  %5 = load i8, i8* %aware, align 1, !dbg !3419, !tbaa !3415
  %conv2 = sext i8 %5 to i64, !dbg !3419
  %call = call %struct._object* %3(%struct._typeobject* %4, i64 %conv2), !dbg !3416
  %6 = bitcast %struct._object* %call to %struct.PyDateTime_Time*, !dbg !3420
  store %struct.PyDateTime_Time* %6, %struct.PyDateTime_Time** %self, align 8, !dbg !3421, !tbaa !2563
  %7 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3422, !tbaa !2563
  %cmp3 = icmp ne %struct.PyDateTime_Time* %7, null, !dbg !3424
  br i1 %cmp3, label %if.then, label %if.end.26, !dbg !3425

if.then:                                          ; preds = %entry
  %8 = load i8, i8* %aware, align 1, !dbg !3426, !tbaa !3415
  %9 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3428, !tbaa !2563
  %hastzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %9, i32 0, i32 2, !dbg !3429
  store i8 %8, i8* %hastzinfo, align 1, !dbg !3430, !tbaa !3431
  %10 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3433, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %10, i32 0, i32 1, !dbg !3434
  store i64 -1, i64* %hashcode, align 8, !dbg !3435, !tbaa !3436
  %11 = load i32, i32* %hour.addr, align 4, !dbg !3437, !tbaa !3325
  %conv5 = trunc i32 %11 to i8, !dbg !3438
  %12 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3439, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %12, i32 0, i32 3, !dbg !3440
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 0, !dbg !3441
  store i8 %conv5, i8* %arrayidx, align 1, !dbg !3442, !tbaa !3415
  %13 = load i32, i32* %minute.addr, align 4, !dbg !3443, !tbaa !3325
  %conv6 = trunc i32 %13 to i8, !dbg !3444
  %14 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3445, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %14, i32 0, i32 3, !dbg !3446
  %arrayidx8 = getelementptr [6 x i8], [6 x i8]* %data7, i32 0, i64 1, !dbg !3447
  store i8 %conv6, i8* %arrayidx8, align 1, !dbg !3448, !tbaa !3415
  %15 = load i32, i32* %second.addr, align 4, !dbg !3449, !tbaa !3325
  %conv9 = trunc i32 %15 to i8, !dbg !3450
  %16 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3451, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %16, i32 0, i32 3, !dbg !3452
  %arrayidx11 = getelementptr [6 x i8], [6 x i8]* %data10, i32 0, i64 2, !dbg !3453
  store i8 %conv9, i8* %arrayidx11, align 1, !dbg !3454, !tbaa !3415
  %17 = load i32, i32* %usecond.addr, align 4, !dbg !3455, !tbaa !3325
  %and = and i32 %17, 16711680, !dbg !3456
  %shr = ashr i32 %and, 16, !dbg !3457
  %conv12 = trunc i32 %shr to i8, !dbg !3458
  %18 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3459, !tbaa !2563
  %data13 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %18, i32 0, i32 3, !dbg !3460
  %arrayidx14 = getelementptr [6 x i8], [6 x i8]* %data13, i32 0, i64 3, !dbg !3461
  store i8 %conv12, i8* %arrayidx14, align 1, !dbg !3462, !tbaa !3415
  %19 = load i32, i32* %usecond.addr, align 4, !dbg !3463, !tbaa !3325
  %and15 = and i32 %19, 65280, !dbg !3464
  %shr16 = ashr i32 %and15, 8, !dbg !3465
  %conv17 = trunc i32 %shr16 to i8, !dbg !3466
  %20 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3467, !tbaa !2563
  %data18 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %20, i32 0, i32 3, !dbg !3468
  %arrayidx19 = getelementptr [6 x i8], [6 x i8]* %data18, i32 0, i64 4, !dbg !3469
  store i8 %conv17, i8* %arrayidx19, align 1, !dbg !3470, !tbaa !3415
  %21 = load i32, i32* %usecond.addr, align 4, !dbg !3471, !tbaa !3325
  %and20 = and i32 %21, 255, !dbg !3472
  %conv21 = trunc i32 %and20 to i8, !dbg !3473
  %22 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3474, !tbaa !2563
  %data22 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %22, i32 0, i32 3, !dbg !3475
  %arrayidx23 = getelementptr [6 x i8], [6 x i8]* %data22, i32 0, i64 5, !dbg !3476
  store i8 %conv21, i8* %arrayidx23, align 1, !dbg !3477, !tbaa !3415
  %23 = load i8, i8* %aware, align 1, !dbg !3478, !tbaa !3415
  %tobool = icmp ne i8 %23, 0, !dbg !3478
  br i1 %tobool, label %if.then.24, label %if.end, !dbg !3480

if.then.24:                                       ; preds = %if.then
  %24 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !3481, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !3483
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !3484, !tbaa !2632
  %inc = add i64 %25, 1, !dbg !3484
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3484, !tbaa !2632
  %26 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !3485, !tbaa !2563
  %27 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3486, !tbaa !2563
  %tzinfo25 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %27, i32 0, i32 4, !dbg !3487
  store %struct._object* %26, %struct._object** %tzinfo25, align 8, !dbg !3488, !tbaa !3489
  br label %if.end, !dbg !3490

if.end:                                           ; preds = %if.then.24, %if.then
  br label %if.end.26, !dbg !3491

if.end.26:                                        ; preds = %if.end, %entry
  %28 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self, align 8, !dbg !3492, !tbaa !2563
  %29 = bitcast %struct.PyDateTime_Time* %28 to %struct._object*, !dbg !3493
  call void @llvm.lifetime.end(i64 1, i8* %aware) #1, !dbg !3494
  %30 = bitcast %struct.PyDateTime_Time** %self to i8*, !dbg !3494
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !3494
  ret %struct._object* %29, !dbg !3495
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @new_datetime_ex(i32 %year, i32 %month, i32 %day, i32 %hour, i32 %minute, i32 %second, i32 %usecond, %struct._object* %tzinfo, %struct._typeobject* %type) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  %hour.addr = alloca i32, align 4
  %minute.addr = alloca i32, align 4
  %second.addr = alloca i32, align 4
  %usecond.addr = alloca i32, align 4
  %tzinfo.addr = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %self = alloca %struct.PyDateTime_DateTime*, align 8
  %aware = alloca i8, align 1
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !2355, metadata !2553), !dbg !3496
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !2356, metadata !2553), !dbg !3497
  store i32 %day, i32* %day.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %day.addr, metadata !2357, metadata !2553), !dbg !3498
  store i32 %hour, i32* %hour.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %hour.addr, metadata !2358, metadata !2553), !dbg !3499
  store i32 %minute, i32* %minute.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %minute.addr, metadata !2359, metadata !2553), !dbg !3500
  store i32 %second, i32* %second.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %second.addr, metadata !2360, metadata !2553), !dbg !3501
  store i32 %usecond, i32* %usecond.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %usecond.addr, metadata !2361, metadata !2553), !dbg !3502
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !2362, metadata !2553), !dbg !3503
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2363, metadata !2553), !dbg !3504
  %0 = bitcast %struct.PyDateTime_DateTime** %self to i8*, !dbg !3505
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3505
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self, metadata !2364, metadata !2553), !dbg !3506
  call void @llvm.lifetime.start(i64 1, i8* %aware) #1, !dbg !3507
  call void @llvm.dbg.declare(metadata i8* %aware, metadata !2365, metadata !2553), !dbg !3508
  %1 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !3509, !tbaa !2563
  %cmp = icmp ne %struct._object* %1, @_Py_NoneStruct, !dbg !3510
  %conv = zext i1 %cmp to i32, !dbg !3510
  %conv1 = trunc i32 %conv to i8, !dbg !3509
  store i8 %conv1, i8* %aware, align 1, !dbg !3508, !tbaa !3415
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3511, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 36, !dbg !3512
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3512, !tbaa !3345
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3513, !tbaa !2563
  %5 = load i8, i8* %aware, align 1, !dbg !3514, !tbaa !3415
  %conv2 = sext i8 %5 to i64, !dbg !3514
  %call = call %struct._object* %3(%struct._typeobject* %4, i64 %conv2), !dbg !3511
  %6 = bitcast %struct._object* %call to %struct.PyDateTime_DateTime*, !dbg !3515
  store %struct.PyDateTime_DateTime* %6, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3516, !tbaa !2563
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3517, !tbaa !2563
  %cmp3 = icmp ne %struct.PyDateTime_DateTime* %7, null, !dbg !3519
  br i1 %cmp3, label %if.then, label %if.end.26, !dbg !3520

if.then:                                          ; preds = %entry
  %8 = load i8, i8* %aware, align 1, !dbg !3521, !tbaa !3415
  %9 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3523, !tbaa !2563
  %hastzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %9, i32 0, i32 2, !dbg !3524
  store i8 %8, i8* %hastzinfo, align 1, !dbg !3525, !tbaa !3526
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3528, !tbaa !2563
  %11 = bitcast %struct.PyDateTime_DateTime* %10 to %struct.PyDateTime_Date*, !dbg !3529
  %12 = load i32, i32* %year.addr, align 4, !dbg !3530, !tbaa !3325
  %13 = load i32, i32* %month.addr, align 4, !dbg !3531, !tbaa !3325
  %14 = load i32, i32* %day.addr, align 4, !dbg !3532, !tbaa !3325
  call void @set_date_fields(%struct.PyDateTime_Date* %11, i32 %12, i32 %13, i32 %14), !dbg !3533
  %15 = load i32, i32* %hour.addr, align 4, !dbg !3534, !tbaa !3325
  %conv5 = trunc i32 %15 to i8, !dbg !3535
  %16 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3536, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %16, i32 0, i32 3, !dbg !3537
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 4, !dbg !3538
  store i8 %conv5, i8* %arrayidx, align 1, !dbg !3539, !tbaa !3415
  %17 = load i32, i32* %minute.addr, align 4, !dbg !3540, !tbaa !3325
  %conv6 = trunc i32 %17 to i8, !dbg !3541
  %18 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3542, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %18, i32 0, i32 3, !dbg !3543
  %arrayidx8 = getelementptr [10 x i8], [10 x i8]* %data7, i32 0, i64 5, !dbg !3544
  store i8 %conv6, i8* %arrayidx8, align 1, !dbg !3545, !tbaa !3415
  %19 = load i32, i32* %second.addr, align 4, !dbg !3546, !tbaa !3325
  %conv9 = trunc i32 %19 to i8, !dbg !3547
  %20 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3548, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %20, i32 0, i32 3, !dbg !3549
  %arrayidx11 = getelementptr [10 x i8], [10 x i8]* %data10, i32 0, i64 6, !dbg !3550
  store i8 %conv9, i8* %arrayidx11, align 1, !dbg !3551, !tbaa !3415
  %21 = load i32, i32* %usecond.addr, align 4, !dbg !3552, !tbaa !3325
  %and = and i32 %21, 16711680, !dbg !3553
  %shr = ashr i32 %and, 16, !dbg !3554
  %conv12 = trunc i32 %shr to i8, !dbg !3555
  %22 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3556, !tbaa !2563
  %data13 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %22, i32 0, i32 3, !dbg !3557
  %arrayidx14 = getelementptr [10 x i8], [10 x i8]* %data13, i32 0, i64 7, !dbg !3558
  store i8 %conv12, i8* %arrayidx14, align 1, !dbg !3559, !tbaa !3415
  %23 = load i32, i32* %usecond.addr, align 4, !dbg !3560, !tbaa !3325
  %and15 = and i32 %23, 65280, !dbg !3561
  %shr16 = ashr i32 %and15, 8, !dbg !3562
  %conv17 = trunc i32 %shr16 to i8, !dbg !3563
  %24 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3564, !tbaa !2563
  %data18 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %24, i32 0, i32 3, !dbg !3565
  %arrayidx19 = getelementptr [10 x i8], [10 x i8]* %data18, i32 0, i64 8, !dbg !3566
  store i8 %conv17, i8* %arrayidx19, align 1, !dbg !3567, !tbaa !3415
  %25 = load i32, i32* %usecond.addr, align 4, !dbg !3568, !tbaa !3325
  %and20 = and i32 %25, 255, !dbg !3569
  %conv21 = trunc i32 %and20 to i8, !dbg !3570
  %26 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3571, !tbaa !2563
  %data22 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %26, i32 0, i32 3, !dbg !3572
  %arrayidx23 = getelementptr [10 x i8], [10 x i8]* %data22, i32 0, i64 9, !dbg !3573
  store i8 %conv21, i8* %arrayidx23, align 1, !dbg !3574, !tbaa !3415
  %27 = load i8, i8* %aware, align 1, !dbg !3575, !tbaa !3415
  %tobool = icmp ne i8 %27, 0, !dbg !3575
  br i1 %tobool, label %if.then.24, label %if.end, !dbg !3577

if.then.24:                                       ; preds = %if.then
  %28 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !3578, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !3580
  %29 = load i64, i64* %ob_refcnt, align 8, !dbg !3581, !tbaa !2632
  %inc = add i64 %29, 1, !dbg !3581
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3581, !tbaa !2632
  %30 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !3582, !tbaa !2563
  %31 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3583, !tbaa !2563
  %tzinfo25 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %31, i32 0, i32 4, !dbg !3584
  store %struct._object* %30, %struct._object** %tzinfo25, align 8, !dbg !3585, !tbaa !3586
  br label %if.end, !dbg !3587

if.end:                                           ; preds = %if.then.24, %if.then
  br label %if.end.26, !dbg !3588

if.end.26:                                        ; preds = %if.end, %entry
  %32 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self, align 8, !dbg !3589, !tbaa !2563
  %33 = bitcast %struct.PyDateTime_DateTime* %32 to %struct._object*, !dbg !3590
  call void @llvm.lifetime.end(i64 1, i8* %aware) #1, !dbg !3591
  %34 = bitcast %struct.PyDateTime_DateTime** %self to i8*, !dbg !3591
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !3591
  ret %struct._object* %33, !dbg !3592
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @create_timezone(%struct._object* %offset, %struct._object* %name) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %offset.addr = alloca %struct._object*, align 8
  %name.addr = alloca %struct._object*, align 8
  %self = alloca %struct.PyDateTime_TimeZone*, align 8
  %type = alloca %struct._typeobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct._object* %offset, %struct._object** %offset.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %offset.addr, metadata !2368, metadata !2553), !dbg !3593
  store %struct._object* %name, %struct._object** %name.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %name.addr, metadata !2369, metadata !2553), !dbg !3594
  %0 = bitcast %struct.PyDateTime_TimeZone** %self to i8*, !dbg !3595
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3595
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self, metadata !2370, metadata !2553), !dbg !3596
  %1 = bitcast %struct._typeobject** %type to i8*, !dbg !3597
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3597
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type, metadata !2371, metadata !2553), !dbg !3598
  store %struct._typeobject* @PyDateTime_TimeZoneType, %struct._typeobject** %type, align 8, !dbg !3598, !tbaa !2563
  %2 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !3599, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 36, !dbg !3600
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3600, !tbaa !3345
  %4 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !3601, !tbaa !2563
  %call = call %struct._object* %3(%struct._typeobject* %4, i64 0), !dbg !3599
  %5 = bitcast %struct._object* %call to %struct.PyDateTime_TimeZone*, !dbg !3602
  store %struct.PyDateTime_TimeZone* %5, %struct.PyDateTime_TimeZone** %self, align 8, !dbg !3603, !tbaa !2563
  %6 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self, align 8, !dbg !3604, !tbaa !2563
  %cmp = icmp eq %struct.PyDateTime_TimeZone* %6, null, !dbg !3606
  br i1 %cmp, label %if.then, label %if.end, !dbg !3607

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3608
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3608

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !3610, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !3611
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !3612, !tbaa !2632
  %inc = add i64 %8, 1, !dbg !3612
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3612, !tbaa !2632
  %9 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !3613, !tbaa !2563
  %10 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self, align 8, !dbg !3614, !tbaa !2563
  %offset1 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %10, i32 0, i32 1, !dbg !3615
  store %struct._object* %9, %struct._object** %offset1, align 8, !dbg !3616, !tbaa !3617
  br label %do.body, !dbg !3619

do.body:                                          ; preds = %if.end
  %11 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !3620
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !3620
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !2372, metadata !2553), !dbg !3622
  %12 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !3623, !tbaa !2563
  store %struct._object* %12, %struct._object** %_py_xincref_tmp, align 8, !dbg !3622, !tbaa !2563
  %13 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !3624, !tbaa !2563
  %cmp2 = icmp ne %struct._object* %13, null, !dbg !3626
  br i1 %cmp2, label %if.then.3, label %if.end.6, !dbg !3627

if.then.3:                                        ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !3628, !tbaa !2563
  %ob_refcnt4 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !3630
  %15 = load i64, i64* %ob_refcnt4, align 8, !dbg !3631, !tbaa !2632
  %inc5 = add i64 %15, 1, !dbg !3631
  store i64 %inc5, i64* %ob_refcnt4, align 8, !dbg !3631, !tbaa !2632
  br label %if.end.6, !dbg !3632

if.end.6:                                         ; preds = %if.then.3, %do.body
  %16 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !3633
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !3633
  br label %do.cond, !dbg !3636

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !3637

do.end:                                           ; preds = %do.cond
  %17 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !3639, !tbaa !2563
  %18 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self, align 8, !dbg !3640, !tbaa !2563
  %name7 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %18, i32 0, i32 2, !dbg !3641
  store %struct._object* %17, %struct._object** %name7, align 8, !dbg !3642, !tbaa !3643
  %19 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self, align 8, !dbg !3644, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_TimeZone* %19 to %struct._object*, !dbg !3645
  store %struct._object* %20, %struct._object** %retval, !dbg !3646
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3646

cleanup:                                          ; preds = %do.end, %if.then
  %21 = bitcast %struct._typeobject** %type to i8*, !dbg !3647
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !3647
  %22 = bitcast %struct.PyDateTime_TimeZone** %self to i8*, !dbg !3647
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !3647
  %23 = load %struct._object*, %struct._object** %retval, !dbg !3647
  ret %struct._object* %23, !dbg !3647
}

declare i32 @PyModule_AddIntConstant(%struct._object*, i8*, i64) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyCapsule_New(i8*, i8*, void (%struct._object*)*) #3

declare %struct._object* @PyLong_FromLong(i64) #3

declare %struct._object* @PyLong_FromDouble(double) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_repr(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !503, metadata !2553), !dbg !3648
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3649, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Date* %0 to %struct._object*, !dbg !3650
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !3651
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3651, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 1, !dbg !3652
  %3 = load i8*, i8** %tp_name, align 8, !dbg !3652, !tbaa !3653
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3654, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !3655
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !3656
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3656, !tbaa !3415
  %conv = zext i8 %5 to i32, !dbg !3656
  %shl = shl i32 %conv, 8, !dbg !3657
  %6 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3658, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %6, i32 0, i32 3, !dbg !3659
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !3660
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !3660, !tbaa !3415
  %conv3 = zext i8 %7 to i32, !dbg !3660
  %or = or i32 %shl, %conv3, !dbg !3661
  %8 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3662, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %8, i32 0, i32 3, !dbg !3663
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !3664
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3664, !tbaa !3415
  %conv6 = zext i8 %9 to i32, !dbg !3665
  %10 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3666, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %10, i32 0, i32 3, !dbg !3667
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !3668
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !3668, !tbaa !3415
  %conv9 = zext i8 %11 to i32, !dbg !3669
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* %3, i32 %or, i32 %conv6, i32 %conv9), !dbg !3670
  ret %struct._object* %call, !dbg !3671
}

; Function Attrs: nounwind uwtable
define internal i64 @date_hash(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !598, metadata !2553), !dbg !3672
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3673, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 1, !dbg !3675
  %1 = load i64, i64* %hashcode, align 8, !dbg !3675, !tbaa !3676
  %cmp = icmp eq i64 %1, -1, !dbg !3678
  br i1 %cmp, label %if.then, label %if.end, !dbg !3679

if.then:                                          ; preds = %entry
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3680, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !3681
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i32 0, i32 0, !dbg !3680
  %call = call i64 @generic_hash(i8* %arraydecay, i32 4), !dbg !3682
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3683, !tbaa !2563
  %hashcode1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %3, i32 0, i32 1, !dbg !3684
  store i64 %call, i64* %hashcode1, align 8, !dbg !3685, !tbaa !3676
  br label %if.end, !dbg !3683

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3686, !tbaa !2563
  %hashcode2 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 1, !dbg !3687
  %5 = load i64, i64* %hashcode2, align 8, !dbg !3687, !tbaa !3676
  ret i64 %5, !dbg !3688
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_str(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !607, metadata !2553), !dbg !3689
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !3690, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Date* %0 to %struct._object*, !dbg !3691
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %1, %struct._Py_Identifier* @PyId_isoformat, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)), !dbg !3692
  ret %struct._object* %call, !dbg !3693
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_richcompare(%struct._object* %self, %struct._object* %other, i32 %op) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %other.addr = alloca %struct._object*, align 8
  %op.addr = alloca i32, align 4
  %diff = alloca i32, align 4
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !610, metadata !2553), !dbg !3694
  store %struct._object* %other, %struct._object** %other.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %other.addr, metadata !611, metadata !2553), !dbg !3695
  store i32 %op, i32* %op.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !612, metadata !2553), !dbg !3696
  %0 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !3697, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !3698
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3698, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %1, @PyDateTime_DateType, !dbg !3699
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3700

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !3701, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !3703
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !3703, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %3, %struct._typeobject* @PyDateTime_DateType), !dbg !3704
  %tobool = icmp ne i32 %call, 0, !dbg !3704
  br i1 %tobool, label %if.then, label %if.else, !dbg !3705

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = bitcast i32* %diff to i8*, !dbg !3706
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !3706
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !613, metadata !2553), !dbg !3707
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !3708, !tbaa !2563
  %6 = bitcast %struct._object* %5 to %struct.PyDateTime_Date*, !dbg !3709
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %6, i32 0, i32 3, !dbg !3710
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i32 0, i32 0, !dbg !3711
  %7 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !3712, !tbaa !2563
  %8 = bitcast %struct._object* %7 to %struct.PyDateTime_Date*, !dbg !3713
  %data2 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %8, i32 0, i32 3, !dbg !3714
  %arraydecay3 = getelementptr inbounds [4 x i8], [4 x i8]* %data2, i32 0, i32 0, !dbg !3715
  %call4 = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay3, i64 4) #7, !dbg !3716
  store i32 %call4, i32* %diff, align 4, !dbg !3707, !tbaa !3325
  %9 = load i32, i32* %diff, align 4, !dbg !3717, !tbaa !3325
  %10 = load i32, i32* %op.addr, align 4, !dbg !3718, !tbaa !3325
  %call5 = call %struct._object* @diff_to_bool(i32 %9, i32 %10), !dbg !3719
  store %struct._object* %call5, %struct._object** %retval, !dbg !3720
  %11 = bitcast i32* %diff to i8*, !dbg !3721
  call void @llvm.lifetime.end(i64 4, i8* %11) #1, !dbg !3721
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3722, !tbaa !2632
  %inc = add i64 %12, 1, !dbg !3722
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3722, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !3723
  br label %return, !dbg !3723

return:                                           ; preds = %if.else, %if.then
  %13 = load %struct._object*, %struct._object** %retval, !dbg !3724
  ret %struct._object* %13, !dbg !3724
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %self = alloca %struct._object*, align 8
  %state = alloca %struct._object*, align 8
  %year = alloca i32, align 4
  %month = alloca i32, align 4
  %day = alloca i32, align 4
  %me = alloca %struct.PyDateTime_Date*, align 8
  %pdata = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !967, metadata !2553), !dbg !3725
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !968, metadata !2553), !dbg !3726
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !969, metadata !2553), !dbg !3727
  %0 = bitcast %struct._object** %self to i8*, !dbg !3728
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3728
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !970, metadata !2553), !dbg !3729
  store %struct._object* null, %struct._object** %self, align 8, !dbg !3729, !tbaa !2563
  %1 = bitcast %struct._object** %state to i8*, !dbg !3730
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3730
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !971, metadata !2553), !dbg !3731
  %2 = bitcast i32* %year to i8*, !dbg !3732
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !3732
  call void @llvm.dbg.declare(metadata i32* %year, metadata !972, metadata !2553), !dbg !3733
  %3 = bitcast i32* %month to i8*, !dbg !3734
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !3734
  call void @llvm.dbg.declare(metadata i32* %month, metadata !973, metadata !2553), !dbg !3735
  %4 = bitcast i32* %day to i8*, !dbg !3736
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !3736
  call void @llvm.dbg.declare(metadata i32* %day, metadata !974, metadata !2553), !dbg !3737
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3738, !tbaa !2563
  %6 = bitcast %struct._object* %5 to %struct.PyVarObject*, !dbg !3739
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1, !dbg !3740
  %7 = load i64, i64* %ob_size, align 8, !dbg !3740, !tbaa !3741
  %cmp = icmp eq i64 %7, 1, !dbg !3742
  br i1 %cmp, label %land.lhs.true, label %if.end.14, !dbg !3743

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3744, !tbaa !2563
  %9 = bitcast %struct._object* %8 to %struct.PyTupleObject*, !dbg !3745
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %9, i32 0, i32 1, !dbg !3746
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !3747
  %10 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3747, !tbaa !2563
  store %struct._object* %10, %struct._object** %state, align 8, !dbg !3748, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !3749
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3749, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 19, !dbg !3750
  %12 = load i64, i64* %tp_flags, align 8, !dbg !3750, !tbaa !3751
  %and = and i64 %12, 134217728, !dbg !3752
  %cmp1 = icmp ne i64 %and, 0, !dbg !3753
  br i1 %cmp1, label %land.lhs.true.2, label %if.end.14, !dbg !3754

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %13 = load %struct._object*, %struct._object** %state, align 8, !dbg !3755, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyVarObject*, !dbg !3756
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1, !dbg !3757
  %15 = load i64, i64* %ob_size3, align 8, !dbg !3757, !tbaa !3741
  %cmp4 = icmp eq i64 %15, 4, !dbg !3758
  br i1 %cmp4, label %land.lhs.true.5, label %if.end.14, !dbg !3759

land.lhs.true.5:                                  ; preds = %land.lhs.true.2
  %16 = load %struct._object*, %struct._object** %state, align 8, !dbg !3760, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyBytesObject*, !dbg !3761
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %17, i32 0, i32 2, !dbg !3762
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !3763
  %arrayidx6 = getelementptr i8, i8* %arraydecay, i64 2, !dbg !3764
  %18 = load i8, i8* %arrayidx6, align 1, !dbg !3764, !tbaa !3415
  %conv = sext i8 %18 to i32, !dbg !3765
  %sub = sub i32 %conv, 1, !dbg !3766
  %cmp7 = icmp ult i32 %sub, 12, !dbg !3767
  br i1 %cmp7, label %if.then, label %if.end.14, !dbg !3768

if.then:                                          ; preds = %land.lhs.true.5
  %19 = bitcast %struct.PyDateTime_Date** %me to i8*, !dbg !3769
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !3769
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %me, metadata !975, metadata !2553), !dbg !3770
  %20 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3771, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 36, !dbg !3772
  %21 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3772, !tbaa !3345
  %22 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3773, !tbaa !2563
  %call = call %struct._object* %21(%struct._typeobject* %22, i64 0), !dbg !3771
  %23 = bitcast %struct._object* %call to %struct.PyDateTime_Date*, !dbg !3774
  store %struct.PyDateTime_Date* %23, %struct.PyDateTime_Date** %me, align 8, !dbg !3775, !tbaa !2563
  %24 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %me, align 8, !dbg !3776, !tbaa !2563
  %cmp9 = icmp ne %struct.PyDateTime_Date* %24, null, !dbg !3777
  br i1 %cmp9, label %if.then.11, label %if.end, !dbg !3778

if.then.11:                                       ; preds = %if.then
  %25 = bitcast i8** %pdata to i8*, !dbg !3779
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !3779
  call void @llvm.dbg.declare(metadata i8** %pdata, metadata !978, metadata !2553), !dbg !3780
  %26 = load %struct._object*, %struct._object** %state, align 8, !dbg !3781, !tbaa !2563
  %27 = bitcast %struct._object* %26 to %struct.PyBytesObject*, !dbg !3782
  %ob_sval12 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %27, i32 0, i32 2, !dbg !3783
  %arraydecay13 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval12, i32 0, i32 0, !dbg !3784
  store i8* %arraydecay13, i8** %pdata, align 8, !dbg !3780, !tbaa !2563
  %28 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %me, align 8, !dbg !3785, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %28, i32 0, i32 3, !dbg !3786
  %29 = bitcast [4 x i8]* %data to i8*, !dbg !3787
  %30 = load i8*, i8** %pdata, align 8, !dbg !3788, !tbaa !2563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 4, i32 1, i1 false), !dbg !3787
  %31 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %me, align 8, !dbg !3789, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %31, i32 0, i32 1, !dbg !3790
  store i64 -1, i64* %hashcode, align 8, !dbg !3791, !tbaa !3676
  %32 = bitcast i8** %pdata to i8*, !dbg !3792
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !3792
  br label %if.end, !dbg !3793

if.end:                                           ; preds = %if.then.11, %if.then
  %33 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %me, align 8, !dbg !3794, !tbaa !2563
  %34 = bitcast %struct.PyDateTime_Date* %33 to %struct._object*, !dbg !3795
  store %struct._object* %34, %struct._object** %retval, !dbg !3796
  store i32 1, i32* %cleanup.dest.slot
  %35 = bitcast %struct.PyDateTime_Date** %me to i8*, !dbg !3797
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !3797
  br label %cleanup

if.end.14:                                        ; preds = %land.lhs.true.5, %land.lhs.true.2, %land.lhs.true, %entry
  %36 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3798, !tbaa !2563
  %37 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !3800, !tbaa !2563
  %call15 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %36, %struct._object* %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @date_kws, i32 0, i32 0), i32* %year, i32* %month, i32* %day), !dbg !3801
  %tobool = icmp ne i32 %call15, 0, !dbg !3801
  br i1 %tobool, label %if.then.16, label %if.end.23, !dbg !3802

if.then.16:                                       ; preds = %if.end.14
  %38 = load i32, i32* %year, align 4, !dbg !3803, !tbaa !3325
  %39 = load i32, i32* %month, align 4, !dbg !3806, !tbaa !3325
  %40 = load i32, i32* %day, align 4, !dbg !3807, !tbaa !3325
  %call17 = call i32 @check_date_args(i32 %38, i32 %39, i32 %40), !dbg !3808
  %cmp18 = icmp slt i32 %call17, 0, !dbg !3809
  br i1 %cmp18, label %if.then.20, label %if.end.21, !dbg !3810

if.then.20:                                       ; preds = %if.then.16
  store %struct._object* null, %struct._object** %retval, !dbg !3811
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3811

if.end.21:                                        ; preds = %if.then.16
  %41 = load i32, i32* %year, align 4, !dbg !3812, !tbaa !3325
  %42 = load i32, i32* %month, align 4, !dbg !3813, !tbaa !3325
  %43 = load i32, i32* %day, align 4, !dbg !3814, !tbaa !3325
  %44 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3815, !tbaa !2563
  %call22 = call %struct._object* @new_date_ex(i32 %41, i32 %42, i32 %43, %struct._typeobject* %44), !dbg !3816
  store %struct._object* %call22, %struct._object** %self, align 8, !dbg !3817, !tbaa !2563
  br label %if.end.23, !dbg !3818

if.end.23:                                        ; preds = %if.end.21, %if.end.14
  %45 = load %struct._object*, %struct._object** %self, align 8, !dbg !3819, !tbaa !2563
  store %struct._object* %45, %struct._object** %retval, !dbg !3820
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3820

cleanup:                                          ; preds = %if.end.23, %if.then.20, %if.end
  %46 = bitcast i32* %day to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !3821
  %47 = bitcast i32* %month to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 4, i8* %47) #1, !dbg !3821
  %48 = bitcast i32* %year to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 4, i8* %48) #1, !dbg !3821
  %49 = bitcast %struct._object** %state to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !3821
  %50 = bitcast %struct._object** %self to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !3821
  %51 = load %struct._object*, %struct._object** %retval, !dbg !3821
  ret %struct._object* %51, !dbg !3821
}

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_add(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !506, metadata !2553), !dbg !3822
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !507, metadata !2553), !dbg !3823
  %0 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3824, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !3826
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3826, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %1, @PyDateTime_DateTimeType, !dbg !3827
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3828

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3829, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !3831
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !3831, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %3, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !3832
  %tobool = icmp ne i32 %call, 0, !dbg !3832
  br i1 %tobool, label %if.then, label %lor.lhs.false.2, !dbg !3833

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %4 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3834, !tbaa !2563
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !3836
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !3836, !tbaa !2640
  %cmp4 = icmp eq %struct._typeobject* %5, @PyDateTime_DateTimeType, !dbg !3837
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5, !dbg !3838

lor.lhs.false.5:                                  ; preds = %lor.lhs.false.2
  %6 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3839, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !3841
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !3841, !tbaa !2640
  %call7 = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !3842
  %tobool8 = icmp ne i32 %call7, 0, !dbg !3842
  br i1 %tobool8, label %if.then, label %if.end, !dbg !3843

if.then:                                          ; preds = %lor.lhs.false.5, %lor.lhs.false.2, %lor.lhs.false, %entry
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3844, !tbaa !2632
  %inc = add i64 %8, 1, !dbg !3844
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3844, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !3845
  br label %return, !dbg !3845

if.end:                                           ; preds = %lor.lhs.false.5
  %9 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3846, !tbaa !2563
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !3848
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !3848, !tbaa !2640
  %cmp10 = icmp eq %struct._typeobject* %10, @PyDateTime_DateType, !dbg !3849
  br i1 %cmp10, label %if.then.15, label %lor.lhs.false.11, !dbg !3850

lor.lhs.false.11:                                 ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3851, !tbaa !2563
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !3853
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !3853, !tbaa !2640
  %call13 = call i32 @PyType_IsSubtype(%struct._typeobject* %12, %struct._typeobject* @PyDateTime_DateType), !dbg !3854
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3854
  br i1 %tobool14, label %if.then.15, label %if.else, !dbg !3855

if.then.15:                                       ; preds = %lor.lhs.false.11, %if.end
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3856, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !3859
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !3859, !tbaa !2640
  %cmp17 = icmp eq %struct._typeobject* %14, @PyDateTime_DeltaType, !dbg !3860
  br i1 %cmp17, label %if.then.22, label %lor.lhs.false.18, !dbg !3861

lor.lhs.false.18:                                 ; preds = %if.then.15
  %15 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3862, !tbaa !2563
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !3864
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3864, !tbaa !2640
  %call20 = call i32 @PyType_IsSubtype(%struct._typeobject* %16, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3865
  %tobool21 = icmp ne i32 %call20, 0, !dbg !3865
  br i1 %tobool21, label %if.then.22, label %if.end.24, !dbg !3866

if.then.22:                                       ; preds = %lor.lhs.false.18, %if.then.15
  %17 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3867, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Date*, !dbg !3868
  %19 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3869, !tbaa !2563
  %20 = bitcast %struct._object* %19 to %struct.PyDateTime_Delta*, !dbg !3870
  %call23 = call %struct._object* @add_date_timedelta(%struct.PyDateTime_Date* %18, %struct.PyDateTime_Delta* %20, i32 0), !dbg !3871
  store %struct._object* %call23, %struct._object** %retval, !dbg !3872
  br label %return, !dbg !3872

if.end.24:                                        ; preds = %lor.lhs.false.18
  br label %if.end.34, !dbg !3873

if.else:                                          ; preds = %lor.lhs.false.11
  %21 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3874, !tbaa !2563
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !3877
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !3877, !tbaa !2640
  %cmp26 = icmp eq %struct._typeobject* %22, @PyDateTime_DeltaType, !dbg !3878
  br i1 %cmp26, label %if.then.31, label %lor.lhs.false.27, !dbg !3879

lor.lhs.false.27:                                 ; preds = %if.else
  %23 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3880, !tbaa !2563
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !3882
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !3882, !tbaa !2640
  %call29 = call i32 @PyType_IsSubtype(%struct._typeobject* %24, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3883
  %tobool30 = icmp ne i32 %call29, 0, !dbg !3883
  br i1 %tobool30, label %if.then.31, label %if.end.33, !dbg !3884

if.then.31:                                       ; preds = %lor.lhs.false.27, %if.else
  %25 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3885, !tbaa !2563
  %26 = bitcast %struct._object* %25 to %struct.PyDateTime_Date*, !dbg !3886
  %27 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3887, !tbaa !2563
  %28 = bitcast %struct._object* %27 to %struct.PyDateTime_Delta*, !dbg !3888
  %call32 = call %struct._object* @add_date_timedelta(%struct.PyDateTime_Date* %26, %struct.PyDateTime_Delta* %28, i32 0), !dbg !3889
  store %struct._object* %call32, %struct._object** %retval, !dbg !3890
  br label %return, !dbg !3890

if.end.33:                                        ; preds = %lor.lhs.false.27
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.end.24
  %29 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3891, !tbaa !2632
  %inc35 = add i64 %29, 1, !dbg !3891
  store i64 %inc35, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3891, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !3892
  br label %return, !dbg !3892

return:                                           ; preds = %if.end.34, %if.then.31, %if.then.22, %if.then
  %30 = load %struct._object*, %struct._object** %retval, !dbg !3893
  ret %struct._object* %30, !dbg !3893
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_subtract(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %left_ord = alloca i32, align 4
  %right_ord = alloca i32, align 4
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !586, metadata !2553), !dbg !3894
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !587, metadata !2553), !dbg !3895
  %0 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3896, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !3898
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3898, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %1, @PyDateTime_DateTimeType, !dbg !3899
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3900

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3901, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !3903
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !3903, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %3, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !3904
  %tobool = icmp ne i32 %call, 0, !dbg !3904
  br i1 %tobool, label %if.then, label %lor.lhs.false.2, !dbg !3905

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %4 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3906, !tbaa !2563
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !3908
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !3908, !tbaa !2640
  %cmp4 = icmp eq %struct._typeobject* %5, @PyDateTime_DateTimeType, !dbg !3909
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5, !dbg !3910

lor.lhs.false.5:                                  ; preds = %lor.lhs.false.2
  %6 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3911, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !3913
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !3913, !tbaa !2640
  %call7 = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !3914
  %tobool8 = icmp ne i32 %call7, 0, !dbg !3914
  br i1 %tobool8, label %if.then, label %if.end, !dbg !3915

if.then:                                          ; preds = %lor.lhs.false.5, %lor.lhs.false.2, %lor.lhs.false, %entry
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3916, !tbaa !2632
  %inc = add i64 %8, 1, !dbg !3916
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !3916, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !3917
  br label %return, !dbg !3917

if.end:                                           ; preds = %lor.lhs.false.5
  %9 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3918, !tbaa !2563
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !3919
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !3919, !tbaa !2640
  %cmp10 = icmp eq %struct._typeobject* %10, @PyDateTime_DateType, !dbg !3920
  br i1 %cmp10, label %if.then.15, label %lor.lhs.false.11, !dbg !3921

lor.lhs.false.11:                                 ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3922, !tbaa !2563
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !3924
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !3924, !tbaa !2640
  %call13 = call i32 @PyType_IsSubtype(%struct._typeobject* %12, %struct._typeobject* @PyDateTime_DateType), !dbg !3925
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3925
  br i1 %tobool14, label %if.then.15, label %if.end.60, !dbg !3926

if.then.15:                                       ; preds = %lor.lhs.false.11, %if.end
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3927, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !3928
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !3928, !tbaa !2640
  %cmp17 = icmp eq %struct._typeobject* %14, @PyDateTime_DateType, !dbg !3929
  br i1 %cmp17, label %if.then.22, label %lor.lhs.false.18, !dbg !3930

lor.lhs.false.18:                                 ; preds = %if.then.15
  %15 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3931, !tbaa !2563
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !3933
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3933, !tbaa !2640
  %call20 = call i32 @PyType_IsSubtype(%struct._typeobject* %16, %struct._typeobject* @PyDateTime_DateType), !dbg !3934
  %tobool21 = icmp ne i32 %call20, 0, !dbg !3934
  br i1 %tobool21, label %if.then.22, label %if.end.49, !dbg !3935

if.then.22:                                       ; preds = %lor.lhs.false.18, %if.then.15
  %17 = bitcast i32* %left_ord to i8*, !dbg !3936
  call void @llvm.lifetime.start(i64 4, i8* %17) #1, !dbg !3936
  call void @llvm.dbg.declare(metadata i32* %left_ord, metadata !588, metadata !2553), !dbg !3937
  %18 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3938, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Date*, !dbg !3939
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %19, i32 0, i32 3, !dbg !3940
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !3941
  %20 = load i8, i8* %arrayidx, align 1, !dbg !3941, !tbaa !3415
  %conv = zext i8 %20 to i32, !dbg !3941
  %shl = shl i32 %conv, 8, !dbg !3942
  %21 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3943, !tbaa !2563
  %22 = bitcast %struct._object* %21 to %struct.PyDateTime_Date*, !dbg !3944
  %data23 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %22, i32 0, i32 3, !dbg !3945
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %data23, i32 0, i64 1, !dbg !3946
  %23 = load i8, i8* %arrayidx24, align 1, !dbg !3946, !tbaa !3415
  %conv25 = zext i8 %23 to i32, !dbg !3946
  %or = or i32 %shl, %conv25, !dbg !3947
  %24 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3948, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyDateTime_Date*, !dbg !3949
  %data26 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %25, i32 0, i32 3, !dbg !3950
  %arrayidx27 = getelementptr [4 x i8], [4 x i8]* %data26, i32 0, i64 2, !dbg !3951
  %26 = load i8, i8* %arrayidx27, align 1, !dbg !3951, !tbaa !3415
  %conv28 = zext i8 %26 to i32, !dbg !3952
  %27 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3953, !tbaa !2563
  %28 = bitcast %struct._object* %27 to %struct.PyDateTime_Date*, !dbg !3954
  %data29 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %28, i32 0, i32 3, !dbg !3955
  %arrayidx30 = getelementptr [4 x i8], [4 x i8]* %data29, i32 0, i64 3, !dbg !3956
  %29 = load i8, i8* %arrayidx30, align 1, !dbg !3956, !tbaa !3415
  %conv31 = zext i8 %29 to i32, !dbg !3957
  %call32 = call i32 @ymd_to_ord(i32 %or, i32 %conv28, i32 %conv31), !dbg !3958
  store i32 %call32, i32* %left_ord, align 4, !dbg !3937, !tbaa !3325
  %30 = bitcast i32* %right_ord to i8*, !dbg !3959
  call void @llvm.lifetime.start(i64 4, i8* %30) #1, !dbg !3959
  call void @llvm.dbg.declare(metadata i32* %right_ord, metadata !593, metadata !2553), !dbg !3960
  %31 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3961, !tbaa !2563
  %32 = bitcast %struct._object* %31 to %struct.PyDateTime_Date*, !dbg !3962
  %data33 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %32, i32 0, i32 3, !dbg !3963
  %arrayidx34 = getelementptr [4 x i8], [4 x i8]* %data33, i32 0, i64 0, !dbg !3964
  %33 = load i8, i8* %arrayidx34, align 1, !dbg !3964, !tbaa !3415
  %conv35 = zext i8 %33 to i32, !dbg !3964
  %shl36 = shl i32 %conv35, 8, !dbg !3965
  %34 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3966, !tbaa !2563
  %35 = bitcast %struct._object* %34 to %struct.PyDateTime_Date*, !dbg !3967
  %data37 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %35, i32 0, i32 3, !dbg !3968
  %arrayidx38 = getelementptr [4 x i8], [4 x i8]* %data37, i32 0, i64 1, !dbg !3969
  %36 = load i8, i8* %arrayidx38, align 1, !dbg !3969, !tbaa !3415
  %conv39 = zext i8 %36 to i32, !dbg !3969
  %or40 = or i32 %shl36, %conv39, !dbg !3970
  %37 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3971, !tbaa !2563
  %38 = bitcast %struct._object* %37 to %struct.PyDateTime_Date*, !dbg !3972
  %data41 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %38, i32 0, i32 3, !dbg !3973
  %arrayidx42 = getelementptr [4 x i8], [4 x i8]* %data41, i32 0, i64 2, !dbg !3974
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !3974, !tbaa !3415
  %conv43 = zext i8 %39 to i32, !dbg !3975
  %40 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3976, !tbaa !2563
  %41 = bitcast %struct._object* %40 to %struct.PyDateTime_Date*, !dbg !3977
  %data44 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %41, i32 0, i32 3, !dbg !3978
  %arrayidx45 = getelementptr [4 x i8], [4 x i8]* %data44, i32 0, i64 3, !dbg !3979
  %42 = load i8, i8* %arrayidx45, align 1, !dbg !3979, !tbaa !3415
  %conv46 = zext i8 %42 to i32, !dbg !3980
  %call47 = call i32 @ymd_to_ord(i32 %or40, i32 %conv43, i32 %conv46), !dbg !3981
  store i32 %call47, i32* %right_ord, align 4, !dbg !3960, !tbaa !3325
  %43 = load i32, i32* %left_ord, align 4, !dbg !3982, !tbaa !3325
  %44 = load i32, i32* %right_ord, align 4, !dbg !3983, !tbaa !3325
  %sub = sub i32 %43, %44, !dbg !3984
  %call48 = call %struct._object* @new_delta_ex(i32 %sub, i32 0, i32 0, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3985
  store %struct._object* %call48, %struct._object** %retval, !dbg !3986
  %45 = bitcast i32* %right_ord to i8*, !dbg !3987
  call void @llvm.lifetime.end(i64 4, i8* %45) #1, !dbg !3987
  %46 = bitcast i32* %left_ord to i8*, !dbg !3987
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !3987
  br label %return

if.end.49:                                        ; preds = %lor.lhs.false.18
  %47 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3988, !tbaa !2563
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !3990
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !3990, !tbaa !2640
  %cmp51 = icmp eq %struct._typeobject* %48, @PyDateTime_DeltaType, !dbg !3991
  br i1 %cmp51, label %if.then.57, label %lor.lhs.false.53, !dbg !3992

lor.lhs.false.53:                                 ; preds = %if.end.49
  %49 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !3993, !tbaa !2563
  %ob_type54 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !3995
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type54, align 8, !dbg !3995, !tbaa !2640
  %call55 = call i32 @PyType_IsSubtype(%struct._typeobject* %50, %struct._typeobject* @PyDateTime_DeltaType), !dbg !3996
  %tobool56 = icmp ne i32 %call55, 0, !dbg !3996
  br i1 %tobool56, label %if.then.57, label %if.end.59, !dbg !3997

if.then.57:                                       ; preds = %lor.lhs.false.53, %if.end.49
  %51 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !3998, !tbaa !2563
  %52 = bitcast %struct._object* %51 to %struct.PyDateTime_Date*, !dbg !4000
  %53 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !4001, !tbaa !2563
  %54 = bitcast %struct._object* %53 to %struct.PyDateTime_Delta*, !dbg !4002
  %call58 = call %struct._object* @add_date_timedelta(%struct.PyDateTime_Date* %52, %struct.PyDateTime_Delta* %54, i32 1), !dbg !4003
  store %struct._object* %call58, %struct._object** %retval, !dbg !4004
  br label %return, !dbg !4004

if.end.59:                                        ; preds = %lor.lhs.false.53
  br label %if.end.60, !dbg !4005

if.end.60:                                        ; preds = %if.end.59, %lor.lhs.false.11
  %55 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !4006, !tbaa !2632
  %inc61 = add i64 %55, 1, !dbg !4006
  store i64 %inc61, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !4006, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !4007
  br label %return, !dbg !4007

return:                                           ; preds = %if.end.60, %if.then.57, %if.then.22, %if.then
  %56 = load %struct._object*, %struct._object** %retval, !dbg !4008
  ret %struct._object* %56, !dbg !4008
}

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @add_date_timedelta(%struct.PyDateTime_Date* %date, %struct.PyDateTime_Delta* %delta, i32 %negate) #0 {
entry:
  %date.addr = alloca %struct.PyDateTime_Date*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %negate.addr = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  %year = alloca i32, align 4
  %month = alloca i32, align 4
  %deltadays = alloca i32, align 4
  %day = alloca i32, align 4
  store %struct.PyDateTime_Date* %date, %struct.PyDateTime_Date** %date.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %date.addr, metadata !512, metadata !2553), !dbg !4009
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !513, metadata !2553), !dbg !4010
  store i32 %negate, i32* %negate.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %negate.addr, metadata !514, metadata !2553), !dbg !4011
  %0 = bitcast %struct._object** %result to i8*, !dbg !4012
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4012
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !515, metadata !2553), !dbg !4013
  store %struct._object* null, %struct._object** %result, align 8, !dbg !4013, !tbaa !2563
  %1 = bitcast i32* %year to i8*, !dbg !4014
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !4014
  call void @llvm.dbg.declare(metadata i32* %year, metadata !516, metadata !2553), !dbg !4015
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4016, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !4017
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4018
  %3 = load i8, i8* %arrayidx, align 1, !dbg !4018, !tbaa !3415
  %conv = zext i8 %3 to i32, !dbg !4018
  %shl = shl i32 %conv, 8, !dbg !4019
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4020, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !4021
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4022
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !4022, !tbaa !3415
  %conv3 = zext i8 %5 to i32, !dbg !4022
  %or = or i32 %shl, %conv3, !dbg !4023
  store i32 %or, i32* %year, align 4, !dbg !4015, !tbaa !3325
  %6 = bitcast i32* %month to i8*, !dbg !4024
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !4024
  call void @llvm.dbg.declare(metadata i32* %month, metadata !517, metadata !2553), !dbg !4025
  %7 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4026, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %7, i32 0, i32 3, !dbg !4027
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4028
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !4028, !tbaa !3415
  %conv6 = zext i8 %8 to i32, !dbg !4029
  store i32 %conv6, i32* %month, align 4, !dbg !4025, !tbaa !3325
  %9 = bitcast i32* %deltadays to i8*, !dbg !4030
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !4030
  call void @llvm.dbg.declare(metadata i32* %deltadays, metadata !518, metadata !2553), !dbg !4031
  %10 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !4032, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %10, i32 0, i32 2, !dbg !4033
  %11 = load i32, i32* %days, align 4, !dbg !4033, !tbaa !3363
  store i32 %11, i32* %deltadays, align 4, !dbg !4031, !tbaa !3325
  %12 = bitcast i32* %day to i8*, !dbg !4034
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !4034
  call void @llvm.dbg.declare(metadata i32* %day, metadata !519, metadata !2553), !dbg !4035
  %13 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4036, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %13, i32 0, i32 3, !dbg !4037
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4038
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !4038, !tbaa !3415
  %conv9 = zext i8 %14 to i32, !dbg !4039
  %15 = load i32, i32* %negate.addr, align 4, !dbg !4040, !tbaa !3325
  %tobool = icmp ne i32 %15, 0, !dbg !4040
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4040

cond.true:                                        ; preds = %entry
  %16 = load i32, i32* %deltadays, align 4, !dbg !4041, !tbaa !3325
  %sub = sub i32 0, %16, !dbg !4043
  br label %cond.end, !dbg !4040

cond.false:                                       ; preds = %entry
  %17 = load i32, i32* %deltadays, align 4, !dbg !4044, !tbaa !3325
  br label %cond.end, !dbg !4040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %17, %cond.false ], !dbg !4040
  %add = add i32 %conv9, %cond, !dbg !4046
  store i32 %add, i32* %day, align 4, !dbg !4035, !tbaa !3325
  %call = call i32 @normalize_date(i32* %year, i32* %month, i32* %day), !dbg !4049
  %cmp = icmp sge i32 %call, 0, !dbg !4051
  br i1 %cmp, label %if.then, label %if.end, !dbg !4052

if.then:                                          ; preds = %cond.end
  %18 = load i32, i32* %year, align 4, !dbg !4053, !tbaa !3325
  %19 = load i32, i32* %month, align 4, !dbg !4054, !tbaa !3325
  %20 = load i32, i32* %day, align 4, !dbg !4055, !tbaa !3325
  %call11 = call %struct._object* @new_date_ex(i32 %18, i32 %19, i32 %20, %struct._typeobject* @PyDateTime_DateType), !dbg !4056
  store %struct._object* %call11, %struct._object** %result, align 8, !dbg !4057, !tbaa !2563
  br label %if.end, !dbg !4058

if.end:                                           ; preds = %if.then, %cond.end
  %21 = load %struct._object*, %struct._object** %result, align 8, !dbg !4059, !tbaa !2563
  %22 = bitcast i32* %day to i8*, !dbg !4060
  call void @llvm.lifetime.end(i64 4, i8* %22) #1, !dbg !4060
  %23 = bitcast i32* %deltadays to i8*, !dbg !4060
  call void @llvm.lifetime.end(i64 4, i8* %23) #1, !dbg !4060
  %24 = bitcast i32* %month to i8*, !dbg !4060
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !4060
  %25 = bitcast i32* %year to i8*, !dbg !4060
  call void @llvm.lifetime.end(i64 4, i8* %25) #1, !dbg !4060
  %26 = bitcast %struct._object** %result to i8*, !dbg !4060
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !4060
  ret %struct._object* %21, !dbg !4061
}

; Function Attrs: nounwind uwtable
define internal i32 @normalize_date(i32* %year, i32* %month, i32* %day) #0 {
entry:
  %year.addr = alloca i32*, align 8
  %month.addr = alloca i32*, align 8
  %day.addr = alloca i32*, align 8
  store i32* %year, i32** %year.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %year.addr, metadata !525, metadata !2553), !dbg !4062
  store i32* %month, i32** %month.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %month.addr, metadata !526, metadata !2553), !dbg !4063
  store i32* %day, i32** %day.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %day.addr, metadata !527, metadata !2553), !dbg !4064
  %0 = load i32*, i32** %year.addr, align 8, !dbg !4065, !tbaa !2563
  %1 = load i32*, i32** %month.addr, align 8, !dbg !4066, !tbaa !2563
  %2 = load i32*, i32** %day.addr, align 8, !dbg !4067, !tbaa !2563
  %call = call i32 @normalize_y_m_d(i32* %0, i32* %1, i32* %2), !dbg !4068
  ret i32 %call, !dbg !4069
}

; Function Attrs: nounwind uwtable
define internal i32 @normalize_y_m_d(i32* %y, i32* %m, i32* %d) #0 {
entry:
  %retval = alloca i32, align 4
  %y.addr = alloca i32*, align 8
  %m.addr = alloca i32*, align 8
  %d.addr = alloca i32*, align 8
  %dim = alloca i32, align 4
  %ordinal = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i32* %y, i32** %y.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !530, metadata !2553), !dbg !4070
  store i32* %m, i32** %m.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %m.addr, metadata !531, metadata !2553), !dbg !4071
  store i32* %d, i32** %d.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %d.addr, metadata !532, metadata !2553), !dbg !4072
  %0 = bitcast i32* %dim to i8*, !dbg !4073
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4073
  call void @llvm.dbg.declare(metadata i32* %dim, metadata !533, metadata !2553), !dbg !4074
  %1 = load i32*, i32** %y.addr, align 8, !dbg !4075, !tbaa !2563
  %2 = load i32, i32* %1, align 4, !dbg !4076, !tbaa !3325
  %3 = load i32*, i32** %m.addr, align 8, !dbg !4077, !tbaa !2563
  %4 = load i32, i32* %3, align 4, !dbg !4078, !tbaa !3325
  %call = call i32 @days_in_month(i32 %2, i32 %4), !dbg !4079
  store i32 %call, i32* %dim, align 4, !dbg !4080, !tbaa !3325
  %5 = load i32*, i32** %d.addr, align 8, !dbg !4081, !tbaa !2563
  %6 = load i32, i32* %5, align 4, !dbg !4082, !tbaa !3325
  %cmp = icmp slt i32 %6, 1, !dbg !4083
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4084

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32*, i32** %d.addr, align 8, !dbg !4085, !tbaa !2563
  %8 = load i32, i32* %7, align 4, !dbg !4087, !tbaa !3325
  %9 = load i32, i32* %dim, align 4, !dbg !4088, !tbaa !3325
  %cmp1 = icmp sgt i32 %8, %9, !dbg !4089
  br i1 %cmp1, label %if.then, label %if.end.25, !dbg !4090

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load i32*, i32** %d.addr, align 8, !dbg !4091, !tbaa !2563
  %11 = load i32, i32* %10, align 4, !dbg !4092, !tbaa !3325
  %cmp2 = icmp eq i32 %11, 0, !dbg !4093
  br i1 %cmp2, label %if.then.3, label %if.else.8, !dbg !4094

if.then.3:                                        ; preds = %if.then
  %12 = load i32*, i32** %m.addr, align 8, !dbg !4095, !tbaa !2563
  %13 = load i32, i32* %12, align 4, !dbg !4097, !tbaa !3325
  %dec = add i32 %13, -1, !dbg !4097
  store i32 %dec, i32* %12, align 4, !dbg !4097, !tbaa !3325
  %14 = load i32*, i32** %m.addr, align 8, !dbg !4098, !tbaa !2563
  %15 = load i32, i32* %14, align 4, !dbg !4100, !tbaa !3325
  %cmp4 = icmp sgt i32 %15, 0, !dbg !4101
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !4102

if.then.5:                                        ; preds = %if.then.3
  %16 = load i32*, i32** %y.addr, align 8, !dbg !4103, !tbaa !2563
  %17 = load i32, i32* %16, align 4, !dbg !4104, !tbaa !3325
  %18 = load i32*, i32** %m.addr, align 8, !dbg !4105, !tbaa !2563
  %19 = load i32, i32* %18, align 4, !dbg !4106, !tbaa !3325
  %call6 = call i32 @days_in_month(i32 %17, i32 %19), !dbg !4107
  %20 = load i32*, i32** %d.addr, align 8, !dbg !4108, !tbaa !2563
  store i32 %call6, i32* %20, align 4, !dbg !4109, !tbaa !3325
  br label %if.end, !dbg !4110

if.else:                                          ; preds = %if.then.3
  %21 = load i32*, i32** %y.addr, align 8, !dbg !4111, !tbaa !2563
  %22 = load i32, i32* %21, align 4, !dbg !4113, !tbaa !3325
  %dec7 = add i32 %22, -1, !dbg !4113
  store i32 %dec7, i32* %21, align 4, !dbg !4113, !tbaa !3325
  %23 = load i32*, i32** %m.addr, align 8, !dbg !4114, !tbaa !2563
  store i32 12, i32* %23, align 4, !dbg !4115, !tbaa !3325
  %24 = load i32*, i32** %d.addr, align 8, !dbg !4116, !tbaa !2563
  store i32 31, i32* %24, align 4, !dbg !4117, !tbaa !3325
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  br label %if.end.24, !dbg !4118

if.else.8:                                        ; preds = %if.then
  %25 = load i32*, i32** %d.addr, align 8, !dbg !4119, !tbaa !2563
  %26 = load i32, i32* %25, align 4, !dbg !4120, !tbaa !3325
  %27 = load i32, i32* %dim, align 4, !dbg !4121, !tbaa !3325
  %add = add i32 %27, 1, !dbg !4122
  %cmp9 = icmp eq i32 %26, %add, !dbg !4123
  br i1 %cmp9, label %if.then.10, label %if.else.15, !dbg !4124

if.then.10:                                       ; preds = %if.else.8
  %28 = load i32*, i32** %m.addr, align 8, !dbg !4125, !tbaa !2563
  %29 = load i32, i32* %28, align 4, !dbg !4127, !tbaa !3325
  %inc = add i32 %29, 1, !dbg !4127
  store i32 %inc, i32* %28, align 4, !dbg !4127, !tbaa !3325
  %30 = load i32*, i32** %d.addr, align 8, !dbg !4128, !tbaa !2563
  store i32 1, i32* %30, align 4, !dbg !4129, !tbaa !3325
  %31 = load i32*, i32** %m.addr, align 8, !dbg !4130, !tbaa !2563
  %32 = load i32, i32* %31, align 4, !dbg !4132, !tbaa !3325
  %cmp11 = icmp sgt i32 %32, 12, !dbg !4133
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !4134

if.then.12:                                       ; preds = %if.then.10
  %33 = load i32*, i32** %m.addr, align 8, !dbg !4135, !tbaa !2563
  store i32 1, i32* %33, align 4, !dbg !4137, !tbaa !3325
  %34 = load i32*, i32** %y.addr, align 8, !dbg !4138, !tbaa !2563
  %35 = load i32, i32* %34, align 4, !dbg !4139, !tbaa !3325
  %inc13 = add i32 %35, 1, !dbg !4139
  store i32 %inc13, i32* %34, align 4, !dbg !4139, !tbaa !3325
  br label %if.end.14, !dbg !4140

if.end.14:                                        ; preds = %if.then.12, %if.then.10
  br label %if.end.23, !dbg !4141

if.else.15:                                       ; preds = %if.else.8
  %36 = bitcast i32* %ordinal to i8*, !dbg !4142
  call void @llvm.lifetime.start(i64 4, i8* %36) #1, !dbg !4142
  call void @llvm.dbg.declare(metadata i32* %ordinal, metadata !534, metadata !2553), !dbg !4143
  %37 = load i32*, i32** %y.addr, align 8, !dbg !4144, !tbaa !2563
  %38 = load i32, i32* %37, align 4, !dbg !4145, !tbaa !3325
  %39 = load i32*, i32** %m.addr, align 8, !dbg !4146, !tbaa !2563
  %40 = load i32, i32* %39, align 4, !dbg !4147, !tbaa !3325
  %call16 = call i32 @ymd_to_ord(i32 %38, i32 %40, i32 1), !dbg !4148
  %41 = load i32*, i32** %d.addr, align 8, !dbg !4149, !tbaa !2563
  %42 = load i32, i32* %41, align 4, !dbg !4150, !tbaa !3325
  %add17 = add i32 %call16, %42, !dbg !4151
  %sub = sub i32 %add17, 1, !dbg !4152
  store i32 %sub, i32* %ordinal, align 4, !dbg !4143, !tbaa !3325
  %43 = load i32, i32* %ordinal, align 4, !dbg !4153, !tbaa !3325
  %cmp18 = icmp slt i32 %43, 1, !dbg !4155
  br i1 %cmp18, label %if.then.21, label %lor.lhs.false.19, !dbg !4156

lor.lhs.false.19:                                 ; preds = %if.else.15
  %44 = load i32, i32* %ordinal, align 4, !dbg !4157, !tbaa !3325
  %cmp20 = icmp sgt i32 %44, 3652059, !dbg !4159
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !4160

if.then.21:                                       ; preds = %lor.lhs.false.19, %if.else.15
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4161

if.else.22:                                       ; preds = %lor.lhs.false.19
  %45 = load i32, i32* %ordinal, align 4, !dbg !4163, !tbaa !3325
  %46 = load i32*, i32** %y.addr, align 8, !dbg !4165, !tbaa !2563
  %47 = load i32*, i32** %m.addr, align 8, !dbg !4166, !tbaa !2563
  %48 = load i32*, i32** %d.addr, align 8, !dbg !4167, !tbaa !2563
  call void @ord_to_ymd(i32 %45, i32* %46, i32* %47, i32* %48), !dbg !4168
  store i32 0, i32* %retval, !dbg !4169
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4169

cleanup:                                          ; preds = %if.then.21, %if.else.22
  %49 = bitcast i32* %ordinal to i8*, !dbg !4170
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !4170
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.30 [
    i32 2, label %error
  ]

if.end.23:                                        ; preds = %if.end.14
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.end
  br label %if.end.25, !dbg !4171

if.end.25:                                        ; preds = %if.end.24, %lor.lhs.false
  %50 = load i32*, i32** %y.addr, align 8, !dbg !4172, !tbaa !2563
  %51 = load i32, i32* %50, align 4, !dbg !4174, !tbaa !3325
  %cmp26 = icmp sle i32 1, %51, !dbg !4175
  br i1 %cmp26, label %land.lhs.true, label %if.end.29, !dbg !4176

land.lhs.true:                                    ; preds = %if.end.25
  %52 = load i32*, i32** %y.addr, align 8, !dbg !4177, !tbaa !2563
  %53 = load i32, i32* %52, align 4, !dbg !4179, !tbaa !3325
  %cmp27 = icmp sle i32 %53, 9999, !dbg !4180
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !4181

if.then.28:                                       ; preds = %land.lhs.true
  store i32 0, i32* %retval, !dbg !4182
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.30, !dbg !4182

if.end.29:                                        ; preds = %land.lhs.true, %if.end.25
  br label %error, !dbg !4183

error:                                            ; preds = %if.end.29, %cleanup
  %54 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !4186, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %54, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0)), !dbg !4187
  store i32 -1, i32* %retval, !dbg !4188
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.30, !dbg !4188

cleanup.30:                                       ; preds = %error, %cleanup, %if.then.28
  %55 = bitcast i32* %dim to i8*, !dbg !4189
  call void @llvm.lifetime.end(i64 4, i8* %55) #1, !dbg !4189
  %56 = load i32, i32* %retval, !dbg !4189
  ret i32 %56, !dbg !4189
}

; Function Attrs: nounwind uwtable
define internal i32 @days_in_month(i32 %year, i32 %month) #0 {
entry:
  %retval = alloca i32, align 4
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !544, metadata !2553), !dbg !4190
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !545, metadata !2553), !dbg !4191
  %0 = load i32, i32* %month.addr, align 4, !dbg !4192, !tbaa !3325
  %cmp = icmp eq i32 %0, 2, !dbg !4194
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4195

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %year.addr, align 4, !dbg !4196, !tbaa !3325
  %call = call i32 @is_leap(i32 %1), !dbg !4198
  %tobool = icmp ne i32 %call, 0, !dbg !4198
  br i1 %tobool, label %if.then, label %if.else, !dbg !4199

if.then:                                          ; preds = %land.lhs.true
  store i32 29, i32* %retval, !dbg !4200
  br label %return, !dbg !4200

if.else:                                          ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %month.addr, align 4, !dbg !4201, !tbaa !3325
  %idxprom = sext i32 %2 to i64, !dbg !4202
  %arrayidx = getelementptr [13 x i32], [13 x i32]* @_days_in_month, i32 0, i64 %idxprom, !dbg !4202
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4202, !tbaa !3325
  store i32 %3, i32* %retval, !dbg !4203
  br label %return, !dbg !4203

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, !dbg !4204
  ret i32 %4, !dbg !4204
}

; Function Attrs: nounwind uwtable
define internal i32 @ymd_to_ord(i32 %year, i32 %month, i32 %day) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !557, metadata !2553), !dbg !4205
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !558, metadata !2553), !dbg !4206
  store i32 %day, i32* %day.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %day.addr, metadata !559, metadata !2553), !dbg !4207
  %0 = load i32, i32* %year.addr, align 4, !dbg !4208, !tbaa !3325
  %call = call i32 @days_before_year(i32 %0), !dbg !4209
  %1 = load i32, i32* %year.addr, align 4, !dbg !4210, !tbaa !3325
  %2 = load i32, i32* %month.addr, align 4, !dbg !4211, !tbaa !3325
  %call1 = call i32 @days_before_month(i32 %1, i32 %2), !dbg !4212
  %add = add i32 %call, %call1, !dbg !4213
  %3 = load i32, i32* %day.addr, align 4, !dbg !4214, !tbaa !3325
  %add2 = add i32 %add, %3, !dbg !4215
  ret i32 %add2, !dbg !4216
}

; Function Attrs: nounwind uwtable
define internal void @ord_to_ymd(i32 %ordinal, i32* %year, i32* %month, i32* %day) #0 {
entry:
  %ordinal.addr = alloca i32, align 4
  %year.addr = alloca i32*, align 8
  %month.addr = alloca i32*, align 8
  %day.addr = alloca i32*, align 8
  %n = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n4 = alloca i32, align 4
  %n100 = alloca i32, align 4
  %n400 = alloca i32, align 4
  %leapyear = alloca i32, align 4
  %preceding = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i32 %ordinal, i32* %ordinal.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %ordinal.addr, metadata !573, metadata !2553), !dbg !4217
  store i32* %year, i32** %year.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %year.addr, metadata !574, metadata !2553), !dbg !4218
  store i32* %month, i32** %month.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %month.addr, metadata !575, metadata !2553), !dbg !4219
  store i32* %day, i32** %day.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %day.addr, metadata !576, metadata !2553), !dbg !4220
  %0 = bitcast i32* %n to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %n, metadata !577, metadata !2553), !dbg !4222
  %1 = bitcast i32* %n1 to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !578, metadata !2553), !dbg !4223
  %2 = bitcast i32* %n4 to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %n4, metadata !579, metadata !2553), !dbg !4224
  %3 = bitcast i32* %n100 to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %n100, metadata !580, metadata !2553), !dbg !4225
  %4 = bitcast i32* %n400 to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %n400, metadata !581, metadata !2553), !dbg !4226
  %5 = bitcast i32* %leapyear to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %leapyear, metadata !582, metadata !2553), !dbg !4227
  %6 = bitcast i32* %preceding to i8*, !dbg !4221
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %preceding, metadata !583, metadata !2553), !dbg !4228
  %7 = load i32, i32* %ordinal.addr, align 4, !dbg !4229, !tbaa !3325
  %dec = add i32 %7, -1, !dbg !4229
  store i32 %dec, i32* %ordinal.addr, align 4, !dbg !4229, !tbaa !3325
  %8 = load i32, i32* %ordinal.addr, align 4, !dbg !4230, !tbaa !3325
  %div = sdiv i32 %8, 146097, !dbg !4231
  store i32 %div, i32* %n400, align 4, !dbg !4232, !tbaa !3325
  %9 = load i32, i32* %ordinal.addr, align 4, !dbg !4233, !tbaa !3325
  %rem = srem i32 %9, 146097, !dbg !4234
  store i32 %rem, i32* %n, align 4, !dbg !4235, !tbaa !3325
  %10 = load i32, i32* %n400, align 4, !dbg !4236, !tbaa !3325
  %mul = mul i32 %10, 400, !dbg !4237
  %add = add i32 %mul, 1, !dbg !4238
  %11 = load i32*, i32** %year.addr, align 8, !dbg !4239, !tbaa !2563
  store i32 %add, i32* %11, align 4, !dbg !4240, !tbaa !3325
  %12 = load i32, i32* %n, align 4, !dbg !4241, !tbaa !3325
  %div1 = sdiv i32 %12, 36524, !dbg !4242
  store i32 %div1, i32* %n100, align 4, !dbg !4243, !tbaa !3325
  %13 = load i32, i32* %n, align 4, !dbg !4244, !tbaa !3325
  %rem2 = srem i32 %13, 36524, !dbg !4245
  store i32 %rem2, i32* %n, align 4, !dbg !4246, !tbaa !3325
  %14 = load i32, i32* %n, align 4, !dbg !4247, !tbaa !3325
  %div3 = sdiv i32 %14, 1461, !dbg !4248
  store i32 %div3, i32* %n4, align 4, !dbg !4249, !tbaa !3325
  %15 = load i32, i32* %n, align 4, !dbg !4250, !tbaa !3325
  %rem4 = srem i32 %15, 1461, !dbg !4251
  store i32 %rem4, i32* %n, align 4, !dbg !4252, !tbaa !3325
  %16 = load i32, i32* %n, align 4, !dbg !4253, !tbaa !3325
  %div5 = sdiv i32 %16, 365, !dbg !4254
  store i32 %div5, i32* %n1, align 4, !dbg !4255, !tbaa !3325
  %17 = load i32, i32* %n, align 4, !dbg !4256, !tbaa !3325
  %rem6 = srem i32 %17, 365, !dbg !4257
  store i32 %rem6, i32* %n, align 4, !dbg !4258, !tbaa !3325
  %18 = load i32, i32* %n100, align 4, !dbg !4259, !tbaa !3325
  %mul7 = mul i32 %18, 100, !dbg !4260
  %19 = load i32, i32* %n4, align 4, !dbg !4261, !tbaa !3325
  %mul8 = mul i32 %19, 4, !dbg !4262
  %add9 = add i32 %mul7, %mul8, !dbg !4263
  %20 = load i32, i32* %n1, align 4, !dbg !4264, !tbaa !3325
  %add10 = add i32 %add9, %20, !dbg !4265
  %21 = load i32*, i32** %year.addr, align 8, !dbg !4266, !tbaa !2563
  %22 = load i32, i32* %21, align 4, !dbg !4267, !tbaa !3325
  %add11 = add i32 %22, %add10, !dbg !4267
  store i32 %add11, i32* %21, align 4, !dbg !4267, !tbaa !3325
  %23 = load i32, i32* %n1, align 4, !dbg !4268, !tbaa !3325
  %cmp = icmp eq i32 %23, 4, !dbg !4270
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4271

lor.lhs.false:                                    ; preds = %entry
  %24 = load i32, i32* %n100, align 4, !dbg !4272, !tbaa !3325
  %cmp12 = icmp eq i32 %24, 4, !dbg !4274
  br i1 %cmp12, label %if.then, label %if.end, !dbg !4275

if.then:                                          ; preds = %lor.lhs.false, %entry
  %25 = load i32*, i32** %year.addr, align 8, !dbg !4276, !tbaa !2563
  %26 = load i32, i32* %25, align 4, !dbg !4278, !tbaa !3325
  %sub = sub i32 %26, 1, !dbg !4278
  store i32 %sub, i32* %25, align 4, !dbg !4278, !tbaa !3325
  %27 = load i32*, i32** %month.addr, align 8, !dbg !4279, !tbaa !2563
  store i32 12, i32* %27, align 4, !dbg !4280, !tbaa !3325
  %28 = load i32*, i32** %day.addr, align 8, !dbg !4281, !tbaa !2563
  store i32 31, i32* %28, align 4, !dbg !4282, !tbaa !3325
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4283

if.end:                                           ; preds = %lor.lhs.false
  %29 = load i32, i32* %n1, align 4, !dbg !4284, !tbaa !3325
  %cmp13 = icmp eq i32 %29, 3, !dbg !4285
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !4286

land.rhs:                                         ; preds = %if.end
  %30 = load i32, i32* %n4, align 4, !dbg !4287, !tbaa !3325
  %cmp14 = icmp ne i32 %30, 24, !dbg !4289
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !4290

lor.rhs:                                          ; preds = %land.rhs
  %31 = load i32, i32* %n100, align 4, !dbg !4291, !tbaa !3325
  %cmp15 = icmp eq i32 %31, 3, !dbg !4293
  br label %lor.end, !dbg !4290

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %32 = phi i1 [ true, %land.rhs ], [ %cmp15, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.end
  %33 = phi i1 [ false, %if.end ], [ %32, %lor.end ]
  %land.ext = zext i1 %33 to i32, !dbg !4294
  store i32 %land.ext, i32* %leapyear, align 4, !dbg !4296, !tbaa !3325
  %34 = load i32, i32* %n, align 4, !dbg !4297, !tbaa !3325
  %add16 = add i32 %34, 50, !dbg !4298
  %shr = ashr i32 %add16, 5, !dbg !4299
  %35 = load i32*, i32** %month.addr, align 8, !dbg !4300, !tbaa !2563
  store i32 %shr, i32* %35, align 4, !dbg !4301, !tbaa !3325
  %36 = load i32*, i32** %month.addr, align 8, !dbg !4302, !tbaa !2563
  %37 = load i32, i32* %36, align 4, !dbg !4303, !tbaa !3325
  %idxprom = sext i32 %37 to i64, !dbg !4304
  %arrayidx = getelementptr [13 x i32], [13 x i32]* @_days_before_month, i32 0, i64 %idxprom, !dbg !4304
  %38 = load i32, i32* %arrayidx, align 4, !dbg !4304, !tbaa !3325
  %39 = load i32*, i32** %month.addr, align 8, !dbg !4305, !tbaa !2563
  %40 = load i32, i32* %39, align 4, !dbg !4306, !tbaa !3325
  %cmp17 = icmp sgt i32 %40, 2, !dbg !4307
  br i1 %cmp17, label %land.rhs.18, label %land.end.19, !dbg !4308

land.rhs.18:                                      ; preds = %land.end
  %41 = load i32, i32* %leapyear, align 4, !dbg !4309, !tbaa !3325
  %tobool = icmp ne i32 %41, 0, !dbg !4308
  br label %land.end.19

land.end.19:                                      ; preds = %land.rhs.18, %land.end
  %42 = phi i1 [ false, %land.end ], [ %tobool, %land.rhs.18 ]
  %land.ext20 = zext i1 %42 to i32, !dbg !4310
  %add21 = add i32 %38, %land.ext20, !dbg !4311
  store i32 %add21, i32* %preceding, align 4, !dbg !4312, !tbaa !3325
  %43 = load i32, i32* %preceding, align 4, !dbg !4313, !tbaa !3325
  %44 = load i32, i32* %n, align 4, !dbg !4315, !tbaa !3325
  %cmp22 = icmp sgt i32 %43, %44, !dbg !4316
  br i1 %cmp22, label %if.then.23, label %if.end.26, !dbg !4317

if.then.23:                                       ; preds = %land.end.19
  %45 = load i32*, i32** %month.addr, align 8, !dbg !4318, !tbaa !2563
  %46 = load i32, i32* %45, align 4, !dbg !4320, !tbaa !3325
  %sub24 = sub i32 %46, 1, !dbg !4320
  store i32 %sub24, i32* %45, align 4, !dbg !4320, !tbaa !3325
  %47 = load i32*, i32** %year.addr, align 8, !dbg !4321, !tbaa !2563
  %48 = load i32, i32* %47, align 4, !dbg !4322, !tbaa !3325
  %49 = load i32*, i32** %month.addr, align 8, !dbg !4323, !tbaa !2563
  %50 = load i32, i32* %49, align 4, !dbg !4324, !tbaa !3325
  %call = call i32 @days_in_month(i32 %48, i32 %50), !dbg !4325
  %51 = load i32, i32* %preceding, align 4, !dbg !4326, !tbaa !3325
  %sub25 = sub i32 %51, %call, !dbg !4326
  store i32 %sub25, i32* %preceding, align 4, !dbg !4326, !tbaa !3325
  br label %if.end.26, !dbg !4327

if.end.26:                                        ; preds = %if.then.23, %land.end.19
  %52 = load i32, i32* %preceding, align 4, !dbg !4328, !tbaa !3325
  %53 = load i32, i32* %n, align 4, !dbg !4329, !tbaa !3325
  %sub27 = sub i32 %53, %52, !dbg !4329
  store i32 %sub27, i32* %n, align 4, !dbg !4329, !tbaa !3325
  %54 = load i32, i32* %n, align 4, !dbg !4330, !tbaa !3325
  %add28 = add i32 %54, 1, !dbg !4331
  %55 = load i32*, i32** %day.addr, align 8, !dbg !4332, !tbaa !2563
  store i32 %add28, i32* %55, align 4, !dbg !4333, !tbaa !3325
  store i32 0, i32* %cleanup.dest.slot, !dbg !4334
  br label %cleanup, !dbg !4334

cleanup:                                          ; preds = %if.end.26, %if.then
  %56 = bitcast i32* %preceding to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %56) #1, !dbg !4335
  %57 = bitcast i32* %leapyear to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %57) #1, !dbg !4335
  %58 = bitcast i32* %n400 to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %58) #1, !dbg !4335
  %59 = bitcast i32* %n100 to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %59) #1, !dbg !4335
  %60 = bitcast i32* %n4 to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %60) #1, !dbg !4335
  %61 = bitcast i32* %n1 to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %61) #1, !dbg !4335
  %62 = bitcast i32* %n to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %62) #1, !dbg !4335
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4334

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare void @PyErr_SetString(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @is_leap(i32 %year) #0 {
entry:
  %year.addr = alloca i32, align 4
  %ayear = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !550, metadata !2553), !dbg !4336
  %0 = bitcast i32* %ayear to i8*, !dbg !4337
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4337
  call void @llvm.dbg.declare(metadata i32* %ayear, metadata !551, metadata !2553), !dbg !4338
  %1 = load i32, i32* %year.addr, align 4, !dbg !4339, !tbaa !3325
  store i32 %1, i32* %ayear, align 4, !dbg !4338, !tbaa !3325
  %2 = load i32, i32* %ayear, align 4, !dbg !4340, !tbaa !3325
  %rem = urem i32 %2, 4, !dbg !4341
  %cmp = icmp eq i32 %rem, 0, !dbg !4342
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4343

land.rhs:                                         ; preds = %entry
  %3 = load i32, i32* %ayear, align 4, !dbg !4344, !tbaa !3325
  %rem1 = urem i32 %3, 100, !dbg !4346
  %cmp2 = icmp ne i32 %rem1, 0, !dbg !4347
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !4348

lor.rhs:                                          ; preds = %land.rhs
  %4 = load i32, i32* %ayear, align 4, !dbg !4349, !tbaa !3325
  %rem3 = urem i32 %4, 400, !dbg !4351
  %cmp4 = icmp eq i32 %rem3, 0, !dbg !4352
  br label %lor.end, !dbg !4348

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ %cmp4, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %6 = phi i1 [ false, %entry ], [ %5, %lor.end ]
  %land.ext = zext i1 %6 to i32, !dbg !4353
  %7 = bitcast i32* %ayear to i8*, !dbg !4355
  call void @llvm.lifetime.end(i64 4, i8* %7) #1, !dbg !4355
  ret i32 %land.ext, !dbg !4356
}

; Function Attrs: nounwind uwtable
define internal i32 @days_before_year(i32 %year) #0 {
entry:
  %year.addr = alloca i32, align 4
  %y = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !562, metadata !2553), !dbg !4357
  %0 = bitcast i32* %y to i8*, !dbg !4358
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %y, metadata !563, metadata !2553), !dbg !4359
  %1 = load i32, i32* %year.addr, align 4, !dbg !4360, !tbaa !3325
  %sub = sub i32 %1, 1, !dbg !4361
  store i32 %sub, i32* %y, align 4, !dbg !4359, !tbaa !3325
  %2 = load i32, i32* %y, align 4, !dbg !4362, !tbaa !3325
  %mul = mul i32 %2, 365, !dbg !4363
  %3 = load i32, i32* %y, align 4, !dbg !4364, !tbaa !3325
  %div = sdiv i32 %3, 4, !dbg !4365
  %add = add i32 %mul, %div, !dbg !4366
  %4 = load i32, i32* %y, align 4, !dbg !4367, !tbaa !3325
  %div1 = sdiv i32 %4, 100, !dbg !4368
  %sub2 = sub i32 %add, %div1, !dbg !4369
  %5 = load i32, i32* %y, align 4, !dbg !4370, !tbaa !3325
  %div3 = sdiv i32 %5, 400, !dbg !4371
  %add4 = add i32 %sub2, %div3, !dbg !4372
  %6 = bitcast i32* %y to i8*, !dbg !4373
  call void @llvm.lifetime.end(i64 4, i8* %6) #1, !dbg !4373
  ret i32 %add4, !dbg !4374
}

; Function Attrs: nounwind uwtable
define internal i32 @days_before_month(i32 %year, i32 %month) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %days = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !566, metadata !2553), !dbg !4375
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !567, metadata !2553), !dbg !4376
  %0 = bitcast i32* %days to i8*, !dbg !4377
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4377
  call void @llvm.dbg.declare(metadata i32* %days, metadata !568, metadata !2553), !dbg !4378
  %1 = load i32, i32* %month.addr, align 4, !dbg !4379, !tbaa !3325
  %idxprom = sext i32 %1 to i64, !dbg !4380
  %arrayidx = getelementptr [13 x i32], [13 x i32]* @_days_before_month, i32 0, i64 %idxprom, !dbg !4380
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4380, !tbaa !3325
  store i32 %2, i32* %days, align 4, !dbg !4381, !tbaa !3325
  %3 = load i32, i32* %month.addr, align 4, !dbg !4382, !tbaa !3325
  %cmp = icmp sgt i32 %3, 2, !dbg !4384
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4385

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %year.addr, align 4, !dbg !4386, !tbaa !3325
  %call = call i32 @is_leap(i32 %4), !dbg !4388
  %tobool = icmp ne i32 %call, 0, !dbg !4388
  br i1 %tobool, label %if.then, label %if.end, !dbg !4389

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* %days, align 4, !dbg !4390, !tbaa !3325
  %inc = add i32 %5, 1, !dbg !4390
  store i32 %inc, i32* %days, align 4, !dbg !4390, !tbaa !3325
  br label %if.end, !dbg !4390

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i32, i32* %days, align 4, !dbg !4391, !tbaa !3325
  %7 = bitcast i32* %days to i8*, !dbg !4392
  call void @llvm.lifetime.end(i64 4, i8* %7) #1, !dbg !4392
  ret i32 %6, !dbg !4393
}

; Function Attrs: nounwind uwtable
define internal i64 @generic_hash(i8* %data, i32 %len) #0 {
entry:
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store i8* %data, i8** %data.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !603, metadata !2553), !dbg !4394
  store i32 %len, i32* %len.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !604, metadata !2553), !dbg !4395
  %0 = load i8*, i8** %data.addr, align 8, !dbg !4396, !tbaa !2563
  %1 = load i32, i32* %len.addr, align 4, !dbg !4397, !tbaa !3325
  %conv = sext i32 %1 to i64, !dbg !4397
  %call = call i64 @_Py_HashBytes(i8* %0, i64 %conv), !dbg !4398
  ret i64 %call, !dbg !4399
}

declare i64 @_Py_HashBytes(i8*, i64) #3

declare %struct._object* @_PyObject_CallMethodId(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal %struct._object* @diff_to_bool(i32 %diff, i32 %op) #0 {
entry:
  %diff.addr = alloca i32, align 4
  %op.addr = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  %istrue = alloca i32, align 4
  store i32 %diff, i32* %diff.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %diff.addr, metadata !620, metadata !2553), !dbg !4400
  store i32 %op, i32* %op.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !621, metadata !2553), !dbg !4401
  %0 = bitcast %struct._object** %result to i8*, !dbg !4402
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4402
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !622, metadata !2553), !dbg !4403
  %1 = bitcast i32* %istrue to i8*, !dbg !4404
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !4404
  call void @llvm.dbg.declare(metadata i32* %istrue, metadata !623, metadata !2553), !dbg !4405
  %2 = load i32, i32* %op.addr, align 4, !dbg !4406, !tbaa !3325
  switch i32 %2, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb.1
    i32 1, label %sw.bb.4
    i32 5, label %sw.bb.7
    i32 0, label %sw.bb.10
    i32 4, label %sw.bb.13
  ], !dbg !4407

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* %diff.addr, align 4, !dbg !4408, !tbaa !3325
  %cmp = icmp eq i32 %3, 0, !dbg !4410
  %conv = zext i1 %cmp to i32, !dbg !4410
  store i32 %conv, i32* %istrue, align 4, !dbg !4411, !tbaa !3325
  br label %sw.epilog, !dbg !4412

sw.bb.1:                                          ; preds = %entry
  %4 = load i32, i32* %diff.addr, align 4, !dbg !4413, !tbaa !3325
  %cmp2 = icmp ne i32 %4, 0, !dbg !4414
  %conv3 = zext i1 %cmp2 to i32, !dbg !4414
  store i32 %conv3, i32* %istrue, align 4, !dbg !4415, !tbaa !3325
  br label %sw.epilog, !dbg !4416

sw.bb.4:                                          ; preds = %entry
  %5 = load i32, i32* %diff.addr, align 4, !dbg !4417, !tbaa !3325
  %cmp5 = icmp sle i32 %5, 0, !dbg !4418
  %conv6 = zext i1 %cmp5 to i32, !dbg !4418
  store i32 %conv6, i32* %istrue, align 4, !dbg !4419, !tbaa !3325
  br label %sw.epilog, !dbg !4420

sw.bb.7:                                          ; preds = %entry
  %6 = load i32, i32* %diff.addr, align 4, !dbg !4421, !tbaa !3325
  %cmp8 = icmp sge i32 %6, 0, !dbg !4422
  %conv9 = zext i1 %cmp8 to i32, !dbg !4422
  store i32 %conv9, i32* %istrue, align 4, !dbg !4423, !tbaa !3325
  br label %sw.epilog, !dbg !4424

sw.bb.10:                                         ; preds = %entry
  %7 = load i32, i32* %diff.addr, align 4, !dbg !4425, !tbaa !3325
  %cmp11 = icmp slt i32 %7, 0, !dbg !4426
  %conv12 = zext i1 %cmp11 to i32, !dbg !4426
  store i32 %conv12, i32* %istrue, align 4, !dbg !4427, !tbaa !3325
  br label %sw.epilog, !dbg !4428

sw.bb.13:                                         ; preds = %entry
  %8 = load i32, i32* %diff.addr, align 4, !dbg !4429, !tbaa !3325
  %cmp14 = icmp sgt i32 %8, 0, !dbg !4430
  %conv15 = zext i1 %cmp14 to i32, !dbg !4430
  store i32 %conv15, i32* %istrue, align 4, !dbg !4431, !tbaa !3325
  br label %sw.epilog, !dbg !4432

sw.default:                                       ; preds = %entry
  store i32 0, i32* %istrue, align 4, !dbg !4433, !tbaa !3325
  br label %sw.epilog, !dbg !4434

sw.epilog:                                        ; preds = %sw.default, %sw.bb.13, %sw.bb.10, %sw.bb.7, %sw.bb.4, %sw.bb.1, %sw.bb
  %9 = load i32, i32* %istrue, align 4, !dbg !4435, !tbaa !3325
  %tobool = icmp ne i32 %9, 0, !dbg !4435
  %cond = select i1 %tobool, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !4435
  store %struct._object* %cond, %struct._object** %result, align 8, !dbg !4436, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %result, align 8, !dbg !4437, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !4438
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !4439, !tbaa !2632
  %inc = add i64 %11, 1, !dbg !4439
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4439, !tbaa !2632
  %12 = load %struct._object*, %struct._object** %result, align 8, !dbg !4440, !tbaa !2563
  %13 = bitcast i32* %istrue to i8*, !dbg !4441
  call void @llvm.lifetime.end(i64 4, i8* %13) #1, !dbg !4441
  %14 = bitcast %struct._object** %result to i8*, !dbg !4441
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !4441
  ret %struct._object* %12, !dbg !4442
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_fromtimestamp(%struct._object* %cls, %struct._object* %args) #0 {
entry:
  %cls.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %timestamp = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !626, metadata !2553), !dbg !4443
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !627, metadata !2553), !dbg !4444
  %0 = bitcast %struct._object** %timestamp to i8*, !dbg !4445
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4445
  call void @llvm.dbg.declare(metadata %struct._object** %timestamp, metadata !628, metadata !2553), !dbg !4446
  %1 = bitcast %struct._object** %result to i8*, !dbg !4447
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4447
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !629, metadata !2553), !dbg !4448
  store %struct._object* null, %struct._object** %result, align 8, !dbg !4448, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4449, !tbaa !2563
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i32 0, i32 0), %struct._object** %timestamp), !dbg !4451
  %tobool = icmp ne i32 %call, 0, !dbg !4451
  br i1 %tobool, label %if.then, label %if.end, !dbg !4452

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !4453, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %timestamp, align 8, !dbg !4454, !tbaa !2563
  %call1 = call %struct._object* @date_local_from_object(%struct._object* %3, %struct._object* %4), !dbg !4455
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !4456, !tbaa !2563
  br label %if.end, !dbg !4457

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !4458, !tbaa !2563
  %6 = bitcast %struct._object** %result to i8*, !dbg !4459
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !4459
  %7 = bitcast %struct._object** %timestamp to i8*, !dbg !4459
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !4459
  ret %struct._object* %5, !dbg !4460
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_fromordinal(%struct._object* %cls, %struct._object* %args) #0 {
entry:
  %cls.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %ordinal = alloca i32, align 4
  %year = alloca i32, align 4
  %month = alloca i32, align 4
  %day = alloca i32, align 4
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !652, metadata !2553), !dbg !4461
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !653, metadata !2553), !dbg !4462
  %0 = bitcast %struct._object** %result to i8*, !dbg !4463
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4463
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !654, metadata !2553), !dbg !4464
  store %struct._object* null, %struct._object** %result, align 8, !dbg !4464, !tbaa !2563
  %1 = bitcast i32* %ordinal to i8*, !dbg !4465
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %ordinal, metadata !655, metadata !2553), !dbg !4466
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4467, !tbaa !2563
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i32* %ordinal), !dbg !4468
  %tobool = icmp ne i32 %call, 0, !dbg !4468
  br i1 %tobool, label %if.then, label %if.end.3, !dbg !4469

if.then:                                          ; preds = %entry
  %3 = bitcast i32* %year to i8*, !dbg !4470
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !4470
  call void @llvm.dbg.declare(metadata i32* %year, metadata !656, metadata !2553), !dbg !4471
  %4 = bitcast i32* %month to i8*, !dbg !4472
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !4472
  call void @llvm.dbg.declare(metadata i32* %month, metadata !659, metadata !2553), !dbg !4473
  %5 = bitcast i32* %day to i8*, !dbg !4474
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !4474
  call void @llvm.dbg.declare(metadata i32* %day, metadata !660, metadata !2553), !dbg !4475
  %6 = load i32, i32* %ordinal, align 4, !dbg !4476, !tbaa !3325
  %cmp = icmp slt i32 %6, 1, !dbg !4478
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !4479

if.then.1:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4480, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i32 0, i32 0)), !dbg !4481
  br label %if.end, !dbg !4481

if.else:                                          ; preds = %if.then
  %8 = load i32, i32* %ordinal, align 4, !dbg !4482, !tbaa !3325
  call void @ord_to_ymd(i32 %8, i32* %year, i32* %month, i32* %day), !dbg !4484
  %9 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !4485, !tbaa !2563
  %10 = load i32, i32* %year, align 4, !dbg !4486, !tbaa !3325
  %11 = load i32, i32* %month, align 4, !dbg !4487, !tbaa !3325
  %12 = load i32, i32* %day, align 4, !dbg !4488, !tbaa !3325
  %call2 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 %10, i32 %11, i32 %12), !dbg !4489
  store %struct._object* %call2, %struct._object** %result, align 8, !dbg !4490, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  %13 = bitcast i32* %day to i8*, !dbg !4491
  call void @llvm.lifetime.end(i64 4, i8* %13) #1, !dbg !4491
  %14 = bitcast i32* %month to i8*, !dbg !4491
  call void @llvm.lifetime.end(i64 4, i8* %14) #1, !dbg !4491
  %15 = bitcast i32* %year to i8*, !dbg !4491
  call void @llvm.lifetime.end(i64 4, i8* %15) #1, !dbg !4491
  br label %if.end.3, !dbg !4492

if.end.3:                                         ; preds = %if.end, %entry
  %16 = load %struct._object*, %struct._object** %result, align 8, !dbg !4493, !tbaa !2563
  %17 = bitcast i32* %ordinal to i8*, !dbg !4494
  call void @llvm.lifetime.end(i64 4, i8* %17) #1, !dbg !4494
  %18 = bitcast %struct._object** %result to i8*, !dbg !4494
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !4494
  ret %struct._object* %16, !dbg !4495
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_today(%struct._object* %cls, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %cls.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %time = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !663, metadata !2553), !dbg !4496
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !664, metadata !2553), !dbg !4497
  %0 = bitcast %struct._object** %time to i8*, !dbg !4498
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4498
  call void @llvm.dbg.declare(metadata %struct._object** %time, metadata !665, metadata !2553), !dbg !4499
  %1 = bitcast %struct._object** %result to i8*, !dbg !4500
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4500
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !666, metadata !2553), !dbg !4501
  %call = call %struct._object* @time_time(), !dbg !4502
  store %struct._object* %call, %struct._object** %time, align 8, !dbg !4503, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %time, align 8, !dbg !4504, !tbaa !2563
  %cmp = icmp eq %struct._object* %2, null, !dbg !4506
  br i1 %cmp, label %if.then, label %if.end, !dbg !4507

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4508
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4508

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !4509, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %time, align 8, !dbg !4510, !tbaa !2563
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %3, %struct._Py_Identifier* @date_today.PyId_fromtimestamp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %4), !dbg !4511
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !4512, !tbaa !2563
  br label %do.body, !dbg !4513

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4514
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4514
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !667, metadata !2553), !dbg !4516
  %6 = load %struct._object*, %struct._object** %time, align 8, !dbg !4517, !tbaa !2563
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !4516, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4518, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !4520
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !4521, !tbaa !2632
  %dec = add i64 %8, -1, !dbg !4521
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4521, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !4522
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !4523

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !4524

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4526, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4528
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4528, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !4529
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4529, !tbaa !2642
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4530, !tbaa !2563
  call void %11(%struct._object* %12), !dbg !4531
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4532
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !4532
  br label %do.cond, !dbg !4534

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !4535

do.end:                                           ; preds = %do.cond
  %14 = load %struct._object*, %struct._object** %result, align 8, !dbg !4537, !tbaa !2563
  store %struct._object* %14, %struct._object** %retval, !dbg !4538
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4538

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast %struct._object** %result to i8*, !dbg !4539
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !4539
  %16 = bitcast %struct._object** %time to i8*, !dbg !4539
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !4539
  %17 = load %struct._object*, %struct._object** %retval, !dbg !4539
  ret %struct._object* %17, !dbg !4539
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_ctime(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !679, metadata !2553), !dbg !4540
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4541, !tbaa !2563
  %call = call %struct._object* @format_ctime(%struct.PyDateTime_Date* %0, i32 0, i32 0, i32 0), !dbg !4542
  ret %struct._object* %call, !dbg !4543
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_strftime(%struct.PyDateTime_Date* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !698, metadata !2553), !dbg !4544
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !699, metadata !2553), !dbg !4545
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !700, metadata !2553), !dbg !4546
  %0 = bitcast %struct._object** %result to i8*, !dbg !4547
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4547
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !701, metadata !2553), !dbg !4548
  %1 = bitcast %struct._object** %tuple to i8*, !dbg !4549
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4549
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !702, metadata !2553), !dbg !4550
  %2 = bitcast %struct._object** %format to i8*, !dbg !4551
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4551
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !703, metadata !2553), !dbg !4552
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4553, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !4555, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @date_strftime.keywords, i32 0, i32 0), %struct._object** %format), !dbg !4556
  %tobool = icmp ne i32 %call, 0, !dbg !4556
  br i1 %tobool, label %if.end, label %if.then, !dbg !4557

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4558
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4558

if.end:                                           ; preds = %entry
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4559, !tbaa !2563
  %6 = bitcast %struct.PyDateTime_Date* %5 to %struct._object*, !dbg !4560
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %6, %struct._Py_Identifier* @date_strftime.PyId_timetuple, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)), !dbg !4561
  store %struct._object* %call1, %struct._object** %tuple, align 8, !dbg !4562, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4563, !tbaa !2563
  %cmp = icmp eq %struct._object* %7, null, !dbg !4565
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4566

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4567
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4567

if.end.3:                                         ; preds = %if.end
  %8 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4568, !tbaa !2563
  %9 = bitcast %struct.PyDateTime_Date* %8 to %struct._object*, !dbg !4569
  %10 = load %struct._object*, %struct._object** %format, align 8, !dbg !4570, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4571, !tbaa !2563
  %12 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4572, !tbaa !2563
  %13 = bitcast %struct.PyDateTime_Date* %12 to %struct._object*, !dbg !4573
  %call4 = call %struct._object* @wrap_strftime(%struct._object* %9, %struct._object* %10, %struct._object* %11, %struct._object* %13), !dbg !4574
  store %struct._object* %call4, %struct._object** %result, align 8, !dbg !4575, !tbaa !2563
  br label %do.body, !dbg !4576

do.body:                                          ; preds = %if.end.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4577
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !4577
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !704, metadata !2553), !dbg !4579
  %15 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4580, !tbaa !2563
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !4579, !tbaa !2563
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4581, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !4583
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !4584, !tbaa !2632
  %dec = add i64 %17, -1, !dbg !4584
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4584, !tbaa !2632
  %cmp5 = icmp ne i64 %dec, 0, !dbg !4585
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !4586

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !4587

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4589, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !4591
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4591, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !4592
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4592, !tbaa !2642
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4593, !tbaa !2563
  call void %20(%struct._object* %21), !dbg !4594
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4595
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !4595
  br label %do.cond, !dbg !4597

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !4598

do.end:                                           ; preds = %do.cond
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !4600, !tbaa !2563
  store %struct._object* %23, %struct._object** %retval, !dbg !4601
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4601

cleanup:                                          ; preds = %do.end, %if.then.2, %if.then
  %24 = bitcast %struct._object** %format to i8*, !dbg !4602
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !4602
  %25 = bitcast %struct._object** %tuple to i8*, !dbg !4602
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !4602
  %26 = bitcast %struct._object** %result to i8*, !dbg !4602
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !4602
  %27 = load %struct._object*, %struct._object** %retval, !dbg !4602
  ret %struct._object* %27, !dbg !4602
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_format(%struct.PyDateTime_Date* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %args.addr = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !876, metadata !2553), !dbg !4603
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !877, metadata !2553), !dbg !4604
  %0 = bitcast %struct._object** %format to i8*, !dbg !4605
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4605
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !878, metadata !2553), !dbg !4606
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4607, !tbaa !2563
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), %struct._object** %format), !dbg !4609
  %tobool = icmp ne i32 %call, 0, !dbg !4609
  br i1 %tobool, label %if.end, label %if.then, !dbg !4610

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4611
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4611

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %format, align 8, !dbg !4612, !tbaa !2563
  %call1 = call i64 @PyUnicode_GetLength(%struct._object* %2), !dbg !4614
  %cmp = icmp eq i64 %call1, 0, !dbg !4615
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !4616

if.then.2:                                        ; preds = %if.end
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4617, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_Date* %3 to %struct._object*, !dbg !4618
  %call3 = call %struct._object* @PyObject_Str(%struct._object* %4), !dbg !4619
  store %struct._object* %call3, %struct._object** %retval, !dbg !4620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4620

if.end.4:                                         ; preds = %if.end
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4621, !tbaa !2563
  %6 = bitcast %struct.PyDateTime_Date* %5 to %struct._object*, !dbg !4622
  %7 = load %struct._object*, %struct._object** %format, align 8, !dbg !4623, !tbaa !2563
  %call5 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %6, %struct._Py_Identifier* @PyId_strftime, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %7), !dbg !4624
  store %struct._object* %call5, %struct._object** %retval, !dbg !4625
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4625

cleanup:                                          ; preds = %if.end.4, %if.then.2, %if.then
  %8 = bitcast %struct._object** %format to i8*, !dbg !4626
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !4626
  %9 = load %struct._object*, %struct._object** %retval, !dbg !4626
  ret %struct._object* %9, !dbg !4626
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_timetuple(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !881, metadata !2553), !dbg !4627
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4628, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 3, !dbg !4629
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4630
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4630, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !4630
  %shl = shl i32 %conv, 8, !dbg !4631
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4632, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !4633
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4634
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4634, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !4634
  %or = or i32 %shl, %conv3, !dbg !4635
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4636, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !4637
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4638
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !4638, !tbaa !3415
  %conv6 = zext i8 %5 to i32, !dbg !4639
  %6 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4640, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %6, i32 0, i32 3, !dbg !4641
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4642
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !4642, !tbaa !3415
  %conv9 = zext i8 %7 to i32, !dbg !4643
  %call = call %struct._object* @build_struct_time(i32 %or, i32 %conv6, i32 %conv9, i32 0, i32 0, i32 0, i32 -1), !dbg !4644
  ret %struct._object* %call, !dbg !4645
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_isocalendar(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %year = alloca i32, align 4
  %week1_monday = alloca i32, align 4
  %today = alloca i32, align 4
  %week = alloca i32, align 4
  %day = alloca i32, align 4
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !901, metadata !2553), !dbg !4646
  %0 = bitcast i32* %year to i8*, !dbg !4647
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %year, metadata !902, metadata !2553), !dbg !4648
  %1 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4649, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %1, i32 0, i32 3, !dbg !4650
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4651
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4651, !tbaa !3415
  %conv = zext i8 %2 to i32, !dbg !4651
  %shl = shl i32 %conv, 8, !dbg !4652
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4653, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %3, i32 0, i32 3, !dbg !4654
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4655
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4655, !tbaa !3415
  %conv3 = zext i8 %4 to i32, !dbg !4655
  %or = or i32 %shl, %conv3, !dbg !4656
  store i32 %or, i32* %year, align 4, !dbg !4648, !tbaa !3325
  %5 = bitcast i32* %week1_monday to i8*, !dbg !4657
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !4657
  call void @llvm.dbg.declare(metadata i32* %week1_monday, metadata !903, metadata !2553), !dbg !4658
  %6 = load i32, i32* %year, align 4, !dbg !4659, !tbaa !3325
  %call = call i32 @iso_week1_monday(i32 %6), !dbg !4660
  store i32 %call, i32* %week1_monday, align 4, !dbg !4658, !tbaa !3325
  %7 = bitcast i32* %today to i8*, !dbg !4661
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %today, metadata !904, metadata !2553), !dbg !4662
  %8 = load i32, i32* %year, align 4, !dbg !4663, !tbaa !3325
  %9 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4664, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %9, i32 0, i32 3, !dbg !4665
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4666
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !4666, !tbaa !3415
  %conv6 = zext i8 %10 to i32, !dbg !4667
  %11 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4668, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %11, i32 0, i32 3, !dbg !4669
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4670
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !4670, !tbaa !3415
  %conv9 = zext i8 %12 to i32, !dbg !4671
  %call10 = call i32 @ymd_to_ord(i32 %8, i32 %conv6, i32 %conv9), !dbg !4672
  store i32 %call10, i32* %today, align 4, !dbg !4662, !tbaa !3325
  %13 = bitcast i32* %week to i8*, !dbg !4673
  call void @llvm.lifetime.start(i64 4, i8* %13) #1, !dbg !4673
  call void @llvm.dbg.declare(metadata i32* %week, metadata !905, metadata !2553), !dbg !4674
  %14 = bitcast i32* %day to i8*, !dbg !4675
  call void @llvm.lifetime.start(i64 4, i8* %14) #1, !dbg !4675
  call void @llvm.dbg.declare(metadata i32* %day, metadata !906, metadata !2553), !dbg !4676
  %15 = load i32, i32* %today, align 4, !dbg !4677, !tbaa !3325
  %16 = load i32, i32* %week1_monday, align 4, !dbg !4678, !tbaa !3325
  %sub = sub i32 %15, %16, !dbg !4679
  %call11 = call i32 @divmod(i32 %sub, i32 7, i32* %day), !dbg !4680
  store i32 %call11, i32* %week, align 4, !dbg !4681, !tbaa !3325
  %17 = load i32, i32* %week, align 4, !dbg !4682, !tbaa !3325
  %cmp = icmp slt i32 %17, 0, !dbg !4684
  br i1 %cmp, label %if.then, label %if.else, !dbg !4685

if.then:                                          ; preds = %entry
  %18 = load i32, i32* %year, align 4, !dbg !4686, !tbaa !3325
  %dec = add i32 %18, -1, !dbg !4686
  store i32 %dec, i32* %year, align 4, !dbg !4686, !tbaa !3325
  %19 = load i32, i32* %year, align 4, !dbg !4688, !tbaa !3325
  %call13 = call i32 @iso_week1_monday(i32 %19), !dbg !4689
  store i32 %call13, i32* %week1_monday, align 4, !dbg !4690, !tbaa !3325
  %20 = load i32, i32* %today, align 4, !dbg !4691, !tbaa !3325
  %21 = load i32, i32* %week1_monday, align 4, !dbg !4692, !tbaa !3325
  %sub14 = sub i32 %20, %21, !dbg !4693
  %call15 = call i32 @divmod(i32 %sub14, i32 7, i32* %day), !dbg !4694
  store i32 %call15, i32* %week, align 4, !dbg !4695, !tbaa !3325
  br label %if.end.22, !dbg !4696

if.else:                                          ; preds = %entry
  %22 = load i32, i32* %week, align 4, !dbg !4697, !tbaa !3325
  %cmp16 = icmp sge i32 %22, 52, !dbg !4699
  br i1 %cmp16, label %land.lhs.true, label %if.end, !dbg !4700

land.lhs.true:                                    ; preds = %if.else
  %23 = load i32, i32* %today, align 4, !dbg !4701, !tbaa !3325
  %24 = load i32, i32* %year, align 4, !dbg !4703, !tbaa !3325
  %add = add i32 %24, 1, !dbg !4704
  %call18 = call i32 @iso_week1_monday(i32 %add), !dbg !4705
  %cmp19 = icmp sge i32 %23, %call18, !dbg !4706
  br i1 %cmp19, label %if.then.21, label %if.end, !dbg !4707

if.then.21:                                       ; preds = %land.lhs.true
  %25 = load i32, i32* %year, align 4, !dbg !4708, !tbaa !3325
  %inc = add i32 %25, 1, !dbg !4708
  store i32 %inc, i32* %year, align 4, !dbg !4708, !tbaa !3325
  store i32 0, i32* %week, align 4, !dbg !4710, !tbaa !3325
  br label %if.end, !dbg !4711

if.end:                                           ; preds = %if.then.21, %land.lhs.true, %if.else
  br label %if.end.22

if.end.22:                                        ; preds = %if.end, %if.then
  %26 = load i32, i32* %year, align 4, !dbg !4712, !tbaa !3325
  %27 = load i32, i32* %week, align 4, !dbg !4713, !tbaa !3325
  %add23 = add i32 %27, 1, !dbg !4714
  %28 = load i32, i32* %day, align 4, !dbg !4715, !tbaa !3325
  %add24 = add i32 %28, 1, !dbg !4716
  %call25 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 %26, i32 %add23, i32 %add24), !dbg !4717
  %29 = bitcast i32* %day to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !4718
  %30 = bitcast i32* %week to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %30) #1, !dbg !4718
  %31 = bitcast i32* %today to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %31) #1, !dbg !4718
  %32 = bitcast i32* %week1_monday to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %32) #1, !dbg !4718
  %33 = bitcast i32* %year to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %33) #1, !dbg !4718
  ret %struct._object* %call25, !dbg !4719
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_isoformat(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !915, metadata !2553), !dbg !4720
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4721, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 3, !dbg !4722
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4723
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4723, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !4723
  %shl = shl i32 %conv, 8, !dbg !4724
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4725, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !4726
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4727
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4727, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !4727
  %or = or i32 %shl, %conv3, !dbg !4728
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4729, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !4730
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4731
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !4731, !tbaa !3415
  %conv6 = zext i8 %5 to i32, !dbg !4732
  %6 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4733, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %6, i32 0, i32 3, !dbg !4734
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4735
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !4735, !tbaa !3415
  %conv9 = zext i8 %7 to i32, !dbg !4736
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i32 0, i32 0), i32 %or, i32 %conv6, i32 %conv9), !dbg !4737
  ret %struct._object* %call, !dbg !4738
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_isoweekday(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %dow = alloca i32, align 4
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !918, metadata !2553), !dbg !4739
  %0 = bitcast i32* %dow to i8*, !dbg !4740
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4740
  call void @llvm.dbg.declare(metadata i32* %dow, metadata !919, metadata !2553), !dbg !4741
  %1 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4742, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %1, i32 0, i32 3, !dbg !4743
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4744
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4744, !tbaa !3415
  %conv = zext i8 %2 to i32, !dbg !4744
  %shl = shl i32 %conv, 8, !dbg !4745
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4746, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %3, i32 0, i32 3, !dbg !4747
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4748
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4748, !tbaa !3415
  %conv3 = zext i8 %4 to i32, !dbg !4748
  %or = or i32 %shl, %conv3, !dbg !4749
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4750, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %5, i32 0, i32 3, !dbg !4751
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4752
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !4752, !tbaa !3415
  %conv6 = zext i8 %6 to i32, !dbg !4753
  %7 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4754, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %7, i32 0, i32 3, !dbg !4755
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4756
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !4756, !tbaa !3415
  %conv9 = zext i8 %8 to i32, !dbg !4757
  %call = call i32 @weekday(i32 %or, i32 %conv6, i32 %conv9), !dbg !4758
  store i32 %call, i32* %dow, align 4, !dbg !4741, !tbaa !3325
  %9 = load i32, i32* %dow, align 4, !dbg !4759, !tbaa !3325
  %add = add i32 %9, 1, !dbg !4760
  %conv10 = sext i32 %add to i64, !dbg !4759
  %call11 = call %struct._object* @PyLong_FromLong(i64 %conv10), !dbg !4761
  %10 = bitcast i32* %dow to i8*, !dbg !4762
  call void @llvm.lifetime.end(i64 4, i8* %10) #1, !dbg !4762
  ret %struct._object* %call11, !dbg !4763
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_toordinal(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !922, metadata !2553), !dbg !4764
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4765, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 3, !dbg !4766
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4767
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4767, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !4767
  %shl = shl i32 %conv, 8, !dbg !4768
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4769, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !4770
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4771
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4771, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !4771
  %or = or i32 %shl, %conv3, !dbg !4772
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4773, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !4774
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4775
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !4775, !tbaa !3415
  %conv6 = zext i8 %5 to i32, !dbg !4776
  %6 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4777, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %6, i32 0, i32 3, !dbg !4778
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4779
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !4779, !tbaa !3415
  %conv9 = zext i8 %7 to i32, !dbg !4780
  %call = call i32 @ymd_to_ord(i32 %or, i32 %conv6, i32 %conv9), !dbg !4781
  %conv10 = sext i32 %call to i64, !dbg !4781
  %call11 = call %struct._object* @PyLong_FromLong(i64 %conv10), !dbg !4782
  ret %struct._object* %call11, !dbg !4783
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_weekday(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %dow = alloca i32, align 4
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !925, metadata !2553), !dbg !4784
  %0 = bitcast i32* %dow to i8*, !dbg !4785
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4785
  call void @llvm.dbg.declare(metadata i32* %dow, metadata !926, metadata !2553), !dbg !4786
  %1 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4787, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %1, i32 0, i32 3, !dbg !4788
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4789
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4789, !tbaa !3415
  %conv = zext i8 %2 to i32, !dbg !4789
  %shl = shl i32 %conv, 8, !dbg !4790
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4791, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %3, i32 0, i32 3, !dbg !4792
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4793
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4793, !tbaa !3415
  %conv3 = zext i8 %4 to i32, !dbg !4793
  %or = or i32 %shl, %conv3, !dbg !4794
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4795, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %5, i32 0, i32 3, !dbg !4796
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4797
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !4797, !tbaa !3415
  %conv6 = zext i8 %6 to i32, !dbg !4798
  %7 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4799, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %7, i32 0, i32 3, !dbg !4800
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4801
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !4801, !tbaa !3415
  %conv9 = zext i8 %8 to i32, !dbg !4802
  %call = call i32 @weekday(i32 %or, i32 %conv6, i32 %conv9), !dbg !4803
  store i32 %call, i32* %dow, align 4, !dbg !4786, !tbaa !3325
  %9 = load i32, i32* %dow, align 4, !dbg !4804, !tbaa !3325
  %conv10 = sext i32 %9 to i64, !dbg !4804
  %call11 = call %struct._object* @PyLong_FromLong(i64 %conv10), !dbg !4805
  %10 = bitcast i32* %dow to i8*, !dbg !4806
  call void @llvm.lifetime.end(i64 4, i8* %10) #1, !dbg !4806
  ret %struct._object* %call11, !dbg !4807
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_replace(%struct.PyDateTime_Date* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %clone = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %year = alloca i32, align 4
  %month = alloca i32, align 4
  %day = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !929, metadata !2553), !dbg !4808
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !930, metadata !2553), !dbg !4809
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !931, metadata !2553), !dbg !4810
  %0 = bitcast %struct._object** %clone to i8*, !dbg !4811
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4811
  call void @llvm.dbg.declare(metadata %struct._object** %clone, metadata !932, metadata !2553), !dbg !4812
  %1 = bitcast %struct._object** %tuple to i8*, !dbg !4813
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4813
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !933, metadata !2553), !dbg !4814
  %2 = bitcast i32* %year to i8*, !dbg !4815
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %year, metadata !934, metadata !2553), !dbg !4816
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4817, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %3, i32 0, i32 3, !dbg !4818
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4819
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4819, !tbaa !3415
  %conv = zext i8 %4 to i32, !dbg !4819
  %shl = shl i32 %conv, 8, !dbg !4820
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4821, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %5, i32 0, i32 3, !dbg !4822
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4823
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !4823, !tbaa !3415
  %conv3 = zext i8 %6 to i32, !dbg !4823
  %or = or i32 %shl, %conv3, !dbg !4824
  store i32 %or, i32* %year, align 4, !dbg !4816, !tbaa !3325
  %7 = bitcast i32* %month to i8*, !dbg !4825
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !4825
  call void @llvm.dbg.declare(metadata i32* %month, metadata !935, metadata !2553), !dbg !4826
  %8 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4827, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %8, i32 0, i32 3, !dbg !4828
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4829
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !4829, !tbaa !3415
  %conv6 = zext i8 %9 to i32, !dbg !4830
  store i32 %conv6, i32* %month, align 4, !dbg !4826, !tbaa !3325
  %10 = bitcast i32* %day to i8*, !dbg !4831
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !4831
  call void @llvm.dbg.declare(metadata i32* %day, metadata !936, metadata !2553), !dbg !4832
  %11 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4833, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %11, i32 0, i32 3, !dbg !4834
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !4835
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !4835, !tbaa !3415
  %conv9 = zext i8 %12 to i32, !dbg !4836
  store i32 %conv9, i32* %day, align 4, !dbg !4832, !tbaa !3325
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4837, !tbaa !2563
  %14 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !4839, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %13, %struct._object* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @date_kws, i32 0, i32 0), i32* %year, i32* %month, i32* %day), !dbg !4840
  %tobool = icmp ne i32 %call, 0, !dbg !4840
  br i1 %tobool, label %if.end, label %if.then, !dbg !4841

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4842
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4842

if.end:                                           ; preds = %entry
  %15 = load i32, i32* %year, align 4, !dbg !4843, !tbaa !3325
  %16 = load i32, i32* %month, align 4, !dbg !4844, !tbaa !3325
  %17 = load i32, i32* %day, align 4, !dbg !4845, !tbaa !3325
  %call10 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 %15, i32 %16, i32 %17), !dbg !4846
  store %struct._object* %call10, %struct._object** %tuple, align 8, !dbg !4847, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4848, !tbaa !2563
  %cmp = icmp eq %struct._object* %18, null, !dbg !4850
  br i1 %cmp, label %if.then.12, label %if.end.13, !dbg !4851

if.then.12:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4852
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4852

if.end.13:                                        ; preds = %if.end
  %19 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4853, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_Date* %19 to %struct._object*, !dbg !4854
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !4855
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4855, !tbaa !2640
  %22 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4856, !tbaa !2563
  %call14 = call %struct._object* @date_new(%struct._typeobject* %21, %struct._object* %22, %struct._object* null), !dbg !4857
  store %struct._object* %call14, %struct._object** %clone, align 8, !dbg !4858, !tbaa !2563
  br label %do.body, !dbg !4859

do.body:                                          ; preds = %if.end.13
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4860
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !4860
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !937, metadata !2553), !dbg !4862
  %24 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4863, !tbaa !2563
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !4862, !tbaa !2563
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4864, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !4866
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !4867, !tbaa !2632
  %dec = add i64 %26, -1, !dbg !4867
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4867, !tbaa !2632
  %cmp15 = icmp ne i64 %dec, 0, !dbg !4868
  br i1 %cmp15, label %if.then.17, label %if.else, !dbg !4869

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !4870

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4872, !tbaa !2563
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !4874
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4874, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !4875
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4875, !tbaa !2642
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4876, !tbaa !2563
  call void %29(%struct._object* %30), !dbg !4877
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.17
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4878
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !4878
  br label %do.cond, !dbg !4880

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !4881

do.end:                                           ; preds = %do.cond
  %32 = load %struct._object*, %struct._object** %clone, align 8, !dbg !4883, !tbaa !2563
  store %struct._object* %32, %struct._object** %retval, !dbg !4884
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4884

cleanup:                                          ; preds = %do.end, %if.then.12, %if.then
  %33 = bitcast i32* %day to i8*, !dbg !4885
  call void @llvm.lifetime.end(i64 4, i8* %33) #1, !dbg !4885
  %34 = bitcast i32* %month to i8*, !dbg !4885
  call void @llvm.lifetime.end(i64 4, i8* %34) #1, !dbg !4885
  %35 = bitcast i32* %year to i8*, !dbg !4885
  call void @llvm.lifetime.end(i64 4, i8* %35) #1, !dbg !4885
  %36 = bitcast %struct._object** %tuple to i8*, !dbg !4885
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !4885
  %37 = bitcast %struct._object** %clone to i8*, !dbg !4885
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !4885
  %38 = load %struct._object*, %struct._object** %retval, !dbg !4885
  ret %struct._object* %38, !dbg !4885
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_reduce(%struct.PyDateTime_Date* %self, %struct._object* %arg) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %arg.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !941, metadata !2553), !dbg !4886
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !942, metadata !2553), !dbg !4887
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4888, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Date* %0 to %struct._object*, !dbg !4889
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !4890
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4890, !tbaa !2640
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !4891, !tbaa !2563
  %call = call %struct._object* @date_getstate(%struct.PyDateTime_Date* %3), !dbg !4892
  %call1 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %call), !dbg !4893
  ret %struct._object* %call1, !dbg !4894
}

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_local_from_object(%struct._object* %cls, %struct._object* %obj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %cls.addr = alloca %struct._object*, align 8
  %obj.addr = alloca %struct._object*, align 8
  %tm = alloca %struct.tm*, align 8
  %t = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !632, metadata !2553), !dbg !4895
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !633, metadata !2553), !dbg !4896
  %0 = bitcast %struct.tm** %tm to i8*, !dbg !4897
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4897
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !634, metadata !2553), !dbg !4898
  %1 = bitcast i64* %t to i8*, !dbg !4899
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4899
  call void @llvm.dbg.declare(metadata i64* %t, metadata !649, metadata !2553), !dbg !4900
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !4901, !tbaa !2563
  %call = call i32 @_PyTime_ObjectToTime_t(%struct._object* %2, i64* %t, i32 0), !dbg !4903
  %cmp = icmp eq i32 %call, -1, !dbg !4904
  br i1 %cmp, label %if.then, label %if.end, !dbg !4905

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4906

if.end:                                           ; preds = %entry
  %call1 = call %struct.tm* @localtime(i64* %t) #1, !dbg !4907
  store %struct.tm* %call1, %struct.tm** %tm, align 8, !dbg !4908, !tbaa !2563
  %3 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !4909, !tbaa !2563
  %cmp2 = icmp eq %struct.tm* %3, null, !dbg !4911
  br i1 %cmp2, label %if.then.3, label %if.end.10, !dbg !4912

if.then.3:                                        ; preds = %if.end
  %call4 = call i32* @__errno_location() #2, !dbg !4913
  %4 = load i32, i32* %call4, align 4, !dbg !4916, !tbaa !3325
  %cmp5 = icmp eq i32 %4, 0, !dbg !4917
  br i1 %cmp5, label %if.then.6, label %if.end.8, !dbg !4918

if.then.6:                                        ; preds = %if.then.3
  %call7 = call i32* @__errno_location() #2, !dbg !4919
  store i32 22, i32* %call7, align 4, !dbg !4920, !tbaa !3325
  br label %if.end.8, !dbg !4921

if.end.8:                                         ; preds = %if.then.6, %if.then.3
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4922, !tbaa !2563
  %call9 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5), !dbg !4923
  store %struct._object* null, %struct._object** %retval, !dbg !4924
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4924

if.end.10:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !4925, !tbaa !2563
  %7 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !4926, !tbaa !2563
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %7, i32 0, i32 5, !dbg !4927
  %8 = load i32, i32* %tm_year, align 4, !dbg !4927, !tbaa !4928
  %add = add i32 %8, 1900, !dbg !4930
  %9 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !4931, !tbaa !2563
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 4, !dbg !4932
  %10 = load i32, i32* %tm_mon, align 4, !dbg !4932, !tbaa !4933
  %add11 = add i32 %10, 1, !dbg !4934
  %11 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !4935, !tbaa !2563
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %11, i32 0, i32 3, !dbg !4936
  %12 = load i32, i32* %tm_mday, align 4, !dbg !4936, !tbaa !4937
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 %add, i32 %add11, i32 %12), !dbg !4938
  store %struct._object* %call12, %struct._object** %retval, !dbg !4939
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4939

cleanup:                                          ; preds = %if.end.10, %if.end.8, %if.then
  %13 = bitcast i64* %t to i8*, !dbg !4940
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !4940
  %14 = bitcast %struct.tm** %tm to i8*, !dbg !4940
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !4940
  %15 = load %struct._object*, %struct._object** %retval, !dbg !4940
  ret %struct._object* %15, !dbg !4940
}

declare i32 @_PyTime_ObjectToTime_t(%struct._object*, i64*, i32) #3

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

declare %struct._object* @PyErr_SetFromErrno(%struct._object*) #3

declare %struct._object* @PyObject_CallFunction(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_time() #0 {
entry:
  %result = alloca %struct._object*, align 8
  %time = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %0 = bitcast %struct._object** %result to i8*, !dbg !4941
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4941
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !671, metadata !2553), !dbg !4942
  store %struct._object* null, %struct._object** %result, align 8, !dbg !4942, !tbaa !2563
  %1 = bitcast %struct._object** %time to i8*, !dbg !4943
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4943
  call void @llvm.dbg.declare(metadata %struct._object** %time, metadata !672, metadata !2553), !dbg !4944
  %call = call %struct._object* @PyImport_ImportModuleNoBlock(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0)), !dbg !4945
  store %struct._object* %call, %struct._object** %time, align 8, !dbg !4944, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %time, align 8, !dbg !4946, !tbaa !2563
  %cmp = icmp ne %struct._object* %2, null, !dbg !4947
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !4948

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %time, align 8, !dbg !4949, !tbaa !2563
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %3, %struct._Py_Identifier* @time_time.PyId_time, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)), !dbg !4950
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !4951, !tbaa !2563
  br label %do.body, !dbg !4952

do.body:                                          ; preds = %if.then
  %4 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4953
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4953
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !673, metadata !2553), !dbg !4955
  %5 = load %struct._object*, %struct._object** %time, align 8, !dbg !4956, !tbaa !2563
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8, !dbg !4955, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4957, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !4959
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !4960, !tbaa !2632
  %dec = add i64 %7, -1, !dbg !4960
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4960, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !4961
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !4962

if.then.3:                                        ; preds = %do.body
  br label %if.end, !dbg !4963

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4965, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !4967
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4967, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4, !dbg !4968
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4968, !tbaa !2642
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4969, !tbaa !2563
  call void %10(%struct._object* %11), !dbg !4970
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4971
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !4971
  br label %do.cond, !dbg !4973

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4974

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !4976

if.end.4:                                         ; preds = %do.end, %entry
  %13 = load %struct._object*, %struct._object** %result, align 8, !dbg !4977, !tbaa !2563
  %14 = bitcast %struct._object** %time to i8*, !dbg !4978
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !4978
  %15 = bitcast %struct._object** %result to i8*, !dbg !4978
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !4978
  ret %struct._object* %13, !dbg !4979
}

declare %struct._object* @PyImport_ImportModuleNoBlock(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @format_ctime(%struct.PyDateTime_Date* %date, i32 %hours, i32 %minutes, i32 %seconds) #0 {
entry:
  %date.addr = alloca %struct.PyDateTime_Date*, align 8
  %hours.addr = alloca i32, align 4
  %minutes.addr = alloca i32, align 4
  %seconds.addr = alloca i32, align 4
  %wday = alloca i32, align 4
  store %struct.PyDateTime_Date* %date, %struct.PyDateTime_Date** %date.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %date.addr, metadata !684, metadata !2553), !dbg !4980
  store i32 %hours, i32* %hours.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %hours.addr, metadata !685, metadata !2553), !dbg !4981
  store i32 %minutes, i32* %minutes.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %minutes.addr, metadata !686, metadata !2553), !dbg !4982
  store i32 %seconds, i32* %seconds.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %seconds.addr, metadata !687, metadata !2553), !dbg !4983
  %0 = bitcast i32* %wday to i8*, !dbg !4984
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4984
  call void @llvm.dbg.declare(metadata i32* %wday, metadata !688, metadata !2553), !dbg !4985
  %1 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4986, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %1, i32 0, i32 3, !dbg !4987
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !4988
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4988, !tbaa !3415
  %conv = zext i8 %2 to i32, !dbg !4988
  %shl = shl i32 %conv, 8, !dbg !4989
  %3 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4990, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %3, i32 0, i32 3, !dbg !4991
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !4992
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4992, !tbaa !3415
  %conv3 = zext i8 %4 to i32, !dbg !4992
  %or = or i32 %shl, %conv3, !dbg !4993
  %5 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4994, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %5, i32 0, i32 3, !dbg !4995
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !4996
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !4996, !tbaa !3415
  %conv6 = zext i8 %6 to i32, !dbg !4997
  %7 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !4998, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %7, i32 0, i32 3, !dbg !4999
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !5000
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !5000, !tbaa !3415
  %conv9 = zext i8 %8 to i32, !dbg !5001
  %call = call i32 @weekday(i32 %or, i32 %conv6, i32 %conv9), !dbg !5002
  store i32 %call, i32* %wday, align 4, !dbg !4985, !tbaa !3325
  %9 = load i32, i32* %wday, align 4, !dbg !5003, !tbaa !3325
  %idxprom = sext i32 %9 to i64, !dbg !5004
  %arrayidx10 = getelementptr [7 x i8*], [7 x i8*]* @format_ctime.DayNames, i32 0, i64 %idxprom, !dbg !5004
  %10 = load i8*, i8** %arrayidx10, align 8, !dbg !5004, !tbaa !2563
  %11 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !5005, !tbaa !2563
  %data11 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %11, i32 0, i32 3, !dbg !5006
  %arrayidx12 = getelementptr [4 x i8], [4 x i8]* %data11, i32 0, i64 2, !dbg !5007
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !5007, !tbaa !3415
  %conv13 = zext i8 %12 to i32, !dbg !5008
  %sub = sub i32 %conv13, 1, !dbg !5009
  %idxprom14 = sext i32 %sub to i64, !dbg !5010
  %arrayidx15 = getelementptr [12 x i8*], [12 x i8*]* @format_ctime.MonthNames, i32 0, i64 %idxprom14, !dbg !5010
  %13 = load i8*, i8** %arrayidx15, align 8, !dbg !5010, !tbaa !2563
  %14 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !5011, !tbaa !2563
  %data16 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %14, i32 0, i32 3, !dbg !5012
  %arrayidx17 = getelementptr [4 x i8], [4 x i8]* %data16, i32 0, i64 3, !dbg !5013
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !5013, !tbaa !3415
  %conv18 = zext i8 %15 to i32, !dbg !5014
  %16 = load i32, i32* %hours.addr, align 4, !dbg !5015, !tbaa !3325
  %17 = load i32, i32* %minutes.addr, align 4, !dbg !5016, !tbaa !3325
  %18 = load i32, i32* %seconds.addr, align 4, !dbg !5017, !tbaa !3325
  %19 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !5018, !tbaa !2563
  %data19 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %19, i32 0, i32 3, !dbg !5019
  %arrayidx20 = getelementptr [4 x i8], [4 x i8]* %data19, i32 0, i64 0, !dbg !5020
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !5020, !tbaa !3415
  %conv21 = zext i8 %20 to i32, !dbg !5020
  %shl22 = shl i32 %conv21, 8, !dbg !5021
  %21 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %date.addr, align 8, !dbg !5022, !tbaa !2563
  %data23 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %21, i32 0, i32 3, !dbg !5023
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %data23, i32 0, i64 1, !dbg !5024
  %22 = load i8, i8* %arrayidx24, align 1, !dbg !5024, !tbaa !3415
  %conv25 = zext i8 %22 to i32, !dbg !5024
  %or26 = or i32 %shl22, %conv25, !dbg !5025
  %call27 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.72, i32 0, i32 0), i8* %10, i8* %13, i32 %conv18, i32 %16, i32 %17, i32 %18, i32 %or26), !dbg !5026
  %23 = bitcast i32* %wday to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %23) #1, !dbg !5027
  ret %struct._object* %call27, !dbg !5028
}

; Function Attrs: nounwind uwtable
define internal i32 @weekday(i32 %year, i32 %month, i32 %day) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !691, metadata !2553), !dbg !5029
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !692, metadata !2553), !dbg !5030
  store i32 %day, i32* %day.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %day.addr, metadata !693, metadata !2553), !dbg !5031
  %0 = load i32, i32* %year.addr, align 4, !dbg !5032, !tbaa !3325
  %1 = load i32, i32* %month.addr, align 4, !dbg !5033, !tbaa !3325
  %2 = load i32, i32* %day.addr, align 4, !dbg !5034, !tbaa !3325
  %call = call i32 @ymd_to_ord(i32 %0, i32 %1, i32 %2), !dbg !5035
  %add = add i32 %call, 6, !dbg !5036
  %rem = srem i32 %add, 7, !dbg !5037
  ret i32 %rem, !dbg !5038
}

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @wrap_strftime(%struct._object* %object, %struct._object* %format, %struct._object* %timetuple, %struct._object* %tzinfoarg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %object.addr = alloca %struct._object*, align 8
  %format.addr = alloca %struct._object*, align 8
  %timetuple.addr = alloca %struct._object*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %zreplacement = alloca %struct._object*, align 8
  %Zreplacement = alloca %struct._object*, align 8
  %freplacement = alloca %struct._object*, align 8
  %pin = alloca i8*, align 8
  %flen = alloca i64, align 8
  %ch = alloca i8, align 1
  %newfmt = alloca %struct._object*, align 8
  %pnew = alloca i8*, align 8
  %totalnew = alloca i64, align 8
  %usednew = alloca i64, align 8
  %ptoappend = alloca i8*, align 8
  %ntoappend = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %buf = alloca [100 x i8], align 16
  %tzinfo = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %format133 = alloca %struct._object*, align 8
  %time = alloca %struct._object*, align 8
  %_py_decref_tmp147 = alloca %struct._object*, align 8
  %_py_decref_tmp161 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp182 = alloca %struct._object*, align 8
  %_py_xdecref_tmp198 = alloca %struct._object*, align 8
  %_py_decref_tmp203 = alloca %struct._object*, align 8
  %_py_xdecref_tmp219 = alloca %struct._object*, align 8
  %_py_decref_tmp224 = alloca %struct._object*, align 8
  %_py_xdecref_tmp240 = alloca %struct._object*, align 8
  %_py_decref_tmp245 = alloca %struct._object*, align 8
  store %struct._object* %object, %struct._object** %object.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %object.addr, metadata !710, metadata !2553), !dbg !5039
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !711, metadata !2553), !dbg !5040
  store %struct._object* %timetuple, %struct._object** %timetuple.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %timetuple.addr, metadata !712, metadata !2553), !dbg !5041
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !713, metadata !2553), !dbg !5042
  %0 = bitcast %struct._object** %result to i8*, !dbg !5043
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5043
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !714, metadata !2553), !dbg !5044
  store %struct._object* null, %struct._object** %result, align 8, !dbg !5044, !tbaa !2563
  %1 = bitcast %struct._object** %zreplacement to i8*, !dbg !5045
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5045
  call void @llvm.dbg.declare(metadata %struct._object** %zreplacement, metadata !715, metadata !2553), !dbg !5046
  store %struct._object* null, %struct._object** %zreplacement, align 8, !dbg !5046, !tbaa !2563
  %2 = bitcast %struct._object** %Zreplacement to i8*, !dbg !5047
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5047
  call void @llvm.dbg.declare(metadata %struct._object** %Zreplacement, metadata !716, metadata !2553), !dbg !5048
  store %struct._object* null, %struct._object** %Zreplacement, align 8, !dbg !5048, !tbaa !2563
  %3 = bitcast %struct._object** %freplacement to i8*, !dbg !5049
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5049
  call void @llvm.dbg.declare(metadata %struct._object** %freplacement, metadata !717, metadata !2553), !dbg !5050
  store %struct._object* null, %struct._object** %freplacement, align 8, !dbg !5050, !tbaa !2563
  %4 = bitcast i8** %pin to i8*, !dbg !5051
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5051
  call void @llvm.dbg.declare(metadata i8** %pin, metadata !718, metadata !2553), !dbg !5052
  %5 = bitcast i64* %flen to i8*, !dbg !5053
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !5053
  call void @llvm.dbg.declare(metadata i64* %flen, metadata !719, metadata !2553), !dbg !5054
  call void @llvm.lifetime.start(i64 1, i8* %ch) #1, !dbg !5055
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !720, metadata !2553), !dbg !5056
  %6 = bitcast %struct._object** %newfmt to i8*, !dbg !5057
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5057
  call void @llvm.dbg.declare(metadata %struct._object** %newfmt, metadata !721, metadata !2553), !dbg !5058
  store %struct._object* null, %struct._object** %newfmt, align 8, !dbg !5058, !tbaa !2563
  %7 = bitcast i8** %pnew to i8*, !dbg !5059
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !5059
  call void @llvm.dbg.declare(metadata i8** %pnew, metadata !722, metadata !2553), !dbg !5060
  %8 = bitcast i64* %totalnew to i8*, !dbg !5061
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5061
  call void @llvm.dbg.declare(metadata i64* %totalnew, metadata !723, metadata !2553), !dbg !5062
  %9 = bitcast i64* %usednew to i8*, !dbg !5063
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !5063
  call void @llvm.dbg.declare(metadata i64* %usednew, metadata !724, metadata !2553), !dbg !5064
  %10 = bitcast i8** %ptoappend to i8*, !dbg !5065
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !5065
  call void @llvm.dbg.declare(metadata i8** %ptoappend, metadata !725, metadata !2553), !dbg !5066
  %11 = bitcast i64* %ntoappend to i8*, !dbg !5067
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !5067
  call void @llvm.dbg.declare(metadata i64* %ntoappend, metadata !726, metadata !2553), !dbg !5068
  %12 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !5069, !tbaa !2563
  %call = call i8* @PyUnicode_AsUTF8AndSize(%struct._object* %12, i64* %flen), !dbg !5070
  store i8* %call, i8** %pin, align 8, !dbg !5071, !tbaa !2563
  %13 = load i8*, i8** %pin, align 8, !dbg !5072, !tbaa !2563
  %tobool = icmp ne i8* %13, null, !dbg !5072
  br i1 %tobool, label %if.end, label %if.then, !dbg !5074

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5075
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.260, !dbg !5075

if.end:                                           ; preds = %entry
  %14 = load i64, i64* %flen, align 8, !dbg !5076, !tbaa !5078
  %cmp = icmp sgt i64 %14, 2147483646, !dbg !5079
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !5080

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._object* @PyErr_NoMemory(), !dbg !5081
  br label %Done, !dbg !5083

if.end.3:                                         ; preds = %if.end
  %15 = load i64, i64* %flen, align 8, !dbg !5084, !tbaa !5078
  %add = add i64 %15, 1, !dbg !5085
  store i64 %add, i64* %totalnew, align 8, !dbg !5086, !tbaa !5078
  %16 = load i64, i64* %totalnew, align 8, !dbg !5087, !tbaa !5078
  %call4 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %16), !dbg !5088
  store %struct._object* %call4, %struct._object** %newfmt, align 8, !dbg !5089, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %newfmt, align 8, !dbg !5090, !tbaa !2563
  %cmp5 = icmp eq %struct._object* %17, null, !dbg !5092
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !5093

if.then.6:                                        ; preds = %if.end.3
  br label %Done, !dbg !5094

if.end.7:                                         ; preds = %if.end.3
  %18 = load %struct._object*, %struct._object** %newfmt, align 8, !dbg !5096, !tbaa !2563
  %call8 = call i8* @PyBytes_AsString(%struct._object* %18), !dbg !5097
  store i8* %call8, i8** %pnew, align 8, !dbg !5098, !tbaa !2563
  store i64 0, i64* %usednew, align 8, !dbg !5099, !tbaa !5078
  br label %while.cond, !dbg !5100

while.cond:                                       ; preds = %while.end, %if.then.106, %if.end.7
  %19 = load i8*, i8** %pin, align 8, !dbg !5101, !tbaa !2563
  %incdec.ptr = getelementptr i8, i8* %19, i32 1, !dbg !5101
  store i8* %incdec.ptr, i8** %pin, align 8, !dbg !5101, !tbaa !2563
  %20 = load i8, i8* %19, align 1, !dbg !5104, !tbaa !3415
  store i8 %20, i8* %ch, align 1, !dbg !5105, !tbaa !3415
  %conv = sext i8 %20 to i32, !dbg !5106
  %cmp9 = icmp ne i32 %conv, 0, !dbg !5107
  br i1 %cmp9, label %while.body, label %while.end.127, !dbg !5100

while.body:                                       ; preds = %while.cond
  %21 = load i8, i8* %ch, align 1, !dbg !5108, !tbaa !3415
  %conv11 = sext i8 %21 to i32, !dbg !5108
  %cmp12 = icmp ne i32 %conv11, 37, !dbg !5109
  br i1 %cmp12, label %if.then.14, label %if.else, !dbg !5110

if.then.14:                                       ; preds = %while.body
  %22 = load i8*, i8** %pin, align 8, !dbg !5111, !tbaa !2563
  %add.ptr = getelementptr i8, i8* %22, i64 -1, !dbg !5113
  store i8* %add.ptr, i8** %ptoappend, align 8, !dbg !5114, !tbaa !2563
  store i64 1, i64* %ntoappend, align 8, !dbg !5115, !tbaa !5078
  br label %if.end.103, !dbg !5116

if.else:                                          ; preds = %while.body
  %23 = load i8*, i8** %pin, align 8, !dbg !5117, !tbaa !2563
  %incdec.ptr15 = getelementptr i8, i8* %23, i32 1, !dbg !5117
  store i8* %incdec.ptr15, i8** %pin, align 8, !dbg !5117, !tbaa !2563
  %24 = load i8, i8* %23, align 1, !dbg !5118, !tbaa !3415
  store i8 %24, i8* %ch, align 1, !dbg !5119, !tbaa !3415
  %conv16 = sext i8 %24 to i32, !dbg !5120
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !5121
  br i1 %cmp17, label %if.then.19, label %if.else.20, !dbg !5122

if.then.19:                                       ; preds = %if.else
  %25 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5123, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i32 0, i32 0)), !dbg !5125
  br label %Done, !dbg !5126

if.else.20:                                       ; preds = %if.else
  %26 = load i8, i8* %ch, align 1, !dbg !5127, !tbaa !3415
  %conv21 = sext i8 %26 to i32, !dbg !5127
  %cmp22 = icmp eq i32 %conv21, 122, !dbg !5128
  br i1 %cmp22, label %if.then.24, label %if.else.61, !dbg !5129

if.then.24:                                       ; preds = %if.else.20
  %27 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5130, !tbaa !2563
  %cmp25 = icmp eq %struct._object* %27, null, !dbg !5131
  br i1 %cmp25, label %if.then.27, label %if.end.59, !dbg !5132

if.then.27:                                       ; preds = %if.then.24
  %28 = bitcast [100 x i8]* %buf to i8*, !dbg !5133
  call void @llvm.lifetime.start(i64 100, i8* %28) #1, !dbg !5133
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf, metadata !727, metadata !2553), !dbg !5134
  %29 = bitcast %struct._object** %tzinfo to i8*, !dbg !5135
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !5135
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !738, metadata !2553), !dbg !5136
  %30 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5137, !tbaa !2563
  %call28 = call %struct._object* @get_tzinfo_member(%struct._object* %30), !dbg !5138
  store %struct._object* %call28, %struct._object** %tzinfo, align 8, !dbg !5136, !tbaa !2563
  %call29 = call %struct._object* @PyBytes_FromStringAndSize(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i32 0, i32 0), i64 0), !dbg !5139
  store %struct._object* %call29, %struct._object** %zreplacement, align 8, !dbg !5140, !tbaa !2563
  %31 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5141, !tbaa !2563
  %cmp30 = icmp eq %struct._object* %31, null, !dbg !5143
  br i1 %cmp30, label %if.then.32, label %if.end.33, !dbg !5144

if.then.32:                                       ; preds = %if.then.27
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5145

if.end.33:                                        ; preds = %if.then.27
  %32 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5146, !tbaa !2563
  %cmp34 = icmp ne %struct._object* %32, @_Py_NoneStruct, !dbg !5147
  br i1 %cmp34, label %land.lhs.true, label %if.end.57, !dbg !5148

land.lhs.true:                                    ; preds = %if.end.33
  %33 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5149, !tbaa !2563
  %cmp36 = icmp ne %struct._object* %33, null, !dbg !5151
  br i1 %cmp36, label %if.then.38, label %if.end.57, !dbg !5152

if.then.38:                                       ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !5153
  %34 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5155, !tbaa !2563
  %35 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !5156, !tbaa !2563
  %call39 = call i32 @format_utcoffset(i8* %arraydecay, i64 100, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i32 0, i32 0), %struct._object* %34, %struct._object* %35), !dbg !5157
  %cmp40 = icmp slt i32 %call39, 0, !dbg !5158
  br i1 %cmp40, label %if.then.42, label %if.end.43, !dbg !5159

if.then.42:                                       ; preds = %if.then.38
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5160

if.end.43:                                        ; preds = %if.then.38
  br label %do.body, !dbg !5161

do.body:                                          ; preds = %if.end.43
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5162
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !5162
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !739, metadata !2553), !dbg !5164
  %37 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5165, !tbaa !2563
  store %struct._object* %37, %struct._object** %_py_decref_tmp, align 8, !dbg !5164, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5166, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !5168
  %39 = load i64, i64* %ob_refcnt, align 8, !dbg !5169, !tbaa !2632
  %dec = add i64 %39, -1, !dbg !5169
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5169, !tbaa !2632
  %cmp44 = icmp ne i64 %dec, 0, !dbg !5170
  br i1 %cmp44, label %if.then.46, label %if.else.47, !dbg !5171

if.then.46:                                       ; preds = %do.body
  br label %if.end.48, !dbg !5172

if.else.47:                                       ; preds = %do.body
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5174, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !5176
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5176, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !5177
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5177, !tbaa !2642
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5178, !tbaa !2563
  call void %42(%struct._object* %43), !dbg !5179
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.47, %if.then.46
  %44 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5180
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !5180
  br label %do.cond, !dbg !5182

do.cond:                                          ; preds = %if.end.48
  br label %do.end, !dbg !5183

do.end:                                           ; preds = %do.cond
  %arraydecay49 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !5185
  %arraydecay50 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !5186
  %call51 = call i64 @strlen(i8* %arraydecay50) #7, !dbg !5187
  %call52 = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay49, i64 %call51), !dbg !5188
  store %struct._object* %call52, %struct._object** %zreplacement, align 8, !dbg !5189, !tbaa !2563
  %45 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5190, !tbaa !2563
  %cmp53 = icmp eq %struct._object* %45, null, !dbg !5192
  br i1 %cmp53, label %if.then.55, label %if.end.56, !dbg !5193

if.then.55:                                       ; preds = %do.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5194

if.end.56:                                        ; preds = %do.end
  br label %if.end.57, !dbg !5195

if.end.57:                                        ; preds = %if.end.56, %land.lhs.true, %if.end.33
  store i32 0, i32* %cleanup.dest.slot, !dbg !5196
  br label %cleanup, !dbg !5196

cleanup:                                          ; preds = %if.then.55, %if.then.42, %if.then.32, %if.end.57
  %46 = bitcast %struct._object** %tzinfo to i8*, !dbg !5197
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !5197
  %47 = bitcast [100 x i8]* %buf to i8*, !dbg !5197
  call void @llvm.lifetime.end(i64 100, i8* %47) #1, !dbg !5197
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.260 [
    i32 0, label %cleanup.cont
    i32 2, label %Done
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.59, !dbg !5199

if.end.59:                                        ; preds = %cleanup.cont, %if.then.24
  %48 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5200, !tbaa !2563
  %49 = bitcast %struct._object* %48 to %struct.PyBytesObject*, !dbg !5201
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %49, i32 0, i32 2, !dbg !5202
  %arraydecay60 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5203
  store i8* %arraydecay60, i8** %ptoappend, align 8, !dbg !5204, !tbaa !2563
  %50 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5205, !tbaa !2563
  %51 = bitcast %struct._object* %50 to %struct.PyVarObject*, !dbg !5206
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %51, i32 0, i32 1, !dbg !5207
  %52 = load i64, i64* %ob_size, align 8, !dbg !5207, !tbaa !3741
  store i64 %52, i64* %ntoappend, align 8, !dbg !5208, !tbaa !5078
  br label %if.end.101, !dbg !5209

if.else.61:                                       ; preds = %if.else.20
  %53 = load i8, i8* %ch, align 1, !dbg !5210, !tbaa !3415
  %conv62 = sext i8 %53 to i32, !dbg !5210
  %cmp63 = icmp eq i32 %conv62, 90, !dbg !5212
  br i1 %cmp63, label %if.then.65, label %if.else.80, !dbg !5213

if.then.65:                                       ; preds = %if.else.61
  %54 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5214, !tbaa !2563
  %cmp66 = icmp eq %struct._object* %54, null, !dbg !5217
  br i1 %cmp66, label %if.then.68, label %if.end.74, !dbg !5218

if.then.68:                                       ; preds = %if.then.65
  %55 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5219, !tbaa !2563
  %56 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !5221, !tbaa !2563
  %call69 = call %struct._object* @make_Zreplacement(%struct._object* %55, %struct._object* %56), !dbg !5222
  store %struct._object* %call69, %struct._object** %Zreplacement, align 8, !dbg !5223, !tbaa !2563
  %57 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5224, !tbaa !2563
  %cmp70 = icmp eq %struct._object* %57, null, !dbg !5226
  br i1 %cmp70, label %if.then.72, label %if.end.73, !dbg !5227

if.then.72:                                       ; preds = %if.then.68
  br label %Done, !dbg !5228

if.end.73:                                        ; preds = %if.then.68
  br label %if.end.74, !dbg !5229

if.end.74:                                        ; preds = %if.end.73, %if.then.65
  %58 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5230, !tbaa !2563
  %call75 = call i8* @PyUnicode_AsUTF8AndSize(%struct._object* %58, i64* %ntoappend), !dbg !5231
  store i8* %call75, i8** %ptoappend, align 8, !dbg !5232, !tbaa !2563
  %59 = load i8*, i8** %ptoappend, align 8, !dbg !5233, !tbaa !2563
  %cmp76 = icmp eq i8* %59, null, !dbg !5235
  br i1 %cmp76, label %if.then.78, label %if.end.79, !dbg !5236

if.then.78:                                       ; preds = %if.end.74
  br label %Done, !dbg !5237

if.end.79:                                        ; preds = %if.end.74
  br label %if.end.100, !dbg !5238

if.else.80:                                       ; preds = %if.else.61
  %60 = load i8, i8* %ch, align 1, !dbg !5239, !tbaa !3415
  %conv81 = sext i8 %60 to i32, !dbg !5239
  %cmp82 = icmp eq i32 %conv81, 102, !dbg !5241
  br i1 %cmp82, label %if.then.84, label %if.else.97, !dbg !5242

if.then.84:                                       ; preds = %if.else.80
  %61 = load %struct._object*, %struct._object** %freplacement, align 8, !dbg !5243, !tbaa !2563
  %cmp85 = icmp eq %struct._object* %61, null, !dbg !5246
  br i1 %cmp85, label %if.then.87, label %if.end.93, !dbg !5247

if.then.87:                                       ; preds = %if.then.84
  %62 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5248, !tbaa !2563
  %call88 = call %struct._object* @make_freplacement(%struct._object* %62), !dbg !5250
  store %struct._object* %call88, %struct._object** %freplacement, align 8, !dbg !5251, !tbaa !2563
  %63 = load %struct._object*, %struct._object** %freplacement, align 8, !dbg !5252, !tbaa !2563
  %cmp89 = icmp eq %struct._object* %63, null, !dbg !5254
  br i1 %cmp89, label %if.then.91, label %if.end.92, !dbg !5255

if.then.91:                                       ; preds = %if.then.87
  br label %Done, !dbg !5256

if.end.92:                                        ; preds = %if.then.87
  br label %if.end.93, !dbg !5257

if.end.93:                                        ; preds = %if.end.92, %if.then.84
  %64 = load %struct._object*, %struct._object** %freplacement, align 8, !dbg !5258, !tbaa !2563
  %65 = bitcast %struct._object* %64 to %struct.PyBytesObject*, !dbg !5259
  %ob_sval94 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %65, i32 0, i32 2, !dbg !5260
  %arraydecay95 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval94, i32 0, i32 0, !dbg !5261
  store i8* %arraydecay95, i8** %ptoappend, align 8, !dbg !5262, !tbaa !2563
  %66 = load %struct._object*, %struct._object** %freplacement, align 8, !dbg !5263, !tbaa !2563
  %67 = bitcast %struct._object* %66 to %struct.PyVarObject*, !dbg !5264
  %ob_size96 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %67, i32 0, i32 1, !dbg !5265
  %68 = load i64, i64* %ob_size96, align 8, !dbg !5265, !tbaa !3741
  store i64 %68, i64* %ntoappend, align 8, !dbg !5266, !tbaa !5078
  br label %if.end.99, !dbg !5267

if.else.97:                                       ; preds = %if.else.80
  %69 = load i8*, i8** %pin, align 8, !dbg !5268, !tbaa !2563
  %add.ptr98 = getelementptr i8, i8* %69, i64 -2, !dbg !5270
  store i8* %add.ptr98, i8** %ptoappend, align 8, !dbg !5271, !tbaa !2563
  store i64 2, i64* %ntoappend, align 8, !dbg !5272, !tbaa !5078
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.97, %if.end.93
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.end.79
  br label %if.end.101

if.end.101:                                       ; preds = %if.end.100, %if.end.59
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.101
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %if.then.14
  %70 = load i64, i64* %ntoappend, align 8, !dbg !5273, !tbaa !5078
  %cmp104 = icmp eq i64 %70, 0, !dbg !5275
  br i1 %cmp104, label %if.then.106, label %if.end.107, !dbg !5276

if.then.106:                                      ; preds = %if.end.103
  br label %while.cond, !dbg !5277

if.end.107:                                       ; preds = %if.end.103
  br label %while.cond.108, !dbg !5278

while.cond.108:                                   ; preds = %if.end.122, %if.end.107
  %71 = load i64, i64* %usednew, align 8, !dbg !5279, !tbaa !5078
  %72 = load i64, i64* %ntoappend, align 8, !dbg !5282, !tbaa !5078
  %add109 = add i64 %71, %72, !dbg !5283
  %73 = load i64, i64* %totalnew, align 8, !dbg !5284, !tbaa !5078
  %cmp110 = icmp ugt i64 %add109, %73, !dbg !5285
  br i1 %cmp110, label %while.body.112, label %while.end, !dbg !5278

while.body.112:                                   ; preds = %while.cond.108
  %74 = load i64, i64* %totalnew, align 8, !dbg !5286, !tbaa !5078
  %cmp113 = icmp ugt i64 %74, 4611686018427387903, !dbg !5289
  br i1 %cmp113, label %if.then.115, label %if.end.117, !dbg !5290

if.then.115:                                      ; preds = %while.body.112
  %call116 = call %struct._object* @PyErr_NoMemory(), !dbg !5291
  br label %Done, !dbg !5293

if.end.117:                                       ; preds = %while.body.112
  %75 = load i64, i64* %totalnew, align 8, !dbg !5294, !tbaa !5078
  %shl = shl i64 %75, 1, !dbg !5294
  store i64 %shl, i64* %totalnew, align 8, !dbg !5294, !tbaa !5078
  %76 = load i64, i64* %totalnew, align 8, !dbg !5295, !tbaa !5078
  %call118 = call i32 @_PyBytes_Resize(%struct._object** %newfmt, i64 %76), !dbg !5297
  %cmp119 = icmp slt i32 %call118, 0, !dbg !5298
  br i1 %cmp119, label %if.then.121, label %if.end.122, !dbg !5299

if.then.121:                                      ; preds = %if.end.117
  br label %Done, !dbg !5300

if.end.122:                                       ; preds = %if.end.117
  %77 = load %struct._object*, %struct._object** %newfmt, align 8, !dbg !5301, !tbaa !2563
  %call123 = call i8* @PyBytes_AsString(%struct._object* %77), !dbg !5302
  %78 = load i64, i64* %usednew, align 8, !dbg !5303, !tbaa !5078
  %add.ptr124 = getelementptr i8, i8* %call123, i64 %78, !dbg !5304
  store i8* %add.ptr124, i8** %pnew, align 8, !dbg !5305, !tbaa !2563
  br label %while.cond.108, !dbg !5278

while.end:                                        ; preds = %while.cond.108
  %79 = load i8*, i8** %pnew, align 8, !dbg !5306, !tbaa !2563
  %80 = load i8*, i8** %ptoappend, align 8, !dbg !5307, !tbaa !2563
  %81 = load i64, i64* %ntoappend, align 8, !dbg !5308, !tbaa !5078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 %81, i32 1, i1 false), !dbg !5309
  %82 = load i64, i64* %ntoappend, align 8, !dbg !5310, !tbaa !5078
  %83 = load i8*, i8** %pnew, align 8, !dbg !5311, !tbaa !2563
  %add.ptr125 = getelementptr i8, i8* %83, i64 %82, !dbg !5311
  store i8* %add.ptr125, i8** %pnew, align 8, !dbg !5311, !tbaa !2563
  %84 = load i64, i64* %ntoappend, align 8, !dbg !5312, !tbaa !5078
  %85 = load i64, i64* %usednew, align 8, !dbg !5313, !tbaa !5078
  %add126 = add i64 %85, %84, !dbg !5313
  store i64 %add126, i64* %usednew, align 8, !dbg !5313, !tbaa !5078
  br label %while.cond, !dbg !5100

while.end.127:                                    ; preds = %while.cond
  %86 = load i64, i64* %usednew, align 8, !dbg !5314, !tbaa !5078
  %call128 = call i32 @_PyBytes_Resize(%struct._object** %newfmt, i64 %86), !dbg !5316
  %cmp129 = icmp slt i32 %call128, 0, !dbg !5317
  br i1 %cmp129, label %if.then.131, label %if.end.132, !dbg !5318

if.then.131:                                      ; preds = %while.end.127
  br label %Done, !dbg !5319

if.end.132:                                       ; preds = %while.end.127
  %87 = bitcast %struct._object** %format133 to i8*, !dbg !5320
  call void @llvm.lifetime.start(i64 8, i8* %87) #1, !dbg !5320
  call void @llvm.dbg.declare(metadata %struct._object** %format133, metadata !743, metadata !2553), !dbg !5321
  %88 = bitcast %struct._object** %time to i8*, !dbg !5322
  call void @llvm.lifetime.start(i64 8, i8* %88) #1, !dbg !5322
  call void @llvm.dbg.declare(metadata %struct._object** %time, metadata !745, metadata !2553), !dbg !5323
  %call134 = call %struct._object* @PyImport_ImportModuleNoBlock(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0)), !dbg !5324
  store %struct._object* %call134, %struct._object** %time, align 8, !dbg !5323, !tbaa !2563
  %89 = load %struct._object*, %struct._object** %time, align 8, !dbg !5325, !tbaa !2563
  %cmp135 = icmp eq %struct._object* %89, null, !dbg !5327
  br i1 %cmp135, label %if.then.137, label %if.end.138, !dbg !5328

if.then.137:                                      ; preds = %if.end.132
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.173, !dbg !5329

if.end.138:                                       ; preds = %if.end.132
  %90 = load %struct._object*, %struct._object** %newfmt, align 8, !dbg !5330, !tbaa !2563
  %91 = bitcast %struct._object* %90 to %struct.PyBytesObject*, !dbg !5331
  %ob_sval139 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %91, i32 0, i32 2, !dbg !5332
  %arraydecay140 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval139, i32 0, i32 0, !dbg !5333
  %call141 = call %struct._object* @PyUnicode_FromString(i8* %arraydecay140), !dbg !5334
  store %struct._object* %call141, %struct._object** %format133, align 8, !dbg !5335, !tbaa !2563
  %92 = load %struct._object*, %struct._object** %format133, align 8, !dbg !5336, !tbaa !2563
  %cmp142 = icmp ne %struct._object* %92, null, !dbg !5337
  br i1 %cmp142, label %if.then.144, label %if.end.159, !dbg !5338

if.then.144:                                      ; preds = %if.end.138
  %93 = load %struct._object*, %struct._object** %time, align 8, !dbg !5339, !tbaa !2563
  %94 = load %struct._object*, %struct._object** %format133, align 8, !dbg !5340, !tbaa !2563
  %95 = load %struct._object*, %struct._object** %timetuple.addr, align 8, !dbg !5341, !tbaa !2563
  %call145 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %93, %struct._Py_Identifier* @PyId_strftime, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), %struct._object* %94, %struct._object* %95, i8* null), !dbg !5342
  store %struct._object* %call145, %struct._object** %result, align 8, !dbg !5343, !tbaa !2563
  br label %do.body.146, !dbg !5344

do.body.146:                                      ; preds = %if.then.144
  %96 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !5345
  call void @llvm.lifetime.start(i64 8, i8* %96) #1, !dbg !5345
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp147, metadata !746, metadata !2553), !dbg !5347
  %97 = load %struct._object*, %struct._object** %format133, align 8, !dbg !5348, !tbaa !2563
  store %struct._object* %97, %struct._object** %_py_decref_tmp147, align 8, !dbg !5347, !tbaa !2563
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !5349, !tbaa !2563
  %ob_refcnt148 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 0, !dbg !5351
  %99 = load i64, i64* %ob_refcnt148, align 8, !dbg !5352, !tbaa !2632
  %dec149 = add i64 %99, -1, !dbg !5352
  store i64 %dec149, i64* %ob_refcnt148, align 8, !dbg !5352, !tbaa !2632
  %cmp150 = icmp ne i64 %dec149, 0, !dbg !5353
  br i1 %cmp150, label %if.then.152, label %if.else.153, !dbg !5354

if.then.152:                                      ; preds = %do.body.146
  br label %if.end.156, !dbg !5355

if.else.153:                                      ; preds = %do.body.146
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !5357, !tbaa !2563
  %ob_type154 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 1, !dbg !5359
  %101 = load %struct._typeobject*, %struct._typeobject** %ob_type154, align 8, !dbg !5359, !tbaa !2640
  %tp_dealloc155 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %101, i32 0, i32 4, !dbg !5360
  %102 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc155, align 8, !dbg !5360, !tbaa !2642
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !5361, !tbaa !2563
  call void %102(%struct._object* %103), !dbg !5362
  br label %if.end.156

if.end.156:                                       ; preds = %if.else.153, %if.then.152
  %104 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !5363
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !5363
  br label %do.cond.157, !dbg !5365

do.cond.157:                                      ; preds = %if.end.156
  br label %do.end.158, !dbg !5366

do.end.158:                                       ; preds = %do.cond.157
  br label %if.end.159, !dbg !5368

if.end.159:                                       ; preds = %do.end.158, %if.end.138
  br label %do.body.160, !dbg !5369

do.body.160:                                      ; preds = %if.end.159
  %105 = bitcast %struct._object** %_py_decref_tmp161 to i8*, !dbg !5370
  call void @llvm.lifetime.start(i64 8, i8* %105) #1, !dbg !5370
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp161, metadata !750, metadata !2553), !dbg !5372
  %106 = load %struct._object*, %struct._object** %time, align 8, !dbg !5373, !tbaa !2563
  store %struct._object* %106, %struct._object** %_py_decref_tmp161, align 8, !dbg !5372, !tbaa !2563
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp161, align 8, !dbg !5374, !tbaa !2563
  %ob_refcnt162 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !5376
  %108 = load i64, i64* %ob_refcnt162, align 8, !dbg !5377, !tbaa !2632
  %dec163 = add i64 %108, -1, !dbg !5377
  store i64 %dec163, i64* %ob_refcnt162, align 8, !dbg !5377, !tbaa !2632
  %cmp164 = icmp ne i64 %dec163, 0, !dbg !5378
  br i1 %cmp164, label %if.then.166, label %if.else.167, !dbg !5379

if.then.166:                                      ; preds = %do.body.160
  br label %if.end.170, !dbg !5380

if.else.167:                                      ; preds = %do.body.160
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp161, align 8, !dbg !5382, !tbaa !2563
  %ob_type168 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 1, !dbg !5384
  %110 = load %struct._typeobject*, %struct._typeobject** %ob_type168, align 8, !dbg !5384, !tbaa !2640
  %tp_dealloc169 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %110, i32 0, i32 4, !dbg !5385
  %111 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc169, align 8, !dbg !5385, !tbaa !2642
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp161, align 8, !dbg !5386, !tbaa !2563
  call void %111(%struct._object* %112), !dbg !5387
  br label %if.end.170

if.end.170:                                       ; preds = %if.else.167, %if.then.166
  %113 = bitcast %struct._object** %_py_decref_tmp161 to i8*, !dbg !5388
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !5388
  br label %do.cond.171, !dbg !5390

do.cond.171:                                      ; preds = %if.end.170
  br label %do.end.172, !dbg !5391

do.end.172:                                       ; preds = %do.cond.171
  store i32 0, i32* %cleanup.dest.slot, !dbg !5393
  br label %cleanup.173, !dbg !5393

cleanup.173:                                      ; preds = %if.then.137, %do.end.172
  %114 = bitcast %struct._object** %time to i8*, !dbg !5394
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !5394
  %115 = bitcast %struct._object** %format133 to i8*, !dbg !5394
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !5394
  %cleanup.dest.175 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.175, label %cleanup.260 [
    i32 0, label %cleanup.cont.176
    i32 2, label %Done
  ]

cleanup.cont.176:                                 ; preds = %cleanup.173
  br label %Done, !dbg !5395

Done:                                             ; preds = %cleanup.cont.176, %cleanup.173, %cleanup, %if.then.131, %if.then.121, %if.then.115, %if.then.91, %if.then.78, %if.then.72, %if.then.19, %if.then.6, %if.then.1
  br label %do.body.177, !dbg !5396

do.body.177:                                      ; preds = %Done
  %116 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5397
  call void @llvm.lifetime.start(i64 8, i8* %116) #1, !dbg !5397
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !752, metadata !2553), !dbg !5399
  %117 = load %struct._object*, %struct._object** %freplacement, align 8, !dbg !5400, !tbaa !2563
  store %struct._object* %117, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5399, !tbaa !2563
  %118 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5401, !tbaa !2563
  %cmp178 = icmp ne %struct._object* %118, null, !dbg !5402
  br i1 %cmp178, label %if.then.180, label %if.end.194, !dbg !5403

if.then.180:                                      ; preds = %do.body.177
  br label %do.body.181, !dbg !5404

do.body.181:                                      ; preds = %if.then.180
  %119 = bitcast %struct._object** %_py_decref_tmp182 to i8*, !dbg !5406
  call void @llvm.lifetime.start(i64 8, i8* %119) #1, !dbg !5406
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp182, metadata !754, metadata !2553), !dbg !5408
  %120 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5409, !tbaa !2563
  store %struct._object* %120, %struct._object** %_py_decref_tmp182, align 8, !dbg !5408, !tbaa !2563
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !5410, !tbaa !2563
  %ob_refcnt183 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 0, !dbg !5412
  %122 = load i64, i64* %ob_refcnt183, align 8, !dbg !5413, !tbaa !2632
  %dec184 = add i64 %122, -1, !dbg !5413
  store i64 %dec184, i64* %ob_refcnt183, align 8, !dbg !5413, !tbaa !2632
  %cmp185 = icmp ne i64 %dec184, 0, !dbg !5414
  br i1 %cmp185, label %if.then.187, label %if.else.188, !dbg !5415

if.then.187:                                      ; preds = %do.body.181
  br label %if.end.191, !dbg !5416

if.else.188:                                      ; preds = %do.body.181
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !5418, !tbaa !2563
  %ob_type189 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 1, !dbg !5420
  %124 = load %struct._typeobject*, %struct._typeobject** %ob_type189, align 8, !dbg !5420, !tbaa !2640
  %tp_dealloc190 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %124, i32 0, i32 4, !dbg !5421
  %125 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc190, align 8, !dbg !5421, !tbaa !2642
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !5422, !tbaa !2563
  call void %125(%struct._object* %126), !dbg !5423
  br label %if.end.191

if.end.191:                                       ; preds = %if.else.188, %if.then.187
  %127 = bitcast %struct._object** %_py_decref_tmp182 to i8*, !dbg !5424
  call void @llvm.lifetime.end(i64 8, i8* %127) #1, !dbg !5424
  br label %do.cond.192, !dbg !5426

do.cond.192:                                      ; preds = %if.end.191
  br label %do.end.193, !dbg !5427

do.end.193:                                       ; preds = %do.cond.192
  br label %if.end.194, !dbg !5429

if.end.194:                                       ; preds = %do.end.193, %do.body.177
  %128 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5431
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !5431
  br label %do.cond.195, !dbg !5434

do.cond.195:                                      ; preds = %if.end.194
  br label %do.end.196, !dbg !5435

do.end.196:                                       ; preds = %do.cond.195
  br label %do.body.197, !dbg !5437

do.body.197:                                      ; preds = %do.end.196
  %129 = bitcast %struct._object** %_py_xdecref_tmp198 to i8*, !dbg !5438
  call void @llvm.lifetime.start(i64 8, i8* %129) #1, !dbg !5438
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp198, metadata !757, metadata !2553), !dbg !5440
  %130 = load %struct._object*, %struct._object** %zreplacement, align 8, !dbg !5441, !tbaa !2563
  store %struct._object* %130, %struct._object** %_py_xdecref_tmp198, align 8, !dbg !5440, !tbaa !2563
  %131 = load %struct._object*, %struct._object** %_py_xdecref_tmp198, align 8, !dbg !5442, !tbaa !2563
  %cmp199 = icmp ne %struct._object* %131, null, !dbg !5443
  br i1 %cmp199, label %if.then.201, label %if.end.215, !dbg !5444

if.then.201:                                      ; preds = %do.body.197
  br label %do.body.202, !dbg !5445

do.body.202:                                      ; preds = %if.then.201
  %132 = bitcast %struct._object** %_py_decref_tmp203 to i8*, !dbg !5447
  call void @llvm.lifetime.start(i64 8, i8* %132) #1, !dbg !5447
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp203, metadata !759, metadata !2553), !dbg !5449
  %133 = load %struct._object*, %struct._object** %_py_xdecref_tmp198, align 8, !dbg !5450, !tbaa !2563
  store %struct._object* %133, %struct._object** %_py_decref_tmp203, align 8, !dbg !5449, !tbaa !2563
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp203, align 8, !dbg !5451, !tbaa !2563
  %ob_refcnt204 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 0, !dbg !5453
  %135 = load i64, i64* %ob_refcnt204, align 8, !dbg !5454, !tbaa !2632
  %dec205 = add i64 %135, -1, !dbg !5454
  store i64 %dec205, i64* %ob_refcnt204, align 8, !dbg !5454, !tbaa !2632
  %cmp206 = icmp ne i64 %dec205, 0, !dbg !5455
  br i1 %cmp206, label %if.then.208, label %if.else.209, !dbg !5456

if.then.208:                                      ; preds = %do.body.202
  br label %if.end.212, !dbg !5457

if.else.209:                                      ; preds = %do.body.202
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp203, align 8, !dbg !5459, !tbaa !2563
  %ob_type210 = getelementptr inbounds %struct._object, %struct._object* %136, i32 0, i32 1, !dbg !5461
  %137 = load %struct._typeobject*, %struct._typeobject** %ob_type210, align 8, !dbg !5461, !tbaa !2640
  %tp_dealloc211 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %137, i32 0, i32 4, !dbg !5462
  %138 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc211, align 8, !dbg !5462, !tbaa !2642
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp203, align 8, !dbg !5463, !tbaa !2563
  call void %138(%struct._object* %139), !dbg !5464
  br label %if.end.212

if.end.212:                                       ; preds = %if.else.209, %if.then.208
  %140 = bitcast %struct._object** %_py_decref_tmp203 to i8*, !dbg !5465
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !5465
  br label %do.cond.213, !dbg !5467

do.cond.213:                                      ; preds = %if.end.212
  br label %do.end.214, !dbg !5468

do.end.214:                                       ; preds = %do.cond.213
  br label %if.end.215, !dbg !5470

if.end.215:                                       ; preds = %do.end.214, %do.body.197
  %141 = bitcast %struct._object** %_py_xdecref_tmp198 to i8*, !dbg !5472
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !5472
  br label %do.cond.216, !dbg !5473

do.cond.216:                                      ; preds = %if.end.215
  br label %do.end.217, !dbg !5474

do.end.217:                                       ; preds = %do.cond.216
  br label %do.body.218, !dbg !5476

do.body.218:                                      ; preds = %do.end.217
  %142 = bitcast %struct._object** %_py_xdecref_tmp219 to i8*, !dbg !5477
  call void @llvm.lifetime.start(i64 8, i8* %142) #1, !dbg !5477
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp219, metadata !762, metadata !2553), !dbg !5479
  %143 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5480, !tbaa !2563
  store %struct._object* %143, %struct._object** %_py_xdecref_tmp219, align 8, !dbg !5479, !tbaa !2563
  %144 = load %struct._object*, %struct._object** %_py_xdecref_tmp219, align 8, !dbg !5481, !tbaa !2563
  %cmp220 = icmp ne %struct._object* %144, null, !dbg !5482
  br i1 %cmp220, label %if.then.222, label %if.end.236, !dbg !5483

if.then.222:                                      ; preds = %do.body.218
  br label %do.body.223, !dbg !5484

do.body.223:                                      ; preds = %if.then.222
  %145 = bitcast %struct._object** %_py_decref_tmp224 to i8*, !dbg !5486
  call void @llvm.lifetime.start(i64 8, i8* %145) #1, !dbg !5486
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp224, metadata !764, metadata !2553), !dbg !5488
  %146 = load %struct._object*, %struct._object** %_py_xdecref_tmp219, align 8, !dbg !5489, !tbaa !2563
  store %struct._object* %146, %struct._object** %_py_decref_tmp224, align 8, !dbg !5488, !tbaa !2563
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp224, align 8, !dbg !5490, !tbaa !2563
  %ob_refcnt225 = getelementptr inbounds %struct._object, %struct._object* %147, i32 0, i32 0, !dbg !5492
  %148 = load i64, i64* %ob_refcnt225, align 8, !dbg !5493, !tbaa !2632
  %dec226 = add i64 %148, -1, !dbg !5493
  store i64 %dec226, i64* %ob_refcnt225, align 8, !dbg !5493, !tbaa !2632
  %cmp227 = icmp ne i64 %dec226, 0, !dbg !5494
  br i1 %cmp227, label %if.then.229, label %if.else.230, !dbg !5495

if.then.229:                                      ; preds = %do.body.223
  br label %if.end.233, !dbg !5496

if.else.230:                                      ; preds = %do.body.223
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp224, align 8, !dbg !5498, !tbaa !2563
  %ob_type231 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 1, !dbg !5500
  %150 = load %struct._typeobject*, %struct._typeobject** %ob_type231, align 8, !dbg !5500, !tbaa !2640
  %tp_dealloc232 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %150, i32 0, i32 4, !dbg !5501
  %151 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc232, align 8, !dbg !5501, !tbaa !2642
  %152 = load %struct._object*, %struct._object** %_py_decref_tmp224, align 8, !dbg !5502, !tbaa !2563
  call void %151(%struct._object* %152), !dbg !5503
  br label %if.end.233

if.end.233:                                       ; preds = %if.else.230, %if.then.229
  %153 = bitcast %struct._object** %_py_decref_tmp224 to i8*, !dbg !5504
  call void @llvm.lifetime.end(i64 8, i8* %153) #1, !dbg !5504
  br label %do.cond.234, !dbg !5506

do.cond.234:                                      ; preds = %if.end.233
  br label %do.end.235, !dbg !5507

do.end.235:                                       ; preds = %do.cond.234
  br label %if.end.236, !dbg !5509

if.end.236:                                       ; preds = %do.end.235, %do.body.218
  %154 = bitcast %struct._object** %_py_xdecref_tmp219 to i8*, !dbg !5511
  call void @llvm.lifetime.end(i64 8, i8* %154) #1, !dbg !5511
  br label %do.cond.237, !dbg !5512

do.cond.237:                                      ; preds = %if.end.236
  br label %do.end.238, !dbg !5513

do.end.238:                                       ; preds = %do.cond.237
  br label %do.body.239, !dbg !5515

do.body.239:                                      ; preds = %do.end.238
  %155 = bitcast %struct._object** %_py_xdecref_tmp240 to i8*, !dbg !5516
  call void @llvm.lifetime.start(i64 8, i8* %155) #1, !dbg !5516
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp240, metadata !767, metadata !2553), !dbg !5518
  %156 = load %struct._object*, %struct._object** %newfmt, align 8, !dbg !5519, !tbaa !2563
  store %struct._object* %156, %struct._object** %_py_xdecref_tmp240, align 8, !dbg !5518, !tbaa !2563
  %157 = load %struct._object*, %struct._object** %_py_xdecref_tmp240, align 8, !dbg !5520, !tbaa !2563
  %cmp241 = icmp ne %struct._object* %157, null, !dbg !5521
  br i1 %cmp241, label %if.then.243, label %if.end.257, !dbg !5522

if.then.243:                                      ; preds = %do.body.239
  br label %do.body.244, !dbg !5523

do.body.244:                                      ; preds = %if.then.243
  %158 = bitcast %struct._object** %_py_decref_tmp245 to i8*, !dbg !5525
  call void @llvm.lifetime.start(i64 8, i8* %158) #1, !dbg !5525
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp245, metadata !769, metadata !2553), !dbg !5527
  %159 = load %struct._object*, %struct._object** %_py_xdecref_tmp240, align 8, !dbg !5528, !tbaa !2563
  store %struct._object* %159, %struct._object** %_py_decref_tmp245, align 8, !dbg !5527, !tbaa !2563
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp245, align 8, !dbg !5529, !tbaa !2563
  %ob_refcnt246 = getelementptr inbounds %struct._object, %struct._object* %160, i32 0, i32 0, !dbg !5531
  %161 = load i64, i64* %ob_refcnt246, align 8, !dbg !5532, !tbaa !2632
  %dec247 = add i64 %161, -1, !dbg !5532
  store i64 %dec247, i64* %ob_refcnt246, align 8, !dbg !5532, !tbaa !2632
  %cmp248 = icmp ne i64 %dec247, 0, !dbg !5533
  br i1 %cmp248, label %if.then.250, label %if.else.251, !dbg !5534

if.then.250:                                      ; preds = %do.body.244
  br label %if.end.254, !dbg !5535

if.else.251:                                      ; preds = %do.body.244
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp245, align 8, !dbg !5537, !tbaa !2563
  %ob_type252 = getelementptr inbounds %struct._object, %struct._object* %162, i32 0, i32 1, !dbg !5539
  %163 = load %struct._typeobject*, %struct._typeobject** %ob_type252, align 8, !dbg !5539, !tbaa !2640
  %tp_dealloc253 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %163, i32 0, i32 4, !dbg !5540
  %164 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc253, align 8, !dbg !5540, !tbaa !2642
  %165 = load %struct._object*, %struct._object** %_py_decref_tmp245, align 8, !dbg !5541, !tbaa !2563
  call void %164(%struct._object* %165), !dbg !5542
  br label %if.end.254

if.end.254:                                       ; preds = %if.else.251, %if.then.250
  %166 = bitcast %struct._object** %_py_decref_tmp245 to i8*, !dbg !5543
  call void @llvm.lifetime.end(i64 8, i8* %166) #1, !dbg !5543
  br label %do.cond.255, !dbg !5545

do.cond.255:                                      ; preds = %if.end.254
  br label %do.end.256, !dbg !5546

do.end.256:                                       ; preds = %do.cond.255
  br label %if.end.257, !dbg !5548

if.end.257:                                       ; preds = %do.end.256, %do.body.239
  %167 = bitcast %struct._object** %_py_xdecref_tmp240 to i8*, !dbg !5550
  call void @llvm.lifetime.end(i64 8, i8* %167) #1, !dbg !5550
  br label %do.cond.258, !dbg !5551

do.cond.258:                                      ; preds = %if.end.257
  br label %do.end.259, !dbg !5552

do.end.259:                                       ; preds = %do.cond.258
  %168 = load %struct._object*, %struct._object** %result, align 8, !dbg !5554, !tbaa !2563
  store %struct._object* %168, %struct._object** %retval, !dbg !5555
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.260, !dbg !5555

cleanup.260:                                      ; preds = %do.end.259, %cleanup.173, %cleanup, %if.then
  %169 = bitcast i64* %ntoappend to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %169) #1, !dbg !5556
  %170 = bitcast i8** %ptoappend to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %170) #1, !dbg !5556
  %171 = bitcast i64* %usednew to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %171) #1, !dbg !5556
  %172 = bitcast i64* %totalnew to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %172) #1, !dbg !5556
  %173 = bitcast i8** %pnew to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %173) #1, !dbg !5556
  %174 = bitcast %struct._object** %newfmt to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %174) #1, !dbg !5556
  call void @llvm.lifetime.end(i64 1, i8* %ch) #1, !dbg !5556
  %175 = bitcast i64* %flen to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %175) #1, !dbg !5556
  %176 = bitcast i8** %pin to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %176) #1, !dbg !5556
  %177 = bitcast %struct._object** %freplacement to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %177) #1, !dbg !5556
  %178 = bitcast %struct._object** %Zreplacement to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %178) #1, !dbg !5556
  %179 = bitcast %struct._object** %zreplacement to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %179) #1, !dbg !5556
  %180 = bitcast %struct._object** %result to i8*, !dbg !5556
  call void @llvm.lifetime.end(i64 8, i8* %180) #1, !dbg !5556
  %181 = load %struct._object*, %struct._object** %retval, !dbg !5556
  ret %struct._object* %181, !dbg !5556
}

declare i8* @PyUnicode_AsUTF8AndSize(%struct._object*, i64*) #3

declare %struct._object* @PyErr_NoMemory() #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare i8* @PyBytes_AsString(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_tzinfo_member(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %tzinfo = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !774, metadata !2553), !dbg !5557
  %0 = bitcast %struct._object** %tzinfo to i8*, !dbg !5558
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5558
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !775, metadata !2553), !dbg !5559
  store %struct._object* null, %struct._object** %tzinfo, align 8, !dbg !5559, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5560, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !5562
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5562, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DateTimeType, !dbg !5563
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5564

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5565, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !5567
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !5567, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !5568
  %tobool = icmp ne i32 %call, 0, !dbg !5568
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5569

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5570, !tbaa !2563
  %6 = bitcast %struct._object* %5 to %struct._PyDateTime_BaseTZInfo*, !dbg !5573
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %6, i32 0, i32 2, !dbg !5574
  %7 = load i8, i8* %hastzinfo, align 1, !dbg !5574, !tbaa !5575
  %conv = sext i8 %7 to i32, !dbg !5577
  %tobool2 = icmp ne i32 %conv, 0, !dbg !5577
  br i1 %tobool2, label %if.then, label %if.else, !dbg !5578

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5579, !tbaa !2563
  %9 = bitcast %struct._object* %8 to %struct.PyDateTime_DateTime*, !dbg !5580
  %tzinfo3 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %9, i32 0, i32 4, !dbg !5581
  %10 = load %struct._object*, %struct._object** %tzinfo3, align 8, !dbg !5581, !tbaa !3586
  store %struct._object* %10, %struct._object** %tzinfo, align 8, !dbg !5582, !tbaa !2563
  br label %if.end.17, !dbg !5583

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5584, !tbaa !2563
  %ob_type4 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !5586
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !5586, !tbaa !2640
  %cmp5 = icmp eq %struct._typeobject* %12, @PyDateTime_TimeType, !dbg !5587
  br i1 %cmp5, label %land.lhs.true.11, label %lor.lhs.false.7, !dbg !5588

lor.lhs.false.7:                                  ; preds = %if.else
  %13 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5589, !tbaa !2563
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !5591
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !5591, !tbaa !2640
  %call9 = call i32 @PyType_IsSubtype(%struct._typeobject* %14, %struct._typeobject* @PyDateTime_TimeType), !dbg !5592
  %tobool10 = icmp ne i32 %call9, 0, !dbg !5592
  br i1 %tobool10, label %land.lhs.true.11, label %if.end, !dbg !5593

land.lhs.true.11:                                 ; preds = %lor.lhs.false.7, %if.else
  %15 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5594, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct._PyDateTime_BaseTZInfo*, !dbg !5597
  %hastzinfo12 = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %16, i32 0, i32 2, !dbg !5598
  %17 = load i8, i8* %hastzinfo12, align 1, !dbg !5598, !tbaa !5575
  %conv13 = sext i8 %17 to i32, !dbg !5599
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !5599
  br i1 %tobool14, label %if.then.15, label %if.end, !dbg !5600

if.then.15:                                       ; preds = %land.lhs.true.11
  %18 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5601, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Time*, !dbg !5602
  %tzinfo16 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %19, i32 0, i32 4, !dbg !5603
  %20 = load %struct._object*, %struct._object** %tzinfo16, align 8, !dbg !5603, !tbaa !3489
  store %struct._object* %20, %struct._object** %tzinfo, align 8, !dbg !5604, !tbaa !2563
  br label %if.end, !dbg !5605

if.end:                                           ; preds = %if.then.15, %land.lhs.true.11, %lor.lhs.false.7
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %if.then
  %21 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5606, !tbaa !2563
  %22 = bitcast %struct._object** %tzinfo to i8*, !dbg !5607
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !5607
  ret %struct._object* %21, !dbg !5608
}

; Function Attrs: nounwind uwtable
define internal i32 @format_utcoffset(i8* %buf, i64 %buflen, i8* %sep, %struct._object* %tzinfo, %struct._object* %tzinfoarg) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i64, align 8
  %sep.addr = alloca i8*, align 8
  %tzinfo.addr = alloca %struct._object*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  %offset = alloca %struct._object*, align 8
  %hours = alloca i32, align 4
  %minutes = alloca i32, align 4
  %seconds = alloca i32, align 4
  %sign = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp11 = alloca %struct._object*, align 8
  %_py_decref_tmp29 = alloca %struct._object*, align 8
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !780, metadata !2553), !dbg !5609
  store i64 %buflen, i64* %buflen.addr, align 8, !tbaa !5078
  call void @llvm.dbg.declare(metadata i64* %buflen.addr, metadata !781, metadata !2553), !dbg !5610
  store i8* %sep, i8** %sep.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %sep.addr, metadata !782, metadata !2553), !dbg !5611
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !783, metadata !2553), !dbg !5612
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !784, metadata !2553), !dbg !5613
  %0 = bitcast %struct._object** %offset to i8*, !dbg !5614
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5614
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !785, metadata !2553), !dbg !5615
  %1 = bitcast i32* %hours to i8*, !dbg !5616
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !5616
  call void @llvm.dbg.declare(metadata i32* %hours, metadata !786, metadata !2553), !dbg !5617
  %2 = bitcast i32* %minutes to i8*, !dbg !5616
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !5616
  call void @llvm.dbg.declare(metadata i32* %minutes, metadata !787, metadata !2553), !dbg !5618
  %3 = bitcast i32* %seconds to i8*, !dbg !5616
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !5616
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !788, metadata !2553), !dbg !5619
  call void @llvm.lifetime.start(i64 1, i8* %sign) #1, !dbg !5620
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !789, metadata !2553), !dbg !5621
  %4 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !5622, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !5623, !tbaa !2563
  %call = call %struct._object* @call_utcoffset(%struct._object* %4, %struct._object* %5), !dbg !5624
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !5625, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5626, !tbaa !2563
  %cmp = icmp eq %struct._object* %6, null, !dbg !5628
  br i1 %cmp, label %if.then, label %if.end, !dbg !5629

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !5630
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.43, !dbg !5630

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5631, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %7, @_Py_NoneStruct, !dbg !5632
  br i1 %cmp1, label %if.then.2, label %if.end.6, !dbg !5633

if.then.2:                                        ; preds = %if.end
  br label %do.body, !dbg !5634

do.body:                                          ; preds = %if.then.2
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5635
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5635
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !790, metadata !2553), !dbg !5637
  %9 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5638, !tbaa !2563
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !5637, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5639, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !5641
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !5642, !tbaa !2632
  %dec = add i64 %11, -1, !dbg !5642
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5642, !tbaa !2632
  %cmp3 = icmp ne i64 %dec, 0, !dbg !5643
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !5644

if.then.4:                                        ; preds = %do.body
  br label %if.end.5, !dbg !5645

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5647, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !5649
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5649, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !5650
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5650, !tbaa !2642
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5651, !tbaa !2563
  call void %14(%struct._object* %15), !dbg !5652
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5653
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !5653
  br label %do.cond, !dbg !5655

do.cond:                                          ; preds = %if.end.5
  br label %do.end, !dbg !5656

do.end:                                           ; preds = %do.cond
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !5658, !tbaa !2563
  store i8 0, i8* %17, align 1, !dbg !5659, !tbaa !3415
  store i32 0, i32* %retval, !dbg !5660
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.43, !dbg !5660

if.end.6:                                         ; preds = %if.end
  %18 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5661, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Delta*, !dbg !5662
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %19, i32 0, i32 2, !dbg !5663
  %20 = load i32, i32* %days, align 4, !dbg !5663, !tbaa !3363
  %cmp7 = icmp slt i32 %20, 0, !dbg !5664
  br i1 %cmp7, label %if.then.8, label %if.else.25, !dbg !5665

if.then.8:                                        ; preds = %if.end.6
  %21 = bitcast %struct._object** %temp to i8*, !dbg !5666
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !5666
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !794, metadata !2553), !dbg !5667
  %22 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5668, !tbaa !2563
  store %struct._object* %22, %struct._object** %temp, align 8, !dbg !5667, !tbaa !2563
  store i8 45, i8* %sign, align 1, !dbg !5669, !tbaa !3415
  %23 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5670, !tbaa !2563
  %24 = bitcast %struct._object* %23 to %struct.PyDateTime_Delta*, !dbg !5671
  %call9 = call %struct._object* @delta_negative(%struct.PyDateTime_Delta* %24), !dbg !5672
  store %struct._object* %call9, %struct._object** %offset, align 8, !dbg !5673, !tbaa !2563
  br label %do.body.10, !dbg !5674

do.body.10:                                       ; preds = %if.then.8
  %25 = bitcast %struct._object** %_py_decref_tmp11 to i8*, !dbg !5675
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !5675
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp11, metadata !797, metadata !2553), !dbg !5677
  %26 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5678, !tbaa !2563
  store %struct._object* %26, %struct._object** %_py_decref_tmp11, align 8, !dbg !5677, !tbaa !2563
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !5679, !tbaa !2563
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !5681
  %28 = load i64, i64* %ob_refcnt12, align 8, !dbg !5682, !tbaa !2632
  %dec13 = add i64 %28, -1, !dbg !5682
  store i64 %dec13, i64* %ob_refcnt12, align 8, !dbg !5682, !tbaa !2632
  %cmp14 = icmp ne i64 %dec13, 0, !dbg !5683
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !5684

if.then.15:                                       ; preds = %do.body.10
  br label %if.end.19, !dbg !5685

if.else.16:                                       ; preds = %do.body.10
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !5687, !tbaa !2563
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !5689
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !5689, !tbaa !2640
  %tp_dealloc18 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !5690
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc18, align 8, !dbg !5690, !tbaa !2642
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !5691, !tbaa !2563
  call void %31(%struct._object* %32), !dbg !5692
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.16, %if.then.15
  %33 = bitcast %struct._object** %_py_decref_tmp11 to i8*, !dbg !5693
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !5693
  br label %do.cond.20, !dbg !5695

do.cond.20:                                       ; preds = %if.end.19
  br label %do.end.21, !dbg !5696

do.end.21:                                        ; preds = %do.cond.20
  %34 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5698, !tbaa !2563
  %cmp22 = icmp eq %struct._object* %34, null, !dbg !5700
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !5701

if.then.23:                                       ; preds = %do.end.21
  store i32 -1, i32* %retval, !dbg !5702
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5702

if.end.24:                                        ; preds = %do.end.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !5703
  br label %cleanup, !dbg !5703

cleanup:                                          ; preds = %if.end.24, %if.then.23
  %35 = bitcast %struct._object** %temp to i8*, !dbg !5704
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !5704
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.43 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.26, !dbg !5706

if.else.25:                                       ; preds = %if.end.6
  store i8 43, i8* %sign, align 1, !dbg !5707, !tbaa !3415
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.25, %cleanup.cont
  %36 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5709, !tbaa !2563
  %37 = bitcast %struct._object* %36 to %struct.PyDateTime_Delta*, !dbg !5710
  %seconds27 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %37, i32 0, i32 3, !dbg !5711
  %38 = load i32, i32* %seconds27, align 4, !dbg !5711, !tbaa !3368
  store i32 %38, i32* %seconds, align 4, !dbg !5712, !tbaa !3325
  br label %do.body.28, !dbg !5713

do.body.28:                                       ; preds = %if.end.26
  %39 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !5714
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !5714
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp29, metadata !799, metadata !2553), !dbg !5716
  %40 = load %struct._object*, %struct._object** %offset, align 8, !dbg !5717, !tbaa !2563
  store %struct._object* %40, %struct._object** %_py_decref_tmp29, align 8, !dbg !5716, !tbaa !2563
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !5718, !tbaa !2563
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !5720
  %42 = load i64, i64* %ob_refcnt30, align 8, !dbg !5721, !tbaa !2632
  %dec31 = add i64 %42, -1, !dbg !5721
  store i64 %dec31, i64* %ob_refcnt30, align 8, !dbg !5721, !tbaa !2632
  %cmp32 = icmp ne i64 %dec31, 0, !dbg !5722
  br i1 %cmp32, label %if.then.33, label %if.else.34, !dbg !5723

if.then.33:                                       ; preds = %do.body.28
  br label %if.end.37, !dbg !5724

if.else.34:                                       ; preds = %do.body.28
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !5726, !tbaa !2563
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !5728
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !5728, !tbaa !2640
  %tp_dealloc36 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !5729
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc36, align 8, !dbg !5729, !tbaa !2642
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !5730, !tbaa !2563
  call void %45(%struct._object* %46), !dbg !5731
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.33
  %47 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !5732
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !5732
  br label %do.cond.38, !dbg !5734

do.cond.38:                                       ; preds = %if.end.37
  br label %do.end.39, !dbg !5735

do.end.39:                                        ; preds = %do.cond.38
  %48 = load i32, i32* %seconds, align 4, !dbg !5737, !tbaa !3325
  %call40 = call i32 @divmod(i32 %48, i32 60, i32* %seconds), !dbg !5738
  store i32 %call40, i32* %minutes, align 4, !dbg !5739, !tbaa !3325
  %49 = load i32, i32* %minutes, align 4, !dbg !5740, !tbaa !3325
  %call41 = call i32 @divmod(i32 %49, i32 60, i32* %minutes), !dbg !5741
  store i32 %call41, i32* %hours, align 4, !dbg !5742, !tbaa !3325
  %50 = load i8*, i8** %buf.addr, align 8, !dbg !5743, !tbaa !2563
  %51 = load i64, i64* %buflen.addr, align 8, !dbg !5744, !tbaa !5078
  %52 = load i8, i8* %sign, align 1, !dbg !5745, !tbaa !3415
  %conv = sext i8 %52 to i32, !dbg !5745
  %53 = load i32, i32* %hours, align 4, !dbg !5746, !tbaa !3325
  %54 = load i8*, i8** %sep.addr, align 8, !dbg !5747, !tbaa !2563
  %55 = load i32, i32* %minutes, align 4, !dbg !5748, !tbaa !3325
  %call42 = call i32 (i8*, i64, i8*, ...) @PyOS_snprintf(i8* %50, i64 %51, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i32 0, i32 0), i32 %conv, i32 %53, i8* %54, i32 %55), !dbg !5749
  store i32 0, i32* %retval, !dbg !5750
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.43, !dbg !5750

cleanup.43:                                       ; preds = %do.end.39, %cleanup, %do.end, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %sign) #1, !dbg !5751
  %56 = bitcast i32* %seconds to i8*, !dbg !5751
  call void @llvm.lifetime.end(i64 4, i8* %56) #1, !dbg !5751
  %57 = bitcast i32* %minutes to i8*, !dbg !5751
  call void @llvm.lifetime.end(i64 4, i8* %57) #1, !dbg !5751
  %58 = bitcast i32* %hours to i8*, !dbg !5751
  call void @llvm.lifetime.end(i64 4, i8* %58) #1, !dbg !5751
  %59 = bitcast %struct._object** %offset to i8*, !dbg !5751
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !5751
  %60 = load i32, i32* %retval, !dbg !5751
  ret i32 %60, !dbg !5751
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind uwtable
define internal %struct._object* @make_Zreplacement(%struct._object* %object, %struct._object* %tzinfoarg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %object.addr = alloca %struct._object*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %tzinfo = alloca %struct._object*, align 8
  %Zreplacement = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp30 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  store %struct._object* %object, %struct._object** %object.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %object.addr, metadata !841, metadata !2553), !dbg !5752
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !842, metadata !2553), !dbg !5753
  %0 = bitcast %struct._object** %temp to i8*, !dbg !5754
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5754
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !843, metadata !2553), !dbg !5755
  %1 = bitcast %struct._object** %tzinfo to i8*, !dbg !5756
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5756
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !844, metadata !2553), !dbg !5757
  %2 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5758, !tbaa !2563
  %call = call %struct._object* @get_tzinfo_member(%struct._object* %2), !dbg !5759
  store %struct._object* %call, %struct._object** %tzinfo, align 8, !dbg !5757, !tbaa !2563
  %3 = bitcast %struct._object** %Zreplacement to i8*, !dbg !5760
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5760
  call void @llvm.dbg.declare(metadata %struct._object** %Zreplacement, metadata !845, metadata !2553), !dbg !5761
  %call1 = call %struct._object* @PyUnicode_FromStringAndSize(i8* null, i64 0), !dbg !5762
  store %struct._object* %call1, %struct._object** %Zreplacement, align 8, !dbg !5761, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5763, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !5765
  br i1 %cmp, label %if.then, label %if.end, !dbg !5766

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5767
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5767

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5768, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %5, @_Py_NoneStruct, !dbg !5770
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false, !dbg !5771

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5772, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %6, null, !dbg !5774
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !5775

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5776, !tbaa !2563
  store %struct._object* %7, %struct._object** %retval, !dbg !5777
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5777

if.end.5:                                         ; preds = %lor.lhs.false
  %8 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !5778, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !5779, !tbaa !2563
  %call6 = call %struct._object* @call_tzname(%struct._object* %8, %struct._object* %9), !dbg !5780
  store %struct._object* %call6, %struct._object** %temp, align 8, !dbg !5781, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5782, !tbaa !2563
  %cmp7 = icmp eq %struct._object* %10, null, !dbg !5784
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !5785

if.then.8:                                        ; preds = %if.end.5
  br label %Error, !dbg !5786

if.end.9:                                         ; preds = %if.end.5
  %11 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5787, !tbaa !2563
  %cmp10 = icmp eq %struct._object* %11, @_Py_NoneStruct, !dbg !5788
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !5789

if.then.11:                                       ; preds = %if.end.9
  br label %do.body, !dbg !5790

do.body:                                          ; preds = %if.then.11
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5791
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !5791
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !846, metadata !2553), !dbg !5793
  %13 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5794, !tbaa !2563
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !5793, !tbaa !2563
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5795, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !5797
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !5798, !tbaa !2632
  %dec = add i64 %15, -1, !dbg !5798
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5798, !tbaa !2632
  %cmp12 = icmp ne i64 %dec, 0, !dbg !5799
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !5800

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !5801

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5803, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !5805
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5805, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !5806
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5806, !tbaa !2642
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5807, !tbaa !2563
  call void %18(%struct._object* %19), !dbg !5808
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5809
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !5809
  br label %do.cond, !dbg !5811

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !5812

do.end:                                           ; preds = %do.cond
  %21 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5814, !tbaa !2563
  store %struct._object* %21, %struct._object** %retval, !dbg !5815
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5815

if.end.15:                                        ; preds = %if.end.9
  br label %do.body.16, !dbg !5816

do.body.16:                                       ; preds = %if.end.15
  %22 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !5817
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !5817
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !850, metadata !2553), !dbg !5819
  %23 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5820, !tbaa !2563
  store %struct._object* %23, %struct._object** %_py_decref_tmp17, align 8, !dbg !5819, !tbaa !2563
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !5821, !tbaa !2563
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !5823
  %25 = load i64, i64* %ob_refcnt18, align 8, !dbg !5824, !tbaa !2632
  %dec19 = add i64 %25, -1, !dbg !5824
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !5824, !tbaa !2632
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !5825
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !5826

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25, !dbg !5827

if.else.22:                                       ; preds = %do.body.16
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !5829, !tbaa !2563
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !5831
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !5831, !tbaa !2640
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !5832
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !5832, !tbaa !2642
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !5833, !tbaa !2563
  call void %28(%struct._object* %29), !dbg !5834
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %30 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !5835
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !5835
  br label %do.cond.26, !dbg !5837

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !5838

do.end.27:                                        ; preds = %do.cond.26
  %31 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5840, !tbaa !2563
  %call28 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %31, %struct._Py_Identifier* @make_Zreplacement.PyId_replace, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0)), !dbg !5841
  store %struct._object* %call28, %struct._object** %Zreplacement, align 8, !dbg !5842, !tbaa !2563
  br label %do.body.29, !dbg !5843

do.body.29:                                       ; preds = %do.end.27
  %32 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !5844
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !5844
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp30, metadata !852, metadata !2553), !dbg !5846
  %33 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5847, !tbaa !2563
  store %struct._object* %33, %struct._object** %_py_decref_tmp30, align 8, !dbg !5846, !tbaa !2563
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !5848, !tbaa !2563
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !5850
  %35 = load i64, i64* %ob_refcnt31, align 8, !dbg !5851, !tbaa !2632
  %dec32 = add i64 %35, -1, !dbg !5851
  store i64 %dec32, i64* %ob_refcnt31, align 8, !dbg !5851, !tbaa !2632
  %cmp33 = icmp ne i64 %dec32, 0, !dbg !5852
  br i1 %cmp33, label %if.then.34, label %if.else.35, !dbg !5853

if.then.34:                                       ; preds = %do.body.29
  br label %if.end.38, !dbg !5854

if.else.35:                                       ; preds = %do.body.29
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !5856, !tbaa !2563
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !5858
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !5858, !tbaa !2640
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !5859
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8, !dbg !5859, !tbaa !2642
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !5860, !tbaa !2563
  call void %38(%struct._object* %39), !dbg !5861
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.34
  %40 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !5862
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !5862
  br label %do.cond.39, !dbg !5863

do.cond.39:                                       ; preds = %if.end.38
  br label %do.end.40, !dbg !5864

do.end.40:                                        ; preds = %do.cond.39
  %41 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5866, !tbaa !2563
  %cmp41 = icmp eq %struct._object* %41, null, !dbg !5868
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !5869

if.then.42:                                       ; preds = %do.end.40
  store %struct._object* null, %struct._object** %retval, !dbg !5870
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5870

if.end.43:                                        ; preds = %do.end.40
  %42 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5871, !tbaa !2563
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !5873
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !5873, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 19, !dbg !5874
  %44 = load i64, i64* %tp_flags, align 8, !dbg !5874, !tbaa !3751
  %and = and i64 %44, 268435456, !dbg !5875
  %cmp45 = icmp ne i64 %and, 0, !dbg !5876
  br i1 %cmp45, label %if.end.47, label %if.then.46, !dbg !5877

if.then.46:                                       ; preds = %if.end.43
  %45 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5878, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %45, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.86, i32 0, i32 0)), !dbg !5880
  br label %Error, !dbg !5881

if.end.47:                                        ; preds = %if.end.43
  %46 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5882, !tbaa !2563
  store %struct._object* %46, %struct._object** %retval, !dbg !5883
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5883

Error:                                            ; preds = %if.then.46, %if.then.8
  br label %do.body.48, !dbg !5884

do.body.48:                                       ; preds = %Error
  %47 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !5885
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !5885
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp49, metadata !854, metadata !2553), !dbg !5887
  %48 = load %struct._object*, %struct._object** %Zreplacement, align 8, !dbg !5888, !tbaa !2563
  store %struct._object* %48, %struct._object** %_py_decref_tmp49, align 8, !dbg !5887, !tbaa !2563
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !5889, !tbaa !2563
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !5891
  %50 = load i64, i64* %ob_refcnt50, align 8, !dbg !5892, !tbaa !2632
  %dec51 = add i64 %50, -1, !dbg !5892
  store i64 %dec51, i64* %ob_refcnt50, align 8, !dbg !5892, !tbaa !2632
  %cmp52 = icmp ne i64 %dec51, 0, !dbg !5893
  br i1 %cmp52, label %if.then.53, label %if.else.54, !dbg !5894

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57, !dbg !5895

if.else.54:                                       ; preds = %do.body.48
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !5897, !tbaa !2563
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !5899
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !5899, !tbaa !2640
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !5900
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8, !dbg !5900, !tbaa !2642
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !5901, !tbaa !2563
  call void %53(%struct._object* %54), !dbg !5902
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  %55 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !5903
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !5903
  br label %do.cond.58, !dbg !5904

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !5905

do.end.59:                                        ; preds = %do.cond.58
  store %struct._object* null, %struct._object** %retval, !dbg !5907
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5907

cleanup:                                          ; preds = %do.end.59, %if.end.47, %if.then.42, %do.end, %if.then.4, %if.then
  %56 = bitcast %struct._object** %Zreplacement to i8*, !dbg !5908
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !5908
  %57 = bitcast %struct._object** %tzinfo to i8*, !dbg !5908
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !5908
  %58 = bitcast %struct._object** %temp to i8*, !dbg !5908
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !5908
  %59 = load %struct._object*, %struct._object** %retval, !dbg !5908
  ret %struct._object* %59, !dbg !5908
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @make_freplacement(%struct._object* %object) #0 {
entry:
  %object.addr = alloca %struct._object*, align 8
  %freplacement = alloca [64 x i8], align 16
  store %struct._object* %object, %struct._object** %object.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %object.addr, metadata !867, metadata !2553), !dbg !5909
  %0 = bitcast [64 x i8]* %freplacement to i8*, !dbg !5910
  call void @llvm.lifetime.start(i64 64, i8* %0) #1, !dbg !5910
  call void @llvm.dbg.declare(metadata [64 x i8]* %freplacement, metadata !868, metadata !2553), !dbg !5911
  %1 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5912, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !5914
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5914, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_TimeType, !dbg !5915
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5916

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5917, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !5919
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !5919, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_TimeType), !dbg !5920
  %tobool = icmp ne i32 %call, 0, !dbg !5920
  br i1 %tobool, label %if.then, label %if.else, !dbg !5921

if.then:                                          ; preds = %lor.lhs.false, %entry
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %freplacement, i32 0, i32 0, !dbg !5922
  %5 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5923, !tbaa !2563
  %6 = bitcast %struct._object* %5 to %struct.PyDateTime_Time*, !dbg !5924
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %6, i32 0, i32 3, !dbg !5925
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 3, !dbg !5926
  %7 = load i8, i8* %arrayidx, align 1, !dbg !5926, !tbaa !3415
  %conv = zext i8 %7 to i32, !dbg !5926
  %shl = shl i32 %conv, 16, !dbg !5927
  %8 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5928, !tbaa !2563
  %9 = bitcast %struct._object* %8 to %struct.PyDateTime_Time*, !dbg !5929
  %data2 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %9, i32 0, i32 3, !dbg !5930
  %arrayidx3 = getelementptr [6 x i8], [6 x i8]* %data2, i32 0, i64 4, !dbg !5931
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !5931, !tbaa !3415
  %conv4 = zext i8 %10 to i32, !dbg !5931
  %shl5 = shl i32 %conv4, 8, !dbg !5932
  %or = or i32 %shl, %shl5, !dbg !5933
  %11 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5934, !tbaa !2563
  %12 = bitcast %struct._object* %11 to %struct.PyDateTime_Time*, !dbg !5935
  %data6 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %12, i32 0, i32 3, !dbg !5936
  %arrayidx7 = getelementptr [6 x i8], [6 x i8]* %data6, i32 0, i64 5, !dbg !5937
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !5937, !tbaa !3415
  %conv8 = zext i8 %13 to i32, !dbg !5937
  %or9 = or i32 %or, %conv8, !dbg !5938
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i32 %or9) #1, !dbg !5939
  br label %if.end.37, !dbg !5939

if.else:                                          ; preds = %lor.lhs.false
  %14 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5940, !tbaa !2563
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !5942
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !5942, !tbaa !2640
  %cmp12 = icmp eq %struct._typeobject* %15, @PyDateTime_DateTimeType, !dbg !5943
  br i1 %cmp12, label %if.then.18, label %lor.lhs.false.14, !dbg !5944

lor.lhs.false.14:                                 ; preds = %if.else
  %16 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5945, !tbaa !2563
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !5947
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !5947, !tbaa !2640
  %call16 = call i32 @PyType_IsSubtype(%struct._typeobject* %17, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !5948
  %tobool17 = icmp ne i32 %call16, 0, !dbg !5948
  br i1 %tobool17, label %if.then.18, label %if.else.34, !dbg !5949

if.then.18:                                       ; preds = %lor.lhs.false.14, %if.else
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %freplacement, i32 0, i32 0, !dbg !5950
  %18 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5951, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_DateTime*, !dbg !5952
  %data20 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %19, i32 0, i32 3, !dbg !5953
  %arrayidx21 = getelementptr [10 x i8], [10 x i8]* %data20, i32 0, i64 7, !dbg !5954
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !5954, !tbaa !3415
  %conv22 = zext i8 %20 to i32, !dbg !5954
  %shl23 = shl i32 %conv22, 16, !dbg !5955
  %21 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5956, !tbaa !2563
  %22 = bitcast %struct._object* %21 to %struct.PyDateTime_DateTime*, !dbg !5957
  %data24 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %22, i32 0, i32 3, !dbg !5958
  %arrayidx25 = getelementptr [10 x i8], [10 x i8]* %data24, i32 0, i64 8, !dbg !5959
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !5959, !tbaa !3415
  %conv26 = zext i8 %23 to i32, !dbg !5959
  %shl27 = shl i32 %conv26, 8, !dbg !5960
  %or28 = or i32 %shl23, %shl27, !dbg !5961
  %24 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !5962, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyDateTime_DateTime*, !dbg !5963
  %data29 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %25, i32 0, i32 3, !dbg !5964
  %arrayidx30 = getelementptr [10 x i8], [10 x i8]* %data29, i32 0, i64 9, !dbg !5965
  %26 = load i8, i8* %arrayidx30, align 1, !dbg !5965, !tbaa !3415
  %conv31 = zext i8 %26 to i32, !dbg !5965
  %or32 = or i32 %or28, %conv31, !dbg !5966
  %call33 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i32 %or32) #1, !dbg !5967
  br label %if.end, !dbg !5967

if.else.34:                                       ; preds = %lor.lhs.false.14
  %arraydecay35 = getelementptr inbounds [64 x i8], [64 x i8]* %freplacement, i32 0, i32 0, !dbg !5968
  %call36 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i32 0) #1, !dbg !5969
  br label %if.end

if.end:                                           ; preds = %if.else.34, %if.then.18
  br label %if.end.37

if.end.37:                                        ; preds = %if.end, %if.then
  %arraydecay38 = getelementptr inbounds [64 x i8], [64 x i8]* %freplacement, i32 0, i32 0, !dbg !5970
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %freplacement, i32 0, i32 0, !dbg !5971
  %call40 = call i64 @strlen(i8* %arraydecay39) #7, !dbg !5972
  %call41 = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay38, i64 %call40), !dbg !5973
  %27 = bitcast [64 x i8]* %freplacement to i8*, !dbg !5974
  call void @llvm.lifetime.end(i64 64, i8* %27) #1, !dbg !5974
  ret %struct._object* %call41, !dbg !5975
}

declare i32 @_PyBytes_Resize(%struct._object**, i64) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare %struct._object* @PyUnicode_FromString(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @call_utcoffset(%struct._object* %tzinfo, %struct._object* %tzinfoarg) #0 {
entry:
  %tzinfo.addr = alloca %struct._object*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !803, metadata !2553), !dbg !5976
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !804, metadata !2553), !dbg !5977
  %0 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !5978, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !5979, !tbaa !2563
  %call = call %struct._object* @call_tzinfo_method(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), %struct._object* %1), !dbg !5980
  ret %struct._object* %call, !dbg !5981
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_negative(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !830, metadata !2553), !dbg !5982
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !5983, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %0, i32 0, i32 2, !dbg !5984
  %1 = load i32, i32* %days, align 4, !dbg !5984, !tbaa !3363
  %sub = sub i32 0, %1, !dbg !5985
  %2 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !5986, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %2, i32 0, i32 3, !dbg !5987
  %3 = load i32, i32* %seconds, align 4, !dbg !5987, !tbaa !3368
  %sub1 = sub i32 0, %3, !dbg !5988
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !5989, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %4, i32 0, i32 4, !dbg !5990
  %5 = load i32, i32* %microseconds, align 4, !dbg !5990, !tbaa !3373
  %sub2 = sub i32 0, %5, !dbg !5991
  %call = call %struct._object* @new_delta_ex(i32 %sub, i32 %sub1, i32 %sub2, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !5992
  ret %struct._object* %call, !dbg !5993
}

; Function Attrs: nounwind uwtable
define internal i32 @divmod(i32 %x, i32 %y, i32* %r) #0 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %r.addr = alloca i32*, align 8
  %quo = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !835, metadata !2553), !dbg !5994
  store i32 %y, i32* %y.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !836, metadata !2553), !dbg !5995
  store i32* %r, i32** %r.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %r.addr, metadata !837, metadata !2553), !dbg !5996
  %0 = bitcast i32* %quo to i8*, !dbg !5997
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !5997
  call void @llvm.dbg.declare(metadata i32* %quo, metadata !838, metadata !2553), !dbg !5998
  %1 = load i32, i32* %x.addr, align 4, !dbg !5999, !tbaa !3325
  %2 = load i32, i32* %y.addr, align 4, !dbg !6000, !tbaa !3325
  %div = sdiv i32 %1, %2, !dbg !6001
  store i32 %div, i32* %quo, align 4, !dbg !6002, !tbaa !3325
  %3 = load i32, i32* %x.addr, align 4, !dbg !6003, !tbaa !3325
  %4 = load i32, i32* %quo, align 4, !dbg !6004, !tbaa !3325
  %5 = load i32, i32* %y.addr, align 4, !dbg !6005, !tbaa !3325
  %mul = mul i32 %4, %5, !dbg !6006
  %sub = sub i32 %3, %mul, !dbg !6007
  %6 = load i32*, i32** %r.addr, align 8, !dbg !6008, !tbaa !2563
  store i32 %sub, i32* %6, align 4, !dbg !6009, !tbaa !3325
  %7 = load i32*, i32** %r.addr, align 8, !dbg !6010, !tbaa !2563
  %8 = load i32, i32* %7, align 4, !dbg !6012, !tbaa !3325
  %cmp = icmp slt i32 %8, 0, !dbg !6013
  br i1 %cmp, label %if.then, label %if.end, !dbg !6014

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %quo, align 4, !dbg !6015, !tbaa !3325
  %dec = add i32 %9, -1, !dbg !6015
  store i32 %dec, i32* %quo, align 4, !dbg !6015, !tbaa !3325
  %10 = load i32, i32* %y.addr, align 4, !dbg !6017, !tbaa !3325
  %11 = load i32*, i32** %r.addr, align 8, !dbg !6018, !tbaa !2563
  %12 = load i32, i32* %11, align 4, !dbg !6019, !tbaa !3325
  %add = add i32 %12, %10, !dbg !6019
  store i32 %add, i32* %11, align 4, !dbg !6019, !tbaa !3325
  br label %if.end, !dbg !6020

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %quo, align 4, !dbg !6021, !tbaa !3325
  %14 = bitcast i32* %quo to i8*, !dbg !6022
  call void @llvm.lifetime.end(i64 4, i8* %14) #1, !dbg !6022
  ret i32 %13, !dbg !6023
}

declare i32 @PyOS_snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @call_tzinfo_method(%struct._object* %tzinfo, i8* %name, %struct._object* %tzinfoarg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tzinfo.addr = alloca %struct._object*, align 8
  %name.addr = alloca i8*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  %offset = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !809, metadata !2553), !dbg !6024
  store i8* %name, i8** %name.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !810, metadata !2553), !dbg !6025
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !811, metadata !2553), !dbg !6026
  %0 = bitcast %struct._object** %offset to i8*, !dbg !6027
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6027
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !812, metadata !2553), !dbg !6028
  %1 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !6029, !tbaa !2563
  %cmp = icmp eq %struct._object* %1, @_Py_NoneStruct, !dbg !6031
  br i1 %cmp, label %if.then, label %if.end, !dbg !6032

if.then:                                          ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6033, !tbaa !2632
  %inc = add i64 %2, 1, !dbg !6033
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6033, !tbaa !2632
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6034
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6034

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !6035, !tbaa !2563
  %4 = load i8*, i8** %name.addr, align 8, !dbg !6036, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !6037, !tbaa !2563
  %call = call %struct._object* (%struct._object*, i8*, i8*, ...) @PyObject_CallMethod(%struct._object* %3, i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %5), !dbg !6038
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !6039, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6040, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %6, @_Py_NoneStruct, !dbg !6042
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !6043

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6044, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %7, null, !dbg !6046
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !6047

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6048, !tbaa !2563
  store %struct._object* %8, %struct._object** %retval, !dbg !6049
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6049

if.end.4:                                         ; preds = %lor.lhs.false
  %9 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6050, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !6051
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6051, !tbaa !2640
  %cmp5 = icmp eq %struct._typeobject* %10, @PyDateTime_DeltaType, !dbg !6052
  br i1 %cmp5, label %if.then.9, label %lor.lhs.false.6, !dbg !6053

lor.lhs.false.6:                                  ; preds = %if.end.4
  %11 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6054, !tbaa !2563
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6056
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !6056, !tbaa !2640
  %call8 = call i32 @PyType_IsSubtype(%struct._typeobject* %12, %struct._typeobject* @PyDateTime_DeltaType), !dbg !6057
  %tobool = icmp ne i32 %call8, 0, !dbg !6057
  br i1 %tobool, label %if.then.9, label %if.else.44, !dbg !6058

if.then.9:                                        ; preds = %lor.lhs.false.6, %if.end.4
  %13 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6059, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Delta*, !dbg !6060
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %14, i32 0, i32 4, !dbg !6061
  %15 = load i32, i32* %microseconds, align 4, !dbg !6061, !tbaa !3373
  %cmp10 = icmp ne i32 %15, 0, !dbg !6062
  br i1 %cmp10, label %if.then.13, label %lor.lhs.false.11, !dbg !6063

lor.lhs.false.11:                                 ; preds = %if.then.9
  %16 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6064, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyDateTime_Delta*, !dbg !6066
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %17, i32 0, i32 3, !dbg !6067
  %18 = load i32, i32* %seconds, align 4, !dbg !6067, !tbaa !3368
  %rem = srem i32 %18, 60, !dbg !6068
  %cmp12 = icmp ne i32 %rem, 0, !dbg !6069
  br i1 %cmp12, label %if.then.13, label %if.end.19, !dbg !6070

if.then.13:                                       ; preds = %lor.lhs.false.11, %if.then.9
  br label %do.body, !dbg !6071

do.body:                                          ; preds = %if.then.13
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6072
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !6072
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !813, metadata !2553), !dbg !6074
  %20 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6075, !tbaa !2563
  store %struct._object* %20, %struct._object** %_py_decref_tmp, align 8, !dbg !6074, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6076, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !6078
  %22 = load i64, i64* %ob_refcnt, align 8, !dbg !6079, !tbaa !2632
  %dec = add i64 %22, -1, !dbg !6079
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6079, !tbaa !2632
  %cmp14 = icmp ne i64 %dec, 0, !dbg !6080
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !6081

if.then.15:                                       ; preds = %do.body
  br label %if.end.17, !dbg !6082

if.else:                                          ; preds = %do.body
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6084, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !6086
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !6086, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !6087
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6087, !tbaa !2642
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6088, !tbaa !2563
  call void %25(%struct._object* %26), !dbg !6089
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.15
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6090
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !6090
  br label %do.cond, !dbg !6092

do.cond:                                          ; preds = %if.end.17
  br label %do.end, !dbg !6093

do.end:                                           ; preds = %do.cond
  %28 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6095, !tbaa !2563
  %call18 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %28, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.80, i32 0, i32 0)), !dbg !6096
  store %struct._object* null, %struct._object** %retval, !dbg !6097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6097

if.end.19:                                        ; preds = %lor.lhs.false.11
  %29 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6098, !tbaa !2563
  %30 = bitcast %struct._object* %29 to %struct.PyDateTime_Delta*, !dbg !6099
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %30, i32 0, i32 2, !dbg !6100
  %31 = load i32, i32* %days, align 4, !dbg !6100, !tbaa !3363
  %cmp20 = icmp eq i32 %31, -1, !dbg !6101
  br i1 %cmp20, label %land.lhs.true, label %lor.lhs.false.23, !dbg !6102

land.lhs.true:                                    ; preds = %if.end.19
  %32 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6103, !tbaa !2563
  %33 = bitcast %struct._object* %32 to %struct.PyDateTime_Delta*, !dbg !6105
  %seconds21 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %33, i32 0, i32 3, !dbg !6106
  %34 = load i32, i32* %seconds21, align 4, !dbg !6106, !tbaa !3368
  %cmp22 = icmp eq i32 %34, 0, !dbg !6107
  br i1 %cmp22, label %if.then.29, label %lor.lhs.false.23, !dbg !6108

lor.lhs.false.23:                                 ; preds = %land.lhs.true, %if.end.19
  %35 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6109, !tbaa !2563
  %36 = bitcast %struct._object* %35 to %struct.PyDateTime_Delta*, !dbg !6110
  %days24 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %36, i32 0, i32 2, !dbg !6111
  %37 = load i32, i32* %days24, align 4, !dbg !6111, !tbaa !3363
  %cmp25 = icmp slt i32 %37, -1, !dbg !6112
  br i1 %cmp25, label %if.then.29, label %lor.lhs.false.26, !dbg !6113

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.23
  %38 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6114, !tbaa !2563
  %39 = bitcast %struct._object* %38 to %struct.PyDateTime_Delta*, !dbg !6115
  %days27 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %39, i32 0, i32 2, !dbg !6116
  %40 = load i32, i32* %days27, align 4, !dbg !6116, !tbaa !3363
  %cmp28 = icmp sge i32 %40, 1, !dbg !6117
  br i1 %cmp28, label %if.then.29, label %if.end.43, !dbg !6118

if.then.29:                                       ; preds = %lor.lhs.false.26, %lor.lhs.false.23, %land.lhs.true
  br label %do.body.30, !dbg !6119

do.body.30:                                       ; preds = %if.then.29
  %41 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !6120
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !6120
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !819, metadata !2553), !dbg !6122
  %42 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6123, !tbaa !2563
  store %struct._object* %42, %struct._object** %_py_decref_tmp31, align 8, !dbg !6122, !tbaa !2563
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !6124, !tbaa !2563
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !6126
  %44 = load i64, i64* %ob_refcnt32, align 8, !dbg !6127, !tbaa !2632
  %dec33 = add i64 %44, -1, !dbg !6127
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !6127, !tbaa !2632
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !6128
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !6129

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !6130

if.else.36:                                       ; preds = %do.body.30
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !6132, !tbaa !2563
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !6134
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !6134, !tbaa !2640
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !6135
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !6135, !tbaa !2642
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !6136, !tbaa !2563
  call void %47(%struct._object* %48), !dbg !6137
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %49 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !6138
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !6138
  br label %do.cond.40, !dbg !6140

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !6141

do.end.41:                                        ; preds = %do.cond.40
  %50 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6143, !tbaa !2563
  %call42 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %50, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.81, i32 0, i32 0)), !dbg !6144
  store %struct._object* null, %struct._object** %retval, !dbg !6145
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6145

if.end.43:                                        ; preds = %lor.lhs.false.26
  br label %if.end.59, !dbg !6146

if.else.44:                                       ; preds = %lor.lhs.false.6
  br label %do.body.45, !dbg !6147

do.body.45:                                       ; preds = %if.else.44
  %51 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !6148
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !6148
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !823, metadata !2553), !dbg !6150
  %52 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6151, !tbaa !2563
  store %struct._object* %52, %struct._object** %_py_decref_tmp46, align 8, !dbg !6150, !tbaa !2563
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !6152, !tbaa !2563
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !6154
  %54 = load i64, i64* %ob_refcnt47, align 8, !dbg !6155, !tbaa !2632
  %dec48 = add i64 %54, -1, !dbg !6155
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !6155, !tbaa !2632
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !6156
  br i1 %cmp49, label %if.then.50, label %if.else.51, !dbg !6157

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54, !dbg !6158

if.else.51:                                       ; preds = %do.body.45
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !6160, !tbaa !2563
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !6162
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !6162, !tbaa !2640
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !6163
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !6163, !tbaa !2642
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !6164, !tbaa !2563
  call void %57(%struct._object* %58), !dbg !6165
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  %59 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !6166
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !6166
  br label %do.cond.55, !dbg !6168

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !6169

do.end.56:                                        ; preds = %do.cond.55
  %60 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6171, !tbaa !2563
  %61 = load i8*, i8** %name.addr, align 8, !dbg !6172, !tbaa !2563
  %62 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6173, !tbaa !2563
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !6174
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !6174, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 1, !dbg !6175
  %64 = load i8*, i8** %tp_name, align 8, !dbg !6175, !tbaa !3653
  %call58 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %60, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.82, i32 0, i32 0), i8* %61, i8* %64), !dbg !6176
  store %struct._object* null, %struct._object** %retval, !dbg !6177
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6177

if.end.59:                                        ; preds = %if.end.43
  %65 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6178, !tbaa !2563
  store %struct._object* %65, %struct._object** %retval, !dbg !6179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6179

cleanup:                                          ; preds = %if.end.59, %do.end.56, %do.end.41, %do.end, %if.then.3, %if.then
  %66 = bitcast %struct._object** %offset to i8*, !dbg !6180
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !6180
  %67 = load %struct._object*, %struct._object** %retval, !dbg !6180
  ret %struct._object* %67, !dbg !6180
}

declare %struct._object* @PyObject_CallMethod(%struct._object*, i8*, i8*, ...) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @call_tzname(%struct._object* %tzinfo, %struct._object* %tzinfoarg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tzinfo.addr = alloca %struct._object*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !858, metadata !2553), !dbg !6181
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !859, metadata !2553), !dbg !6182
  %0 = bitcast %struct._object** %result to i8*, !dbg !6183
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6183
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !860, metadata !2553), !dbg !6184
  %1 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !6185, !tbaa !2563
  %cmp = icmp eq %struct._object* %1, @_Py_NoneStruct, !dbg !6187
  br i1 %cmp, label %if.then, label %if.end, !dbg !6188

if.then:                                          ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6189, !tbaa !2632
  %inc = add i64 %2, 1, !dbg !6189
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6189, !tbaa !2632
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6190
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6190

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !6191, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !6192, !tbaa !2563
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %3, %struct._Py_Identifier* @call_tzname.PyId_tzname, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %4), !dbg !6193
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !6194, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !6195, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %5, null, !dbg !6197
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !6198

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %result, align 8, !dbg !6199, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %6, @_Py_NoneStruct, !dbg !6201
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !6202

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._object*, %struct._object** %result, align 8, !dbg !6203, !tbaa !2563
  store %struct._object* %7, %struct._object** %retval, !dbg !6204
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6204

if.end.4:                                         ; preds = %lor.lhs.false
  %8 = load %struct._object*, %struct._object** %result, align 8, !dbg !6205, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !6206
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6206, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 19, !dbg !6207
  %10 = load i64, i64* %tp_flags, align 8, !dbg !6207, !tbaa !3751
  %and = and i64 %10, 268435456, !dbg !6208
  %cmp5 = icmp ne i64 %and, 0, !dbg !6209
  br i1 %cmp5, label %if.end.13, label %if.then.6, !dbg !6210

if.then.6:                                        ; preds = %if.end.4
  %11 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6211, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %result, align 8, !dbg !6212, !tbaa !2563
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !6213
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !6213, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 1, !dbg !6214
  %14 = load i8*, i8** %tp_name, align 8, !dbg !6214, !tbaa !3653
  %call8 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.88, i32 0, i32 0), i8* %14), !dbg !6215
  br label %do.body, !dbg !6216

do.body:                                          ; preds = %if.then.6
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6217
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !6217
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !861, metadata !2553), !dbg !6219
  %16 = load %struct._object*, %struct._object** %result, align 8, !dbg !6220, !tbaa !2563
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !6219, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6221, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !6223
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !6224, !tbaa !2632
  %dec = add i64 %18, -1, !dbg !6224
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6224, !tbaa !2632
  %cmp9 = icmp ne i64 %dec, 0, !dbg !6225
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !6226

if.then.10:                                       ; preds = %do.body
  br label %if.end.12, !dbg !6227

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6229, !tbaa !2563
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !6231
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !6231, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !6232
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6232, !tbaa !2642
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6233, !tbaa !2563
  call void %21(%struct._object* %22), !dbg !6234
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6235
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !6235
  br label %do.cond, !dbg !6237

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !6238

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %result, align 8, !dbg !6240, !tbaa !2563
  br label %if.end.13, !dbg !6241

if.end.13:                                        ; preds = %do.end, %if.end.4
  %24 = load %struct._object*, %struct._object** %result, align 8, !dbg !6242, !tbaa !2563
  store %struct._object* %24, %struct._object** %retval, !dbg !6243
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6243

cleanup:                                          ; preds = %if.end.13, %if.then.3, %if.then
  %25 = bitcast %struct._object** %result to i8*, !dbg !6244
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !6244
  %26 = load %struct._object*, %struct._object** %retval, !dbg !6244
  ret %struct._object* %26, !dbg !6244
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #5

declare i64 @PyUnicode_GetLength(%struct._object*) #3

declare %struct._object* @PyObject_Str(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @build_struct_time(i32 %y, i32 %m, i32 %d, i32 %hh, i32 %mm, i32 %ss, i32 %dstflag) #0 {
entry:
  %y.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %d.addr = alloca i32, align 4
  %hh.addr = alloca i32, align 4
  %mm.addr = alloca i32, align 4
  %ss.addr = alloca i32, align 4
  %dstflag.addr = alloca i32, align 4
  %time = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i32 %y, i32* %y.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !886, metadata !2553), !dbg !6245
  store i32 %m, i32* %m.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !887, metadata !2553), !dbg !6246
  store i32 %d, i32* %d.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %d.addr, metadata !888, metadata !2553), !dbg !6247
  store i32 %hh, i32* %hh.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %hh.addr, metadata !889, metadata !2553), !dbg !6248
  store i32 %mm, i32* %mm.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %mm.addr, metadata !890, metadata !2553), !dbg !6249
  store i32 %ss, i32* %ss.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %ss.addr, metadata !891, metadata !2553), !dbg !6250
  store i32 %dstflag, i32* %dstflag.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %dstflag.addr, metadata !892, metadata !2553), !dbg !6251
  %0 = bitcast %struct._object** %time to i8*, !dbg !6252
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6252
  call void @llvm.dbg.declare(metadata %struct._object** %time, metadata !893, metadata !2553), !dbg !6253
  %1 = bitcast %struct._object** %result to i8*, !dbg !6254
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6254
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !894, metadata !2553), !dbg !6255
  store %struct._object* null, %struct._object** %result, align 8, !dbg !6255, !tbaa !2563
  %call = call %struct._object* @PyImport_ImportModuleNoBlock(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0)), !dbg !6256
  store %struct._object* %call, %struct._object** %time, align 8, !dbg !6257, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %time, align 8, !dbg !6258, !tbaa !2563
  %cmp = icmp ne %struct._object* %2, null, !dbg !6259
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !6260

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %time, align 8, !dbg !6261, !tbaa !2563
  %4 = load i32, i32* %y.addr, align 4, !dbg !6262, !tbaa !3325
  %5 = load i32, i32* %m.addr, align 4, !dbg !6263, !tbaa !3325
  %6 = load i32, i32* %d.addr, align 4, !dbg !6264, !tbaa !3325
  %7 = load i32, i32* %hh.addr, align 4, !dbg !6265, !tbaa !3325
  %8 = load i32, i32* %mm.addr, align 4, !dbg !6266, !tbaa !3325
  %9 = load i32, i32* %ss.addr, align 4, !dbg !6267, !tbaa !3325
  %10 = load i32, i32* %y.addr, align 4, !dbg !6268, !tbaa !3325
  %11 = load i32, i32* %m.addr, align 4, !dbg !6269, !tbaa !3325
  %12 = load i32, i32* %d.addr, align 4, !dbg !6270, !tbaa !3325
  %call1 = call i32 @weekday(i32 %10, i32 %11, i32 %12), !dbg !6271
  %13 = load i32, i32* %y.addr, align 4, !dbg !6272, !tbaa !3325
  %14 = load i32, i32* %m.addr, align 4, !dbg !6273, !tbaa !3325
  %call2 = call i32 @days_before_month(i32 %13, i32 %14), !dbg !6274
  %15 = load i32, i32* %d.addr, align 4, !dbg !6275, !tbaa !3325
  %add = add i32 %call2, %15, !dbg !6276
  %16 = load i32, i32* %dstflag.addr, align 4, !dbg !6277, !tbaa !3325
  %call3 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %3, %struct._Py_Identifier* @build_struct_time.PyId_struct_time, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %call1, i32 %add, i32 %16), !dbg !6278
  store %struct._object* %call3, %struct._object** %result, align 8, !dbg !6279, !tbaa !2563
  br label %do.body, !dbg !6280

do.body:                                          ; preds = %if.then
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6281
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !6281
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !895, metadata !2553), !dbg !6283
  %18 = load %struct._object*, %struct._object** %time, align 8, !dbg !6284, !tbaa !2563
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !6283, !tbaa !2563
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6285, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !6287
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !6288, !tbaa !2632
  %dec = add i64 %20, -1, !dbg !6288
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6288, !tbaa !2632
  %cmp4 = icmp ne i64 %dec, 0, !dbg !6289
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !6290

if.then.5:                                        ; preds = %do.body
  br label %if.end, !dbg !6291

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6293, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !6295
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6295, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !6296
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6296, !tbaa !2642
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6297, !tbaa !2563
  call void %23(%struct._object* %24), !dbg !6298
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6299
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !6299
  br label %do.cond, !dbg !6301

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6302

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !6304

if.end.6:                                         ; preds = %do.end, %entry
  %26 = load %struct._object*, %struct._object** %result, align 8, !dbg !6305, !tbaa !2563
  %27 = bitcast %struct._object** %result to i8*, !dbg !6306
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !6306
  %28 = bitcast %struct._object** %time to i8*, !dbg !6306
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !6306
  ret %struct._object* %26, !dbg !6307
}

; Function Attrs: nounwind uwtable
define internal i32 @iso_week1_monday(i32 %year) #0 {
entry:
  %year.addr = alloca i32, align 4
  %first_day = alloca i32, align 4
  %first_weekday = alloca i32, align 4
  %week1_monday = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !909, metadata !2553), !dbg !6308
  %0 = bitcast i32* %first_day to i8*, !dbg !6309
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !6309
  call void @llvm.dbg.declare(metadata i32* %first_day, metadata !910, metadata !2553), !dbg !6310
  %1 = load i32, i32* %year.addr, align 4, !dbg !6311, !tbaa !3325
  %call = call i32 @ymd_to_ord(i32 %1, i32 1, i32 1), !dbg !6312
  store i32 %call, i32* %first_day, align 4, !dbg !6310, !tbaa !3325
  %2 = bitcast i32* %first_weekday to i8*, !dbg !6313
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6313
  call void @llvm.dbg.declare(metadata i32* %first_weekday, metadata !911, metadata !2553), !dbg !6314
  %3 = load i32, i32* %first_day, align 4, !dbg !6315, !tbaa !3325
  %add = add i32 %3, 6, !dbg !6316
  %rem = srem i32 %add, 7, !dbg !6317
  store i32 %rem, i32* %first_weekday, align 4, !dbg !6314, !tbaa !3325
  %4 = bitcast i32* %week1_monday to i8*, !dbg !6318
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !6318
  call void @llvm.dbg.declare(metadata i32* %week1_monday, metadata !912, metadata !2553), !dbg !6319
  %5 = load i32, i32* %first_day, align 4, !dbg !6320, !tbaa !3325
  %6 = load i32, i32* %first_weekday, align 4, !dbg !6321, !tbaa !3325
  %sub = sub i32 %5, %6, !dbg !6322
  store i32 %sub, i32* %week1_monday, align 4, !dbg !6319, !tbaa !3325
  %7 = load i32, i32* %first_weekday, align 4, !dbg !6323, !tbaa !3325
  %cmp = icmp sgt i32 %7, 3, !dbg !6325
  br i1 %cmp, label %if.then, label %if.end, !dbg !6326

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %week1_monday, align 4, !dbg !6327, !tbaa !3325
  %add1 = add i32 %8, 7, !dbg !6327
  store i32 %add1, i32* %week1_monday, align 4, !dbg !6327, !tbaa !3325
  br label %if.end, !dbg !6328

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %week1_monday, align 4, !dbg !6329, !tbaa !3325
  %10 = bitcast i32* %week1_monday to i8*, !dbg !6330
  call void @llvm.lifetime.end(i64 4, i8* %10) #1, !dbg !6330
  %11 = bitcast i32* %first_weekday to i8*, !dbg !6330
  call void @llvm.lifetime.end(i64 4, i8* %11) #1, !dbg !6330
  %12 = bitcast i32* %first_day to i8*, !dbg !6330
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !6330
  ret i32 %9, !dbg !6331
}

declare %struct._object* @Py_BuildValue(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_getstate(%struct.PyDateTime_Date* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %field = alloca %struct._object*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !945, metadata !2553), !dbg !6332
  %0 = bitcast %struct._object** %field to i8*, !dbg !6333
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6333
  call void @llvm.dbg.declare(metadata %struct._object** %field, metadata !946, metadata !2553), !dbg !6334
  %1 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !6335, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %1, i32 0, i32 3, !dbg !6336
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i32 0, i32 0, !dbg !6335
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay, i64 4), !dbg !6337
  store %struct._object* %call, %struct._object** %field, align 8, !dbg !6338, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %field, align 8, !dbg !6339, !tbaa !2563
  %call1 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), %struct._object* %2), !dbg !6340
  %3 = bitcast %struct._object** %field to i8*, !dbg !6341
  call void @llvm.lifetime.end(i64 8, i8* %3) #1, !dbg !6341
  ret %struct._object* %call1, !dbg !6342
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_year(%struct.PyDateTime_Date* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !951, metadata !2553), !dbg !6343
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !952, metadata !2553), !dbg !6344
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !6345, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 3, !dbg !6346
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !6347
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6347, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !6347
  %shl = shl i32 %conv, 8, !dbg !6348
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !6349, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !6350
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !6351
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !6351, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !6351
  %or = or i32 %shl, %conv3, !dbg !6352
  %conv4 = sext i32 %or to i64, !dbg !6353
  %call = call %struct._object* @PyLong_FromLong(i64 %conv4), !dbg !6354
  ret %struct._object* %call, !dbg !6355
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_month(%struct.PyDateTime_Date* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !955, metadata !2553), !dbg !6356
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !956, metadata !2553), !dbg !6357
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !6358, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 3, !dbg !6359
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 2, !dbg !6360
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6360, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !6361
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !6362
  ret %struct._object* %call, !dbg !6363
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @date_day(%struct.PyDateTime_Date* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !959, metadata !2553), !dbg !6364
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !960, metadata !2553), !dbg !6365
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !6366, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 3, !dbg !6367
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 3, !dbg !6368
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6368, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !6369
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !6370
  ret %struct._object* %call, !dbg !6371
}

; Function Attrs: nounwind uwtable
define internal i32 @check_date_args(i32 %year, i32 %month, i32 %day) #0 {
entry:
  %retval = alloca i32, align 4
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %year.addr, metadata !983, metadata !2553), !dbg !6372
  store i32 %month, i32* %month.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %month.addr, metadata !984, metadata !2553), !dbg !6373
  store i32 %day, i32* %day.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %day.addr, metadata !985, metadata !2553), !dbg !6374
  %0 = load i32, i32* %year.addr, align 4, !dbg !6375, !tbaa !3325
  %cmp = icmp slt i32 %0, 1, !dbg !6377
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6378

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %year.addr, align 4, !dbg !6379, !tbaa !3325
  %cmp1 = icmp sgt i32 %1, 9999, !dbg !6381
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6382

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6383, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i32 0, i32 0)), !dbg !6385
  store i32 -1, i32* %retval, !dbg !6386
  br label %return, !dbg !6386

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %month.addr, align 4, !dbg !6387, !tbaa !3325
  %cmp2 = icmp slt i32 %3, 1, !dbg !6389
  br i1 %cmp2, label %if.then.5, label %lor.lhs.false.3, !dbg !6390

lor.lhs.false.3:                                  ; preds = %if.end
  %4 = load i32, i32* %month.addr, align 4, !dbg !6391, !tbaa !3325
  %cmp4 = icmp sgt i32 %4, 12, !dbg !6393
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !6394

if.then.5:                                        ; preds = %lor.lhs.false.3, %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6395, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.101, i32 0, i32 0)), !dbg !6397
  store i32 -1, i32* %retval, !dbg !6398
  br label %return, !dbg !6398

if.end.6:                                         ; preds = %lor.lhs.false.3
  %6 = load i32, i32* %day.addr, align 4, !dbg !6399, !tbaa !3325
  %cmp7 = icmp slt i32 %6, 1, !dbg !6401
  br i1 %cmp7, label %if.then.10, label %lor.lhs.false.8, !dbg !6402

lor.lhs.false.8:                                  ; preds = %if.end.6
  %7 = load i32, i32* %day.addr, align 4, !dbg !6403, !tbaa !3325
  %8 = load i32, i32* %year.addr, align 4, !dbg !6405, !tbaa !3325
  %9 = load i32, i32* %month.addr, align 4, !dbg !6406, !tbaa !3325
  %call = call i32 @days_in_month(i32 %8, i32 %9), !dbg !6407
  %cmp9 = icmp sgt i32 %7, %call, !dbg !6408
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !6409

if.then.10:                                       ; preds = %lor.lhs.false.8, %if.end.6
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6410, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.102, i32 0, i32 0)), !dbg !6412
  store i32 -1, i32* %retval, !dbg !6413
  br label %return, !dbg !6413

if.end.11:                                        ; preds = %lor.lhs.false.8
  store i32 0, i32* %retval, !dbg !6414
  br label %return, !dbg !6414

return:                                           ; preds = %if.end.11, %if.then.10, %if.then.5, %if.then
  %11 = load i32, i32* %retval, !dbg !6415
  ret i32 %11, !dbg !6415
}

; Function Attrs: nounwind uwtable
define internal void @datetime_dealloc(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !990, metadata !2553), !dbg !6416
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6417, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_DateTime* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !6418
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !6419
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !6419, !tbaa !5575
  %tobool = icmp ne i8 %2, 0, !dbg !6420
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !6421

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6422

do.body:                                          ; preds = %if.then
  %3 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6423
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6423
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !991, metadata !2553), !dbg !6425
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6426, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !6427
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !6427, !tbaa !3586
  store %struct._object* %5, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6425, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6428, !tbaa !2563
  %cmp = icmp ne %struct._object* %6, null, !dbg !6429
  br i1 %cmp, label %if.then.1, label %if.end.5, !dbg !6430

if.then.1:                                        ; preds = %do.body
  br label %do.body.2, !dbg !6431

do.body.2:                                        ; preds = %if.then.1
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6433
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6433
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !995, metadata !2553), !dbg !6435
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6436, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !6435, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6437, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !6439
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !6440, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !6440
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6440, !tbaa !2632
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6441
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6442

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !6443

if.else:                                          ; preds = %do.body.2
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6445, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6447
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6447, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !6448
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6448, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6449, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !6450
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6451
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !6451
  br label %do.cond, !dbg !6453

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6454

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !6456

if.end.5:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6458
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !6458
  br label %do.end.7, !dbg !6461

do.end.7:                                         ; preds = %if.end.5
  br label %if.end.8, !dbg !6462

if.end.8:                                         ; preds = %do.end.7, %entry
  %17 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6463, !tbaa !2563
  %18 = bitcast %struct.PyDateTime_DateTime* %17 to %struct._object*, !dbg !6464
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6465
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !6465, !tbaa !2640
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !6466
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6466, !tbaa !6467
  %21 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6468, !tbaa !2563
  %22 = bitcast %struct.PyDateTime_DateTime* %21 to %struct._object*, !dbg !6469
  %23 = bitcast %struct._object* %22 to i8*, !dbg !6469
  call void %20(i8* %23), !dbg !6470
  ret void, !dbg !6471
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_repr(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %type_name = alloca i8*, align 8
  %baserepr = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1002, metadata !2553), !dbg !6472
  %0 = bitcast i8** %type_name to i8*, !dbg !6473
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6473
  call void @llvm.dbg.declare(metadata i8** %type_name, metadata !1003, metadata !2553), !dbg !6474
  %1 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6475, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_DateTime* %1 to %struct._object*, !dbg !6476
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !6477
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6477, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !6478
  %4 = load i8*, i8** %tp_name, align 8, !dbg !6478, !tbaa !3653
  store i8* %4, i8** %type_name, align 8, !dbg !6474, !tbaa !2563
  %5 = bitcast %struct._object** %baserepr to i8*, !dbg !6479
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !6479
  call void @llvm.dbg.declare(metadata %struct._object** %baserepr, metadata !1004, metadata !2553), !dbg !6480
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6481, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %6, i32 0, i32 3, !dbg !6483
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 7, !dbg !6484
  %7 = load i8, i8* %arrayidx, align 1, !dbg !6484, !tbaa !3415
  %conv = zext i8 %7 to i32, !dbg !6484
  %shl = shl i32 %conv, 16, !dbg !6485
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6486, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %8, i32 0, i32 3, !dbg !6487
  %arrayidx2 = getelementptr [10 x i8], [10 x i8]* %data1, i32 0, i64 8, !dbg !6488
  %9 = load i8, i8* %arrayidx2, align 1, !dbg !6488, !tbaa !3415
  %conv3 = zext i8 %9 to i32, !dbg !6488
  %shl4 = shl i32 %conv3, 8, !dbg !6489
  %or = or i32 %shl, %shl4, !dbg !6490
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6491, !tbaa !2563
  %data5 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %10, i32 0, i32 3, !dbg !6492
  %arrayidx6 = getelementptr [10 x i8], [10 x i8]* %data5, i32 0, i64 9, !dbg !6493
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !6493, !tbaa !3415
  %conv7 = zext i8 %11 to i32, !dbg !6493
  %or8 = or i32 %or, %conv7, !dbg !6494
  %tobool = icmp ne i32 %or8, 0, !dbg !6494
  br i1 %tobool, label %if.then, label %if.else, !dbg !6495

if.then:                                          ; preds = %entry
  %12 = load i8*, i8** %type_name, align 8, !dbg !6496, !tbaa !2563
  %13 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6498, !tbaa !2563
  %14 = bitcast %struct.PyDateTime_DateTime* %13 to %struct.PyDateTime_Date*, !dbg !6499
  %data9 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %14, i32 0, i32 3, !dbg !6500
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %data9, i32 0, i64 0, !dbg !6501
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !6501, !tbaa !3415
  %conv11 = zext i8 %15 to i32, !dbg !6501
  %shl12 = shl i32 %conv11, 8, !dbg !6502
  %16 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6503, !tbaa !2563
  %17 = bitcast %struct.PyDateTime_DateTime* %16 to %struct.PyDateTime_Date*, !dbg !6504
  %data13 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %17, i32 0, i32 3, !dbg !6505
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %data13, i32 0, i64 1, !dbg !6506
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !6506, !tbaa !3415
  %conv15 = zext i8 %18 to i32, !dbg !6506
  %or16 = or i32 %shl12, %conv15, !dbg !6507
  %19 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6508, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_DateTime* %19 to %struct.PyDateTime_Date*, !dbg !6509
  %data17 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %20, i32 0, i32 3, !dbg !6510
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %data17, i32 0, i64 2, !dbg !6511
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !6511, !tbaa !3415
  %conv19 = zext i8 %21 to i32, !dbg !6512
  %22 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6513, !tbaa !2563
  %23 = bitcast %struct.PyDateTime_DateTime* %22 to %struct.PyDateTime_Date*, !dbg !6514
  %data20 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %23, i32 0, i32 3, !dbg !6515
  %arrayidx21 = getelementptr [4 x i8], [4 x i8]* %data20, i32 0, i64 3, !dbg !6516
  %24 = load i8, i8* %arrayidx21, align 1, !dbg !6516, !tbaa !3415
  %conv22 = zext i8 %24 to i32, !dbg !6517
  %25 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6518, !tbaa !2563
  %data23 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %25, i32 0, i32 3, !dbg !6519
  %arrayidx24 = getelementptr [10 x i8], [10 x i8]* %data23, i32 0, i64 4, !dbg !6520
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !6520, !tbaa !3415
  %conv25 = zext i8 %26 to i32, !dbg !6521
  %27 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6522, !tbaa !2563
  %data26 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %27, i32 0, i32 3, !dbg !6523
  %arrayidx27 = getelementptr [10 x i8], [10 x i8]* %data26, i32 0, i64 5, !dbg !6524
  %28 = load i8, i8* %arrayidx27, align 1, !dbg !6524, !tbaa !3415
  %conv28 = zext i8 %28 to i32, !dbg !6525
  %29 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6526, !tbaa !2563
  %data29 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %29, i32 0, i32 3, !dbg !6527
  %arrayidx30 = getelementptr [10 x i8], [10 x i8]* %data29, i32 0, i64 6, !dbg !6528
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !6528, !tbaa !3415
  %conv31 = zext i8 %30 to i32, !dbg !6529
  %31 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6530, !tbaa !2563
  %data32 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %31, i32 0, i32 3, !dbg !6531
  %arrayidx33 = getelementptr [10 x i8], [10 x i8]* %data32, i32 0, i64 7, !dbg !6532
  %32 = load i8, i8* %arrayidx33, align 1, !dbg !6532, !tbaa !3415
  %conv34 = zext i8 %32 to i32, !dbg !6532
  %shl35 = shl i32 %conv34, 16, !dbg !6533
  %33 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6534, !tbaa !2563
  %data36 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %33, i32 0, i32 3, !dbg !6535
  %arrayidx37 = getelementptr [10 x i8], [10 x i8]* %data36, i32 0, i64 8, !dbg !6536
  %34 = load i8, i8* %arrayidx37, align 1, !dbg !6536, !tbaa !3415
  %conv38 = zext i8 %34 to i32, !dbg !6536
  %shl39 = shl i32 %conv38, 8, !dbg !6537
  %or40 = or i32 %shl35, %shl39, !dbg !6538
  %35 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6539, !tbaa !2563
  %data41 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %35, i32 0, i32 3, !dbg !6540
  %arrayidx42 = getelementptr [10 x i8], [10 x i8]* %data41, i32 0, i64 9, !dbg !6541
  %36 = load i8, i8* %arrayidx42, align 1, !dbg !6541, !tbaa !3415
  %conv43 = zext i8 %36 to i32, !dbg !6541
  %or44 = or i32 %or40, %conv43, !dbg !6542
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.104, i32 0, i32 0), i8* %12, i32 %or16, i32 %conv19, i32 %conv22, i32 %conv25, i32 %conv28, i32 %conv31, i32 %or44), !dbg !6543
  store %struct._object* %call, %struct._object** %baserepr, align 8, !dbg !6544, !tbaa !2563
  br label %if.end.95, !dbg !6545

if.else:                                          ; preds = %entry
  %37 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6546, !tbaa !2563
  %data45 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %37, i32 0, i32 3, !dbg !6548
  %arrayidx46 = getelementptr [10 x i8], [10 x i8]* %data45, i32 0, i64 6, !dbg !6549
  %38 = load i8, i8* %arrayidx46, align 1, !dbg !6549, !tbaa !3415
  %tobool47 = icmp ne i8 %38, 0, !dbg !6550
  br i1 %tobool47, label %if.then.48, label %if.else.73, !dbg !6551

if.then.48:                                       ; preds = %if.else
  %39 = load i8*, i8** %type_name, align 8, !dbg !6552, !tbaa !2563
  %40 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6554, !tbaa !2563
  %41 = bitcast %struct.PyDateTime_DateTime* %40 to %struct.PyDateTime_Date*, !dbg !6555
  %data49 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %41, i32 0, i32 3, !dbg !6556
  %arrayidx50 = getelementptr [4 x i8], [4 x i8]* %data49, i32 0, i64 0, !dbg !6557
  %42 = load i8, i8* %arrayidx50, align 1, !dbg !6557, !tbaa !3415
  %conv51 = zext i8 %42 to i32, !dbg !6557
  %shl52 = shl i32 %conv51, 8, !dbg !6558
  %43 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6559, !tbaa !2563
  %44 = bitcast %struct.PyDateTime_DateTime* %43 to %struct.PyDateTime_Date*, !dbg !6560
  %data53 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %44, i32 0, i32 3, !dbg !6561
  %arrayidx54 = getelementptr [4 x i8], [4 x i8]* %data53, i32 0, i64 1, !dbg !6562
  %45 = load i8, i8* %arrayidx54, align 1, !dbg !6562, !tbaa !3415
  %conv55 = zext i8 %45 to i32, !dbg !6562
  %or56 = or i32 %shl52, %conv55, !dbg !6563
  %46 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6564, !tbaa !2563
  %47 = bitcast %struct.PyDateTime_DateTime* %46 to %struct.PyDateTime_Date*, !dbg !6565
  %data57 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %47, i32 0, i32 3, !dbg !6566
  %arrayidx58 = getelementptr [4 x i8], [4 x i8]* %data57, i32 0, i64 2, !dbg !6567
  %48 = load i8, i8* %arrayidx58, align 1, !dbg !6567, !tbaa !3415
  %conv59 = zext i8 %48 to i32, !dbg !6568
  %49 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6569, !tbaa !2563
  %50 = bitcast %struct.PyDateTime_DateTime* %49 to %struct.PyDateTime_Date*, !dbg !6570
  %data60 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %50, i32 0, i32 3, !dbg !6571
  %arrayidx61 = getelementptr [4 x i8], [4 x i8]* %data60, i32 0, i64 3, !dbg !6572
  %51 = load i8, i8* %arrayidx61, align 1, !dbg !6572, !tbaa !3415
  %conv62 = zext i8 %51 to i32, !dbg !6573
  %52 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6574, !tbaa !2563
  %data63 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %52, i32 0, i32 3, !dbg !6575
  %arrayidx64 = getelementptr [10 x i8], [10 x i8]* %data63, i32 0, i64 4, !dbg !6576
  %53 = load i8, i8* %arrayidx64, align 1, !dbg !6576, !tbaa !3415
  %conv65 = zext i8 %53 to i32, !dbg !6577
  %54 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6578, !tbaa !2563
  %data66 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %54, i32 0, i32 3, !dbg !6579
  %arrayidx67 = getelementptr [10 x i8], [10 x i8]* %data66, i32 0, i64 5, !dbg !6580
  %55 = load i8, i8* %arrayidx67, align 1, !dbg !6580, !tbaa !3415
  %conv68 = zext i8 %55 to i32, !dbg !6581
  %56 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6582, !tbaa !2563
  %data69 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %56, i32 0, i32 3, !dbg !6583
  %arrayidx70 = getelementptr [10 x i8], [10 x i8]* %data69, i32 0, i64 6, !dbg !6584
  %57 = load i8, i8* %arrayidx70, align 1, !dbg !6584, !tbaa !3415
  %conv71 = zext i8 %57 to i32, !dbg !6585
  %call72 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.105, i32 0, i32 0), i8* %39, i32 %or56, i32 %conv59, i32 %conv62, i32 %conv65, i32 %conv68, i32 %conv71), !dbg !6586
  store %struct._object* %call72, %struct._object** %baserepr, align 8, !dbg !6587, !tbaa !2563
  br label %if.end, !dbg !6588

if.else.73:                                       ; preds = %if.else
  %58 = load i8*, i8** %type_name, align 8, !dbg !6589, !tbaa !2563
  %59 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6591, !tbaa !2563
  %60 = bitcast %struct.PyDateTime_DateTime* %59 to %struct.PyDateTime_Date*, !dbg !6592
  %data74 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %60, i32 0, i32 3, !dbg !6593
  %arrayidx75 = getelementptr [4 x i8], [4 x i8]* %data74, i32 0, i64 0, !dbg !6594
  %61 = load i8, i8* %arrayidx75, align 1, !dbg !6594, !tbaa !3415
  %conv76 = zext i8 %61 to i32, !dbg !6594
  %shl77 = shl i32 %conv76, 8, !dbg !6595
  %62 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6596, !tbaa !2563
  %63 = bitcast %struct.PyDateTime_DateTime* %62 to %struct.PyDateTime_Date*, !dbg !6597
  %data78 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %63, i32 0, i32 3, !dbg !6598
  %arrayidx79 = getelementptr [4 x i8], [4 x i8]* %data78, i32 0, i64 1, !dbg !6599
  %64 = load i8, i8* %arrayidx79, align 1, !dbg !6599, !tbaa !3415
  %conv80 = zext i8 %64 to i32, !dbg !6599
  %or81 = or i32 %shl77, %conv80, !dbg !6600
  %65 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6601, !tbaa !2563
  %66 = bitcast %struct.PyDateTime_DateTime* %65 to %struct.PyDateTime_Date*, !dbg !6602
  %data82 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %66, i32 0, i32 3, !dbg !6603
  %arrayidx83 = getelementptr [4 x i8], [4 x i8]* %data82, i32 0, i64 2, !dbg !6604
  %67 = load i8, i8* %arrayidx83, align 1, !dbg !6604, !tbaa !3415
  %conv84 = zext i8 %67 to i32, !dbg !6605
  %68 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6606, !tbaa !2563
  %69 = bitcast %struct.PyDateTime_DateTime* %68 to %struct.PyDateTime_Date*, !dbg !6607
  %data85 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %69, i32 0, i32 3, !dbg !6608
  %arrayidx86 = getelementptr [4 x i8], [4 x i8]* %data85, i32 0, i64 3, !dbg !6609
  %70 = load i8, i8* %arrayidx86, align 1, !dbg !6609, !tbaa !3415
  %conv87 = zext i8 %70 to i32, !dbg !6610
  %71 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6611, !tbaa !2563
  %data88 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %71, i32 0, i32 3, !dbg !6612
  %arrayidx89 = getelementptr [10 x i8], [10 x i8]* %data88, i32 0, i64 4, !dbg !6613
  %72 = load i8, i8* %arrayidx89, align 1, !dbg !6613, !tbaa !3415
  %conv90 = zext i8 %72 to i32, !dbg !6614
  %73 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6615, !tbaa !2563
  %data91 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %73, i32 0, i32 3, !dbg !6616
  %arrayidx92 = getelementptr [10 x i8], [10 x i8]* %data91, i32 0, i64 5, !dbg !6617
  %74 = load i8, i8* %arrayidx92, align 1, !dbg !6617, !tbaa !3415
  %conv93 = zext i8 %74 to i32, !dbg !6618
  %call94 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.106, i32 0, i32 0), i8* %58, i32 %or81, i32 %conv84, i32 %conv87, i32 %conv90, i32 %conv93), !dbg !6619
  store %struct._object* %call94, %struct._object** %baserepr, align 8, !dbg !6620, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else.73, %if.then.48
  br label %if.end.95

if.end.95:                                        ; preds = %if.end, %if.then
  %75 = load %struct._object*, %struct._object** %baserepr, align 8, !dbg !6621, !tbaa !2563
  %cmp = icmp eq %struct._object* %75, null, !dbg !6623
  br i1 %cmp, label %if.then.98, label %lor.lhs.false, !dbg !6624

lor.lhs.false:                                    ; preds = %if.end.95
  %76 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6625, !tbaa !2563
  %77 = bitcast %struct.PyDateTime_DateTime* %76 to %struct._PyDateTime_BaseTZInfo*, !dbg !6627
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %77, i32 0, i32 2, !dbg !6628
  %78 = load i8, i8* %hastzinfo, align 1, !dbg !6628, !tbaa !5575
  %tobool97 = icmp ne i8 %78, 0, !dbg !6629
  br i1 %tobool97, label %if.end.99, label %if.then.98, !dbg !6630

if.then.98:                                       ; preds = %lor.lhs.false, %if.end.95
  %79 = load %struct._object*, %struct._object** %baserepr, align 8, !dbg !6631, !tbaa !2563
  store %struct._object* %79, %struct._object** %retval, !dbg !6632
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6632

if.end.99:                                        ; preds = %lor.lhs.false
  %80 = load %struct._object*, %struct._object** %baserepr, align 8, !dbg !6633, !tbaa !2563
  %81 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6634, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %81, i32 0, i32 4, !dbg !6635
  %82 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !6635, !tbaa !3586
  %call100 = call %struct._object* @append_keyword_tzinfo(%struct._object* %80, %struct._object* %82), !dbg !6636
  store %struct._object* %call100, %struct._object** %retval, !dbg !6637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6637

cleanup:                                          ; preds = %if.end.99, %if.then.98
  %83 = bitcast %struct._object** %baserepr to i8*, !dbg !6638
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !6638
  %84 = bitcast i8** %type_name to i8*, !dbg !6638
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !6638
  %85 = load %struct._object*, %struct._object** %retval, !dbg !6638
  ret %struct._object* %85, !dbg !6638
}

; Function Attrs: nounwind uwtable
define internal i64 @datetime_hash(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %offset = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %temp1 = alloca %struct._object*, align 8
  %temp2 = alloca %struct._object*, align 8
  %days = alloca i32, align 4
  %seconds = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_decref_tmp70 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  %_py_decref_tmp103 = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1124, metadata !2553), !dbg !6639
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6640, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 1, !dbg !6641
  %1 = load i64, i64* %hashcode, align 8, !dbg !6641, !tbaa !6642
  %cmp = icmp eq i64 %1, -1, !dbg !6643
  br i1 %cmp, label %if.then, label %if.end.118, !dbg !6644

if.then:                                          ; preds = %entry
  %2 = bitcast %struct._object** %offset to i8*, !dbg !6645
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6645
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !1125, metadata !2553), !dbg !6646
  %3 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6647, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_DateTime* %3 to %struct._object*, !dbg !6648
  %call = call %struct._object* @datetime_utcoffset(%struct._object* %4, %struct._object* null), !dbg !6649
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !6650, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6651, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %5, null, !dbg !6653
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !6654

if.then.2:                                        ; preds = %if.then
  store i64 -1, i64* %retval, !dbg !6655
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !6655

if.end:                                           ; preds = %if.then
  %6 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6656, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %6, @_Py_NoneStruct, !dbg !6657
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6658

if.then.4:                                        ; preds = %if.end
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6659, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %7, i32 0, i32 3, !dbg !6660
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %data, i32 0, i32 0, !dbg !6659
  %call5 = call i64 @generic_hash(i8* %arraydecay, i32 10), !dbg !6661
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6662, !tbaa !2563
  %hashcode6 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %8, i32 0, i32 1, !dbg !6663
  store i64 %call5, i64* %hashcode6, align 8, !dbg !6664, !tbaa !6642
  br label %if.end.101, !dbg !6662

if.else:                                          ; preds = %if.end
  %9 = bitcast %struct._object** %temp1 to i8*, !dbg !6665
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !6665
  call void @llvm.dbg.declare(metadata %struct._object** %temp1, metadata !1128, metadata !2553), !dbg !6666
  %10 = bitcast %struct._object** %temp2 to i8*, !dbg !6665
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !6665
  call void @llvm.dbg.declare(metadata %struct._object** %temp2, metadata !1131, metadata !2553), !dbg !6667
  %11 = bitcast i32* %days to i8*, !dbg !6668
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %days, metadata !1132, metadata !2553), !dbg !6669
  %12 = bitcast i32* %seconds to i8*, !dbg !6668
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !1133, metadata !2553), !dbg !6670
  %13 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6671, !tbaa !2563
  %14 = bitcast %struct.PyDateTime_DateTime* %13 to %struct.PyDateTime_Date*, !dbg !6672
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %14, i32 0, i32 3, !dbg !6673
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 0, !dbg !6674
  %15 = load i8, i8* %arrayidx, align 1, !dbg !6674, !tbaa !3415
  %conv = zext i8 %15 to i32, !dbg !6674
  %shl = shl i32 %conv, 8, !dbg !6675
  %16 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6676, !tbaa !2563
  %17 = bitcast %struct.PyDateTime_DateTime* %16 to %struct.PyDateTime_Date*, !dbg !6677
  %data8 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %17, i32 0, i32 3, !dbg !6678
  %arrayidx9 = getelementptr [4 x i8], [4 x i8]* %data8, i32 0, i64 1, !dbg !6679
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !6679, !tbaa !3415
  %conv10 = zext i8 %18 to i32, !dbg !6679
  %or = or i32 %shl, %conv10, !dbg !6680
  %19 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6681, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_DateTime* %19 to %struct.PyDateTime_Date*, !dbg !6682
  %data11 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %20, i32 0, i32 3, !dbg !6683
  %arrayidx12 = getelementptr [4 x i8], [4 x i8]* %data11, i32 0, i64 2, !dbg !6684
  %21 = load i8, i8* %arrayidx12, align 1, !dbg !6684, !tbaa !3415
  %conv13 = zext i8 %21 to i32, !dbg !6685
  %22 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6686, !tbaa !2563
  %23 = bitcast %struct.PyDateTime_DateTime* %22 to %struct.PyDateTime_Date*, !dbg !6687
  %data14 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %23, i32 0, i32 3, !dbg !6688
  %arrayidx15 = getelementptr [4 x i8], [4 x i8]* %data14, i32 0, i64 3, !dbg !6689
  %24 = load i8, i8* %arrayidx15, align 1, !dbg !6689, !tbaa !3415
  %conv16 = zext i8 %24 to i32, !dbg !6690
  %call17 = call i32 @ymd_to_ord(i32 %or, i32 %conv13, i32 %conv16), !dbg !6691
  store i32 %call17, i32* %days, align 4, !dbg !6692, !tbaa !3325
  %25 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6693, !tbaa !2563
  %data18 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %25, i32 0, i32 3, !dbg !6694
  %arrayidx19 = getelementptr [10 x i8], [10 x i8]* %data18, i32 0, i64 4, !dbg !6695
  %26 = load i8, i8* %arrayidx19, align 1, !dbg !6695, !tbaa !3415
  %conv20 = zext i8 %26 to i32, !dbg !6696
  %mul = mul i32 %conv20, 3600, !dbg !6697
  %27 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6698, !tbaa !2563
  %data21 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %27, i32 0, i32 3, !dbg !6699
  %arrayidx22 = getelementptr [10 x i8], [10 x i8]* %data21, i32 0, i64 5, !dbg !6700
  %28 = load i8, i8* %arrayidx22, align 1, !dbg !6700, !tbaa !3415
  %conv23 = zext i8 %28 to i32, !dbg !6701
  %mul24 = mul i32 %conv23, 60, !dbg !6702
  %add = add i32 %mul, %mul24, !dbg !6703
  %29 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6704, !tbaa !2563
  %data25 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %29, i32 0, i32 3, !dbg !6705
  %arrayidx26 = getelementptr [10 x i8], [10 x i8]* %data25, i32 0, i64 6, !dbg !6706
  %30 = load i8, i8* %arrayidx26, align 1, !dbg !6706, !tbaa !3415
  %conv27 = zext i8 %30 to i32, !dbg !6707
  %add28 = add i32 %add, %conv27, !dbg !6708
  store i32 %add28, i32* %seconds, align 4, !dbg !6709, !tbaa !3325
  %31 = load i32, i32* %days, align 4, !dbg !6710, !tbaa !3325
  %32 = load i32, i32* %seconds, align 4, !dbg !6711, !tbaa !3325
  %33 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6712, !tbaa !2563
  %data29 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %33, i32 0, i32 3, !dbg !6713
  %arrayidx30 = getelementptr [10 x i8], [10 x i8]* %data29, i32 0, i64 7, !dbg !6714
  %34 = load i8, i8* %arrayidx30, align 1, !dbg !6714, !tbaa !3415
  %conv31 = zext i8 %34 to i32, !dbg !6714
  %shl32 = shl i32 %conv31, 16, !dbg !6715
  %35 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6716, !tbaa !2563
  %data33 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %35, i32 0, i32 3, !dbg !6717
  %arrayidx34 = getelementptr [10 x i8], [10 x i8]* %data33, i32 0, i64 8, !dbg !6718
  %36 = load i8, i8* %arrayidx34, align 1, !dbg !6718, !tbaa !3415
  %conv35 = zext i8 %36 to i32, !dbg !6718
  %shl36 = shl i32 %conv35, 8, !dbg !6719
  %or37 = or i32 %shl32, %shl36, !dbg !6720
  %37 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6721, !tbaa !2563
  %data38 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %37, i32 0, i32 3, !dbg !6722
  %arrayidx39 = getelementptr [10 x i8], [10 x i8]* %data38, i32 0, i64 9, !dbg !6723
  %38 = load i8, i8* %arrayidx39, align 1, !dbg !6723, !tbaa !3415
  %conv40 = zext i8 %38 to i32, !dbg !6723
  %or41 = or i32 %or37, %conv40, !dbg !6724
  %call42 = call %struct._object* @new_delta_ex(i32 %31, i32 %32, i32 %or41, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !6725
  store %struct._object* %call42, %struct._object** %temp1, align 8, !dbg !6726, !tbaa !2563
  %39 = load %struct._object*, %struct._object** %temp1, align 8, !dbg !6727, !tbaa !2563
  %cmp43 = icmp eq %struct._object* %39, null, !dbg !6728
  br i1 %cmp43, label %if.then.45, label %if.end.51, !dbg !6729

if.then.45:                                       ; preds = %if.else
  br label %do.body, !dbg !6730

do.body:                                          ; preds = %if.then.45
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6731
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !6731
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1134, metadata !2553), !dbg !6733
  %41 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6734, !tbaa !2563
  store %struct._object* %41, %struct._object** %_py_decref_tmp, align 8, !dbg !6733, !tbaa !2563
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6735, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !6737
  %43 = load i64, i64* %ob_refcnt, align 8, !dbg !6738, !tbaa !2632
  %dec = add i64 %43, -1, !dbg !6738
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6738, !tbaa !2632
  %cmp46 = icmp ne i64 %dec, 0, !dbg !6739
  br i1 %cmp46, label %if.then.48, label %if.else.49, !dbg !6740

if.then.48:                                       ; preds = %do.body
  br label %if.end.50, !dbg !6741

if.else.49:                                       ; preds = %do.body
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6743, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !6745
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6745, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !6746
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6746, !tbaa !2642
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6747, !tbaa !2563
  call void %46(%struct._object* %47), !dbg !6748
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.49, %if.then.48
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6749
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !6749
  br label %do.cond, !dbg !6751

do.cond:                                          ; preds = %if.end.50
  br label %do.end, !dbg !6752

do.end:                                           ; preds = %do.cond
  store i64 -1, i64* %retval, !dbg !6754
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6754

if.end.51:                                        ; preds = %if.else
  %49 = load %struct._object*, %struct._object** %temp1, align 8, !dbg !6755, !tbaa !2563
  %50 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6756, !tbaa !2563
  %call52 = call %struct._object* @delta_subtract(%struct._object* %49, %struct._object* %50), !dbg !6757
  store %struct._object* %call52, %struct._object** %temp2, align 8, !dbg !6758, !tbaa !2563
  br label %do.body.53, !dbg !6759

do.body.53:                                       ; preds = %if.end.51
  %51 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6760
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !6760
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1138, metadata !2553), !dbg !6762
  %52 = load %struct._object*, %struct._object** %temp1, align 8, !dbg !6763, !tbaa !2563
  store %struct._object* %52, %struct._object** %_py_decref_tmp54, align 8, !dbg !6762, !tbaa !2563
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6764, !tbaa !2563
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !6766
  %54 = load i64, i64* %ob_refcnt55, align 8, !dbg !6767, !tbaa !2632
  %dec56 = add i64 %54, -1, !dbg !6767
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !6767, !tbaa !2632
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !6768
  br i1 %cmp57, label %if.then.59, label %if.else.60, !dbg !6769

if.then.59:                                       ; preds = %do.body.53
  br label %if.end.63, !dbg !6770

if.else.60:                                       ; preds = %do.body.53
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6772, !tbaa !2563
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !6774
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !6774, !tbaa !2640
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !6775
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !6775, !tbaa !2642
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6776, !tbaa !2563
  call void %57(%struct._object* %58), !dbg !6777
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %59 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6778
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !6778
  br label %do.cond.64, !dbg !6780

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !6781

do.end.65:                                        ; preds = %do.cond.64
  %60 = load %struct._object*, %struct._object** %temp2, align 8, !dbg !6783, !tbaa !2563
  %cmp66 = icmp eq %struct._object* %60, null, !dbg !6784
  br i1 %cmp66, label %if.then.68, label %if.end.82, !dbg !6785

if.then.68:                                       ; preds = %do.end.65
  br label %do.body.69, !dbg !6786

do.body.69:                                       ; preds = %if.then.68
  %61 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !6787
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !6787
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp70, metadata !1140, metadata !2553), !dbg !6789
  %62 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6790, !tbaa !2563
  store %struct._object* %62, %struct._object** %_py_decref_tmp70, align 8, !dbg !6789, !tbaa !2563
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !6791, !tbaa !2563
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !6793
  %64 = load i64, i64* %ob_refcnt71, align 8, !dbg !6794, !tbaa !2632
  %dec72 = add i64 %64, -1, !dbg !6794
  store i64 %dec72, i64* %ob_refcnt71, align 8, !dbg !6794, !tbaa !2632
  %cmp73 = icmp ne i64 %dec72, 0, !dbg !6795
  br i1 %cmp73, label %if.then.75, label %if.else.76, !dbg !6796

if.then.75:                                       ; preds = %do.body.69
  br label %if.end.79, !dbg !6797

if.else.76:                                       ; preds = %do.body.69
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !6799, !tbaa !2563
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !6801
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !6801, !tbaa !2640
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !6802
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !6802, !tbaa !2642
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !6803, !tbaa !2563
  call void %67(%struct._object* %68), !dbg !6804
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %69 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !6805
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !6805
  br label %do.cond.80, !dbg !6807

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !6808

do.end.81:                                        ; preds = %do.cond.80
  store i64 -1, i64* %retval, !dbg !6810
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6810

if.end.82:                                        ; preds = %do.end.65
  %70 = load %struct._object*, %struct._object** %temp2, align 8, !dbg !6811, !tbaa !2563
  %call83 = call i64 @PyObject_Hash(%struct._object* %70), !dbg !6812
  %71 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6813, !tbaa !2563
  %hashcode84 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %71, i32 0, i32 1, !dbg !6814
  store i64 %call83, i64* %hashcode84, align 8, !dbg !6815, !tbaa !6642
  br label %do.body.85, !dbg !6816

do.body.85:                                       ; preds = %if.end.82
  %72 = bitcast %struct._object** %_py_decref_tmp86 to i8*, !dbg !6817
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !6817
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp86, metadata !1144, metadata !2553), !dbg !6819
  %73 = load %struct._object*, %struct._object** %temp2, align 8, !dbg !6820, !tbaa !2563
  store %struct._object* %73, %struct._object** %_py_decref_tmp86, align 8, !dbg !6819, !tbaa !2563
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6821, !tbaa !2563
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !6823
  %75 = load i64, i64* %ob_refcnt87, align 8, !dbg !6824, !tbaa !2632
  %dec88 = add i64 %75, -1, !dbg !6824
  store i64 %dec88, i64* %ob_refcnt87, align 8, !dbg !6824, !tbaa !2632
  %cmp89 = icmp ne i64 %dec88, 0, !dbg !6825
  br i1 %cmp89, label %if.then.91, label %if.else.92, !dbg !6826

if.then.91:                                       ; preds = %do.body.85
  br label %if.end.95, !dbg !6827

if.else.92:                                       ; preds = %do.body.85
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6829, !tbaa !2563
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !6831
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !6831, !tbaa !2640
  %tp_dealloc94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !6832
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc94, align 8, !dbg !6832, !tbaa !2642
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6833, !tbaa !2563
  call void %78(%struct._object* %79), !dbg !6834
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.92, %if.then.91
  %80 = bitcast %struct._object** %_py_decref_tmp86 to i8*, !dbg !6835
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !6835
  br label %do.cond.96, !dbg !6836

do.cond.96:                                       ; preds = %if.end.95
  br label %do.end.97, !dbg !6837

do.end.97:                                        ; preds = %do.cond.96
  store i32 0, i32* %cleanup.dest.slot, !dbg !6839
  br label %cleanup, !dbg !6839

cleanup:                                          ; preds = %do.end.97, %do.end.81, %do.end
  %81 = bitcast i32* %seconds to i8*, !dbg !6840
  call void @llvm.lifetime.end(i64 4, i8* %81) #1, !dbg !6840
  %82 = bitcast i32* %days to i8*, !dbg !6840
  call void @llvm.lifetime.end(i64 4, i8* %82) #1, !dbg !6840
  %83 = bitcast %struct._object** %temp2 to i8*, !dbg !6840
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !6840
  %84 = bitcast %struct._object** %temp1 to i8*, !dbg !6840
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !6840
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.115 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.101

if.end.101:                                       ; preds = %cleanup.cont, %if.then.4
  br label %do.body.102, !dbg !6842

do.body.102:                                      ; preds = %if.end.101
  %85 = bitcast %struct._object** %_py_decref_tmp103 to i8*, !dbg !6843
  call void @llvm.lifetime.start(i64 8, i8* %85) #1, !dbg !6843
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp103, metadata !1146, metadata !2553), !dbg !6845
  %86 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6846, !tbaa !2563
  store %struct._object* %86, %struct._object** %_py_decref_tmp103, align 8, !dbg !6845, !tbaa !2563
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !6847, !tbaa !2563
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !6849
  %88 = load i64, i64* %ob_refcnt104, align 8, !dbg !6850, !tbaa !2632
  %dec105 = add i64 %88, -1, !dbg !6850
  store i64 %dec105, i64* %ob_refcnt104, align 8, !dbg !6850, !tbaa !2632
  %cmp106 = icmp ne i64 %dec105, 0, !dbg !6851
  br i1 %cmp106, label %if.then.108, label %if.else.109, !dbg !6852

if.then.108:                                      ; preds = %do.body.102
  br label %if.end.112, !dbg !6853

if.else.109:                                      ; preds = %do.body.102
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !6855, !tbaa !2563
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !6857
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !6857, !tbaa !2640
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !6858
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !6858, !tbaa !2642
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !6859, !tbaa !2563
  call void %91(%struct._object* %92), !dbg !6860
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %93 = bitcast %struct._object** %_py_decref_tmp103 to i8*, !dbg !6861
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !6861
  br label %do.cond.113, !dbg !6863

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !6864

do.end.114:                                       ; preds = %do.cond.113
  store i32 0, i32* %cleanup.dest.slot, !dbg !6866
  br label %cleanup.115, !dbg !6866

cleanup.115:                                      ; preds = %do.end.114, %cleanup, %if.then.2
  %94 = bitcast %struct._object** %offset to i8*, !dbg !6867
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !6867
  %cleanup.dest.116 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.116, label %unreachable [
    i32 0, label %cleanup.cont.117
    i32 1, label %return
  ]

cleanup.cont.117:                                 ; preds = %cleanup.115
  br label %if.end.118, !dbg !6869

if.end.118:                                       ; preds = %cleanup.cont.117, %entry
  %95 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6870, !tbaa !2563
  %hashcode119 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %95, i32 0, i32 1, !dbg !6871
  %96 = load i64, i64* %hashcode119, align 8, !dbg !6871, !tbaa !6642
  store i64 %96, i64* %retval, !dbg !6872
  br label %return, !dbg !6872

return:                                           ; preds = %if.end.118, %cleanup.115
  %97 = load i64, i64* %retval, !dbg !6873
  ret i64 %97, !dbg !6873

unreachable:                                      ; preds = %cleanup.115
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_str(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1150, metadata !2553), !dbg !6874
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !6875, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_DateTime* %0 to %struct._object*, !dbg !6876
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %1, %struct._Py_Identifier* @PyId_isoformat, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0)), !dbg !6877
  ret %struct._object* %call, !dbg !6878
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_richcompare(%struct._object* %self, %struct._object* %other, i32 %op) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %other.addr = alloca %struct._object*, align 8
  %op.addr = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  %offset1 = alloca %struct._object*, align 8
  %offset2 = alloca %struct._object*, align 8
  %diff = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %delta = alloca %struct.PyDateTime_Delta*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp131 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1153, metadata !2553), !dbg !6879
  store %struct._object* %other, %struct._object** %other.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %other.addr, metadata !1154, metadata !2553), !dbg !6880
  store i32 %op, i32* %op.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !1155, metadata !2553), !dbg !6881
  %0 = bitcast %struct._object** %result to i8*, !dbg !6882
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6882
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1156, metadata !2553), !dbg !6883
  store %struct._object* null, %struct._object** %result, align 8, !dbg !6883, !tbaa !2563
  %1 = bitcast %struct._object** %offset1 to i8*, !dbg !6884
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6884
  call void @llvm.dbg.declare(metadata %struct._object** %offset1, metadata !1157, metadata !2553), !dbg !6885
  %2 = bitcast %struct._object** %offset2 to i8*, !dbg !6884
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6884
  call void @llvm.dbg.declare(metadata %struct._object** %offset2, metadata !1158, metadata !2553), !dbg !6886
  %3 = bitcast i32* %diff to i8*, !dbg !6887
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !6887
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !1159, metadata !2553), !dbg !6888
  %4 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6889, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !6891
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6891, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %5, @PyDateTime_DateTimeType, !dbg !6892
  br i1 %cmp, label %if.end.18, label %lor.lhs.false, !dbg !6893

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6894, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !6896
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !6896, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !6897
  %tobool = icmp ne i32 %call, 0, !dbg !6897
  br i1 %tobool, label %if.end.18, label %if.then, !dbg !6898

if.then:                                          ; preds = %lor.lhs.false
  %8 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6899, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !6902
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !6902, !tbaa !2640
  %cmp3 = icmp eq %struct._typeobject* %9, @PyDateTime_DateType, !dbg !6903
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4, !dbg !6904

lor.lhs.false.4:                                  ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6905, !tbaa !2563
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6907
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !6907, !tbaa !2640
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %11, %struct._typeobject* @PyDateTime_DateType), !dbg !6908
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6908
  br i1 %tobool7, label %if.then.8, label %if.end.16, !dbg !6909

if.then.8:                                        ; preds = %lor.lhs.false.4, %if.then
  %12 = load i32, i32* %op.addr, align 4, !dbg !6910, !tbaa !3325
  %cmp9 = icmp eq i32 %12, 2, !dbg !6913
  br i1 %cmp9, label %if.then.10, label %if.end, !dbg !6914

if.then.10:                                       ; preds = %if.then.8
  %13 = load i64, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !6915, !tbaa !2632
  %inc = add i64 %13, 1, !dbg !6915
  store i64 %inc, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !6915, !tbaa !2632
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %retval, !dbg !6916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !6916

if.end:                                           ; preds = %if.then.8
  %14 = load i32, i32* %op.addr, align 4, !dbg !6917, !tbaa !3325
  %cmp11 = icmp eq i32 %14, 3, !dbg !6919
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !6920

if.then.12:                                       ; preds = %if.end
  %15 = load i64, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !6921, !tbaa !2632
  %inc13 = add i64 %15, 1, !dbg !6921
  store i64 %inc13, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !6921, !tbaa !2632
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %retval, !dbg !6922
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !6922

if.end.14:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6923, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6924, !tbaa !2563
  %call15 = call %struct._object* @cmperror(%struct._object* %16, %struct._object* %17), !dbg !6925
  store %struct._object* %call15, %struct._object** %retval, !dbg !6926
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !6926

if.end.16:                                        ; preds = %lor.lhs.false.4
  %18 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !6927, !tbaa !2632
  %inc17 = add i64 %18, 1, !dbg !6927
  store i64 %inc17, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !6927, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !6928
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !6928

if.end.18:                                        ; preds = %lor.lhs.false, %entry
  %19 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6929, !tbaa !2563
  %20 = bitcast %struct._object* %19 to %struct._PyDateTime_BaseTZInfo*, !dbg !6931
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %20, i32 0, i32 2, !dbg !6932
  %21 = load i8, i8* %hastzinfo, align 1, !dbg !6932, !tbaa !5575
  %conv = sext i8 %21 to i32, !dbg !6933
  %tobool19 = icmp ne i32 %conv, 0, !dbg !6933
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !6933

cond.true:                                        ; preds = %if.end.18
  %22 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6934, !tbaa !2563
  %23 = bitcast %struct._object* %22 to %struct.PyDateTime_DateTime*, !dbg !6936
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %23, i32 0, i32 4, !dbg !6937
  %24 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !6937, !tbaa !3586
  br label %cond.end, !dbg !6933

cond.false:                                       ; preds = %if.end.18
  br label %cond.end, !dbg !6938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %24, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !6933
  %25 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6940, !tbaa !2563
  %26 = bitcast %struct._object* %25 to %struct._PyDateTime_BaseTZInfo*, !dbg !6943
  %hastzinfo20 = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %26, i32 0, i32 2, !dbg !6944
  %27 = load i8, i8* %hastzinfo20, align 1, !dbg !6944, !tbaa !5575
  %conv21 = sext i8 %27 to i32, !dbg !6945
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !6945
  br i1 %tobool22, label %cond.true.23, label %cond.false.25, !dbg !6945

cond.true.23:                                     ; preds = %cond.end
  %28 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6946, !tbaa !2563
  %29 = bitcast %struct._object* %28 to %struct.PyDateTime_DateTime*, !dbg !6948
  %tzinfo24 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %29, i32 0, i32 4, !dbg !6949
  %30 = load %struct._object*, %struct._object** %tzinfo24, align 8, !dbg !6949, !tbaa !3586
  br label %cond.end.26, !dbg !6945

cond.false.25:                                    ; preds = %cond.end
  br label %cond.end.26, !dbg !6950

cond.end.26:                                      ; preds = %cond.false.25, %cond.true.23
  %cond27 = phi %struct._object* [ %30, %cond.true.23 ], [ @_Py_NoneStruct, %cond.false.25 ], !dbg !6945
  %cmp28 = icmp eq %struct._object* %cond, %cond27, !dbg !6952
  br i1 %cmp28, label %if.then.30, label %if.end.35, !dbg !6955

if.then.30:                                       ; preds = %cond.end.26
  %31 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6956, !tbaa !2563
  %32 = bitcast %struct._object* %31 to %struct.PyDateTime_DateTime*, !dbg !6958
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %32, i32 0, i32 3, !dbg !6959
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %data, i32 0, i32 0, !dbg !6960
  %33 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6961, !tbaa !2563
  %34 = bitcast %struct._object* %33 to %struct.PyDateTime_DateTime*, !dbg !6962
  %data31 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %34, i32 0, i32 3, !dbg !6963
  %arraydecay32 = getelementptr inbounds [10 x i8], [10 x i8]* %data31, i32 0, i32 0, !dbg !6964
  %call33 = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay32, i64 10) #7, !dbg !6965
  store i32 %call33, i32* %diff, align 4, !dbg !6966, !tbaa !3325
  %35 = load i32, i32* %diff, align 4, !dbg !6967, !tbaa !3325
  %36 = load i32, i32* %op.addr, align 4, !dbg !6968, !tbaa !3325
  %call34 = call %struct._object* @diff_to_bool(i32 %35, i32 %36), !dbg !6969
  store %struct._object* %call34, %struct._object** %retval, !dbg !6970
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !6970

if.end.35:                                        ; preds = %cond.end.26
  %37 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6971, !tbaa !2563
  %call36 = call %struct._object* @datetime_utcoffset(%struct._object* %37, %struct._object* null), !dbg !6972
  store %struct._object* %call36, %struct._object** %offset1, align 8, !dbg !6973, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !6974, !tbaa !2563
  %cmp37 = icmp eq %struct._object* %38, null, !dbg !6976
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !6977

if.then.39:                                       ; preds = %if.end.35
  store %struct._object* null, %struct._object** %retval, !dbg !6978
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !6978

if.end.40:                                        ; preds = %if.end.35
  %39 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !6979, !tbaa !2563
  %call41 = call %struct._object* @datetime_utcoffset(%struct._object* %39, %struct._object* null), !dbg !6980
  store %struct._object* %call41, %struct._object** %offset2, align 8, !dbg !6981, !tbaa !2563
  %40 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !6982, !tbaa !2563
  %cmp42 = icmp eq %struct._object* %40, null, !dbg !6984
  br i1 %cmp42, label %if.then.44, label %if.end.45, !dbg !6985

if.then.44:                                       ; preds = %if.end.40
  br label %done, !dbg !6986

if.end.45:                                        ; preds = %if.end.40
  %41 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !6987, !tbaa !2563
  %42 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !6988, !tbaa !2563
  %cmp46 = icmp eq %struct._object* %41, %42, !dbg !6989
  br i1 %cmp46, label %if.then.67, label %lor.lhs.false.48, !dbg !6990

lor.lhs.false.48:                                 ; preds = %if.end.45
  %43 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !6991, !tbaa !2563
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !6992
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !6992, !tbaa !2640
  %cmp50 = icmp eq %struct._typeobject* %44, @PyDateTime_DeltaType, !dbg !6993
  br i1 %cmp50, label %land.lhs.true, label %lor.lhs.false.52, !dbg !6994

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.48
  %45 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !6995, !tbaa !2563
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !6997
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !6997, !tbaa !2640
  %call54 = call i32 @PyType_IsSubtype(%struct._typeobject* %46, %struct._typeobject* @PyDateTime_DeltaType), !dbg !6998
  %tobool55 = icmp ne i32 %call54, 0, !dbg !6998
  br i1 %tobool55, label %land.lhs.true, label %if.else, !dbg !6999

land.lhs.true:                                    ; preds = %lor.lhs.false.52, %lor.lhs.false.48
  %47 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7000, !tbaa !2563
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !7003
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !7003, !tbaa !2640
  %cmp57 = icmp eq %struct._typeobject* %48, @PyDateTime_DeltaType, !dbg !7004
  br i1 %cmp57, label %land.lhs.true.63, label %lor.lhs.false.59, !dbg !7005

lor.lhs.false.59:                                 ; preds = %land.lhs.true
  %49 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7006, !tbaa !2563
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !7008
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !7008, !tbaa !2640
  %call61 = call i32 @PyType_IsSubtype(%struct._typeobject* %50, %struct._typeobject* @PyDateTime_DeltaType), !dbg !7009
  %tobool62 = icmp ne i32 %call61, 0, !dbg !7009
  br i1 %tobool62, label %land.lhs.true.63, label %if.else, !dbg !7010

land.lhs.true.63:                                 ; preds = %lor.lhs.false.59, %land.lhs.true
  %51 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7011, !tbaa !2563
  %52 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7012, !tbaa !2563
  %call64 = call i32 @delta_cmp(%struct._object* %51, %struct._object* %52), !dbg !7013
  %cmp65 = icmp eq i32 %call64, 0, !dbg !7014
  br i1 %cmp65, label %if.then.67, label %if.else, !dbg !7015

if.then.67:                                       ; preds = %land.lhs.true.63, %if.end.45
  %53 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7016, !tbaa !2563
  %54 = bitcast %struct._object* %53 to %struct.PyDateTime_DateTime*, !dbg !7018
  %data68 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %54, i32 0, i32 3, !dbg !7019
  %arraydecay69 = getelementptr inbounds [10 x i8], [10 x i8]* %data68, i32 0, i32 0, !dbg !7020
  %55 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !7021, !tbaa !2563
  %56 = bitcast %struct._object* %55 to %struct.PyDateTime_DateTime*, !dbg !7022
  %data70 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %56, i32 0, i32 3, !dbg !7023
  %arraydecay71 = getelementptr inbounds [10 x i8], [10 x i8]* %data70, i32 0, i32 0, !dbg !7024
  %call72 = call i32 @memcmp(i8* %arraydecay69, i8* %arraydecay71, i64 10) #7, !dbg !7025
  store i32 %call72, i32* %diff, align 4, !dbg !7026, !tbaa !3325
  %57 = load i32, i32* %diff, align 4, !dbg !7027, !tbaa !3325
  %58 = load i32, i32* %op.addr, align 4, !dbg !7028, !tbaa !3325
  %call73 = call %struct._object* @diff_to_bool(i32 %57, i32 %58), !dbg !7029
  store %struct._object* %call73, %struct._object** %result, align 8, !dbg !7030, !tbaa !2563
  br label %if.end.112, !dbg !7031

if.else:                                          ; preds = %land.lhs.true.63, %lor.lhs.false.59, %lor.lhs.false.52
  %59 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7032, !tbaa !2563
  %cmp74 = icmp ne %struct._object* %59, @_Py_NoneStruct, !dbg !7033
  br i1 %cmp74, label %land.lhs.true.76, label %if.else.96, !dbg !7034

land.lhs.true.76:                                 ; preds = %if.else
  %60 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7035, !tbaa !2563
  %cmp77 = icmp ne %struct._object* %60, @_Py_NoneStruct, !dbg !7037
  br i1 %cmp77, label %if.then.79, label %if.else.96, !dbg !7038

if.then.79:                                       ; preds = %land.lhs.true.76
  %61 = bitcast %struct.PyDateTime_Delta** %delta to i8*, !dbg !7039
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !7039
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta, metadata !1160, metadata !2553), !dbg !7040
  %62 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7041, !tbaa !2563
  %63 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !7042, !tbaa !2563
  %call80 = call %struct._object* @datetime_subtract(%struct._object* %62, %struct._object* %63), !dbg !7043
  %64 = bitcast %struct._object* %call80 to %struct.PyDateTime_Delta*, !dbg !7044
  store %struct.PyDateTime_Delta* %64, %struct.PyDateTime_Delta** %delta, align 8, !dbg !7045, !tbaa !2563
  %65 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !7046, !tbaa !2563
  %cmp81 = icmp eq %struct.PyDateTime_Delta* %65, null, !dbg !7048
  br i1 %cmp81, label %if.then.83, label %if.end.84, !dbg !7049

if.then.83:                                       ; preds = %if.then.79
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7050

if.end.84:                                        ; preds = %if.then.79
  %66 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !7051, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %66, i32 0, i32 2, !dbg !7052
  %67 = load i32, i32* %days, align 4, !dbg !7052, !tbaa !3363
  store i32 %67, i32* %diff, align 4, !dbg !7053, !tbaa !3325
  %68 = load i32, i32* %diff, align 4, !dbg !7054, !tbaa !3325
  %cmp85 = icmp eq i32 %68, 0, !dbg !7056
  br i1 %cmp85, label %if.then.87, label %if.end.88, !dbg !7057

if.then.87:                                       ; preds = %if.end.84
  %69 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !7058, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %69, i32 0, i32 3, !dbg !7059
  %70 = load i32, i32* %seconds, align 4, !dbg !7059, !tbaa !3368
  %71 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !7060, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %71, i32 0, i32 4, !dbg !7061
  %72 = load i32, i32* %microseconds, align 4, !dbg !7061, !tbaa !3373
  %or = or i32 %70, %72, !dbg !7062
  store i32 %or, i32* %diff, align 4, !dbg !7063, !tbaa !3325
  br label %if.end.88, !dbg !7064

if.end.88:                                        ; preds = %if.then.87, %if.end.84
  br label %do.body, !dbg !7065

do.body:                                          ; preds = %if.end.88
  %73 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7066
  call void @llvm.lifetime.start(i64 8, i8* %73) #1, !dbg !7066
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1164, metadata !2553), !dbg !7068
  %74 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !7069, !tbaa !2563
  %75 = bitcast %struct.PyDateTime_Delta* %74 to %struct._object*, !dbg !7070
  store %struct._object* %75, %struct._object** %_py_decref_tmp, align 8, !dbg !7068, !tbaa !2563
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7071, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !7073
  %77 = load i64, i64* %ob_refcnt, align 8, !dbg !7074, !tbaa !2632
  %dec = add i64 %77, -1, !dbg !7074
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7074, !tbaa !2632
  %cmp89 = icmp ne i64 %dec, 0, !dbg !7075
  br i1 %cmp89, label %if.then.91, label %if.else.92, !dbg !7076

if.then.91:                                       ; preds = %do.body
  br label %if.end.94, !dbg !7077

if.else.92:                                       ; preds = %do.body
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7079, !tbaa !2563
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !7081
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !7081, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !7082
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7082, !tbaa !2642
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7083, !tbaa !2563
  call void %80(%struct._object* %81), !dbg !7084
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.92, %if.then.91
  %82 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7085
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !7085
  br label %do.cond, !dbg !7087

do.cond:                                          ; preds = %if.end.94
  br label %do.end, !dbg !7088

do.end:                                           ; preds = %do.cond
  %83 = load i32, i32* %diff, align 4, !dbg !7090, !tbaa !3325
  %84 = load i32, i32* %op.addr, align 4, !dbg !7091, !tbaa !3325
  %call95 = call %struct._object* @diff_to_bool(i32 %83, i32 %84), !dbg !7092
  store %struct._object* %call95, %struct._object** %result, align 8, !dbg !7093, !tbaa !2563
  store i32 0, i32* %cleanup.dest.slot, !dbg !7094
  br label %cleanup, !dbg !7094

cleanup:                                          ; preds = %if.then.83, %do.end
  %85 = bitcast %struct.PyDateTime_Delta** %delta to i8*, !dbg !7095
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !7095
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.146 [
    i32 0, label %cleanup.cont
    i32 2, label %done
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.111, !dbg !7096

if.else.96:                                       ; preds = %land.lhs.true.76, %if.else
  %86 = load i32, i32* %op.addr, align 4, !dbg !7097, !tbaa !3325
  %cmp97 = icmp eq i32 %86, 2, !dbg !7099
  br i1 %cmp97, label %if.then.99, label %if.else.102, !dbg !7100

if.then.99:                                       ; preds = %if.else.96
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %result, align 8, !dbg !7101, !tbaa !2563
  %87 = load %struct._object*, %struct._object** %result, align 8, !dbg !7103, !tbaa !2563
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !7104
  %88 = load i64, i64* %ob_refcnt100, align 8, !dbg !7105, !tbaa !2632
  %inc101 = add i64 %88, 1, !dbg !7105
  store i64 %inc101, i64* %ob_refcnt100, align 8, !dbg !7105, !tbaa !2632
  br label %if.end.110, !dbg !7106

if.else.102:                                      ; preds = %if.else.96
  %89 = load i32, i32* %op.addr, align 4, !dbg !7107, !tbaa !3325
  %cmp103 = icmp eq i32 %89, 3, !dbg !7109
  br i1 %cmp103, label %if.then.105, label %if.else.108, !dbg !7110

if.then.105:                                      ; preds = %if.else.102
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %result, align 8, !dbg !7111, !tbaa !2563
  %90 = load %struct._object*, %struct._object** %result, align 8, !dbg !7113, !tbaa !2563
  %ob_refcnt106 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 0, !dbg !7114
  %91 = load i64, i64* %ob_refcnt106, align 8, !dbg !7115, !tbaa !2632
  %inc107 = add i64 %91, 1, !dbg !7115
  store i64 %inc107, i64* %ob_refcnt106, align 8, !dbg !7115, !tbaa !2632
  br label %if.end.109, !dbg !7116

if.else.108:                                      ; preds = %if.else.102
  %92 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7117, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %92, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.111, i32 0, i32 0)), !dbg !7119
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.108, %if.then.105
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.99
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %cleanup.cont
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111, %if.then.67
  br label %done, !dbg !7120

done:                                             ; preds = %if.end.112, %cleanup, %if.then.44
  br label %do.body.113, !dbg !7121

do.body.113:                                      ; preds = %done
  %93 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !7122
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !7122
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !1166, metadata !2553), !dbg !7124
  %94 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7125, !tbaa !2563
  store %struct._object* %94, %struct._object** %_py_decref_tmp114, align 8, !dbg !7124, !tbaa !2563
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !7126, !tbaa !2563
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !7128
  %96 = load i64, i64* %ob_refcnt115, align 8, !dbg !7129, !tbaa !2632
  %dec116 = add i64 %96, -1, !dbg !7129
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !7129, !tbaa !2632
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !7130
  br i1 %cmp117, label %if.then.119, label %if.else.120, !dbg !7131

if.then.119:                                      ; preds = %do.body.113
  br label %if.end.123, !dbg !7132

if.else.120:                                      ; preds = %do.body.113
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !7134, !tbaa !2563
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !7136
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8, !dbg !7136, !tbaa !2640
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !7137
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8, !dbg !7137, !tbaa !2642
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !7138, !tbaa !2563
  call void %99(%struct._object* %100), !dbg !7139
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  %101 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !7140
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !7140
  br label %do.cond.124, !dbg !7142

do.cond.124:                                      ; preds = %if.end.123
  br label %do.end.125, !dbg !7143

do.end.125:                                       ; preds = %do.cond.124
  br label %do.body.126, !dbg !7145

do.body.126:                                      ; preds = %do.end.125
  %102 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7146
  call void @llvm.lifetime.start(i64 8, i8* %102) #1, !dbg !7146
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1168, metadata !2553), !dbg !7148
  %103 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7149, !tbaa !2563
  store %struct._object* %103, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7148, !tbaa !2563
  %104 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7150, !tbaa !2563
  %cmp127 = icmp ne %struct._object* %104, null, !dbg !7151
  br i1 %cmp127, label %if.then.129, label %if.end.143, !dbg !7152

if.then.129:                                      ; preds = %do.body.126
  br label %do.body.130, !dbg !7153

do.body.130:                                      ; preds = %if.then.129
  %105 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !7155
  call void @llvm.lifetime.start(i64 8, i8* %105) #1, !dbg !7155
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp131, metadata !1170, metadata !2553), !dbg !7157
  %106 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7158, !tbaa !2563
  store %struct._object* %106, %struct._object** %_py_decref_tmp131, align 8, !dbg !7157, !tbaa !2563
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !7159, !tbaa !2563
  %ob_refcnt132 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !7161
  %108 = load i64, i64* %ob_refcnt132, align 8, !dbg !7162, !tbaa !2632
  %dec133 = add i64 %108, -1, !dbg !7162
  store i64 %dec133, i64* %ob_refcnt132, align 8, !dbg !7162, !tbaa !2632
  %cmp134 = icmp ne i64 %dec133, 0, !dbg !7163
  br i1 %cmp134, label %if.then.136, label %if.else.137, !dbg !7164

if.then.136:                                      ; preds = %do.body.130
  br label %if.end.140, !dbg !7165

if.else.137:                                      ; preds = %do.body.130
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !7167, !tbaa !2563
  %ob_type138 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 1, !dbg !7169
  %110 = load %struct._typeobject*, %struct._typeobject** %ob_type138, align 8, !dbg !7169, !tbaa !2640
  %tp_dealloc139 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %110, i32 0, i32 4, !dbg !7170
  %111 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc139, align 8, !dbg !7170, !tbaa !2642
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !7171, !tbaa !2563
  call void %111(%struct._object* %112), !dbg !7172
  br label %if.end.140

if.end.140:                                       ; preds = %if.else.137, %if.then.136
  %113 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !7173
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !7173
  br label %do.cond.141, !dbg !7175

do.cond.141:                                      ; preds = %if.end.140
  br label %do.end.142, !dbg !7176

do.end.142:                                       ; preds = %do.cond.141
  br label %if.end.143, !dbg !7178

if.end.143:                                       ; preds = %do.end.142, %do.body.126
  %114 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7180
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !7180
  br label %do.cond.144, !dbg !7183

do.cond.144:                                      ; preds = %if.end.143
  br label %do.end.145, !dbg !7184

do.end.145:                                       ; preds = %do.cond.144
  %115 = load %struct._object*, %struct._object** %result, align 8, !dbg !7186, !tbaa !2563
  store %struct._object* %115, %struct._object** %retval, !dbg !7187
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.146, !dbg !7187

cleanup.146:                                      ; preds = %do.end.145, %cleanup, %if.then.39, %if.then.30, %if.end.16, %if.end.14, %if.then.12, %if.then.10
  %116 = bitcast i32* %diff to i8*, !dbg !7188
  call void @llvm.lifetime.end(i64 4, i8* %116) #1, !dbg !7188
  %117 = bitcast %struct._object** %offset2 to i8*, !dbg !7188
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !7188
  %118 = bitcast %struct._object** %offset1 to i8*, !dbg !7188
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !7188
  %119 = bitcast %struct._object** %result to i8*, !dbg !7188
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !7188
  %120 = load %struct._object*, %struct._object** %retval, !dbg !7188
  ret %struct._object* %120, !dbg !7188
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_alloc(%struct._typeobject* %type, i64 %aware) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %aware.addr = alloca i64, align 8
  %self = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1536, metadata !2553), !dbg !7189
  store i64 %aware, i64* %aware.addr, align 8, !tbaa !5078
  call void @llvm.dbg.declare(metadata i64* %aware.addr, metadata !1537, metadata !2553), !dbg !7190
  %0 = bitcast %struct._object** %self to i8*, !dbg !7191
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7191
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !1538, metadata !2553), !dbg !7192
  %1 = load i64, i64* %aware.addr, align 8, !dbg !7193, !tbaa !5078
  %tobool = icmp ne i64 %1, 0, !dbg !7193
  %cond = select i1 %tobool, i64 48, i64 40, !dbg !7193
  %call = call i8* @PyObject_Malloc(i64 %cond), !dbg !7194
  %2 = bitcast i8* %call to %struct._object*, !dbg !7195
  store %struct._object* %2, %struct._object** %self, align 8, !dbg !7196, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %self, align 8, !dbg !7197, !tbaa !2563
  %cmp = icmp eq %struct._object* %3, null, !dbg !7199
  br i1 %cmp, label %if.then, label %if.end, !dbg !7200

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @PyErr_NoMemory(), !dbg !7201
  store %struct._object* %call1, %struct._object** %retval, !dbg !7202
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7202

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7203, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %self, align 8, !dbg !7204, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !7205
  store %struct._typeobject* %4, %struct._typeobject** %ob_type, align 8, !dbg !7206, !tbaa !2640
  %6 = load %struct._object*, %struct._object** %self, align 8, !dbg !7207, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !7208
  store i64 1, i64* %ob_refcnt, align 8, !dbg !7209, !tbaa !2632
  %7 = load %struct._object*, %struct._object** %self, align 8, !dbg !7210, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %self, align 8, !dbg !7211, !tbaa !2563
  store %struct._object* %8, %struct._object** %retval, !dbg !7212
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7212

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast %struct._object** %self to i8*, !dbg !7213
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !7213
  %10 = load %struct._object*, %struct._object** %retval, !dbg !7213
  ret %struct._object* %10, !dbg !7213
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %self = alloca %struct._object*, align 8
  %state = alloca %struct._object*, align 8
  %year = alloca i32, align 4
  %month = alloca i32, align 4
  %day = alloca i32, align 4
  %hour = alloca i32, align 4
  %minute = alloca i32, align 4
  %second = alloca i32, align 4
  %usecond = alloca i32, align 4
  %tzinfo = alloca %struct._object*, align 8
  %me = alloca %struct.PyDateTime_DateTime*, align 8
  %aware = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %pdata = alloca i8*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1541, metadata !2553), !dbg !7214
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1542, metadata !2553), !dbg !7215
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1543, metadata !2553), !dbg !7216
  %0 = bitcast %struct._object** %self to i8*, !dbg !7217
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7217
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !1544, metadata !2553), !dbg !7218
  store %struct._object* null, %struct._object** %self, align 8, !dbg !7218, !tbaa !2563
  %1 = bitcast %struct._object** %state to i8*, !dbg !7219
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7219
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !1545, metadata !2553), !dbg !7220
  %2 = bitcast i32* %year to i8*, !dbg !7221
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !7221
  call void @llvm.dbg.declare(metadata i32* %year, metadata !1546, metadata !2553), !dbg !7222
  %3 = bitcast i32* %month to i8*, !dbg !7223
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !7223
  call void @llvm.dbg.declare(metadata i32* %month, metadata !1547, metadata !2553), !dbg !7224
  %4 = bitcast i32* %day to i8*, !dbg !7225
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !7225
  call void @llvm.dbg.declare(metadata i32* %day, metadata !1548, metadata !2553), !dbg !7226
  %5 = bitcast i32* %hour to i8*, !dbg !7227
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !7227
  call void @llvm.dbg.declare(metadata i32* %hour, metadata !1549, metadata !2553), !dbg !7228
  store i32 0, i32* %hour, align 4, !dbg !7228, !tbaa !3325
  %6 = bitcast i32* %minute to i8*, !dbg !7229
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !7229
  call void @llvm.dbg.declare(metadata i32* %minute, metadata !1550, metadata !2553), !dbg !7230
  store i32 0, i32* %minute, align 4, !dbg !7230, !tbaa !3325
  %7 = bitcast i32* %second to i8*, !dbg !7231
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !7231
  call void @llvm.dbg.declare(metadata i32* %second, metadata !1551, metadata !2553), !dbg !7232
  store i32 0, i32* %second, align 4, !dbg !7232, !tbaa !3325
  %8 = bitcast i32* %usecond to i8*, !dbg !7233
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !7233
  call void @llvm.dbg.declare(metadata i32* %usecond, metadata !1552, metadata !2553), !dbg !7234
  store i32 0, i32* %usecond, align 4, !dbg !7234, !tbaa !3325
  %9 = bitcast %struct._object** %tzinfo to i8*, !dbg !7235
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !7235
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1553, metadata !2553), !dbg !7236
  store %struct._object* @_Py_NoneStruct, %struct._object** %tzinfo, align 8, !dbg !7236, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7237, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !7238
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !7239
  %12 = load i64, i64* %ob_size, align 8, !dbg !7239, !tbaa !3741
  %cmp = icmp sge i64 %12, 1, !dbg !7240
  br i1 %cmp, label %land.lhs.true, label %if.end.37, !dbg !7241

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7242, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyVarObject*, !dbg !7243
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1, !dbg !7244
  %15 = load i64, i64* %ob_size1, align 8, !dbg !7244, !tbaa !3741
  %cmp2 = icmp sle i64 %15, 2, !dbg !7245
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.37, !dbg !7246

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %16 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7247, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyTupleObject*, !dbg !7248
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %17, i32 0, i32 1, !dbg !7249
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !7250
  %18 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7250, !tbaa !2563
  store %struct._object* %18, %struct._object** %state, align 8, !dbg !7251, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7252
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7252, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19, !dbg !7253
  %20 = load i64, i64* %tp_flags, align 8, !dbg !7253, !tbaa !3751
  %and = and i64 %20, 134217728, !dbg !7254
  %cmp4 = icmp ne i64 %and, 0, !dbg !7255
  br i1 %cmp4, label %land.lhs.true.5, label %if.end.37, !dbg !7256

land.lhs.true.5:                                  ; preds = %land.lhs.true.3
  %21 = load %struct._object*, %struct._object** %state, align 8, !dbg !7257, !tbaa !2563
  %22 = bitcast %struct._object* %21 to %struct.PyVarObject*, !dbg !7258
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1, !dbg !7259
  %23 = load i64, i64* %ob_size6, align 8, !dbg !7259, !tbaa !3741
  %cmp7 = icmp eq i64 %23, 10, !dbg !7260
  br i1 %cmp7, label %land.lhs.true.8, label %if.end.37, !dbg !7261

land.lhs.true.8:                                  ; preds = %land.lhs.true.5
  %24 = load %struct._object*, %struct._object** %state, align 8, !dbg !7262, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyBytesObject*, !dbg !7263
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %25, i32 0, i32 2, !dbg !7264
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !7265
  %arrayidx9 = getelementptr i8, i8* %arraydecay, i64 2, !dbg !7266
  %26 = load i8, i8* %arrayidx9, align 1, !dbg !7266, !tbaa !3415
  %conv = sext i8 %26 to i32, !dbg !7267
  %sub = sub i32 %conv, 1, !dbg !7268
  %cmp10 = icmp ult i32 %sub, 12, !dbg !7269
  br i1 %cmp10, label %if.then, label %if.end.37, !dbg !7270

if.then:                                          ; preds = %land.lhs.true.8
  %27 = bitcast %struct.PyDateTime_DateTime** %me to i8*, !dbg !7271
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %me, metadata !1554, metadata !2553), !dbg !7272
  call void @llvm.lifetime.start(i64 1, i8* %aware) #1, !dbg !7273
  call void @llvm.dbg.declare(metadata i8* %aware, metadata !1557, metadata !2553), !dbg !7274
  %28 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7275, !tbaa !2563
  %29 = bitcast %struct._object* %28 to %struct.PyVarObject*, !dbg !7277
  %ob_size12 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %29, i32 0, i32 1, !dbg !7278
  %30 = load i64, i64* %ob_size12, align 8, !dbg !7278, !tbaa !3741
  %cmp13 = icmp eq i64 %30, 2, !dbg !7279
  br i1 %cmp13, label %if.then.15, label %if.end.21, !dbg !7280

if.then.15:                                       ; preds = %if.then
  %31 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7281, !tbaa !2563
  %32 = bitcast %struct._object* %31 to %struct.PyTupleObject*, !dbg !7283
  %ob_item16 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %32, i32 0, i32 1, !dbg !7284
  %arrayidx17 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item16, i32 0, i64 1, !dbg !7285
  %33 = load %struct._object*, %struct._object** %arrayidx17, align 8, !dbg !7285, !tbaa !2563
  store %struct._object* %33, %struct._object** %tzinfo, align 8, !dbg !7286, !tbaa !2563
  %34 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7287, !tbaa !2563
  %call = call i32 @check_tzinfo_subclass(%struct._object* %34), !dbg !7289
  %cmp18 = icmp slt i32 %call, 0, !dbg !7290
  br i1 %cmp18, label %if.then.20, label %if.end, !dbg !7291

if.then.20:                                       ; preds = %if.then.15
  %35 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7292, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %35, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.167, i32 0, i32 0)), !dbg !7294
  store %struct._object* null, %struct._object** %retval, !dbg !7295
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7295

if.end:                                           ; preds = %if.then.15
  br label %if.end.21, !dbg !7296

if.end.21:                                        ; preds = %if.end, %if.then
  %36 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7297, !tbaa !2563
  %cmp22 = icmp ne %struct._object* %36, @_Py_NoneStruct, !dbg !7298
  %conv23 = zext i1 %cmp22 to i32, !dbg !7298
  %conv24 = trunc i32 %conv23 to i8, !dbg !7299
  store i8 %conv24, i8* %aware, align 1, !dbg !7300, !tbaa !3415
  %37 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7301, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 36, !dbg !7302
  %38 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !7302, !tbaa !3345
  %39 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7303, !tbaa !2563
  %40 = load i8, i8* %aware, align 1, !dbg !7304, !tbaa !3415
  %conv25 = sext i8 %40 to i64, !dbg !7304
  %call26 = call %struct._object* %38(%struct._typeobject* %39, i64 %conv25), !dbg !7301
  %41 = bitcast %struct._object* %call26 to %struct.PyDateTime_DateTime*, !dbg !7305
  store %struct.PyDateTime_DateTime* %41, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7306, !tbaa !2563
  %42 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7307, !tbaa !2563
  %cmp27 = icmp ne %struct.PyDateTime_DateTime* %42, null, !dbg !7308
  br i1 %cmp27, label %if.then.29, label %if.end.35, !dbg !7309

if.then.29:                                       ; preds = %if.end.21
  %43 = bitcast i8** %pdata to i8*, !dbg !7310
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !7310
  call void @llvm.dbg.declare(metadata i8** %pdata, metadata !1558, metadata !2553), !dbg !7311
  %44 = load %struct._object*, %struct._object** %state, align 8, !dbg !7312, !tbaa !2563
  %45 = bitcast %struct._object* %44 to %struct.PyBytesObject*, !dbg !7313
  %ob_sval30 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %45, i32 0, i32 2, !dbg !7314
  %arraydecay31 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval30, i32 0, i32 0, !dbg !7315
  store i8* %arraydecay31, i8** %pdata, align 8, !dbg !7311, !tbaa !2563
  %46 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7316, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %46, i32 0, i32 3, !dbg !7317
  %47 = bitcast [10 x i8]* %data to i8*, !dbg !7318
  %48 = load i8*, i8** %pdata, align 8, !dbg !7319, !tbaa !2563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 10, i32 1, i1 false), !dbg !7318
  %49 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7320, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %49, i32 0, i32 1, !dbg !7321
  store i64 -1, i64* %hashcode, align 8, !dbg !7322, !tbaa !6642
  %50 = load i8, i8* %aware, align 1, !dbg !7323, !tbaa !3415
  %51 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7324, !tbaa !2563
  %hastzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %51, i32 0, i32 2, !dbg !7325
  store i8 %50, i8* %hastzinfo, align 1, !dbg !7326, !tbaa !3526
  %52 = load i8, i8* %aware, align 1, !dbg !7327, !tbaa !3415
  %tobool = icmp ne i8 %52, 0, !dbg !7327
  br i1 %tobool, label %if.then.32, label %if.end.34, !dbg !7329

if.then.32:                                       ; preds = %if.then.29
  %53 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7330, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !7332
  %54 = load i64, i64* %ob_refcnt, align 8, !dbg !7333, !tbaa !2632
  %inc = add i64 %54, 1, !dbg !7333
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7333, !tbaa !2632
  %55 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7334, !tbaa !2563
  %56 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7335, !tbaa !2563
  %tzinfo33 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %56, i32 0, i32 4, !dbg !7336
  store %struct._object* %55, %struct._object** %tzinfo33, align 8, !dbg !7337, !tbaa !3586
  br label %if.end.34, !dbg !7338

if.end.34:                                        ; preds = %if.then.32, %if.then.29
  %57 = bitcast i8** %pdata to i8*, !dbg !7339
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !7339
  br label %if.end.35, !dbg !7340

if.end.35:                                        ; preds = %if.end.34, %if.end.21
  %58 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %me, align 8, !dbg !7341, !tbaa !2563
  %59 = bitcast %struct.PyDateTime_DateTime* %58 to %struct._object*, !dbg !7342
  store %struct._object* %59, %struct._object** %retval, !dbg !7343
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7343

cleanup:                                          ; preds = %if.end.35, %if.then.20
  call void @llvm.lifetime.end(i64 1, i8* %aware) #1, !dbg !7344
  %60 = bitcast %struct.PyDateTime_DateTime** %me to i8*, !dbg !7344
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !7344
  br label %cleanup.58

if.end.37:                                        ; preds = %land.lhs.true.8, %land.lhs.true.5, %land.lhs.true.3, %land.lhs.true, %entry
  %61 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7345, !tbaa !2563
  %62 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !7347, !tbaa !2563
  %call38 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %61, %struct._object* %62, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i32 0, i32 0), i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @datetime_kws, i32 0, i32 0), i32* %year, i32* %month, i32* %day, i32* %hour, i32* %minute, i32* %second, i32* %usecond, %struct._object** %tzinfo), !dbg !7348
  %tobool39 = icmp ne i32 %call38, 0, !dbg !7348
  br i1 %tobool39, label %if.then.40, label %if.end.57, !dbg !7349

if.then.40:                                       ; preds = %if.end.37
  %63 = load i32, i32* %year, align 4, !dbg !7350, !tbaa !3325
  %64 = load i32, i32* %month, align 4, !dbg !7353, !tbaa !3325
  %65 = load i32, i32* %day, align 4, !dbg !7354, !tbaa !3325
  %call41 = call i32 @check_date_args(i32 %63, i32 %64, i32 %65), !dbg !7355
  %cmp42 = icmp slt i32 %call41, 0, !dbg !7356
  br i1 %cmp42, label %if.then.44, label %if.end.45, !dbg !7357

if.then.44:                                       ; preds = %if.then.40
  store %struct._object* null, %struct._object** %retval, !dbg !7358
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58, !dbg !7358

if.end.45:                                        ; preds = %if.then.40
  %66 = load i32, i32* %hour, align 4, !dbg !7359, !tbaa !3325
  %67 = load i32, i32* %minute, align 4, !dbg !7361, !tbaa !3325
  %68 = load i32, i32* %second, align 4, !dbg !7362, !tbaa !3325
  %69 = load i32, i32* %usecond, align 4, !dbg !7363, !tbaa !3325
  %call46 = call i32 @check_time_args(i32 %66, i32 %67, i32 %68, i32 %69), !dbg !7364
  %cmp47 = icmp slt i32 %call46, 0, !dbg !7365
  br i1 %cmp47, label %if.then.49, label %if.end.50, !dbg !7366

if.then.49:                                       ; preds = %if.end.45
  store %struct._object* null, %struct._object** %retval, !dbg !7367
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58, !dbg !7367

if.end.50:                                        ; preds = %if.end.45
  %70 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7368, !tbaa !2563
  %call51 = call i32 @check_tzinfo_subclass(%struct._object* %70), !dbg !7370
  %cmp52 = icmp slt i32 %call51, 0, !dbg !7371
  br i1 %cmp52, label %if.then.54, label %if.end.55, !dbg !7372

if.then.54:                                       ; preds = %if.end.50
  store %struct._object* null, %struct._object** %retval, !dbg !7373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58, !dbg !7373

if.end.55:                                        ; preds = %if.end.50
  %71 = load i32, i32* %year, align 4, !dbg !7374, !tbaa !3325
  %72 = load i32, i32* %month, align 4, !dbg !7375, !tbaa !3325
  %73 = load i32, i32* %day, align 4, !dbg !7376, !tbaa !3325
  %74 = load i32, i32* %hour, align 4, !dbg !7377, !tbaa !3325
  %75 = load i32, i32* %minute, align 4, !dbg !7378, !tbaa !3325
  %76 = load i32, i32* %second, align 4, !dbg !7379, !tbaa !3325
  %77 = load i32, i32* %usecond, align 4, !dbg !7380, !tbaa !3325
  %78 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7381, !tbaa !2563
  %79 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7382, !tbaa !2563
  %call56 = call %struct._object* @new_datetime_ex(i32 %71, i32 %72, i32 %73, i32 %74, i32 %75, i32 %76, i32 %77, %struct._object* %78, %struct._typeobject* %79), !dbg !7383
  store %struct._object* %call56, %struct._object** %self, align 8, !dbg !7384, !tbaa !2563
  br label %if.end.57, !dbg !7385

if.end.57:                                        ; preds = %if.end.55, %if.end.37
  %80 = load %struct._object*, %struct._object** %self, align 8, !dbg !7386, !tbaa !2563
  store %struct._object* %80, %struct._object** %retval, !dbg !7387
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58, !dbg !7387

cleanup.58:                                       ; preds = %if.end.57, %if.then.54, %if.then.49, %if.then.44, %cleanup
  %81 = bitcast %struct._object** %tzinfo to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !7388
  %82 = bitcast i32* %usecond to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %82) #1, !dbg !7388
  %83 = bitcast i32* %second to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %83) #1, !dbg !7388
  %84 = bitcast i32* %minute to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %84) #1, !dbg !7388
  %85 = bitcast i32* %hour to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %85) #1, !dbg !7388
  %86 = bitcast i32* %day to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %86) #1, !dbg !7388
  %87 = bitcast i32* %month to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %87) #1, !dbg !7388
  %88 = bitcast i32* %year to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 4, i8* %88) #1, !dbg !7388
  %89 = bitcast %struct._object** %state to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !7388
  %90 = bitcast %struct._object** %self to i8*, !dbg !7388
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !7388
  %91 = load %struct._object*, %struct._object** %retval, !dbg !7388
  ret %struct._object* %91, !dbg !7388
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @append_keyword_tzinfo(%struct._object* %repr, %struct._object* %tzinfo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %repr.addr = alloca %struct._object*, align 8
  %tzinfo.addr = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  store %struct._object* %repr, %struct._object** %repr.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %repr.addr, metadata !1007, metadata !2553), !dbg !7389
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !1008, metadata !2553), !dbg !7390
  %0 = bitcast %struct._object** %temp to i8*, !dbg !7391
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7391
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1009, metadata !2553), !dbg !7392
  %1 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !7393, !tbaa !2563
  %cmp = icmp eq %struct._object* %1, @_Py_NoneStruct, !dbg !7395
  br i1 %cmp, label %if.then, label %if.end, !dbg !7396

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %repr.addr, align 8, !dbg !7397, !tbaa !2563
  store %struct._object* %2, %struct._object** %retval, !dbg !7398
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7398

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %repr.addr, align 8, !dbg !7399, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %repr.addr, align 8, !dbg !7400, !tbaa !2563
  %5 = bitcast %struct._object* %4 to %struct.PyASCIIObject*, !dbg !7401
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %5, i32 0, i32 1, !dbg !7402
  %6 = load i64, i64* %length, align 8, !dbg !7402, !tbaa !7403
  %sub = sub i64 %6, 1, !dbg !7406
  %call = call %struct._object* @PyUnicode_Substring(%struct._object* %3, i64 0, i64 %sub), !dbg !7407
  store %struct._object* %call, %struct._object** %temp, align 8, !dbg !7408, !tbaa !2563
  br label %do.body, !dbg !7409

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7410
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !7410
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1010, metadata !2553), !dbg !7412
  %8 = load %struct._object*, %struct._object** %repr.addr, align 8, !dbg !7413, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !7412, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7414, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !7416
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !7417, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !7417
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7417, !tbaa !2632
  %cmp1 = icmp ne i64 %dec, 0, !dbg !7418
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !7419

if.then.2:                                        ; preds = %do.body
  br label %if.end.3, !dbg !7420

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7422, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !7424
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7424, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !7425
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7425, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7426, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !7427
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7428
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !7428
  br label %do.cond, !dbg !7430

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !7431

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %temp, align 8, !dbg !7433, !tbaa !2563
  %cmp4 = icmp eq %struct._object* %16, null, !dbg !7435
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !7436

if.then.5:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !7437
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7437

if.end.6:                                         ; preds = %do.end
  %17 = load %struct._object*, %struct._object** %temp, align 8, !dbg !7438, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !7439, !tbaa !2563
  %call7 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.107, i32 0, i32 0), %struct._object* %17, %struct._object* %18), !dbg !7440
  store %struct._object* %call7, %struct._object** %repr.addr, align 8, !dbg !7441, !tbaa !2563
  br label %do.body.8, !dbg !7442

do.body.8:                                        ; preds = %if.end.6
  %19 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !7443
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !7443
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp9, metadata !1012, metadata !2553), !dbg !7445
  %20 = load %struct._object*, %struct._object** %temp, align 8, !dbg !7446, !tbaa !2563
  store %struct._object* %20, %struct._object** %_py_decref_tmp9, align 8, !dbg !7445, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !7447, !tbaa !2563
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !7449
  %22 = load i64, i64* %ob_refcnt10, align 8, !dbg !7450, !tbaa !2632
  %dec11 = add i64 %22, -1, !dbg !7450
  store i64 %dec11, i64* %ob_refcnt10, align 8, !dbg !7450, !tbaa !2632
  %cmp12 = icmp ne i64 %dec11, 0, !dbg !7451
  br i1 %cmp12, label %if.then.13, label %if.else.14, !dbg !7452

if.then.13:                                       ; preds = %do.body.8
  br label %if.end.17, !dbg !7453

if.else.14:                                       ; preds = %do.body.8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !7455, !tbaa !2563
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !7457
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !7457, !tbaa !2640
  %tp_dealloc16 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !7458
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc16, align 8, !dbg !7458, !tbaa !2642
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !7459, !tbaa !2563
  call void %25(%struct._object* %26), !dbg !7460
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.14, %if.then.13
  %27 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !7461
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !7461
  br label %do.cond.18, !dbg !7462

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !7463

do.end.19:                                        ; preds = %do.cond.18
  %28 = load %struct._object*, %struct._object** %repr.addr, align 8, !dbg !7465, !tbaa !2563
  store %struct._object* %28, %struct._object** %retval, !dbg !7466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7466

cleanup:                                          ; preds = %do.end.19, %if.then.5, %if.then
  %29 = bitcast %struct._object** %temp to i8*, !dbg !7467
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !7467
  %30 = load %struct._object*, %struct._object** %retval, !dbg !7467
  ret %struct._object* %30, !dbg !7467
}

declare %struct._object* @PyUnicode_Substring(%struct._object*, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_add(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1016, metadata !2553), !dbg !7468
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1017, metadata !2553), !dbg !7469
  %0 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7470, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !7472
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7472, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %1, @PyDateTime_DateTimeType, !dbg !7473
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7474

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7475, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !7477
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !7477, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %3, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !7478
  %tobool = icmp ne i32 %call, 0, !dbg !7478
  br i1 %tobool, label %if.then, label %if.else, !dbg !7479

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7480, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !7483
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !7483, !tbaa !2640
  %cmp3 = icmp eq %struct._typeobject* %5, @PyDateTime_DeltaType, !dbg !7484
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4, !dbg !7485

lor.lhs.false.4:                                  ; preds = %if.then
  %6 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7486, !tbaa !2563
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !7488
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !7488, !tbaa !2640
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_DeltaType), !dbg !7489
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7489
  br i1 %tobool7, label %if.then.8, label %if.end, !dbg !7490

if.then.8:                                        ; preds = %lor.lhs.false.4, %if.then
  %8 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7491, !tbaa !2563
  %9 = bitcast %struct._object* %8 to %struct.PyDateTime_DateTime*, !dbg !7492
  %10 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7493, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyDateTime_Delta*, !dbg !7494
  %call9 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %9, %struct.PyDateTime_Delta* %11, i32 1), !dbg !7495
  store %struct._object* %call9, %struct._object** %retval, !dbg !7496
  br label %return, !dbg !7496

if.end:                                           ; preds = %lor.lhs.false.4
  br label %if.end.19, !dbg !7497

if.else:                                          ; preds = %lor.lhs.false
  %12 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7498, !tbaa !2563
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !7500
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !7500, !tbaa !2640
  %cmp11 = icmp eq %struct._typeobject* %13, @PyDateTime_DeltaType, !dbg !7501
  br i1 %cmp11, label %if.then.16, label %lor.lhs.false.12, !dbg !7502

lor.lhs.false.12:                                 ; preds = %if.else
  %14 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7503, !tbaa !2563
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !7505
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !7505, !tbaa !2640
  %call14 = call i32 @PyType_IsSubtype(%struct._typeobject* %15, %struct._typeobject* @PyDateTime_DeltaType), !dbg !7506
  %tobool15 = icmp ne i32 %call14, 0, !dbg !7506
  br i1 %tobool15, label %if.then.16, label %if.end.18, !dbg !7507

if.then.16:                                       ; preds = %lor.lhs.false.12, %if.else
  %16 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7508, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyDateTime_DateTime*, !dbg !7510
  %18 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7511, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Delta*, !dbg !7512
  %call17 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %17, %struct.PyDateTime_Delta* %19, i32 1), !dbg !7513
  store %struct._object* %call17, %struct._object** %retval, !dbg !7514
  br label %return, !dbg !7514

if.end.18:                                        ; preds = %lor.lhs.false.12
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.end
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !7515, !tbaa !2632
  %inc = add i64 %20, 1, !dbg !7515
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !7515, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !7516
  br label %return, !dbg !7516

return:                                           ; preds = %if.end.19, %if.then.16, %if.then.8
  %21 = load %struct._object*, %struct._object** %retval, !dbg !7517
  ret %struct._object* %21, !dbg !7517
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_subtract(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %offset1 = alloca %struct._object*, align 8
  %offset2 = alloca %struct._object*, align 8
  %offdiff = alloca %struct._object*, align 8
  %delta_d = alloca i32, align 4
  %delta_s = alloca i32, align 4
  %delta_us = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp85 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  %_py_decref_tmp126 = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp224 = alloca %struct._object*, align 8
  %_py_decref_tmp237 = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1057, metadata !2553), !dbg !7518
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1058, metadata !2553), !dbg !7519
  %0 = bitcast %struct._object** %result to i8*, !dbg !7520
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7520
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1059, metadata !2553), !dbg !7521
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %result, align 8, !dbg !7521, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7522, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !7523
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7523, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DateTimeType, !dbg !7524
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7525

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7526, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !7528
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !7528, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !7529
  %tobool = icmp ne i32 %call, 0, !dbg !7529
  br i1 %tobool, label %if.then, label %if.end.267, !dbg !7530

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7531, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !7532
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !7532, !tbaa !2640
  %cmp3 = icmp eq %struct._typeobject* %6, @PyDateTime_DateTimeType, !dbg !7533
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4, !dbg !7534

lor.lhs.false.4:                                  ; preds = %if.then
  %7 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7535, !tbaa !2563
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !7537
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !7537, !tbaa !2640
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !7538
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7538
  br i1 %tobool7, label %if.then.8, label %if.else.255, !dbg !7539

if.then.8:                                        ; preds = %lor.lhs.false.4, %if.then
  %9 = bitcast %struct._object** %offset1 to i8*, !dbg !7540
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !7540
  call void @llvm.dbg.declare(metadata %struct._object** %offset1, metadata !1060, metadata !2553), !dbg !7541
  %10 = bitcast %struct._object** %offset2 to i8*, !dbg !7540
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !7540
  call void @llvm.dbg.declare(metadata %struct._object** %offset2, metadata !1065, metadata !2553), !dbg !7542
  %11 = bitcast %struct._object** %offdiff to i8*, !dbg !7540
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !7540
  call void @llvm.dbg.declare(metadata %struct._object** %offdiff, metadata !1066, metadata !2553), !dbg !7543
  store %struct._object* null, %struct._object** %offdiff, align 8, !dbg !7543, !tbaa !2563
  %12 = bitcast i32* %delta_d to i8*, !dbg !7544
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !7544
  call void @llvm.dbg.declare(metadata i32* %delta_d, metadata !1067, metadata !2553), !dbg !7545
  %13 = bitcast i32* %delta_s to i8*, !dbg !7544
  call void @llvm.lifetime.start(i64 4, i8* %13) #1, !dbg !7544
  call void @llvm.dbg.declare(metadata i32* %delta_s, metadata !1068, metadata !2553), !dbg !7546
  %14 = bitcast i32* %delta_us to i8*, !dbg !7544
  call void @llvm.lifetime.start(i64 4, i8* %14) #1, !dbg !7544
  call void @llvm.dbg.declare(metadata i32* %delta_us, metadata !1069, metadata !2553), !dbg !7547
  %15 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7548, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct._PyDateTime_BaseTZInfo*, !dbg !7549
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %16, i32 0, i32 2, !dbg !7550
  %17 = load i8, i8* %hastzinfo, align 1, !dbg !7550, !tbaa !5575
  %conv = sext i8 %17 to i32, !dbg !7551
  %tobool9 = icmp ne i32 %conv, 0, !dbg !7551
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !7551

cond.true:                                        ; preds = %if.then.8
  %18 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7552, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_DateTime*, !dbg !7554
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %19, i32 0, i32 4, !dbg !7555
  %20 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !7555, !tbaa !3586
  br label %cond.end, !dbg !7551

cond.false:                                       ; preds = %if.then.8
  br label %cond.end, !dbg !7556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %20, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !7551
  %21 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7558, !tbaa !2563
  %22 = bitcast %struct._object* %21 to %struct._PyDateTime_BaseTZInfo*, !dbg !7561
  %hastzinfo10 = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %22, i32 0, i32 2, !dbg !7562
  %23 = load i8, i8* %hastzinfo10, align 1, !dbg !7562, !tbaa !5575
  %conv11 = sext i8 %23 to i32, !dbg !7563
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !7563
  br i1 %tobool12, label %cond.true.13, label %cond.false.15, !dbg !7563

cond.true.13:                                     ; preds = %cond.end
  %24 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7564, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyDateTime_DateTime*, !dbg !7566
  %tzinfo14 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %25, i32 0, i32 4, !dbg !7567
  %26 = load %struct._object*, %struct._object** %tzinfo14, align 8, !dbg !7567, !tbaa !3586
  br label %cond.end.16, !dbg !7563

cond.false.15:                                    ; preds = %cond.end
  br label %cond.end.16, !dbg !7568

cond.end.16:                                      ; preds = %cond.false.15, %cond.true.13
  %cond17 = phi %struct._object* [ %26, %cond.true.13 ], [ @_Py_NoneStruct, %cond.false.15 ], !dbg !7563
  %cmp18 = icmp eq %struct._object* %cond, %cond17, !dbg !7570
  br i1 %cmp18, label %if.then.20, label %if.else, !dbg !7573

if.then.20:                                       ; preds = %cond.end.16
  store %struct._object* @_Py_NoneStruct, %struct._object** %offset1, align 8, !dbg !7574, !tbaa !2563
  store %struct._object* @_Py_NoneStruct, %struct._object** %offset2, align 8, !dbg !7576, !tbaa !2563
  %27 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7577, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !7578
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !7579, !tbaa !2632
  %inc = add i64 %28, 1, !dbg !7579
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7579, !tbaa !2632
  %29 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7580, !tbaa !2563
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !7581
  %30 = load i64, i64* %ob_refcnt21, align 8, !dbg !7582, !tbaa !2632
  %inc22 = add i64 %30, 1, !dbg !7582
  store i64 %inc22, i64* %ob_refcnt21, align 8, !dbg !7582, !tbaa !2632
  br label %if.end.73, !dbg !7583

if.else:                                          ; preds = %cond.end.16
  %31 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7584, !tbaa !2563
  %call23 = call %struct._object* @datetime_utcoffset(%struct._object* %31, %struct._object* null), !dbg !7585
  store %struct._object* %call23, %struct._object** %offset1, align 8, !dbg !7586, !tbaa !2563
  %32 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7587, !tbaa !2563
  %cmp24 = icmp eq %struct._object* %32, null, !dbg !7589
  br i1 %cmp24, label %if.then.26, label %if.end, !dbg !7590

if.then.26:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !7591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7591

if.end:                                           ; preds = %if.else
  %33 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7592, !tbaa !2563
  %call27 = call %struct._object* @datetime_utcoffset(%struct._object* %33, %struct._object* null), !dbg !7593
  store %struct._object* %call27, %struct._object** %offset2, align 8, !dbg !7594, !tbaa !2563
  %34 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7595, !tbaa !2563
  %cmp28 = icmp eq %struct._object* %34, null, !dbg !7596
  br i1 %cmp28, label %if.then.30, label %if.end.38, !dbg !7597

if.then.30:                                       ; preds = %if.end
  br label %do.body, !dbg !7598

do.body:                                          ; preds = %if.then.30
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7599
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !7599
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1070, metadata !2553), !dbg !7601
  %36 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7602, !tbaa !2563
  store %struct._object* %36, %struct._object** %_py_decref_tmp, align 8, !dbg !7601, !tbaa !2563
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7603, !tbaa !2563
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !7605
  %38 = load i64, i64* %ob_refcnt31, align 8, !dbg !7606, !tbaa !2632
  %dec = add i64 %38, -1, !dbg !7606
  store i64 %dec, i64* %ob_refcnt31, align 8, !dbg !7606, !tbaa !2632
  %cmp32 = icmp ne i64 %dec, 0, !dbg !7607
  br i1 %cmp32, label %if.then.34, label %if.else.35, !dbg !7608

if.then.34:                                       ; preds = %do.body
  br label %if.end.37, !dbg !7609

if.else.35:                                       ; preds = %do.body
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7611, !tbaa !2563
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !7613
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !7613, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !7614
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7614, !tbaa !2642
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7615, !tbaa !2563
  call void %41(%struct._object* %42), !dbg !7616
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.35, %if.then.34
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7617
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !7617
  br label %do.cond, !dbg !7619

do.cond:                                          ; preds = %if.end.37
  br label %do.end, !dbg !7620

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7622
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7622

if.end.38:                                        ; preds = %if.end
  %44 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7623, !tbaa !2563
  %cmp39 = icmp ne %struct._object* %44, @_Py_NoneStruct, !dbg !7624
  %conv40 = zext i1 %cmp39 to i32, !dbg !7624
  %45 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7625, !tbaa !2563
  %cmp41 = icmp ne %struct._object* %45, @_Py_NoneStruct, !dbg !7626
  %conv42 = zext i1 %cmp41 to i32, !dbg !7626
  %cmp43 = icmp ne i32 %conv40, %conv42, !dbg !7627
  br i1 %cmp43, label %if.then.45, label %if.end.72, !dbg !7628

if.then.45:                                       ; preds = %if.end.38
  %46 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7629, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %46, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.108, i32 0, i32 0)), !dbg !7630
  br label %do.body.46, !dbg !7631

do.body.46:                                       ; preds = %if.then.45
  %47 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !7632
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !7632
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp47, metadata !1076, metadata !2553), !dbg !7634
  %48 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7635, !tbaa !2563
  store %struct._object* %48, %struct._object** %_py_decref_tmp47, align 8, !dbg !7634, !tbaa !2563
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !7636, !tbaa !2563
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !7638
  %50 = load i64, i64* %ob_refcnt48, align 8, !dbg !7639, !tbaa !2632
  %dec49 = add i64 %50, -1, !dbg !7639
  store i64 %dec49, i64* %ob_refcnt48, align 8, !dbg !7639, !tbaa !2632
  %cmp50 = icmp ne i64 %dec49, 0, !dbg !7640
  br i1 %cmp50, label %if.then.52, label %if.else.53, !dbg !7641

if.then.52:                                       ; preds = %do.body.46
  br label %if.end.56, !dbg !7642

if.else.53:                                       ; preds = %do.body.46
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !7644, !tbaa !2563
  %ob_type54 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !7646
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type54, align 8, !dbg !7646, !tbaa !2640
  %tp_dealloc55 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !7647
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc55, align 8, !dbg !7647, !tbaa !2642
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !7648, !tbaa !2563
  call void %53(%struct._object* %54), !dbg !7649
  br label %if.end.56

if.end.56:                                        ; preds = %if.else.53, %if.then.52
  %55 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !7650
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !7650
  br label %do.cond.57, !dbg !7652

do.cond.57:                                       ; preds = %if.end.56
  br label %do.end.58, !dbg !7653

do.end.58:                                        ; preds = %do.cond.57
  br label %do.body.59, !dbg !7655

do.body.59:                                       ; preds = %do.end.58
  %56 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !7656
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !7656
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !1080, metadata !2553), !dbg !7658
  %57 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7659, !tbaa !2563
  store %struct._object* %57, %struct._object** %_py_decref_tmp60, align 8, !dbg !7658, !tbaa !2563
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !7660, !tbaa !2563
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !7662
  %59 = load i64, i64* %ob_refcnt61, align 8, !dbg !7663, !tbaa !2632
  %dec62 = add i64 %59, -1, !dbg !7663
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !7663, !tbaa !2632
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !7664
  br i1 %cmp63, label %if.then.65, label %if.else.66, !dbg !7665

if.then.65:                                       ; preds = %do.body.59
  br label %if.end.69, !dbg !7666

if.else.66:                                       ; preds = %do.body.59
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !7668, !tbaa !2563
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !7670
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !7670, !tbaa !2640
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4, !dbg !7671
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !7671, !tbaa !2642
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !7672, !tbaa !2563
  call void %62(%struct._object* %63), !dbg !7673
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %64 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !7674
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !7674
  br label %do.cond.70, !dbg !7675

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !7676

do.end.71:                                        ; preds = %do.cond.70
  store %struct._object* null, %struct._object** %retval, !dbg !7678
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7678

if.end.72:                                        ; preds = %if.end.38
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72, %if.then.20
  %65 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7679, !tbaa !2563
  %66 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7680, !tbaa !2563
  %cmp74 = icmp ne %struct._object* %65, %66, !dbg !7681
  br i1 %cmp74, label %land.lhs.true, label %if.end.111, !dbg !7682

land.lhs.true:                                    ; preds = %if.end.73
  %67 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7683, !tbaa !2563
  %68 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7684, !tbaa !2563
  %call76 = call i32 @delta_cmp(%struct._object* %67, %struct._object* %68), !dbg !7685
  %cmp77 = icmp ne i32 %call76, 0, !dbg !7686
  br i1 %cmp77, label %if.then.79, label %if.end.111, !dbg !7687

if.then.79:                                       ; preds = %land.lhs.true
  %69 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7688, !tbaa !2563
  %70 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7689, !tbaa !2563
  %call80 = call %struct._object* @delta_subtract(%struct._object* %69, %struct._object* %70), !dbg !7690
  store %struct._object* %call80, %struct._object** %offdiff, align 8, !dbg !7691, !tbaa !2563
  %71 = load %struct._object*, %struct._object** %offdiff, align 8, !dbg !7692, !tbaa !2563
  %cmp81 = icmp eq %struct._object* %71, null, !dbg !7693
  br i1 %cmp81, label %if.then.83, label %if.end.110, !dbg !7694

if.then.83:                                       ; preds = %if.then.79
  br label %do.body.84, !dbg !7695

do.body.84:                                       ; preds = %if.then.83
  %72 = bitcast %struct._object** %_py_decref_tmp85 to i8*, !dbg !7696
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !7696
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp85, metadata !1082, metadata !2553), !dbg !7698
  %73 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7699, !tbaa !2563
  store %struct._object* %73, %struct._object** %_py_decref_tmp85, align 8, !dbg !7698, !tbaa !2563
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !7700, !tbaa !2563
  %ob_refcnt86 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !7702
  %75 = load i64, i64* %ob_refcnt86, align 8, !dbg !7703, !tbaa !2632
  %dec87 = add i64 %75, -1, !dbg !7703
  store i64 %dec87, i64* %ob_refcnt86, align 8, !dbg !7703, !tbaa !2632
  %cmp88 = icmp ne i64 %dec87, 0, !dbg !7704
  br i1 %cmp88, label %if.then.90, label %if.else.91, !dbg !7705

if.then.90:                                       ; preds = %do.body.84
  br label %if.end.94, !dbg !7706

if.else.91:                                       ; preds = %do.body.84
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !7708, !tbaa !2563
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !7710
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8, !dbg !7710, !tbaa !2640
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !7711
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8, !dbg !7711, !tbaa !2642
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !7712, !tbaa !2563
  call void %78(%struct._object* %79), !dbg !7713
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  %80 = bitcast %struct._object** %_py_decref_tmp85 to i8*, !dbg !7714
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !7714
  br label %do.cond.95, !dbg !7716

do.cond.95:                                       ; preds = %if.end.94
  br label %do.end.96, !dbg !7717

do.end.96:                                        ; preds = %do.cond.95
  br label %do.body.97, !dbg !7719

do.body.97:                                       ; preds = %do.end.96
  %81 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !7720
  call void @llvm.lifetime.start(i64 8, i8* %81) #1, !dbg !7720
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp98, metadata !1088, metadata !2553), !dbg !7722
  %82 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7723, !tbaa !2563
  store %struct._object* %82, %struct._object** %_py_decref_tmp98, align 8, !dbg !7722, !tbaa !2563
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !7724, !tbaa !2563
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !7726
  %84 = load i64, i64* %ob_refcnt99, align 8, !dbg !7727, !tbaa !2632
  %dec100 = add i64 %84, -1, !dbg !7727
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !7727, !tbaa !2632
  %cmp101 = icmp ne i64 %dec100, 0, !dbg !7728
  br i1 %cmp101, label %if.then.103, label %if.else.104, !dbg !7729

if.then.103:                                      ; preds = %do.body.97
  br label %if.end.107, !dbg !7730

if.else.104:                                      ; preds = %do.body.97
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !7732, !tbaa !2563
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !7734
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !7734, !tbaa !2640
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !7735
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8, !dbg !7735, !tbaa !2642
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !7736, !tbaa !2563
  call void %87(%struct._object* %88), !dbg !7737
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  %89 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !7738
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !7738
  br label %do.cond.108, !dbg !7739

do.cond.108:                                      ; preds = %if.end.107
  br label %do.end.109, !dbg !7740

do.end.109:                                       ; preds = %do.cond.108
  store %struct._object* null, %struct._object** %retval, !dbg !7742
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7742

if.end.110:                                       ; preds = %if.then.79
  br label %if.end.111, !dbg !7743

if.end.111:                                       ; preds = %if.end.110, %land.lhs.true, %if.end.73
  br label %do.body.112, !dbg !7744

do.body.112:                                      ; preds = %if.end.111
  %90 = bitcast %struct._object** %_py_decref_tmp113 to i8*, !dbg !7745
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !7745
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp113, metadata !1090, metadata !2553), !dbg !7747
  %91 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !7748, !tbaa !2563
  store %struct._object* %91, %struct._object** %_py_decref_tmp113, align 8, !dbg !7747, !tbaa !2563
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !7749, !tbaa !2563
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !7751
  %93 = load i64, i64* %ob_refcnt114, align 8, !dbg !7752, !tbaa !2632
  %dec115 = add i64 %93, -1, !dbg !7752
  store i64 %dec115, i64* %ob_refcnt114, align 8, !dbg !7752, !tbaa !2632
  %cmp116 = icmp ne i64 %dec115, 0, !dbg !7753
  br i1 %cmp116, label %if.then.118, label %if.else.119, !dbg !7754

if.then.118:                                      ; preds = %do.body.112
  br label %if.end.122, !dbg !7755

if.else.119:                                      ; preds = %do.body.112
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !7757, !tbaa !2563
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1, !dbg !7759
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !7759, !tbaa !2640
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4, !dbg !7760
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !7760, !tbaa !2642
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !7761, !tbaa !2563
  call void %96(%struct._object* %97), !dbg !7762
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %98 = bitcast %struct._object** %_py_decref_tmp113 to i8*, !dbg !7763
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !7763
  br label %do.cond.123, !dbg !7765

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !7766

do.end.124:                                       ; preds = %do.cond.123
  br label %do.body.125, !dbg !7768

do.body.125:                                      ; preds = %do.end.124
  %99 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !7769
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !7769
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp126, metadata !1092, metadata !2553), !dbg !7771
  %100 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !7772, !tbaa !2563
  store %struct._object* %100, %struct._object** %_py_decref_tmp126, align 8, !dbg !7771, !tbaa !2563
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !7773, !tbaa !2563
  %ob_refcnt127 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !7775
  %102 = load i64, i64* %ob_refcnt127, align 8, !dbg !7776, !tbaa !2632
  %dec128 = add i64 %102, -1, !dbg !7776
  store i64 %dec128, i64* %ob_refcnt127, align 8, !dbg !7776, !tbaa !2632
  %cmp129 = icmp ne i64 %dec128, 0, !dbg !7777
  br i1 %cmp129, label %if.then.131, label %if.else.132, !dbg !7778

if.then.131:                                      ; preds = %do.body.125
  br label %if.end.135, !dbg !7779

if.else.132:                                      ; preds = %do.body.125
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !7781, !tbaa !2563
  %ob_type133 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !7783
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type133, align 8, !dbg !7783, !tbaa !2640
  %tp_dealloc134 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %104, i32 0, i32 4, !dbg !7784
  %105 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc134, align 8, !dbg !7784, !tbaa !2642
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !7785, !tbaa !2563
  call void %105(%struct._object* %106), !dbg !7786
  br label %if.end.135

if.end.135:                                       ; preds = %if.else.132, %if.then.131
  %107 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !7787
  call void @llvm.lifetime.end(i64 8, i8* %107) #1, !dbg !7787
  br label %do.cond.136, !dbg !7788

do.cond.136:                                      ; preds = %if.end.135
  br label %do.end.137, !dbg !7789

do.end.137:                                       ; preds = %do.cond.136
  %108 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7791, !tbaa !2563
  %109 = bitcast %struct._object* %108 to %struct.PyDateTime_Date*, !dbg !7792
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %109, i32 0, i32 3, !dbg !7793
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !7794
  %110 = load i8, i8* %arrayidx, align 1, !dbg !7794, !tbaa !3415
  %conv138 = zext i8 %110 to i32, !dbg !7794
  %shl = shl i32 %conv138, 8, !dbg !7795
  %111 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7796, !tbaa !2563
  %112 = bitcast %struct._object* %111 to %struct.PyDateTime_Date*, !dbg !7797
  %data139 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %112, i32 0, i32 3, !dbg !7798
  %arrayidx140 = getelementptr [4 x i8], [4 x i8]* %data139, i32 0, i64 1, !dbg !7799
  %113 = load i8, i8* %arrayidx140, align 1, !dbg !7799, !tbaa !3415
  %conv141 = zext i8 %113 to i32, !dbg !7799
  %or = or i32 %shl, %conv141, !dbg !7800
  %114 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7801, !tbaa !2563
  %115 = bitcast %struct._object* %114 to %struct.PyDateTime_Date*, !dbg !7802
  %data142 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %115, i32 0, i32 3, !dbg !7803
  %arrayidx143 = getelementptr [4 x i8], [4 x i8]* %data142, i32 0, i64 2, !dbg !7804
  %116 = load i8, i8* %arrayidx143, align 1, !dbg !7804, !tbaa !3415
  %conv144 = zext i8 %116 to i32, !dbg !7805
  %117 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7806, !tbaa !2563
  %118 = bitcast %struct._object* %117 to %struct.PyDateTime_Date*, !dbg !7807
  %data145 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %118, i32 0, i32 3, !dbg !7808
  %arrayidx146 = getelementptr [4 x i8], [4 x i8]* %data145, i32 0, i64 3, !dbg !7809
  %119 = load i8, i8* %arrayidx146, align 1, !dbg !7809, !tbaa !3415
  %conv147 = zext i8 %119 to i32, !dbg !7810
  %call148 = call i32 @ymd_to_ord(i32 %or, i32 %conv144, i32 %conv147), !dbg !7811
  %120 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7812, !tbaa !2563
  %121 = bitcast %struct._object* %120 to %struct.PyDateTime_Date*, !dbg !7813
  %data149 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %121, i32 0, i32 3, !dbg !7814
  %arrayidx150 = getelementptr [4 x i8], [4 x i8]* %data149, i32 0, i64 0, !dbg !7815
  %122 = load i8, i8* %arrayidx150, align 1, !dbg !7815, !tbaa !3415
  %conv151 = zext i8 %122 to i32, !dbg !7815
  %shl152 = shl i32 %conv151, 8, !dbg !7816
  %123 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7817, !tbaa !2563
  %124 = bitcast %struct._object* %123 to %struct.PyDateTime_Date*, !dbg !7818
  %data153 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %124, i32 0, i32 3, !dbg !7819
  %arrayidx154 = getelementptr [4 x i8], [4 x i8]* %data153, i32 0, i64 1, !dbg !7820
  %125 = load i8, i8* %arrayidx154, align 1, !dbg !7820, !tbaa !3415
  %conv155 = zext i8 %125 to i32, !dbg !7820
  %or156 = or i32 %shl152, %conv155, !dbg !7821
  %126 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7822, !tbaa !2563
  %127 = bitcast %struct._object* %126 to %struct.PyDateTime_Date*, !dbg !7823
  %data157 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %127, i32 0, i32 3, !dbg !7824
  %arrayidx158 = getelementptr [4 x i8], [4 x i8]* %data157, i32 0, i64 2, !dbg !7825
  %128 = load i8, i8* %arrayidx158, align 1, !dbg !7825, !tbaa !3415
  %conv159 = zext i8 %128 to i32, !dbg !7826
  %129 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7827, !tbaa !2563
  %130 = bitcast %struct._object* %129 to %struct.PyDateTime_Date*, !dbg !7828
  %data160 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %130, i32 0, i32 3, !dbg !7829
  %arrayidx161 = getelementptr [4 x i8], [4 x i8]* %data160, i32 0, i64 3, !dbg !7830
  %131 = load i8, i8* %arrayidx161, align 1, !dbg !7830, !tbaa !3415
  %conv162 = zext i8 %131 to i32, !dbg !7831
  %call163 = call i32 @ymd_to_ord(i32 %or156, i32 %conv159, i32 %conv162), !dbg !7832
  %sub = sub i32 %call148, %call163, !dbg !7833
  store i32 %sub, i32* %delta_d, align 4, !dbg !7834, !tbaa !3325
  %132 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7835, !tbaa !2563
  %133 = bitcast %struct._object* %132 to %struct.PyDateTime_DateTime*, !dbg !7836
  %data164 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %133, i32 0, i32 3, !dbg !7837
  %arrayidx165 = getelementptr [10 x i8], [10 x i8]* %data164, i32 0, i64 4, !dbg !7838
  %134 = load i8, i8* %arrayidx165, align 1, !dbg !7838, !tbaa !3415
  %conv166 = zext i8 %134 to i32, !dbg !7839
  %135 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7840, !tbaa !2563
  %136 = bitcast %struct._object* %135 to %struct.PyDateTime_DateTime*, !dbg !7841
  %data167 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %136, i32 0, i32 3, !dbg !7842
  %arrayidx168 = getelementptr [10 x i8], [10 x i8]* %data167, i32 0, i64 4, !dbg !7843
  %137 = load i8, i8* %arrayidx168, align 1, !dbg !7843, !tbaa !3415
  %conv169 = zext i8 %137 to i32, !dbg !7844
  %sub170 = sub i32 %conv166, %conv169, !dbg !7845
  %mul = mul i32 %sub170, 3600, !dbg !7846
  %138 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7847, !tbaa !2563
  %139 = bitcast %struct._object* %138 to %struct.PyDateTime_DateTime*, !dbg !7848
  %data171 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %139, i32 0, i32 3, !dbg !7849
  %arrayidx172 = getelementptr [10 x i8], [10 x i8]* %data171, i32 0, i64 5, !dbg !7850
  %140 = load i8, i8* %arrayidx172, align 1, !dbg !7850, !tbaa !3415
  %conv173 = zext i8 %140 to i32, !dbg !7851
  %141 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7852, !tbaa !2563
  %142 = bitcast %struct._object* %141 to %struct.PyDateTime_DateTime*, !dbg !7853
  %data174 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %142, i32 0, i32 3, !dbg !7854
  %arrayidx175 = getelementptr [10 x i8], [10 x i8]* %data174, i32 0, i64 5, !dbg !7855
  %143 = load i8, i8* %arrayidx175, align 1, !dbg !7855, !tbaa !3415
  %conv176 = zext i8 %143 to i32, !dbg !7856
  %sub177 = sub i32 %conv173, %conv176, !dbg !7857
  %mul178 = mul i32 %sub177, 60, !dbg !7858
  %add = add i32 %mul, %mul178, !dbg !7859
  %144 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7860, !tbaa !2563
  %145 = bitcast %struct._object* %144 to %struct.PyDateTime_DateTime*, !dbg !7861
  %data179 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %145, i32 0, i32 3, !dbg !7862
  %arrayidx180 = getelementptr [10 x i8], [10 x i8]* %data179, i32 0, i64 6, !dbg !7863
  %146 = load i8, i8* %arrayidx180, align 1, !dbg !7863, !tbaa !3415
  %conv181 = zext i8 %146 to i32, !dbg !7864
  %147 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7865, !tbaa !2563
  %148 = bitcast %struct._object* %147 to %struct.PyDateTime_DateTime*, !dbg !7866
  %data182 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %148, i32 0, i32 3, !dbg !7867
  %arrayidx183 = getelementptr [10 x i8], [10 x i8]* %data182, i32 0, i64 6, !dbg !7868
  %149 = load i8, i8* %arrayidx183, align 1, !dbg !7868, !tbaa !3415
  %conv184 = zext i8 %149 to i32, !dbg !7869
  %sub185 = sub i32 %conv181, %conv184, !dbg !7870
  %add186 = add i32 %add, %sub185, !dbg !7871
  store i32 %add186, i32* %delta_s, align 4, !dbg !7872, !tbaa !3325
  %150 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7873, !tbaa !2563
  %151 = bitcast %struct._object* %150 to %struct.PyDateTime_DateTime*, !dbg !7874
  %data187 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %151, i32 0, i32 3, !dbg !7875
  %arrayidx188 = getelementptr [10 x i8], [10 x i8]* %data187, i32 0, i64 7, !dbg !7876
  %152 = load i8, i8* %arrayidx188, align 1, !dbg !7876, !tbaa !3415
  %conv189 = zext i8 %152 to i32, !dbg !7876
  %shl190 = shl i32 %conv189, 16, !dbg !7877
  %153 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7878, !tbaa !2563
  %154 = bitcast %struct._object* %153 to %struct.PyDateTime_DateTime*, !dbg !7879
  %data191 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %154, i32 0, i32 3, !dbg !7880
  %arrayidx192 = getelementptr [10 x i8], [10 x i8]* %data191, i32 0, i64 8, !dbg !7881
  %155 = load i8, i8* %arrayidx192, align 1, !dbg !7881, !tbaa !3415
  %conv193 = zext i8 %155 to i32, !dbg !7881
  %shl194 = shl i32 %conv193, 8, !dbg !7882
  %or195 = or i32 %shl190, %shl194, !dbg !7883
  %156 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7884, !tbaa !2563
  %157 = bitcast %struct._object* %156 to %struct.PyDateTime_DateTime*, !dbg !7885
  %data196 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %157, i32 0, i32 3, !dbg !7886
  %arrayidx197 = getelementptr [10 x i8], [10 x i8]* %data196, i32 0, i64 9, !dbg !7887
  %158 = load i8, i8* %arrayidx197, align 1, !dbg !7887, !tbaa !3415
  %conv198 = zext i8 %158 to i32, !dbg !7887
  %or199 = or i32 %or195, %conv198, !dbg !7888
  %159 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7889, !tbaa !2563
  %160 = bitcast %struct._object* %159 to %struct.PyDateTime_DateTime*, !dbg !7890
  %data200 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %160, i32 0, i32 3, !dbg !7891
  %arrayidx201 = getelementptr [10 x i8], [10 x i8]* %data200, i32 0, i64 7, !dbg !7892
  %161 = load i8, i8* %arrayidx201, align 1, !dbg !7892, !tbaa !3415
  %conv202 = zext i8 %161 to i32, !dbg !7892
  %shl203 = shl i32 %conv202, 16, !dbg !7893
  %162 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7894, !tbaa !2563
  %163 = bitcast %struct._object* %162 to %struct.PyDateTime_DateTime*, !dbg !7895
  %data204 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %163, i32 0, i32 3, !dbg !7896
  %arrayidx205 = getelementptr [10 x i8], [10 x i8]* %data204, i32 0, i64 8, !dbg !7897
  %164 = load i8, i8* %arrayidx205, align 1, !dbg !7897, !tbaa !3415
  %conv206 = zext i8 %164 to i32, !dbg !7897
  %shl207 = shl i32 %conv206, 8, !dbg !7898
  %or208 = or i32 %shl203, %shl207, !dbg !7899
  %165 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7900, !tbaa !2563
  %166 = bitcast %struct._object* %165 to %struct.PyDateTime_DateTime*, !dbg !7901
  %data209 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %166, i32 0, i32 3, !dbg !7902
  %arrayidx210 = getelementptr [10 x i8], [10 x i8]* %data209, i32 0, i64 9, !dbg !7903
  %167 = load i8, i8* %arrayidx210, align 1, !dbg !7903, !tbaa !3415
  %conv211 = zext i8 %167 to i32, !dbg !7903
  %or212 = or i32 %or208, %conv211, !dbg !7904
  %sub213 = sub i32 %or199, %or212, !dbg !7905
  store i32 %sub213, i32* %delta_us, align 4, !dbg !7906, !tbaa !3325
  %168 = load i32, i32* %delta_d, align 4, !dbg !7907, !tbaa !3325
  %169 = load i32, i32* %delta_s, align 4, !dbg !7908, !tbaa !3325
  %170 = load i32, i32* %delta_us, align 4, !dbg !7909, !tbaa !3325
  %call214 = call %struct._object* @new_delta_ex(i32 %168, i32 %169, i32 %170, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !7910
  store %struct._object* %call214, %struct._object** %result, align 8, !dbg !7911, !tbaa !2563
  %171 = load %struct._object*, %struct._object** %result, align 8, !dbg !7912, !tbaa !2563
  %cmp215 = icmp eq %struct._object* %171, null, !dbg !7914
  br i1 %cmp215, label %if.then.217, label %if.end.218, !dbg !7915

if.then.217:                                      ; preds = %do.end.137
  store %struct._object* null, %struct._object** %retval, !dbg !7916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7916

if.end.218:                                       ; preds = %do.end.137
  %172 = load %struct._object*, %struct._object** %offdiff, align 8, !dbg !7917, !tbaa !2563
  %cmp219 = icmp ne %struct._object* %172, null, !dbg !7918
  br i1 %cmp219, label %if.then.221, label %if.end.249, !dbg !7919

if.then.221:                                      ; preds = %if.end.218
  %173 = bitcast %struct._object** %temp to i8*, !dbg !7920
  call void @llvm.lifetime.start(i64 8, i8* %173) #1, !dbg !7920
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1094, metadata !2553), !dbg !7921
  %174 = load %struct._object*, %struct._object** %result, align 8, !dbg !7922, !tbaa !2563
  store %struct._object* %174, %struct._object** %temp, align 8, !dbg !7921, !tbaa !2563
  %175 = load %struct._object*, %struct._object** %result, align 8, !dbg !7923, !tbaa !2563
  %176 = load %struct._object*, %struct._object** %offdiff, align 8, !dbg !7924, !tbaa !2563
  %call222 = call %struct._object* @delta_subtract(%struct._object* %175, %struct._object* %176), !dbg !7925
  store %struct._object* %call222, %struct._object** %result, align 8, !dbg !7926, !tbaa !2563
  br label %do.body.223, !dbg !7927

do.body.223:                                      ; preds = %if.then.221
  %177 = bitcast %struct._object** %_py_decref_tmp224 to i8*, !dbg !7928
  call void @llvm.lifetime.start(i64 8, i8* %177) #1, !dbg !7928
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp224, metadata !1097, metadata !2553), !dbg !7930
  %178 = load %struct._object*, %struct._object** %temp, align 8, !dbg !7931, !tbaa !2563
  store %struct._object* %178, %struct._object** %_py_decref_tmp224, align 8, !dbg !7930, !tbaa !2563
  %179 = load %struct._object*, %struct._object** %_py_decref_tmp224, align 8, !dbg !7932, !tbaa !2563
  %ob_refcnt225 = getelementptr inbounds %struct._object, %struct._object* %179, i32 0, i32 0, !dbg !7934
  %180 = load i64, i64* %ob_refcnt225, align 8, !dbg !7935, !tbaa !2632
  %dec226 = add i64 %180, -1, !dbg !7935
  store i64 %dec226, i64* %ob_refcnt225, align 8, !dbg !7935, !tbaa !2632
  %cmp227 = icmp ne i64 %dec226, 0, !dbg !7936
  br i1 %cmp227, label %if.then.229, label %if.else.230, !dbg !7937

if.then.229:                                      ; preds = %do.body.223
  br label %if.end.233, !dbg !7938

if.else.230:                                      ; preds = %do.body.223
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp224, align 8, !dbg !7940, !tbaa !2563
  %ob_type231 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 1, !dbg !7942
  %182 = load %struct._typeobject*, %struct._typeobject** %ob_type231, align 8, !dbg !7942, !tbaa !2640
  %tp_dealloc232 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %182, i32 0, i32 4, !dbg !7943
  %183 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc232, align 8, !dbg !7943, !tbaa !2642
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp224, align 8, !dbg !7944, !tbaa !2563
  call void %183(%struct._object* %184), !dbg !7945
  br label %if.end.233

if.end.233:                                       ; preds = %if.else.230, %if.then.229
  %185 = bitcast %struct._object** %_py_decref_tmp224 to i8*, !dbg !7946
  call void @llvm.lifetime.end(i64 8, i8* %185) #1, !dbg !7946
  br label %do.cond.234, !dbg !7948

do.cond.234:                                      ; preds = %if.end.233
  br label %do.end.235, !dbg !7949

do.end.235:                                       ; preds = %do.cond.234
  br label %do.body.236, !dbg !7951

do.body.236:                                      ; preds = %do.end.235
  %186 = bitcast %struct._object** %_py_decref_tmp237 to i8*, !dbg !7952
  call void @llvm.lifetime.start(i64 8, i8* %186) #1, !dbg !7952
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp237, metadata !1099, metadata !2553), !dbg !7954
  %187 = load %struct._object*, %struct._object** %offdiff, align 8, !dbg !7955, !tbaa !2563
  store %struct._object* %187, %struct._object** %_py_decref_tmp237, align 8, !dbg !7954, !tbaa !2563
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp237, align 8, !dbg !7956, !tbaa !2563
  %ob_refcnt238 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 0, !dbg !7958
  %189 = load i64, i64* %ob_refcnt238, align 8, !dbg !7959, !tbaa !2632
  %dec239 = add i64 %189, -1, !dbg !7959
  store i64 %dec239, i64* %ob_refcnt238, align 8, !dbg !7959, !tbaa !2632
  %cmp240 = icmp ne i64 %dec239, 0, !dbg !7960
  br i1 %cmp240, label %if.then.242, label %if.else.243, !dbg !7961

if.then.242:                                      ; preds = %do.body.236
  br label %if.end.246, !dbg !7962

if.else.243:                                      ; preds = %do.body.236
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp237, align 8, !dbg !7964, !tbaa !2563
  %ob_type244 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 1, !dbg !7966
  %191 = load %struct._typeobject*, %struct._typeobject** %ob_type244, align 8, !dbg !7966, !tbaa !2640
  %tp_dealloc245 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %191, i32 0, i32 4, !dbg !7967
  %192 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc245, align 8, !dbg !7967, !tbaa !2642
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp237, align 8, !dbg !7968, !tbaa !2563
  call void %192(%struct._object* %193), !dbg !7969
  br label %if.end.246

if.end.246:                                       ; preds = %if.else.243, %if.then.242
  %194 = bitcast %struct._object** %_py_decref_tmp237 to i8*, !dbg !7970
  call void @llvm.lifetime.end(i64 8, i8* %194) #1, !dbg !7970
  br label %do.cond.247, !dbg !7971

do.cond.247:                                      ; preds = %if.end.246
  br label %do.end.248, !dbg !7972

do.end.248:                                       ; preds = %do.cond.247
  %195 = bitcast %struct._object** %temp to i8*, !dbg !7974
  call void @llvm.lifetime.end(i64 8, i8* %195) #1, !dbg !7974
  br label %if.end.249, !dbg !7975

if.end.249:                                       ; preds = %do.end.248, %if.end.218
  store i32 0, i32* %cleanup.dest.slot, !dbg !7976
  br label %cleanup, !dbg !7976

cleanup:                                          ; preds = %if.end.249, %if.then.217, %do.end.109, %do.end.71, %do.end, %if.then.26
  %196 = bitcast i32* %delta_us to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 4, i8* %196) #1, !dbg !7977
  %197 = bitcast i32* %delta_s to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 4, i8* %197) #1, !dbg !7977
  %198 = bitcast i32* %delta_d to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 4, i8* %198) #1, !dbg !7977
  %199 = bitcast %struct._object** %offdiff to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 8, i8* %199) #1, !dbg !7977
  %200 = bitcast %struct._object** %offset2 to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 8, i8* %200) #1, !dbg !7977
  %201 = bitcast %struct._object** %offset1 to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 8, i8* %201) #1, !dbg !7977
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.274 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.266, !dbg !7978

if.else.255:                                      ; preds = %lor.lhs.false.4
  %202 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7979, !tbaa !2563
  %ob_type256 = getelementptr inbounds %struct._object, %struct._object* %202, i32 0, i32 1, !dbg !7981
  %203 = load %struct._typeobject*, %struct._typeobject** %ob_type256, align 8, !dbg !7981, !tbaa !2640
  %cmp257 = icmp eq %struct._typeobject* %203, @PyDateTime_DeltaType, !dbg !7982
  br i1 %cmp257, label %if.then.263, label %lor.lhs.false.259, !dbg !7983

lor.lhs.false.259:                                ; preds = %if.else.255
  %204 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7984, !tbaa !2563
  %ob_type260 = getelementptr inbounds %struct._object, %struct._object* %204, i32 0, i32 1, !dbg !7986
  %205 = load %struct._typeobject*, %struct._typeobject** %ob_type260, align 8, !dbg !7986, !tbaa !2640
  %call261 = call i32 @PyType_IsSubtype(%struct._typeobject* %205, %struct._typeobject* @PyDateTime_DeltaType), !dbg !7987
  %tobool262 = icmp ne i32 %call261, 0, !dbg !7987
  br i1 %tobool262, label %if.then.263, label %if.end.265, !dbg !7988

if.then.263:                                      ; preds = %lor.lhs.false.259, %if.else.255
  %206 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !7989, !tbaa !2563
  %207 = bitcast %struct._object* %206 to %struct.PyDateTime_DateTime*, !dbg !7991
  %208 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !7992, !tbaa !2563
  %209 = bitcast %struct._object* %208 to %struct.PyDateTime_Delta*, !dbg !7993
  %call264 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %207, %struct.PyDateTime_Delta* %209, i32 -1), !dbg !7994
  store %struct._object* %call264, %struct._object** %result, align 8, !dbg !7995, !tbaa !2563
  br label %if.end.265, !dbg !7996

if.end.265:                                       ; preds = %if.then.263, %lor.lhs.false.259
  br label %if.end.266

if.end.266:                                       ; preds = %if.end.265, %cleanup.cont
  br label %if.end.267, !dbg !7997

if.end.267:                                       ; preds = %if.end.266, %lor.lhs.false
  %210 = load %struct._object*, %struct._object** %result, align 8, !dbg !7998, !tbaa !2563
  %cmp268 = icmp eq %struct._object* %210, @_Py_NotImplementedStruct, !dbg !8000
  br i1 %cmp268, label %if.then.270, label %if.end.273, !dbg !8001

if.then.270:                                      ; preds = %if.end.267
  %211 = load %struct._object*, %struct._object** %result, align 8, !dbg !8002, !tbaa !2563
  %ob_refcnt271 = getelementptr inbounds %struct._object, %struct._object* %211, i32 0, i32 0, !dbg !8003
  %212 = load i64, i64* %ob_refcnt271, align 8, !dbg !8004, !tbaa !2632
  %inc272 = add i64 %212, 1, !dbg !8004
  store i64 %inc272, i64* %ob_refcnt271, align 8, !dbg !8004, !tbaa !2632
  br label %if.end.273, !dbg !8005

if.end.273:                                       ; preds = %if.then.270, %if.end.267
  %213 = load %struct._object*, %struct._object** %result, align 8, !dbg !8006, !tbaa !2563
  store %struct._object* %213, %struct._object** %retval, !dbg !8007
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.274, !dbg !8007

cleanup.274:                                      ; preds = %if.end.273, %cleanup
  %214 = bitcast %struct._object** %result to i8*, !dbg !8008
  call void @llvm.lifetime.end(i64 8, i8* %214) #1, !dbg !8008
  %215 = load %struct._object*, %struct._object** %retval, !dbg !8008
  ret %struct._object* %215, !dbg !8008
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %date, %struct.PyDateTime_Delta* %delta, i32 %factor) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %date.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %factor.addr = alloca i32, align 4
  %year = alloca i32, align 4
  %month = alloca i32, align 4
  %day = alloca i32, align 4
  %hour = alloca i32, align 4
  %minute = alloca i32, align 4
  %second = alloca i32, align 4
  %microsecond = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PyDateTime_DateTime* %date, %struct.PyDateTime_DateTime** %date.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %date.addr, metadata !1022, metadata !2553), !dbg !8009
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !1023, metadata !2553), !dbg !8010
  store i32 %factor, i32* %factor.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %factor.addr, metadata !1024, metadata !2553), !dbg !8011
  %0 = bitcast i32* %year to i8*, !dbg !8012
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8012
  call void @llvm.dbg.declare(metadata i32* %year, metadata !1025, metadata !2553), !dbg !8013
  %1 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8014, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_DateTime* %1 to %struct.PyDateTime_Date*, !dbg !8015
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !8016
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !8017
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8017, !tbaa !3415
  %conv = zext i8 %3 to i32, !dbg !8017
  %shl = shl i32 %conv, 8, !dbg !8018
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8019, !tbaa !2563
  %5 = bitcast %struct.PyDateTime_DateTime* %4 to %struct.PyDateTime_Date*, !dbg !8020
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %5, i32 0, i32 3, !dbg !8021
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !8022
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !8022, !tbaa !3415
  %conv3 = zext i8 %6 to i32, !dbg !8022
  %or = or i32 %shl, %conv3, !dbg !8023
  store i32 %or, i32* %year, align 4, !dbg !8013, !tbaa !3325
  %7 = bitcast i32* %month to i8*, !dbg !8024
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !8024
  call void @llvm.dbg.declare(metadata i32* %month, metadata !1026, metadata !2553), !dbg !8025
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8026, !tbaa !2563
  %9 = bitcast %struct.PyDateTime_DateTime* %8 to %struct.PyDateTime_Date*, !dbg !8027
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %9, i32 0, i32 3, !dbg !8028
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !8029
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !8029, !tbaa !3415
  %conv6 = zext i8 %10 to i32, !dbg !8030
  store i32 %conv6, i32* %month, align 4, !dbg !8025, !tbaa !3325
  %11 = bitcast i32* %day to i8*, !dbg !8031
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !8031
  call void @llvm.dbg.declare(metadata i32* %day, metadata !1027, metadata !2553), !dbg !8032
  %12 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8033, !tbaa !2563
  %13 = bitcast %struct.PyDateTime_DateTime* %12 to %struct.PyDateTime_Date*, !dbg !8034
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %13, i32 0, i32 3, !dbg !8035
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !8036
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !8036, !tbaa !3415
  %conv9 = zext i8 %14 to i32, !dbg !8037
  %15 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !8038, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %15, i32 0, i32 2, !dbg !8039
  %16 = load i32, i32* %days, align 4, !dbg !8039, !tbaa !3363
  %17 = load i32, i32* %factor.addr, align 4, !dbg !8040, !tbaa !3325
  %mul = mul i32 %16, %17, !dbg !8041
  %add = add i32 %conv9, %mul, !dbg !8042
  store i32 %add, i32* %day, align 4, !dbg !8032, !tbaa !3325
  %18 = bitcast i32* %hour to i8*, !dbg !8043
  call void @llvm.lifetime.start(i64 4, i8* %18) #1, !dbg !8043
  call void @llvm.dbg.declare(metadata i32* %hour, metadata !1028, metadata !2553), !dbg !8044
  %19 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8045, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %19, i32 0, i32 3, !dbg !8046
  %arrayidx11 = getelementptr [10 x i8], [10 x i8]* %data10, i32 0, i64 4, !dbg !8047
  %20 = load i8, i8* %arrayidx11, align 1, !dbg !8047, !tbaa !3415
  %conv12 = zext i8 %20 to i32, !dbg !8048
  store i32 %conv12, i32* %hour, align 4, !dbg !8044, !tbaa !3325
  %21 = bitcast i32* %minute to i8*, !dbg !8049
  call void @llvm.lifetime.start(i64 4, i8* %21) #1, !dbg !8049
  call void @llvm.dbg.declare(metadata i32* %minute, metadata !1029, metadata !2553), !dbg !8050
  %22 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8051, !tbaa !2563
  %data13 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %22, i32 0, i32 3, !dbg !8052
  %arrayidx14 = getelementptr [10 x i8], [10 x i8]* %data13, i32 0, i64 5, !dbg !8053
  %23 = load i8, i8* %arrayidx14, align 1, !dbg !8053, !tbaa !3415
  %conv15 = zext i8 %23 to i32, !dbg !8054
  store i32 %conv15, i32* %minute, align 4, !dbg !8050, !tbaa !3325
  %24 = bitcast i32* %second to i8*, !dbg !8055
  call void @llvm.lifetime.start(i64 4, i8* %24) #1, !dbg !8055
  call void @llvm.dbg.declare(metadata i32* %second, metadata !1030, metadata !2553), !dbg !8056
  %25 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8057, !tbaa !2563
  %data16 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %25, i32 0, i32 3, !dbg !8058
  %arrayidx17 = getelementptr [10 x i8], [10 x i8]* %data16, i32 0, i64 6, !dbg !8059
  %26 = load i8, i8* %arrayidx17, align 1, !dbg !8059, !tbaa !3415
  %conv18 = zext i8 %26 to i32, !dbg !8060
  %27 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !8061, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %27, i32 0, i32 3, !dbg !8062
  %28 = load i32, i32* %seconds, align 4, !dbg !8062, !tbaa !3368
  %29 = load i32, i32* %factor.addr, align 4, !dbg !8063, !tbaa !3325
  %mul19 = mul i32 %28, %29, !dbg !8064
  %add20 = add i32 %conv18, %mul19, !dbg !8065
  store i32 %add20, i32* %second, align 4, !dbg !8056, !tbaa !3325
  %30 = bitcast i32* %microsecond to i8*, !dbg !8066
  call void @llvm.lifetime.start(i64 4, i8* %30) #1, !dbg !8066
  call void @llvm.dbg.declare(metadata i32* %microsecond, metadata !1031, metadata !2553), !dbg !8067
  %31 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8068, !tbaa !2563
  %data21 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %31, i32 0, i32 3, !dbg !8069
  %arrayidx22 = getelementptr [10 x i8], [10 x i8]* %data21, i32 0, i64 7, !dbg !8070
  %32 = load i8, i8* %arrayidx22, align 1, !dbg !8070, !tbaa !3415
  %conv23 = zext i8 %32 to i32, !dbg !8070
  %shl24 = shl i32 %conv23, 16, !dbg !8071
  %33 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8072, !tbaa !2563
  %data25 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %33, i32 0, i32 3, !dbg !8073
  %arrayidx26 = getelementptr [10 x i8], [10 x i8]* %data25, i32 0, i64 8, !dbg !8074
  %34 = load i8, i8* %arrayidx26, align 1, !dbg !8074, !tbaa !3415
  %conv27 = zext i8 %34 to i32, !dbg !8074
  %shl28 = shl i32 %conv27, 8, !dbg !8075
  %or29 = or i32 %shl24, %shl28, !dbg !8076
  %35 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8077, !tbaa !2563
  %data30 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %35, i32 0, i32 3, !dbg !8078
  %arrayidx31 = getelementptr [10 x i8], [10 x i8]* %data30, i32 0, i64 9, !dbg !8079
  %36 = load i8, i8* %arrayidx31, align 1, !dbg !8079, !tbaa !3415
  %conv32 = zext i8 %36 to i32, !dbg !8079
  %or33 = or i32 %or29, %conv32, !dbg !8080
  %37 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !8081, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %37, i32 0, i32 4, !dbg !8082
  %38 = load i32, i32* %microseconds, align 4, !dbg !8082, !tbaa !3373
  %39 = load i32, i32* %factor.addr, align 4, !dbg !8083, !tbaa !3325
  %mul34 = mul i32 %38, %39, !dbg !8084
  %add35 = add i32 %or33, %mul34, !dbg !8085
  store i32 %add35, i32* %microsecond, align 4, !dbg !8067, !tbaa !3325
  %call = call i32 @normalize_datetime(i32* %year, i32* %month, i32* %day, i32* %hour, i32* %minute, i32* %second, i32* %microsecond), !dbg !8086
  %cmp = icmp slt i32 %call, 0, !dbg !8088
  br i1 %cmp, label %if.then, label %if.else, !dbg !8089

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8090
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8090

if.else:                                          ; preds = %entry
  %40 = load i32, i32* %year, align 4, !dbg !8091, !tbaa !3325
  %41 = load i32, i32* %month, align 4, !dbg !8092, !tbaa !3325
  %42 = load i32, i32* %day, align 4, !dbg !8093, !tbaa !3325
  %43 = load i32, i32* %hour, align 4, !dbg !8094, !tbaa !3325
  %44 = load i32, i32* %minute, align 4, !dbg !8095, !tbaa !3325
  %45 = load i32, i32* %second, align 4, !dbg !8096, !tbaa !3325
  %46 = load i32, i32* %microsecond, align 4, !dbg !8097, !tbaa !3325
  %47 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8098, !tbaa !2563
  %48 = bitcast %struct.PyDateTime_DateTime* %47 to %struct._PyDateTime_BaseTZInfo*, !dbg !8099
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %48, i32 0, i32 2, !dbg !8100
  %49 = load i8, i8* %hastzinfo, align 1, !dbg !8100, !tbaa !5575
  %conv37 = sext i8 %49 to i32, !dbg !8101
  %tobool = icmp ne i32 %conv37, 0, !dbg !8101
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8101

cond.true:                                        ; preds = %if.else
  %50 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %date.addr, align 8, !dbg !8102, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %50, i32 0, i32 4, !dbg !8104
  %51 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8104, !tbaa !3586
  br label %cond.end, !dbg !8101

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !8105

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %51, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !8101
  %call38 = call %struct._object* @new_datetime_ex(i32 %40, i32 %41, i32 %42, i32 %43, i32 %44, i32 %45, i32 %46, %struct._object* %cond, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !8107
  store %struct._object* %call38, %struct._object** %retval, !dbg !8110
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8110

cleanup:                                          ; preds = %cond.end, %if.then
  %52 = bitcast i32* %microsecond to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %52) #1, !dbg !8111
  %53 = bitcast i32* %second to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %53) #1, !dbg !8111
  %54 = bitcast i32* %minute to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %54) #1, !dbg !8111
  %55 = bitcast i32* %hour to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %55) #1, !dbg !8111
  %56 = bitcast i32* %day to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %56) #1, !dbg !8111
  %57 = bitcast i32* %month to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %57) #1, !dbg !8111
  %58 = bitcast i32* %year to i8*, !dbg !8111
  call void @llvm.lifetime.end(i64 4, i8* %58) #1, !dbg !8111
  %59 = load %struct._object*, %struct._object** %retval, !dbg !8111
  ret %struct._object* %59, !dbg !8111
}

; Function Attrs: nounwind uwtable
define internal i32 @normalize_datetime(i32* %year, i32* %month, i32* %day, i32* %hour, i32* %minute, i32* %second, i32* %microsecond) #0 {
entry:
  %year.addr = alloca i32*, align 8
  %month.addr = alloca i32*, align 8
  %day.addr = alloca i32*, align 8
  %hour.addr = alloca i32*, align 8
  %minute.addr = alloca i32*, align 8
  %second.addr = alloca i32*, align 8
  %microsecond.addr = alloca i32*, align 8
  store i32* %year, i32** %year.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %year.addr, metadata !1036, metadata !2553), !dbg !8112
  store i32* %month, i32** %month.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %month.addr, metadata !1037, metadata !2553), !dbg !8113
  store i32* %day, i32** %day.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %day.addr, metadata !1038, metadata !2553), !dbg !8114
  store i32* %hour, i32** %hour.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %hour.addr, metadata !1039, metadata !2553), !dbg !8115
  store i32* %minute, i32** %minute.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %minute.addr, metadata !1040, metadata !2553), !dbg !8116
  store i32* %second, i32** %second.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %second.addr, metadata !1041, metadata !2553), !dbg !8117
  store i32* %microsecond, i32** %microsecond.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %microsecond.addr, metadata !1042, metadata !2553), !dbg !8118
  %0 = load i32*, i32** %second.addr, align 8, !dbg !8119, !tbaa !2563
  %1 = load i32*, i32** %microsecond.addr, align 8, !dbg !8120, !tbaa !2563
  call void @normalize_pair(i32* %0, i32* %1, i32 1000000), !dbg !8121
  %2 = load i32*, i32** %minute.addr, align 8, !dbg !8122, !tbaa !2563
  %3 = load i32*, i32** %second.addr, align 8, !dbg !8123, !tbaa !2563
  call void @normalize_pair(i32* %2, i32* %3, i32 60), !dbg !8124
  %4 = load i32*, i32** %hour.addr, align 8, !dbg !8125, !tbaa !2563
  %5 = load i32*, i32** %minute.addr, align 8, !dbg !8126, !tbaa !2563
  call void @normalize_pair(i32* %4, i32* %5, i32 60), !dbg !8127
  %6 = load i32*, i32** %day.addr, align 8, !dbg !8128, !tbaa !2563
  %7 = load i32*, i32** %hour.addr, align 8, !dbg !8129, !tbaa !2563
  call void @normalize_pair(i32* %6, i32* %7, i32 24), !dbg !8130
  %8 = load i32*, i32** %year.addr, align 8, !dbg !8131, !tbaa !2563
  %9 = load i32*, i32** %month.addr, align 8, !dbg !8132, !tbaa !2563
  %10 = load i32*, i32** %day.addr, align 8, !dbg !8133, !tbaa !2563
  %call = call i32 @normalize_date(i32* %8, i32* %9, i32* %10), !dbg !8134
  ret i32 %call, !dbg !8135
}

; Function Attrs: nounwind uwtable
define internal void @normalize_pair(i32* %hi, i32* %lo, i32 %factor) #0 {
entry:
  %hi.addr = alloca i32*, align 8
  %lo.addr = alloca i32*, align 8
  %factor.addr = alloca i32, align 4
  %num_hi = alloca i32, align 4
  %new_hi = alloca i32, align 4
  store i32* %hi, i32** %hi.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %hi.addr, metadata !1047, metadata !2553), !dbg !8136
  store i32* %lo, i32** %lo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %lo.addr, metadata !1048, metadata !2553), !dbg !8137
  store i32 %factor, i32* %factor.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %factor.addr, metadata !1049, metadata !2553), !dbg !8138
  %0 = load i32*, i32** %lo.addr, align 8, !dbg !8139, !tbaa !2563
  %1 = load i32, i32* %0, align 4, !dbg !8140, !tbaa !3325
  %cmp = icmp slt i32 %1, 0, !dbg !8141
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8142

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32*, i32** %lo.addr, align 8, !dbg !8143, !tbaa !2563
  %3 = load i32, i32* %2, align 4, !dbg !8145, !tbaa !3325
  %4 = load i32, i32* %factor.addr, align 4, !dbg !8146, !tbaa !3325
  %cmp1 = icmp sge i32 %3, %4, !dbg !8147
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8148

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = bitcast i32* %num_hi to i8*, !dbg !8149
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !8149
  call void @llvm.dbg.declare(metadata i32* %num_hi, metadata !1050, metadata !2553), !dbg !8150
  %6 = load i32*, i32** %lo.addr, align 8, !dbg !8151, !tbaa !2563
  %7 = load i32, i32* %6, align 4, !dbg !8152, !tbaa !3325
  %8 = load i32, i32* %factor.addr, align 4, !dbg !8153, !tbaa !3325
  %9 = load i32*, i32** %lo.addr, align 8, !dbg !8154, !tbaa !2563
  %call = call i32 @divmod(i32 %7, i32 %8, i32* %9), !dbg !8155
  store i32 %call, i32* %num_hi, align 4, !dbg !8150, !tbaa !3325
  %10 = bitcast i32* %new_hi to i8*, !dbg !8156
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !8156
  call void @llvm.dbg.declare(metadata i32* %new_hi, metadata !1054, metadata !2553), !dbg !8157
  %11 = load i32*, i32** %hi.addr, align 8, !dbg !8158, !tbaa !2563
  %12 = load i32, i32* %11, align 4, !dbg !8159, !tbaa !3325
  %13 = load i32, i32* %num_hi, align 4, !dbg !8160, !tbaa !3325
  %add = add i32 %12, %13, !dbg !8161
  store i32 %add, i32* %new_hi, align 4, !dbg !8157, !tbaa !3325
  %14 = load i32, i32* %new_hi, align 4, !dbg !8162, !tbaa !3325
  %15 = load i32*, i32** %hi.addr, align 8, !dbg !8163, !tbaa !2563
  store i32 %14, i32* %15, align 4, !dbg !8164, !tbaa !3325
  %16 = bitcast i32* %new_hi to i8*, !dbg !8165
  call void @llvm.lifetime.end(i64 4, i8* %16) #1, !dbg !8165
  %17 = bitcast i32* %num_hi to i8*, !dbg !8165
  call void @llvm.lifetime.end(i64 4, i8* %17) #1, !dbg !8165
  br label %if.end, !dbg !8166

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !8167
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_utcoffset(%struct._object* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1103, metadata !2553), !dbg !8168
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !1104, metadata !2553), !dbg !8169
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8170, !tbaa !2563
  %1 = bitcast %struct._object* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !8171
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !8172
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !8172, !tbaa !5575
  %conv = sext i8 %2 to i32, !dbg !8173
  %tobool = icmp ne i32 %conv, 0, !dbg !8173
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8173

cond.true:                                        ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8174, !tbaa !2563
  %4 = bitcast %struct._object* %3 to %struct.PyDateTime_DateTime*, !dbg !8176
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !8177
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8177, !tbaa !3586
  br label %cond.end, !dbg !8173

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !8173
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8180, !tbaa !2563
  %call = call %struct._object* @call_utcoffset(%struct._object* %cond, %struct._object* %6), !dbg !8183
  ret %struct._object* %call, !dbg !8184
}

; Function Attrs: nounwind uwtable
define internal i32 @delta_cmp(%struct._object* %self, %struct._object* %other) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %other.addr = alloca %struct._object*, align 8
  %diff = alloca i32, align 4
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1107, metadata !2553), !dbg !8185
  store %struct._object* %other, %struct._object** %other.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %other.addr, metadata !1108, metadata !2553), !dbg !8186
  %0 = bitcast i32* %diff to i8*, !dbg !8187
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8187
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !1109, metadata !2553), !dbg !8188
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8189, !tbaa !2563
  %2 = bitcast %struct._object* %1 to %struct.PyDateTime_Delta*, !dbg !8190
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %2, i32 0, i32 2, !dbg !8191
  %3 = load i32, i32* %days, align 4, !dbg !8191, !tbaa !3363
  %4 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !8192, !tbaa !2563
  %5 = bitcast %struct._object* %4 to %struct.PyDateTime_Delta*, !dbg !8193
  %days1 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %5, i32 0, i32 2, !dbg !8194
  %6 = load i32, i32* %days1, align 4, !dbg !8194, !tbaa !3363
  %sub = sub i32 %3, %6, !dbg !8195
  store i32 %sub, i32* %diff, align 4, !dbg !8188, !tbaa !3325
  %7 = load i32, i32* %diff, align 4, !dbg !8196, !tbaa !3325
  %cmp = icmp eq i32 %7, 0, !dbg !8198
  br i1 %cmp, label %if.then, label %if.end.8, !dbg !8199

if.then:                                          ; preds = %entry
  %8 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8200, !tbaa !2563
  %9 = bitcast %struct._object* %8 to %struct.PyDateTime_Delta*, !dbg !8202
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %9, i32 0, i32 3, !dbg !8203
  %10 = load i32, i32* %seconds, align 4, !dbg !8203, !tbaa !3368
  %11 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !8204, !tbaa !2563
  %12 = bitcast %struct._object* %11 to %struct.PyDateTime_Delta*, !dbg !8205
  %seconds2 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %12, i32 0, i32 3, !dbg !8206
  %13 = load i32, i32* %seconds2, align 4, !dbg !8206, !tbaa !3368
  %sub3 = sub i32 %10, %13, !dbg !8207
  store i32 %sub3, i32* %diff, align 4, !dbg !8208, !tbaa !3325
  %14 = load i32, i32* %diff, align 4, !dbg !8209, !tbaa !3325
  %cmp4 = icmp eq i32 %14, 0, !dbg !8211
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !8212

if.then.5:                                        ; preds = %if.then
  %15 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8213, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct.PyDateTime_Delta*, !dbg !8214
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %16, i32 0, i32 4, !dbg !8215
  %17 = load i32, i32* %microseconds, align 4, !dbg !8215, !tbaa !3373
  %18 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !8216, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Delta*, !dbg !8217
  %microseconds6 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %19, i32 0, i32 4, !dbg !8218
  %20 = load i32, i32* %microseconds6, align 4, !dbg !8218, !tbaa !3373
  %sub7 = sub i32 %17, %20, !dbg !8219
  store i32 %sub7, i32* %diff, align 4, !dbg !8220, !tbaa !3325
  br label %if.end, !dbg !8221

if.end:                                           ; preds = %if.then.5, %if.then
  br label %if.end.8, !dbg !8222

if.end.8:                                         ; preds = %if.end, %entry
  %21 = load i32, i32* %diff, align 4, !dbg !8223, !tbaa !3325
  %22 = bitcast i32* %diff to i8*, !dbg !8224
  call void @llvm.lifetime.end(i64 4, i8* %22) #1, !dbg !8224
  ret i32 %21, !dbg !8225
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_subtract(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %days = alloca i32, align 4
  %seconds = alloca i32, align 4
  %microseconds = alloca i32, align 4
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1112, metadata !2553), !dbg !8226
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1113, metadata !2553), !dbg !8227
  %0 = bitcast %struct._object** %result to i8*, !dbg !8228
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8228
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1114, metadata !2553), !dbg !8229
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %result, align 8, !dbg !8229, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !8230, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8231
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8231, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DeltaType, !dbg !8232
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8233

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !8234, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !8236
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !8236, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DeltaType), !dbg !8237
  %tobool = icmp ne i32 %call, 0, !dbg !8237
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8238

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !8239, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !8242
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !8242, !tbaa !2640
  %cmp3 = icmp eq %struct._typeobject* %6, @PyDateTime_DeltaType, !dbg !8243
  br i1 %cmp3, label %if.then, label %lor.lhs.false.4, !dbg !8244

lor.lhs.false.4:                                  ; preds = %land.lhs.true
  %7 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !8245, !tbaa !2563
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !8247
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !8247, !tbaa !2640
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* @PyDateTime_DeltaType), !dbg !8248
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8248
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8249

if.then:                                          ; preds = %lor.lhs.false.4, %land.lhs.true
  %9 = bitcast i32* %days to i8*, !dbg !8250
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !8250
  call void @llvm.dbg.declare(metadata i32* %days, metadata !1115, metadata !2553), !dbg !8251
  %10 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !8252, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyDateTime_Delta*, !dbg !8253
  %days8 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %11, i32 0, i32 2, !dbg !8254
  %12 = load i32, i32* %days8, align 4, !dbg !8254, !tbaa !3363
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !8255, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Delta*, !dbg !8256
  %days9 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %14, i32 0, i32 2, !dbg !8257
  %15 = load i32, i32* %days9, align 4, !dbg !8257, !tbaa !3363
  %sub = sub i32 %12, %15, !dbg !8258
  store i32 %sub, i32* %days, align 4, !dbg !8251, !tbaa !3325
  %16 = bitcast i32* %seconds to i8*, !dbg !8259
  call void @llvm.lifetime.start(i64 4, i8* %16) #1, !dbg !8259
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !1118, metadata !2553), !dbg !8260
  %17 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !8261, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !8262
  %seconds10 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %18, i32 0, i32 3, !dbg !8263
  %19 = load i32, i32* %seconds10, align 4, !dbg !8263, !tbaa !3368
  %20 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !8264, !tbaa !2563
  %21 = bitcast %struct._object* %20 to %struct.PyDateTime_Delta*, !dbg !8265
  %seconds11 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %21, i32 0, i32 3, !dbg !8266
  %22 = load i32, i32* %seconds11, align 4, !dbg !8266, !tbaa !3368
  %sub12 = sub i32 %19, %22, !dbg !8267
  store i32 %sub12, i32* %seconds, align 4, !dbg !8260, !tbaa !3325
  %23 = bitcast i32* %microseconds to i8*, !dbg !8268
  call void @llvm.lifetime.start(i64 4, i8* %23) #1, !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %microseconds, metadata !1119, metadata !2553), !dbg !8269
  %24 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !8270, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyDateTime_Delta*, !dbg !8271
  %microseconds13 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %25, i32 0, i32 4, !dbg !8272
  %26 = load i32, i32* %microseconds13, align 4, !dbg !8272, !tbaa !3373
  %27 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !8273, !tbaa !2563
  %28 = bitcast %struct._object* %27 to %struct.PyDateTime_Delta*, !dbg !8274
  %microseconds14 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %28, i32 0, i32 4, !dbg !8275
  %29 = load i32, i32* %microseconds14, align 4, !dbg !8275, !tbaa !3373
  %sub15 = sub i32 %26, %29, !dbg !8276
  store i32 %sub15, i32* %microseconds, align 4, !dbg !8269, !tbaa !3325
  %30 = load i32, i32* %days, align 4, !dbg !8277, !tbaa !3325
  %31 = load i32, i32* %seconds, align 4, !dbg !8278, !tbaa !3325
  %32 = load i32, i32* %microseconds, align 4, !dbg !8279, !tbaa !3325
  %call16 = call %struct._object* @new_delta_ex(i32 %30, i32 %31, i32 %32, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !8280
  store %struct._object* %call16, %struct._object** %result, align 8, !dbg !8281, !tbaa !2563
  %33 = bitcast i32* %microseconds to i8*, !dbg !8282
  call void @llvm.lifetime.end(i64 4, i8* %33) #1, !dbg !8282
  %34 = bitcast i32* %seconds to i8*, !dbg !8282
  call void @llvm.lifetime.end(i64 4, i8* %34) #1, !dbg !8282
  %35 = bitcast i32* %days to i8*, !dbg !8282
  call void @llvm.lifetime.end(i64 4, i8* %35) #1, !dbg !8282
  br label %if.end, !dbg !8283

if.end:                                           ; preds = %if.then, %lor.lhs.false.4, %lor.lhs.false
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !8284, !tbaa !2563
  %cmp17 = icmp eq %struct._object* %36, @_Py_NotImplementedStruct, !dbg !8286
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !8287

if.then.18:                                       ; preds = %if.end
  %37 = load %struct._object*, %struct._object** %result, align 8, !dbg !8288, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !8289
  %38 = load i64, i64* %ob_refcnt, align 8, !dbg !8290, !tbaa !2632
  %inc = add i64 %38, 1, !dbg !8290
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8290, !tbaa !2632
  br label %if.end.19, !dbg !8291

if.end.19:                                        ; preds = %if.then.18, %if.end
  %39 = load %struct._object*, %struct._object** %result, align 8, !dbg !8292, !tbaa !2563
  %40 = bitcast %struct._object** %result to i8*, !dbg !8293
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !8293
  ret %struct._object* %39, !dbg !8294
}

declare i64 @PyObject_Hash(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @cmperror(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %a.addr, metadata !1175, metadata !2553), !dbg !8295
  store %struct._object* %b, %struct._object** %b.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %b.addr, metadata !1176, metadata !2553), !dbg !8296
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8297, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %a.addr, align 8, !dbg !8298, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8299
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8299, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 1, !dbg !8300
  %3 = load i8*, i8** %tp_name, align 8, !dbg !8300, !tbaa !3653
  %4 = load %struct._object*, %struct._object** %b.addr, align 8, !dbg !8301, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !8302
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !8302, !tbaa !2640
  %tp_name2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 1, !dbg !8303
  %6 = load i8*, i8** %tp_name2, align 8, !dbg !8303, !tbaa !3653
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.112, i32 0, i32 0), i8* %3, i8* %6), !dbg !8304
  ret %struct._object* null, !dbg !8305
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_datetime_now(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %tz = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1179, metadata !2553), !dbg !8306
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1180, metadata !2553), !dbg !8307
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1181, metadata !2553), !dbg !8308
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !8309
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8309
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !1182, metadata !2553), !dbg !8310
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !8310, !tbaa !2563
  %1 = bitcast %struct._object** %tz to i8*, !dbg !8311
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8311
  call void @llvm.dbg.declare(metadata %struct._object** %tz, metadata !1183, metadata !2553), !dbg !8312
  store %struct._object* @_Py_NoneStruct, %struct._object** %tz, align 8, !dbg !8312, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8313, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !8315, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %2, %struct._object* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @datetime_datetime_now._keywords, i32 0, i32 0), %struct._object** %tz), !dbg !8316
  %tobool = icmp ne i32 %call, 0, !dbg !8316
  br i1 %tobool, label %if.end, label %if.then, !dbg !8317

if.then:                                          ; preds = %entry
  br label %exit, !dbg !8318

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8319, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %tz, align 8, !dbg !8320, !tbaa !2563
  %call1 = call %struct._object* @datetime_datetime_now_impl(%struct._typeobject* %4, %struct._object* %5), !dbg !8321
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !8322, !tbaa !2563
  br label %exit, !dbg !8323

exit:                                             ; preds = %if.end, %if.then
  %6 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !8324, !tbaa !2563
  %7 = bitcast %struct._object** %tz to i8*, !dbg !8325
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !8325
  %8 = bitcast %struct._object** %return_value to i8*, !dbg !8325
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !8325
  ret %struct._object* %6, !dbg !8326
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_utcnow(%struct._object* %cls, %struct._object* %dummy) #0 {
entry:
  %cls.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1232, metadata !2553), !dbg !8327
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1233, metadata !2553), !dbg !8328
  %0 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !8329, !tbaa !2563
  %call = call %struct._object* @datetime_best_possible(%struct._object* %0, %struct.tm* (i64*)* @gmtime, %struct._object* @_Py_NoneStruct), !dbg !8330
  ret %struct._object* %call, !dbg !8331
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_fromtimestamp(%struct._object* %cls, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %cls.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %self = alloca %struct._object*, align 8
  %timestamp = alloca %struct._object*, align 8
  %tzinfo = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1236, metadata !2553), !dbg !8332
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1237, metadata !2553), !dbg !8333
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1238, metadata !2553), !dbg !8334
  %0 = bitcast %struct._object** %self to i8*, !dbg !8335
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8335
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !1239, metadata !2553), !dbg !8336
  %1 = bitcast %struct._object** %timestamp to i8*, !dbg !8337
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8337
  call void @llvm.dbg.declare(metadata %struct._object** %timestamp, metadata !1240, metadata !2553), !dbg !8338
  %2 = bitcast %struct._object** %tzinfo to i8*, !dbg !8339
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8339
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1241, metadata !2553), !dbg !8340
  store %struct._object* @_Py_NoneStruct, %struct._object** %tzinfo, align 8, !dbg !8340, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8341, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !8343, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.144, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @datetime_fromtimestamp.keywords, i32 0, i32 0), %struct._object** %timestamp, %struct._object** %tzinfo), !dbg !8344
  %tobool = icmp ne i32 %call, 0, !dbg !8344
  br i1 %tobool, label %if.end, label %if.then, !dbg !8345

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8346
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8346

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8347, !tbaa !2563
  %call1 = call i32 @check_tzinfo_subclass(%struct._object* %5), !dbg !8349
  %cmp = icmp slt i32 %call1, 0, !dbg !8350
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !8351

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8352
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8352

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !8353, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8354, !tbaa !2563
  %cmp4 = icmp eq %struct._object* %7, @_Py_NoneStruct, !dbg !8355
  %cond = select i1 %cmp4, %struct.tm* (i64*)* @localtime, %struct.tm* (i64*)* @gmtime, !dbg !8354
  %8 = load %struct._object*, %struct._object** %timestamp, align 8, !dbg !8356, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8357, !tbaa !2563
  %call5 = call %struct._object* @datetime_from_timestamp(%struct._object* %6, %struct.tm* (i64*)* %cond, %struct._object* %8, %struct._object* %9), !dbg !8358
  store %struct._object* %call5, %struct._object** %self, align 8, !dbg !8359, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %self, align 8, !dbg !8360, !tbaa !2563
  %cmp6 = icmp ne %struct._object* %10, null, !dbg !8361
  br i1 %cmp6, label %land.lhs.true, label %if.end.13, !dbg !8362

land.lhs.true:                                    ; preds = %if.end.3
  %11 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8363, !tbaa !2563
  %cmp7 = icmp ne %struct._object* %11, @_Py_NoneStruct, !dbg !8365
  br i1 %cmp7, label %if.then.8, label %if.end.13, !dbg !8366

if.then.8:                                        ; preds = %land.lhs.true
  %12 = bitcast %struct._object** %temp to i8*, !dbg !8367
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !8367
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1242, metadata !2553), !dbg !8368
  %13 = load %struct._object*, %struct._object** %self, align 8, !dbg !8369, !tbaa !2563
  store %struct._object* %13, %struct._object** %temp, align 8, !dbg !8368, !tbaa !2563
  %14 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8370, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %self, align 8, !dbg !8371, !tbaa !2563
  %call9 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %14, %struct._Py_Identifier* @PyId_fromutc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %15), !dbg !8372
  store %struct._object* %call9, %struct._object** %self, align 8, !dbg !8373, !tbaa !2563
  br label %do.body, !dbg !8374

do.body:                                          ; preds = %if.then.8
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8375
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !8375
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1245, metadata !2553), !dbg !8377
  %17 = load %struct._object*, %struct._object** %temp, align 8, !dbg !8378, !tbaa !2563
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !8377, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8379, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !8381
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !8382, !tbaa !2632
  %dec = add i64 %19, -1, !dbg !8382
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8382, !tbaa !2632
  %cmp10 = icmp ne i64 %dec, 0, !dbg !8383
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !8384

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !8385

if.else:                                          ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8387, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !8389
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8389, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !8390
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8390, !tbaa !2642
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8391, !tbaa !2563
  call void %22(%struct._object* %23), !dbg !8392
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8393
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !8393
  br label %do.cond, !dbg !8395

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8396

do.end:                                           ; preds = %do.cond
  %25 = bitcast %struct._object** %temp to i8*, !dbg !8398
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !8398
  br label %if.end.13, !dbg !8399

if.end.13:                                        ; preds = %do.end, %land.lhs.true, %if.end.3
  %26 = load %struct._object*, %struct._object** %self, align 8, !dbg !8400, !tbaa !2563
  store %struct._object* %26, %struct._object** %retval, !dbg !8401
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8401

cleanup:                                          ; preds = %if.end.13, %if.then.2, %if.then
  %27 = bitcast %struct._object** %tzinfo to i8*, !dbg !8402
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !8402
  %28 = bitcast %struct._object** %timestamp to i8*, !dbg !8402
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !8402
  %29 = bitcast %struct._object** %self to i8*, !dbg !8402
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !8402
  %30 = load %struct._object*, %struct._object** %retval, !dbg !8402
  ret %struct._object* %30, !dbg !8402
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_utcfromtimestamp(%struct._object* %cls, %struct._object* %args) #0 {
entry:
  %cls.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %timestamp = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1259, metadata !2553), !dbg !8403
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1260, metadata !2553), !dbg !8404
  %0 = bitcast %struct._object** %timestamp to i8*, !dbg !8405
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8405
  call void @llvm.dbg.declare(metadata %struct._object** %timestamp, metadata !1261, metadata !2553), !dbg !8406
  %1 = bitcast %struct._object** %result to i8*, !dbg !8407
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8407
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1262, metadata !2553), !dbg !8408
  store %struct._object* null, %struct._object** %result, align 8, !dbg !8408, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8409, !tbaa !2563
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.145, i32 0, i32 0), %struct._object** %timestamp), !dbg !8411
  %tobool = icmp ne i32 %call, 0, !dbg !8411
  br i1 %tobool, label %if.then, label %if.end, !dbg !8412

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !8413, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %timestamp, align 8, !dbg !8414, !tbaa !2563
  %call1 = call %struct._object* @datetime_from_timestamp(%struct._object* %3, %struct.tm* (i64*)* @gmtime, %struct._object* %4, %struct._object* @_Py_NoneStruct), !dbg !8415
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !8416, !tbaa !2563
  br label %if.end, !dbg !8417

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !8418, !tbaa !2563
  %6 = bitcast %struct._object** %result to i8*, !dbg !8419
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !8419
  %7 = bitcast %struct._object** %timestamp to i8*, !dbg !8419
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !8419
  ret %struct._object* %5, !dbg !8420
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_strptime(%struct._object* %cls, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %cls.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %string = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1265, metadata !2553), !dbg !8421
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1266, metadata !2553), !dbg !8422
  %0 = bitcast %struct._object** %string to i8*, !dbg !8423
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8423
  call void @llvm.dbg.declare(metadata %struct._object** %string, metadata !1267, metadata !2553), !dbg !8424
  %1 = bitcast %struct._object** %format to i8*, !dbg !8423
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8423
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !1268, metadata !2553), !dbg !8425
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8426, !tbaa !2563
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.147, i32 0, i32 0), %struct._object** %string, %struct._object** %format), !dbg !8428
  %tobool = icmp ne i32 %call, 0, !dbg !8428
  br i1 %tobool, label %if.end, label %if.then, !dbg !8429

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8430
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8430

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** @datetime_strptime.module, align 8, !dbg !8431, !tbaa !2563
  %cmp = icmp eq %struct._object* %3, null, !dbg !8433
  br i1 %cmp, label %if.then.1, label %if.end.6, !dbg !8434

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._object* @PyImport_ImportModuleNoBlock(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i32 0, i32 0)), !dbg !8435
  store %struct._object* %call2, %struct._object** @datetime_strptime.module, align 8, !dbg !8437, !tbaa !2563
  %4 = load %struct._object*, %struct._object** @datetime_strptime.module, align 8, !dbg !8438, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %4, null, !dbg !8440
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !8441

if.then.4:                                        ; preds = %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8442
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8442

if.end.5:                                         ; preds = %if.then.1
  br label %if.end.6, !dbg !8443

if.end.6:                                         ; preds = %if.end.5, %if.end
  %5 = load %struct._object*, %struct._object** @datetime_strptime.module, align 8, !dbg !8444, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !8445, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %string, align 8, !dbg !8446, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %format, align 8, !dbg !8447, !tbaa !2563
  %call7 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %5, %struct._Py_Identifier* @datetime_strptime.PyId__strptime_datetime, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), %struct._object* %6, %struct._object* %7, %struct._object* %8), !dbg !8448
  store %struct._object* %call7, %struct._object** %retval, !dbg !8449
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8449

cleanup:                                          ; preds = %if.end.6, %if.then.4, %if.then
  %9 = bitcast %struct._object** %format to i8*, !dbg !8450
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !8450
  %10 = bitcast %struct._object** %string to i8*, !dbg !8450
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !8450
  %11 = load %struct._object*, %struct._object** %retval, !dbg !8450
  ret %struct._object* %11, !dbg !8450
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_combine(%struct._object* %cls, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %cls.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %date = alloca %struct._object*, align 8
  %time = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %tzinfo = alloca %struct._object*, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1271, metadata !2553), !dbg !8451
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1272, metadata !2553), !dbg !8452
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1273, metadata !2553), !dbg !8453
  %0 = bitcast %struct._object** %date to i8*, !dbg !8454
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8454
  call void @llvm.dbg.declare(metadata %struct._object** %date, metadata !1274, metadata !2553), !dbg !8455
  %1 = bitcast %struct._object** %time to i8*, !dbg !8456
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8456
  call void @llvm.dbg.declare(metadata %struct._object** %time, metadata !1275, metadata !2553), !dbg !8457
  %2 = bitcast %struct._object** %result to i8*, !dbg !8458
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8458
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1276, metadata !2553), !dbg !8459
  store %struct._object* null, %struct._object** %result, align 8, !dbg !8459, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8460, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !8461, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.150, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @datetime_combine.keywords, i32 0, i32 0), %struct._typeobject* @PyDateTime_DateType, %struct._object** %date, %struct._typeobject* @PyDateTime_TimeType, %struct._object** %time), !dbg !8462
  %tobool = icmp ne i32 %call, 0, !dbg !8462
  br i1 %tobool, label %if.then, label %if.end.36, !dbg !8463

if.then:                                          ; preds = %entry
  %5 = bitcast %struct._object** %tzinfo to i8*, !dbg !8464
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8464
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1277, metadata !2553), !dbg !8465
  store %struct._object* @_Py_NoneStruct, %struct._object** %tzinfo, align 8, !dbg !8465, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %time, align 8, !dbg !8466, !tbaa !2563
  %7 = bitcast %struct._object* %6 to %struct._PyDateTime_BaseTZInfo*, !dbg !8468
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %7, i32 0, i32 2, !dbg !8469
  %8 = load i8, i8* %hastzinfo, align 1, !dbg !8469, !tbaa !5575
  %tobool1 = icmp ne i8 %8, 0, !dbg !8470
  br i1 %tobool1, label %if.then.2, label %if.end, !dbg !8471

if.then.2:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** %time, align 8, !dbg !8472, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct.PyDateTime_Time*, !dbg !8473
  %tzinfo3 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %10, i32 0, i32 4, !dbg !8474
  %11 = load %struct._object*, %struct._object** %tzinfo3, align 8, !dbg !8474, !tbaa !3489
  store %struct._object* %11, %struct._object** %tzinfo, align 8, !dbg !8475, !tbaa !2563
  br label %if.end, !dbg !8476

if.end:                                           ; preds = %if.then.2, %if.then
  %12 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !8477, !tbaa !2563
  %13 = load %struct._object*, %struct._object** %date, align 8, !dbg !8478, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Date*, !dbg !8479
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %14, i32 0, i32 3, !dbg !8480
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !8481
  %15 = load i8, i8* %arrayidx, align 1, !dbg !8481, !tbaa !3415
  %conv = zext i8 %15 to i32, !dbg !8481
  %shl = shl i32 %conv, 8, !dbg !8482
  %16 = load %struct._object*, %struct._object** %date, align 8, !dbg !8483, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyDateTime_Date*, !dbg !8484
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %17, i32 0, i32 3, !dbg !8485
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 1, !dbg !8486
  %18 = load i8, i8* %arrayidx5, align 1, !dbg !8486, !tbaa !3415
  %conv6 = zext i8 %18 to i32, !dbg !8486
  %or = or i32 %shl, %conv6, !dbg !8487
  %19 = load %struct._object*, %struct._object** %date, align 8, !dbg !8488, !tbaa !2563
  %20 = bitcast %struct._object* %19 to %struct.PyDateTime_Date*, !dbg !8489
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %20, i32 0, i32 3, !dbg !8490
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 2, !dbg !8491
  %21 = load i8, i8* %arrayidx8, align 1, !dbg !8491, !tbaa !3415
  %conv9 = zext i8 %21 to i32, !dbg !8492
  %22 = load %struct._object*, %struct._object** %date, align 8, !dbg !8493, !tbaa !2563
  %23 = bitcast %struct._object* %22 to %struct.PyDateTime_Date*, !dbg !8494
  %data10 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %23, i32 0, i32 3, !dbg !8495
  %arrayidx11 = getelementptr [4 x i8], [4 x i8]* %data10, i32 0, i64 3, !dbg !8496
  %24 = load i8, i8* %arrayidx11, align 1, !dbg !8496, !tbaa !3415
  %conv12 = zext i8 %24 to i32, !dbg !8497
  %25 = load %struct._object*, %struct._object** %time, align 8, !dbg !8498, !tbaa !2563
  %26 = bitcast %struct._object* %25 to %struct.PyDateTime_Time*, !dbg !8499
  %data13 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %26, i32 0, i32 3, !dbg !8500
  %arrayidx14 = getelementptr [6 x i8], [6 x i8]* %data13, i32 0, i64 0, !dbg !8501
  %27 = load i8, i8* %arrayidx14, align 1, !dbg !8501, !tbaa !3415
  %conv15 = zext i8 %27 to i32, !dbg !8502
  %28 = load %struct._object*, %struct._object** %time, align 8, !dbg !8503, !tbaa !2563
  %29 = bitcast %struct._object* %28 to %struct.PyDateTime_Time*, !dbg !8504
  %data16 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %29, i32 0, i32 3, !dbg !8505
  %arrayidx17 = getelementptr [6 x i8], [6 x i8]* %data16, i32 0, i64 1, !dbg !8506
  %30 = load i8, i8* %arrayidx17, align 1, !dbg !8506, !tbaa !3415
  %conv18 = zext i8 %30 to i32, !dbg !8507
  %31 = load %struct._object*, %struct._object** %time, align 8, !dbg !8508, !tbaa !2563
  %32 = bitcast %struct._object* %31 to %struct.PyDateTime_Time*, !dbg !8509
  %data19 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %32, i32 0, i32 3, !dbg !8510
  %arrayidx20 = getelementptr [6 x i8], [6 x i8]* %data19, i32 0, i64 2, !dbg !8511
  %33 = load i8, i8* %arrayidx20, align 1, !dbg !8511, !tbaa !3415
  %conv21 = zext i8 %33 to i32, !dbg !8512
  %34 = load %struct._object*, %struct._object** %time, align 8, !dbg !8513, !tbaa !2563
  %35 = bitcast %struct._object* %34 to %struct.PyDateTime_Time*, !dbg !8514
  %data22 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %35, i32 0, i32 3, !dbg !8515
  %arrayidx23 = getelementptr [6 x i8], [6 x i8]* %data22, i32 0, i64 3, !dbg !8516
  %36 = load i8, i8* %arrayidx23, align 1, !dbg !8516, !tbaa !3415
  %conv24 = zext i8 %36 to i32, !dbg !8516
  %shl25 = shl i32 %conv24, 16, !dbg !8517
  %37 = load %struct._object*, %struct._object** %time, align 8, !dbg !8518, !tbaa !2563
  %38 = bitcast %struct._object* %37 to %struct.PyDateTime_Time*, !dbg !8519
  %data26 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %38, i32 0, i32 3, !dbg !8520
  %arrayidx27 = getelementptr [6 x i8], [6 x i8]* %data26, i32 0, i64 4, !dbg !8521
  %39 = load i8, i8* %arrayidx27, align 1, !dbg !8521, !tbaa !3415
  %conv28 = zext i8 %39 to i32, !dbg !8521
  %shl29 = shl i32 %conv28, 8, !dbg !8522
  %or30 = or i32 %shl25, %shl29, !dbg !8523
  %40 = load %struct._object*, %struct._object** %time, align 8, !dbg !8524, !tbaa !2563
  %41 = bitcast %struct._object* %40 to %struct.PyDateTime_Time*, !dbg !8525
  %data31 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %41, i32 0, i32 3, !dbg !8526
  %arrayidx32 = getelementptr [6 x i8], [6 x i8]* %data31, i32 0, i64 5, !dbg !8527
  %42 = load i8, i8* %arrayidx32, align 1, !dbg !8527, !tbaa !3415
  %conv33 = zext i8 %42 to i32, !dbg !8527
  %or34 = or i32 %or30, %conv33, !dbg !8528
  %43 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8529, !tbaa !2563
  %call35 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.142, i32 0, i32 0), i32 %or, i32 %conv9, i32 %conv12, i32 %conv15, i32 %conv18, i32 %conv21, i32 %or34, %struct._object* %43), !dbg !8530
  store %struct._object* %call35, %struct._object** %result, align 8, !dbg !8531, !tbaa !2563
  %44 = bitcast %struct._object** %tzinfo to i8*, !dbg !8532
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !8532
  br label %if.end.36, !dbg !8533

if.end.36:                                        ; preds = %if.end, %entry
  %45 = load %struct._object*, %struct._object** %result, align 8, !dbg !8534, !tbaa !2563
  %46 = bitcast %struct._object** %result to i8*, !dbg !8535
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !8535
  %47 = bitcast %struct._object** %time to i8*, !dbg !8535
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !8535
  %48 = bitcast %struct._object** %date to i8*, !dbg !8535
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !8535
  ret %struct._object* %45, !dbg !8536
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_getdate(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1282, metadata !2553), !dbg !8537
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8538, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_DateTime* %0 to %struct.PyDateTime_Date*, !dbg !8539
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %1, i32 0, i32 3, !dbg !8540
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !8541
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8541, !tbaa !3415
  %conv = zext i8 %2 to i32, !dbg !8541
  %shl = shl i32 %conv, 8, !dbg !8542
  %3 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8543, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_DateTime* %3 to %struct.PyDateTime_Date*, !dbg !8544
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !8545
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !8546
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !8546, !tbaa !3415
  %conv3 = zext i8 %5 to i32, !dbg !8546
  %or = or i32 %shl, %conv3, !dbg !8547
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8548, !tbaa !2563
  %7 = bitcast %struct.PyDateTime_DateTime* %6 to %struct.PyDateTime_Date*, !dbg !8549
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %7, i32 0, i32 3, !dbg !8550
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !8551
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !8551, !tbaa !3415
  %conv6 = zext i8 %8 to i32, !dbg !8552
  %9 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8553, !tbaa !2563
  %10 = bitcast %struct.PyDateTime_DateTime* %9 to %struct.PyDateTime_Date*, !dbg !8554
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %10, i32 0, i32 3, !dbg !8555
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !8556
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !8556, !tbaa !3415
  %conv9 = zext i8 %11 to i32, !dbg !8557
  %call = call %struct._object* @new_date_ex(i32 %or, i32 %conv6, i32 %conv9, %struct._typeobject* @PyDateTime_DateType), !dbg !8558
  ret %struct._object* %call, !dbg !8559
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_gettime(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1285, metadata !2553), !dbg !8560
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8561, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 3, !dbg !8562
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 4, !dbg !8563
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8563, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !8564
  %2 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8565, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %2, i32 0, i32 3, !dbg !8566
  %arrayidx2 = getelementptr [10 x i8], [10 x i8]* %data1, i32 0, i64 5, !dbg !8567
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !8567, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !8568
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8569, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 3, !dbg !8570
  %arrayidx5 = getelementptr [10 x i8], [10 x i8]* %data4, i32 0, i64 6, !dbg !8571
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !8571, !tbaa !3415
  %conv6 = zext i8 %5 to i32, !dbg !8572
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8573, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %6, i32 0, i32 3, !dbg !8574
  %arrayidx8 = getelementptr [10 x i8], [10 x i8]* %data7, i32 0, i64 7, !dbg !8575
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !8575, !tbaa !3415
  %conv9 = zext i8 %7 to i32, !dbg !8575
  %shl = shl i32 %conv9, 16, !dbg !8576
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8577, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %8, i32 0, i32 3, !dbg !8578
  %arrayidx11 = getelementptr [10 x i8], [10 x i8]* %data10, i32 0, i64 8, !dbg !8579
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !8579, !tbaa !3415
  %conv12 = zext i8 %9 to i32, !dbg !8579
  %shl13 = shl i32 %conv12, 8, !dbg !8580
  %or = or i32 %shl, %shl13, !dbg !8581
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8582, !tbaa !2563
  %data14 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %10, i32 0, i32 3, !dbg !8583
  %arrayidx15 = getelementptr [10 x i8], [10 x i8]* %data14, i32 0, i64 9, !dbg !8584
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !8584, !tbaa !3415
  %conv16 = zext i8 %11 to i32, !dbg !8584
  %or17 = or i32 %or, %conv16, !dbg !8585
  %call = call %struct._object* @new_time_ex(i32 %conv, i32 %conv3, i32 %conv6, i32 %or17, %struct._object* @_Py_NoneStruct, %struct._typeobject* @PyDateTime_TimeType), !dbg !8586
  ret %struct._object* %call, !dbg !8587
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_gettimetz(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1288, metadata !2553), !dbg !8588
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8589, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 3, !dbg !8590
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 4, !dbg !8591
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8591, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !8592
  %2 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8593, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %2, i32 0, i32 3, !dbg !8594
  %arrayidx2 = getelementptr [10 x i8], [10 x i8]* %data1, i32 0, i64 5, !dbg !8595
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !8595, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !8596
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8597, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 3, !dbg !8598
  %arrayidx5 = getelementptr [10 x i8], [10 x i8]* %data4, i32 0, i64 6, !dbg !8599
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !8599, !tbaa !3415
  %conv6 = zext i8 %5 to i32, !dbg !8600
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8601, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %6, i32 0, i32 3, !dbg !8602
  %arrayidx8 = getelementptr [10 x i8], [10 x i8]* %data7, i32 0, i64 7, !dbg !8603
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !8603, !tbaa !3415
  %conv9 = zext i8 %7 to i32, !dbg !8603
  %shl = shl i32 %conv9, 16, !dbg !8604
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8605, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %8, i32 0, i32 3, !dbg !8606
  %arrayidx11 = getelementptr [10 x i8], [10 x i8]* %data10, i32 0, i64 8, !dbg !8607
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !8607, !tbaa !3415
  %conv12 = zext i8 %9 to i32, !dbg !8607
  %shl13 = shl i32 %conv12, 8, !dbg !8608
  %or = or i32 %shl, %shl13, !dbg !8609
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8610, !tbaa !2563
  %data14 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %10, i32 0, i32 3, !dbg !8611
  %arrayidx15 = getelementptr [10 x i8], [10 x i8]* %data14, i32 0, i64 9, !dbg !8612
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !8612, !tbaa !3415
  %conv16 = zext i8 %11 to i32, !dbg !8612
  %or17 = or i32 %or, %conv16, !dbg !8613
  %12 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8614, !tbaa !2563
  %13 = bitcast %struct.PyDateTime_DateTime* %12 to %struct._PyDateTime_BaseTZInfo*, !dbg !8615
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %13, i32 0, i32 2, !dbg !8616
  %14 = load i8, i8* %hastzinfo, align 1, !dbg !8616, !tbaa !5575
  %conv18 = sext i8 %14 to i32, !dbg !8617
  %tobool = icmp ne i32 %conv18, 0, !dbg !8617
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8617

cond.true:                                        ; preds = %entry
  %15 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8618, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %15, i32 0, i32 4, !dbg !8620
  %16 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8620, !tbaa !3586
  br label %cond.end, !dbg !8617

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8621

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %16, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !8617
  %call = call %struct._object* @new_time_ex(i32 %conv, i32 %conv3, i32 %conv6, i32 %or17, %struct._object* %cond, %struct._typeobject* @PyDateTime_TimeType), !dbg !8623
  ret %struct._object* %call, !dbg !8626
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_ctime(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1291, metadata !2553), !dbg !8627
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8628, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_DateTime* %0 to %struct.PyDateTime_Date*, !dbg !8629
  %2 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8630, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %2, i32 0, i32 3, !dbg !8631
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 4, !dbg !8632
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8632, !tbaa !3415
  %conv = zext i8 %3 to i32, !dbg !8633
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8634, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 3, !dbg !8635
  %arrayidx2 = getelementptr [10 x i8], [10 x i8]* %data1, i32 0, i64 5, !dbg !8636
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !8636, !tbaa !3415
  %conv3 = zext i8 %5 to i32, !dbg !8637
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8638, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %6, i32 0, i32 3, !dbg !8639
  %arrayidx5 = getelementptr [10 x i8], [10 x i8]* %data4, i32 0, i64 6, !dbg !8640
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !8640, !tbaa !3415
  %conv6 = zext i8 %7 to i32, !dbg !8641
  %call = call %struct._object* @format_ctime(%struct.PyDateTime_Date* %1, i32 %conv, i32 %conv3, i32 %conv6), !dbg !8642
  ret %struct._object* %call, !dbg !8643
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_timetuple(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %dstflag = alloca i32, align 4
  %dst = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1294, metadata !2553), !dbg !8644
  %0 = bitcast i32* %dstflag to i8*, !dbg !8645
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8645
  call void @llvm.dbg.declare(metadata i32* %dstflag, metadata !1295, metadata !2553), !dbg !8646
  store i32 -1, i32* %dstflag, align 4, !dbg !8646, !tbaa !3325
  %1 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8647, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_DateTime* %1 to %struct._PyDateTime_BaseTZInfo*, !dbg !8648
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %2, i32 0, i32 2, !dbg !8649
  %3 = load i8, i8* %hastzinfo, align 1, !dbg !8649, !tbaa !5575
  %conv = sext i8 %3 to i32, !dbg !8650
  %tobool = icmp ne i32 %conv, 0, !dbg !8650
  br i1 %tobool, label %land.lhs.true, label %if.end.15, !dbg !8651

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8652, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !8654
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8654, !tbaa !3586
  %cmp = icmp ne %struct._object* %5, @_Py_NoneStruct, !dbg !8655
  br i1 %cmp, label %if.then, label %if.end.15, !dbg !8656

if.then:                                          ; preds = %land.lhs.true
  %6 = bitcast %struct._object** %dst to i8*, !dbg !8657
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8657
  call void @llvm.dbg.declare(metadata %struct._object** %dst, metadata !1296, metadata !2553), !dbg !8658
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8659, !tbaa !2563
  %tzinfo2 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %7, i32 0, i32 4, !dbg !8660
  %8 = load %struct._object*, %struct._object** %tzinfo2, align 8, !dbg !8660, !tbaa !3586
  %9 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8661, !tbaa !2563
  %10 = bitcast %struct.PyDateTime_DateTime* %9 to %struct._object*, !dbg !8662
  %call = call %struct._object* @call_dst(%struct._object* %8, %struct._object* %10), !dbg !8663
  store %struct._object* %call, %struct._object** %dst, align 8, !dbg !8664, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %dst, align 8, !dbg !8665, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %11, null, !dbg !8667
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !8668

if.then.5:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !8669
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8669

if.end:                                           ; preds = %if.then
  %12 = load %struct._object*, %struct._object** %dst, align 8, !dbg !8670, !tbaa !2563
  %cmp6 = icmp ne %struct._object* %12, @_Py_NoneStruct, !dbg !8672
  br i1 %cmp6, label %if.then.8, label %if.end.10, !dbg !8673

if.then.8:                                        ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %dst, align 8, !dbg !8674, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Delta*, !dbg !8675
  %call9 = call i32 @delta_bool(%struct.PyDateTime_Delta* %14), !dbg !8676
  store i32 %call9, i32* %dstflag, align 4, !dbg !8677, !tbaa !3325
  br label %if.end.10, !dbg !8678

if.end.10:                                        ; preds = %if.then.8, %if.end
  br label %do.body, !dbg !8679

do.body:                                          ; preds = %if.end.10
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8680
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !8680
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1299, metadata !2553), !dbg !8682
  %16 = load %struct._object*, %struct._object** %dst, align 8, !dbg !8683, !tbaa !2563
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !8682, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8684, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !8686
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !8687, !tbaa !2632
  %dec = add i64 %18, -1, !dbg !8687
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8687, !tbaa !2632
  %cmp11 = icmp ne i64 %dec, 0, !dbg !8688
  br i1 %cmp11, label %if.then.13, label %if.else, !dbg !8689

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !8690

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8692, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !8694
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8694, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !8695
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8695, !tbaa !2642
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8696, !tbaa !2563
  call void %21(%struct._object* %22), !dbg !8697
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8698
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !8698
  br label %do.cond, !dbg !8700

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !8701

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !8703
  br label %cleanup, !dbg !8703

cleanup:                                          ; preds = %do.end, %if.then.5
  %24 = bitcast %struct._object** %dst to i8*, !dbg !8704
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !8704
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.36 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.15, !dbg !8705

if.end.15:                                        ; preds = %cleanup.cont, %land.lhs.true, %entry
  %25 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8706, !tbaa !2563
  %26 = bitcast %struct.PyDateTime_DateTime* %25 to %struct.PyDateTime_Date*, !dbg !8707
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %26, i32 0, i32 3, !dbg !8708
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !8709
  %27 = load i8, i8* %arrayidx, align 1, !dbg !8709, !tbaa !3415
  %conv16 = zext i8 %27 to i32, !dbg !8709
  %shl = shl i32 %conv16, 8, !dbg !8710
  %28 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8711, !tbaa !2563
  %29 = bitcast %struct.PyDateTime_DateTime* %28 to %struct.PyDateTime_Date*, !dbg !8712
  %data17 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %29, i32 0, i32 3, !dbg !8713
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %data17, i32 0, i64 1, !dbg !8714
  %30 = load i8, i8* %arrayidx18, align 1, !dbg !8714, !tbaa !3415
  %conv19 = zext i8 %30 to i32, !dbg !8714
  %or = or i32 %shl, %conv19, !dbg !8715
  %31 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8716, !tbaa !2563
  %32 = bitcast %struct.PyDateTime_DateTime* %31 to %struct.PyDateTime_Date*, !dbg !8717
  %data20 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %32, i32 0, i32 3, !dbg !8718
  %arrayidx21 = getelementptr [4 x i8], [4 x i8]* %data20, i32 0, i64 2, !dbg !8719
  %33 = load i8, i8* %arrayidx21, align 1, !dbg !8719, !tbaa !3415
  %conv22 = zext i8 %33 to i32, !dbg !8720
  %34 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8721, !tbaa !2563
  %35 = bitcast %struct.PyDateTime_DateTime* %34 to %struct.PyDateTime_Date*, !dbg !8722
  %data23 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %35, i32 0, i32 3, !dbg !8723
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %data23, i32 0, i64 3, !dbg !8724
  %36 = load i8, i8* %arrayidx24, align 1, !dbg !8724, !tbaa !3415
  %conv25 = zext i8 %36 to i32, !dbg !8725
  %37 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8726, !tbaa !2563
  %data26 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %37, i32 0, i32 3, !dbg !8727
  %arrayidx27 = getelementptr [10 x i8], [10 x i8]* %data26, i32 0, i64 4, !dbg !8728
  %38 = load i8, i8* %arrayidx27, align 1, !dbg !8728, !tbaa !3415
  %conv28 = zext i8 %38 to i32, !dbg !8729
  %39 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8730, !tbaa !2563
  %data29 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %39, i32 0, i32 3, !dbg !8731
  %arrayidx30 = getelementptr [10 x i8], [10 x i8]* %data29, i32 0, i64 5, !dbg !8732
  %40 = load i8, i8* %arrayidx30, align 1, !dbg !8732, !tbaa !3415
  %conv31 = zext i8 %40 to i32, !dbg !8733
  %41 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8734, !tbaa !2563
  %data32 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %41, i32 0, i32 3, !dbg !8735
  %arrayidx33 = getelementptr [10 x i8], [10 x i8]* %data32, i32 0, i64 6, !dbg !8736
  %42 = load i8, i8* %arrayidx33, align 1, !dbg !8736, !tbaa !3415
  %conv34 = zext i8 %42 to i32, !dbg !8737
  %43 = load i32, i32* %dstflag, align 4, !dbg !8738, !tbaa !3325
  %call35 = call %struct._object* @build_struct_time(i32 %or, i32 %conv22, i32 %conv25, i32 %conv28, i32 %conv31, i32 %conv34, i32 %43), !dbg !8739
  store %struct._object* %call35, %struct._object** %retval, !dbg !8740
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !8740

cleanup.36:                                       ; preds = %if.end.15, %cleanup
  %44 = bitcast i32* %dstflag to i8*, !dbg !8741
  call void @llvm.lifetime.end(i64 4, i8* %44) #1, !dbg !8741
  %45 = load %struct._object*, %struct._object** %retval, !dbg !8741
  ret %struct._object* %45, !dbg !8741
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_timestamp(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %result = alloca %struct._object*, align 8
  %delta = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %time = alloca %struct.tm, align 8
  %timestamp = alloca i64, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1312, metadata !2553), !dbg !8742
  %0 = bitcast %struct._object** %result to i8*, !dbg !8743
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8743
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1313, metadata !2553), !dbg !8744
  %1 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8745, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_DateTime* %1 to %struct._PyDateTime_BaseTZInfo*, !dbg !8746
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %2, i32 0, i32 2, !dbg !8747
  %3 = load i8, i8* %hastzinfo, align 1, !dbg !8747, !tbaa !5575
  %conv = sext i8 %3 to i32, !dbg !8748
  %tobool = icmp ne i32 %conv, 0, !dbg !8748
  br i1 %tobool, label %land.lhs.true, label %if.else.10, !dbg !8749

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8750, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !8752
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8752, !tbaa !3586
  %cmp = icmp ne %struct._object* %5, @_Py_NoneStruct, !dbg !8753
  br i1 %cmp, label %if.then, label %if.else.10, !dbg !8754

if.then:                                          ; preds = %land.lhs.true
  %6 = bitcast %struct._object** %delta to i8*, !dbg !8755
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8755
  call void @llvm.dbg.declare(metadata %struct._object** %delta, metadata !1314, metadata !2553), !dbg !8756
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8757, !tbaa !2563
  %8 = bitcast %struct.PyDateTime_DateTime* %7 to %struct._object*, !dbg !8758
  %9 = load %struct._object*, %struct._object** @PyDateTime_Epoch, align 8, !dbg !8759, !tbaa !2563
  %call = call %struct._object* @datetime_subtract(%struct._object* %8, %struct._object* %9), !dbg !8760
  store %struct._object* %call, %struct._object** %delta, align 8, !dbg !8761, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %delta, align 8, !dbg !8762, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %10, null, !dbg !8764
  br i1 %cmp2, label %if.then.4, label %if.end, !dbg !8765

if.then.4:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !8766
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8766

if.end:                                           ; preds = %if.then
  %11 = load %struct._object*, %struct._object** %delta, align 8, !dbg !8767, !tbaa !2563
  %call5 = call %struct._object* @delta_total_seconds(%struct._object* %11), !dbg !8768
  store %struct._object* %call5, %struct._object** %result, align 8, !dbg !8769, !tbaa !2563
  br label %do.body, !dbg !8770

do.body:                                          ; preds = %if.end
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8771
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !8771
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1317, metadata !2553), !dbg !8773
  %13 = load %struct._object*, %struct._object** %delta, align 8, !dbg !8774, !tbaa !2563
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !8773, !tbaa !2563
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8775, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !8777
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !8778, !tbaa !2632
  %dec = add i64 %15, -1, !dbg !8778
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8778, !tbaa !2632
  %cmp6 = icmp ne i64 %dec, 0, !dbg !8779
  br i1 %cmp6, label %if.then.8, label %if.else, !dbg !8780

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !8781

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8783, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8785
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8785, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !8786
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8786, !tbaa !2642
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8787, !tbaa !2563
  call void %18(%struct._object* %19), !dbg !8788
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8789
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !8789
  br label %do.cond, !dbg !8791

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !8792

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !8794
  br label %cleanup, !dbg !8794

cleanup:                                          ; preds = %do.end, %if.then.4
  %21 = bitcast %struct._object** %delta to i8*, !dbg !8795
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !8795
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.61 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.60, !dbg !8796

if.else.10:                                       ; preds = %land.lhs.true, %entry
  %22 = bitcast %struct.tm* %time to i8*, !dbg !8797
  call void @llvm.lifetime.start(i64 56, i8* %22) #1, !dbg !8797
  call void @llvm.dbg.declare(metadata %struct.tm* %time, metadata !1319, metadata !2553), !dbg !8798
  %23 = bitcast i64* %timestamp to i8*, !dbg !8799
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !8799
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !1321, metadata !2553), !dbg !8800
  %24 = bitcast %struct.tm* %time to i8*, !dbg !8801
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 56, i32 1, i1 false), !dbg !8802
  %25 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8803, !tbaa !2563
  %26 = bitcast %struct.PyDateTime_DateTime* %25 to %struct.PyDateTime_Date*, !dbg !8804
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %26, i32 0, i32 3, !dbg !8805
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !8806
  %27 = load i8, i8* %arrayidx, align 1, !dbg !8806, !tbaa !3415
  %conv11 = zext i8 %27 to i32, !dbg !8806
  %shl = shl i32 %conv11, 8, !dbg !8807
  %28 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8808, !tbaa !2563
  %29 = bitcast %struct.PyDateTime_DateTime* %28 to %struct.PyDateTime_Date*, !dbg !8809
  %data12 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %29, i32 0, i32 3, !dbg !8810
  %arrayidx13 = getelementptr [4 x i8], [4 x i8]* %data12, i32 0, i64 1, !dbg !8811
  %30 = load i8, i8* %arrayidx13, align 1, !dbg !8811, !tbaa !3415
  %conv14 = zext i8 %30 to i32, !dbg !8811
  %or = or i32 %shl, %conv14, !dbg !8812
  %sub = sub i32 %or, 1900, !dbg !8813
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 5, !dbg !8814
  store i32 %sub, i32* %tm_year, align 4, !dbg !8815, !tbaa !4928
  %31 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8816, !tbaa !2563
  %32 = bitcast %struct.PyDateTime_DateTime* %31 to %struct.PyDateTime_Date*, !dbg !8817
  %data15 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %32, i32 0, i32 3, !dbg !8818
  %arrayidx16 = getelementptr [4 x i8], [4 x i8]* %data15, i32 0, i64 2, !dbg !8819
  %33 = load i8, i8* %arrayidx16, align 1, !dbg !8819, !tbaa !3415
  %conv17 = zext i8 %33 to i32, !dbg !8820
  %sub18 = sub i32 %conv17, 1, !dbg !8821
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 4, !dbg !8822
  store i32 %sub18, i32* %tm_mon, align 4, !dbg !8823, !tbaa !4933
  %34 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8824, !tbaa !2563
  %35 = bitcast %struct.PyDateTime_DateTime* %34 to %struct.PyDateTime_Date*, !dbg !8825
  %data19 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %35, i32 0, i32 3, !dbg !8826
  %arrayidx20 = getelementptr [4 x i8], [4 x i8]* %data19, i32 0, i64 3, !dbg !8827
  %36 = load i8, i8* %arrayidx20, align 1, !dbg !8827, !tbaa !3415
  %conv21 = zext i8 %36 to i32, !dbg !8828
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 3, !dbg !8829
  store i32 %conv21, i32* %tm_mday, align 4, !dbg !8830, !tbaa !4937
  %37 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8831, !tbaa !2563
  %data22 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %37, i32 0, i32 3, !dbg !8832
  %arrayidx23 = getelementptr [10 x i8], [10 x i8]* %data22, i32 0, i64 4, !dbg !8833
  %38 = load i8, i8* %arrayidx23, align 1, !dbg !8833, !tbaa !3415
  %conv24 = zext i8 %38 to i32, !dbg !8834
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 2, !dbg !8835
  store i32 %conv24, i32* %tm_hour, align 4, !dbg !8836, !tbaa !8837
  %39 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8838, !tbaa !2563
  %data25 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %39, i32 0, i32 3, !dbg !8839
  %arrayidx26 = getelementptr [10 x i8], [10 x i8]* %data25, i32 0, i64 5, !dbg !8840
  %40 = load i8, i8* %arrayidx26, align 1, !dbg !8840, !tbaa !3415
  %conv27 = zext i8 %40 to i32, !dbg !8841
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 1, !dbg !8842
  store i32 %conv27, i32* %tm_min, align 4, !dbg !8843, !tbaa !8844
  %41 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8845, !tbaa !2563
  %data28 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %41, i32 0, i32 3, !dbg !8846
  %arrayidx29 = getelementptr [10 x i8], [10 x i8]* %data28, i32 0, i64 6, !dbg !8847
  %42 = load i8, i8* %arrayidx29, align 1, !dbg !8847, !tbaa !3415
  %conv30 = zext i8 %42 to i32, !dbg !8848
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 0, !dbg !8849
  store i32 %conv30, i32* %tm_sec, align 4, !dbg !8850, !tbaa !8851
  %tm_wday = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 6, !dbg !8852
  store i32 -1, i32* %tm_wday, align 4, !dbg !8853, !tbaa !8854
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 8, !dbg !8855
  store i32 -1, i32* %tm_isdst, align 4, !dbg !8856, !tbaa !8857
  %call31 = call i64 @mktime(%struct.tm* %time) #1, !dbg !8858
  store i64 %call31, i64* %timestamp, align 8, !dbg !8859, !tbaa !5078
  %43 = load i64, i64* %timestamp, align 8, !dbg !8860, !tbaa !5078
  %cmp32 = icmp eq i64 %43, -1, !dbg !8862
  br i1 %cmp32, label %land.lhs.true.34, label %if.end.39, !dbg !8863

land.lhs.true.34:                                 ; preds = %if.else.10
  %tm_wday35 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 6, !dbg !8864
  %44 = load i32, i32* %tm_wday35, align 4, !dbg !8864, !tbaa !8854
  %cmp36 = icmp eq i32 %44, -1, !dbg !8866
  br i1 %cmp36, label %if.then.38, label %if.end.39, !dbg !8867

if.then.38:                                       ; preds = %land.lhs.true.34
  %45 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !8868, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i32 0, i32 0)), !dbg !8870
  store %struct._object* null, %struct._object** %retval, !dbg !8871
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !8871

if.end.39:                                        ; preds = %land.lhs.true.34, %if.else.10
  %46 = load i64, i64* %timestamp, align 8, !dbg !8872, !tbaa !5078
  %conv40 = sitofp i64 %46 to double, !dbg !8872
  %47 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8873, !tbaa !2563
  %data41 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %47, i32 0, i32 3, !dbg !8874
  %arrayidx42 = getelementptr [10 x i8], [10 x i8]* %data41, i32 0, i64 7, !dbg !8875
  %48 = load i8, i8* %arrayidx42, align 1, !dbg !8875, !tbaa !3415
  %conv43 = zext i8 %48 to i32, !dbg !8875
  %shl44 = shl i32 %conv43, 16, !dbg !8876
  %49 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8877, !tbaa !2563
  %data45 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %49, i32 0, i32 3, !dbg !8878
  %arrayidx46 = getelementptr [10 x i8], [10 x i8]* %data45, i32 0, i64 8, !dbg !8879
  %50 = load i8, i8* %arrayidx46, align 1, !dbg !8879, !tbaa !3415
  %conv47 = zext i8 %50 to i32, !dbg !8879
  %shl48 = shl i32 %conv47, 8, !dbg !8880
  %or49 = or i32 %shl44, %shl48, !dbg !8881
  %51 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8882, !tbaa !2563
  %data50 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %51, i32 0, i32 3, !dbg !8883
  %arrayidx51 = getelementptr [10 x i8], [10 x i8]* %data50, i32 0, i64 9, !dbg !8884
  %52 = load i8, i8* %arrayidx51, align 1, !dbg !8884, !tbaa !3415
  %conv52 = zext i8 %52 to i32, !dbg !8884
  %or53 = or i32 %or49, %conv52, !dbg !8885
  %conv54 = sitofp i32 %or53 to double, !dbg !8886
  %div = fdiv double %conv54, 1.000000e+06, !dbg !8887
  %add = fadd double %conv40, %div, !dbg !8888
  %call55 = call %struct._object* @PyFloat_FromDouble(double %add), !dbg !8889
  store %struct._object* %call55, %struct._object** %result, align 8, !dbg !8890, !tbaa !2563
  store i32 0, i32* %cleanup.dest.slot, !dbg !8891
  br label %cleanup.56, !dbg !8891

cleanup.56:                                       ; preds = %if.end.39, %if.then.38
  %53 = bitcast i64* %timestamp to i8*, !dbg !8892
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !8892
  %54 = bitcast %struct.tm* %time to i8*, !dbg !8892
  call void @llvm.lifetime.end(i64 56, i8* %54) #1, !dbg !8892
  %cleanup.dest.58 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.58, label %cleanup.61 [
    i32 0, label %cleanup.cont.59
  ]

cleanup.cont.59:                                  ; preds = %cleanup.56
  br label %if.end.60

if.end.60:                                        ; preds = %cleanup.cont.59, %cleanup.cont
  %55 = load %struct._object*, %struct._object** %result, align 8, !dbg !8893, !tbaa !2563
  store %struct._object* %55, %struct._object** %retval, !dbg !8894
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.61, !dbg !8894

cleanup.61:                                       ; preds = %if.end.60, %cleanup.56, %cleanup
  %56 = bitcast %struct._object** %result to i8*, !dbg !8895
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !8895
  %57 = load %struct._object*, %struct._object** %retval, !dbg !8895
  ret %struct._object* %57, !dbg !8895
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_utctimetuple(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %y = alloca i32, align 4
  %m = alloca i32, align 4
  %d = alloca i32, align 4
  %hh = alloca i32, align 4
  %mm = alloca i32, align 4
  %ss = alloca i32, align 4
  %tzinfo = alloca %struct._object*, align 8
  %utcself = alloca %struct.PyDateTime_DateTime*, align 8
  %offset = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp58 = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1361, metadata !2553), !dbg !8896
  %0 = bitcast i32* %y to i8*, !dbg !8897
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1362, metadata !2553), !dbg !8898
  %1 = bitcast i32* %m to i8*, !dbg !8897
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %m, metadata !1363, metadata !2553), !dbg !8899
  %2 = bitcast i32* %d to i8*, !dbg !8897
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %d, metadata !1364, metadata !2553), !dbg !8900
  %3 = bitcast i32* %hh to i8*, !dbg !8897
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %hh, metadata !1365, metadata !2553), !dbg !8901
  %4 = bitcast i32* %mm to i8*, !dbg !8897
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %mm, metadata !1366, metadata !2553), !dbg !8902
  %5 = bitcast i32* %ss to i8*, !dbg !8897
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %ss, metadata !1367, metadata !2553), !dbg !8903
  %6 = bitcast %struct._object** %tzinfo to i8*, !dbg !8904
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8904
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1368, metadata !2553), !dbg !8905
  %7 = bitcast %struct.PyDateTime_DateTime** %utcself to i8*, !dbg !8906
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !8906
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %utcself, metadata !1369, metadata !2553), !dbg !8907
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8908, !tbaa !2563
  %9 = bitcast %struct.PyDateTime_DateTime* %8 to %struct._PyDateTime_BaseTZInfo*, !dbg !8909
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %9, i32 0, i32 2, !dbg !8910
  %10 = load i8, i8* %hastzinfo, align 1, !dbg !8910, !tbaa !5575
  %conv = sext i8 %10 to i32, !dbg !8911
  %tobool = icmp ne i32 %conv, 0, !dbg !8911
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8911

cond.true:                                        ; preds = %entry
  %11 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8912, !tbaa !2563
  %tzinfo1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %11, i32 0, i32 4, !dbg !8914
  %12 = load %struct._object*, %struct._object** %tzinfo1, align 8, !dbg !8914, !tbaa !3586
  br label %cond.end, !dbg !8911

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8915

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %12, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !8911
  store %struct._object* %cond, %struct._object** %tzinfo, align 8, !dbg !8917, !tbaa !2563
  %13 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8920, !tbaa !2563
  %cmp = icmp eq %struct._object* %13, @_Py_NoneStruct, !dbg !8921
  br i1 %cmp, label %if.then, label %if.else, !dbg !8922

if.then:                                          ; preds = %cond.end
  %14 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8923, !tbaa !2563
  store %struct.PyDateTime_DateTime* %14, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !8925, !tbaa !2563
  %15 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !8926, !tbaa !2563
  %16 = bitcast %struct.PyDateTime_DateTime* %15 to %struct._object*, !dbg !8927
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !8928
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !8929, !tbaa !2632
  %inc = add i64 %17, 1, !dbg !8929
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8929, !tbaa !2632
  br label %if.end.37, !dbg !8930

if.else:                                          ; preds = %cond.end
  %18 = bitcast %struct._object** %offset to i8*, !dbg !8931
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !8931
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !1370, metadata !2553), !dbg !8932
  %19 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !8933, !tbaa !2563
  %20 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8934, !tbaa !2563
  %21 = bitcast %struct.PyDateTime_DateTime* %20 to %struct._object*, !dbg !8935
  %call = call %struct._object* @call_utcoffset(%struct._object* %19, %struct._object* %21), !dbg !8936
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !8937, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %offset, align 8, !dbg !8938, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %22, null, !dbg !8940
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !8941

if.then.5:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !8942
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8942

if.end:                                           ; preds = %if.else
  %23 = load %struct._object*, %struct._object** %offset, align 8, !dbg !8943, !tbaa !2563
  %cmp6 = icmp eq %struct._object* %23, @_Py_NoneStruct, !dbg !8944
  br i1 %cmp6, label %if.then.8, label %if.else.17, !dbg !8945

if.then.8:                                        ; preds = %if.end
  br label %do.body, !dbg !8946

do.body:                                          ; preds = %if.then.8
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8947
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !8947
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1373, metadata !2553), !dbg !8949
  %25 = load %struct._object*, %struct._object** %offset, align 8, !dbg !8950, !tbaa !2563
  store %struct._object* %25, %struct._object** %_py_decref_tmp, align 8, !dbg !8949, !tbaa !2563
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8951, !tbaa !2563
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !8953
  %27 = load i64, i64* %ob_refcnt9, align 8, !dbg !8954, !tbaa !2632
  %dec = add i64 %27, -1, !dbg !8954
  store i64 %dec, i64* %ob_refcnt9, align 8, !dbg !8954, !tbaa !2632
  %cmp10 = icmp ne i64 %dec, 0, !dbg !8955
  br i1 %cmp10, label %if.then.12, label %if.else.13, !dbg !8956

if.then.12:                                       ; preds = %do.body
  br label %if.end.14, !dbg !8957

if.else.13:                                       ; preds = %do.body
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8959, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !8961
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8961, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !8962
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8962, !tbaa !2642
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8963, !tbaa !2563
  call void %30(%struct._object* %31), !dbg !8964
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.13, %if.then.12
  %32 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8965
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !8965
  br label %do.cond, !dbg !8967

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !8968

do.end:                                           ; preds = %do.cond
  %33 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8970, !tbaa !2563
  store %struct.PyDateTime_DateTime* %33, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !8971, !tbaa !2563
  %34 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !8972, !tbaa !2563
  %35 = bitcast %struct.PyDateTime_DateTime* %34 to %struct._object*, !dbg !8973
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !8974
  %36 = load i64, i64* %ob_refcnt15, align 8, !dbg !8975, !tbaa !2632
  %inc16 = add i64 %36, 1, !dbg !8975
  store i64 %inc16, i64* %ob_refcnt15, align 8, !dbg !8975, !tbaa !2632
  br label %if.end.36, !dbg !8976

if.else.17:                                       ; preds = %if.end
  %37 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !8977, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %offset, align 8, !dbg !8978, !tbaa !2563
  %39 = bitcast %struct._object* %38 to %struct.PyDateTime_Delta*, !dbg !8979
  %call18 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %37, %struct.PyDateTime_Delta* %39, i32 -1), !dbg !8980
  %40 = bitcast %struct._object* %call18 to %struct.PyDateTime_DateTime*, !dbg !8981
  store %struct.PyDateTime_DateTime* %40, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !8982, !tbaa !2563
  br label %do.body.19, !dbg !8983

do.body.19:                                       ; preds = %if.else.17
  %41 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !8984
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !8984
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp20, metadata !1377, metadata !2553), !dbg !8986
  %42 = load %struct._object*, %struct._object** %offset, align 8, !dbg !8987, !tbaa !2563
  store %struct._object* %42, %struct._object** %_py_decref_tmp20, align 8, !dbg !8986, !tbaa !2563
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !8988, !tbaa !2563
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !8990
  %44 = load i64, i64* %ob_refcnt21, align 8, !dbg !8991, !tbaa !2632
  %dec22 = add i64 %44, -1, !dbg !8991
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !8991, !tbaa !2632
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !8992
  br i1 %cmp23, label %if.then.25, label %if.else.26, !dbg !8993

if.then.25:                                       ; preds = %do.body.19
  br label %if.end.29, !dbg !8994

if.else.26:                                       ; preds = %do.body.19
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !8996, !tbaa !2563
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !8998
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !8998, !tbaa !2640
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !8999
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !8999, !tbaa !2642
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9000, !tbaa !2563
  call void %47(%struct._object* %48), !dbg !9001
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %49 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !9002
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !9002
  br label %do.cond.30, !dbg !9004

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !9005

do.end.31:                                        ; preds = %do.cond.30
  %50 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9007, !tbaa !2563
  %cmp32 = icmp eq %struct.PyDateTime_DateTime* %50, null, !dbg !9009
  br i1 %cmp32, label %if.then.34, label %if.end.35, !dbg !9010

if.then.34:                                       ; preds = %do.end.31
  store %struct._object* null, %struct._object** %retval, !dbg !9011
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9011

if.end.35:                                        ; preds = %do.end.31
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %do.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !9012
  br label %cleanup, !dbg !9012

cleanup:                                          ; preds = %if.end.36, %if.then.34, %if.then.5
  %51 = bitcast %struct._object** %offset to i8*, !dbg !9013
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !9013
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.71 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.37

if.end.37:                                        ; preds = %cleanup.cont, %if.then
  %52 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9015, !tbaa !2563
  %53 = bitcast %struct.PyDateTime_DateTime* %52 to %struct.PyDateTime_Date*, !dbg !9016
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %53, i32 0, i32 3, !dbg !9017
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !9018
  %54 = load i8, i8* %arrayidx, align 1, !dbg !9018, !tbaa !3415
  %conv38 = zext i8 %54 to i32, !dbg !9018
  %shl = shl i32 %conv38, 8, !dbg !9019
  %55 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9020, !tbaa !2563
  %56 = bitcast %struct.PyDateTime_DateTime* %55 to %struct.PyDateTime_Date*, !dbg !9021
  %data39 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %56, i32 0, i32 3, !dbg !9022
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %data39, i32 0, i64 1, !dbg !9023
  %57 = load i8, i8* %arrayidx40, align 1, !dbg !9023, !tbaa !3415
  %conv41 = zext i8 %57 to i32, !dbg !9023
  %or = or i32 %shl, %conv41, !dbg !9024
  store i32 %or, i32* %y, align 4, !dbg !9025, !tbaa !3325
  %58 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9026, !tbaa !2563
  %59 = bitcast %struct.PyDateTime_DateTime* %58 to %struct.PyDateTime_Date*, !dbg !9027
  %data42 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %59, i32 0, i32 3, !dbg !9028
  %arrayidx43 = getelementptr [4 x i8], [4 x i8]* %data42, i32 0, i64 2, !dbg !9029
  %60 = load i8, i8* %arrayidx43, align 1, !dbg !9029, !tbaa !3415
  %conv44 = zext i8 %60 to i32, !dbg !9030
  store i32 %conv44, i32* %m, align 4, !dbg !9031, !tbaa !3325
  %61 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9032, !tbaa !2563
  %62 = bitcast %struct.PyDateTime_DateTime* %61 to %struct.PyDateTime_Date*, !dbg !9033
  %data45 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %62, i32 0, i32 3, !dbg !9034
  %arrayidx46 = getelementptr [4 x i8], [4 x i8]* %data45, i32 0, i64 3, !dbg !9035
  %63 = load i8, i8* %arrayidx46, align 1, !dbg !9035, !tbaa !3415
  %conv47 = zext i8 %63 to i32, !dbg !9036
  store i32 %conv47, i32* %d, align 4, !dbg !9037, !tbaa !3325
  %64 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9038, !tbaa !2563
  %data48 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %64, i32 0, i32 3, !dbg !9039
  %arrayidx49 = getelementptr [10 x i8], [10 x i8]* %data48, i32 0, i64 4, !dbg !9040
  %65 = load i8, i8* %arrayidx49, align 1, !dbg !9040, !tbaa !3415
  %conv50 = zext i8 %65 to i32, !dbg !9041
  store i32 %conv50, i32* %hh, align 4, !dbg !9042, !tbaa !3325
  %66 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9043, !tbaa !2563
  %data51 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %66, i32 0, i32 3, !dbg !9044
  %arrayidx52 = getelementptr [10 x i8], [10 x i8]* %data51, i32 0, i64 5, !dbg !9045
  %67 = load i8, i8* %arrayidx52, align 1, !dbg !9045, !tbaa !3415
  %conv53 = zext i8 %67 to i32, !dbg !9046
  store i32 %conv53, i32* %mm, align 4, !dbg !9047, !tbaa !3325
  %68 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9048, !tbaa !2563
  %data54 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %68, i32 0, i32 3, !dbg !9049
  %arrayidx55 = getelementptr [10 x i8], [10 x i8]* %data54, i32 0, i64 6, !dbg !9050
  %69 = load i8, i8* %arrayidx55, align 1, !dbg !9050, !tbaa !3415
  %conv56 = zext i8 %69 to i32, !dbg !9051
  store i32 %conv56, i32* %ss, align 4, !dbg !9052, !tbaa !3325
  br label %do.body.57, !dbg !9053

do.body.57:                                       ; preds = %if.end.37
  %70 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !9054
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !9054
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp58, metadata !1380, metadata !2553), !dbg !9056
  %71 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utcself, align 8, !dbg !9057, !tbaa !2563
  %72 = bitcast %struct.PyDateTime_DateTime* %71 to %struct._object*, !dbg !9058
  store %struct._object* %72, %struct._object** %_py_decref_tmp58, align 8, !dbg !9056, !tbaa !2563
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !9059, !tbaa !2563
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !9061
  %74 = load i64, i64* %ob_refcnt59, align 8, !dbg !9062, !tbaa !2632
  %dec60 = add i64 %74, -1, !dbg !9062
  store i64 %dec60, i64* %ob_refcnt59, align 8, !dbg !9062, !tbaa !2632
  %cmp61 = icmp ne i64 %dec60, 0, !dbg !9063
  br i1 %cmp61, label %if.then.63, label %if.else.64, !dbg !9064

if.then.63:                                       ; preds = %do.body.57
  br label %if.end.67, !dbg !9065

if.else.64:                                       ; preds = %do.body.57
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !9067, !tbaa !2563
  %ob_type65 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1, !dbg !9069
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type65, align 8, !dbg !9069, !tbaa !2640
  %tp_dealloc66 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4, !dbg !9070
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66, align 8, !dbg !9070, !tbaa !2642
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !9071, !tbaa !2563
  call void %77(%struct._object* %78), !dbg !9072
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.64, %if.then.63
  %79 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !9073
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !9073
  br label %do.cond.68, !dbg !9075

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !9076

do.end.69:                                        ; preds = %do.cond.68
  %80 = load i32, i32* %y, align 4, !dbg !9078, !tbaa !3325
  %81 = load i32, i32* %m, align 4, !dbg !9079, !tbaa !3325
  %82 = load i32, i32* %d, align 4, !dbg !9080, !tbaa !3325
  %83 = load i32, i32* %hh, align 4, !dbg !9081, !tbaa !3325
  %84 = load i32, i32* %mm, align 4, !dbg !9082, !tbaa !3325
  %85 = load i32, i32* %ss, align 4, !dbg !9083, !tbaa !3325
  %call70 = call %struct._object* @build_struct_time(i32 %80, i32 %81, i32 %82, i32 %83, i32 %84, i32 %85, i32 0), !dbg !9084
  store %struct._object* %call70, %struct._object** %retval, !dbg !9085
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71, !dbg !9085

cleanup.71:                                       ; preds = %do.end.69, %cleanup
  %86 = bitcast %struct.PyDateTime_DateTime** %utcself to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !9086
  %87 = bitcast %struct._object** %tzinfo to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !9086
  %88 = bitcast i32* %ss to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 4, i8* %88) #1, !dbg !9086
  %89 = bitcast i32* %mm to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 4, i8* %89) #1, !dbg !9086
  %90 = bitcast i32* %hh to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 4, i8* %90) #1, !dbg !9086
  %91 = bitcast i32* %d to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 4, i8* %91) #1, !dbg !9086
  %92 = bitcast i32* %m to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 4, i8* %92) #1, !dbg !9086
  %93 = bitcast i32* %y to i8*, !dbg !9086
  call void @llvm.lifetime.end(i64 4, i8* %93) #1, !dbg !9086
  %94 = load %struct._object*, %struct._object** %retval, !dbg !9086
  ret %struct._object* %94, !dbg !9086
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_isoformat(%struct.PyDateTime_DateTime* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %sep = alloca i32, align 4
  %buffer = alloca [100 x i8], align 16
  %result = alloca %struct._object*, align 8
  %us = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1386, metadata !2553), !dbg !9087
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1387, metadata !2553), !dbg !9088
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1388, metadata !2553), !dbg !9089
  %0 = bitcast i32* %sep to i8*, !dbg !9090
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9090
  call void @llvm.dbg.declare(metadata i32* %sep, metadata !1389, metadata !2553), !dbg !9091
  store i32 84, i32* %sep, align 4, !dbg !9091, !tbaa !3325
  %1 = bitcast [100 x i8]* %buffer to i8*, !dbg !9092
  call void @llvm.lifetime.start(i64 100, i8* %1) #1, !dbg !9092
  call void @llvm.dbg.declare(metadata [100 x i8]* %buffer, metadata !1390, metadata !2553), !dbg !9093
  %2 = bitcast %struct._object** %result to i8*, !dbg !9094
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9094
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1391, metadata !2553), !dbg !9095
  %3 = bitcast i32* %us to i8*, !dbg !9096
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %us, metadata !1392, metadata !2553), !dbg !9097
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9098, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 3, !dbg !9099
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 7, !dbg !9100
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9100, !tbaa !3415
  %conv = zext i8 %5 to i32, !dbg !9100
  %shl = shl i32 %conv, 16, !dbg !9101
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9102, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %6, i32 0, i32 3, !dbg !9103
  %arrayidx2 = getelementptr [10 x i8], [10 x i8]* %data1, i32 0, i64 8, !dbg !9104
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !9104, !tbaa !3415
  %conv3 = zext i8 %7 to i32, !dbg !9104
  %shl4 = shl i32 %conv3, 8, !dbg !9105
  %or = or i32 %shl, %shl4, !dbg !9106
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9107, !tbaa !2563
  %data5 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %8, i32 0, i32 3, !dbg !9108
  %arrayidx6 = getelementptr [10 x i8], [10 x i8]* %data5, i32 0, i64 9, !dbg !9109
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !9109, !tbaa !3415
  %conv7 = zext i8 %9 to i32, !dbg !9109
  %or8 = or i32 %or, %conv7, !dbg !9110
  store i32 %or8, i32* %us, align 4, !dbg !9097, !tbaa !3325
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9111, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !9113, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %10, %struct._object* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @datetime_isoformat.keywords, i32 0, i32 0), i32* %sep), !dbg !9114
  %tobool = icmp ne i32 %call, 0, !dbg !9114
  br i1 %tobool, label %if.end, label %if.then, !dbg !9115

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9116
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9116

if.end:                                           ; preds = %entry
  %12 = load i32, i32* %us, align 4, !dbg !9117, !tbaa !3325
  %tobool9 = icmp ne i32 %12, 0, !dbg !9117
  br i1 %tobool9, label %if.then.10, label %if.else, !dbg !9119

if.then.10:                                       ; preds = %if.end
  %13 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9120, !tbaa !2563
  %14 = bitcast %struct.PyDateTime_DateTime* %13 to %struct.PyDateTime_Date*, !dbg !9121
  %data11 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %14, i32 0, i32 3, !dbg !9122
  %arrayidx12 = getelementptr [4 x i8], [4 x i8]* %data11, i32 0, i64 0, !dbg !9123
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !9123, !tbaa !3415
  %conv13 = zext i8 %15 to i32, !dbg !9123
  %shl14 = shl i32 %conv13, 8, !dbg !9124
  %16 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9125, !tbaa !2563
  %17 = bitcast %struct.PyDateTime_DateTime* %16 to %struct.PyDateTime_Date*, !dbg !9126
  %data15 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %17, i32 0, i32 3, !dbg !9127
  %arrayidx16 = getelementptr [4 x i8], [4 x i8]* %data15, i32 0, i64 1, !dbg !9128
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !9128, !tbaa !3415
  %conv17 = zext i8 %18 to i32, !dbg !9128
  %or18 = or i32 %shl14, %conv17, !dbg !9129
  %19 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9130, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_DateTime* %19 to %struct.PyDateTime_Date*, !dbg !9131
  %data19 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %20, i32 0, i32 3, !dbg !9132
  %arrayidx20 = getelementptr [4 x i8], [4 x i8]* %data19, i32 0, i64 2, !dbg !9133
  %21 = load i8, i8* %arrayidx20, align 1, !dbg !9133, !tbaa !3415
  %conv21 = zext i8 %21 to i32, !dbg !9134
  %22 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9135, !tbaa !2563
  %23 = bitcast %struct.PyDateTime_DateTime* %22 to %struct.PyDateTime_Date*, !dbg !9136
  %data22 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %23, i32 0, i32 3, !dbg !9137
  %arrayidx23 = getelementptr [4 x i8], [4 x i8]* %data22, i32 0, i64 3, !dbg !9138
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !9138, !tbaa !3415
  %conv24 = zext i8 %24 to i32, !dbg !9139
  %25 = load i32, i32* %sep, align 4, !dbg !9140, !tbaa !3325
  %26 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9141, !tbaa !2563
  %data25 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %26, i32 0, i32 3, !dbg !9142
  %arrayidx26 = getelementptr [10 x i8], [10 x i8]* %data25, i32 0, i64 4, !dbg !9143
  %27 = load i8, i8* %arrayidx26, align 1, !dbg !9143, !tbaa !3415
  %conv27 = zext i8 %27 to i32, !dbg !9144
  %28 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9145, !tbaa !2563
  %data28 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %28, i32 0, i32 3, !dbg !9146
  %arrayidx29 = getelementptr [10 x i8], [10 x i8]* %data28, i32 0, i64 5, !dbg !9147
  %29 = load i8, i8* %arrayidx29, align 1, !dbg !9147, !tbaa !3415
  %conv30 = zext i8 %29 to i32, !dbg !9148
  %30 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9149, !tbaa !2563
  %data31 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %30, i32 0, i32 3, !dbg !9150
  %arrayidx32 = getelementptr [10 x i8], [10 x i8]* %data31, i32 0, i64 6, !dbg !9151
  %31 = load i8, i8* %arrayidx32, align 1, !dbg !9151, !tbaa !3415
  %conv33 = zext i8 %31 to i32, !dbg !9152
  %32 = load i32, i32* %us, align 4, !dbg !9153, !tbaa !3325
  %call34 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.154, i32 0, i32 0), i32 %or18, i32 %conv21, i32 %conv24, i32 %25, i32 %conv27, i32 %conv30, i32 %conv33, i32 %32), !dbg !9154
  store %struct._object* %call34, %struct._object** %result, align 8, !dbg !9155, !tbaa !2563
  br label %if.end.59, !dbg !9156

if.else:                                          ; preds = %if.end
  %33 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9157, !tbaa !2563
  %34 = bitcast %struct.PyDateTime_DateTime* %33 to %struct.PyDateTime_Date*, !dbg !9158
  %data35 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %34, i32 0, i32 3, !dbg !9159
  %arrayidx36 = getelementptr [4 x i8], [4 x i8]* %data35, i32 0, i64 0, !dbg !9160
  %35 = load i8, i8* %arrayidx36, align 1, !dbg !9160, !tbaa !3415
  %conv37 = zext i8 %35 to i32, !dbg !9160
  %shl38 = shl i32 %conv37, 8, !dbg !9161
  %36 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9162, !tbaa !2563
  %37 = bitcast %struct.PyDateTime_DateTime* %36 to %struct.PyDateTime_Date*, !dbg !9163
  %data39 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %37, i32 0, i32 3, !dbg !9164
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %data39, i32 0, i64 1, !dbg !9165
  %38 = load i8, i8* %arrayidx40, align 1, !dbg !9165, !tbaa !3415
  %conv41 = zext i8 %38 to i32, !dbg !9165
  %or42 = or i32 %shl38, %conv41, !dbg !9166
  %39 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9167, !tbaa !2563
  %40 = bitcast %struct.PyDateTime_DateTime* %39 to %struct.PyDateTime_Date*, !dbg !9168
  %data43 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %40, i32 0, i32 3, !dbg !9169
  %arrayidx44 = getelementptr [4 x i8], [4 x i8]* %data43, i32 0, i64 2, !dbg !9170
  %41 = load i8, i8* %arrayidx44, align 1, !dbg !9170, !tbaa !3415
  %conv45 = zext i8 %41 to i32, !dbg !9171
  %42 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9172, !tbaa !2563
  %43 = bitcast %struct.PyDateTime_DateTime* %42 to %struct.PyDateTime_Date*, !dbg !9173
  %data46 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %43, i32 0, i32 3, !dbg !9174
  %arrayidx47 = getelementptr [4 x i8], [4 x i8]* %data46, i32 0, i64 3, !dbg !9175
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !9175, !tbaa !3415
  %conv48 = zext i8 %44 to i32, !dbg !9176
  %45 = load i32, i32* %sep, align 4, !dbg !9177, !tbaa !3325
  %46 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9178, !tbaa !2563
  %data49 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %46, i32 0, i32 3, !dbg !9179
  %arrayidx50 = getelementptr [10 x i8], [10 x i8]* %data49, i32 0, i64 4, !dbg !9180
  %47 = load i8, i8* %arrayidx50, align 1, !dbg !9180, !tbaa !3415
  %conv51 = zext i8 %47 to i32, !dbg !9181
  %48 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9182, !tbaa !2563
  %data52 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %48, i32 0, i32 3, !dbg !9183
  %arrayidx53 = getelementptr [10 x i8], [10 x i8]* %data52, i32 0, i64 5, !dbg !9184
  %49 = load i8, i8* %arrayidx53, align 1, !dbg !9184, !tbaa !3415
  %conv54 = zext i8 %49 to i32, !dbg !9185
  %50 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9186, !tbaa !2563
  %data55 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %50, i32 0, i32 3, !dbg !9187
  %arrayidx56 = getelementptr [10 x i8], [10 x i8]* %data55, i32 0, i64 6, !dbg !9188
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !9188, !tbaa !3415
  %conv57 = zext i8 %51 to i32, !dbg !9189
  %call58 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.155, i32 0, i32 0), i32 %or42, i32 %conv45, i32 %conv48, i32 %45, i32 %conv51, i32 %conv54, i32 %conv57), !dbg !9190
  store %struct._object* %call58, %struct._object** %result, align 8, !dbg !9191, !tbaa !2563
  br label %if.end.59

if.end.59:                                        ; preds = %if.else, %if.then.10
  %52 = load %struct._object*, %struct._object** %result, align 8, !dbg !9192, !tbaa !2563
  %tobool60 = icmp ne %struct._object* %52, null, !dbg !9192
  br i1 %tobool60, label %lor.lhs.false, label %if.then.62, !dbg !9194

lor.lhs.false:                                    ; preds = %if.end.59
  %53 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9195, !tbaa !2563
  %54 = bitcast %struct.PyDateTime_DateTime* %53 to %struct._PyDateTime_BaseTZInfo*, !dbg !9197
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %54, i32 0, i32 2, !dbg !9198
  %55 = load i8, i8* %hastzinfo, align 1, !dbg !9198, !tbaa !5575
  %tobool61 = icmp ne i8 %55, 0, !dbg !9199
  br i1 %tobool61, label %if.end.63, label %if.then.62, !dbg !9200

if.then.62:                                       ; preds = %lor.lhs.false, %if.end.59
  %56 = load %struct._object*, %struct._object** %result, align 8, !dbg !9201, !tbaa !2563
  store %struct._object* %56, %struct._object** %retval, !dbg !9202
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9202

if.end.63:                                        ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buffer, i32 0, i32 0, !dbg !9203
  %57 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9204, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %57, i32 0, i32 4, !dbg !9205
  %58 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9205, !tbaa !3586
  %59 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9206, !tbaa !2563
  %60 = bitcast %struct.PyDateTime_DateTime* %59 to %struct._object*, !dbg !9207
  %call64 = call i32 @format_utcoffset(i8* %arraydecay, i64 100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.156, i32 0, i32 0), %struct._object* %58, %struct._object* %60), !dbg !9208
  %cmp = icmp slt i32 %call64, 0, !dbg !9209
  br i1 %cmp, label %if.then.66, label %if.end.72, !dbg !9210

if.then.66:                                       ; preds = %if.end.63
  br label %do.body, !dbg !9211

do.body:                                          ; preds = %if.then.66
  %61 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9212
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !9212
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1393, metadata !2553), !dbg !9214
  %62 = load %struct._object*, %struct._object** %result, align 8, !dbg !9215, !tbaa !2563
  store %struct._object* %62, %struct._object** %_py_decref_tmp, align 8, !dbg !9214, !tbaa !2563
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9216, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !9218
  %64 = load i64, i64* %ob_refcnt, align 8, !dbg !9219, !tbaa !2632
  %dec = add i64 %64, -1, !dbg !9219
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9219, !tbaa !2632
  %cmp67 = icmp ne i64 %dec, 0, !dbg !9220
  br i1 %cmp67, label %if.then.69, label %if.else.70, !dbg !9221

if.then.69:                                       ; preds = %do.body
  br label %if.end.71, !dbg !9222

if.else.70:                                       ; preds = %do.body
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9224, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !9226
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9226, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !9227
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9227, !tbaa !2642
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9228, !tbaa !2563
  call void %67(%struct._object* %68), !dbg !9229
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.70, %if.then.69
  %69 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9230
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !9230
  br label %do.cond, !dbg !9232

do.cond:                                          ; preds = %if.end.71
  br label %do.end, !dbg !9233

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !9235
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9235

if.end.72:                                        ; preds = %if.end.63
  %arraydecay73 = getelementptr inbounds [100 x i8], [100 x i8]* %buffer, i32 0, i32 0, !dbg !9236
  %call74 = call %struct._object* @PyUnicode_FromString(i8* %arraydecay73), !dbg !9237
  call void @PyUnicode_AppendAndDel(%struct._object** %result, %struct._object* %call74), !dbg !9238
  %70 = load %struct._object*, %struct._object** %result, align 8, !dbg !9239, !tbaa !2563
  store %struct._object* %70, %struct._object** %retval, !dbg !9240
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9240

cleanup:                                          ; preds = %if.end.72, %do.end, %if.then.62, %if.then
  %71 = bitcast i32* %us to i8*, !dbg !9241
  call void @llvm.lifetime.end(i64 4, i8* %71) #1, !dbg !9241
  %72 = bitcast %struct._object** %result to i8*, !dbg !9241
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !9241
  %73 = bitcast [100 x i8]* %buffer to i8*, !dbg !9241
  call void @llvm.lifetime.end(i64 100, i8* %73) #1, !dbg !9241
  %74 = bitcast i32* %sep to i8*, !dbg !9241
  call void @llvm.lifetime.end(i64 4, i8* %74) #1, !dbg !9241
  %75 = load %struct._object*, %struct._object** %retval, !dbg !9241
  ret %struct._object* %75, !dbg !9241
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_tzname(%struct._object* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1399, metadata !2553), !dbg !9242
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !1400, metadata !2553), !dbg !9243
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9244, !tbaa !2563
  %1 = bitcast %struct._object* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !9245
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !9246
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !9246, !tbaa !5575
  %conv = sext i8 %2 to i32, !dbg !9247
  %tobool = icmp ne i32 %conv, 0, !dbg !9247
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9247

cond.true:                                        ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9248, !tbaa !2563
  %4 = bitcast %struct._object* %3 to %struct.PyDateTime_DateTime*, !dbg !9250
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !9251
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9251, !tbaa !3586
  br label %cond.end, !dbg !9247

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9252

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !9247
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9254, !tbaa !2563
  %call = call %struct._object* @call_tzname(%struct._object* %cond, %struct._object* %6), !dbg !9257
  ret %struct._object* %call, !dbg !9258
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_dst(%struct._object* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1403, metadata !2553), !dbg !9259
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !1404, metadata !2553), !dbg !9260
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9261, !tbaa !2563
  %1 = bitcast %struct._object* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !9262
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !9263
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !9263, !tbaa !5575
  %conv = sext i8 %2 to i32, !dbg !9264
  %tobool = icmp ne i32 %conv, 0, !dbg !9264
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9264

cond.true:                                        ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9265, !tbaa !2563
  %4 = bitcast %struct._object* %3 to %struct.PyDateTime_DateTime*, !dbg !9267
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !9268
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9268, !tbaa !3586
  br label %cond.end, !dbg !9264

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9269

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !9264
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9271, !tbaa !2563
  %call = call %struct._object* @call_dst(%struct._object* %cond, %struct._object* %6), !dbg !9274
  ret %struct._object* %call, !dbg !9275
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_replace(%struct.PyDateTime_DateTime* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %clone = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %y = alloca i32, align 4
  %m = alloca i32, align 4
  %d = alloca i32, align 4
  %hh = alloca i32, align 4
  %mm = alloca i32, align 4
  %ss = alloca i32, align 4
  %us = alloca i32, align 4
  %tzinfo = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1407, metadata !2553), !dbg !9276
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1408, metadata !2553), !dbg !9277
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1409, metadata !2553), !dbg !9278
  %0 = bitcast %struct._object** %clone to i8*, !dbg !9279
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9279
  call void @llvm.dbg.declare(metadata %struct._object** %clone, metadata !1410, metadata !2553), !dbg !9280
  %1 = bitcast %struct._object** %tuple to i8*, !dbg !9281
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9281
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1411, metadata !2553), !dbg !9282
  %2 = bitcast i32* %y to i8*, !dbg !9283
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !9283
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1412, metadata !2553), !dbg !9284
  %3 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9285, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_DateTime* %3 to %struct.PyDateTime_Date*, !dbg !9286
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !9287
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !9288
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9288, !tbaa !3415
  %conv = zext i8 %5 to i32, !dbg !9288
  %shl = shl i32 %conv, 8, !dbg !9289
  %6 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9290, !tbaa !2563
  %7 = bitcast %struct.PyDateTime_DateTime* %6 to %struct.PyDateTime_Date*, !dbg !9291
  %data1 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %7, i32 0, i32 3, !dbg !9292
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %data1, i32 0, i64 1, !dbg !9293
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !9293, !tbaa !3415
  %conv3 = zext i8 %8 to i32, !dbg !9293
  %or = or i32 %shl, %conv3, !dbg !9294
  store i32 %or, i32* %y, align 4, !dbg !9284, !tbaa !3325
  %9 = bitcast i32* %m to i8*, !dbg !9295
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !9295
  call void @llvm.dbg.declare(metadata i32* %m, metadata !1413, metadata !2553), !dbg !9296
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9297, !tbaa !2563
  %11 = bitcast %struct.PyDateTime_DateTime* %10 to %struct.PyDateTime_Date*, !dbg !9298
  %data4 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %11, i32 0, i32 3, !dbg !9299
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %data4, i32 0, i64 2, !dbg !9300
  %12 = load i8, i8* %arrayidx5, align 1, !dbg !9300, !tbaa !3415
  %conv6 = zext i8 %12 to i32, !dbg !9301
  store i32 %conv6, i32* %m, align 4, !dbg !9296, !tbaa !3325
  %13 = bitcast i32* %d to i8*, !dbg !9302
  call void @llvm.lifetime.start(i64 4, i8* %13) #1, !dbg !9302
  call void @llvm.dbg.declare(metadata i32* %d, metadata !1414, metadata !2553), !dbg !9303
  %14 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9304, !tbaa !2563
  %15 = bitcast %struct.PyDateTime_DateTime* %14 to %struct.PyDateTime_Date*, !dbg !9305
  %data7 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %15, i32 0, i32 3, !dbg !9306
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %data7, i32 0, i64 3, !dbg !9307
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !9307, !tbaa !3415
  %conv9 = zext i8 %16 to i32, !dbg !9308
  store i32 %conv9, i32* %d, align 4, !dbg !9303, !tbaa !3325
  %17 = bitcast i32* %hh to i8*, !dbg !9309
  call void @llvm.lifetime.start(i64 4, i8* %17) #1, !dbg !9309
  call void @llvm.dbg.declare(metadata i32* %hh, metadata !1415, metadata !2553), !dbg !9310
  %18 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9311, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %18, i32 0, i32 3, !dbg !9312
  %arrayidx11 = getelementptr [10 x i8], [10 x i8]* %data10, i32 0, i64 4, !dbg !9313
  %19 = load i8, i8* %arrayidx11, align 1, !dbg !9313, !tbaa !3415
  %conv12 = zext i8 %19 to i32, !dbg !9314
  store i32 %conv12, i32* %hh, align 4, !dbg !9310, !tbaa !3325
  %20 = bitcast i32* %mm to i8*, !dbg !9315
  call void @llvm.lifetime.start(i64 4, i8* %20) #1, !dbg !9315
  call void @llvm.dbg.declare(metadata i32* %mm, metadata !1416, metadata !2553), !dbg !9316
  %21 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9317, !tbaa !2563
  %data13 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %21, i32 0, i32 3, !dbg !9318
  %arrayidx14 = getelementptr [10 x i8], [10 x i8]* %data13, i32 0, i64 5, !dbg !9319
  %22 = load i8, i8* %arrayidx14, align 1, !dbg !9319, !tbaa !3415
  %conv15 = zext i8 %22 to i32, !dbg !9320
  store i32 %conv15, i32* %mm, align 4, !dbg !9316, !tbaa !3325
  %23 = bitcast i32* %ss to i8*, !dbg !9321
  call void @llvm.lifetime.start(i64 4, i8* %23) #1, !dbg !9321
  call void @llvm.dbg.declare(metadata i32* %ss, metadata !1417, metadata !2553), !dbg !9322
  %24 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9323, !tbaa !2563
  %data16 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %24, i32 0, i32 3, !dbg !9324
  %arrayidx17 = getelementptr [10 x i8], [10 x i8]* %data16, i32 0, i64 6, !dbg !9325
  %25 = load i8, i8* %arrayidx17, align 1, !dbg !9325, !tbaa !3415
  %conv18 = zext i8 %25 to i32, !dbg !9326
  store i32 %conv18, i32* %ss, align 4, !dbg !9322, !tbaa !3325
  %26 = bitcast i32* %us to i8*, !dbg !9327
  call void @llvm.lifetime.start(i64 4, i8* %26) #1, !dbg !9327
  call void @llvm.dbg.declare(metadata i32* %us, metadata !1418, metadata !2553), !dbg !9328
  %27 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9329, !tbaa !2563
  %data19 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %27, i32 0, i32 3, !dbg !9330
  %arrayidx20 = getelementptr [10 x i8], [10 x i8]* %data19, i32 0, i64 7, !dbg !9331
  %28 = load i8, i8* %arrayidx20, align 1, !dbg !9331, !tbaa !3415
  %conv21 = zext i8 %28 to i32, !dbg !9331
  %shl22 = shl i32 %conv21, 16, !dbg !9332
  %29 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9333, !tbaa !2563
  %data23 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %29, i32 0, i32 3, !dbg !9334
  %arrayidx24 = getelementptr [10 x i8], [10 x i8]* %data23, i32 0, i64 8, !dbg !9335
  %30 = load i8, i8* %arrayidx24, align 1, !dbg !9335, !tbaa !3415
  %conv25 = zext i8 %30 to i32, !dbg !9335
  %shl26 = shl i32 %conv25, 8, !dbg !9336
  %or27 = or i32 %shl22, %shl26, !dbg !9337
  %31 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9338, !tbaa !2563
  %data28 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %31, i32 0, i32 3, !dbg !9339
  %arrayidx29 = getelementptr [10 x i8], [10 x i8]* %data28, i32 0, i64 9, !dbg !9340
  %32 = load i8, i8* %arrayidx29, align 1, !dbg !9340, !tbaa !3415
  %conv30 = zext i8 %32 to i32, !dbg !9340
  %or31 = or i32 %or27, %conv30, !dbg !9341
  store i32 %or31, i32* %us, align 4, !dbg !9328, !tbaa !3325
  %33 = bitcast %struct._object** %tzinfo to i8*, !dbg !9342
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !9342
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1419, metadata !2553), !dbg !9343
  %34 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9344, !tbaa !2563
  %35 = bitcast %struct.PyDateTime_DateTime* %34 to %struct._PyDateTime_BaseTZInfo*, !dbg !9345
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %35, i32 0, i32 2, !dbg !9346
  %36 = load i8, i8* %hastzinfo, align 1, !dbg !9346, !tbaa !5575
  %conv32 = sext i8 %36 to i32, !dbg !9347
  %tobool = icmp ne i32 %conv32, 0, !dbg !9347
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9347

cond.true:                                        ; preds = %entry
  %37 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9348, !tbaa !2563
  %tzinfo33 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %37, i32 0, i32 4, !dbg !9350
  %38 = load %struct._object*, %struct._object** %tzinfo33, align 8, !dbg !9350, !tbaa !3586
  br label %cond.end, !dbg !9347

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %38, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !9347
  store %struct._object* %cond, %struct._object** %tzinfo, align 8, !dbg !9353, !tbaa !2563
  %39 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9356, !tbaa !2563
  %40 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !9358, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %39, %struct._object* %40, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.157, i32 0, i32 0), i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @datetime_kws, i32 0, i32 0), i32* %y, i32* %m, i32* %d, i32* %hh, i32* %mm, i32* %ss, i32* %us, %struct._object** %tzinfo), !dbg !9359
  %tobool34 = icmp ne i32 %call, 0, !dbg !9359
  br i1 %tobool34, label %if.end, label %if.then, !dbg !9360

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !9361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9361

if.end:                                           ; preds = %cond.end
  %41 = load i32, i32* %y, align 4, !dbg !9362, !tbaa !3325
  %42 = load i32, i32* %m, align 4, !dbg !9363, !tbaa !3325
  %43 = load i32, i32* %d, align 4, !dbg !9364, !tbaa !3325
  %44 = load i32, i32* %hh, align 4, !dbg !9365, !tbaa !3325
  %45 = load i32, i32* %mm, align 4, !dbg !9366, !tbaa !3325
  %46 = load i32, i32* %ss, align 4, !dbg !9367, !tbaa !3325
  %47 = load i32, i32* %us, align 4, !dbg !9368, !tbaa !3325
  %48 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9369, !tbaa !2563
  %call35 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.142, i32 0, i32 0), i32 %41, i32 %42, i32 %43, i32 %44, i32 %45, i32 %46, i32 %47, %struct._object* %48), !dbg !9370
  store %struct._object* %call35, %struct._object** %tuple, align 8, !dbg !9371, !tbaa !2563
  %49 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !9372, !tbaa !2563
  %cmp = icmp eq %struct._object* %49, null, !dbg !9374
  br i1 %cmp, label %if.then.37, label %if.end.38, !dbg !9375

if.then.37:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !9376
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9376

if.end.38:                                        ; preds = %if.end
  %50 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9377, !tbaa !2563
  %51 = bitcast %struct.PyDateTime_DateTime* %50 to %struct._object*, !dbg !9378
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !9379
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9379, !tbaa !2640
  %53 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !9380, !tbaa !2563
  %call39 = call %struct._object* @datetime_new(%struct._typeobject* %52, %struct._object* %53, %struct._object* null), !dbg !9381
  store %struct._object* %call39, %struct._object** %clone, align 8, !dbg !9382, !tbaa !2563
  br label %do.body, !dbg !9383

do.body:                                          ; preds = %if.end.38
  %54 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9384
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !9384
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1420, metadata !2553), !dbg !9386
  %55 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !9387, !tbaa !2563
  store %struct._object* %55, %struct._object** %_py_decref_tmp, align 8, !dbg !9386, !tbaa !2563
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9388, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !9390
  %57 = load i64, i64* %ob_refcnt, align 8, !dbg !9391, !tbaa !2632
  %dec = add i64 %57, -1, !dbg !9391
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9391, !tbaa !2632
  %cmp40 = icmp ne i64 %dec, 0, !dbg !9392
  br i1 %cmp40, label %if.then.42, label %if.else, !dbg !9393

if.then.42:                                       ; preds = %do.body
  br label %if.end.44, !dbg !9394

if.else:                                          ; preds = %do.body
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9396, !tbaa !2563
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !9398
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !9398, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !9399
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9399, !tbaa !2642
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9400, !tbaa !2563
  call void %60(%struct._object* %61), !dbg !9401
  br label %if.end.44

if.end.44:                                        ; preds = %if.else, %if.then.42
  %62 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9402
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !9402
  br label %do.cond, !dbg !9404

do.cond:                                          ; preds = %if.end.44
  br label %do.end, !dbg !9405

do.end:                                           ; preds = %do.cond
  %63 = load %struct._object*, %struct._object** %clone, align 8, !dbg !9407, !tbaa !2563
  store %struct._object* %63, %struct._object** %retval, !dbg !9408
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9408

cleanup:                                          ; preds = %do.end, %if.then.37, %if.then
  %64 = bitcast %struct._object** %tzinfo to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !9409
  %65 = bitcast i32* %us to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %65) #1, !dbg !9409
  %66 = bitcast i32* %ss to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %66) #1, !dbg !9409
  %67 = bitcast i32* %mm to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %67) #1, !dbg !9409
  %68 = bitcast i32* %hh to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %68) #1, !dbg !9409
  %69 = bitcast i32* %d to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %69) #1, !dbg !9409
  %70 = bitcast i32* %m to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %70) #1, !dbg !9409
  %71 = bitcast i32* %y to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 4, i8* %71) #1, !dbg !9409
  %72 = bitcast %struct._object** %tuple to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !9409
  %73 = bitcast %struct._object** %clone to i8*, !dbg !9409
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !9409
  %74 = load %struct._object*, %struct._object** %retval, !dbg !9409
  ret %struct._object* %74, !dbg !9409
}

; Function Attrs: nounwind uwtable
define internal %struct.PyDateTime_DateTime* @datetime_astimezone(%struct.PyDateTime_DateTime* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct.PyDateTime_DateTime*, align 8
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %result = alloca %struct.PyDateTime_DateTime*, align 8
  %offset = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %tzinfo = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1426, metadata !2553), !dbg !9410
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1427, metadata !2553), !dbg !9411
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1428, metadata !2553), !dbg !9412
  %0 = bitcast %struct.PyDateTime_DateTime** %result to i8*, !dbg !9413
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9413
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %result, metadata !1429, metadata !2553), !dbg !9414
  %1 = bitcast %struct._object** %offset to i8*, !dbg !9415
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9415
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !1430, metadata !2553), !dbg !9416
  %2 = bitcast %struct._object** %temp to i8*, !dbg !9417
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9417
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1431, metadata !2553), !dbg !9418
  %3 = bitcast %struct._object** %tzinfo to i8*, !dbg !9419
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9419
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1432, metadata !2553), !dbg !9420
  store %struct._object* @_Py_NoneStruct, %struct._object** %tzinfo, align 8, !dbg !9420, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9421, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !9423, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.162, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @datetime_astimezone.keywords, i32 0, i32 0), %struct._object** %tzinfo), !dbg !9424
  %tobool = icmp ne i32 %call, 0, !dbg !9424
  br i1 %tobool, label %if.end, label %if.then, !dbg !9425

if.then:                                          ; preds = %entry
  store %struct.PyDateTime_DateTime* null, %struct.PyDateTime_DateTime** %retval, !dbg !9426
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9426

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9427, !tbaa !2563
  %call1 = call i32 @check_tzinfo_subclass(%struct._object* %6), !dbg !9429
  %cmp = icmp eq i32 %call1, -1, !dbg !9430
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !9431

if.then.2:                                        ; preds = %if.end
  store %struct.PyDateTime_DateTime* null, %struct.PyDateTime_DateTime** %retval, !dbg !9432
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9432

if.end.3:                                         ; preds = %if.end
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9433, !tbaa !2563
  %8 = bitcast %struct.PyDateTime_DateTime* %7 to %struct._PyDateTime_BaseTZInfo*, !dbg !9435
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %8, i32 0, i32 2, !dbg !9436
  %9 = load i8, i8* %hastzinfo, align 1, !dbg !9436, !tbaa !5575
  %tobool4 = icmp ne i8 %9, 0, !dbg !9437
  br i1 %tobool4, label %lor.lhs.false, label %if.then.7, !dbg !9438

lor.lhs.false:                                    ; preds = %if.end.3
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9439, !tbaa !2563
  %tzinfo5 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %10, i32 0, i32 4, !dbg !9441
  %11 = load %struct._object*, %struct._object** %tzinfo5, align 8, !dbg !9441, !tbaa !3586
  %cmp6 = icmp eq %struct._object* %11, @_Py_NoneStruct, !dbg !9442
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !9443

if.then.7:                                        ; preds = %lor.lhs.false, %if.end.3
  br label %NeedAware, !dbg !9444

if.end.8:                                         ; preds = %lor.lhs.false
  %12 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9445, !tbaa !2563
  %tzinfo9 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %12, i32 0, i32 4, !dbg !9447
  %13 = load %struct._object*, %struct._object** %tzinfo9, align 8, !dbg !9447, !tbaa !3586
  %14 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9448, !tbaa !2563
  %cmp10 = icmp eq %struct._object* %13, %14, !dbg !9449
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !9450

if.then.11:                                       ; preds = %if.end.8
  %15 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9451, !tbaa !2563
  %16 = bitcast %struct.PyDateTime_DateTime* %15 to %struct._object*, !dbg !9453
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !9454
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !9455, !tbaa !2632
  %inc = add i64 %17, 1, !dbg !9455
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9455, !tbaa !2632
  %18 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9456, !tbaa !2563
  store %struct.PyDateTime_DateTime* %18, %struct.PyDateTime_DateTime** %retval, !dbg !9457
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9457

if.end.12:                                        ; preds = %if.end.8
  %19 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9458, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_DateTime* %19 to %struct._object*, !dbg !9459
  %call13 = call %struct._object* @datetime_utcoffset(%struct._object* %20, %struct._object* null), !dbg !9460
  store %struct._object* %call13, %struct._object** %offset, align 8, !dbg !9461, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9462, !tbaa !2563
  %cmp14 = icmp eq %struct._object* %21, null, !dbg !9464
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !9465

if.then.15:                                       ; preds = %if.end.12
  store %struct.PyDateTime_DateTime* null, %struct.PyDateTime_DateTime** %retval, !dbg !9466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9466

if.end.16:                                        ; preds = %if.end.12
  %22 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9467, !tbaa !2563
  %cmp17 = icmp eq %struct._object* %22, @_Py_NoneStruct, !dbg !9468
  br i1 %cmp17, label %if.then.18, label %if.end.23, !dbg !9469

if.then.18:                                       ; preds = %if.end.16
  br label %do.body, !dbg !9470

do.body:                                          ; preds = %if.then.18
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9471
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !9471
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1433, metadata !2553), !dbg !9473
  %24 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9474, !tbaa !2563
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !9473, !tbaa !2563
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9475, !tbaa !2563
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !9477
  %26 = load i64, i64* %ob_refcnt19, align 8, !dbg !9478, !tbaa !2632
  %dec = add i64 %26, -1, !dbg !9478
  store i64 %dec, i64* %ob_refcnt19, align 8, !dbg !9478, !tbaa !2632
  %cmp20 = icmp ne i64 %dec, 0, !dbg !9479
  br i1 %cmp20, label %if.then.21, label %if.else, !dbg !9480

if.then.21:                                       ; preds = %do.body
  br label %if.end.22, !dbg !9481

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9483, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !9485
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9485, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !9486
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9486, !tbaa !2642
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9487, !tbaa !2563
  call void %29(%struct._object* %30), !dbg !9488
  br label %if.end.22

if.end.22:                                        ; preds = %if.else, %if.then.21
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9489
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !9489
  br label %do.cond, !dbg !9491

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !9492

do.end:                                           ; preds = %do.cond
  br label %NeedAware, !dbg !9494

NeedAware:                                        ; preds = %do.end, %if.then.7
  %32 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9496, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %32, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.163, i32 0, i32 0)), !dbg !9497
  store %struct.PyDateTime_DateTime* null, %struct.PyDateTime_DateTime** %retval, !dbg !9498
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9498

if.end.23:                                        ; preds = %if.end.16
  %33 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9499, !tbaa !2563
  %34 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9500, !tbaa !2563
  %35 = bitcast %struct._object* %34 to %struct.PyDateTime_Delta*, !dbg !9501
  %call24 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %33, %struct.PyDateTime_Delta* %35, i32 -1), !dbg !9502
  %36 = bitcast %struct._object* %call24 to %struct.PyDateTime_DateTime*, !dbg !9503
  store %struct.PyDateTime_DateTime* %36, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9504, !tbaa !2563
  br label %do.body.25, !dbg !9505

do.body.25:                                       ; preds = %if.end.23
  %37 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !9506
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !9506
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp26, metadata !1437, metadata !2553), !dbg !9508
  %38 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9509, !tbaa !2563
  store %struct._object* %38, %struct._object** %_py_decref_tmp26, align 8, !dbg !9508, !tbaa !2563
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !9510, !tbaa !2563
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !9512
  %40 = load i64, i64* %ob_refcnt27, align 8, !dbg !9513, !tbaa !2632
  %dec28 = add i64 %40, -1, !dbg !9513
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !9513, !tbaa !2632
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !9514
  br i1 %cmp29, label %if.then.30, label %if.else.31, !dbg !9515

if.then.30:                                       ; preds = %do.body.25
  br label %if.end.34, !dbg !9516

if.else.31:                                       ; preds = %do.body.25
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !9518, !tbaa !2563
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !9520
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !9520, !tbaa !2640
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !9521
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !9521, !tbaa !2642
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !9522, !tbaa !2563
  call void %43(%struct._object* %44), !dbg !9523
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  %45 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !9524
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !9524
  br label %do.cond.35, !dbg !9526

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !9527

do.end.36:                                        ; preds = %do.cond.35
  %46 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9529, !tbaa !2563
  %cmp37 = icmp eq %struct.PyDateTime_DateTime* %46, null, !dbg !9531
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !9532

if.then.38:                                       ; preds = %do.end.36
  store %struct.PyDateTime_DateTime* null, %struct.PyDateTime_DateTime** %retval, !dbg !9533
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9533

if.end.39:                                        ; preds = %do.end.36
  %47 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9534, !tbaa !2563
  %tzinfo40 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %47, i32 0, i32 4, !dbg !9535
  %48 = load %struct._object*, %struct._object** %tzinfo40, align 8, !dbg !9535, !tbaa !3586
  store %struct._object* %48, %struct._object** %temp, align 8, !dbg !9536, !tbaa !2563
  %49 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9537, !tbaa !2563
  %cmp41 = icmp eq %struct._object* %49, @_Py_NoneStruct, !dbg !9538
  br i1 %cmp41, label %if.then.42, label %if.else.59, !dbg !9539

if.then.42:                                       ; preds = %if.end.39
  %50 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9540, !tbaa !2563
  %call43 = call %struct._object* @local_timezone(%struct.PyDateTime_DateTime* %50), !dbg !9541
  store %struct._object* %call43, %struct._object** %tzinfo, align 8, !dbg !9542, !tbaa !2563
  %51 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9543, !tbaa !2563
  %cmp44 = icmp eq %struct._object* %51, null, !dbg !9544
  br i1 %cmp44, label %if.then.45, label %if.end.58, !dbg !9545

if.then.45:                                       ; preds = %if.then.42
  br label %do.body.46, !dbg !9546

do.body.46:                                       ; preds = %if.then.45
  %52 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !9547
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !9547
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp47, metadata !1439, metadata !2553), !dbg !9549
  %53 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9550, !tbaa !2563
  %54 = bitcast %struct.PyDateTime_DateTime* %53 to %struct._object*, !dbg !9551
  store %struct._object* %54, %struct._object** %_py_decref_tmp47, align 8, !dbg !9549, !tbaa !2563
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !9552, !tbaa !2563
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !9554
  %56 = load i64, i64* %ob_refcnt48, align 8, !dbg !9555, !tbaa !2632
  %dec49 = add i64 %56, -1, !dbg !9555
  store i64 %dec49, i64* %ob_refcnt48, align 8, !dbg !9555, !tbaa !2632
  %cmp50 = icmp ne i64 %dec49, 0, !dbg !9556
  br i1 %cmp50, label %if.then.51, label %if.else.52, !dbg !9557

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55, !dbg !9558

if.else.52:                                       ; preds = %do.body.46
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !9560, !tbaa !2563
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !9562
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !9562, !tbaa !2640
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !9563
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !9563, !tbaa !2642
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !9564, !tbaa !2563
  call void %59(%struct._object* %60), !dbg !9565
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %61 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !9566
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !9566
  br label %do.cond.56, !dbg !9568

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !9569

do.end.57:                                        ; preds = %do.cond.56
  store %struct.PyDateTime_DateTime* null, %struct.PyDateTime_DateTime** %retval, !dbg !9571
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9571

if.end.58:                                        ; preds = %if.then.42
  br label %if.end.62, !dbg !9572

if.else.59:                                       ; preds = %if.end.39
  %62 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9573, !tbaa !2563
  %ob_refcnt60 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !9574
  %63 = load i64, i64* %ob_refcnt60, align 8, !dbg !9575, !tbaa !2632
  %inc61 = add i64 %63, 1, !dbg !9575
  store i64 %inc61, i64* %ob_refcnt60, align 8, !dbg !9575, !tbaa !2632
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.end.58
  %64 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9576, !tbaa !2563
  %65 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9577, !tbaa !2563
  %tzinfo63 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %65, i32 0, i32 4, !dbg !9578
  store %struct._object* %64, %struct._object** %tzinfo63, align 8, !dbg !9579, !tbaa !3586
  br label %do.body.64, !dbg !9580

do.body.64:                                       ; preds = %if.end.62
  %66 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !9581
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !9581
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp65, metadata !1445, metadata !2553), !dbg !9583
  %67 = load %struct._object*, %struct._object** %temp, align 8, !dbg !9584, !tbaa !2563
  store %struct._object* %67, %struct._object** %_py_decref_tmp65, align 8, !dbg !9583, !tbaa !2563
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9585, !tbaa !2563
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !9587
  %69 = load i64, i64* %ob_refcnt66, align 8, !dbg !9588, !tbaa !2632
  %dec67 = add i64 %69, -1, !dbg !9588
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !9588, !tbaa !2632
  %cmp68 = icmp ne i64 %dec67, 0, !dbg !9589
  br i1 %cmp68, label %if.then.69, label %if.else.70, !dbg !9590

if.then.69:                                       ; preds = %do.body.64
  br label %if.end.73, !dbg !9591

if.else.70:                                       ; preds = %do.body.64
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9593, !tbaa !2563
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !9595
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !9595, !tbaa !2640
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !9596
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !9596, !tbaa !2642
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9597, !tbaa !2563
  call void %72(%struct._object* %73), !dbg !9598
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.69
  %74 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !9599
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !9599
  br label %do.cond.74, !dbg !9600

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !9601

do.end.75:                                        ; preds = %do.cond.74
  %75 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9603, !tbaa !2563
  %76 = bitcast %struct.PyDateTime_DateTime* %75 to %struct._object*, !dbg !9604
  store %struct._object* %76, %struct._object** %temp, align 8, !dbg !9605, !tbaa !2563
  %77 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !9606, !tbaa !2563
  %78 = load %struct._object*, %struct._object** %temp, align 8, !dbg !9607, !tbaa !2563
  %call76 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %77, %struct._Py_Identifier* @PyId_fromutc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %78), !dbg !9608
  %79 = bitcast %struct._object* %call76 to %struct.PyDateTime_DateTime*, !dbg !9609
  store %struct.PyDateTime_DateTime* %79, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9610, !tbaa !2563
  br label %do.body.77, !dbg !9611

do.body.77:                                       ; preds = %do.end.75
  %80 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !9612
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !9612
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !1447, metadata !2553), !dbg !9614
  %81 = load %struct._object*, %struct._object** %temp, align 8, !dbg !9615, !tbaa !2563
  store %struct._object* %81, %struct._object** %_py_decref_tmp78, align 8, !dbg !9614, !tbaa !2563
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !9616, !tbaa !2563
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !9618
  %83 = load i64, i64* %ob_refcnt79, align 8, !dbg !9619, !tbaa !2632
  %dec80 = add i64 %83, -1, !dbg !9619
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !9619, !tbaa !2632
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !9620
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !9621

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86, !dbg !9622

if.else.83:                                       ; preds = %do.body.77
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !9624, !tbaa !2563
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !9626
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !9626, !tbaa !2640
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !9627
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !9627, !tbaa !2642
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !9628, !tbaa !2563
  call void %86(%struct._object* %87), !dbg !9629
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %88 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !9630
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !9630
  br label %do.cond.87, !dbg !9631

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !9632

do.end.88:                                        ; preds = %do.cond.87
  %89 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %result, align 8, !dbg !9634, !tbaa !2563
  store %struct.PyDateTime_DateTime* %89, %struct.PyDateTime_DateTime** %retval, !dbg !9635
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9635

cleanup:                                          ; preds = %do.end.88, %do.end.57, %if.then.38, %NeedAware, %if.then.15, %if.then.11, %if.then.2, %if.then
  %90 = bitcast %struct._object** %tzinfo to i8*, !dbg !9636
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !9636
  %91 = bitcast %struct._object** %temp to i8*, !dbg !9636
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !9636
  %92 = bitcast %struct._object** %offset to i8*, !dbg !9636
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !9636
  %93 = bitcast %struct.PyDateTime_DateTime** %result to i8*, !dbg !9636
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !9636
  %94 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %retval, !dbg !9636
  ret %struct.PyDateTime_DateTime* %94, !dbg !9636
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_reduce(%struct.PyDateTime_DateTime* %self, %struct._object* %arg) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %arg.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1498, metadata !2553), !dbg !9637
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1499, metadata !2553), !dbg !9638
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9639, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_DateTime* %0 to %struct._object*, !dbg !9640
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !9641
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9641, !tbaa !2640
  %3 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !9642, !tbaa !2563
  %call = call %struct._object* @datetime_getstate(%struct.PyDateTime_DateTime* %3), !dbg !9643
  %call1 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %call), !dbg !9644
  ret %struct._object* %call1, !dbg !9645
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_datetime_now_impl(%struct._typeobject* %type, %struct._object* %tz) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %tz.addr = alloca %struct._object*, align 8
  %self = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1188, metadata !2553), !dbg !9646
  store %struct._object* %tz, %struct._object** %tz.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tz.addr, metadata !1189, metadata !2553), !dbg !9647
  %0 = bitcast %struct._object** %self to i8*, !dbg !9648
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9648
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !1190, metadata !2553), !dbg !9649
  %1 = load %struct._object*, %struct._object** %tz.addr, align 8, !dbg !9650, !tbaa !2563
  %call = call i32 @check_tzinfo_subclass(%struct._object* %1), !dbg !9652
  %cmp = icmp slt i32 %call, 0, !dbg !9653
  br i1 %cmp, label %if.then, label %if.end, !dbg !9654

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9655
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9655

if.end:                                           ; preds = %entry
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !9656, !tbaa !2563
  %3 = bitcast %struct._typeobject* %2 to %struct._object*, !dbg !9657
  %4 = load %struct._object*, %struct._object** %tz.addr, align 8, !dbg !9658, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %4, @_Py_NoneStruct, !dbg !9659
  %cond = select i1 %cmp1, %struct.tm* (i64*)* @localtime, %struct.tm* (i64*)* @gmtime, !dbg !9658
  %5 = load %struct._object*, %struct._object** %tz.addr, align 8, !dbg !9660, !tbaa !2563
  %call2 = call %struct._object* @datetime_best_possible(%struct._object* %3, %struct.tm* (i64*)* %cond, %struct._object* %5), !dbg !9661
  store %struct._object* %call2, %struct._object** %self, align 8, !dbg !9662, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %self, align 8, !dbg !9663, !tbaa !2563
  %cmp3 = icmp ne %struct._object* %6, null, !dbg !9664
  br i1 %cmp3, label %land.lhs.true, label %if.end.10, !dbg !9665

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %tz.addr, align 8, !dbg !9666, !tbaa !2563
  %cmp4 = icmp ne %struct._object* %7, @_Py_NoneStruct, !dbg !9668
  br i1 %cmp4, label %if.then.5, label %if.end.10, !dbg !9669

if.then.5:                                        ; preds = %land.lhs.true
  %8 = bitcast %struct._object** %temp to i8*, !dbg !9670
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !9670
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1191, metadata !2553), !dbg !9671
  %9 = load %struct._object*, %struct._object** %self, align 8, !dbg !9672, !tbaa !2563
  store %struct._object* %9, %struct._object** %temp, align 8, !dbg !9671, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %tz.addr, align 8, !dbg !9673, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %self, align 8, !dbg !9674, !tbaa !2563
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %10, %struct._Py_Identifier* @PyId_fromutc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), %struct._object* %11), !dbg !9675
  store %struct._object* %call6, %struct._object** %self, align 8, !dbg !9676, !tbaa !2563
  br label %do.body, !dbg !9677

do.body:                                          ; preds = %if.then.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9678
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !9678
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1194, metadata !2553), !dbg !9680
  %13 = load %struct._object*, %struct._object** %temp, align 8, !dbg !9681, !tbaa !2563
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !9680, !tbaa !2563
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9682, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !9684
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !9685, !tbaa !2632
  %dec = add i64 %15, -1, !dbg !9685
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9685, !tbaa !2632
  %cmp7 = icmp ne i64 %dec, 0, !dbg !9686
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !9687

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !9688

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9690, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !9692
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9692, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !9693
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9693, !tbaa !2642
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9694, !tbaa !2563
  call void %18(%struct._object* %19), !dbg !9695
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9696
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !9696
  br label %do.cond, !dbg !9698

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !9699

do.end:                                           ; preds = %do.cond
  %21 = bitcast %struct._object** %temp to i8*, !dbg !9701
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !9701
  br label %if.end.10, !dbg !9702

if.end.10:                                        ; preds = %do.end, %land.lhs.true, %if.end
  %22 = load %struct._object*, %struct._object** %self, align 8, !dbg !9703, !tbaa !2563
  store %struct._object* %22, %struct._object** %retval, !dbg !9704
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9704

cleanup:                                          ; preds = %if.end.10, %if.then
  %23 = bitcast %struct._object** %self to i8*, !dbg !9705
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !9705
  %24 = load %struct._object*, %struct._object** %retval, !dbg !9705
  ret %struct._object* %24, !dbg !9705
}

; Function Attrs: nounwind uwtable
define internal i32 @check_tzinfo_subclass(%struct._object* %p) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._object*, align 8
  store %struct._object* %p, %struct._object** %p.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %p.addr, metadata !1198, metadata !2553), !dbg !9706
  %0 = load %struct._object*, %struct._object** %p.addr, align 8, !dbg !9707, !tbaa !2563
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct, !dbg !9709
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9710

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %p.addr, align 8, !dbg !9711, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !9713
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9713, !tbaa !2640
  %cmp1 = icmp eq %struct._typeobject* %2, @PyDateTime_TZInfoType, !dbg !9714
  br i1 %cmp1, label %if.then, label %lor.lhs.false.2, !dbg !9715

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %3 = load %struct._object*, %struct._object** %p.addr, align 8, !dbg !9716, !tbaa !2563
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !9718
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !9718, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_TZInfoType), !dbg !9719
  %tobool = icmp ne i32 %call, 0, !dbg !9719
  br i1 %tobool, label %if.then, label %if.end, !dbg !9720

if.then:                                          ; preds = %lor.lhs.false.2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, !dbg !9721
  br label %return, !dbg !9721

if.end:                                           ; preds = %lor.lhs.false.2
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9722, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %p.addr, align 8, !dbg !9723, !tbaa !2563
  %ob_type4 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !9724
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !9724, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 1, !dbg !9725
  %8 = load i8*, i8** %tp_name, align 8, !dbg !9725, !tbaa !3653
  %call5 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.141, i32 0, i32 0), i8* %8), !dbg !9726
  store i32 -1, i32* %retval, !dbg !9727
  br label %return, !dbg !9727

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, !dbg !9728
  ret i32 %9, !dbg !9728
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_best_possible(%struct._object* %cls, %struct.tm* (i64*)* %f, %struct._object* %tzinfo) #0 {
entry:
  %cls.addr = alloca %struct._object*, align 8
  %f.addr = alloca %struct.tm* (i64*)*, align 8
  %tzinfo.addr = alloca %struct._object*, align 8
  %t = alloca %struct.timeval, align 8
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1209, metadata !2553), !dbg !9729
  store %struct.tm* (i64*)* %f, %struct.tm* (i64*)** %f.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.tm* (i64*)** %f.addr, metadata !1210, metadata !2553), !dbg !9730
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !1211, metadata !2553), !dbg !9731
  %0 = bitcast %struct.timeval* %t to i8*, !dbg !9732
  call void @llvm.lifetime.start(i64 16, i8* %0) #1, !dbg !9732
  call void @llvm.dbg.declare(metadata %struct.timeval* %t, metadata !1212, metadata !2553), !dbg !9733
  call void @_PyTime_gettimeofday(%struct.timeval* %t), !dbg !9734
  %1 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !9735, !tbaa !2563
  %2 = load %struct.tm* (i64*)*, %struct.tm* (i64*)** %f.addr, align 8, !dbg !9736, !tbaa !2563
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %t, i32 0, i32 0, !dbg !9737
  %3 = load i64, i64* %tv_sec, align 8, !dbg !9737, !tbaa !9738
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %t, i32 0, i32 1, !dbg !9740
  %4 = load i64, i64* %tv_usec, align 8, !dbg !9740, !tbaa !9741
  %conv = trunc i64 %4 to i32, !dbg !9742
  %5 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !9743, !tbaa !2563
  %call = call %struct._object* @datetime_from_timet_and_us(%struct._object* %1, %struct.tm* (i64*)* %2, i64 %3, i32 %conv, %struct._object* %5), !dbg !9744
  %6 = bitcast %struct.timeval* %t to i8*, !dbg !9745
  call void @llvm.lifetime.end(i64 16, i8* %6) #1, !dbg !9745
  ret %struct._object* %call, !dbg !9746
}

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #5

declare void @_PyTime_gettimeofday(%struct.timeval*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_from_timet_and_us(%struct._object* %cls, %struct.tm* (i64*)* %f, i64 %timet, i32 %us, %struct._object* %tzinfo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %cls.addr = alloca %struct._object*, align 8
  %f.addr = alloca %struct.tm* (i64*)*, align 8
  %timet.addr = alloca i64, align 8
  %us.addr = alloca i32, align 4
  %tzinfo.addr = alloca %struct._object*, align 8
  %tm = alloca %struct.tm*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1224, metadata !2553), !dbg !9747
  store %struct.tm* (i64*)* %f, %struct.tm* (i64*)** %f.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.tm* (i64*)** %f.addr, metadata !1225, metadata !2553), !dbg !9748
  store i64 %timet, i64* %timet.addr, align 8, !tbaa !5078
  call void @llvm.dbg.declare(metadata i64* %timet.addr, metadata !1226, metadata !2553), !dbg !9749
  store i32 %us, i32* %us.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %us.addr, metadata !1227, metadata !2553), !dbg !9750
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !1228, metadata !2553), !dbg !9751
  %0 = bitcast %struct.tm** %tm to i8*, !dbg !9752
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9752
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !1229, metadata !2553), !dbg !9753
  %1 = load %struct.tm* (i64*)*, %struct.tm* (i64*)** %f.addr, align 8, !dbg !9754, !tbaa !2563
  %call = call %struct.tm* %1(i64* %timet.addr), !dbg !9754
  store %struct.tm* %call, %struct.tm** %tm, align 8, !dbg !9755, !tbaa !2563
  %2 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9756, !tbaa !2563
  %cmp = icmp eq %struct.tm* %2, null, !dbg !9758
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !9759

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2, !dbg !9760
  %3 = load i32, i32* %call1, align 4, !dbg !9763, !tbaa !3325
  %cmp2 = icmp eq i32 %3, 0, !dbg !9764
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !9765

if.then.3:                                        ; preds = %if.then
  %call4 = call i32* @__errno_location() #2, !dbg !9766
  store i32 22, i32* %call4, align 4, !dbg !9767, !tbaa !3325
  br label %if.end, !dbg !9768

if.end:                                           ; preds = %if.then.3, %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9769, !tbaa !2563
  %call5 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4), !dbg !9770
  store %struct._object* %call5, %struct._object** %retval, !dbg !9771
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9771

if.end.6:                                         ; preds = %entry
  %5 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9772, !tbaa !2563
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 0, !dbg !9774
  %6 = load i32, i32* %tm_sec, align 4, !dbg !9774, !tbaa !8851
  %cmp7 = icmp sgt i32 %6, 59, !dbg !9775
  br i1 %cmp7, label %if.then.8, label %if.end.10, !dbg !9776

if.then.8:                                        ; preds = %if.end.6
  %7 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9777, !tbaa !2563
  %tm_sec9 = getelementptr inbounds %struct.tm, %struct.tm* %7, i32 0, i32 0, !dbg !9778
  store i32 59, i32* %tm_sec9, align 4, !dbg !9779, !tbaa !8851
  br label %if.end.10, !dbg !9777

if.end.10:                                        ; preds = %if.then.8, %if.end.6
  %8 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !9780, !tbaa !2563
  %9 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9781, !tbaa !2563
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 5, !dbg !9782
  %10 = load i32, i32* %tm_year, align 4, !dbg !9782, !tbaa !4928
  %add = add i32 %10, 1900, !dbg !9783
  %11 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9784, !tbaa !2563
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %11, i32 0, i32 4, !dbg !9785
  %12 = load i32, i32* %tm_mon, align 4, !dbg !9785, !tbaa !4933
  %add11 = add i32 %12, 1, !dbg !9786
  %13 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9787, !tbaa !2563
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3, !dbg !9788
  %14 = load i32, i32* %tm_mday, align 4, !dbg !9788, !tbaa !4937
  %15 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9789, !tbaa !2563
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 2, !dbg !9790
  %16 = load i32, i32* %tm_hour, align 4, !dbg !9790, !tbaa !8837
  %17 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9791, !tbaa !2563
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %17, i32 0, i32 1, !dbg !9792
  %18 = load i32, i32* %tm_min, align 4, !dbg !9792, !tbaa !8844
  %19 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9793, !tbaa !2563
  %tm_sec12 = getelementptr inbounds %struct.tm, %struct.tm* %19, i32 0, i32 0, !dbg !9794
  %20 = load i32, i32* %tm_sec12, align 4, !dbg !9794, !tbaa !8851
  %21 = load i32, i32* %us.addr, align 4, !dbg !9795, !tbaa !3325
  %22 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !9796, !tbaa !2563
  %call13 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.142, i32 0, i32 0), i32 %add, i32 %add11, i32 %14, i32 %16, i32 %18, i32 %20, i32 %21, %struct._object* %22), !dbg !9797
  store %struct._object* %call13, %struct._object** %retval, !dbg !9798
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9798

cleanup:                                          ; preds = %if.end.10, %if.end
  %23 = bitcast %struct.tm** %tm to i8*, !dbg !9799
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !9799
  %24 = load %struct._object*, %struct._object** %retval, !dbg !9799
  ret %struct._object* %24, !dbg !9799
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_from_timestamp(%struct._object* %cls, %struct.tm* (i64*)* %f, %struct._object* %timestamp, %struct._object* %tzinfo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %cls.addr = alloca %struct._object*, align 8
  %f.addr = alloca %struct.tm* (i64*)*, align 8
  %timestamp.addr = alloca %struct._object*, align 8
  %tzinfo.addr = alloca %struct._object*, align 8
  %timet = alloca i64, align 8
  %us = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %cls, %struct._object** %cls.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %cls.addr, metadata !1251, metadata !2553), !dbg !9800
  store %struct.tm* (i64*)* %f, %struct.tm* (i64*)** %f.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.tm* (i64*)** %f.addr, metadata !1252, metadata !2553), !dbg !9801
  store %struct._object* %timestamp, %struct._object** %timestamp.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %timestamp.addr, metadata !1253, metadata !2553), !dbg !9802
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !1254, metadata !2553), !dbg !9803
  %0 = bitcast i64* %timet to i8*, !dbg !9804
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9804
  call void @llvm.dbg.declare(metadata i64* %timet, metadata !1255, metadata !2553), !dbg !9805
  %1 = bitcast i64* %us to i8*, !dbg !9806
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9806
  call void @llvm.dbg.declare(metadata i64* %us, metadata !1256, metadata !2553), !dbg !9807
  %2 = load %struct._object*, %struct._object** %timestamp.addr, align 8, !dbg !9808, !tbaa !2563
  %call = call i32 @_PyTime_ObjectToTimeval(%struct._object* %2, i64* %timet, i64* %us, i32 0), !dbg !9810
  %cmp = icmp eq i32 %call, -1, !dbg !9811
  br i1 %cmp, label %if.then, label %if.end, !dbg !9812

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9813
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9813

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %cls.addr, align 8, !dbg !9814, !tbaa !2563
  %4 = load %struct.tm* (i64*)*, %struct.tm* (i64*)** %f.addr, align 8, !dbg !9815, !tbaa !2563
  %5 = load i64, i64* %timet, align 8, !dbg !9816, !tbaa !5078
  %6 = load i64, i64* %us, align 8, !dbg !9817, !tbaa !5078
  %conv = trunc i64 %6 to i32, !dbg !9818
  %7 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !9819, !tbaa !2563
  %call1 = call %struct._object* @datetime_from_timet_and_us(%struct._object* %3, %struct.tm* (i64*)* %4, i64 %5, i32 %conv, %struct._object* %7), !dbg !9820
  store %struct._object* %call1, %struct._object** %retval, !dbg !9821
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9821

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast i64* %us to i8*, !dbg !9822
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !9822
  %9 = bitcast i64* %timet to i8*, !dbg !9822
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !9822
  %10 = load %struct._object*, %struct._object** %retval, !dbg !9822
  ret %struct._object* %10, !dbg !9822
}

declare i32 @_PyTime_ObjectToTimeval(%struct._object*, i64*, i64*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @call_dst(%struct._object* %tzinfo, %struct._object* %tzinfoarg) #0 {
entry:
  %tzinfo.addr = alloca %struct._object*, align 8
  %tzinfoarg.addr = alloca %struct._object*, align 8
  store %struct._object* %tzinfo, %struct._object** %tzinfo.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo.addr, metadata !1303, metadata !2553), !dbg !9823
  store %struct._object* %tzinfoarg, %struct._object** %tzinfoarg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfoarg.addr, metadata !1304, metadata !2553), !dbg !9824
  %0 = load %struct._object*, %struct._object** %tzinfo.addr, align 8, !dbg !9825, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %tzinfoarg.addr, align 8, !dbg !9826, !tbaa !2563
  %call = call %struct._object* @call_tzinfo_method(%struct._object* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), %struct._object* %1), !dbg !9827
  ret %struct._object* %call, !dbg !9828
}

; Function Attrs: nounwind uwtable
define internal i32 @delta_bool(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1309, metadata !2553), !dbg !9829
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !9830, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %0, i32 0, i32 2, !dbg !9831
  %1 = load i32, i32* %days, align 4, !dbg !9831, !tbaa !3363
  %cmp = icmp ne i32 %1, 0, !dbg !9832
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !9833

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !9834, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %2, i32 0, i32 3, !dbg !9836
  %3 = load i32, i32* %seconds, align 4, !dbg !9836, !tbaa !3368
  %cmp1 = icmp ne i32 %3, 0, !dbg !9837
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !9838

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !9839, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %4, i32 0, i32 4, !dbg !9841
  %5 = load i32, i32* %microseconds, align 4, !dbg !9841, !tbaa !3373
  %cmp2 = icmp ne i32 %5, 0, !dbg !9842
  br label %lor.end, !dbg !9838

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !9843
  ret i32 %lor.ext, !dbg !9845
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_total_seconds(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %total_seconds = alloca %struct._object*, align 8
  %total_microseconds = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1324, metadata !2553), !dbg !9846
  %0 = bitcast %struct._object** %total_seconds to i8*, !dbg !9847
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9847
  call void @llvm.dbg.declare(metadata %struct._object** %total_seconds, metadata !1325, metadata !2553), !dbg !9848
  %1 = bitcast %struct._object** %total_microseconds to i8*, !dbg !9849
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9849
  call void @llvm.dbg.declare(metadata %struct._object** %total_microseconds, metadata !1326, metadata !2553), !dbg !9850
  %2 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !9851, !tbaa !2563
  %3 = bitcast %struct._object* %2 to %struct.PyDateTime_Delta*, !dbg !9852
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %3), !dbg !9853
  store %struct._object* %call, %struct._object** %total_microseconds, align 8, !dbg !9854, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %total_microseconds, align 8, !dbg !9855, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !9857
  br i1 %cmp, label %if.then, label %if.end, !dbg !9858

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9859

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %total_microseconds, align 8, !dbg !9860, !tbaa !2563
  %6 = load %struct._object*, %struct._object** @us_per_second, align 8, !dbg !9861, !tbaa !2563
  %call1 = call %struct._object* @PyNumber_TrueDivide(%struct._object* %5, %struct._object* %6), !dbg !9862
  store %struct._object* %call1, %struct._object** %total_seconds, align 8, !dbg !9863, !tbaa !2563
  br label %do.body, !dbg !9864

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9865
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !9865
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1327, metadata !2553), !dbg !9867
  %8 = load %struct._object*, %struct._object** %total_microseconds, align 8, !dbg !9868, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !9867, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9869, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !9871
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !9872, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !9872
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9872, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !9873
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !9874

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !9875

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9877, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !9879
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9879, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !9880
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9880, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9881, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !9882
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9883
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !9883
  br label %do.cond, !dbg !9885

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !9886

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %total_seconds, align 8, !dbg !9888, !tbaa !2563
  store %struct._object* %16, %struct._object** %retval, !dbg !9889
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9889

cleanup:                                          ; preds = %do.end, %if.then
  %17 = bitcast %struct._object** %total_microseconds to i8*, !dbg !9890
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !9890
  %18 = bitcast %struct._object** %total_seconds to i8*, !dbg !9890
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !9890
  %19 = load %struct._object*, %struct._object** %retval, !dbg !9890
  ret %struct._object* %19, !dbg !9890
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #5

declare %struct._object* @PyFloat_FromDouble(double) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  %x1 = alloca %struct._object*, align 8
  %x2 = alloca %struct._object*, align 8
  %x3 = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %_py_xdecref_tmp94 = alloca %struct._object*, align 8
  %_py_decref_tmp99 = alloca %struct._object*, align 8
  %_py_xdecref_tmp115 = alloca %struct._object*, align 8
  %_py_decref_tmp120 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1331, metadata !2553), !dbg !9891
  %0 = bitcast %struct._object** %x1 to i8*, !dbg !9892
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9892
  call void @llvm.dbg.declare(metadata %struct._object** %x1, metadata !1332, metadata !2553), !dbg !9893
  store %struct._object* null, %struct._object** %x1, align 8, !dbg !9893, !tbaa !2563
  %1 = bitcast %struct._object** %x2 to i8*, !dbg !9894
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9894
  call void @llvm.dbg.declare(metadata %struct._object** %x2, metadata !1333, metadata !2553), !dbg !9895
  store %struct._object* null, %struct._object** %x2, align 8, !dbg !9895, !tbaa !2563
  %2 = bitcast %struct._object** %x3 to i8*, !dbg !9896
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9896
  call void @llvm.dbg.declare(metadata %struct._object** %x3, metadata !1334, metadata !2553), !dbg !9897
  store %struct._object* null, %struct._object** %x3, align 8, !dbg !9897, !tbaa !2563
  %3 = bitcast %struct._object** %result to i8*, !dbg !9898
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9898
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1335, metadata !2553), !dbg !9899
  store %struct._object* null, %struct._object** %result, align 8, !dbg !9899, !tbaa !2563
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !9900, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %4, i32 0, i32 2, !dbg !9901
  %5 = load i32, i32* %days, align 4, !dbg !9901, !tbaa !3363
  %conv = sext i32 %5 to i64, !dbg !9902
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !9903
  store %struct._object* %call, %struct._object** %x1, align 8, !dbg !9904, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %x1, align 8, !dbg !9905, !tbaa !2563
  %cmp = icmp eq %struct._object* %6, null, !dbg !9907
  br i1 %cmp, label %if.then, label %if.end, !dbg !9908

if.then:                                          ; preds = %entry
  br label %Done, !dbg !9909

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %x1, align 8, !dbg !9910, !tbaa !2563
  %8 = load %struct._object*, %struct._object** @seconds_per_day, align 8, !dbg !9911, !tbaa !2563
  %call2 = call %struct._object* @PyNumber_Multiply(%struct._object* %7, %struct._object* %8), !dbg !9912
  store %struct._object* %call2, %struct._object** %x2, align 8, !dbg !9913, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %x2, align 8, !dbg !9914, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %9, null, !dbg !9916
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !9917

if.then.5:                                        ; preds = %if.end
  br label %Done, !dbg !9918

if.end.6:                                         ; preds = %if.end
  br label %do.body, !dbg !9919

do.body:                                          ; preds = %if.end.6
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9920
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !9920
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1336, metadata !2553), !dbg !9922
  %11 = load %struct._object*, %struct._object** %x1, align 8, !dbg !9923, !tbaa !2563
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !9922, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9924, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !9926
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !9927, !tbaa !2632
  %dec = add i64 %13, -1, !dbg !9927
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9927, !tbaa !2632
  %cmp7 = icmp ne i64 %dec, 0, !dbg !9928
  br i1 %cmp7, label %if.then.9, label %if.else, !dbg !9929

if.then.9:                                        ; preds = %do.body
  br label %if.end.10, !dbg !9930

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9932, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !9934
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9934, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !9935
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9935, !tbaa !2642
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9936, !tbaa !2563
  call void %16(%struct._object* %17), !dbg !9937
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9938
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !9938
  br label %do.cond, !dbg !9940

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !9941

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %x1, align 8, !dbg !9943, !tbaa !2563
  %19 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !9944, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %19, i32 0, i32 3, !dbg !9945
  %20 = load i32, i32* %seconds, align 4, !dbg !9945, !tbaa !3368
  %conv11 = sext i32 %20 to i64, !dbg !9946
  %call12 = call %struct._object* @PyLong_FromLong(i64 %conv11), !dbg !9947
  store %struct._object* %call12, %struct._object** %x1, align 8, !dbg !9948, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %x1, align 8, !dbg !9949, !tbaa !2563
  %cmp13 = icmp eq %struct._object* %21, null, !dbg !9951
  br i1 %cmp13, label %if.then.15, label %if.end.16, !dbg !9952

if.then.15:                                       ; preds = %do.end
  br label %Done, !dbg !9953

if.end.16:                                        ; preds = %do.end
  %22 = load %struct._object*, %struct._object** %x1, align 8, !dbg !9954, !tbaa !2563
  %23 = load %struct._object*, %struct._object** %x2, align 8, !dbg !9955, !tbaa !2563
  %call17 = call %struct._object* @PyNumber_Add(%struct._object* %22, %struct._object* %23), !dbg !9956
  store %struct._object* %call17, %struct._object** %x3, align 8, !dbg !9957, !tbaa !2563
  %24 = load %struct._object*, %struct._object** %x3, align 8, !dbg !9958, !tbaa !2563
  %cmp18 = icmp eq %struct._object* %24, null, !dbg !9960
  br i1 %cmp18, label %if.then.20, label %if.end.21, !dbg !9961

if.then.20:                                       ; preds = %if.end.16
  br label %Done, !dbg !9962

if.end.21:                                        ; preds = %if.end.16
  br label %do.body.22, !dbg !9963

do.body.22:                                       ; preds = %if.end.21
  %25 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !9964
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !9964
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1338, metadata !2553), !dbg !9966
  %26 = load %struct._object*, %struct._object** %x1, align 8, !dbg !9967, !tbaa !2563
  store %struct._object* %26, %struct._object** %_py_decref_tmp23, align 8, !dbg !9966, !tbaa !2563
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !9968, !tbaa !2563
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !9970
  %28 = load i64, i64* %ob_refcnt24, align 8, !dbg !9971, !tbaa !2632
  %dec25 = add i64 %28, -1, !dbg !9971
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !9971, !tbaa !2632
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !9972
  br i1 %cmp26, label %if.then.28, label %if.else.29, !dbg !9973

if.then.28:                                       ; preds = %do.body.22
  br label %if.end.32, !dbg !9974

if.else.29:                                       ; preds = %do.body.22
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !9976, !tbaa !2563
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !9978
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !9978, !tbaa !2640
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !9979
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8, !dbg !9979, !tbaa !2642
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !9980, !tbaa !2563
  call void %31(%struct._object* %32), !dbg !9981
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  %33 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !9982
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !9982
  br label %do.cond.33, !dbg !9983

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !9984

do.end.34:                                        ; preds = %do.cond.33
  br label %do.body.35, !dbg !9986

do.body.35:                                       ; preds = %do.end.34
  %34 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !9987
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !9987
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1340, metadata !2553), !dbg !9989
  %35 = load %struct._object*, %struct._object** %x2, align 8, !dbg !9990, !tbaa !2563
  store %struct._object* %35, %struct._object** %_py_decref_tmp36, align 8, !dbg !9989, !tbaa !2563
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !9991, !tbaa !2563
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !9993
  %37 = load i64, i64* %ob_refcnt37, align 8, !dbg !9994, !tbaa !2632
  %dec38 = add i64 %37, -1, !dbg !9994
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !9994, !tbaa !2632
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !9995
  br i1 %cmp39, label %if.then.41, label %if.else.42, !dbg !9996

if.then.41:                                       ; preds = %do.body.35
  br label %if.end.45, !dbg !9997

if.else.42:                                       ; preds = %do.body.35
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !9999, !tbaa !2563
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !10001
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !10001, !tbaa !2640
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !10002
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !10002, !tbaa !2642
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !10003, !tbaa !2563
  call void %40(%struct._object* %41), !dbg !10004
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %42 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !10005
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !10005
  br label %do.cond.46, !dbg !10006

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !10007

do.end.47:                                        ; preds = %do.cond.46
  store %struct._object* null, %struct._object** %x2, align 8, !dbg !10009, !tbaa !2563
  %43 = load %struct._object*, %struct._object** %x3, align 8, !dbg !10010, !tbaa !2563
  %44 = load %struct._object*, %struct._object** @us_per_second, align 8, !dbg !10011, !tbaa !2563
  %call48 = call %struct._object* @PyNumber_Multiply(%struct._object* %43, %struct._object* %44), !dbg !10012
  store %struct._object* %call48, %struct._object** %x1, align 8, !dbg !10013, !tbaa !2563
  %45 = load %struct._object*, %struct._object** %x1, align 8, !dbg !10014, !tbaa !2563
  %cmp49 = icmp eq %struct._object* %45, null, !dbg !10016
  br i1 %cmp49, label %if.then.51, label %if.end.52, !dbg !10017

if.then.51:                                       ; preds = %do.end.47
  br label %Done, !dbg !10018

if.end.52:                                        ; preds = %do.end.47
  br label %do.body.53, !dbg !10019

do.body.53:                                       ; preds = %if.end.52
  %46 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !10020
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !10020
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1342, metadata !2553), !dbg !10022
  %47 = load %struct._object*, %struct._object** %x3, align 8, !dbg !10023, !tbaa !2563
  store %struct._object* %47, %struct._object** %_py_decref_tmp54, align 8, !dbg !10022, !tbaa !2563
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !10024, !tbaa !2563
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !10026
  %49 = load i64, i64* %ob_refcnt55, align 8, !dbg !10027, !tbaa !2632
  %dec56 = add i64 %49, -1, !dbg !10027
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !10027, !tbaa !2632
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !10028
  br i1 %cmp57, label %if.then.59, label %if.else.60, !dbg !10029

if.then.59:                                       ; preds = %do.body.53
  br label %if.end.63, !dbg !10030

if.else.60:                                       ; preds = %do.body.53
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !10032, !tbaa !2563
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !10034
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !10034, !tbaa !2640
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4, !dbg !10035
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !10035, !tbaa !2642
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !10036, !tbaa !2563
  call void %52(%struct._object* %53), !dbg !10037
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %54 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !10038
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !10038
  br label %do.cond.64, !dbg !10039

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !10040

do.end.65:                                        ; preds = %do.cond.64
  store %struct._object* null, %struct._object** %x3, align 8, !dbg !10042, !tbaa !2563
  %55 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10043, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %55, i32 0, i32 4, !dbg !10044
  %56 = load i32, i32* %microseconds, align 4, !dbg !10044, !tbaa !3373
  %conv66 = sext i32 %56 to i64, !dbg !10045
  %call67 = call %struct._object* @PyLong_FromLong(i64 %conv66), !dbg !10046
  store %struct._object* %call67, %struct._object** %x2, align 8, !dbg !10047, !tbaa !2563
  %57 = load %struct._object*, %struct._object** %x2, align 8, !dbg !10048, !tbaa !2563
  %cmp68 = icmp eq %struct._object* %57, null, !dbg !10050
  br i1 %cmp68, label %if.then.70, label %if.end.71, !dbg !10051

if.then.70:                                       ; preds = %do.end.65
  br label %Done, !dbg !10052

if.end.71:                                        ; preds = %do.end.65
  %58 = load %struct._object*, %struct._object** %x1, align 8, !dbg !10053, !tbaa !2563
  %59 = load %struct._object*, %struct._object** %x2, align 8, !dbg !10054, !tbaa !2563
  %call72 = call %struct._object* @PyNumber_Add(%struct._object* %58, %struct._object* %59), !dbg !10055
  store %struct._object* %call72, %struct._object** %result, align 8, !dbg !10056, !tbaa !2563
  br label %Done, !dbg !10057

Done:                                             ; preds = %if.end.71, %if.then.70, %if.then.51, %if.then.20, %if.then.15, %if.then.5, %if.then
  br label %do.body.73, !dbg !10058

do.body.73:                                       ; preds = %Done
  %60 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10059
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !10059
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1344, metadata !2553), !dbg !10061
  %61 = load %struct._object*, %struct._object** %x1, align 8, !dbg !10062, !tbaa !2563
  store %struct._object* %61, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10061, !tbaa !2563
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10063, !tbaa !2563
  %cmp74 = icmp ne %struct._object* %62, null, !dbg !10064
  br i1 %cmp74, label %if.then.76, label %if.end.90, !dbg !10065

if.then.76:                                       ; preds = %do.body.73
  br label %do.body.77, !dbg !10066

do.body.77:                                       ; preds = %if.then.76
  %63 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !10068
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !10068
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !1346, metadata !2553), !dbg !10070
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10071, !tbaa !2563
  store %struct._object* %64, %struct._object** %_py_decref_tmp78, align 8, !dbg !10070, !tbaa !2563
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !10072, !tbaa !2563
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !10074
  %66 = load i64, i64* %ob_refcnt79, align 8, !dbg !10075, !tbaa !2632
  %dec80 = add i64 %66, -1, !dbg !10075
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !10075, !tbaa !2632
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !10076
  br i1 %cmp81, label %if.then.83, label %if.else.84, !dbg !10077

if.then.83:                                       ; preds = %do.body.77
  br label %if.end.87, !dbg !10078

if.else.84:                                       ; preds = %do.body.77
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !10080, !tbaa !2563
  %ob_type85 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !10082
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type85, align 8, !dbg !10082, !tbaa !2640
  %tp_dealloc86 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !10083
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc86, align 8, !dbg !10083, !tbaa !2642
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !10084, !tbaa !2563
  call void %69(%struct._object* %70), !dbg !10085
  br label %if.end.87

if.end.87:                                        ; preds = %if.else.84, %if.then.83
  %71 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !10086
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !10086
  br label %do.cond.88, !dbg !10088

do.cond.88:                                       ; preds = %if.end.87
  br label %do.end.89, !dbg !10089

do.end.89:                                        ; preds = %do.cond.88
  br label %if.end.90, !dbg !10091

if.end.90:                                        ; preds = %do.end.89, %do.body.73
  %72 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10093
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !10093
  br label %do.cond.91, !dbg !10096

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !10097

do.end.92:                                        ; preds = %do.cond.91
  br label %do.body.93, !dbg !10099

do.body.93:                                       ; preds = %do.end.92
  %73 = bitcast %struct._object** %_py_xdecref_tmp94 to i8*, !dbg !10100
  call void @llvm.lifetime.start(i64 8, i8* %73) #1, !dbg !10100
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp94, metadata !1349, metadata !2553), !dbg !10102
  %74 = load %struct._object*, %struct._object** %x2, align 8, !dbg !10103, !tbaa !2563
  store %struct._object* %74, %struct._object** %_py_xdecref_tmp94, align 8, !dbg !10102, !tbaa !2563
  %75 = load %struct._object*, %struct._object** %_py_xdecref_tmp94, align 8, !dbg !10104, !tbaa !2563
  %cmp95 = icmp ne %struct._object* %75, null, !dbg !10105
  br i1 %cmp95, label %if.then.97, label %if.end.111, !dbg !10106

if.then.97:                                       ; preds = %do.body.93
  br label %do.body.98, !dbg !10107

do.body.98:                                       ; preds = %if.then.97
  %76 = bitcast %struct._object** %_py_decref_tmp99 to i8*, !dbg !10109
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !10109
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp99, metadata !1351, metadata !2553), !dbg !10111
  %77 = load %struct._object*, %struct._object** %_py_xdecref_tmp94, align 8, !dbg !10112, !tbaa !2563
  store %struct._object* %77, %struct._object** %_py_decref_tmp99, align 8, !dbg !10111, !tbaa !2563
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !10113, !tbaa !2563
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !10115
  %79 = load i64, i64* %ob_refcnt100, align 8, !dbg !10116, !tbaa !2632
  %dec101 = add i64 %79, -1, !dbg !10116
  store i64 %dec101, i64* %ob_refcnt100, align 8, !dbg !10116, !tbaa !2632
  %cmp102 = icmp ne i64 %dec101, 0, !dbg !10117
  br i1 %cmp102, label %if.then.104, label %if.else.105, !dbg !10118

if.then.104:                                      ; preds = %do.body.98
  br label %if.end.108, !dbg !10119

if.else.105:                                      ; preds = %do.body.98
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !10121, !tbaa !2563
  %ob_type106 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !10123
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type106, align 8, !dbg !10123, !tbaa !2640
  %tp_dealloc107 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !10124
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc107, align 8, !dbg !10124, !tbaa !2642
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8, !dbg !10125, !tbaa !2563
  call void %82(%struct._object* %83), !dbg !10126
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.105, %if.then.104
  %84 = bitcast %struct._object** %_py_decref_tmp99 to i8*, !dbg !10127
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !10127
  br label %do.cond.109, !dbg !10129

do.cond.109:                                      ; preds = %if.end.108
  br label %do.end.110, !dbg !10130

do.end.110:                                       ; preds = %do.cond.109
  br label %if.end.111, !dbg !10132

if.end.111:                                       ; preds = %do.end.110, %do.body.93
  %85 = bitcast %struct._object** %_py_xdecref_tmp94 to i8*, !dbg !10134
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !10134
  br label %do.cond.112, !dbg !10135

do.cond.112:                                      ; preds = %if.end.111
  br label %do.end.113, !dbg !10136

do.end.113:                                       ; preds = %do.cond.112
  br label %do.body.114, !dbg !10138

do.body.114:                                      ; preds = %do.end.113
  %86 = bitcast %struct._object** %_py_xdecref_tmp115 to i8*, !dbg !10139
  call void @llvm.lifetime.start(i64 8, i8* %86) #1, !dbg !10139
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp115, metadata !1354, metadata !2553), !dbg !10141
  %87 = load %struct._object*, %struct._object** %x3, align 8, !dbg !10142, !tbaa !2563
  store %struct._object* %87, %struct._object** %_py_xdecref_tmp115, align 8, !dbg !10141, !tbaa !2563
  %88 = load %struct._object*, %struct._object** %_py_xdecref_tmp115, align 8, !dbg !10143, !tbaa !2563
  %cmp116 = icmp ne %struct._object* %88, null, !dbg !10144
  br i1 %cmp116, label %if.then.118, label %if.end.132, !dbg !10145

if.then.118:                                      ; preds = %do.body.114
  br label %do.body.119, !dbg !10146

do.body.119:                                      ; preds = %if.then.118
  %89 = bitcast %struct._object** %_py_decref_tmp120 to i8*, !dbg !10148
  call void @llvm.lifetime.start(i64 8, i8* %89) #1, !dbg !10148
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp120, metadata !1356, metadata !2553), !dbg !10150
  %90 = load %struct._object*, %struct._object** %_py_xdecref_tmp115, align 8, !dbg !10151, !tbaa !2563
  store %struct._object* %90, %struct._object** %_py_decref_tmp120, align 8, !dbg !10150, !tbaa !2563
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp120, align 8, !dbg !10152, !tbaa !2563
  %ob_refcnt121 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !10154
  %92 = load i64, i64* %ob_refcnt121, align 8, !dbg !10155, !tbaa !2632
  %dec122 = add i64 %92, -1, !dbg !10155
  store i64 %dec122, i64* %ob_refcnt121, align 8, !dbg !10155, !tbaa !2632
  %cmp123 = icmp ne i64 %dec122, 0, !dbg !10156
  br i1 %cmp123, label %if.then.125, label %if.else.126, !dbg !10157

if.then.125:                                      ; preds = %do.body.119
  br label %if.end.129, !dbg !10158

if.else.126:                                      ; preds = %do.body.119
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp120, align 8, !dbg !10160, !tbaa !2563
  %ob_type127 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !10162
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type127, align 8, !dbg !10162, !tbaa !2640
  %tp_dealloc128 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !10163
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc128, align 8, !dbg !10163, !tbaa !2642
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp120, align 8, !dbg !10164, !tbaa !2563
  call void %95(%struct._object* %96), !dbg !10165
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.126, %if.then.125
  %97 = bitcast %struct._object** %_py_decref_tmp120 to i8*, !dbg !10166
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !10166
  br label %do.cond.130, !dbg !10168

do.cond.130:                                      ; preds = %if.end.129
  br label %do.end.131, !dbg !10169

do.end.131:                                       ; preds = %do.cond.130
  br label %if.end.132, !dbg !10171

if.end.132:                                       ; preds = %do.end.131, %do.body.114
  %98 = bitcast %struct._object** %_py_xdecref_tmp115 to i8*, !dbg !10173
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !10173
  br label %do.cond.133, !dbg !10174

do.cond.133:                                      ; preds = %if.end.132
  br label %do.end.134, !dbg !10175

do.end.134:                                       ; preds = %do.cond.133
  %99 = load %struct._object*, %struct._object** %result, align 8, !dbg !10177, !tbaa !2563
  %100 = bitcast %struct._object** %result to i8*, !dbg !10178
  call void @llvm.lifetime.end(i64 8, i8* %100) #1, !dbg !10178
  %101 = bitcast %struct._object** %x3 to i8*, !dbg !10178
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !10178
  %102 = bitcast %struct._object** %x2 to i8*, !dbg !10178
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !10178
  %103 = bitcast %struct._object** %x1 to i8*, !dbg !10178
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !10178
  ret %struct._object* %99, !dbg !10179
}

declare %struct._object* @PyNumber_TrueDivide(%struct._object*, %struct._object*) #3

declare %struct._object* @PyNumber_Multiply(%struct._object*, %struct._object*) #3

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #3

declare void @PyUnicode_AppendAndDel(%struct._object**, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @local_timezone(%struct.PyDateTime_DateTime* %utc_time) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %utc_time.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %result = alloca %struct._object*, align 8
  %timep = alloca %struct.tm*, align 8
  %timestamp = alloca i64, align 8
  %delta = alloca %struct._object*, align 8
  %one_second = alloca %struct._object*, align 8
  %seconds = alloca %struct._object*, align 8
  %nameo = alloca %struct._object*, align 8
  %zone = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp58 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %utc_time, %struct.PyDateTime_DateTime** %utc_time.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %utc_time.addr, metadata !1451, metadata !2553), !dbg !10180
  %0 = bitcast %struct._object** %result to i8*, !dbg !10181
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10181
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1452, metadata !2553), !dbg !10182
  store %struct._object* null, %struct._object** %result, align 8, !dbg !10182, !tbaa !2563
  %1 = bitcast %struct.tm** %timep to i8*, !dbg !10183
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10183
  call void @llvm.dbg.declare(metadata %struct.tm** %timep, metadata !1453, metadata !2553), !dbg !10184
  %2 = bitcast i64* %timestamp to i8*, !dbg !10185
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10185
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !1454, metadata !2553), !dbg !10186
  %3 = bitcast %struct._object** %delta to i8*, !dbg !10187
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10187
  call void @llvm.dbg.declare(metadata %struct._object** %delta, metadata !1455, metadata !2553), !dbg !10188
  %4 = bitcast %struct._object** %one_second to i8*, !dbg !10189
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10189
  call void @llvm.dbg.declare(metadata %struct._object** %one_second, metadata !1456, metadata !2553), !dbg !10190
  %5 = bitcast %struct._object** %seconds to i8*, !dbg !10191
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10191
  call void @llvm.dbg.declare(metadata %struct._object** %seconds, metadata !1457, metadata !2553), !dbg !10192
  %6 = bitcast %struct._object** %nameo to i8*, !dbg !10193
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !10193
  call void @llvm.dbg.declare(metadata %struct._object** %nameo, metadata !1458, metadata !2553), !dbg !10194
  store %struct._object* null, %struct._object** %nameo, align 8, !dbg !10194, !tbaa !2563
  %7 = bitcast i8** %zone to i8*, !dbg !10195
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !10195
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !1459, metadata !2553), !dbg !10196
  store i8* null, i8** %zone, align 8, !dbg !10196, !tbaa !2563
  %8 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %utc_time.addr, align 8, !dbg !10197, !tbaa !2563
  %9 = bitcast %struct.PyDateTime_DateTime* %8 to %struct._object*, !dbg !10198
  %10 = load %struct._object*, %struct._object** @PyDateTime_Epoch, align 8, !dbg !10199, !tbaa !2563
  %call = call %struct._object* @datetime_subtract(%struct._object* %9, %struct._object* %10), !dbg !10200
  store %struct._object* %call, %struct._object** %delta, align 8, !dbg !10201, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %delta, align 8, !dbg !10202, !tbaa !2563
  %cmp = icmp eq %struct._object* %11, null, !dbg !10204
  br i1 %cmp, label %if.then, label %if.end, !dbg !10205

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !10206
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10206

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @new_delta_ex(i32 0, i32 1, i32 0, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !10207
  store %struct._object* %call1, %struct._object** %one_second, align 8, !dbg !10208, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %one_second, align 8, !dbg !10209, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %12, null, !dbg !10211
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !10212

if.then.3:                                        ; preds = %if.end
  br label %error, !dbg !10213

if.end.4:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %delta, align 8, !dbg !10214, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Delta*, !dbg !10215
  %15 = load %struct._object*, %struct._object** %one_second, align 8, !dbg !10216, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct.PyDateTime_Delta*, !dbg !10217
  %call5 = call %struct._object* @divide_timedelta_timedelta(%struct.PyDateTime_Delta* %14, %struct.PyDateTime_Delta* %16), !dbg !10218
  store %struct._object* %call5, %struct._object** %seconds, align 8, !dbg !10219, !tbaa !2563
  br label %do.body, !dbg !10220

do.body:                                          ; preds = %if.end.4
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10221
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !10221
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1460, metadata !2553), !dbg !10223
  %18 = load %struct._object*, %struct._object** %one_second, align 8, !dbg !10224, !tbaa !2563
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !10223, !tbaa !2563
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10225, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !10227
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !10228, !tbaa !2632
  %dec = add i64 %20, -1, !dbg !10228
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10228, !tbaa !2632
  %cmp6 = icmp ne i64 %dec, 0, !dbg !10229
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !10230

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !10231

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10233, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !10235
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10235, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !10236
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10236, !tbaa !2642
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10237, !tbaa !2563
  call void %23(%struct._object* %24), !dbg !10238
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10239
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !10239
  br label %do.cond, !dbg !10241

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !10242

do.end:                                           ; preds = %do.cond
  %26 = load %struct._object*, %struct._object** %seconds, align 8, !dbg !10244, !tbaa !2563
  %cmp9 = icmp eq %struct._object* %26, null, !dbg !10246
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !10247

if.then.10:                                       ; preds = %do.end
  br label %error, !dbg !10248

if.end.11:                                        ; preds = %do.end
  br label %do.body.12, !dbg !10249

do.body.12:                                       ; preds = %if.end.11
  %27 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !10250
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !10250
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !1462, metadata !2553), !dbg !10252
  %28 = load %struct._object*, %struct._object** %delta, align 8, !dbg !10253, !tbaa !2563
  store %struct._object* %28, %struct._object** %_py_decref_tmp13, align 8, !dbg !10252, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !10254, !tbaa !2563
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !10256
  %30 = load i64, i64* %ob_refcnt14, align 8, !dbg !10257, !tbaa !2632
  %dec15 = add i64 %30, -1, !dbg !10257
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !10257, !tbaa !2632
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !10258
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !10259

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !10260

if.else.18:                                       ; preds = %do.body.12
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !10262, !tbaa !2563
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !10264
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !10264, !tbaa !2640
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !10265
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !10265, !tbaa !2642
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !10266, !tbaa !2563
  call void %33(%struct._object* %34), !dbg !10267
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %35 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !10268
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !10268
  br label %do.cond.22, !dbg !10269

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !10270

do.end.23:                                        ; preds = %do.cond.22
  %36 = load %struct._object*, %struct._object** %seconds, align 8, !dbg !10272, !tbaa !2563
  %call24 = call i64 @PyLong_AsLong(%struct._object* %36), !dbg !10273
  store i64 %call24, i64* %timestamp, align 8, !dbg !10274, !tbaa !5078
  br label %do.body.25, !dbg !10275

do.body.25:                                       ; preds = %do.end.23
  %37 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !10276
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !10276
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp26, metadata !1464, metadata !2553), !dbg !10278
  %38 = load %struct._object*, %struct._object** %seconds, align 8, !dbg !10279, !tbaa !2563
  store %struct._object* %38, %struct._object** %_py_decref_tmp26, align 8, !dbg !10278, !tbaa !2563
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !10280, !tbaa !2563
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !10282
  %40 = load i64, i64* %ob_refcnt27, align 8, !dbg !10283, !tbaa !2632
  %dec28 = add i64 %40, -1, !dbg !10283
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !10283, !tbaa !2632
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !10284
  br i1 %cmp29, label %if.then.30, label %if.else.31, !dbg !10285

if.then.30:                                       ; preds = %do.body.25
  br label %if.end.34, !dbg !10286

if.else.31:                                       ; preds = %do.body.25
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !10288, !tbaa !2563
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !10290
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !10290, !tbaa !2640
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !10291
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !10291, !tbaa !2642
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !10292, !tbaa !2563
  call void %43(%struct._object* %44), !dbg !10293
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  %45 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !10294
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !10294
  br label %do.cond.35, !dbg !10295

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !10296

do.end.36:                                        ; preds = %do.cond.35
  %46 = load i64, i64* %timestamp, align 8, !dbg !10298, !tbaa !5078
  %cmp37 = icmp eq i64 %46, -1, !dbg !10300
  br i1 %cmp37, label %land.lhs.true, label %if.end.40, !dbg !10301

land.lhs.true:                                    ; preds = %do.end.36
  %call38 = call %struct._object* @PyErr_Occurred(), !dbg !10302
  %tobool = icmp ne %struct._object* %call38, null, !dbg !10302
  br i1 %tobool, label %if.then.39, label %if.end.40, !dbg !10304

if.then.39:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !10305
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10305

if.end.40:                                        ; preds = %land.lhs.true, %do.end.36
  %call41 = call %struct.tm* @localtime(i64* %timestamp) #1, !dbg !10306
  store %struct.tm* %call41, %struct.tm** %timep, align 8, !dbg !10307, !tbaa !2563
  %47 = load %struct.tm*, %struct.tm** %timep, align 8, !dbg !10308, !tbaa !2563
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %47, i32 0, i32 10, !dbg !10309
  %48 = load i8*, i8** %tm_zone, align 8, !dbg !10309, !tbaa !10310
  store i8* %48, i8** %zone, align 8, !dbg !10311, !tbaa !2563
  %49 = load %struct.tm*, %struct.tm** %timep, align 8, !dbg !10312, !tbaa !2563
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %49, i32 0, i32 9, !dbg !10313
  %50 = load i64, i64* %tm_gmtoff, align 8, !dbg !10313, !tbaa !10314
  %conv = trunc i64 %50 to i32, !dbg !10312
  %call42 = call %struct._object* @new_delta_ex(i32 0, i32 %conv, i32 0, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !10315
  store %struct._object* %call42, %struct._object** %delta, align 8, !dbg !10316, !tbaa !2563
  %51 = load i8*, i8** %zone, align 8, !dbg !10317, !tbaa !2563
  %cmp43 = icmp ne i8* %51, null, !dbg !10319
  br i1 %cmp43, label %if.then.45, label %if.end.51, !dbg !10320

if.then.45:                                       ; preds = %if.end.40
  %52 = load i8*, i8** %zone, align 8, !dbg !10321, !tbaa !2563
  %call46 = call %struct._object* @PyUnicode_DecodeLocale(i8* %52, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.164, i32 0, i32 0)), !dbg !10323
  store %struct._object* %call46, %struct._object** %nameo, align 8, !dbg !10324, !tbaa !2563
  %53 = load %struct._object*, %struct._object** %nameo, align 8, !dbg !10325, !tbaa !2563
  %cmp47 = icmp eq %struct._object* %53, null, !dbg !10327
  br i1 %cmp47, label %if.then.49, label %if.end.50, !dbg !10328

if.then.49:                                       ; preds = %if.then.45
  br label %error, !dbg !10329

if.end.50:                                        ; preds = %if.then.45
  br label %if.end.51, !dbg !10330

if.end.51:                                        ; preds = %if.end.50, %if.end.40
  %54 = load %struct._object*, %struct._object** %delta, align 8, !dbg !10331, !tbaa !2563
  %55 = load %struct._object*, %struct._object** %nameo, align 8, !dbg !10332, !tbaa !2563
  %call52 = call %struct._object* @new_timezone(%struct._object* %54, %struct._object* %55), !dbg !10333
  store %struct._object* %call52, %struct._object** %result, align 8, !dbg !10334, !tbaa !2563
  br label %do.body.53, !dbg !10335

do.body.53:                                       ; preds = %if.end.51
  %56 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10336
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !10336
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1466, metadata !2553), !dbg !10338
  %57 = load %struct._object*, %struct._object** %nameo, align 8, !dbg !10339, !tbaa !2563
  store %struct._object* %57, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10338, !tbaa !2563
  %58 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10340, !tbaa !2563
  %cmp54 = icmp ne %struct._object* %58, null, !dbg !10341
  br i1 %cmp54, label %if.then.56, label %if.end.70, !dbg !10342

if.then.56:                                       ; preds = %do.body.53
  br label %do.body.57, !dbg !10343

do.body.57:                                       ; preds = %if.then.56
  %59 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !10345
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !10345
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp58, metadata !1468, metadata !2553), !dbg !10347
  %60 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10348, !tbaa !2563
  store %struct._object* %60, %struct._object** %_py_decref_tmp58, align 8, !dbg !10347, !tbaa !2563
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !10349, !tbaa !2563
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !10351
  %62 = load i64, i64* %ob_refcnt59, align 8, !dbg !10352, !tbaa !2632
  %dec60 = add i64 %62, -1, !dbg !10352
  store i64 %dec60, i64* %ob_refcnt59, align 8, !dbg !10352, !tbaa !2632
  %cmp61 = icmp ne i64 %dec60, 0, !dbg !10353
  br i1 %cmp61, label %if.then.63, label %if.else.64, !dbg !10354

if.then.63:                                       ; preds = %do.body.57
  br label %if.end.67, !dbg !10355

if.else.64:                                       ; preds = %do.body.57
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !10357, !tbaa !2563
  %ob_type65 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !10359
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type65, align 8, !dbg !10359, !tbaa !2640
  %tp_dealloc66 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !10360
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66, align 8, !dbg !10360, !tbaa !2642
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !10361, !tbaa !2563
  call void %65(%struct._object* %66), !dbg !10362
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.64, %if.then.63
  %67 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !10363
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !10363
  br label %do.cond.68, !dbg !10365

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !10366

do.end.69:                                        ; preds = %do.cond.68
  br label %if.end.70, !dbg !10368

if.end.70:                                        ; preds = %do.end.69, %do.body.53
  %68 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10370
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !10370
  br label %do.cond.71, !dbg !10373

do.cond.71:                                       ; preds = %if.end.70
  br label %do.end.72, !dbg !10374

do.end.72:                                        ; preds = %do.cond.71
  br label %error, !dbg !10376

error:                                            ; preds = %do.end.72, %if.then.49, %if.then.10, %if.then.3
  br label %do.body.73, !dbg !10378

do.body.73:                                       ; preds = %error
  %69 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !10379
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !10379
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !1471, metadata !2553), !dbg !10381
  %70 = load %struct._object*, %struct._object** %delta, align 8, !dbg !10382, !tbaa !2563
  store %struct._object* %70, %struct._object** %_py_decref_tmp74, align 8, !dbg !10381, !tbaa !2563
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !10383, !tbaa !2563
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !10385
  %72 = load i64, i64* %ob_refcnt75, align 8, !dbg !10386, !tbaa !2632
  %dec76 = add i64 %72, -1, !dbg !10386
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !10386, !tbaa !2632
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !10387
  br i1 %cmp77, label %if.then.79, label %if.else.80, !dbg !10388

if.then.79:                                       ; preds = %do.body.73
  br label %if.end.83, !dbg !10389

if.else.80:                                       ; preds = %do.body.73
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !10391, !tbaa !2563
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !10393
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !10393, !tbaa !2640
  %tp_dealloc82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !10394
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc82, align 8, !dbg !10394, !tbaa !2642
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !10395, !tbaa !2563
  call void %75(%struct._object* %76), !dbg !10396
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.79
  %77 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !10397
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !10397
  br label %do.cond.84, !dbg !10398

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !10399

do.end.85:                                        ; preds = %do.cond.84
  %78 = load %struct._object*, %struct._object** %result, align 8, !dbg !10401, !tbaa !2563
  store %struct._object* %78, %struct._object** %retval, !dbg !10402
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10402

cleanup:                                          ; preds = %do.end.85, %if.then.39, %if.then
  %79 = bitcast i8** %zone to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !10403
  %80 = bitcast %struct._object** %nameo to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !10403
  %81 = bitcast %struct._object** %seconds to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !10403
  %82 = bitcast %struct._object** %one_second to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !10403
  %83 = bitcast %struct._object** %delta to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !10403
  %84 = bitcast i64* %timestamp to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !10403
  %85 = bitcast %struct.tm** %timep to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !10403
  %86 = bitcast %struct._object** %result to i8*, !dbg !10403
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !10403
  %87 = load %struct._object*, %struct._object** %retval, !dbg !10403
  ret %struct._object* %87, !dbg !10403
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @divide_timedelta_timedelta(%struct.PyDateTime_Delta* %left, %struct.PyDateTime_Delta* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct.PyDateTime_Delta*, align 8
  %right.addr = alloca %struct.PyDateTime_Delta*, align 8
  %pyus_left = alloca %struct._object*, align 8
  %pyus_right = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %left, %struct.PyDateTime_Delta** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %left.addr, metadata !1477, metadata !2553), !dbg !10404
  store %struct.PyDateTime_Delta* %right, %struct.PyDateTime_Delta** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %right.addr, metadata !1478, metadata !2553), !dbg !10405
  %0 = bitcast %struct._object** %pyus_left to i8*, !dbg !10406
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10406
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_left, metadata !1479, metadata !2553), !dbg !10407
  %1 = bitcast %struct._object** %pyus_right to i8*, !dbg !10408
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10408
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_right, metadata !1480, metadata !2553), !dbg !10409
  %2 = bitcast %struct._object** %result to i8*, !dbg !10410
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10410
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1481, metadata !2553), !dbg !10411
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %left.addr, align 8, !dbg !10412, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %3), !dbg !10413
  store %struct._object* %call, %struct._object** %pyus_left, align 8, !dbg !10414, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !10415, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !10417
  br i1 %cmp, label %if.then, label %if.end, !dbg !10418

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !10419
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10419

if.end:                                           ; preds = %entry
  %5 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %right.addr, align 8, !dbg !10420, !tbaa !2563
  %call1 = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %5), !dbg !10421
  store %struct._object* %call1, %struct._object** %pyus_right, align 8, !dbg !10422, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !10423, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %6, null, !dbg !10424
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !10425

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !10426

do.body:                                          ; preds = %if.then.3
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10427
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !10427
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1482, metadata !2553), !dbg !10429
  %8 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !10430, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !10429, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10431, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !10433
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !10434, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !10434
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10434, !tbaa !2632
  %cmp4 = icmp ne i64 %dec, 0, !dbg !10435
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !10436

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !10437

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10439, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !10441
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10441, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !10442
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10442, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10443, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !10444
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10445
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !10445
  br label %do.cond, !dbg !10447

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !10448

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !10450
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10450

if.end.7:                                         ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !10451, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !10452, !tbaa !2563
  %call8 = call %struct._object* @PyNumber_FloorDivide(%struct._object* %16, %struct._object* %17), !dbg !10453
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !10454, !tbaa !2563
  br label %do.body.9, !dbg !10455

do.body.9:                                        ; preds = %if.end.7
  %18 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !10456
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !10456
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1486, metadata !2553), !dbg !10458
  %19 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !10459, !tbaa !2563
  store %struct._object* %19, %struct._object** %_py_decref_tmp10, align 8, !dbg !10458, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !10460, !tbaa !2563
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !10462
  %21 = load i64, i64* %ob_refcnt11, align 8, !dbg !10463, !tbaa !2632
  %dec12 = add i64 %21, -1, !dbg !10463
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !10463, !tbaa !2632
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !10464
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !10465

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !10466

if.else.15:                                       ; preds = %do.body.9
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !10468, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !10470
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !10470, !tbaa !2640
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !10471
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !10471, !tbaa !2642
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !10472, !tbaa !2563
  call void %24(%struct._object* %25), !dbg !10473
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %26 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !10474
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !10474
  br label %do.cond.19, !dbg !10476

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !10477

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !10479

do.body.21:                                       ; preds = %do.end.20
  %27 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !10480
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !10480
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !1488, metadata !2553), !dbg !10482
  %28 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !10483, !tbaa !2563
  store %struct._object* %28, %struct._object** %_py_decref_tmp22, align 8, !dbg !10482, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !10484, !tbaa !2563
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !10486
  %30 = load i64, i64* %ob_refcnt23, align 8, !dbg !10487, !tbaa !2632
  %dec24 = add i64 %30, -1, !dbg !10487
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !10487, !tbaa !2632
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !10488
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !10489

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !10490

if.else.27:                                       ; preds = %do.body.21
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !10492, !tbaa !2563
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !10494
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !10494, !tbaa !2640
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !10495
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !10495, !tbaa !2642
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !10496, !tbaa !2563
  call void %33(%struct._object* %34), !dbg !10497
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %35 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !10498
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !10498
  br label %do.cond.31, !dbg !10499

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !10500

do.end.32:                                        ; preds = %do.cond.31
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !10502, !tbaa !2563
  store %struct._object* %36, %struct._object** %retval, !dbg !10503
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10503

cleanup:                                          ; preds = %do.end.32, %do.end, %if.then
  %37 = bitcast %struct._object** %result to i8*, !dbg !10504
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !10504
  %38 = bitcast %struct._object** %pyus_right to i8*, !dbg !10504
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !10504
  %39 = bitcast %struct._object** %pyus_left to i8*, !dbg !10504
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !10504
  %40 = load %struct._object*, %struct._object** %retval, !dbg !10504
  ret %struct._object* %40, !dbg !10504
}

declare i64 @PyLong_AsLong(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare %struct._object* @PyUnicode_DecodeLocale(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @new_timezone(%struct._object* %offset, %struct._object* %name) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %offset.addr = alloca %struct._object*, align 8
  %name.addr = alloca %struct._object*, align 8
  store %struct._object* %offset, %struct._object** %offset.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %offset.addr, metadata !1492, metadata !2553), !dbg !10505
  store %struct._object* %name, %struct._object** %name.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %name.addr, metadata !1493, metadata !2553), !dbg !10506
  %0 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !10507, !tbaa !2563
  %cmp = icmp eq %struct._object* %0, null, !dbg !10509
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10510

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10511, !tbaa !2563
  %2 = bitcast %struct._object* %1 to %struct.PyDateTime_Delta*, !dbg !10513
  %call = call i32 @delta_bool(%struct.PyDateTime_Delta* %2), !dbg !10514
  %cmp1 = icmp eq i32 %call, 0, !dbg !10515
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10516

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct._object*, %struct._object** @PyDateTime_TimeZone_UTC, align 8, !dbg !10517, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0, !dbg !10519
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !10520, !tbaa !2632
  %inc = add i64 %4, 1, !dbg !10520
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !10520, !tbaa !2632
  %5 = load %struct._object*, %struct._object** @PyDateTime_TimeZone_UTC, align 8, !dbg !10521, !tbaa !2563
  store %struct._object* %5, %struct._object** %retval, !dbg !10522
  br label %return, !dbg !10522

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10523, !tbaa !2563
  %7 = bitcast %struct._object* %6 to %struct.PyDateTime_Delta*, !dbg !10525
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %7, i32 0, i32 4, !dbg !10526
  %8 = load i32, i32* %microseconds, align 4, !dbg !10526, !tbaa !3373
  %cmp2 = icmp ne i32 %8, 0, !dbg !10527
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false, !dbg !10528

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10529, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct.PyDateTime_Delta*, !dbg !10531
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %10, i32 0, i32 3, !dbg !10532
  %11 = load i32, i32* %seconds, align 4, !dbg !10532, !tbaa !3368
  %rem = srem i32 %11, 60, !dbg !10533
  %cmp3 = icmp ne i32 %rem, 0, !dbg !10534
  br i1 %cmp3, label %if.then.4, label %if.end.6, !dbg !10535

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10536, !tbaa !2563
  %13 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10538, !tbaa !2563
  %call5 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %12, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.165, i32 0, i32 0), %struct._object* %13), !dbg !10539
  store %struct._object* null, %struct._object** %retval, !dbg !10540
  br label %return, !dbg !10540

if.end.6:                                         ; preds = %lor.lhs.false
  %14 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10541, !tbaa !2563
  %15 = bitcast %struct._object* %14 to %struct.PyDateTime_Delta*, !dbg !10543
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %15, i32 0, i32 2, !dbg !10544
  %16 = load i32, i32* %days, align 4, !dbg !10544, !tbaa !3363
  %cmp7 = icmp eq i32 %16, -1, !dbg !10545
  br i1 %cmp7, label %land.lhs.true.8, label %lor.lhs.false.11, !dbg !10546

land.lhs.true.8:                                  ; preds = %if.end.6
  %17 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10547, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !10549
  %seconds9 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %18, i32 0, i32 3, !dbg !10550
  %19 = load i32, i32* %seconds9, align 4, !dbg !10550, !tbaa !3368
  %cmp10 = icmp eq i32 %19, 0, !dbg !10551
  br i1 %cmp10, label %if.then.17, label %lor.lhs.false.11, !dbg !10552

lor.lhs.false.11:                                 ; preds = %land.lhs.true.8, %if.end.6
  %20 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10553, !tbaa !2563
  %21 = bitcast %struct._object* %20 to %struct.PyDateTime_Delta*, !dbg !10554
  %days12 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %21, i32 0, i32 2, !dbg !10555
  %22 = load i32, i32* %days12, align 4, !dbg !10555, !tbaa !3363
  %cmp13 = icmp slt i32 %22, -1, !dbg !10556
  br i1 %cmp13, label %if.then.17, label %lor.lhs.false.14, !dbg !10557

lor.lhs.false.14:                                 ; preds = %lor.lhs.false.11
  %23 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10558, !tbaa !2563
  %24 = bitcast %struct._object* %23 to %struct.PyDateTime_Delta*, !dbg !10559
  %days15 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %24, i32 0, i32 2, !dbg !10560
  %25 = load i32, i32* %days15, align 4, !dbg !10560, !tbaa !3363
  %cmp16 = icmp sge i32 %25, 1, !dbg !10561
  br i1 %cmp16, label %if.then.17, label %if.end.19, !dbg !10562

if.then.17:                                       ; preds = %lor.lhs.false.14, %lor.lhs.false.11, %land.lhs.true.8
  %26 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10563, !tbaa !2563
  %27 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10565, !tbaa !2563
  %call18 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %26, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.166, i32 0, i32 0), %struct._object* %27), !dbg !10566
  store %struct._object* null, %struct._object** %retval, !dbg !10567
  br label %return, !dbg !10567

if.end.19:                                        ; preds = %lor.lhs.false.14
  %28 = load %struct._object*, %struct._object** %offset.addr, align 8, !dbg !10568, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !10569, !tbaa !2563
  %call20 = call %struct._object* @create_timezone(%struct._object* %28, %struct._object* %29), !dbg !10570
  store %struct._object* %call20, %struct._object** %retval, !dbg !10571
  br label %return, !dbg !10571

return:                                           ; preds = %if.end.19, %if.then.17, %if.then.4, %if.then
  %30 = load %struct._object*, %struct._object** %retval, !dbg !10572
  ret %struct._object* %30, !dbg !10572
}

declare %struct._object* @PyNumber_FloorDivide(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_getstate(%struct.PyDateTime_DateTime* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %basestate = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1502, metadata !2553), !dbg !10573
  %0 = bitcast %struct._object** %basestate to i8*, !dbg !10574
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10574
  call void @llvm.dbg.declare(metadata %struct._object** %basestate, metadata !1503, metadata !2553), !dbg !10575
  %1 = bitcast %struct._object** %result to i8*, !dbg !10576
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10576
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1504, metadata !2553), !dbg !10577
  store %struct._object* null, %struct._object** %result, align 8, !dbg !10577, !tbaa !2563
  %2 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10578, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %2, i32 0, i32 3, !dbg !10579
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %data, i32 0, i32 0, !dbg !10578
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay, i64 10), !dbg !10580
  store %struct._object* %call, %struct._object** %basestate, align 8, !dbg !10581, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !10582, !tbaa !2563
  %cmp = icmp ne %struct._object* %3, null, !dbg !10583
  br i1 %cmp, label %if.then, label %if.end.10, !dbg !10584

if.then:                                          ; preds = %entry
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10585, !tbaa !2563
  %5 = bitcast %struct.PyDateTime_DateTime* %4 to %struct._PyDateTime_BaseTZInfo*, !dbg !10587
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %5, i32 0, i32 2, !dbg !10588
  %6 = load i8, i8* %hastzinfo, align 1, !dbg !10588, !tbaa !5575
  %tobool = icmp ne i8 %6, 0, !dbg !10589
  br i1 %tobool, label %lor.lhs.false, label %if.then.2, !dbg !10590

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10591, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %7, i32 0, i32 4, !dbg !10593
  %8 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !10593, !tbaa !3586
  %cmp1 = icmp eq %struct._object* %8, @_Py_NoneStruct, !dbg !10594
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !10595

if.then.2:                                        ; preds = %lor.lhs.false, %if.then
  %9 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !10596, !tbaa !2563
  %call3 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 1, %struct._object* %9), !dbg !10597
  store %struct._object* %call3, %struct._object** %result, align 8, !dbg !10598, !tbaa !2563
  br label %if.end, !dbg !10599

if.else:                                          ; preds = %lor.lhs.false
  %10 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !10600, !tbaa !2563
  %11 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10601, !tbaa !2563
  %tzinfo4 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %11, i32 0, i32 4, !dbg !10602
  %12 = load %struct._object*, %struct._object** %tzinfo4, align 8, !dbg !10602, !tbaa !3586
  %call5 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %10, %struct._object* %12), !dbg !10603
  store %struct._object* %call5, %struct._object** %result, align 8, !dbg !10604, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %do.body, !dbg !10605

do.body:                                          ; preds = %if.end
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10606
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !10606
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1505, metadata !2553), !dbg !10608
  %14 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !10609, !tbaa !2563
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !10608, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10610, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !10612
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !10613, !tbaa !2632
  %dec = add i64 %16, -1, !dbg !10613
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10613, !tbaa !2632
  %cmp6 = icmp ne i64 %dec, 0, !dbg !10614
  br i1 %cmp6, label %if.then.7, label %if.else.8, !dbg !10615

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !10616

if.else.8:                                        ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10618, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !10620
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10620, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !10621
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10621, !tbaa !2642
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10622, !tbaa !2563
  call void %19(%struct._object* %20), !dbg !10623
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10624
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !10624
  br label %do.cond, !dbg !10626

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !10627

do.end:                                           ; preds = %do.cond
  br label %if.end.10, !dbg !10629

if.end.10:                                        ; preds = %do.end, %entry
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !10630, !tbaa !2563
  %23 = bitcast %struct._object** %result to i8*, !dbg !10631
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !10631
  %24 = bitcast %struct._object** %basestate to i8*, !dbg !10631
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !10631
  ret %struct._object* %22, !dbg !10632
}

declare %struct._object* @PyTuple_Pack(i64, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_hour(%struct.PyDateTime_DateTime* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1513, metadata !2553), !dbg !10633
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1514, metadata !2553), !dbg !10634
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10635, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 3, !dbg !10636
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 4, !dbg !10637
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10637, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !10638
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !10639
  ret %struct._object* %call, !dbg !10640
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_minute(%struct.PyDateTime_DateTime* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1517, metadata !2553), !dbg !10641
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1518, metadata !2553), !dbg !10642
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10643, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 3, !dbg !10644
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 5, !dbg !10645
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10645, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !10646
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !10647
  ret %struct._object* %call, !dbg !10648
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_second(%struct.PyDateTime_DateTime* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1521, metadata !2553), !dbg !10649
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1522, metadata !2553), !dbg !10650
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10651, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 3, !dbg !10652
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 6, !dbg !10653
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10653, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !10654
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !10655
  ret %struct._object* %call, !dbg !10656
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_microsecond(%struct.PyDateTime_DateTime* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1525, metadata !2553), !dbg !10657
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1526, metadata !2553), !dbg !10658
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10659, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %0, i32 0, i32 3, !dbg !10660
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %data, i32 0, i64 7, !dbg !10661
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10661, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !10661
  %shl = shl i32 %conv, 16, !dbg !10662
  %2 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10663, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %2, i32 0, i32 3, !dbg !10664
  %arrayidx2 = getelementptr [10 x i8], [10 x i8]* %data1, i32 0, i64 8, !dbg !10665
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !10665, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !10665
  %shl4 = shl i32 %conv3, 8, !dbg !10666
  %or = or i32 %shl, %shl4, !dbg !10667
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10668, !tbaa !2563
  %data5 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 3, !dbg !10669
  %arrayidx6 = getelementptr [10 x i8], [10 x i8]* %data5, i32 0, i64 9, !dbg !10670
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !10670, !tbaa !3415
  %conv7 = zext i8 %5 to i32, !dbg !10670
  %or8 = or i32 %or, %conv7, !dbg !10671
  %conv9 = sext i32 %or8 to i64, !dbg !10672
  %call = call %struct._object* @PyLong_FromLong(i64 %conv9), !dbg !10673
  ret %struct._object* %call, !dbg !10674
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @datetime_tzinfo(%struct.PyDateTime_DateTime* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_DateTime*, align 8
  %unused.addr = alloca i8*, align 8
  %result = alloca %struct._object*, align 8
  store %struct.PyDateTime_DateTime* %self, %struct.PyDateTime_DateTime** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %self.addr, metadata !1529, metadata !2553), !dbg !10675
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1530, metadata !2553), !dbg !10676
  %0 = bitcast %struct._object** %result to i8*, !dbg !10677
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10677
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1531, metadata !2553), !dbg !10678
  %1 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10679, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_DateTime* %1 to %struct._PyDateTime_BaseTZInfo*, !dbg !10680
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %2, i32 0, i32 2, !dbg !10681
  %3 = load i8, i8* %hastzinfo, align 1, !dbg !10681, !tbaa !5575
  %conv = sext i8 %3 to i32, !dbg !10682
  %tobool = icmp ne i32 %conv, 0, !dbg !10682
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10682

cond.true:                                        ; preds = %entry
  %4 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %self.addr, align 8, !dbg !10683, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %4, i32 0, i32 4, !dbg !10685
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !10685, !tbaa !3586
  br label %cond.end, !dbg !10682

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !10682
  store %struct._object* %cond, %struct._object** %result, align 8, !dbg !10688, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %result, align 8, !dbg !10691, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !10692
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !10693, !tbaa !2632
  %inc = add i64 %7, 1, !dbg !10693
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !10693, !tbaa !2632
  %8 = load %struct._object*, %struct._object** %result, align 8, !dbg !10694, !tbaa !2563
  %9 = bitcast %struct._object** %result to i8*, !dbg !10695
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !10695
  ret %struct._object* %8, !dbg !10696
}

declare i8* @PyObject_Malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @check_time_args(i32 %h, i32 %m, i32 %s, i32 %us) #0 {
entry:
  %retval = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %us.addr = alloca i32, align 4
  store i32 %h, i32* %h.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !1565, metadata !2553), !dbg !10697
  store i32 %m, i32* %m.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !1566, metadata !2553), !dbg !10698
  store i32 %s, i32* %s.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !1567, metadata !2553), !dbg !10699
  store i32 %us, i32* %us.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %us.addr, metadata !1568, metadata !2553), !dbg !10700
  %0 = load i32, i32* %h.addr, align 4, !dbg !10701, !tbaa !3325
  %cmp = icmp slt i32 %0, 0, !dbg !10703
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10704

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %h.addr, align 4, !dbg !10705, !tbaa !3325
  %cmp1 = icmp sgt i32 %1, 23, !dbg !10707
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10708

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10709, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.169, i32 0, i32 0)), !dbg !10711
  store i32 -1, i32* %retval, !dbg !10712
  br label %return, !dbg !10712

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %m.addr, align 4, !dbg !10713, !tbaa !3325
  %cmp2 = icmp slt i32 %3, 0, !dbg !10715
  br i1 %cmp2, label %if.then.5, label %lor.lhs.false.3, !dbg !10716

lor.lhs.false.3:                                  ; preds = %if.end
  %4 = load i32, i32* %m.addr, align 4, !dbg !10717, !tbaa !3325
  %cmp4 = icmp sgt i32 %4, 59, !dbg !10719
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !10720

if.then.5:                                        ; preds = %lor.lhs.false.3, %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10721, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.170, i32 0, i32 0)), !dbg !10723
  store i32 -1, i32* %retval, !dbg !10724
  br label %return, !dbg !10724

if.end.6:                                         ; preds = %lor.lhs.false.3
  %6 = load i32, i32* %s.addr, align 4, !dbg !10725, !tbaa !3325
  %cmp7 = icmp slt i32 %6, 0, !dbg !10727
  br i1 %cmp7, label %if.then.10, label %lor.lhs.false.8, !dbg !10728

lor.lhs.false.8:                                  ; preds = %if.end.6
  %7 = load i32, i32* %s.addr, align 4, !dbg !10729, !tbaa !3325
  %cmp9 = icmp sgt i32 %7, 59, !dbg !10731
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !10732

if.then.10:                                       ; preds = %lor.lhs.false.8, %if.end.6
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10733, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.171, i32 0, i32 0)), !dbg !10735
  store i32 -1, i32* %retval, !dbg !10736
  br label %return, !dbg !10736

if.end.11:                                        ; preds = %lor.lhs.false.8
  %9 = load i32, i32* %us.addr, align 4, !dbg !10737, !tbaa !3325
  %cmp12 = icmp slt i32 %9, 0, !dbg !10739
  br i1 %cmp12, label %if.then.15, label %lor.lhs.false.13, !dbg !10740

lor.lhs.false.13:                                 ; preds = %if.end.11
  %10 = load i32, i32* %us.addr, align 4, !dbg !10741, !tbaa !3325
  %cmp14 = icmp sgt i32 %10, 999999, !dbg !10743
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !10744

if.then.15:                                       ; preds = %lor.lhs.false.13, %if.end.11
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10745, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.172, i32 0, i32 0)), !dbg !10747
  store i32 -1, i32* %retval, !dbg !10748
  br label %return, !dbg !10748

if.end.16:                                        ; preds = %lor.lhs.false.13
  store i32 0, i32* %retval, !dbg !10749
  br label %return, !dbg !10749

return:                                           ; preds = %if.end.16, %if.then.15, %if.then.10, %if.then.5, %if.then
  %12 = load i32, i32* %retval, !dbg !10750
  ret i32 %12, !dbg !10750
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_repr(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1571, metadata !2553), !dbg !10751
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10752, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %0, i32 0, i32 4, !dbg !10754
  %1 = load i32, i32* %microseconds, align 4, !dbg !10754, !tbaa !3373
  %cmp = icmp ne i32 %1, 0, !dbg !10755
  br i1 %cmp, label %if.then, label %if.end, !dbg !10756

if.then:                                          ; preds = %entry
  %2 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10757, !tbaa !2563
  %3 = bitcast %struct.PyDateTime_Delta* %2 to %struct._object*, !dbg !10758
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !10759
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10759, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 1, !dbg !10760
  %5 = load i8*, i8** %tp_name, align 8, !dbg !10760, !tbaa !3653
  %6 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10761, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %6, i32 0, i32 2, !dbg !10762
  %7 = load i32, i32* %days, align 4, !dbg !10762, !tbaa !3363
  %8 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10763, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %8, i32 0, i32 3, !dbg !10764
  %9 = load i32, i32* %seconds, align 4, !dbg !10764, !tbaa !3368
  %10 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10765, !tbaa !2563
  %microseconds1 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %10, i32 0, i32 4, !dbg !10766
  %11 = load i32, i32* %microseconds1, align 4, !dbg !10766, !tbaa !3373
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* %5, i32 %7, i32 %9, i32 %11), !dbg !10767
  store %struct._object* %call, %struct._object** %retval, !dbg !10768
  br label %return, !dbg !10768

if.end:                                           ; preds = %entry
  %12 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10769, !tbaa !2563
  %seconds2 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %12, i32 0, i32 3, !dbg !10771
  %13 = load i32, i32* %seconds2, align 4, !dbg !10771, !tbaa !3368
  %cmp3 = icmp ne i32 %13, 0, !dbg !10772
  br i1 %cmp3, label %if.then.4, label %if.end.10, !dbg !10773

if.then.4:                                        ; preds = %if.end
  %14 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10774, !tbaa !2563
  %15 = bitcast %struct.PyDateTime_Delta* %14 to %struct._object*, !dbg !10775
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !10776
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !10776, !tbaa !2640
  %tp_name6 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 1, !dbg !10777
  %17 = load i8*, i8** %tp_name6, align 8, !dbg !10777, !tbaa !3653
  %18 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10778, !tbaa !2563
  %days7 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %18, i32 0, i32 2, !dbg !10779
  %19 = load i32, i32* %days7, align 4, !dbg !10779, !tbaa !3363
  %20 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10780, !tbaa !2563
  %seconds8 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %20, i32 0, i32 3, !dbg !10781
  %21 = load i32, i32* %seconds8, align 4, !dbg !10781, !tbaa !3368
  %call9 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0), i8* %17, i32 %19, i32 %21), !dbg !10782
  store %struct._object* %call9, %struct._object** %retval, !dbg !10783
  br label %return, !dbg !10783

if.end.10:                                        ; preds = %if.end
  %22 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10784, !tbaa !2563
  %23 = bitcast %struct.PyDateTime_Delta* %22 to %struct._object*, !dbg !10785
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !10786
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !10786, !tbaa !2640
  %tp_name12 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 1, !dbg !10787
  %25 = load i8*, i8** %tp_name12, align 8, !dbg !10787, !tbaa !3653
  %26 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10788, !tbaa !2563
  %days13 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %26, i32 0, i32 2, !dbg !10789
  %27 = load i32, i32* %days13, align 4, !dbg !10789, !tbaa !3363
  %call14 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i32 0, i32 0), i8* %25, i32 %27), !dbg !10790
  store %struct._object* %call14, %struct._object** %retval, !dbg !10791
  br label %return, !dbg !10791

return:                                           ; preds = %if.end.10, %if.then.4, %if.then
  %28 = load %struct._object*, %struct._object** %retval, !dbg !10792
  ret %struct._object* %28, !dbg !10792
}

; Function Attrs: nounwind uwtable
define internal i64 @delta_hash(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1788, metadata !2553), !dbg !10793
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10794, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %0, i32 0, i32 1, !dbg !10795
  %1 = load i64, i64* %hashcode, align 8, !dbg !10795, !tbaa !3357
  %cmp = icmp eq i64 %1, -1, !dbg !10796
  br i1 %cmp, label %if.then, label %if.end.8, !dbg !10797

if.then:                                          ; preds = %entry
  %2 = bitcast %struct._object** %temp to i8*, !dbg !10798
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10798
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1789, metadata !2553), !dbg !10799
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10800, !tbaa !2563
  %call = call %struct._object* @delta_getstate(%struct.PyDateTime_Delta* %3), !dbg !10801
  store %struct._object* %call, %struct._object** %temp, align 8, !dbg !10799, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %temp, align 8, !dbg !10802, !tbaa !2563
  %cmp1 = icmp ne %struct._object* %4, null, !dbg !10803
  br i1 %cmp1, label %if.then.2, label %if.end.7, !dbg !10804

if.then.2:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** %temp, align 8, !dbg !10805, !tbaa !2563
  %call3 = call i64 @PyObject_Hash(%struct._object* %5), !dbg !10806
  %6 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10807, !tbaa !2563
  %hashcode4 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %6, i32 0, i32 1, !dbg !10808
  store i64 %call3, i64* %hashcode4, align 8, !dbg !10809, !tbaa !3357
  br label %do.body, !dbg !10810

do.body:                                          ; preds = %if.then.2
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10811
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !10811
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1792, metadata !2553), !dbg !10813
  %8 = load %struct._object*, %struct._object** %temp, align 8, !dbg !10814, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !10813, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10815, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !10817
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !10818, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !10818
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10818, !tbaa !2632
  %cmp5 = icmp ne i64 %dec, 0, !dbg !10819
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !10820

if.then.6:                                        ; preds = %do.body
  br label %if.end, !dbg !10821

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10823, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !10825
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10825, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !10826
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10826, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10827, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !10828
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10829
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !10829
  br label %do.cond, !dbg !10831

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10832

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !10834

if.end.7:                                         ; preds = %do.end, %if.then
  %16 = bitcast %struct._object** %temp to i8*, !dbg !10835
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !10835
  br label %if.end.8, !dbg !10836

if.end.8:                                         ; preds = %if.end.7, %entry
  %17 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10837, !tbaa !2563
  %hashcode9 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %17, i32 0, i32 1, !dbg !10838
  %18 = load i64, i64* %hashcode9, align 8, !dbg !10838, !tbaa !3357
  ret i64 %18, !dbg !10839
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_str(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  %us = alloca i32, align 4
  %seconds = alloca i32, align 4
  %minutes = alloca i32, align 4
  %hours = alloca i32, align 4
  %days = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1801, metadata !2553), !dbg !10840
  %0 = bitcast i32* %us to i8*, !dbg !10841
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !10841
  call void @llvm.dbg.declare(metadata i32* %us, metadata !1802, metadata !2553), !dbg !10842
  %1 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10843, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %1, i32 0, i32 4, !dbg !10844
  %2 = load i32, i32* %microseconds, align 4, !dbg !10844, !tbaa !3373
  store i32 %2, i32* %us, align 4, !dbg !10842, !tbaa !3325
  %3 = bitcast i32* %seconds to i8*, !dbg !10845
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !10845
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !1803, metadata !2553), !dbg !10846
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10847, !tbaa !2563
  %seconds1 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %4, i32 0, i32 3, !dbg !10848
  %5 = load i32, i32* %seconds1, align 4, !dbg !10848, !tbaa !3368
  store i32 %5, i32* %seconds, align 4, !dbg !10846, !tbaa !3325
  %6 = bitcast i32* %minutes to i8*, !dbg !10849
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !10849
  call void @llvm.dbg.declare(metadata i32* %minutes, metadata !1804, metadata !2553), !dbg !10850
  %7 = load i32, i32* %seconds, align 4, !dbg !10851, !tbaa !3325
  %call = call i32 @divmod(i32 %7, i32 60, i32* %seconds), !dbg !10852
  store i32 %call, i32* %minutes, align 4, !dbg !10850, !tbaa !3325
  %8 = bitcast i32* %hours to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !10853
  call void @llvm.dbg.declare(metadata i32* %hours, metadata !1805, metadata !2553), !dbg !10854
  %9 = load i32, i32* %minutes, align 4, !dbg !10855, !tbaa !3325
  %call2 = call i32 @divmod(i32 %9, i32 60, i32* %minutes), !dbg !10856
  store i32 %call2, i32* %hours, align 4, !dbg !10854, !tbaa !3325
  %10 = bitcast i32* %days to i8*, !dbg !10857
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !10857
  call void @llvm.dbg.declare(metadata i32* %days, metadata !1806, metadata !2553), !dbg !10858
  %11 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !10859, !tbaa !2563
  %days3 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %11, i32 0, i32 2, !dbg !10860
  %12 = load i32, i32* %days3, align 4, !dbg !10860, !tbaa !3363
  store i32 %12, i32* %days, align 4, !dbg !10858, !tbaa !3325
  %13 = load i32, i32* %days, align 4, !dbg !10861, !tbaa !3325
  %tobool = icmp ne i32 %13, 0, !dbg !10861
  br i1 %tobool, label %if.then, label %if.else.14, !dbg !10863

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %us, align 4, !dbg !10864, !tbaa !3325
  %tobool4 = icmp ne i32 %14, 0, !dbg !10864
  br i1 %tobool4, label %if.then.5, label %if.else, !dbg !10867

if.then.5:                                        ; preds = %if.then
  %15 = load i32, i32* %days, align 4, !dbg !10868, !tbaa !3325
  %16 = load i32, i32* %days, align 4, !dbg !10869, !tbaa !3325
  %cmp = icmp eq i32 %16, 1, !dbg !10870
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10871

lor.rhs:                                          ; preds = %if.then.5
  %17 = load i32, i32* %days, align 4, !dbg !10872, !tbaa !3325
  %cmp6 = icmp eq i32 %17, -1, !dbg !10874
  br label %lor.end, !dbg !10871

lor.end:                                          ; preds = %lor.rhs, %if.then.5
  %18 = phi i1 [ true, %if.then.5 ], [ %cmp6, %lor.rhs ]
  %cond = select i1 %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i32 0, i32 0), !dbg !10875
  %19 = load i32, i32* %hours, align 4, !dbg !10878, !tbaa !3325
  %20 = load i32, i32* %minutes, align 4, !dbg !10879, !tbaa !3325
  %21 = load i32, i32* %seconds, align 4, !dbg !10880, !tbaa !3325
  %22 = load i32, i32* %us, align 4, !dbg !10881, !tbaa !3325
  %call7 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.178, i32 0, i32 0), i32 %15, i8* %cond, i32 %19, i32 %20, i32 %21, i32 %22), !dbg !10882
  store %struct._object* %call7, %struct._object** %retval, !dbg !10883
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10883

if.else:                                          ; preds = %if.then
  %23 = load i32, i32* %days, align 4, !dbg !10884, !tbaa !3325
  %24 = load i32, i32* %days, align 4, !dbg !10885, !tbaa !3325
  %cmp8 = icmp eq i32 %24, 1, !dbg !10886
  br i1 %cmp8, label %lor.end.11, label %lor.rhs.9, !dbg !10887

lor.rhs.9:                                        ; preds = %if.else
  %25 = load i32, i32* %days, align 4, !dbg !10888, !tbaa !3325
  %cmp10 = icmp eq i32 %25, -1, !dbg !10889
  br label %lor.end.11, !dbg !10887

lor.end.11:                                       ; preds = %lor.rhs.9, %if.else
  %26 = phi i1 [ true, %if.else ], [ %cmp10, %lor.rhs.9 ]
  %cond12 = select i1 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i32 0, i32 0), !dbg !10890
  %27 = load i32, i32* %hours, align 4, !dbg !10891, !tbaa !3325
  %28 = load i32, i32* %minutes, align 4, !dbg !10892, !tbaa !3325
  %29 = load i32, i32* %seconds, align 4, !dbg !10893, !tbaa !3325
  %call13 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.180, i32 0, i32 0), i32 %23, i8* %cond12, i32 %27, i32 %28, i32 %29), !dbg !10894
  store %struct._object* %call13, %struct._object** %retval, !dbg !10895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10895

if.else.14:                                       ; preds = %entry
  %30 = load i32, i32* %us, align 4, !dbg !10896, !tbaa !3325
  %tobool15 = icmp ne i32 %30, 0, !dbg !10896
  br i1 %tobool15, label %if.then.16, label %if.else.18, !dbg !10899

if.then.16:                                       ; preds = %if.else.14
  %31 = load i32, i32* %hours, align 4, !dbg !10900, !tbaa !3325
  %32 = load i32, i32* %minutes, align 4, !dbg !10901, !tbaa !3325
  %33 = load i32, i32* %seconds, align 4, !dbg !10902, !tbaa !3325
  %34 = load i32, i32* %us, align 4, !dbg !10903, !tbaa !3325
  %call17 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.181, i32 0, i32 0), i32 %31, i32 %32, i32 %33, i32 %34), !dbg !10904
  store %struct._object* %call17, %struct._object** %retval, !dbg !10905
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10905

if.else.18:                                       ; preds = %if.else.14
  %35 = load i32, i32* %hours, align 4, !dbg !10906, !tbaa !3325
  %36 = load i32, i32* %minutes, align 4, !dbg !10907, !tbaa !3325
  %37 = load i32, i32* %seconds, align 4, !dbg !10908, !tbaa !3325
  %call19 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.182, i32 0, i32 0), i32 %35, i32 %36, i32 %37), !dbg !10909
  store %struct._object* %call19, %struct._object** %retval, !dbg !10910
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10910

cleanup:                                          ; preds = %if.else.18, %if.then.16, %lor.end.11, %lor.end
  %38 = bitcast i32* %days to i8*, !dbg !10911
  call void @llvm.lifetime.end(i64 4, i8* %38) #1, !dbg !10911
  %39 = bitcast i32* %hours to i8*, !dbg !10911
  call void @llvm.lifetime.end(i64 4, i8* %39) #1, !dbg !10911
  %40 = bitcast i32* %minutes to i8*, !dbg !10911
  call void @llvm.lifetime.end(i64 4, i8* %40) #1, !dbg !10911
  %41 = bitcast i32* %seconds to i8*, !dbg !10911
  call void @llvm.lifetime.end(i64 4, i8* %41) #1, !dbg !10911
  %42 = bitcast i32* %us to i8*, !dbg !10911
  call void @llvm.lifetime.end(i64 4, i8* %42) #1, !dbg !10911
  %43 = load %struct._object*, %struct._object** %retval, !dbg !10911
  ret %struct._object* %43, !dbg !10911
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_richcompare(%struct._object* %self, %struct._object* %other, i32 %op) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %other.addr = alloca %struct._object*, align 8
  %op.addr = alloca i32, align 4
  %diff = alloca i32, align 4
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1809, metadata !2553), !dbg !10912
  store %struct._object* %other, %struct._object** %other.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %other.addr, metadata !1810, metadata !2553), !dbg !10913
  store i32 %op, i32* %op.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !1811, metadata !2553), !dbg !10914
  %0 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !10915, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !10916
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10916, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %1, @PyDateTime_DeltaType, !dbg !10917
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10918

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !10919, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !10921
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !10921, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %3, %struct._typeobject* @PyDateTime_DeltaType), !dbg !10922
  %tobool = icmp ne i32 %call, 0, !dbg !10922
  br i1 %tobool, label %if.then, label %if.else, !dbg !10923

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = bitcast i32* %diff to i8*, !dbg !10924
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !10924
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !1812, metadata !2553), !dbg !10925
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10926, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !10927, !tbaa !2563
  %call2 = call i32 @delta_cmp(%struct._object* %5, %struct._object* %6), !dbg !10928
  store i32 %call2, i32* %diff, align 4, !dbg !10925, !tbaa !3325
  %7 = load i32, i32* %diff, align 4, !dbg !10929, !tbaa !3325
  %8 = load i32, i32* %op.addr, align 4, !dbg !10930, !tbaa !3325
  %call3 = call %struct._object* @diff_to_bool(i32 %7, i32 %8), !dbg !10931
  store %struct._object* %call3, %struct._object** %retval, !dbg !10932
  %9 = bitcast i32* %diff to i8*, !dbg !10933
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !10933
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !10934, !tbaa !2632
  %inc = add i64 %10, 1, !dbg !10934
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !10934, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !10936
  br label %return, !dbg !10936

return:                                           ; preds = %if.else, %if.then
  %11 = load %struct._object*, %struct._object** %retval, !dbg !10937
  ret %struct._object* %11, !dbg !10937
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %self = alloca %struct._object*, align 8
  %day = alloca %struct._object*, align 8
  %second = alloca %struct._object*, align 8
  %us = alloca %struct._object*, align 8
  %ms = alloca %struct._object*, align 8
  %minute = alloca %struct._object*, align 8
  %hour = alloca %struct._object*, align 8
  %week = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %y = alloca %struct._object*, align 8
  %leftover_us = alloca double, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp75 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  %whole_us = alloca double, align 8
  %x_is_odd = alloca i32, align 4
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp139 = alloca %struct._object*, align 8
  %_py_decref_tmp153 = alloca %struct._object*, align 8
  %_py_decref_tmp167 = alloca %struct._object*, align 8
  %_py_decref_tmp190 = alloca %struct._object*, align 8
  %_py_decref_tmp205 = alloca %struct._object*, align 8
  %_py_decref_tmp218 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp239 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1820, metadata !2553), !dbg !10938
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1821, metadata !2553), !dbg !10939
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1822, metadata !2553), !dbg !10940
  %0 = bitcast %struct._object** %self to i8*, !dbg !10941
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10941
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !1823, metadata !2553), !dbg !10942
  store %struct._object* null, %struct._object** %self, align 8, !dbg !10942, !tbaa !2563
  %1 = bitcast %struct._object** %day to i8*, !dbg !10943
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct._object** %day, metadata !1824, metadata !2553), !dbg !10944
  store %struct._object* null, %struct._object** %day, align 8, !dbg !10944, !tbaa !2563
  %2 = bitcast %struct._object** %second to i8*, !dbg !10945
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10945
  call void @llvm.dbg.declare(metadata %struct._object** %second, metadata !1825, metadata !2553), !dbg !10946
  store %struct._object* null, %struct._object** %second, align 8, !dbg !10946, !tbaa !2563
  %3 = bitcast %struct._object** %us to i8*, !dbg !10947
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10947
  call void @llvm.dbg.declare(metadata %struct._object** %us, metadata !1826, metadata !2553), !dbg !10948
  store %struct._object* null, %struct._object** %us, align 8, !dbg !10948, !tbaa !2563
  %4 = bitcast %struct._object** %ms to i8*, !dbg !10949
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10949
  call void @llvm.dbg.declare(metadata %struct._object** %ms, metadata !1827, metadata !2553), !dbg !10950
  store %struct._object* null, %struct._object** %ms, align 8, !dbg !10950, !tbaa !2563
  %5 = bitcast %struct._object** %minute to i8*, !dbg !10951
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10951
  call void @llvm.dbg.declare(metadata %struct._object** %minute, metadata !1828, metadata !2553), !dbg !10952
  store %struct._object* null, %struct._object** %minute, align 8, !dbg !10952, !tbaa !2563
  %6 = bitcast %struct._object** %hour to i8*, !dbg !10953
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !10953
  call void @llvm.dbg.declare(metadata %struct._object** %hour, metadata !1829, metadata !2553), !dbg !10954
  store %struct._object* null, %struct._object** %hour, align 8, !dbg !10954, !tbaa !2563
  %7 = bitcast %struct._object** %week to i8*, !dbg !10955
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !10955
  call void @llvm.dbg.declare(metadata %struct._object** %week, metadata !1830, metadata !2553), !dbg !10956
  store %struct._object* null, %struct._object** %week, align 8, !dbg !10956, !tbaa !2563
  %8 = bitcast %struct._object** %x to i8*, !dbg !10957
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !10957
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !1831, metadata !2553), !dbg !10958
  store %struct._object* null, %struct._object** %x, align 8, !dbg !10958, !tbaa !2563
  %9 = bitcast %struct._object** %y to i8*, !dbg !10959
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !10959
  call void @llvm.dbg.declare(metadata %struct._object** %y, metadata !1832, metadata !2553), !dbg !10960
  store %struct._object* null, %struct._object** %y, align 8, !dbg !10960, !tbaa !2563
  %10 = bitcast double* %leftover_us to i8*, !dbg !10961
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !10961
  call void @llvm.dbg.declare(metadata double* %leftover_us, metadata !1833, metadata !2553), !dbg !10962
  store double 0.000000e+00, double* %leftover_us, align 8, !dbg !10962, !tbaa !10963
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10965, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !10967, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %11, %struct._object* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.196, i32 0, i32 0), i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @delta_new.keywords, i32 0, i32 0), %struct._object** %day, %struct._object** %second, %struct._object** %us, %struct._object** %ms, %struct._object** %minute, %struct._object** %hour, %struct._object** %week), !dbg !10968
  %cmp = icmp eq i32 %call, 0, !dbg !10969
  br i1 %cmp, label %if.then, label %if.end, !dbg !10970

if.then:                                          ; preds = %entry
  br label %Done, !dbg !10971

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !10972
  store %struct._object* %call1, %struct._object** %x, align 8, !dbg !10973, !tbaa !2563
  %13 = load %struct._object*, %struct._object** %x, align 8, !dbg !10974, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %13, null, !dbg !10976
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !10977

if.then.3:                                        ; preds = %if.end
  br label %Done, !dbg !10978

if.end.4:                                         ; preds = %if.end
  %14 = load %struct._object*, %struct._object** %us, align 8, !dbg !10979, !tbaa !2563
  %tobool = icmp ne %struct._object* %14, null, !dbg !10979
  br i1 %tobool, label %if.then.5, label %if.end.13, !dbg !10980

if.then.5:                                        ; preds = %if.end.4
  %15 = load %struct._object*, %struct._object** %x, align 8, !dbg !10981, !tbaa !2563
  %16 = load %struct._object*, %struct._object** %us, align 8, !dbg !10982, !tbaa !2563
  %17 = load %struct._object*, %struct._object** @one, align 8, !dbg !10983, !tbaa !2563
  %call6 = call %struct._object* @accum(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.190, i32 0, i32 0), %struct._object* %15, %struct._object* %16, %struct._object* %17, double* %leftover_us), !dbg !10984
  store %struct._object* %call6, %struct._object** %y, align 8, !dbg !10985, !tbaa !2563
  br label %do.body, !dbg !10986

do.body:                                          ; preds = %if.then.5
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10987
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !10987
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1835, metadata !2553), !dbg !10989
  %19 = load %struct._object*, %struct._object** %x, align 8, !dbg !10990, !tbaa !2563
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !10989, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10991, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !10993
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !10994, !tbaa !2632
  %dec = add i64 %21, -1, !dbg !10994
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10994, !tbaa !2632
  %cmp7 = icmp ne i64 %dec, 0, !dbg !10995
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !10996

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !10997

if.else:                                          ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10999, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !11001
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11001, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !11002
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11002, !tbaa !2642
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11003, !tbaa !2563
  call void %24(%struct._object* %25), !dbg !11004
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11005
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !11005
  br label %do.cond, !dbg !11007

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !11008

do.end:                                           ; preds = %do.cond
  %27 = load %struct._object*, %struct._object** %y, align 8, !dbg !11010, !tbaa !2563
  store %struct._object* %27, %struct._object** %x, align 8, !dbg !11012, !tbaa !2563
  %28 = load %struct._object*, %struct._object** %x, align 8, !dbg !11013, !tbaa !2563
  %cmp10 = icmp eq %struct._object* %28, null, !dbg !11015
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !11016

if.then.11:                                       ; preds = %do.end
  br label %Done, !dbg !11017

if.end.12:                                        ; preds = %do.end
  br label %if.end.13, !dbg !11019

if.end.13:                                        ; preds = %if.end.12, %if.end.4
  %29 = load %struct._object*, %struct._object** %ms, align 8, !dbg !11020, !tbaa !2563
  %tobool14 = icmp ne %struct._object* %29, null, !dbg !11020
  br i1 %tobool14, label %if.then.15, label %if.end.32, !dbg !11021

if.then.15:                                       ; preds = %if.end.13
  %30 = load %struct._object*, %struct._object** %x, align 8, !dbg !11022, !tbaa !2563
  %31 = load %struct._object*, %struct._object** %ms, align 8, !dbg !11023, !tbaa !2563
  %32 = load %struct._object*, %struct._object** @us_per_ms, align 8, !dbg !11024, !tbaa !2563
  %call16 = call %struct._object* @accum(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.192, i32 0, i32 0), %struct._object* %30, %struct._object* %31, %struct._object* %32, double* %leftover_us), !dbg !11025
  store %struct._object* %call16, %struct._object** %y, align 8, !dbg !11026, !tbaa !2563
  br label %do.body.17, !dbg !11027

do.body.17:                                       ; preds = %if.then.15
  %33 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !11028
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !11028
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !1839, metadata !2553), !dbg !11030
  %34 = load %struct._object*, %struct._object** %x, align 8, !dbg !11031, !tbaa !2563
  store %struct._object* %34, %struct._object** %_py_decref_tmp18, align 8, !dbg !11030, !tbaa !2563
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !11032, !tbaa !2563
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !11034
  %36 = load i64, i64* %ob_refcnt19, align 8, !dbg !11035, !tbaa !2632
  %dec20 = add i64 %36, -1, !dbg !11035
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !11035, !tbaa !2632
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !11036
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !11037

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !11038

if.else.23:                                       ; preds = %do.body.17
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !11040, !tbaa !2563
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !11042
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !11042, !tbaa !2640
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !11043
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !11043, !tbaa !2642
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !11044, !tbaa !2563
  call void %39(%struct._object* %40), !dbg !11045
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %41 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !11046
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !11046
  br label %do.cond.27, !dbg !11048

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !11049

do.end.28:                                        ; preds = %do.cond.27
  %42 = load %struct._object*, %struct._object** %y, align 8, !dbg !11051, !tbaa !2563
  store %struct._object* %42, %struct._object** %x, align 8, !dbg !11053, !tbaa !2563
  %43 = load %struct._object*, %struct._object** %x, align 8, !dbg !11054, !tbaa !2563
  %cmp29 = icmp eq %struct._object* %43, null, !dbg !11056
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !11057

if.then.30:                                       ; preds = %do.end.28
  br label %Done, !dbg !11058

if.end.31:                                        ; preds = %do.end.28
  br label %if.end.32, !dbg !11060

if.end.32:                                        ; preds = %if.end.31, %if.end.13
  %44 = load %struct._object*, %struct._object** %second, align 8, !dbg !11061, !tbaa !2563
  %tobool33 = icmp ne %struct._object* %44, null, !dbg !11061
  br i1 %tobool33, label %if.then.34, label %if.end.51, !dbg !11062

if.then.34:                                       ; preds = %if.end.32
  %45 = load %struct._object*, %struct._object** %x, align 8, !dbg !11063, !tbaa !2563
  %46 = load %struct._object*, %struct._object** %second, align 8, !dbg !11064, !tbaa !2563
  %47 = load %struct._object*, %struct._object** @us_per_second, align 8, !dbg !11065, !tbaa !2563
  %call35 = call %struct._object* @accum(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.188, i32 0, i32 0), %struct._object* %45, %struct._object* %46, %struct._object* %47, double* %leftover_us), !dbg !11066
  store %struct._object* %call35, %struct._object** %y, align 8, !dbg !11067, !tbaa !2563
  br label %do.body.36, !dbg !11068

do.body.36:                                       ; preds = %if.then.34
  %48 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !11069
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !11069
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !1843, metadata !2553), !dbg !11071
  %49 = load %struct._object*, %struct._object** %x, align 8, !dbg !11072, !tbaa !2563
  store %struct._object* %49, %struct._object** %_py_decref_tmp37, align 8, !dbg !11071, !tbaa !2563
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !11073, !tbaa !2563
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !11075
  %51 = load i64, i64* %ob_refcnt38, align 8, !dbg !11076, !tbaa !2632
  %dec39 = add i64 %51, -1, !dbg !11076
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !11076, !tbaa !2632
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !11077
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !11078

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45, !dbg !11079

if.else.42:                                       ; preds = %do.body.36
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !11081, !tbaa !2563
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !11083
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !11083, !tbaa !2640
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !11084
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !11084, !tbaa !2642
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !11085, !tbaa !2563
  call void %54(%struct._object* %55), !dbg !11086
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %56 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !11087
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !11087
  br label %do.cond.46, !dbg !11089

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !11090

do.end.47:                                        ; preds = %do.cond.46
  %57 = load %struct._object*, %struct._object** %y, align 8, !dbg !11092, !tbaa !2563
  store %struct._object* %57, %struct._object** %x, align 8, !dbg !11094, !tbaa !2563
  %58 = load %struct._object*, %struct._object** %x, align 8, !dbg !11095, !tbaa !2563
  %cmp48 = icmp eq %struct._object* %58, null, !dbg !11097
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !11098

if.then.49:                                       ; preds = %do.end.47
  br label %Done, !dbg !11099

if.end.50:                                        ; preds = %do.end.47
  br label %if.end.51, !dbg !11101

if.end.51:                                        ; preds = %if.end.50, %if.end.32
  %59 = load %struct._object*, %struct._object** %minute, align 8, !dbg !11102, !tbaa !2563
  %tobool52 = icmp ne %struct._object* %59, null, !dbg !11102
  br i1 %tobool52, label %if.then.53, label %if.end.70, !dbg !11103

if.then.53:                                       ; preds = %if.end.51
  %60 = load %struct._object*, %struct._object** %x, align 8, !dbg !11104, !tbaa !2563
  %61 = load %struct._object*, %struct._object** %minute, align 8, !dbg !11105, !tbaa !2563
  %62 = load %struct._object*, %struct._object** @us_per_minute, align 8, !dbg !11106, !tbaa !2563
  %call54 = call %struct._object* @accum(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i32 0, i32 0), %struct._object* %60, %struct._object* %61, %struct._object* %62, double* %leftover_us), !dbg !11107
  store %struct._object* %call54, %struct._object** %y, align 8, !dbg !11108, !tbaa !2563
  br label %do.body.55, !dbg !11109

do.body.55:                                       ; preds = %if.then.53
  %63 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !11110
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !11110
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !1847, metadata !2553), !dbg !11112
  %64 = load %struct._object*, %struct._object** %x, align 8, !dbg !11113, !tbaa !2563
  store %struct._object* %64, %struct._object** %_py_decref_tmp56, align 8, !dbg !11112, !tbaa !2563
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !11114, !tbaa !2563
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !11116
  %66 = load i64, i64* %ob_refcnt57, align 8, !dbg !11117, !tbaa !2632
  %dec58 = add i64 %66, -1, !dbg !11117
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !11117, !tbaa !2632
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !11118
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !11119

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64, !dbg !11120

if.else.61:                                       ; preds = %do.body.55
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !11122, !tbaa !2563
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !11124
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !11124, !tbaa !2640
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !11125
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !11125, !tbaa !2642
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !11126, !tbaa !2563
  call void %69(%struct._object* %70), !dbg !11127
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %71 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !11128
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !11128
  br label %do.cond.65, !dbg !11130

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !11131

do.end.66:                                        ; preds = %do.cond.65
  %72 = load %struct._object*, %struct._object** %y, align 8, !dbg !11133, !tbaa !2563
  store %struct._object* %72, %struct._object** %x, align 8, !dbg !11135, !tbaa !2563
  %73 = load %struct._object*, %struct._object** %x, align 8, !dbg !11136, !tbaa !2563
  %cmp67 = icmp eq %struct._object* %73, null, !dbg !11138
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !11139

if.then.68:                                       ; preds = %do.end.66
  br label %Done, !dbg !11140

if.end.69:                                        ; preds = %do.end.66
  br label %if.end.70, !dbg !11142

if.end.70:                                        ; preds = %if.end.69, %if.end.51
  %74 = load %struct._object*, %struct._object** %hour, align 8, !dbg !11143, !tbaa !2563
  %tobool71 = icmp ne %struct._object* %74, null, !dbg !11143
  br i1 %tobool71, label %if.then.72, label %if.end.89, !dbg !11144

if.then.72:                                       ; preds = %if.end.70
  %75 = load %struct._object*, %struct._object** %x, align 8, !dbg !11145, !tbaa !2563
  %76 = load %struct._object*, %struct._object** %hour, align 8, !dbg !11146, !tbaa !2563
  %77 = load %struct._object*, %struct._object** @us_per_hour, align 8, !dbg !11147, !tbaa !2563
  %call73 = call %struct._object* @accum(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), %struct._object* %75, %struct._object* %76, %struct._object* %77, double* %leftover_us), !dbg !11148
  store %struct._object* %call73, %struct._object** %y, align 8, !dbg !11149, !tbaa !2563
  br label %do.body.74, !dbg !11150

do.body.74:                                       ; preds = %if.then.72
  %78 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !11151
  call void @llvm.lifetime.start(i64 8, i8* %78) #1, !dbg !11151
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp75, metadata !1851, metadata !2553), !dbg !11153
  %79 = load %struct._object*, %struct._object** %x, align 8, !dbg !11154, !tbaa !2563
  store %struct._object* %79, %struct._object** %_py_decref_tmp75, align 8, !dbg !11153, !tbaa !2563
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !11155, !tbaa !2563
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !11157
  %81 = load i64, i64* %ob_refcnt76, align 8, !dbg !11158, !tbaa !2632
  %dec77 = add i64 %81, -1, !dbg !11158
  store i64 %dec77, i64* %ob_refcnt76, align 8, !dbg !11158, !tbaa !2632
  %cmp78 = icmp ne i64 %dec77, 0, !dbg !11159
  br i1 %cmp78, label %if.then.79, label %if.else.80, !dbg !11160

if.then.79:                                       ; preds = %do.body.74
  br label %if.end.83, !dbg !11161

if.else.80:                                       ; preds = %do.body.74
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !11163, !tbaa !2563
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !11165
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !11165, !tbaa !2640
  %tp_dealloc82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !11166
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc82, align 8, !dbg !11166, !tbaa !2642
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !11167, !tbaa !2563
  call void %84(%struct._object* %85), !dbg !11168
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.79
  %86 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !11169
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !11169
  br label %do.cond.84, !dbg !11171

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !11172

do.end.85:                                        ; preds = %do.cond.84
  %87 = load %struct._object*, %struct._object** %y, align 8, !dbg !11174, !tbaa !2563
  store %struct._object* %87, %struct._object** %x, align 8, !dbg !11176, !tbaa !2563
  %88 = load %struct._object*, %struct._object** %x, align 8, !dbg !11177, !tbaa !2563
  %cmp86 = icmp eq %struct._object* %88, null, !dbg !11179
  br i1 %cmp86, label %if.then.87, label %if.end.88, !dbg !11180

if.then.87:                                       ; preds = %do.end.85
  br label %Done, !dbg !11181

if.end.88:                                        ; preds = %do.end.85
  br label %if.end.89, !dbg !11183

if.end.89:                                        ; preds = %if.end.88, %if.end.70
  %89 = load %struct._object*, %struct._object** %day, align 8, !dbg !11184, !tbaa !2563
  %tobool90 = icmp ne %struct._object* %89, null, !dbg !11184
  br i1 %tobool90, label %if.then.91, label %if.end.108, !dbg !11185

if.then.91:                                       ; preds = %if.end.89
  %90 = load %struct._object*, %struct._object** %x, align 8, !dbg !11186, !tbaa !2563
  %91 = load %struct._object*, %struct._object** %day, align 8, !dbg !11187, !tbaa !2563
  %92 = load %struct._object*, %struct._object** @us_per_day, align 8, !dbg !11188, !tbaa !2563
  %call92 = call %struct._object* @accum(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), %struct._object* %90, %struct._object* %91, %struct._object* %92, double* %leftover_us), !dbg !11189
  store %struct._object* %call92, %struct._object** %y, align 8, !dbg !11190, !tbaa !2563
  br label %do.body.93, !dbg !11191

do.body.93:                                       ; preds = %if.then.91
  %93 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !11192
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !11192
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !1855, metadata !2553), !dbg !11194
  %94 = load %struct._object*, %struct._object** %x, align 8, !dbg !11195, !tbaa !2563
  store %struct._object* %94, %struct._object** %_py_decref_tmp94, align 8, !dbg !11194, !tbaa !2563
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !11196, !tbaa !2563
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !11198
  %96 = load i64, i64* %ob_refcnt95, align 8, !dbg !11199, !tbaa !2632
  %dec96 = add i64 %96, -1, !dbg !11199
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !11199, !tbaa !2632
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !11200
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !11201

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !11202

if.else.99:                                       ; preds = %do.body.93
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !11204, !tbaa !2563
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !11206
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !11206, !tbaa !2640
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !11207
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !11207, !tbaa !2642
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !11208, !tbaa !2563
  call void %99(%struct._object* %100), !dbg !11209
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %101 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !11210
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !11210
  br label %do.cond.103, !dbg !11212

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !11213

do.end.104:                                       ; preds = %do.cond.103
  %102 = load %struct._object*, %struct._object** %y, align 8, !dbg !11215, !tbaa !2563
  store %struct._object* %102, %struct._object** %x, align 8, !dbg !11217, !tbaa !2563
  %103 = load %struct._object*, %struct._object** %x, align 8, !dbg !11218, !tbaa !2563
  %cmp105 = icmp eq %struct._object* %103, null, !dbg !11220
  br i1 %cmp105, label %if.then.106, label %if.end.107, !dbg !11221

if.then.106:                                      ; preds = %do.end.104
  br label %Done, !dbg !11222

if.end.107:                                       ; preds = %do.end.104
  br label %if.end.108, !dbg !11224

if.end.108:                                       ; preds = %if.end.107, %if.end.89
  %104 = load %struct._object*, %struct._object** %week, align 8, !dbg !11225, !tbaa !2563
  %tobool109 = icmp ne %struct._object* %104, null, !dbg !11225
  br i1 %tobool109, label %if.then.110, label %if.end.127, !dbg !11226

if.then.110:                                      ; preds = %if.end.108
  %105 = load %struct._object*, %struct._object** %x, align 8, !dbg !11227, !tbaa !2563
  %106 = load %struct._object*, %struct._object** %week, align 8, !dbg !11228, !tbaa !2563
  %107 = load %struct._object*, %struct._object** @us_per_week, align 8, !dbg !11229, !tbaa !2563
  %call111 = call %struct._object* @accum(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0), %struct._object* %105, %struct._object* %106, %struct._object* %107, double* %leftover_us), !dbg !11230
  store %struct._object* %call111, %struct._object** %y, align 8, !dbg !11231, !tbaa !2563
  br label %do.body.112, !dbg !11232

do.body.112:                                      ; preds = %if.then.110
  %108 = bitcast %struct._object** %_py_decref_tmp113 to i8*, !dbg !11233
  call void @llvm.lifetime.start(i64 8, i8* %108) #1, !dbg !11233
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp113, metadata !1859, metadata !2553), !dbg !11235
  %109 = load %struct._object*, %struct._object** %x, align 8, !dbg !11236, !tbaa !2563
  store %struct._object* %109, %struct._object** %_py_decref_tmp113, align 8, !dbg !11235, !tbaa !2563
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !11237, !tbaa !2563
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !11239
  %111 = load i64, i64* %ob_refcnt114, align 8, !dbg !11240, !tbaa !2632
  %dec115 = add i64 %111, -1, !dbg !11240
  store i64 %dec115, i64* %ob_refcnt114, align 8, !dbg !11240, !tbaa !2632
  %cmp116 = icmp ne i64 %dec115, 0, !dbg !11241
  br i1 %cmp116, label %if.then.117, label %if.else.118, !dbg !11242

if.then.117:                                      ; preds = %do.body.112
  br label %if.end.121, !dbg !11243

if.else.118:                                      ; preds = %do.body.112
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !11245, !tbaa !2563
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !11247
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8, !dbg !11247, !tbaa !2640
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 4, !dbg !11248
  %114 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8, !dbg !11248, !tbaa !2642
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !11249, !tbaa !2563
  call void %114(%struct._object* %115), !dbg !11250
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  %116 = bitcast %struct._object** %_py_decref_tmp113 to i8*, !dbg !11251
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !11251
  br label %do.cond.122, !dbg !11253

do.cond.122:                                      ; preds = %if.end.121
  br label %do.end.123, !dbg !11254

do.end.123:                                       ; preds = %do.cond.122
  %117 = load %struct._object*, %struct._object** %y, align 8, !dbg !11256, !tbaa !2563
  store %struct._object* %117, %struct._object** %x, align 8, !dbg !11258, !tbaa !2563
  %118 = load %struct._object*, %struct._object** %x, align 8, !dbg !11259, !tbaa !2563
  %cmp124 = icmp eq %struct._object* %118, null, !dbg !11261
  br i1 %cmp124, label %if.then.125, label %if.end.126, !dbg !11262

if.then.125:                                      ; preds = %do.end.123
  br label %Done, !dbg !11263

if.end.126:                                       ; preds = %do.end.123
  br label %if.end.127, !dbg !11265

if.end.127:                                       ; preds = %if.end.126, %if.end.108
  %119 = load double, double* %leftover_us, align 8, !dbg !11266, !tbaa !10963
  %tobool128 = fcmp une double %119, 0.000000e+00, !dbg !11266
  br i1 %tobool128, label %if.then.129, label %if.end.236, !dbg !11267

if.then.129:                                      ; preds = %if.end.127
  %120 = bitcast double* %whole_us to i8*, !dbg !11268
  call void @llvm.lifetime.start(i64 8, i8* %120) #1, !dbg !11268
  call void @llvm.dbg.declare(metadata double* %whole_us, metadata !1863, metadata !2553), !dbg !11269
  %121 = load double, double* %leftover_us, align 8, !dbg !11270, !tbaa !10963
  %call130 = call double @round(double %121) #2, !dbg !11271
  store double %call130, double* %whole_us, align 8, !dbg !11269, !tbaa !10963
  %122 = bitcast i32* %x_is_odd to i8*, !dbg !11272
  call void @llvm.lifetime.start(i64 4, i8* %122) #1, !dbg !11272
  call void @llvm.dbg.declare(metadata i32* %x_is_odd, metadata !1866, metadata !2553), !dbg !11273
  %123 = bitcast %struct._object** %temp to i8*, !dbg !11274
  call void @llvm.lifetime.start(i64 8, i8* %123) #1, !dbg !11274
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1867, metadata !2553), !dbg !11275
  %124 = load double, double* %leftover_us, align 8, !dbg !11276, !tbaa !10963
  %call131 = call double @round(double %124) #2, !dbg !11277
  store double %call131, double* %whole_us, align 8, !dbg !11278, !tbaa !10963
  %125 = load double, double* %whole_us, align 8, !dbg !11279, !tbaa !10963
  %126 = load double, double* %leftover_us, align 8, !dbg !11280, !tbaa !10963
  %sub = fsub double %125, %126, !dbg !11281
  %call132 = call double @fabs(double %sub) #2, !dbg !11282
  %cmp133 = fcmp oeq double %call132, 5.000000e-01, !dbg !11283
  br i1 %cmp133, label %if.then.134, label %if.end.183, !dbg !11284

if.then.134:                                      ; preds = %if.then.129
  %127 = load %struct._object*, %struct._object** %x, align 8, !dbg !11285, !tbaa !2563
  %128 = load %struct._object*, %struct._object** @one, align 8, !dbg !11286, !tbaa !2563
  %call135 = call %struct._object* @PyNumber_And(%struct._object* %127, %struct._object* %128), !dbg !11287
  store %struct._object* %call135, %struct._object** %temp, align 8, !dbg !11288, !tbaa !2563
  %129 = load %struct._object*, %struct._object** %temp, align 8, !dbg !11289, !tbaa !2563
  %cmp136 = icmp eq %struct._object* %129, null, !dbg !11290
  br i1 %cmp136, label %if.then.137, label %if.end.150, !dbg !11291

if.then.137:                                      ; preds = %if.then.134
  br label %do.body.138, !dbg !11292

do.body.138:                                      ; preds = %if.then.137
  %130 = bitcast %struct._object** %_py_decref_tmp139 to i8*, !dbg !11293
  call void @llvm.lifetime.start(i64 8, i8* %130) #1, !dbg !11293
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp139, metadata !1868, metadata !2553), !dbg !11295
  %131 = load %struct._object*, %struct._object** %x, align 8, !dbg !11296, !tbaa !2563
  store %struct._object* %131, %struct._object** %_py_decref_tmp139, align 8, !dbg !11295, !tbaa !2563
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8, !dbg !11297, !tbaa !2563
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 0, !dbg !11299
  %133 = load i64, i64* %ob_refcnt140, align 8, !dbg !11300, !tbaa !2632
  %dec141 = add i64 %133, -1, !dbg !11300
  store i64 %dec141, i64* %ob_refcnt140, align 8, !dbg !11300, !tbaa !2632
  %cmp142 = icmp ne i64 %dec141, 0, !dbg !11301
  br i1 %cmp142, label %if.then.143, label %if.else.144, !dbg !11302

if.then.143:                                      ; preds = %do.body.138
  br label %if.end.147, !dbg !11303

if.else.144:                                      ; preds = %do.body.138
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8, !dbg !11305, !tbaa !2563
  %ob_type145 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 1, !dbg !11307
  %135 = load %struct._typeobject*, %struct._typeobject** %ob_type145, align 8, !dbg !11307, !tbaa !2640
  %tp_dealloc146 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %135, i32 0, i32 4, !dbg !11308
  %136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc146, align 8, !dbg !11308, !tbaa !2642
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8, !dbg !11309, !tbaa !2563
  call void %136(%struct._object* %137), !dbg !11310
  br label %if.end.147

if.end.147:                                       ; preds = %if.else.144, %if.then.143
  %138 = bitcast %struct._object** %_py_decref_tmp139 to i8*, !dbg !11311
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !11311
  br label %do.cond.148, !dbg !11313

do.cond.148:                                      ; preds = %if.end.147
  br label %do.end.149, !dbg !11314

do.end.149:                                       ; preds = %do.cond.148
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11316

if.end.150:                                       ; preds = %if.then.134
  %139 = load %struct._object*, %struct._object** %temp, align 8, !dbg !11317, !tbaa !2563
  %call151 = call i32 @PyObject_IsTrue(%struct._object* %139), !dbg !11318
  store i32 %call151, i32* %x_is_odd, align 4, !dbg !11319, !tbaa !3325
  br label %do.body.152, !dbg !11320

do.body.152:                                      ; preds = %if.end.150
  %140 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !11321
  call void @llvm.lifetime.start(i64 8, i8* %140) #1, !dbg !11321
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp153, metadata !1874, metadata !2553), !dbg !11323
  %141 = load %struct._object*, %struct._object** %temp, align 8, !dbg !11324, !tbaa !2563
  store %struct._object* %141, %struct._object** %_py_decref_tmp153, align 8, !dbg !11323, !tbaa !2563
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11325, !tbaa !2563
  %ob_refcnt154 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 0, !dbg !11327
  %143 = load i64, i64* %ob_refcnt154, align 8, !dbg !11328, !tbaa !2632
  %dec155 = add i64 %143, -1, !dbg !11328
  store i64 %dec155, i64* %ob_refcnt154, align 8, !dbg !11328, !tbaa !2632
  %cmp156 = icmp ne i64 %dec155, 0, !dbg !11329
  br i1 %cmp156, label %if.then.157, label %if.else.158, !dbg !11330

if.then.157:                                      ; preds = %do.body.152
  br label %if.end.161, !dbg !11331

if.else.158:                                      ; preds = %do.body.152
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11333, !tbaa !2563
  %ob_type159 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 1, !dbg !11335
  %145 = load %struct._typeobject*, %struct._typeobject** %ob_type159, align 8, !dbg !11335, !tbaa !2640
  %tp_dealloc160 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %145, i32 0, i32 4, !dbg !11336
  %146 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc160, align 8, !dbg !11336, !tbaa !2642
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11337, !tbaa !2563
  call void %146(%struct._object* %147), !dbg !11338
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.158, %if.then.157
  %148 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !11339
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !11339
  br label %do.cond.162, !dbg !11341

do.cond.162:                                      ; preds = %if.end.161
  br label %do.end.163, !dbg !11342

do.end.163:                                       ; preds = %do.cond.162
  %149 = load i32, i32* %x_is_odd, align 4, !dbg !11344, !tbaa !3325
  %cmp164 = icmp eq i32 %149, -1, !dbg !11345
  br i1 %cmp164, label %if.then.165, label %if.end.178, !dbg !11346

if.then.165:                                      ; preds = %do.end.163
  br label %do.body.166, !dbg !11347

do.body.166:                                      ; preds = %if.then.165
  %150 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !11348
  call void @llvm.lifetime.start(i64 8, i8* %150) #1, !dbg !11348
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp167, metadata !1876, metadata !2553), !dbg !11350
  %151 = load %struct._object*, %struct._object** %x, align 8, !dbg !11351, !tbaa !2563
  store %struct._object* %151, %struct._object** %_py_decref_tmp167, align 8, !dbg !11350, !tbaa !2563
  %152 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11352, !tbaa !2563
  %ob_refcnt168 = getelementptr inbounds %struct._object, %struct._object* %152, i32 0, i32 0, !dbg !11354
  %153 = load i64, i64* %ob_refcnt168, align 8, !dbg !11355, !tbaa !2632
  %dec169 = add i64 %153, -1, !dbg !11355
  store i64 %dec169, i64* %ob_refcnt168, align 8, !dbg !11355, !tbaa !2632
  %cmp170 = icmp ne i64 %dec169, 0, !dbg !11356
  br i1 %cmp170, label %if.then.171, label %if.else.172, !dbg !11357

if.then.171:                                      ; preds = %do.body.166
  br label %if.end.175, !dbg !11358

if.else.172:                                      ; preds = %do.body.166
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11360, !tbaa !2563
  %ob_type173 = getelementptr inbounds %struct._object, %struct._object* %154, i32 0, i32 1, !dbg !11362
  %155 = load %struct._typeobject*, %struct._typeobject** %ob_type173, align 8, !dbg !11362, !tbaa !2640
  %tp_dealloc174 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %155, i32 0, i32 4, !dbg !11363
  %156 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc174, align 8, !dbg !11363, !tbaa !2642
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11364, !tbaa !2563
  call void %156(%struct._object* %157), !dbg !11365
  br label %if.end.175

if.end.175:                                       ; preds = %if.else.172, %if.then.171
  %158 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !11366
  call void @llvm.lifetime.end(i64 8, i8* %158) #1, !dbg !11366
  br label %do.cond.176, !dbg !11368

do.cond.176:                                      ; preds = %if.end.175
  br label %do.end.177, !dbg !11369

do.end.177:                                       ; preds = %do.cond.176
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11371

if.end.178:                                       ; preds = %do.end.163
  %159 = load double, double* %leftover_us, align 8, !dbg !11372, !tbaa !10963
  %160 = load i32, i32* %x_is_odd, align 4, !dbg !11373, !tbaa !3325
  %conv = sitofp i32 %160 to double, !dbg !11373
  %add = fadd double %159, %conv, !dbg !11374
  %mul = fmul double %add, 5.000000e-01, !dbg !11375
  %call179 = call double @round(double %mul) #2, !dbg !11376
  %mul180 = fmul double 2.000000e+00, %call179, !dbg !11377
  %161 = load i32, i32* %x_is_odd, align 4, !dbg !11378, !tbaa !3325
  %conv181 = sitofp i32 %161 to double, !dbg !11378
  %sub182 = fsub double %mul180, %conv181, !dbg !11379
  store double %sub182, double* %whole_us, align 8, !dbg !11380, !tbaa !10963
  br label %if.end.183, !dbg !11381

if.end.183:                                       ; preds = %if.end.178, %if.then.129
  %162 = load double, double* %whole_us, align 8, !dbg !11382, !tbaa !10963
  %conv184 = fptosi double %162 to i64, !dbg !11383
  %call185 = call %struct._object* @PyLong_FromLong(i64 %conv184), !dbg !11384
  store %struct._object* %call185, %struct._object** %temp, align 8, !dbg !11385, !tbaa !2563
  %163 = load %struct._object*, %struct._object** %temp, align 8, !dbg !11386, !tbaa !2563
  %cmp186 = icmp eq %struct._object* %163, null, !dbg !11387
  br i1 %cmp186, label %if.then.188, label %if.end.202, !dbg !11388

if.then.188:                                      ; preds = %if.end.183
  br label %do.body.189, !dbg !11389

do.body.189:                                      ; preds = %if.then.188
  %164 = bitcast %struct._object** %_py_decref_tmp190 to i8*, !dbg !11390
  call void @llvm.lifetime.start(i64 8, i8* %164) #1, !dbg !11390
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp190, metadata !1880, metadata !2553), !dbg !11392
  %165 = load %struct._object*, %struct._object** %x, align 8, !dbg !11393, !tbaa !2563
  store %struct._object* %165, %struct._object** %_py_decref_tmp190, align 8, !dbg !11392, !tbaa !2563
  %166 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !11394, !tbaa !2563
  %ob_refcnt191 = getelementptr inbounds %struct._object, %struct._object* %166, i32 0, i32 0, !dbg !11396
  %167 = load i64, i64* %ob_refcnt191, align 8, !dbg !11397, !tbaa !2632
  %dec192 = add i64 %167, -1, !dbg !11397
  store i64 %dec192, i64* %ob_refcnt191, align 8, !dbg !11397, !tbaa !2632
  %cmp193 = icmp ne i64 %dec192, 0, !dbg !11398
  br i1 %cmp193, label %if.then.195, label %if.else.196, !dbg !11399

if.then.195:                                      ; preds = %do.body.189
  br label %if.end.199, !dbg !11400

if.else.196:                                      ; preds = %do.body.189
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !11402, !tbaa !2563
  %ob_type197 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 1, !dbg !11404
  %169 = load %struct._typeobject*, %struct._typeobject** %ob_type197, align 8, !dbg !11404, !tbaa !2640
  %tp_dealloc198 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %169, i32 0, i32 4, !dbg !11405
  %170 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc198, align 8, !dbg !11405, !tbaa !2642
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !11406, !tbaa !2563
  call void %170(%struct._object* %171), !dbg !11407
  br label %if.end.199

if.end.199:                                       ; preds = %if.else.196, %if.then.195
  %172 = bitcast %struct._object** %_py_decref_tmp190 to i8*, !dbg !11408
  call void @llvm.lifetime.end(i64 8, i8* %172) #1, !dbg !11408
  br label %do.cond.200, !dbg !11410

do.cond.200:                                      ; preds = %if.end.199
  br label %do.end.201, !dbg !11411

do.end.201:                                       ; preds = %do.cond.200
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11413

if.end.202:                                       ; preds = %if.end.183
  %173 = load %struct._object*, %struct._object** %x, align 8, !dbg !11414, !tbaa !2563
  %174 = load %struct._object*, %struct._object** %temp, align 8, !dbg !11415, !tbaa !2563
  %call203 = call %struct._object* @PyNumber_Add(%struct._object* %173, %struct._object* %174), !dbg !11416
  store %struct._object* %call203, %struct._object** %y, align 8, !dbg !11417, !tbaa !2563
  br label %do.body.204, !dbg !11418

do.body.204:                                      ; preds = %if.end.202
  %175 = bitcast %struct._object** %_py_decref_tmp205 to i8*, !dbg !11419
  call void @llvm.lifetime.start(i64 8, i8* %175) #1, !dbg !11419
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp205, metadata !1884, metadata !2553), !dbg !11421
  %176 = load %struct._object*, %struct._object** %temp, align 8, !dbg !11422, !tbaa !2563
  store %struct._object* %176, %struct._object** %_py_decref_tmp205, align 8, !dbg !11421, !tbaa !2563
  %177 = load %struct._object*, %struct._object** %_py_decref_tmp205, align 8, !dbg !11423, !tbaa !2563
  %ob_refcnt206 = getelementptr inbounds %struct._object, %struct._object* %177, i32 0, i32 0, !dbg !11425
  %178 = load i64, i64* %ob_refcnt206, align 8, !dbg !11426, !tbaa !2632
  %dec207 = add i64 %178, -1, !dbg !11426
  store i64 %dec207, i64* %ob_refcnt206, align 8, !dbg !11426, !tbaa !2632
  %cmp208 = icmp ne i64 %dec207, 0, !dbg !11427
  br i1 %cmp208, label %if.then.210, label %if.else.211, !dbg !11428

if.then.210:                                      ; preds = %do.body.204
  br label %if.end.214, !dbg !11429

if.else.211:                                      ; preds = %do.body.204
  %179 = load %struct._object*, %struct._object** %_py_decref_tmp205, align 8, !dbg !11431, !tbaa !2563
  %ob_type212 = getelementptr inbounds %struct._object, %struct._object* %179, i32 0, i32 1, !dbg !11433
  %180 = load %struct._typeobject*, %struct._typeobject** %ob_type212, align 8, !dbg !11433, !tbaa !2640
  %tp_dealloc213 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %180, i32 0, i32 4, !dbg !11434
  %181 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc213, align 8, !dbg !11434, !tbaa !2642
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp205, align 8, !dbg !11435, !tbaa !2563
  call void %181(%struct._object* %182), !dbg !11436
  br label %if.end.214

if.end.214:                                       ; preds = %if.else.211, %if.then.210
  %183 = bitcast %struct._object** %_py_decref_tmp205 to i8*, !dbg !11437
  call void @llvm.lifetime.end(i64 8, i8* %183) #1, !dbg !11437
  br label %do.cond.215, !dbg !11439

do.cond.215:                                      ; preds = %if.end.214
  br label %do.end.216, !dbg !11440

do.end.216:                                       ; preds = %do.cond.215
  br label %do.body.217, !dbg !11442

do.body.217:                                      ; preds = %do.end.216
  %184 = bitcast %struct._object** %_py_decref_tmp218 to i8*, !dbg !11443
  call void @llvm.lifetime.start(i64 8, i8* %184) #1, !dbg !11443
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp218, metadata !1886, metadata !2553), !dbg !11445
  %185 = load %struct._object*, %struct._object** %x, align 8, !dbg !11446, !tbaa !2563
  store %struct._object* %185, %struct._object** %_py_decref_tmp218, align 8, !dbg !11445, !tbaa !2563
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8, !dbg !11447, !tbaa !2563
  %ob_refcnt219 = getelementptr inbounds %struct._object, %struct._object* %186, i32 0, i32 0, !dbg !11449
  %187 = load i64, i64* %ob_refcnt219, align 8, !dbg !11450, !tbaa !2632
  %dec220 = add i64 %187, -1, !dbg !11450
  store i64 %dec220, i64* %ob_refcnt219, align 8, !dbg !11450, !tbaa !2632
  %cmp221 = icmp ne i64 %dec220, 0, !dbg !11451
  br i1 %cmp221, label %if.then.223, label %if.else.224, !dbg !11452

if.then.223:                                      ; preds = %do.body.217
  br label %if.end.227, !dbg !11453

if.else.224:                                      ; preds = %do.body.217
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8, !dbg !11455, !tbaa !2563
  %ob_type225 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 1, !dbg !11457
  %189 = load %struct._typeobject*, %struct._typeobject** %ob_type225, align 8, !dbg !11457, !tbaa !2640
  %tp_dealloc226 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %189, i32 0, i32 4, !dbg !11458
  %190 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc226, align 8, !dbg !11458, !tbaa !2642
  %191 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8, !dbg !11459, !tbaa !2563
  call void %190(%struct._object* %191), !dbg !11460
  br label %if.end.227

if.end.227:                                       ; preds = %if.else.224, %if.then.223
  %192 = bitcast %struct._object** %_py_decref_tmp218 to i8*, !dbg !11461
  call void @llvm.lifetime.end(i64 8, i8* %192) #1, !dbg !11461
  br label %do.cond.228, !dbg !11462

do.cond.228:                                      ; preds = %if.end.227
  br label %do.end.229, !dbg !11463

do.end.229:                                       ; preds = %do.cond.228
  %193 = load %struct._object*, %struct._object** %y, align 8, !dbg !11465, !tbaa !2563
  store %struct._object* %193, %struct._object** %x, align 8, !dbg !11467, !tbaa !2563
  %194 = load %struct._object*, %struct._object** %x, align 8, !dbg !11468, !tbaa !2563
  %cmp230 = icmp eq %struct._object* %194, null, !dbg !11470
  br i1 %cmp230, label %if.then.232, label %if.end.233, !dbg !11471

if.then.232:                                      ; preds = %do.end.229
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11472

if.end.233:                                       ; preds = %do.end.229
  store i32 0, i32* %cleanup.dest.slot, !dbg !11473
  br label %cleanup, !dbg !11473

cleanup:                                          ; preds = %if.then.232, %do.end.201, %do.end.177, %do.end.149, %if.end.233
  %195 = bitcast %struct._object** %temp to i8*, !dbg !11474
  call void @llvm.lifetime.end(i64 8, i8* %195) #1, !dbg !11474
  %196 = bitcast i32* %x_is_odd to i8*, !dbg !11474
  call void @llvm.lifetime.end(i64 4, i8* %196) #1, !dbg !11474
  %197 = bitcast double* %whole_us to i8*, !dbg !11474
  call void @llvm.lifetime.end(i64 8, i8* %197) #1, !dbg !11474
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.251 [
    i32 0, label %cleanup.cont
    i32 2, label %Done
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.236, !dbg !11476

if.end.236:                                       ; preds = %cleanup.cont, %if.end.127
  %198 = load %struct._object*, %struct._object** %x, align 8, !dbg !11477, !tbaa !2563
  %199 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11478, !tbaa !2563
  %call237 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %198, %struct._typeobject* %199), !dbg !11479
  store %struct._object* %call237, %struct._object** %self, align 8, !dbg !11480, !tbaa !2563
  br label %do.body.238, !dbg !11481

do.body.238:                                      ; preds = %if.end.236
  %200 = bitcast %struct._object** %_py_decref_tmp239 to i8*, !dbg !11482
  call void @llvm.lifetime.start(i64 8, i8* %200) #1, !dbg !11482
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp239, metadata !1888, metadata !2553), !dbg !11484
  %201 = load %struct._object*, %struct._object** %x, align 8, !dbg !11485, !tbaa !2563
  store %struct._object* %201, %struct._object** %_py_decref_tmp239, align 8, !dbg !11484, !tbaa !2563
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp239, align 8, !dbg !11486, !tbaa !2563
  %ob_refcnt240 = getelementptr inbounds %struct._object, %struct._object* %202, i32 0, i32 0, !dbg !11488
  %203 = load i64, i64* %ob_refcnt240, align 8, !dbg !11489, !tbaa !2632
  %dec241 = add i64 %203, -1, !dbg !11489
  store i64 %dec241, i64* %ob_refcnt240, align 8, !dbg !11489, !tbaa !2632
  %cmp242 = icmp ne i64 %dec241, 0, !dbg !11490
  br i1 %cmp242, label %if.then.244, label %if.else.245, !dbg !11491

if.then.244:                                      ; preds = %do.body.238
  br label %if.end.248, !dbg !11492

if.else.245:                                      ; preds = %do.body.238
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp239, align 8, !dbg !11494, !tbaa !2563
  %ob_type246 = getelementptr inbounds %struct._object, %struct._object* %204, i32 0, i32 1, !dbg !11496
  %205 = load %struct._typeobject*, %struct._typeobject** %ob_type246, align 8, !dbg !11496, !tbaa !2640
  %tp_dealloc247 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %205, i32 0, i32 4, !dbg !11497
  %206 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc247, align 8, !dbg !11497, !tbaa !2642
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp239, align 8, !dbg !11498, !tbaa !2563
  call void %206(%struct._object* %207), !dbg !11499
  br label %if.end.248

if.end.248:                                       ; preds = %if.else.245, %if.then.244
  %208 = bitcast %struct._object** %_py_decref_tmp239 to i8*, !dbg !11500
  call void @llvm.lifetime.end(i64 8, i8* %208) #1, !dbg !11500
  br label %do.cond.249, !dbg !11502

do.cond.249:                                      ; preds = %if.end.248
  br label %do.end.250, !dbg !11503

do.end.250:                                       ; preds = %do.cond.249
  br label %Done, !dbg !11505

Done:                                             ; preds = %do.end.250, %cleanup, %if.then.125, %if.then.106, %if.then.87, %if.then.68, %if.then.49, %if.then.30, %if.then.11, %if.then.3, %if.then
  %209 = load %struct._object*, %struct._object** %self, align 8, !dbg !11507, !tbaa !2563
  store %struct._object* %209, %struct._object** %retval, !dbg !11508
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.251, !dbg !11508

cleanup.251:                                      ; preds = %Done, %cleanup
  %210 = bitcast double* %leftover_us to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %210) #1, !dbg !11509
  %211 = bitcast %struct._object** %y to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %211) #1, !dbg !11509
  %212 = bitcast %struct._object** %x to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %212) #1, !dbg !11509
  %213 = bitcast %struct._object** %week to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %213) #1, !dbg !11509
  %214 = bitcast %struct._object** %hour to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %214) #1, !dbg !11509
  %215 = bitcast %struct._object** %minute to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %215) #1, !dbg !11509
  %216 = bitcast %struct._object** %ms to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %216) #1, !dbg !11509
  %217 = bitcast %struct._object** %us to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %217) #1, !dbg !11509
  %218 = bitcast %struct._object** %second to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %218) #1, !dbg !11509
  %219 = bitcast %struct._object** %day to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %219) #1, !dbg !11509
  %220 = bitcast %struct._object** %self to i8*, !dbg !11509
  call void @llvm.lifetime.end(i64 8, i8* %220) #1, !dbg !11509
  %221 = load %struct._object*, %struct._object** %retval, !dbg !11509
  ret %struct._object* %221, !dbg !11509
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_add(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %days = alloca i32, align 4
  %seconds = alloca i32, align 4
  %microseconds = alloca i32, align 4
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1574, metadata !2553), !dbg !11510
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1575, metadata !2553), !dbg !11511
  %0 = bitcast %struct._object** %result to i8*, !dbg !11512
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11512
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1576, metadata !2553), !dbg !11513
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %result, align 8, !dbg !11513, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11514, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !11515
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11515, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DeltaType, !dbg !11516
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !11517

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11518, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !11520
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !11520, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11521
  %tobool = icmp ne i32 %call, 0, !dbg !11521
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11522

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11523, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !11526
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !11526, !tbaa !2640
  %cmp3 = icmp eq %struct._typeobject* %6, @PyDateTime_DeltaType, !dbg !11527
  br i1 %cmp3, label %if.then, label %lor.lhs.false.4, !dbg !11528

lor.lhs.false.4:                                  ; preds = %land.lhs.true
  %7 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11529, !tbaa !2563
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !11531
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !11531, !tbaa !2640
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11532
  %tobool7 = icmp ne i32 %call6, 0, !dbg !11532
  br i1 %tobool7, label %if.then, label %if.end, !dbg !11533

if.then:                                          ; preds = %lor.lhs.false.4, %land.lhs.true
  %9 = bitcast i32* %days to i8*, !dbg !11534
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !11534
  call void @llvm.dbg.declare(metadata i32* %days, metadata !1577, metadata !2553), !dbg !11535
  %10 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11536, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyDateTime_Delta*, !dbg !11537
  %days8 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %11, i32 0, i32 2, !dbg !11538
  %12 = load i32, i32* %days8, align 4, !dbg !11538, !tbaa !3363
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11539, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Delta*, !dbg !11540
  %days9 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %14, i32 0, i32 2, !dbg !11541
  %15 = load i32, i32* %days9, align 4, !dbg !11541, !tbaa !3363
  %add = add i32 %12, %15, !dbg !11542
  store i32 %add, i32* %days, align 4, !dbg !11535, !tbaa !3325
  %16 = bitcast i32* %seconds to i8*, !dbg !11543
  call void @llvm.lifetime.start(i64 4, i8* %16) #1, !dbg !11543
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !1580, metadata !2553), !dbg !11544
  %17 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11545, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !11546
  %seconds10 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %18, i32 0, i32 3, !dbg !11547
  %19 = load i32, i32* %seconds10, align 4, !dbg !11547, !tbaa !3368
  %20 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11548, !tbaa !2563
  %21 = bitcast %struct._object* %20 to %struct.PyDateTime_Delta*, !dbg !11549
  %seconds11 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %21, i32 0, i32 3, !dbg !11550
  %22 = load i32, i32* %seconds11, align 4, !dbg !11550, !tbaa !3368
  %add12 = add i32 %19, %22, !dbg !11551
  store i32 %add12, i32* %seconds, align 4, !dbg !11544, !tbaa !3325
  %23 = bitcast i32* %microseconds to i8*, !dbg !11552
  call void @llvm.lifetime.start(i64 4, i8* %23) #1, !dbg !11552
  call void @llvm.dbg.declare(metadata i32* %microseconds, metadata !1581, metadata !2553), !dbg !11553
  %24 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11554, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyDateTime_Delta*, !dbg !11555
  %microseconds13 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %25, i32 0, i32 4, !dbg !11556
  %26 = load i32, i32* %microseconds13, align 4, !dbg !11556, !tbaa !3373
  %27 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11557, !tbaa !2563
  %28 = bitcast %struct._object* %27 to %struct.PyDateTime_Delta*, !dbg !11558
  %microseconds14 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %28, i32 0, i32 4, !dbg !11559
  %29 = load i32, i32* %microseconds14, align 4, !dbg !11559, !tbaa !3373
  %add15 = add i32 %26, %29, !dbg !11560
  store i32 %add15, i32* %microseconds, align 4, !dbg !11553, !tbaa !3325
  %30 = load i32, i32* %days, align 4, !dbg !11561, !tbaa !3325
  %31 = load i32, i32* %seconds, align 4, !dbg !11562, !tbaa !3325
  %32 = load i32, i32* %microseconds, align 4, !dbg !11563, !tbaa !3325
  %call16 = call %struct._object* @new_delta_ex(i32 %30, i32 %31, i32 %32, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11564
  store %struct._object* %call16, %struct._object** %result, align 8, !dbg !11565, !tbaa !2563
  %33 = bitcast i32* %microseconds to i8*, !dbg !11566
  call void @llvm.lifetime.end(i64 4, i8* %33) #1, !dbg !11566
  %34 = bitcast i32* %seconds to i8*, !dbg !11566
  call void @llvm.lifetime.end(i64 4, i8* %34) #1, !dbg !11566
  %35 = bitcast i32* %days to i8*, !dbg !11566
  call void @llvm.lifetime.end(i64 4, i8* %35) #1, !dbg !11566
  br label %if.end, !dbg !11567

if.end:                                           ; preds = %if.then, %lor.lhs.false.4, %lor.lhs.false
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !11568, !tbaa !2563
  %cmp17 = icmp eq %struct._object* %36, @_Py_NotImplementedStruct, !dbg !11570
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !11571

if.then.18:                                       ; preds = %if.end
  %37 = load %struct._object*, %struct._object** %result, align 8, !dbg !11572, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !11573
  %38 = load i64, i64* %ob_refcnt, align 8, !dbg !11574, !tbaa !2632
  %inc = add i64 %38, 1, !dbg !11574
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11574, !tbaa !2632
  br label %if.end.19, !dbg !11575

if.end.19:                                        ; preds = %if.then.18, %if.end
  %39 = load %struct._object*, %struct._object** %result, align 8, !dbg !11576, !tbaa !2563
  %40 = bitcast %struct._object** %result to i8*, !dbg !11577
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !11577
  ret %struct._object* %39, !dbg !11578
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_multiply(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1584, metadata !2553), !dbg !11579
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1585, metadata !2553), !dbg !11580
  %0 = bitcast %struct._object** %result to i8*, !dbg !11581
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11581
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1586, metadata !2553), !dbg !11582
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %result, align 8, !dbg !11582, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11583, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !11585
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11585, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DeltaType, !dbg !11586
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11587

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11588, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !11590
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !11590, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11591
  %tobool = icmp ne i32 %call, 0, !dbg !11591
  br i1 %tobool, label %if.then, label %if.else.15, !dbg !11592

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11593, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !11596
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !11596, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !11597
  %7 = load i64, i64* %tp_flags, align 8, !dbg !11597, !tbaa !3751
  %and = and i64 %7, 16777216, !dbg !11598
  %cmp3 = icmp ne i64 %and, 0, !dbg !11599
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !11600

if.then.4:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11601, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11602, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct.PyDateTime_Delta*, !dbg !11603
  %call5 = call %struct._object* @multiply_int_timedelta(%struct._object* %8, %struct.PyDateTime_Delta* %10), !dbg !11604
  store %struct._object* %call5, %struct._object** %result, align 8, !dbg !11605, !tbaa !2563
  br label %if.end.14, !dbg !11606

if.else:                                          ; preds = %if.then
  %11 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11607, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !11609
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !11609, !tbaa !2640
  %cmp7 = icmp eq %struct._typeobject* %12, @PyFloat_Type, !dbg !11610
  br i1 %cmp7, label %if.then.12, label %lor.lhs.false.8, !dbg !11611

lor.lhs.false.8:                                  ; preds = %if.else
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11612, !tbaa !2563
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !11614
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !11614, !tbaa !2640
  %call10 = call i32 @PyType_IsSubtype(%struct._typeobject* %14, %struct._typeobject* @PyFloat_Type), !dbg !11615
  %tobool11 = icmp ne i32 %call10, 0, !dbg !11615
  br i1 %tobool11, label %if.then.12, label %if.end, !dbg !11616

if.then.12:                                       ; preds = %lor.lhs.false.8, %if.else
  %15 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11617, !tbaa !2563
  %16 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11618, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyDateTime_Delta*, !dbg !11619
  %call13 = call %struct._object* @multiply_float_timedelta(%struct._object* %15, %struct.PyDateTime_Delta* %17), !dbg !11620
  store %struct._object* %call13, %struct._object** %result, align 8, !dbg !11621, !tbaa !2563
  br label %if.end, !dbg !11622

if.end:                                           ; preds = %if.then.12, %lor.lhs.false.8
  br label %if.end.14

if.end.14:                                        ; preds = %if.end, %if.then.4
  br label %if.end.33, !dbg !11623

if.else.15:                                       ; preds = %lor.lhs.false
  %18 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11624, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !11626
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !11626, !tbaa !2640
  %tp_flags17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19, !dbg !11627
  %20 = load i64, i64* %tp_flags17, align 8, !dbg !11627, !tbaa !3751
  %and18 = and i64 %20, 16777216, !dbg !11628
  %cmp19 = icmp ne i64 %and18, 0, !dbg !11629
  br i1 %cmp19, label %if.then.20, label %if.else.22, !dbg !11630

if.then.20:                                       ; preds = %if.else.15
  %21 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11631, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11632, !tbaa !2563
  %23 = bitcast %struct._object* %22 to %struct.PyDateTime_Delta*, !dbg !11633
  %call21 = call %struct._object* @multiply_int_timedelta(%struct._object* %21, %struct.PyDateTime_Delta* %23), !dbg !11634
  store %struct._object* %call21, %struct._object** %result, align 8, !dbg !11635, !tbaa !2563
  br label %if.end.32, !dbg !11636

if.else.22:                                       ; preds = %if.else.15
  %24 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11637, !tbaa !2563
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !11639
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !11639, !tbaa !2640
  %cmp24 = icmp eq %struct._typeobject* %25, @PyFloat_Type, !dbg !11640
  br i1 %cmp24, label %if.then.29, label %lor.lhs.false.25, !dbg !11641

lor.lhs.false.25:                                 ; preds = %if.else.22
  %26 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11642, !tbaa !2563
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !11644
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !11644, !tbaa !2640
  %call27 = call i32 @PyType_IsSubtype(%struct._typeobject* %27, %struct._typeobject* @PyFloat_Type), !dbg !11645
  %tobool28 = icmp ne i32 %call27, 0, !dbg !11645
  br i1 %tobool28, label %if.then.29, label %if.end.31, !dbg !11646

if.then.29:                                       ; preds = %lor.lhs.false.25, %if.else.22
  %28 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11647, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11648, !tbaa !2563
  %30 = bitcast %struct._object* %29 to %struct.PyDateTime_Delta*, !dbg !11649
  %call30 = call %struct._object* @multiply_float_timedelta(%struct._object* %28, %struct.PyDateTime_Delta* %30), !dbg !11650
  store %struct._object* %call30, %struct._object** %result, align 8, !dbg !11651, !tbaa !2563
  br label %if.end.31, !dbg !11652

if.end.31:                                        ; preds = %if.then.29, %lor.lhs.false.25
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.20
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.end.14
  %31 = load %struct._object*, %struct._object** %result, align 8, !dbg !11653, !tbaa !2563
  %cmp34 = icmp eq %struct._object* %31, @_Py_NotImplementedStruct, !dbg !11655
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !11656

if.then.35:                                       ; preds = %if.end.33
  %32 = load %struct._object*, %struct._object** %result, align 8, !dbg !11657, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !11658
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !11659, !tbaa !2632
  %inc = add i64 %33, 1, !dbg !11659
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11659, !tbaa !2632
  br label %if.end.36, !dbg !11660

if.end.36:                                        ; preds = %if.then.35, %if.end.33
  %34 = load %struct._object*, %struct._object** %result, align 8, !dbg !11661, !tbaa !2563
  %35 = bitcast %struct._object** %result to i8*, !dbg !11662
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !11662
  ret %struct._object* %34, !dbg !11663
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_remainder(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %pyus_left = alloca %struct._object*, align 8
  %pyus_right = alloca %struct._object*, align 8
  %pyus_remainder = alloca %struct._object*, align 8
  %remainder = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1662, metadata !2553), !dbg !11664
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1663, metadata !2553), !dbg !11665
  %0 = bitcast %struct._object** %pyus_left to i8*, !dbg !11666
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11666
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_left, metadata !1664, metadata !2553), !dbg !11667
  %1 = bitcast %struct._object** %pyus_right to i8*, !dbg !11668
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !11668
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_right, metadata !1665, metadata !2553), !dbg !11669
  %2 = bitcast %struct._object** %pyus_remainder to i8*, !dbg !11670
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11670
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_remainder, metadata !1666, metadata !2553), !dbg !11671
  %3 = bitcast %struct._object** %remainder to i8*, !dbg !11672
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !11672
  call void @llvm.dbg.declare(metadata %struct._object** %remainder, metadata !1667, metadata !2553), !dbg !11673
  %4 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11674, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !11676
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11676, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %5, @PyDateTime_DeltaType, !dbg !11677
  br i1 %cmp, label %lor.lhs.false.2, label %lor.lhs.false, !dbg !11678

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11679, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !11681
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !11681, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11682
  %tobool = icmp ne i32 %call, 0, !dbg !11682
  br i1 %tobool, label %lor.lhs.false.2, label %if.then, !dbg !11683

lor.lhs.false.2:                                  ; preds = %lor.lhs.false, %entry
  %8 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11684, !tbaa !2563
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !11687
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !11687, !tbaa !2640
  %cmp4 = icmp eq %struct._typeobject* %9, @PyDateTime_DeltaType, !dbg !11688
  br i1 %cmp4, label %if.end, label %lor.lhs.false.5, !dbg !11689

lor.lhs.false.5:                                  ; preds = %lor.lhs.false.2
  %10 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11690, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !11692
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !11692, !tbaa !2640
  %call7 = call i32 @PyType_IsSubtype(%struct._typeobject* %11, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11693
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11693
  br i1 %tobool8, label %if.end, label %if.then, !dbg !11694

if.then:                                          ; preds = %lor.lhs.false.5, %lor.lhs.false
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !11695, !tbaa !2632
  %inc = add i64 %12, 1, !dbg !11695
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !11695, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !11696
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11696

if.end:                                           ; preds = %lor.lhs.false.5, %lor.lhs.false.2
  %13 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11697, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyDateTime_Delta*, !dbg !11698
  %call9 = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %14), !dbg !11699
  store %struct._object* %call9, %struct._object** %pyus_left, align 8, !dbg !11700, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11701, !tbaa !2563
  %cmp10 = icmp eq %struct._object* %15, null, !dbg !11703
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !11704

if.then.11:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !11705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11705

if.end.12:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11706, !tbaa !2563
  %17 = bitcast %struct._object* %16 to %struct.PyDateTime_Delta*, !dbg !11707
  %call13 = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %17), !dbg !11708
  store %struct._object* %call13, %struct._object** %pyus_right, align 8, !dbg !11709, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !11710, !tbaa !2563
  %cmp14 = icmp eq %struct._object* %18, null, !dbg !11711
  br i1 %cmp14, label %if.then.15, label %if.end.20, !dbg !11712

if.then.15:                                       ; preds = %if.end.12
  br label %do.body, !dbg !11713

do.body:                                          ; preds = %if.then.15
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11714
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !11714
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1668, metadata !2553), !dbg !11716
  %20 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11717, !tbaa !2563
  store %struct._object* %20, %struct._object** %_py_decref_tmp, align 8, !dbg !11716, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11718, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !11720
  %22 = load i64, i64* %ob_refcnt, align 8, !dbg !11721, !tbaa !2632
  %dec = add i64 %22, -1, !dbg !11721
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11721, !tbaa !2632
  %cmp16 = icmp ne i64 %dec, 0, !dbg !11722
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !11723

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !11724

if.else:                                          ; preds = %do.body
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11726, !tbaa !2563
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !11728
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !11728, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !11729
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11729, !tbaa !2642
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11730, !tbaa !2563
  call void %25(%struct._object* %26), !dbg !11731
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.17
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11732
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !11732
  br label %do.cond, !dbg !11734

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !11735

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !11737
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11737

if.end.20:                                        ; preds = %if.end.12
  %28 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11738, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !11739, !tbaa !2563
  %call21 = call %struct._object* @PyNumber_Remainder(%struct._object* %28, %struct._object* %29), !dbg !11740
  store %struct._object* %call21, %struct._object** %pyus_remainder, align 8, !dbg !11741, !tbaa !2563
  br label %do.body.22, !dbg !11742

do.body.22:                                       ; preds = %if.end.20
  %30 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !11743
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !11743
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1672, metadata !2553), !dbg !11745
  %31 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11746, !tbaa !2563
  store %struct._object* %31, %struct._object** %_py_decref_tmp23, align 8, !dbg !11745, !tbaa !2563
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !11747, !tbaa !2563
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !11749
  %33 = load i64, i64* %ob_refcnt24, align 8, !dbg !11750, !tbaa !2632
  %dec25 = add i64 %33, -1, !dbg !11750
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !11750, !tbaa !2632
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !11751
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !11752

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31, !dbg !11753

if.else.28:                                       ; preds = %do.body.22
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !11755, !tbaa !2563
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !11757
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !11757, !tbaa !2640
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !11758
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !11758, !tbaa !2642
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !11759, !tbaa !2563
  call void %36(%struct._object* %37), !dbg !11760
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %38 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !11761
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !11761
  br label %do.cond.32, !dbg !11763

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !11764

do.end.33:                                        ; preds = %do.cond.32
  br label %do.body.34, !dbg !11766

do.body.34:                                       ; preds = %do.end.33
  %39 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !11767
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !11767
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp35, metadata !1674, metadata !2553), !dbg !11769
  %40 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !11770, !tbaa !2563
  store %struct._object* %40, %struct._object** %_py_decref_tmp35, align 8, !dbg !11769, !tbaa !2563
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !11771, !tbaa !2563
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !11773
  %42 = load i64, i64* %ob_refcnt36, align 8, !dbg !11774, !tbaa !2632
  %dec37 = add i64 %42, -1, !dbg !11774
  store i64 %dec37, i64* %ob_refcnt36, align 8, !dbg !11774, !tbaa !2632
  %cmp38 = icmp ne i64 %dec37, 0, !dbg !11775
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !11776

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43, !dbg !11777

if.else.40:                                       ; preds = %do.body.34
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !11779, !tbaa !2563
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !11781
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !11781, !tbaa !2640
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !11782
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !11782, !tbaa !2642
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !11783, !tbaa !2563
  call void %45(%struct._object* %46), !dbg !11784
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  %47 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !11785
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !11785
  br label %do.cond.44, !dbg !11786

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !11787

do.end.45:                                        ; preds = %do.cond.44
  %48 = load %struct._object*, %struct._object** %pyus_remainder, align 8, !dbg !11789, !tbaa !2563
  %cmp46 = icmp eq %struct._object* %48, null, !dbg !11791
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !11792

if.then.47:                                       ; preds = %do.end.45
  store %struct._object* null, %struct._object** %retval, !dbg !11793
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11793

if.end.48:                                        ; preds = %do.end.45
  %49 = load %struct._object*, %struct._object** %pyus_remainder, align 8, !dbg !11794, !tbaa !2563
  %call49 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %49, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11795
  store %struct._object* %call49, %struct._object** %remainder, align 8, !dbg !11796, !tbaa !2563
  br label %do.body.50, !dbg !11797

do.body.50:                                       ; preds = %if.end.48
  %50 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !11798
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !11798
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !1676, metadata !2553), !dbg !11800
  %51 = load %struct._object*, %struct._object** %pyus_remainder, align 8, !dbg !11801, !tbaa !2563
  store %struct._object* %51, %struct._object** %_py_decref_tmp51, align 8, !dbg !11800, !tbaa !2563
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !11802, !tbaa !2563
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !11804
  %53 = load i64, i64* %ob_refcnt52, align 8, !dbg !11805, !tbaa !2632
  %dec53 = add i64 %53, -1, !dbg !11805
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !11805, !tbaa !2632
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !11806
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !11807

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !11808

if.else.56:                                       ; preds = %do.body.50
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !11810, !tbaa !2563
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !11812
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !11812, !tbaa !2640
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !11813
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !11813, !tbaa !2642
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !11814, !tbaa !2563
  call void %56(%struct._object* %57), !dbg !11815
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %58 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !11816
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !11816
  br label %do.cond.60, !dbg !11817

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !11818

do.end.61:                                        ; preds = %do.cond.60
  %59 = load %struct._object*, %struct._object** %remainder, align 8, !dbg !11820, !tbaa !2563
  %cmp62 = icmp eq %struct._object* %59, null, !dbg !11822
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !11823

if.then.63:                                       ; preds = %do.end.61
  store %struct._object* null, %struct._object** %retval, !dbg !11824
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11824

if.end.64:                                        ; preds = %do.end.61
  %60 = load %struct._object*, %struct._object** %remainder, align 8, !dbg !11825, !tbaa !2563
  store %struct._object* %60, %struct._object** %retval, !dbg !11826
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11826

cleanup:                                          ; preds = %if.end.64, %if.then.63, %if.then.47, %do.end, %if.then.11, %if.then
  %61 = bitcast %struct._object** %remainder to i8*, !dbg !11827
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !11827
  %62 = bitcast %struct._object** %pyus_remainder to i8*, !dbg !11827
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !11827
  %63 = bitcast %struct._object** %pyus_right to i8*, !dbg !11827
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !11827
  %64 = bitcast %struct._object** %pyus_left to i8*, !dbg !11827
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !11827
  %65 = load %struct._object*, %struct._object** %retval, !dbg !11827
  ret %struct._object* %65, !dbg !11827
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_divmod(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %pyus_left = alloca %struct._object*, align 8
  %pyus_right = alloca %struct._object*, align 8
  %divmod = alloca %struct._object*, align 8
  %delta = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  %_py_decref_tmp53 = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1680, metadata !2553), !dbg !11828
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1681, metadata !2553), !dbg !11829
  %0 = bitcast %struct._object** %pyus_left to i8*, !dbg !11830
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11830
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_left, metadata !1682, metadata !2553), !dbg !11831
  %1 = bitcast %struct._object** %pyus_right to i8*, !dbg !11832
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !11832
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_right, metadata !1683, metadata !2553), !dbg !11833
  %2 = bitcast %struct._object** %divmod to i8*, !dbg !11834
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !11834
  call void @llvm.dbg.declare(metadata %struct._object** %divmod, metadata !1684, metadata !2553), !dbg !11835
  %3 = bitcast %struct._object** %delta to i8*, !dbg !11836
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !11836
  call void @llvm.dbg.declare(metadata %struct._object** %delta, metadata !1685, metadata !2553), !dbg !11837
  %4 = bitcast %struct._object** %result to i8*, !dbg !11838
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !11838
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1686, metadata !2553), !dbg !11839
  %5 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11840, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !11842
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11842, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %6, @PyDateTime_DeltaType, !dbg !11843
  br i1 %cmp, label %lor.lhs.false.2, label %lor.lhs.false, !dbg !11844

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11845, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !11847
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !11847, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11848
  %tobool = icmp ne i32 %call, 0, !dbg !11848
  br i1 %tobool, label %lor.lhs.false.2, label %if.then, !dbg !11849

lor.lhs.false.2:                                  ; preds = %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11850, !tbaa !2563
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !11853
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !11853, !tbaa !2640
  %cmp4 = icmp eq %struct._typeobject* %10, @PyDateTime_DeltaType, !dbg !11854
  br i1 %cmp4, label %if.end, label %lor.lhs.false.5, !dbg !11855

lor.lhs.false.5:                                  ; preds = %lor.lhs.false.2
  %11 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11856, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !11858
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !11858, !tbaa !2640
  %call7 = call i32 @PyType_IsSubtype(%struct._typeobject* %12, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11859
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11859
  br i1 %tobool8, label %if.end, label %if.then, !dbg !11860

if.then:                                          ; preds = %lor.lhs.false.5, %lor.lhs.false
  %13 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !11861, !tbaa !2632
  %inc = add i64 %13, 1, !dbg !11861
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !11861, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !11862
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11862

if.end:                                           ; preds = %lor.lhs.false.5, %lor.lhs.false.2
  %14 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !11863, !tbaa !2563
  %15 = bitcast %struct._object* %14 to %struct.PyDateTime_Delta*, !dbg !11864
  %call9 = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %15), !dbg !11865
  store %struct._object* %call9, %struct._object** %pyus_left, align 8, !dbg !11866, !tbaa !2563
  %16 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11867, !tbaa !2563
  %cmp10 = icmp eq %struct._object* %16, null, !dbg !11869
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !11870

if.then.11:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !11871
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11871

if.end.12:                                        ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !11872, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !11873
  %call13 = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %18), !dbg !11874
  store %struct._object* %call13, %struct._object** %pyus_right, align 8, !dbg !11875, !tbaa !2563
  %19 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !11876, !tbaa !2563
  %cmp14 = icmp eq %struct._object* %19, null, !dbg !11877
  br i1 %cmp14, label %if.then.15, label %if.end.20, !dbg !11878

if.then.15:                                       ; preds = %if.end.12
  br label %do.body, !dbg !11879

do.body:                                          ; preds = %if.then.15
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11880
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !11880
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1687, metadata !2553), !dbg !11882
  %21 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11883, !tbaa !2563
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !11882, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11884, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !11886
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !11887, !tbaa !2632
  %dec = add i64 %23, -1, !dbg !11887
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11887, !tbaa !2632
  %cmp16 = icmp ne i64 %dec, 0, !dbg !11888
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !11889

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !11890

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11892, !tbaa !2563
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !11894
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !11894, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !11895
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11895, !tbaa !2642
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11896, !tbaa !2563
  call void %26(%struct._object* %27), !dbg !11897
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.17
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11898
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !11898
  br label %do.cond, !dbg !11900

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !11901

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !11903
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11903

if.end.20:                                        ; preds = %if.end.12
  %29 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11904, !tbaa !2563
  %30 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !11905, !tbaa !2563
  %call21 = call %struct._object* @PyNumber_Divmod(%struct._object* %29, %struct._object* %30), !dbg !11906
  store %struct._object* %call21, %struct._object** %divmod, align 8, !dbg !11907, !tbaa !2563
  br label %do.body.22, !dbg !11908

do.body.22:                                       ; preds = %if.end.20
  %31 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !11909
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !11909
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1691, metadata !2553), !dbg !11911
  %32 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !11912, !tbaa !2563
  store %struct._object* %32, %struct._object** %_py_decref_tmp23, align 8, !dbg !11911, !tbaa !2563
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !11913, !tbaa !2563
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !11915
  %34 = load i64, i64* %ob_refcnt24, align 8, !dbg !11916, !tbaa !2632
  %dec25 = add i64 %34, -1, !dbg !11916
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !11916, !tbaa !2632
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !11917
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !11918

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31, !dbg !11919

if.else.28:                                       ; preds = %do.body.22
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !11921, !tbaa !2563
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !11923
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !11923, !tbaa !2640
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !11924
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !11924, !tbaa !2642
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !11925, !tbaa !2563
  call void %37(%struct._object* %38), !dbg !11926
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %39 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !11927
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !11927
  br label %do.cond.32, !dbg !11929

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !11930

do.end.33:                                        ; preds = %do.cond.32
  br label %do.body.34, !dbg !11932

do.body.34:                                       ; preds = %do.end.33
  %40 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !11933
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !11933
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp35, metadata !1693, metadata !2553), !dbg !11935
  %41 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !11936, !tbaa !2563
  store %struct._object* %41, %struct._object** %_py_decref_tmp35, align 8, !dbg !11935, !tbaa !2563
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !11937, !tbaa !2563
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !11939
  %43 = load i64, i64* %ob_refcnt36, align 8, !dbg !11940, !tbaa !2632
  %dec37 = add i64 %43, -1, !dbg !11940
  store i64 %dec37, i64* %ob_refcnt36, align 8, !dbg !11940, !tbaa !2632
  %cmp38 = icmp ne i64 %dec37, 0, !dbg !11941
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !11942

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43, !dbg !11943

if.else.40:                                       ; preds = %do.body.34
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !11945, !tbaa !2563
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !11947
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !11947, !tbaa !2640
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !11948
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !11948, !tbaa !2642
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !11949, !tbaa !2563
  call void %46(%struct._object* %47), !dbg !11950
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  %48 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !11951
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !11951
  br label %do.cond.44, !dbg !11952

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !11953

do.end.45:                                        ; preds = %do.cond.44
  %49 = load %struct._object*, %struct._object** %divmod, align 8, !dbg !11955, !tbaa !2563
  %cmp46 = icmp eq %struct._object* %49, null, !dbg !11957
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !11958

if.then.47:                                       ; preds = %do.end.45
  store %struct._object* null, %struct._object** %retval, !dbg !11959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11959

if.end.48:                                        ; preds = %do.end.45
  %50 = load %struct._object*, %struct._object** %divmod, align 8, !dbg !11960, !tbaa !2563
  %51 = bitcast %struct._object* %50 to %struct.PyTupleObject*, !dbg !11961
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %51, i32 0, i32 1, !dbg !11962
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 1, !dbg !11963
  %52 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11963, !tbaa !2563
  %call49 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %52, %struct._typeobject* @PyDateTime_DeltaType), !dbg !11964
  store %struct._object* %call49, %struct._object** %delta, align 8, !dbg !11965, !tbaa !2563
  %53 = load %struct._object*, %struct._object** %delta, align 8, !dbg !11966, !tbaa !2563
  %cmp50 = icmp eq %struct._object* %53, null, !dbg !11967
  br i1 %cmp50, label %if.then.51, label %if.end.64, !dbg !11968

if.then.51:                                       ; preds = %if.end.48
  br label %do.body.52, !dbg !11969

do.body.52:                                       ; preds = %if.then.51
  %54 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !11970
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !11970
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp53, metadata !1695, metadata !2553), !dbg !11972
  %55 = load %struct._object*, %struct._object** %divmod, align 8, !dbg !11973, !tbaa !2563
  store %struct._object* %55, %struct._object** %_py_decref_tmp53, align 8, !dbg !11972, !tbaa !2563
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !11974, !tbaa !2563
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !11976
  %57 = load i64, i64* %ob_refcnt54, align 8, !dbg !11977, !tbaa !2632
  %dec55 = add i64 %57, -1, !dbg !11977
  store i64 %dec55, i64* %ob_refcnt54, align 8, !dbg !11977, !tbaa !2632
  %cmp56 = icmp ne i64 %dec55, 0, !dbg !11978
  br i1 %cmp56, label %if.then.57, label %if.else.58, !dbg !11979

if.then.57:                                       ; preds = %do.body.52
  br label %if.end.61, !dbg !11980

if.else.58:                                       ; preds = %do.body.52
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !11982, !tbaa !2563
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !11984
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !11984, !tbaa !2640
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !11985
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !11985, !tbaa !2642
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !11986, !tbaa !2563
  call void %60(%struct._object* %61), !dbg !11987
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.then.57
  %62 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !11988
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !11988
  br label %do.cond.62, !dbg !11990

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !11991

do.end.63:                                        ; preds = %do.cond.62
  store %struct._object* null, %struct._object** %retval, !dbg !11993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11993

if.end.64:                                        ; preds = %if.end.48
  %63 = load %struct._object*, %struct._object** %divmod, align 8, !dbg !11994, !tbaa !2563
  %64 = bitcast %struct._object* %63 to %struct.PyTupleObject*, !dbg !11995
  %ob_item65 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %64, i32 0, i32 1, !dbg !11996
  %arrayidx66 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item65, i32 0, i64 0, !dbg !11997
  %65 = load %struct._object*, %struct._object** %arrayidx66, align 8, !dbg !11997, !tbaa !2563
  %66 = load %struct._object*, %struct._object** %delta, align 8, !dbg !11998, !tbaa !2563
  %call67 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %65, %struct._object* %66), !dbg !11999
  store %struct._object* %call67, %struct._object** %result, align 8, !dbg !12000, !tbaa !2563
  br label %do.body.68, !dbg !12001

do.body.68:                                       ; preds = %if.end.64
  %67 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !12002
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !12002
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp69, metadata !1699, metadata !2553), !dbg !12004
  %68 = load %struct._object*, %struct._object** %delta, align 8, !dbg !12005, !tbaa !2563
  store %struct._object* %68, %struct._object** %_py_decref_tmp69, align 8, !dbg !12004, !tbaa !2563
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !12006, !tbaa !2563
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !12008
  %70 = load i64, i64* %ob_refcnt70, align 8, !dbg !12009, !tbaa !2632
  %dec71 = add i64 %70, -1, !dbg !12009
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !12009, !tbaa !2632
  %cmp72 = icmp ne i64 %dec71, 0, !dbg !12010
  br i1 %cmp72, label %if.then.73, label %if.else.74, !dbg !12011

if.then.73:                                       ; preds = %do.body.68
  br label %if.end.77, !dbg !12012

if.else.74:                                       ; preds = %do.body.68
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !12014, !tbaa !2563
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !12016
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !12016, !tbaa !2640
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !12017
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !12017, !tbaa !2642
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !12018, !tbaa !2563
  call void %73(%struct._object* %74), !dbg !12019
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %75 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !12020
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !12020
  br label %do.cond.78, !dbg !12021

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !12022

do.end.79:                                        ; preds = %do.cond.78
  br label %do.body.80, !dbg !12024

do.body.80:                                       ; preds = %do.end.79
  %76 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !12025
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !12025
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp81, metadata !1701, metadata !2553), !dbg !12027
  %77 = load %struct._object*, %struct._object** %divmod, align 8, !dbg !12028, !tbaa !2563
  store %struct._object* %77, %struct._object** %_py_decref_tmp81, align 8, !dbg !12027, !tbaa !2563
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !12029, !tbaa !2563
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !12031
  %79 = load i64, i64* %ob_refcnt82, align 8, !dbg !12032, !tbaa !2632
  %dec83 = add i64 %79, -1, !dbg !12032
  store i64 %dec83, i64* %ob_refcnt82, align 8, !dbg !12032, !tbaa !2632
  %cmp84 = icmp ne i64 %dec83, 0, !dbg !12033
  br i1 %cmp84, label %if.then.85, label %if.else.86, !dbg !12034

if.then.85:                                       ; preds = %do.body.80
  br label %if.end.89, !dbg !12035

if.else.86:                                       ; preds = %do.body.80
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !12037, !tbaa !2563
  %ob_type87 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !12039
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type87, align 8, !dbg !12039, !tbaa !2640
  %tp_dealloc88 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !12040
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc88, align 8, !dbg !12040, !tbaa !2642
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !12041, !tbaa !2563
  call void %82(%struct._object* %83), !dbg !12042
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.86, %if.then.85
  %84 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !12043
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !12043
  br label %do.cond.90, !dbg !12044

do.cond.90:                                       ; preds = %if.end.89
  br label %do.end.91, !dbg !12045

do.end.91:                                        ; preds = %do.cond.90
  %85 = load %struct._object*, %struct._object** %result, align 8, !dbg !12047, !tbaa !2563
  store %struct._object* %85, %struct._object** %retval, !dbg !12048
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12048

cleanup:                                          ; preds = %do.end.91, %do.end.63, %if.then.47, %do.end, %if.then.11, %if.then
  %86 = bitcast %struct._object** %result to i8*, !dbg !12049
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !12049
  %87 = bitcast %struct._object** %delta to i8*, !dbg !12049
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !12049
  %88 = bitcast %struct._object** %divmod to i8*, !dbg !12049
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !12049
  %89 = bitcast %struct._object** %pyus_right to i8*, !dbg !12049
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !12049
  %90 = bitcast %struct._object** %pyus_left to i8*, !dbg !12049
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !12049
  %91 = load %struct._object*, %struct._object** %retval, !dbg !12049
  ret %struct._object* %91, !dbg !12049
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_positive(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1705, metadata !2553), !dbg !12050
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !12051, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %0, i32 0, i32 2, !dbg !12052
  %1 = load i32, i32* %days, align 4, !dbg !12052, !tbaa !3363
  %2 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !12053, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %2, i32 0, i32 3, !dbg !12054
  %3 = load i32, i32* %seconds, align 4, !dbg !12054, !tbaa !3368
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !12055, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %4, i32 0, i32 4, !dbg !12056
  %5 = load i32, i32* %microseconds, align 4, !dbg !12056, !tbaa !3373
  %call = call %struct._object* @new_delta_ex(i32 %1, i32 %3, i32 %5, i32 0, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12057
  ret %struct._object* %call, !dbg !12058
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_abs(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  %result = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1708, metadata !2553), !dbg !12059
  %0 = bitcast %struct._object** %result to i8*, !dbg !12060
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12060
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1709, metadata !2553), !dbg !12061
  %1 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !12062, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %1, i32 0, i32 2, !dbg !12064
  %2 = load i32, i32* %days, align 4, !dbg !12064, !tbaa !3363
  %cmp = icmp slt i32 %2, 0, !dbg !12065
  br i1 %cmp, label %if.then, label %if.else, !dbg !12066

if.then:                                          ; preds = %entry
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !12067, !tbaa !2563
  %call = call %struct._object* @delta_negative(%struct.PyDateTime_Delta* %3), !dbg !12068
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !12069, !tbaa !2563
  br label %if.end, !dbg !12070

if.else:                                          ; preds = %entry
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !12071, !tbaa !2563
  %call1 = call %struct._object* @delta_positive(%struct.PyDateTime_Delta* %4), !dbg !12072
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !12073, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !12074, !tbaa !2563
  %6 = bitcast %struct._object** %result to i8*, !dbg !12075
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !12075
  ret %struct._object* %5, !dbg !12076
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_divide(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1712, metadata !2553), !dbg !12077
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1713, metadata !2553), !dbg !12078
  %0 = bitcast %struct._object** %result to i8*, !dbg !12079
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12079
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1714, metadata !2553), !dbg !12080
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %result, align 8, !dbg !12080, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12081, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !12083
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12083, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DeltaType, !dbg !12084
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12085

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12086, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !12088
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !12088, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12089
  %tobool = icmp ne i32 %call, 0, !dbg !12089
  br i1 %tobool, label %if.then, label %if.end.15, !dbg !12090

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12091, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !12094
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !12094, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !12095
  %7 = load i64, i64* %tp_flags, align 8, !dbg !12095, !tbaa !3751
  %and = and i64 %7, 16777216, !dbg !12096
  %cmp3 = icmp ne i64 %and, 0, !dbg !12097
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !12098

if.then.4:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12099, !tbaa !2563
  %9 = bitcast %struct._object* %8 to %struct.PyDateTime_Delta*, !dbg !12100
  %10 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12101, !tbaa !2563
  %call5 = call %struct._object* @divide_timedelta_int(%struct.PyDateTime_Delta* %9, %struct._object* %10), !dbg !12102
  store %struct._object* %call5, %struct._object** %result, align 8, !dbg !12103, !tbaa !2563
  br label %if.end.14, !dbg !12104

if.else:                                          ; preds = %if.then
  %11 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12105, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12107
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !12107, !tbaa !2640
  %cmp7 = icmp eq %struct._typeobject* %12, @PyDateTime_DeltaType, !dbg !12108
  br i1 %cmp7, label %if.then.12, label %lor.lhs.false.8, !dbg !12109

lor.lhs.false.8:                                  ; preds = %if.else
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12110, !tbaa !2563
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !12112
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !12112, !tbaa !2640
  %call10 = call i32 @PyType_IsSubtype(%struct._typeobject* %14, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12113
  %tobool11 = icmp ne i32 %call10, 0, !dbg !12113
  br i1 %tobool11, label %if.then.12, label %if.end, !dbg !12114

if.then.12:                                       ; preds = %lor.lhs.false.8, %if.else
  %15 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12115, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct.PyDateTime_Delta*, !dbg !12116
  %17 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12117, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !12118
  %call13 = call %struct._object* @divide_timedelta_timedelta(%struct.PyDateTime_Delta* %16, %struct.PyDateTime_Delta* %18), !dbg !12119
  store %struct._object* %call13, %struct._object** %result, align 8, !dbg !12120, !tbaa !2563
  br label %if.end, !dbg !12121

if.end:                                           ; preds = %if.then.12, %lor.lhs.false.8
  br label %if.end.14

if.end.14:                                        ; preds = %if.end, %if.then.4
  br label %if.end.15, !dbg !12122

if.end.15:                                        ; preds = %if.end.14, %lor.lhs.false
  %19 = load %struct._object*, %struct._object** %result, align 8, !dbg !12123, !tbaa !2563
  %cmp16 = icmp eq %struct._object* %19, @_Py_NotImplementedStruct, !dbg !12125
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !12126

if.then.17:                                       ; preds = %if.end.15
  %20 = load %struct._object*, %struct._object** %result, align 8, !dbg !12127, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !12128
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !12129, !tbaa !2632
  %inc = add i64 %21, 1, !dbg !12129
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12129, !tbaa !2632
  br label %if.end.18, !dbg !12130

if.end.18:                                        ; preds = %if.then.17, %if.end.15
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !12131, !tbaa !2563
  %23 = bitcast %struct._object** %result to i8*, !dbg !12132
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !12132
  ret %struct._object* %22, !dbg !12133
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_truedivide(%struct._object* %left, %struct._object* %right) #0 {
entry:
  %left.addr = alloca %struct._object*, align 8
  %right.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  store %struct._object* %left, %struct._object** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %left.addr, metadata !1730, metadata !2553), !dbg !12134
  store %struct._object* %right, %struct._object** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %right.addr, metadata !1731, metadata !2553), !dbg !12135
  %0 = bitcast %struct._object** %result to i8*, !dbg !12136
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12136
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1732, metadata !2553), !dbg !12137
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %result, align 8, !dbg !12137, !tbaa !2563
  %1 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12138, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !12140
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12140, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DeltaType, !dbg !12141
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12142

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12143, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !12145
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !12145, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12146
  %tobool = icmp ne i32 %call, 0, !dbg !12146
  br i1 %tobool, label %if.then, label %if.end.25, !dbg !12147

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12148, !tbaa !2563
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !12151
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !12151, !tbaa !2640
  %cmp3 = icmp eq %struct._typeobject* %6, @PyDateTime_DeltaType, !dbg !12152
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4, !dbg !12153

lor.lhs.false.4:                                  ; preds = %if.then
  %7 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12154, !tbaa !2563
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !12156
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !12156, !tbaa !2640
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12157
  %tobool7 = icmp ne i32 %call6, 0, !dbg !12157
  br i1 %tobool7, label %if.then.8, label %if.else, !dbg !12158

if.then.8:                                        ; preds = %lor.lhs.false.4, %if.then
  %9 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12159, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct.PyDateTime_Delta*, !dbg !12160
  %11 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12161, !tbaa !2563
  %12 = bitcast %struct._object* %11 to %struct.PyDateTime_Delta*, !dbg !12162
  %call9 = call %struct._object* @truedivide_timedelta_timedelta(%struct.PyDateTime_Delta* %10, %struct.PyDateTime_Delta* %12), !dbg !12163
  store %struct._object* %call9, %struct._object** %result, align 8, !dbg !12164, !tbaa !2563
  br label %if.end.24, !dbg !12165

if.else:                                          ; preds = %lor.lhs.false.4
  %13 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12166, !tbaa !2563
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !12168
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !12168, !tbaa !2640
  %cmp11 = icmp eq %struct._typeobject* %14, @PyFloat_Type, !dbg !12169
  br i1 %cmp11, label %if.then.16, label %lor.lhs.false.12, !dbg !12170

lor.lhs.false.12:                                 ; preds = %if.else
  %15 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12171, !tbaa !2563
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !12173
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !12173, !tbaa !2640
  %call14 = call i32 @PyType_IsSubtype(%struct._typeobject* %16, %struct._typeobject* @PyFloat_Type), !dbg !12174
  %tobool15 = icmp ne i32 %call14, 0, !dbg !12174
  br i1 %tobool15, label %if.then.16, label %if.else.18, !dbg !12175

if.then.16:                                       ; preds = %lor.lhs.false.12, %if.else
  %17 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12176, !tbaa !2563
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !12177
  %19 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12178, !tbaa !2563
  %call17 = call %struct._object* @truedivide_timedelta_float(%struct.PyDateTime_Delta* %18, %struct._object* %19), !dbg !12179
  store %struct._object* %call17, %struct._object** %result, align 8, !dbg !12180, !tbaa !2563
  br label %if.end.23, !dbg !12181

if.else.18:                                       ; preds = %lor.lhs.false.12
  %20 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12182, !tbaa !2563
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !12184
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !12184, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 19, !dbg !12185
  %22 = load i64, i64* %tp_flags, align 8, !dbg !12185, !tbaa !3751
  %and = and i64 %22, 16777216, !dbg !12186
  %cmp20 = icmp ne i64 %and, 0, !dbg !12187
  br i1 %cmp20, label %if.then.21, label %if.end, !dbg !12188

if.then.21:                                       ; preds = %if.else.18
  %23 = load %struct._object*, %struct._object** %left.addr, align 8, !dbg !12189, !tbaa !2563
  %24 = bitcast %struct._object* %23 to %struct.PyDateTime_Delta*, !dbg !12190
  %25 = load %struct._object*, %struct._object** %right.addr, align 8, !dbg !12191, !tbaa !2563
  %call22 = call %struct._object* @truedivide_timedelta_int(%struct.PyDateTime_Delta* %24, %struct._object* %25), !dbg !12192
  store %struct._object* %call22, %struct._object** %result, align 8, !dbg !12193, !tbaa !2563
  br label %if.end, !dbg !12194

if.end:                                           ; preds = %if.then.21, %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end, %if.then.16
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.then.8
  br label %if.end.25, !dbg !12195

if.end.25:                                        ; preds = %if.end.24, %lor.lhs.false
  %26 = load %struct._object*, %struct._object** %result, align 8, !dbg !12196, !tbaa !2563
  %cmp26 = icmp eq %struct._object* %26, @_Py_NotImplementedStruct, !dbg !12198
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !12199

if.then.27:                                       ; preds = %if.end.25
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !12200, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !12201
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !12202, !tbaa !2632
  %inc = add i64 %28, 1, !dbg !12202
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12202, !tbaa !2632
  br label %if.end.28, !dbg !12203

if.end.28:                                        ; preds = %if.then.27, %if.end.25
  %29 = load %struct._object*, %struct._object** %result, align 8, !dbg !12204, !tbaa !2563
  %30 = bitcast %struct._object** %result to i8*, !dbg !12205
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !12205
  ret %struct._object* %29, !dbg !12206
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @multiply_int_timedelta(%struct._object* %intobj, %struct.PyDateTime_Delta* %delta) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %intobj.addr = alloca %struct._object*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %pyus_in = alloca %struct._object*, align 8
  %pyus_out = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  store %struct._object* %intobj, %struct._object** %intobj.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %intobj.addr, metadata !1591, metadata !2553), !dbg !12207
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !1592, metadata !2553), !dbg !12208
  %0 = bitcast %struct._object** %pyus_in to i8*, !dbg !12209
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12209
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_in, metadata !1593, metadata !2553), !dbg !12210
  %1 = bitcast %struct._object** %pyus_out to i8*, !dbg !12211
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12211
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_out, metadata !1594, metadata !2553), !dbg !12212
  %2 = bitcast %struct._object** %result to i8*, !dbg !12213
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12213
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1595, metadata !2553), !dbg !12214
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !12215, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %3), !dbg !12216
  store %struct._object* %call, %struct._object** %pyus_in, align 8, !dbg !12217, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12218, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !12220
  br i1 %cmp, label %if.then, label %if.end, !dbg !12221

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12222
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12222

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12223, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %intobj.addr, align 8, !dbg !12224, !tbaa !2563
  %call1 = call %struct._object* @PyNumber_Multiply(%struct._object* %5, %struct._object* %6), !dbg !12225
  store %struct._object* %call1, %struct._object** %pyus_out, align 8, !dbg !12226, !tbaa !2563
  br label %do.body, !dbg !12227

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12228
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !12228
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1596, metadata !2553), !dbg !12230
  %8 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12231, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12230, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12232, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12234
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12235, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !12235
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12235, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !12236
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !12237

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !12238

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12240, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12242
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12242, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12243
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12243, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12244, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !12245
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12246
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12246
  br label %do.cond, !dbg !12248

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !12249

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12251, !tbaa !2563
  %cmp5 = icmp eq %struct._object* %16, null, !dbg !12253
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12254

if.then.6:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !12255
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12255

if.end.7:                                         ; preds = %do.end
  %17 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12256, !tbaa !2563
  %call8 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %17, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12257
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !12258, !tbaa !2563
  br label %do.body.9, !dbg !12259

do.body.9:                                        ; preds = %if.end.7
  %18 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !12260
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !12260
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1598, metadata !2553), !dbg !12262
  %19 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12263, !tbaa !2563
  store %struct._object* %19, %struct._object** %_py_decref_tmp10, align 8, !dbg !12262, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12264, !tbaa !2563
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !12266
  %21 = load i64, i64* %ob_refcnt11, align 8, !dbg !12267, !tbaa !2632
  %dec12 = add i64 %21, -1, !dbg !12267
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !12267, !tbaa !2632
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !12268
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !12269

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !12270

if.else.15:                                       ; preds = %do.body.9
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12272, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !12274
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !12274, !tbaa !2640
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !12275
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !12275, !tbaa !2642
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12276, !tbaa !2563
  call void %24(%struct._object* %25), !dbg !12277
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %26 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !12278
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !12278
  br label %do.cond.19, !dbg !12279

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !12280

do.end.20:                                        ; preds = %do.cond.19
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !12282, !tbaa !2563
  store %struct._object* %27, %struct._object** %retval, !dbg !12283
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12283

cleanup:                                          ; preds = %do.end.20, %if.then.6, %if.then
  %28 = bitcast %struct._object** %result to i8*, !dbg !12284
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !12284
  %29 = bitcast %struct._object** %pyus_out to i8*, !dbg !12284
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !12284
  %30 = bitcast %struct._object** %pyus_in to i8*, !dbg !12284
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !12284
  %31 = load %struct._object*, %struct._object** %retval, !dbg !12284
  ret %struct._object* %31, !dbg !12284
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @multiply_float_timedelta(%struct._object* %floatobj, %struct.PyDateTime_Delta* %delta) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %floatobj.addr = alloca %struct._object*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %result = alloca %struct._object*, align 8
  %pyus_in = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %pyus_out = alloca %struct._object*, align 8
  %ratio = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_xdecref_tmp62 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  store %struct._object* %floatobj, %struct._object** %floatobj.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %floatobj.addr, metadata !1629, metadata !2553), !dbg !12285
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !1630, metadata !2553), !dbg !12286
  %0 = bitcast %struct._object** %result to i8*, !dbg !12287
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12287
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1631, metadata !2553), !dbg !12288
  store %struct._object* null, %struct._object** %result, align 8, !dbg !12288, !tbaa !2563
  %1 = bitcast %struct._object** %pyus_in to i8*, !dbg !12289
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12289
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_in, metadata !1632, metadata !2553), !dbg !12290
  store %struct._object* null, %struct._object** %pyus_in, align 8, !dbg !12290, !tbaa !2563
  %2 = bitcast %struct._object** %temp to i8*, !dbg !12289
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12289
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1633, metadata !2553), !dbg !12291
  %3 = bitcast %struct._object** %pyus_out to i8*, !dbg !12289
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12289
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_out, metadata !1634, metadata !2553), !dbg !12292
  %4 = bitcast %struct._object** %ratio to i8*, !dbg !12293
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12293
  call void @llvm.dbg.declare(metadata %struct._object** %ratio, metadata !1635, metadata !2553), !dbg !12294
  store %struct._object* null, %struct._object** %ratio, align 8, !dbg !12294, !tbaa !2563
  %5 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !12295, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %5), !dbg !12296
  store %struct._object* %call, %struct._object** %pyus_in, align 8, !dbg !12297, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12298, !tbaa !2563
  %cmp = icmp eq %struct._object* %6, null, !dbg !12300
  br i1 %cmp, label %if.then, label %if.end, !dbg !12301

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12302
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12302

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %floatobj.addr, align 8, !dbg !12303, !tbaa !2563
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %7, %struct._Py_Identifier* @PyId_as_integer_ratio, i8* null), !dbg !12304
  store %struct._object* %call1, %struct._object** %ratio, align 8, !dbg !12305, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !12306, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %8, null, !dbg !12308
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !12309

if.then.3:                                        ; preds = %if.end
  br label %error, !dbg !12310

if.end.4:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12311, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !12312, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyTupleObject*, !dbg !12313
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %11, i32 0, i32 1, !dbg !12314
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !12315
  %12 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !12315, !tbaa !2563
  %call5 = call %struct._object* @PyNumber_Multiply(%struct._object* %9, %struct._object* %12), !dbg !12316
  store %struct._object* %call5, %struct._object** %temp, align 8, !dbg !12317, !tbaa !2563
  br label %do.body, !dbg !12318

do.body:                                          ; preds = %if.end.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12319
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !12319
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1636, metadata !2553), !dbg !12321
  %14 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12322, !tbaa !2563
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !12321, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12323, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !12325
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !12326, !tbaa !2632
  %dec = add i64 %16, -1, !dbg !12326
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12326, !tbaa !2632
  %cmp6 = icmp ne i64 %dec, 0, !dbg !12327
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !12328

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !12329

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12331, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12333
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12333, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !12334
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12334, !tbaa !2642
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12335, !tbaa !2563
  call void %19(%struct._object* %20), !dbg !12336
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12337
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !12337
  br label %do.cond, !dbg !12339

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !12340

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %pyus_in, align 8, !dbg !12342, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12343, !tbaa !2563
  %cmp9 = icmp eq %struct._object* %22, null, !dbg !12345
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !12346

if.then.10:                                       ; preds = %do.end
  br label %error, !dbg !12347

if.end.11:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12348, !tbaa !2563
  %24 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !12349, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyTupleObject*, !dbg !12350
  %ob_item12 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %25, i32 0, i32 1, !dbg !12351
  %arrayidx13 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item12, i32 0, i64 1, !dbg !12352
  %26 = load %struct._object*, %struct._object** %arrayidx13, align 8, !dbg !12352, !tbaa !2563
  %call14 = call %struct._object* @divide_nearest(%struct._object* %23, %struct._object* %26), !dbg !12353
  store %struct._object* %call14, %struct._object** %pyus_out, align 8, !dbg !12354, !tbaa !2563
  br label %do.body.15, !dbg !12355

do.body.15:                                       ; preds = %if.end.11
  %27 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !12356
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !12356
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !1638, metadata !2553), !dbg !12358
  %28 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12359, !tbaa !2563
  store %struct._object* %28, %struct._object** %_py_decref_tmp16, align 8, !dbg !12358, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12360, !tbaa !2563
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !12362
  %30 = load i64, i64* %ob_refcnt17, align 8, !dbg !12363, !tbaa !2632
  %dec18 = add i64 %30, -1, !dbg !12363
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !12363, !tbaa !2632
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !12364
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !12365

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !12366

if.else.21:                                       ; preds = %do.body.15
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12368, !tbaa !2563
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !12370
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !12370, !tbaa !2640
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !12371
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !12371, !tbaa !2642
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12372, !tbaa !2563
  call void %33(%struct._object* %34), !dbg !12373
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %35 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !12374
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !12374
  br label %do.cond.25, !dbg !12375

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !12376

do.end.26:                                        ; preds = %do.cond.25
  %36 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12378, !tbaa !2563
  %cmp27 = icmp eq %struct._object* %36, null, !dbg !12380
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !12381

if.then.28:                                       ; preds = %do.end.26
  br label %error, !dbg !12382

if.end.29:                                        ; preds = %do.end.26
  %37 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12383, !tbaa !2563
  %call30 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %37, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12384
  store %struct._object* %call30, %struct._object** %result, align 8, !dbg !12385, !tbaa !2563
  br label %do.body.31, !dbg !12386

do.body.31:                                       ; preds = %if.end.29
  %38 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !12387
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !12387
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !1640, metadata !2553), !dbg !12389
  %39 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12390, !tbaa !2563
  store %struct._object* %39, %struct._object** %_py_decref_tmp32, align 8, !dbg !12389, !tbaa !2563
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !12391, !tbaa !2563
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !12393
  %41 = load i64, i64* %ob_refcnt33, align 8, !dbg !12394, !tbaa !2632
  %dec34 = add i64 %41, -1, !dbg !12394
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !12394, !tbaa !2632
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !12395
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !12396

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !12397

if.else.37:                                       ; preds = %do.body.31
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !12399, !tbaa !2563
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !12401
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !12401, !tbaa !2640
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !12402
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !12402, !tbaa !2642
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !12403, !tbaa !2563
  call void %44(%struct._object* %45), !dbg !12404
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %46 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !12405
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !12405
  br label %do.cond.41, !dbg !12406

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !12407

do.end.42:                                        ; preds = %do.cond.41
  br label %error, !dbg !12409

error:                                            ; preds = %do.end.42, %if.then.28, %if.then.10, %if.then.3
  br label %do.body.43, !dbg !12411

do.body.43:                                       ; preds = %error
  %47 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12412
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !12412
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1642, metadata !2553), !dbg !12414
  %48 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12415, !tbaa !2563
  store %struct._object* %48, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12414, !tbaa !2563
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12416, !tbaa !2563
  %cmp44 = icmp ne %struct._object* %49, null, !dbg !12417
  br i1 %cmp44, label %if.then.45, label %if.end.58, !dbg !12418

if.then.45:                                       ; preds = %do.body.43
  br label %do.body.46, !dbg !12419

do.body.46:                                       ; preds = %if.then.45
  %50 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !12421
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !12421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp47, metadata !1644, metadata !2553), !dbg !12423
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12424, !tbaa !2563
  store %struct._object* %51, %struct._object** %_py_decref_tmp47, align 8, !dbg !12423, !tbaa !2563
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !12425, !tbaa !2563
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !12427
  %53 = load i64, i64* %ob_refcnt48, align 8, !dbg !12428, !tbaa !2632
  %dec49 = add i64 %53, -1, !dbg !12428
  store i64 %dec49, i64* %ob_refcnt48, align 8, !dbg !12428, !tbaa !2632
  %cmp50 = icmp ne i64 %dec49, 0, !dbg !12429
  br i1 %cmp50, label %if.then.51, label %if.else.52, !dbg !12430

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55, !dbg !12431

if.else.52:                                       ; preds = %do.body.46
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !12433, !tbaa !2563
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !12435
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !12435, !tbaa !2640
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !12436
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !12436, !tbaa !2642
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !12437, !tbaa !2563
  call void %56(%struct._object* %57), !dbg !12438
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %58 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !12439
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !12439
  br label %do.cond.56, !dbg !12441

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !12442

do.end.57:                                        ; preds = %do.cond.56
  br label %if.end.58, !dbg !12444

if.end.58:                                        ; preds = %do.end.57, %do.body.43
  %59 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12446
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !12446
  br label %do.cond.59, !dbg !12449

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !12450

do.end.60:                                        ; preds = %do.cond.59
  br label %do.body.61, !dbg !12452

do.body.61:                                       ; preds = %do.end.60
  %60 = bitcast %struct._object** %_py_xdecref_tmp62 to i8*, !dbg !12453
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !12453
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp62, metadata !1647, metadata !2553), !dbg !12455
  %61 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !12456, !tbaa !2563
  store %struct._object* %61, %struct._object** %_py_xdecref_tmp62, align 8, !dbg !12455, !tbaa !2563
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp62, align 8, !dbg !12457, !tbaa !2563
  %cmp63 = icmp ne %struct._object* %62, null, !dbg !12458
  br i1 %cmp63, label %if.then.64, label %if.end.77, !dbg !12459

if.then.64:                                       ; preds = %do.body.61
  br label %do.body.65, !dbg !12460

do.body.65:                                       ; preds = %if.then.64
  %63 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !12462
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !12462
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp66, metadata !1649, metadata !2553), !dbg !12464
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp62, align 8, !dbg !12465, !tbaa !2563
  store %struct._object* %64, %struct._object** %_py_decref_tmp66, align 8, !dbg !12464, !tbaa !2563
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !12466, !tbaa !2563
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !12468
  %66 = load i64, i64* %ob_refcnt67, align 8, !dbg !12469, !tbaa !2632
  %dec68 = add i64 %66, -1, !dbg !12469
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !12469, !tbaa !2632
  %cmp69 = icmp ne i64 %dec68, 0, !dbg !12470
  br i1 %cmp69, label %if.then.70, label %if.else.71, !dbg !12471

if.then.70:                                       ; preds = %do.body.65
  br label %if.end.74, !dbg !12472

if.else.71:                                       ; preds = %do.body.65
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !12474, !tbaa !2563
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !12476
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !12476, !tbaa !2640
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !12477
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !12477, !tbaa !2642
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !12478, !tbaa !2563
  call void %69(%struct._object* %70), !dbg !12479
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  %71 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !12480
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !12480
  br label %do.cond.75, !dbg !12482

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !12483

do.end.76:                                        ; preds = %do.cond.75
  br label %if.end.77, !dbg !12485

if.end.77:                                        ; preds = %do.end.76, %do.body.61
  %72 = bitcast %struct._object** %_py_xdecref_tmp62 to i8*, !dbg !12487
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !12487
  br label %do.cond.78, !dbg !12488

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !12489

do.end.79:                                        ; preds = %do.cond.78
  %73 = load %struct._object*, %struct._object** %result, align 8, !dbg !12491, !tbaa !2563
  store %struct._object* %73, %struct._object** %retval, !dbg !12492
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12492

cleanup:                                          ; preds = %do.end.79, %if.then
  %74 = bitcast %struct._object** %ratio to i8*, !dbg !12493
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !12493
  %75 = bitcast %struct._object** %pyus_out to i8*, !dbg !12493
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !12493
  %76 = bitcast %struct._object** %temp to i8*, !dbg !12493
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !12493
  %77 = bitcast %struct._object** %pyus_in to i8*, !dbg !12493
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !12493
  %78 = bitcast %struct._object** %result to i8*, !dbg !12493
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !12493
  %79 = load %struct._object*, %struct._object** %retval, !dbg !12493
  ret %struct._object* %79, !dbg !12493
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @microseconds_to_delta_ex(%struct._object* %pyus, %struct._typeobject* %type) #0 {
entry:
  %pyus.addr = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %us = alloca i32, align 4
  %s = alloca i32, align 4
  %d = alloca i32, align 4
  %temp = alloca i64, align 8
  %tuple = alloca %struct._object*, align 8
  %num = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp30 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %_py_xdecref_tmp103 = alloca %struct._object*, align 8
  %_py_decref_tmp108 = alloca %struct._object*, align 8
  store %struct._object* %pyus, %struct._object** %pyus.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %pyus.addr, metadata !1604, metadata !2553), !dbg !12494
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1605, metadata !2553), !dbg !12495
  %0 = bitcast i32* %us to i8*, !dbg !12496
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !12496
  call void @llvm.dbg.declare(metadata i32* %us, metadata !1606, metadata !2553), !dbg !12497
  %1 = bitcast i32* %s to i8*, !dbg !12498
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !12498
  call void @llvm.dbg.declare(metadata i32* %s, metadata !1607, metadata !2553), !dbg !12499
  %2 = bitcast i32* %d to i8*, !dbg !12500
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !12500
  call void @llvm.dbg.declare(metadata i32* %d, metadata !1608, metadata !2553), !dbg !12501
  %3 = bitcast i64* %temp to i8*, !dbg !12502
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12502
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !1609, metadata !2553), !dbg !12503
  %4 = bitcast %struct._object** %tuple to i8*, !dbg !12504
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12504
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1610, metadata !2553), !dbg !12505
  store %struct._object* null, %struct._object** %tuple, align 8, !dbg !12505, !tbaa !2563
  %5 = bitcast %struct._object** %num to i8*, !dbg !12506
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !12506
  call void @llvm.dbg.declare(metadata %struct._object** %num, metadata !1611, metadata !2553), !dbg !12507
  store %struct._object* null, %struct._object** %num, align 8, !dbg !12507, !tbaa !2563
  %6 = bitcast %struct._object** %result to i8*, !dbg !12508
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !12508
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1612, metadata !2553), !dbg !12509
  store %struct._object* null, %struct._object** %result, align 8, !dbg !12509, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %pyus.addr, align 8, !dbg !12510, !tbaa !2563
  %8 = load %struct._object*, %struct._object** @us_per_second, align 8, !dbg !12511, !tbaa !2563
  %call = call %struct._object* @PyNumber_Divmod(%struct._object* %7, %struct._object* %8), !dbg !12512
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !12513, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12514, !tbaa !2563
  %cmp = icmp eq %struct._object* %9, null, !dbg !12516
  br i1 %cmp, label %if.then, label %if.end, !dbg !12517

if.then:                                          ; preds = %entry
  br label %Done, !dbg !12518

if.end:                                           ; preds = %entry
  %10 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12519, !tbaa !2563
  %call1 = call %struct._object* @PyTuple_GetItem(%struct._object* %10, i64 1), !dbg !12520
  store %struct._object* %call1, %struct._object** %num, align 8, !dbg !12521, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %num, align 8, !dbg !12522, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %11, null, !dbg !12524
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !12525

if.then.3:                                        ; preds = %if.end
  br label %Done, !dbg !12526

if.end.4:                                         ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %num, align 8, !dbg !12527, !tbaa !2563
  %call5 = call i64 @PyLong_AsLong(%struct._object* %12), !dbg !12528
  store i64 %call5, i64* %temp, align 8, !dbg !12529, !tbaa !5078
  store %struct._object* null, %struct._object** %num, align 8, !dbg !12530, !tbaa !2563
  %13 = load i64, i64* %temp, align 8, !dbg !12531, !tbaa !5078
  %cmp6 = icmp eq i64 %13, -1, !dbg !12533
  br i1 %cmp6, label %land.lhs.true, label %if.end.9, !dbg !12534

land.lhs.true:                                    ; preds = %if.end.4
  %call7 = call %struct._object* @PyErr_Occurred(), !dbg !12535
  %tobool = icmp ne %struct._object* %call7, null, !dbg !12535
  br i1 %tobool, label %if.then.8, label %if.end.9, !dbg !12537

if.then.8:                                        ; preds = %land.lhs.true
  br label %Done, !dbg !12538

if.end.9:                                         ; preds = %land.lhs.true, %if.end.4
  %14 = load i64, i64* %temp, align 8, !dbg !12539, !tbaa !5078
  %conv = trunc i64 %14 to i32, !dbg !12540
  store i32 %conv, i32* %us, align 4, !dbg !12541, !tbaa !3325
  %15 = load i32, i32* %us, align 4, !dbg !12542, !tbaa !3325
  %cmp10 = icmp slt i32 %15, 0, !dbg !12544
  br i1 %cmp10, label %if.then.12, label %if.end.13, !dbg !12545

if.then.12:                                       ; preds = %if.end.9
  br label %Done, !dbg !12546

if.end.13:                                        ; preds = %if.end.9
  %16 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12548, !tbaa !2563
  %call14 = call %struct._object* @PyTuple_GetItem(%struct._object* %16, i64 0), !dbg !12549
  store %struct._object* %call14, %struct._object** %num, align 8, !dbg !12550, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %num, align 8, !dbg !12551, !tbaa !2563
  %cmp15 = icmp eq %struct._object* %17, null, !dbg !12553
  br i1 %cmp15, label %if.then.17, label %if.end.18, !dbg !12554

if.then.17:                                       ; preds = %if.end.13
  br label %Done, !dbg !12555

if.end.18:                                        ; preds = %if.end.13
  %18 = load %struct._object*, %struct._object** %num, align 8, !dbg !12556, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !12557
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !12558, !tbaa !2632
  %inc = add i64 %19, 1, !dbg !12558
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12558, !tbaa !2632
  br label %do.body, !dbg !12559

do.body:                                          ; preds = %if.end.18
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12560
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !12560
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1613, metadata !2553), !dbg !12562
  %21 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12563, !tbaa !2563
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !12562, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12564, !tbaa !2563
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !12566
  %23 = load i64, i64* %ob_refcnt19, align 8, !dbg !12567, !tbaa !2632
  %dec = add i64 %23, -1, !dbg !12567
  store i64 %dec, i64* %ob_refcnt19, align 8, !dbg !12567, !tbaa !2632
  %cmp20 = icmp ne i64 %dec, 0, !dbg !12568
  br i1 %cmp20, label %if.then.22, label %if.else, !dbg !12569

if.then.22:                                       ; preds = %do.body
  br label %if.end.23, !dbg !12570

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12572, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !12574
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12574, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !12575
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12575, !tbaa !2642
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12576, !tbaa !2563
  call void %26(%struct._object* %27), !dbg !12577
  br label %if.end.23

if.end.23:                                        ; preds = %if.else, %if.then.22
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12578
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !12578
  br label %do.cond, !dbg !12580

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !12581

do.end:                                           ; preds = %do.cond
  %29 = load %struct._object*, %struct._object** %num, align 8, !dbg !12583, !tbaa !2563
  %30 = load %struct._object*, %struct._object** @seconds_per_day, align 8, !dbg !12584, !tbaa !2563
  %call24 = call %struct._object* @PyNumber_Divmod(%struct._object* %29, %struct._object* %30), !dbg !12585
  store %struct._object* %call24, %struct._object** %tuple, align 8, !dbg !12586, !tbaa !2563
  %31 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12587, !tbaa !2563
  %cmp25 = icmp eq %struct._object* %31, null, !dbg !12589
  br i1 %cmp25, label %if.then.27, label %if.end.28, !dbg !12590

if.then.27:                                       ; preds = %do.end
  br label %Done, !dbg !12591

if.end.28:                                        ; preds = %do.end
  br label %do.body.29, !dbg !12592

do.body.29:                                       ; preds = %if.end.28
  %32 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !12593
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !12593
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp30, metadata !1615, metadata !2553), !dbg !12595
  %33 = load %struct._object*, %struct._object** %num, align 8, !dbg !12596, !tbaa !2563
  store %struct._object* %33, %struct._object** %_py_decref_tmp30, align 8, !dbg !12595, !tbaa !2563
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !12597, !tbaa !2563
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !12599
  %35 = load i64, i64* %ob_refcnt31, align 8, !dbg !12600, !tbaa !2632
  %dec32 = add i64 %35, -1, !dbg !12600
  store i64 %dec32, i64* %ob_refcnt31, align 8, !dbg !12600, !tbaa !2632
  %cmp33 = icmp ne i64 %dec32, 0, !dbg !12601
  br i1 %cmp33, label %if.then.35, label %if.else.36, !dbg !12602

if.then.35:                                       ; preds = %do.body.29
  br label %if.end.39, !dbg !12603

if.else.36:                                       ; preds = %do.body.29
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !12605, !tbaa !2563
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !12607
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !12607, !tbaa !2640
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !12608
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !12608, !tbaa !2642
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !12609, !tbaa !2563
  call void %38(%struct._object* %39), !dbg !12610
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %40 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !12611
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !12611
  br label %do.cond.40, !dbg !12612

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !12613

do.end.41:                                        ; preds = %do.cond.40
  %41 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12615, !tbaa !2563
  %call42 = call %struct._object* @PyTuple_GetItem(%struct._object* %41, i64 1), !dbg !12616
  store %struct._object* %call42, %struct._object** %num, align 8, !dbg !12617, !tbaa !2563
  %42 = load %struct._object*, %struct._object** %num, align 8, !dbg !12618, !tbaa !2563
  %cmp43 = icmp eq %struct._object* %42, null, !dbg !12620
  br i1 %cmp43, label %if.then.45, label %if.end.46, !dbg !12621

if.then.45:                                       ; preds = %do.end.41
  br label %Done, !dbg !12622

if.end.46:                                        ; preds = %do.end.41
  %43 = load %struct._object*, %struct._object** %num, align 8, !dbg !12623, !tbaa !2563
  %call47 = call i64 @PyLong_AsLong(%struct._object* %43), !dbg !12624
  store i64 %call47, i64* %temp, align 8, !dbg !12625, !tbaa !5078
  store %struct._object* null, %struct._object** %num, align 8, !dbg !12626, !tbaa !2563
  %44 = load i64, i64* %temp, align 8, !dbg !12627, !tbaa !5078
  %cmp48 = icmp eq i64 %44, -1, !dbg !12629
  br i1 %cmp48, label %land.lhs.true.50, label %if.end.54, !dbg !12630

land.lhs.true.50:                                 ; preds = %if.end.46
  %call51 = call %struct._object* @PyErr_Occurred(), !dbg !12631
  %tobool52 = icmp ne %struct._object* %call51, null, !dbg !12631
  br i1 %tobool52, label %if.then.53, label %if.end.54, !dbg !12633

if.then.53:                                       ; preds = %land.lhs.true.50
  br label %Done, !dbg !12634

if.end.54:                                        ; preds = %land.lhs.true.50, %if.end.46
  %45 = load i64, i64* %temp, align 8, !dbg !12635, !tbaa !5078
  %conv55 = trunc i64 %45 to i32, !dbg !12636
  store i32 %conv55, i32* %s, align 4, !dbg !12637, !tbaa !3325
  %46 = load i32, i32* %s, align 4, !dbg !12638, !tbaa !3325
  %cmp56 = icmp slt i32 %46, 0, !dbg !12640
  br i1 %cmp56, label %if.then.58, label %if.end.59, !dbg !12641

if.then.58:                                       ; preds = %if.end.54
  br label %Done, !dbg !12642

if.end.59:                                        ; preds = %if.end.54
  %47 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12644, !tbaa !2563
  %call60 = call %struct._object* @PyTuple_GetItem(%struct._object* %47, i64 0), !dbg !12645
  store %struct._object* %call60, %struct._object** %num, align 8, !dbg !12646, !tbaa !2563
  %48 = load %struct._object*, %struct._object** %num, align 8, !dbg !12647, !tbaa !2563
  %cmp61 = icmp eq %struct._object* %48, null, !dbg !12649
  br i1 %cmp61, label %if.then.63, label %if.end.64, !dbg !12650

if.then.63:                                       ; preds = %if.end.59
  br label %Done, !dbg !12651

if.end.64:                                        ; preds = %if.end.59
  %49 = load %struct._object*, %struct._object** %num, align 8, !dbg !12652, !tbaa !2563
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !12653
  %50 = load i64, i64* %ob_refcnt65, align 8, !dbg !12654, !tbaa !2632
  %inc66 = add i64 %50, 1, !dbg !12654
  store i64 %inc66, i64* %ob_refcnt65, align 8, !dbg !12654, !tbaa !2632
  %51 = load %struct._object*, %struct._object** %num, align 8, !dbg !12655, !tbaa !2563
  %call67 = call i64 @PyLong_AsLong(%struct._object* %51), !dbg !12656
  store i64 %call67, i64* %temp, align 8, !dbg !12657, !tbaa !5078
  %52 = load i64, i64* %temp, align 8, !dbg !12658, !tbaa !5078
  %cmp68 = icmp eq i64 %52, -1, !dbg !12660
  br i1 %cmp68, label %land.lhs.true.70, label %if.end.74, !dbg !12661

land.lhs.true.70:                                 ; preds = %if.end.64
  %call71 = call %struct._object* @PyErr_Occurred(), !dbg !12662
  %tobool72 = icmp ne %struct._object* %call71, null, !dbg !12662
  br i1 %tobool72, label %if.then.73, label %if.end.74, !dbg !12664

if.then.73:                                       ; preds = %land.lhs.true.70
  br label %Done, !dbg !12665

if.end.74:                                        ; preds = %land.lhs.true.70, %if.end.64
  %53 = load i64, i64* %temp, align 8, !dbg !12666, !tbaa !5078
  %conv75 = trunc i64 %53 to i32, !dbg !12667
  store i32 %conv75, i32* %d, align 4, !dbg !12668, !tbaa !3325
  %54 = load i32, i32* %d, align 4, !dbg !12669, !tbaa !3325
  %conv76 = sext i32 %54 to i64, !dbg !12671
  %55 = load i64, i64* %temp, align 8, !dbg !12672, !tbaa !5078
  %cmp77 = icmp ne i64 %conv76, %55, !dbg !12673
  br i1 %cmp77, label %if.then.79, label %if.end.80, !dbg !12674

if.then.79:                                       ; preds = %if.end.74
  %56 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !12675, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %56, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.176, i32 0, i32 0)), !dbg !12677
  br label %Done, !dbg !12678

if.end.80:                                        ; preds = %if.end.74
  %57 = load i32, i32* %d, align 4, !dbg !12679, !tbaa !3325
  %58 = load i32, i32* %s, align 4, !dbg !12680, !tbaa !3325
  %59 = load i32, i32* %us, align 4, !dbg !12681, !tbaa !3325
  %60 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !12682, !tbaa !2563
  %call81 = call %struct._object* @new_delta_ex(i32 %57, i32 %58, i32 %59, i32 0, %struct._typeobject* %60), !dbg !12683
  store %struct._object* %call81, %struct._object** %result, align 8, !dbg !12684, !tbaa !2563
  br label %Done, !dbg !12685

Done:                                             ; preds = %if.end.80, %if.then.79, %if.then.73, %if.then.63, %if.then.58, %if.then.53, %if.then.45, %if.then.27, %if.then.17, %if.then.12, %if.then.8, %if.then.3, %if.then
  br label %do.body.82, !dbg !12686

do.body.82:                                       ; preds = %Done
  %61 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12687
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !12687
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1617, metadata !2553), !dbg !12689
  %62 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !12690, !tbaa !2563
  store %struct._object* %62, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12689, !tbaa !2563
  %63 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12691, !tbaa !2563
  %cmp83 = icmp ne %struct._object* %63, null, !dbg !12692
  br i1 %cmp83, label %if.then.85, label %if.end.99, !dbg !12693

if.then.85:                                       ; preds = %do.body.82
  br label %do.body.86, !dbg !12694

do.body.86:                                       ; preds = %if.then.85
  %64 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !12696
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !12696
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp87, metadata !1619, metadata !2553), !dbg !12698
  %65 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12699, !tbaa !2563
  store %struct._object* %65, %struct._object** %_py_decref_tmp87, align 8, !dbg !12698, !tbaa !2563
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !12700, !tbaa !2563
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !12702
  %67 = load i64, i64* %ob_refcnt88, align 8, !dbg !12703, !tbaa !2632
  %dec89 = add i64 %67, -1, !dbg !12703
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !12703, !tbaa !2632
  %cmp90 = icmp ne i64 %dec89, 0, !dbg !12704
  br i1 %cmp90, label %if.then.92, label %if.else.93, !dbg !12705

if.then.92:                                       ; preds = %do.body.86
  br label %if.end.96, !dbg !12706

if.else.93:                                       ; preds = %do.body.86
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !12708, !tbaa !2563
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !12710
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !12710, !tbaa !2640
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !12711
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !12711, !tbaa !2642
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !12712, !tbaa !2563
  call void %70(%struct._object* %71), !dbg !12713
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %72 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !12714
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !12714
  br label %do.cond.97, !dbg !12716

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !12717

do.end.98:                                        ; preds = %do.cond.97
  br label %if.end.99, !dbg !12719

if.end.99:                                        ; preds = %do.end.98, %do.body.82
  %73 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12721
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !12721
  br label %do.cond.100, !dbg !12724

do.cond.100:                                      ; preds = %if.end.99
  br label %do.end.101, !dbg !12725

do.end.101:                                       ; preds = %do.cond.100
  br label %do.body.102, !dbg !12727

do.body.102:                                      ; preds = %do.end.101
  %74 = bitcast %struct._object** %_py_xdecref_tmp103 to i8*, !dbg !12728
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !12728
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp103, metadata !1622, metadata !2553), !dbg !12730
  %75 = load %struct._object*, %struct._object** %num, align 8, !dbg !12731, !tbaa !2563
  store %struct._object* %75, %struct._object** %_py_xdecref_tmp103, align 8, !dbg !12730, !tbaa !2563
  %76 = load %struct._object*, %struct._object** %_py_xdecref_tmp103, align 8, !dbg !12732, !tbaa !2563
  %cmp104 = icmp ne %struct._object* %76, null, !dbg !12733
  br i1 %cmp104, label %if.then.106, label %if.end.120, !dbg !12734

if.then.106:                                      ; preds = %do.body.102
  br label %do.body.107, !dbg !12735

do.body.107:                                      ; preds = %if.then.106
  %77 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !12737
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !12737
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp108, metadata !1624, metadata !2553), !dbg !12739
  %78 = load %struct._object*, %struct._object** %_py_xdecref_tmp103, align 8, !dbg !12740, !tbaa !2563
  store %struct._object* %78, %struct._object** %_py_decref_tmp108, align 8, !dbg !12739, !tbaa !2563
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !12741, !tbaa !2563
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !12743
  %80 = load i64, i64* %ob_refcnt109, align 8, !dbg !12744, !tbaa !2632
  %dec110 = add i64 %80, -1, !dbg !12744
  store i64 %dec110, i64* %ob_refcnt109, align 8, !dbg !12744, !tbaa !2632
  %cmp111 = icmp ne i64 %dec110, 0, !dbg !12745
  br i1 %cmp111, label %if.then.113, label %if.else.114, !dbg !12746

if.then.113:                                      ; preds = %do.body.107
  br label %if.end.117, !dbg !12747

if.else.114:                                      ; preds = %do.body.107
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !12749, !tbaa !2563
  %ob_type115 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !12751
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type115, align 8, !dbg !12751, !tbaa !2640
  %tp_dealloc116 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !12752
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc116, align 8, !dbg !12752, !tbaa !2642
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !12753, !tbaa !2563
  call void %83(%struct._object* %84), !dbg !12754
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.114, %if.then.113
  %85 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !12755
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !12755
  br label %do.cond.118, !dbg !12757

do.cond.118:                                      ; preds = %if.end.117
  br label %do.end.119, !dbg !12758

do.end.119:                                       ; preds = %do.cond.118
  br label %if.end.120, !dbg !12760

if.end.120:                                       ; preds = %do.end.119, %do.body.102
  %86 = bitcast %struct._object** %_py_xdecref_tmp103 to i8*, !dbg !12762
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !12762
  br label %do.cond.121, !dbg !12763

do.cond.121:                                      ; preds = %if.end.120
  br label %do.end.122, !dbg !12764

do.end.122:                                       ; preds = %do.cond.121
  %87 = load %struct._object*, %struct._object** %result, align 8, !dbg !12766, !tbaa !2563
  %88 = bitcast %struct._object** %result to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !12767
  %89 = bitcast %struct._object** %num to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !12767
  %90 = bitcast %struct._object** %tuple to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !12767
  %91 = bitcast i64* %temp to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !12767
  %92 = bitcast i32* %d to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 4, i8* %92) #1, !dbg !12767
  %93 = bitcast i32* %s to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 4, i8* %93) #1, !dbg !12767
  %94 = bitcast i32* %us to i8*, !dbg !12767
  call void @llvm.lifetime.end(i64 4, i8* %94) #1, !dbg !12767
  ret %struct._object* %87, !dbg !12768
}

declare %struct._object* @PyNumber_Divmod(%struct._object*, %struct._object*) #3

declare %struct._object* @PyTuple_GetItem(%struct._object*, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @divide_nearest(%struct._object* %m, %struct._object* %n) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m.addr = alloca %struct._object*, align 8
  %n.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %m, %struct._object** %m.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %m.addr, metadata !1654, metadata !2553), !dbg !12769
  store %struct._object* %n, %struct._object** %n.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %n.addr, metadata !1655, metadata !2553), !dbg !12770
  %0 = bitcast %struct._object** %result to i8*, !dbg !12771
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12771
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1656, metadata !2553), !dbg !12772
  %1 = bitcast %struct._object** %temp to i8*, !dbg !12773
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12773
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1657, metadata !2553), !dbg !12774
  %2 = load %struct._object*, %struct._object** %m.addr, align 8, !dbg !12775, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %n.addr, align 8, !dbg !12776, !tbaa !2563
  %call = call %struct._object* @_PyLong_DivmodNear(%struct._object* %2, %struct._object* %3), !dbg !12777
  store %struct._object* %call, %struct._object** %temp, align 8, !dbg !12778, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12779, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !12781
  br i1 %cmp, label %if.then, label %if.end, !dbg !12782

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12783

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12784, !tbaa !2563
  %6 = bitcast %struct._object* %5 to %struct.PyTupleObject*, !dbg !12785
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %6, i32 0, i32 1, !dbg !12786
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !12787
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !12787, !tbaa !2563
  store %struct._object* %7, %struct._object** %result, align 8, !dbg !12788, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %result, align 8, !dbg !12789, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !12790
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !12791, !tbaa !2632
  %inc = add i64 %9, 1, !dbg !12791
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12791, !tbaa !2632
  br label %do.body, !dbg !12792

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12793
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !12793
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1658, metadata !2553), !dbg !12795
  %11 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12796, !tbaa !2563
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !12795, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12797, !tbaa !2563
  %ob_refcnt1 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !12799
  %13 = load i64, i64* %ob_refcnt1, align 8, !dbg !12800, !tbaa !2632
  %dec = add i64 %13, -1, !dbg !12800
  store i64 %dec, i64* %ob_refcnt1, align 8, !dbg !12800, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !12801
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !12802

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !12803

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12805, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !12807
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12807, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !12808
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12808, !tbaa !2642
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12809, !tbaa !2563
  call void %16(%struct._object* %17), !dbg !12810
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12811
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !12811
  br label %do.cond, !dbg !12813

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !12814

do.end:                                           ; preds = %do.cond
  %19 = load %struct._object*, %struct._object** %result, align 8, !dbg !12816, !tbaa !2563
  store %struct._object* %19, %struct._object** %retval, !dbg !12817
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12817

cleanup:                                          ; preds = %do.end, %if.then
  %20 = bitcast %struct._object** %temp to i8*, !dbg !12818
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !12818
  %21 = bitcast %struct._object** %result to i8*, !dbg !12818
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !12818
  %22 = load %struct._object*, %struct._object** %retval, !dbg !12818
  ret %struct._object* %22, !dbg !12818
}

declare %struct._object* @_PyLong_DivmodNear(%struct._object*, %struct._object*) #3

declare %struct._object* @PyNumber_Remainder(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @divide_timedelta_int(%struct.PyDateTime_Delta* %delta, %struct._object* %intobj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %intobj.addr = alloca %struct._object*, align 8
  %pyus_in = alloca %struct._object*, align 8
  %pyus_out = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !1719, metadata !2553), !dbg !12819
  store %struct._object* %intobj, %struct._object** %intobj.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %intobj.addr, metadata !1720, metadata !2553), !dbg !12820
  %0 = bitcast %struct._object** %pyus_in to i8*, !dbg !12821
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12821
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_in, metadata !1721, metadata !2553), !dbg !12822
  %1 = bitcast %struct._object** %pyus_out to i8*, !dbg !12823
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12823
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_out, metadata !1722, metadata !2553), !dbg !12824
  %2 = bitcast %struct._object** %result to i8*, !dbg !12825
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12825
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1723, metadata !2553), !dbg !12826
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !12827, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %3), !dbg !12828
  store %struct._object* %call, %struct._object** %pyus_in, align 8, !dbg !12829, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12830, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !12832
  br i1 %cmp, label %if.then, label %if.end, !dbg !12833

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12834
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12834

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12835, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %intobj.addr, align 8, !dbg !12836, !tbaa !2563
  %call1 = call %struct._object* @PyNumber_FloorDivide(%struct._object* %5, %struct._object* %6), !dbg !12837
  store %struct._object* %call1, %struct._object** %pyus_out, align 8, !dbg !12838, !tbaa !2563
  br label %do.body, !dbg !12839

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12840
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !12840
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1724, metadata !2553), !dbg !12842
  %8 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !12843, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12842, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12844, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12846
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12847, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !12847
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12847, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !12848
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !12849

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !12850

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12852, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12854
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12854, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12855
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12855, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12856, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !12857
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12858
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12858
  br label %do.cond, !dbg !12860

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !12861

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12863, !tbaa !2563
  %cmp5 = icmp eq %struct._object* %16, null, !dbg !12865
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12866

if.then.6:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !12867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12867

if.end.7:                                         ; preds = %do.end
  %17 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12868, !tbaa !2563
  %call8 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %17, %struct._typeobject* @PyDateTime_DeltaType), !dbg !12869
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !12870, !tbaa !2563
  br label %do.body.9, !dbg !12871

do.body.9:                                        ; preds = %if.end.7
  %18 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !12872
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !12872
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1726, metadata !2553), !dbg !12874
  %19 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !12875, !tbaa !2563
  store %struct._object* %19, %struct._object** %_py_decref_tmp10, align 8, !dbg !12874, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12876, !tbaa !2563
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !12878
  %21 = load i64, i64* %ob_refcnt11, align 8, !dbg !12879, !tbaa !2632
  %dec12 = add i64 %21, -1, !dbg !12879
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !12879, !tbaa !2632
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !12880
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !12881

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !12882

if.else.15:                                       ; preds = %do.body.9
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12884, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !12886
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !12886, !tbaa !2640
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !12887
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !12887, !tbaa !2642
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12888, !tbaa !2563
  call void %24(%struct._object* %25), !dbg !12889
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %26 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !12890
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !12890
  br label %do.cond.19, !dbg !12891

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !12892

do.end.20:                                        ; preds = %do.cond.19
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !12894, !tbaa !2563
  store %struct._object* %27, %struct._object** %retval, !dbg !12895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12895

cleanup:                                          ; preds = %do.end.20, %if.then.6, %if.then
  %28 = bitcast %struct._object** %result to i8*, !dbg !12896
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !12896
  %29 = bitcast %struct._object** %pyus_out to i8*, !dbg !12896
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !12896
  %30 = bitcast %struct._object** %pyus_in to i8*, !dbg !12896
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !12896
  %31 = load %struct._object*, %struct._object** %retval, !dbg !12896
  ret %struct._object* %31, !dbg !12896
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @truedivide_timedelta_timedelta(%struct.PyDateTime_Delta* %left, %struct.PyDateTime_Delta* %right) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %left.addr = alloca %struct.PyDateTime_Delta*, align 8
  %right.addr = alloca %struct.PyDateTime_Delta*, align 8
  %pyus_left = alloca %struct._object*, align 8
  %pyus_right = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %left, %struct.PyDateTime_Delta** %left.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %left.addr, metadata !1735, metadata !2553), !dbg !12897
  store %struct.PyDateTime_Delta* %right, %struct.PyDateTime_Delta** %right.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %right.addr, metadata !1736, metadata !2553), !dbg !12898
  %0 = bitcast %struct._object** %pyus_left to i8*, !dbg !12899
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12899
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_left, metadata !1737, metadata !2553), !dbg !12900
  %1 = bitcast %struct._object** %pyus_right to i8*, !dbg !12901
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12901
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_right, metadata !1738, metadata !2553), !dbg !12902
  %2 = bitcast %struct._object** %result to i8*, !dbg !12903
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12903
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1739, metadata !2553), !dbg !12904
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %left.addr, align 8, !dbg !12905, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %3), !dbg !12906
  store %struct._object* %call, %struct._object** %pyus_left, align 8, !dbg !12907, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !12908, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !12910
  br i1 %cmp, label %if.then, label %if.end, !dbg !12911

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12912
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12912

if.end:                                           ; preds = %entry
  %5 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %right.addr, align 8, !dbg !12913, !tbaa !2563
  %call1 = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %5), !dbg !12914
  store %struct._object* %call1, %struct._object** %pyus_right, align 8, !dbg !12915, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !12916, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %6, null, !dbg !12917
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !12918

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !12919

do.body:                                          ; preds = %if.then.3
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12920
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !12920
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1740, metadata !2553), !dbg !12922
  %8 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !12923, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12922, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12924, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12926
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12927, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !12927
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12927, !tbaa !2632
  %cmp4 = icmp ne i64 %dec, 0, !dbg !12928
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !12929

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !12930

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12932, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12934
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12934, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12935
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12935, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12936, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !12937
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12938
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12938
  br label %do.cond, !dbg !12940

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !12941

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12943
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12943

if.end.7:                                         ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !12944, !tbaa !2563
  %17 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !12945, !tbaa !2563
  %call8 = call %struct._object* @PyNumber_TrueDivide(%struct._object* %16, %struct._object* %17), !dbg !12946
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !12947, !tbaa !2563
  br label %do.body.9, !dbg !12948

do.body.9:                                        ; preds = %if.end.7
  %18 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !12949
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !12949
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1744, metadata !2553), !dbg !12951
  %19 = load %struct._object*, %struct._object** %pyus_left, align 8, !dbg !12952, !tbaa !2563
  store %struct._object* %19, %struct._object** %_py_decref_tmp10, align 8, !dbg !12951, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12953, !tbaa !2563
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !12955
  %21 = load i64, i64* %ob_refcnt11, align 8, !dbg !12956, !tbaa !2632
  %dec12 = add i64 %21, -1, !dbg !12956
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !12956, !tbaa !2632
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !12957
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !12958

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !12959

if.else.15:                                       ; preds = %do.body.9
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12961, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !12963
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !12963, !tbaa !2640
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !12964
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !12964, !tbaa !2642
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !12965, !tbaa !2563
  call void %24(%struct._object* %25), !dbg !12966
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %26 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !12967
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !12967
  br label %do.cond.19, !dbg !12969

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !12970

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !12972

do.body.21:                                       ; preds = %do.end.20
  %27 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !12973
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !12973
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !1746, metadata !2553), !dbg !12975
  %28 = load %struct._object*, %struct._object** %pyus_right, align 8, !dbg !12976, !tbaa !2563
  store %struct._object* %28, %struct._object** %_py_decref_tmp22, align 8, !dbg !12975, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !12977, !tbaa !2563
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !12979
  %30 = load i64, i64* %ob_refcnt23, align 8, !dbg !12980, !tbaa !2632
  %dec24 = add i64 %30, -1, !dbg !12980
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !12980, !tbaa !2632
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !12981
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !12982

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !12983

if.else.27:                                       ; preds = %do.body.21
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !12985, !tbaa !2563
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !12987
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !12987, !tbaa !2640
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !12988
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !12988, !tbaa !2642
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !12989, !tbaa !2563
  call void %33(%struct._object* %34), !dbg !12990
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %35 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !12991
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !12991
  br label %do.cond.31, !dbg !12992

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !12993

do.end.32:                                        ; preds = %do.cond.31
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !12995, !tbaa !2563
  store %struct._object* %36, %struct._object** %retval, !dbg !12996
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12996

cleanup:                                          ; preds = %do.end.32, %do.end, %if.then
  %37 = bitcast %struct._object** %result to i8*, !dbg !12997
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !12997
  %38 = bitcast %struct._object** %pyus_right to i8*, !dbg !12997
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !12997
  %39 = bitcast %struct._object** %pyus_left to i8*, !dbg !12997
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !12997
  %40 = load %struct._object*, %struct._object** %retval, !dbg !12997
  ret %struct._object* %40, !dbg !12997
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @truedivide_timedelta_float(%struct.PyDateTime_Delta* %delta, %struct._object* %f) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %f.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %pyus_in = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %pyus_out = alloca %struct._object*, align 8
  %ratio = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_xdecref_tmp62 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !1750, metadata !2553), !dbg !12998
  store %struct._object* %f, %struct._object** %f.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %f.addr, metadata !1751, metadata !2553), !dbg !12999
  %0 = bitcast %struct._object** %result to i8*, !dbg !13000
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13000
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1752, metadata !2553), !dbg !13001
  store %struct._object* null, %struct._object** %result, align 8, !dbg !13001, !tbaa !2563
  %1 = bitcast %struct._object** %pyus_in to i8*, !dbg !13002
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13002
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_in, metadata !1753, metadata !2553), !dbg !13003
  store %struct._object* null, %struct._object** %pyus_in, align 8, !dbg !13003, !tbaa !2563
  %2 = bitcast %struct._object** %temp to i8*, !dbg !13002
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13002
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1754, metadata !2553), !dbg !13004
  %3 = bitcast %struct._object** %pyus_out to i8*, !dbg !13002
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !13002
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_out, metadata !1755, metadata !2553), !dbg !13005
  %4 = bitcast %struct._object** %ratio to i8*, !dbg !13006
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13006
  call void @llvm.dbg.declare(metadata %struct._object** %ratio, metadata !1756, metadata !2553), !dbg !13007
  store %struct._object* null, %struct._object** %ratio, align 8, !dbg !13007, !tbaa !2563
  %5 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !13008, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %5), !dbg !13009
  store %struct._object* %call, %struct._object** %pyus_in, align 8, !dbg !13010, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13011, !tbaa !2563
  %cmp = icmp eq %struct._object* %6, null, !dbg !13013
  br i1 %cmp, label %if.then, label %if.end, !dbg !13014

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13015
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13015

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %f.addr, align 8, !dbg !13016, !tbaa !2563
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %7, %struct._Py_Identifier* @PyId_as_integer_ratio, i8* null), !dbg !13017
  store %struct._object* %call1, %struct._object** %ratio, align 8, !dbg !13018, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !13019, !tbaa !2563
  %cmp2 = icmp eq %struct._object* %8, null, !dbg !13021
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !13022

if.then.3:                                        ; preds = %if.end
  br label %error, !dbg !13023

if.end.4:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13024, !tbaa !2563
  %10 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !13025, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyTupleObject*, !dbg !13026
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %11, i32 0, i32 1, !dbg !13027
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 1, !dbg !13028
  %12 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !13028, !tbaa !2563
  %call5 = call %struct._object* @PyNumber_Multiply(%struct._object* %9, %struct._object* %12), !dbg !13029
  store %struct._object* %call5, %struct._object** %temp, align 8, !dbg !13030, !tbaa !2563
  br label %do.body, !dbg !13031

do.body:                                          ; preds = %if.end.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13032
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !13032
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1757, metadata !2553), !dbg !13034
  %14 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13035, !tbaa !2563
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !13034, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13036, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !13038
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !13039, !tbaa !2632
  %dec = add i64 %16, -1, !dbg !13039
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13039, !tbaa !2632
  %cmp6 = icmp ne i64 %dec, 0, !dbg !13040
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !13041

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !13042

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13044, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !13046
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13046, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !13047
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13047, !tbaa !2642
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13048, !tbaa !2563
  call void %19(%struct._object* %20), !dbg !13049
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13050
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !13050
  br label %do.cond, !dbg !13052

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !13053

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %pyus_in, align 8, !dbg !13055, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %temp, align 8, !dbg !13056, !tbaa !2563
  %cmp9 = icmp eq %struct._object* %22, null, !dbg !13058
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !13059

if.then.10:                                       ; preds = %do.end
  br label %error, !dbg !13060

if.end.11:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %temp, align 8, !dbg !13061, !tbaa !2563
  %24 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !13062, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyTupleObject*, !dbg !13063
  %ob_item12 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %25, i32 0, i32 1, !dbg !13064
  %arrayidx13 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item12, i32 0, i64 0, !dbg !13065
  %26 = load %struct._object*, %struct._object** %arrayidx13, align 8, !dbg !13065, !tbaa !2563
  %call14 = call %struct._object* @divide_nearest(%struct._object* %23, %struct._object* %26), !dbg !13066
  store %struct._object* %call14, %struct._object** %pyus_out, align 8, !dbg !13067, !tbaa !2563
  br label %do.body.15, !dbg !13068

do.body.15:                                       ; preds = %if.end.11
  %27 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !13069
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !13069
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !1759, metadata !2553), !dbg !13071
  %28 = load %struct._object*, %struct._object** %temp, align 8, !dbg !13072, !tbaa !2563
  store %struct._object* %28, %struct._object** %_py_decref_tmp16, align 8, !dbg !13071, !tbaa !2563
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !13073, !tbaa !2563
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !13075
  %30 = load i64, i64* %ob_refcnt17, align 8, !dbg !13076, !tbaa !2632
  %dec18 = add i64 %30, -1, !dbg !13076
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !13076, !tbaa !2632
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !13077
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !13078

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !13079

if.else.21:                                       ; preds = %do.body.15
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !13081, !tbaa !2563
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !13083
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !13083, !tbaa !2640
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !13084
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !13084, !tbaa !2642
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !13085, !tbaa !2563
  call void %33(%struct._object* %34), !dbg !13086
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %35 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !13087
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !13087
  br label %do.cond.25, !dbg !13088

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !13089

do.end.26:                                        ; preds = %do.cond.25
  %36 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !13091, !tbaa !2563
  %cmp27 = icmp eq %struct._object* %36, null, !dbg !13093
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !13094

if.then.28:                                       ; preds = %do.end.26
  br label %error, !dbg !13095

if.end.29:                                        ; preds = %do.end.26
  %37 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !13096, !tbaa !2563
  %call30 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %37, %struct._typeobject* @PyDateTime_DeltaType), !dbg !13097
  store %struct._object* %call30, %struct._object** %result, align 8, !dbg !13098, !tbaa !2563
  br label %do.body.31, !dbg !13099

do.body.31:                                       ; preds = %if.end.29
  %38 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !13100
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !13100
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !1761, metadata !2553), !dbg !13102
  %39 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !13103, !tbaa !2563
  store %struct._object* %39, %struct._object** %_py_decref_tmp32, align 8, !dbg !13102, !tbaa !2563
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !13104, !tbaa !2563
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !13106
  %41 = load i64, i64* %ob_refcnt33, align 8, !dbg !13107, !tbaa !2632
  %dec34 = add i64 %41, -1, !dbg !13107
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !13107, !tbaa !2632
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !13108
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !13109

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !13110

if.else.37:                                       ; preds = %do.body.31
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !13112, !tbaa !2563
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !13114
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !13114, !tbaa !2640
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !13115
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !13115, !tbaa !2642
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !13116, !tbaa !2563
  call void %44(%struct._object* %45), !dbg !13117
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %46 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !13118
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !13118
  br label %do.cond.41, !dbg !13119

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !13120

do.end.42:                                        ; preds = %do.cond.41
  br label %error, !dbg !13122

error:                                            ; preds = %do.end.42, %if.then.28, %if.then.10, %if.then.3
  br label %do.body.43, !dbg !13124

do.body.43:                                       ; preds = %error
  %47 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13125
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !13125
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1763, metadata !2553), !dbg !13127
  %48 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13128, !tbaa !2563
  store %struct._object* %48, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13127, !tbaa !2563
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13129, !tbaa !2563
  %cmp44 = icmp ne %struct._object* %49, null, !dbg !13130
  br i1 %cmp44, label %if.then.45, label %if.end.58, !dbg !13131

if.then.45:                                       ; preds = %do.body.43
  br label %do.body.46, !dbg !13132

do.body.46:                                       ; preds = %if.then.45
  %50 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !13134
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !13134
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp47, metadata !1765, metadata !2553), !dbg !13136
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13137, !tbaa !2563
  store %struct._object* %51, %struct._object** %_py_decref_tmp47, align 8, !dbg !13136, !tbaa !2563
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !13138, !tbaa !2563
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !13140
  %53 = load i64, i64* %ob_refcnt48, align 8, !dbg !13141, !tbaa !2632
  %dec49 = add i64 %53, -1, !dbg !13141
  store i64 %dec49, i64* %ob_refcnt48, align 8, !dbg !13141, !tbaa !2632
  %cmp50 = icmp ne i64 %dec49, 0, !dbg !13142
  br i1 %cmp50, label %if.then.51, label %if.else.52, !dbg !13143

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55, !dbg !13144

if.else.52:                                       ; preds = %do.body.46
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !13146, !tbaa !2563
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !13148
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !13148, !tbaa !2640
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !13149
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !13149, !tbaa !2642
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !13150, !tbaa !2563
  call void %56(%struct._object* %57), !dbg !13151
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %58 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !13152
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !13152
  br label %do.cond.56, !dbg !13154

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !13155

do.end.57:                                        ; preds = %do.cond.56
  br label %if.end.58, !dbg !13157

if.end.58:                                        ; preds = %do.end.57, %do.body.43
  %59 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13159
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !13159
  br label %do.cond.59, !dbg !13162

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !13163

do.end.60:                                        ; preds = %do.cond.59
  br label %do.body.61, !dbg !13165

do.body.61:                                       ; preds = %do.end.60
  %60 = bitcast %struct._object** %_py_xdecref_tmp62 to i8*, !dbg !13166
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !13166
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp62, metadata !1768, metadata !2553), !dbg !13168
  %61 = load %struct._object*, %struct._object** %ratio, align 8, !dbg !13169, !tbaa !2563
  store %struct._object* %61, %struct._object** %_py_xdecref_tmp62, align 8, !dbg !13168, !tbaa !2563
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp62, align 8, !dbg !13170, !tbaa !2563
  %cmp63 = icmp ne %struct._object* %62, null, !dbg !13171
  br i1 %cmp63, label %if.then.64, label %if.end.77, !dbg !13172

if.then.64:                                       ; preds = %do.body.61
  br label %do.body.65, !dbg !13173

do.body.65:                                       ; preds = %if.then.64
  %63 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !13175
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !13175
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp66, metadata !1770, metadata !2553), !dbg !13177
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp62, align 8, !dbg !13178, !tbaa !2563
  store %struct._object* %64, %struct._object** %_py_decref_tmp66, align 8, !dbg !13177, !tbaa !2563
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !13179, !tbaa !2563
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !13181
  %66 = load i64, i64* %ob_refcnt67, align 8, !dbg !13182, !tbaa !2632
  %dec68 = add i64 %66, -1, !dbg !13182
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !13182, !tbaa !2632
  %cmp69 = icmp ne i64 %dec68, 0, !dbg !13183
  br i1 %cmp69, label %if.then.70, label %if.else.71, !dbg !13184

if.then.70:                                       ; preds = %do.body.65
  br label %if.end.74, !dbg !13185

if.else.71:                                       ; preds = %do.body.65
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !13187, !tbaa !2563
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !13189
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !13189, !tbaa !2640
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !13190
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !13190, !tbaa !2642
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !13191, !tbaa !2563
  call void %69(%struct._object* %70), !dbg !13192
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  %71 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !13193
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !13193
  br label %do.cond.75, !dbg !13195

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !13196

do.end.76:                                        ; preds = %do.cond.75
  br label %if.end.77, !dbg !13198

if.end.77:                                        ; preds = %do.end.76, %do.body.61
  %72 = bitcast %struct._object** %_py_xdecref_tmp62 to i8*, !dbg !13200
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !13200
  br label %do.cond.78, !dbg !13201

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !13202

do.end.79:                                        ; preds = %do.cond.78
  %73 = load %struct._object*, %struct._object** %result, align 8, !dbg !13204, !tbaa !2563
  store %struct._object* %73, %struct._object** %retval, !dbg !13205
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13205

cleanup:                                          ; preds = %do.end.79, %if.then
  %74 = bitcast %struct._object** %ratio to i8*, !dbg !13206
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !13206
  %75 = bitcast %struct._object** %pyus_out to i8*, !dbg !13206
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !13206
  %76 = bitcast %struct._object** %temp to i8*, !dbg !13206
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !13206
  %77 = bitcast %struct._object** %pyus_in to i8*, !dbg !13206
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !13206
  %78 = bitcast %struct._object** %result to i8*, !dbg !13206
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !13206
  %79 = load %struct._object*, %struct._object** %retval, !dbg !13206
  ret %struct._object* %79, !dbg !13206
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @truedivide_timedelta_int(%struct.PyDateTime_Delta* %delta, %struct._object* %i) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %delta.addr = alloca %struct.PyDateTime_Delta*, align 8
  %i.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %pyus_in = alloca %struct._object*, align 8
  %pyus_out = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Delta* %delta, %struct.PyDateTime_Delta** %delta.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta.addr, metadata !1775, metadata !2553), !dbg !13207
  store %struct._object* %i, %struct._object** %i.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %i.addr, metadata !1776, metadata !2553), !dbg !13208
  %0 = bitcast %struct._object** %result to i8*, !dbg !13209
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13209
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1777, metadata !2553), !dbg !13210
  %1 = bitcast %struct._object** %pyus_in to i8*, !dbg !13211
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13211
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_in, metadata !1778, metadata !2553), !dbg !13212
  %2 = bitcast %struct._object** %pyus_out to i8*, !dbg !13211
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13211
  call void @llvm.dbg.declare(metadata %struct._object** %pyus_out, metadata !1779, metadata !2553), !dbg !13213
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta.addr, align 8, !dbg !13214, !tbaa !2563
  %call = call %struct._object* @delta_to_microseconds(%struct.PyDateTime_Delta* %3), !dbg !13215
  store %struct._object* %call, %struct._object** %pyus_in, align 8, !dbg !13216, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13217, !tbaa !2563
  %cmp = icmp eq %struct._object* %4, null, !dbg !13219
  br i1 %cmp, label %if.then, label %if.end, !dbg !13220

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13221

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13222, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %i.addr, align 8, !dbg !13223, !tbaa !2563
  %call1 = call %struct._object* @divide_nearest(%struct._object* %5, %struct._object* %6), !dbg !13224
  store %struct._object* %call1, %struct._object** %pyus_out, align 8, !dbg !13225, !tbaa !2563
  br label %do.body, !dbg !13226

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13227
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !13227
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1780, metadata !2553), !dbg !13229
  %8 = load %struct._object*, %struct._object** %pyus_in, align 8, !dbg !13230, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !13229, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13231, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !13233
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !13234, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !13234
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13234, !tbaa !2632
  %cmp2 = icmp ne i64 %dec, 0, !dbg !13235
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !13236

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !13237

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13239, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !13241
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13241, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !13242
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13242, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13243, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !13244
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13245
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !13245
  br label %do.cond, !dbg !13247

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !13248

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !13250, !tbaa !2563
  %cmp5 = icmp eq %struct._object* %16, null, !dbg !13252
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !13253

if.then.6:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !13254
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13254

if.end.7:                                         ; preds = %do.end
  %17 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !13255, !tbaa !2563
  %call8 = call %struct._object* @microseconds_to_delta_ex(%struct._object* %17, %struct._typeobject* @PyDateTime_DeltaType), !dbg !13256
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !13257, !tbaa !2563
  br label %do.body.9, !dbg !13258

do.body.9:                                        ; preds = %if.end.7
  %18 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !13259
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !13259
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1782, metadata !2553), !dbg !13261
  %19 = load %struct._object*, %struct._object** %pyus_out, align 8, !dbg !13262, !tbaa !2563
  store %struct._object* %19, %struct._object** %_py_decref_tmp10, align 8, !dbg !13261, !tbaa !2563
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !13263, !tbaa !2563
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !13265
  %21 = load i64, i64* %ob_refcnt11, align 8, !dbg !13266, !tbaa !2632
  %dec12 = add i64 %21, -1, !dbg !13266
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !13266, !tbaa !2632
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !13267
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !13268

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !13269

if.else.15:                                       ; preds = %do.body.9
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !13271, !tbaa !2563
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !13273
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !13273, !tbaa !2640
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !13274
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !13274, !tbaa !2642
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !13275, !tbaa !2563
  call void %24(%struct._object* %25), !dbg !13276
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %26 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !13277
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !13277
  br label %do.cond.19, !dbg !13278

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !13279

do.end.20:                                        ; preds = %do.cond.19
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !13281, !tbaa !2563
  store %struct._object* %27, %struct._object** %retval, !dbg !13282
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13282

cleanup:                                          ; preds = %do.end.20, %if.then.6, %if.then
  %28 = bitcast %struct._object** %pyus_out to i8*, !dbg !13283
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !13283
  %29 = bitcast %struct._object** %pyus_in to i8*, !dbg !13283
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !13283
  %30 = bitcast %struct._object** %result to i8*, !dbg !13283
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !13283
  %31 = load %struct._object*, %struct._object** %retval, !dbg !13283
  ret %struct._object* %31, !dbg !13283
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_getstate(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1798, metadata !2553), !dbg !13284
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !13285, !tbaa !2563
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %0, i32 0, i32 2, !dbg !13286
  %1 = load i32, i32* %days, align 4, !dbg !13286, !tbaa !3363
  %2 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !13287, !tbaa !2563
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %2, i32 0, i32 3, !dbg !13288
  %3 = load i32, i32* %seconds, align 4, !dbg !13288, !tbaa !3368
  %4 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !13289, !tbaa !2563
  %microseconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %4, i32 0, i32 4, !dbg !13290
  %5 = load i32, i32* %microseconds, align 4, !dbg !13290, !tbaa !3373
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 %1, i32 %3, i32 %5), !dbg !13291
  ret %struct._object* %call, !dbg !13292
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @delta_reduce(%struct.PyDateTime_Delta* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Delta*, align 8
  store %struct.PyDateTime_Delta* %self, %struct.PyDateTime_Delta** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %self.addr, metadata !1817, metadata !2553), !dbg !13293
  %0 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !13294, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Delta* %0 to %struct._object*, !dbg !13295
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !13296
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13296, !tbaa !2640
  %3 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %self.addr, align 8, !dbg !13297, !tbaa !2563
  %call = call %struct._object* @delta_getstate(%struct.PyDateTime_Delta* %3), !dbg !13298
  %call1 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %call), !dbg !13299
  ret %struct._object* %call1, !dbg !13300
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @accum(i8* %tag, %struct._object* %sofar, %struct._object* %num, %struct._object* %factor, double* %leftover) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tag.addr = alloca i8*, align 8
  %sofar.addr = alloca %struct._object*, align 8
  %num.addr = alloca %struct._object*, align 8
  %factor.addr = alloca %struct._object*, align 8
  %leftover.addr = alloca double*, align 8
  %prod = alloca %struct._object*, align 8
  %sum = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %dnum = alloca double, align 8
  %fracpart = alloca double, align 8
  %intpart = alloca double, align 8
  %x = alloca %struct._object*, align 8
  %y = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp92 = alloca %struct._object*, align 8
  store i8* %tag, i8** %tag.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !1895, metadata !2553), !dbg !13301
  store %struct._object* %sofar, %struct._object** %sofar.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %sofar.addr, metadata !1896, metadata !2553), !dbg !13302
  store %struct._object* %num, %struct._object** %num.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %num.addr, metadata !1897, metadata !2553), !dbg !13303
  store %struct._object* %factor, %struct._object** %factor.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %factor.addr, metadata !1898, metadata !2553), !dbg !13304
  store double* %leftover, double** %leftover.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata double** %leftover.addr, metadata !1899, metadata !2553), !dbg !13305
  %0 = bitcast %struct._object** %prod to i8*, !dbg !13306
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13306
  call void @llvm.dbg.declare(metadata %struct._object** %prod, metadata !1900, metadata !2553), !dbg !13307
  %1 = bitcast %struct._object** %sum to i8*, !dbg !13308
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13308
  call void @llvm.dbg.declare(metadata %struct._object** %sum, metadata !1901, metadata !2553), !dbg !13309
  %2 = load %struct._object*, %struct._object** %num.addr, align 8, !dbg !13310, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !13311
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13311, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19, !dbg !13312
  %4 = load i64, i64* %tp_flags, align 8, !dbg !13312, !tbaa !3751
  %and = and i64 %4, 16777216, !dbg !13313
  %cmp = icmp ne i64 %and, 0, !dbg !13314
  br i1 %cmp, label %if.then, label %if.end.8, !dbg !13315

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %num.addr, align 8, !dbg !13316, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %factor.addr, align 8, !dbg !13317, !tbaa !2563
  %call = call %struct._object* @PyNumber_Multiply(%struct._object* %5, %struct._object* %6), !dbg !13318
  store %struct._object* %call, %struct._object** %prod, align 8, !dbg !13319, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %prod, align 8, !dbg !13320, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %7, null, !dbg !13322
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !13323

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !13324
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110, !dbg !13324

if.end:                                           ; preds = %if.then
  %8 = load %struct._object*, %struct._object** %sofar.addr, align 8, !dbg !13325, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %prod, align 8, !dbg !13326, !tbaa !2563
  %call3 = call %struct._object* @PyNumber_Add(%struct._object* %8, %struct._object* %9), !dbg !13327
  store %struct._object* %call3, %struct._object** %sum, align 8, !dbg !13328, !tbaa !2563
  br label %do.body, !dbg !13329

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13330
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !13330
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1902, metadata !2553), !dbg !13332
  %11 = load %struct._object*, %struct._object** %prod, align 8, !dbg !13333, !tbaa !2563
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !13332, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13334, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !13336
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !13337, !tbaa !2632
  %dec = add i64 %13, -1, !dbg !13337
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13337, !tbaa !2632
  %cmp4 = icmp ne i64 %dec, 0, !dbg !13338
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !13339

if.then.5:                                        ; preds = %do.body
  br label %if.end.7, !dbg !13340

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13342, !tbaa !2563
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !13344
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !13344, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !13345
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13345, !tbaa !2642
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13346, !tbaa !2563
  call void %16(%struct._object* %17), !dbg !13347
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.5
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13348
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !13348
  br label %do.cond, !dbg !13350

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !13351

do.end:                                           ; preds = %do.cond
  %19 = load %struct._object*, %struct._object** %sum, align 8, !dbg !13353, !tbaa !2563
  store %struct._object* %19, %struct._object** %retval, !dbg !13354
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110, !dbg !13354

if.end.8:                                         ; preds = %entry
  %20 = load %struct._object*, %struct._object** %num.addr, align 8, !dbg !13355, !tbaa !2563
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !13356
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !13356, !tbaa !2640
  %cmp10 = icmp eq %struct._typeobject* %21, @PyFloat_Type, !dbg !13357
  br i1 %cmp10, label %if.then.13, label %lor.lhs.false, !dbg !13358

lor.lhs.false:                                    ; preds = %if.end.8
  %22 = load %struct._object*, %struct._object** %num.addr, align 8, !dbg !13359, !tbaa !2563
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !13361
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !13361, !tbaa !2640
  %call12 = call i32 @PyType_IsSubtype(%struct._typeobject* %23, %struct._typeobject* @PyFloat_Type), !dbg !13362
  %tobool = icmp ne i32 %call12, 0, !dbg !13362
  br i1 %tobool, label %if.then.13, label %if.end.107, !dbg !13363

if.then.13:                                       ; preds = %lor.lhs.false, %if.end.8
  %24 = bitcast double* %dnum to i8*, !dbg !13364
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !13364
  call void @llvm.dbg.declare(metadata double* %dnum, metadata !1906, metadata !2553), !dbg !13365
  %25 = bitcast double* %fracpart to i8*, !dbg !13366
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !13366
  call void @llvm.dbg.declare(metadata double* %fracpart, metadata !1909, metadata !2553), !dbg !13367
  %26 = bitcast double* %intpart to i8*, !dbg !13368
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !13368
  call void @llvm.dbg.declare(metadata double* %intpart, metadata !1910, metadata !2553), !dbg !13369
  %27 = bitcast %struct._object** %x to i8*, !dbg !13370
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !13370
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !1911, metadata !2553), !dbg !13371
  %28 = bitcast %struct._object** %y to i8*, !dbg !13372
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !13372
  call void @llvm.dbg.declare(metadata %struct._object** %y, metadata !1912, metadata !2553), !dbg !13373
  %29 = load %struct._object*, %struct._object** %num.addr, align 8, !dbg !13374, !tbaa !2563
  %call14 = call double @PyFloat_AsDouble(%struct._object* %29), !dbg !13375
  store double %call14, double* %dnum, align 8, !dbg !13376, !tbaa !10963
  %30 = load double, double* %dnum, align 8, !dbg !13377, !tbaa !10963
  %cmp15 = fcmp oeq double %30, -1.000000e+00, !dbg !13379
  br i1 %cmp15, label %land.lhs.true, label %if.end.19, !dbg !13380

land.lhs.true:                                    ; preds = %if.then.13
  %call16 = call %struct._object* @PyErr_Occurred(), !dbg !13381
  %tobool17 = icmp ne %struct._object* %call16, null, !dbg !13381
  br i1 %tobool17, label %if.then.18, label %if.end.19, !dbg !13383

if.then.18:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !13384
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13384

if.end.19:                                        ; preds = %land.lhs.true, %if.then.13
  %31 = load double, double* %dnum, align 8, !dbg !13385, !tbaa !10963
  %call20 = call double @modf(double %31, double* %intpart) #1, !dbg !13386
  store double %call20, double* %fracpart, align 8, !dbg !13387, !tbaa !10963
  %32 = load double, double* %intpart, align 8, !dbg !13388, !tbaa !10963
  %call21 = call %struct._object* @PyLong_FromDouble(double %32), !dbg !13389
  store %struct._object* %call21, %struct._object** %x, align 8, !dbg !13390, !tbaa !2563
  %33 = load %struct._object*, %struct._object** %x, align 8, !dbg !13391, !tbaa !2563
  %cmp22 = icmp eq %struct._object* %33, null, !dbg !13393
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !13394

if.then.23:                                       ; preds = %if.end.19
  store %struct._object* null, %struct._object** %retval, !dbg !13395
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13395

if.end.24:                                        ; preds = %if.end.19
  %34 = load %struct._object*, %struct._object** %x, align 8, !dbg !13396, !tbaa !2563
  %35 = load %struct._object*, %struct._object** %factor.addr, align 8, !dbg !13397, !tbaa !2563
  %call25 = call %struct._object* @PyNumber_Multiply(%struct._object* %34, %struct._object* %35), !dbg !13398
  store %struct._object* %call25, %struct._object** %prod, align 8, !dbg !13399, !tbaa !2563
  br label %do.body.26, !dbg !13400

do.body.26:                                       ; preds = %if.end.24
  %36 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !13401
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !13401
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp27, metadata !1913, metadata !2553), !dbg !13403
  %37 = load %struct._object*, %struct._object** %x, align 8, !dbg !13404, !tbaa !2563
  store %struct._object* %37, %struct._object** %_py_decref_tmp27, align 8, !dbg !13403, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !13405, !tbaa !2563
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !13407
  %39 = load i64, i64* %ob_refcnt28, align 8, !dbg !13408, !tbaa !2632
  %dec29 = add i64 %39, -1, !dbg !13408
  store i64 %dec29, i64* %ob_refcnt28, align 8, !dbg !13408, !tbaa !2632
  %cmp30 = icmp ne i64 %dec29, 0, !dbg !13409
  br i1 %cmp30, label %if.then.31, label %if.else.32, !dbg !13410

if.then.31:                                       ; preds = %do.body.26
  br label %if.end.35, !dbg !13411

if.else.32:                                       ; preds = %do.body.26
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !13413, !tbaa !2563
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !13415
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !13415, !tbaa !2640
  %tp_dealloc34 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !13416
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc34, align 8, !dbg !13416, !tbaa !2642
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !13417, !tbaa !2563
  call void %42(%struct._object* %43), !dbg !13418
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.32, %if.then.31
  %44 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !13419
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !13419
  br label %do.cond.36, !dbg !13421

do.cond.36:                                       ; preds = %if.end.35
  br label %do.end.37, !dbg !13422

do.end.37:                                        ; preds = %do.cond.36
  %45 = load %struct._object*, %struct._object** %prod, align 8, !dbg !13424, !tbaa !2563
  %cmp38 = icmp eq %struct._object* %45, null, !dbg !13426
  br i1 %cmp38, label %if.then.39, label %if.end.40, !dbg !13427

if.then.39:                                       ; preds = %do.end.37
  store %struct._object* null, %struct._object** %retval, !dbg !13428
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13428

if.end.40:                                        ; preds = %do.end.37
  %46 = load %struct._object*, %struct._object** %sofar.addr, align 8, !dbg !13429, !tbaa !2563
  %47 = load %struct._object*, %struct._object** %prod, align 8, !dbg !13430, !tbaa !2563
  %call41 = call %struct._object* @PyNumber_Add(%struct._object* %46, %struct._object* %47), !dbg !13431
  store %struct._object* %call41, %struct._object** %sum, align 8, !dbg !13432, !tbaa !2563
  br label %do.body.42, !dbg !13433

do.body.42:                                       ; preds = %if.end.40
  %48 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !13434
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !13434
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !1915, metadata !2553), !dbg !13436
  %49 = load %struct._object*, %struct._object** %prod, align 8, !dbg !13437, !tbaa !2563
  store %struct._object* %49, %struct._object** %_py_decref_tmp43, align 8, !dbg !13436, !tbaa !2563
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !13438, !tbaa !2563
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !13440
  %51 = load i64, i64* %ob_refcnt44, align 8, !dbg !13441, !tbaa !2632
  %dec45 = add i64 %51, -1, !dbg !13441
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !13441, !tbaa !2632
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !13442
  br i1 %cmp46, label %if.then.47, label %if.else.48, !dbg !13443

if.then.47:                                       ; preds = %do.body.42
  br label %if.end.51, !dbg !13444

if.else.48:                                       ; preds = %do.body.42
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !13446, !tbaa !2563
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !13448
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !13448, !tbaa !2640
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !13449
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8, !dbg !13449, !tbaa !2642
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !13450, !tbaa !2563
  call void %54(%struct._object* %55), !dbg !13451
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  %56 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !13452
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !13452
  br label %do.cond.52, !dbg !13453

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !13454

do.end.53:                                        ; preds = %do.cond.52
  %57 = load %struct._object*, %struct._object** %sum, align 8, !dbg !13456, !tbaa !2563
  %cmp54 = icmp eq %struct._object* %57, null, !dbg !13458
  br i1 %cmp54, label %if.then.55, label %if.end.56, !dbg !13459

if.then.55:                                       ; preds = %do.end.53
  store %struct._object* null, %struct._object** %retval, !dbg !13460
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13460

if.end.56:                                        ; preds = %do.end.53
  %58 = load double, double* %fracpart, align 8, !dbg !13461, !tbaa !10963
  %cmp57 = fcmp oeq double %58, 0.000000e+00, !dbg !13463
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !13464

if.then.58:                                       ; preds = %if.end.56
  %59 = load %struct._object*, %struct._object** %sum, align 8, !dbg !13465, !tbaa !2563
  store %struct._object* %59, %struct._object** %retval, !dbg !13466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13466

if.end.59:                                        ; preds = %if.end.56
  %60 = load %struct._object*, %struct._object** %factor.addr, align 8, !dbg !13467, !tbaa !2563
  %call60 = call double @PyLong_AsDouble(%struct._object* %60), !dbg !13468
  store double %call60, double* %dnum, align 8, !dbg !13469, !tbaa !10963
  %61 = load double, double* %fracpart, align 8, !dbg !13470, !tbaa !10963
  %62 = load double, double* %dnum, align 8, !dbg !13471, !tbaa !10963
  %mul = fmul double %62, %61, !dbg !13471
  store double %mul, double* %dnum, align 8, !dbg !13471, !tbaa !10963
  %63 = load double, double* %dnum, align 8, !dbg !13472, !tbaa !10963
  %call61 = call double @modf(double %63, double* %intpart) #1, !dbg !13473
  store double %call61, double* %fracpart, align 8, !dbg !13474, !tbaa !10963
  %64 = load double, double* %intpart, align 8, !dbg !13475, !tbaa !10963
  %call62 = call %struct._object* @PyLong_FromDouble(double %64), !dbg !13476
  store %struct._object* %call62, %struct._object** %x, align 8, !dbg !13477, !tbaa !2563
  %65 = load %struct._object*, %struct._object** %x, align 8, !dbg !13478, !tbaa !2563
  %cmp63 = icmp eq %struct._object* %65, null, !dbg !13479
  br i1 %cmp63, label %if.then.64, label %if.end.77, !dbg !13480

if.then.64:                                       ; preds = %if.end.59
  br label %do.body.65, !dbg !13481

do.body.65:                                       ; preds = %if.then.64
  %66 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !13482
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !13482
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp66, metadata !1917, metadata !2553), !dbg !13484
  %67 = load %struct._object*, %struct._object** %sum, align 8, !dbg !13485, !tbaa !2563
  store %struct._object* %67, %struct._object** %_py_decref_tmp66, align 8, !dbg !13484, !tbaa !2563
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !13486, !tbaa !2563
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !13488
  %69 = load i64, i64* %ob_refcnt67, align 8, !dbg !13489, !tbaa !2632
  %dec68 = add i64 %69, -1, !dbg !13489
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !13489, !tbaa !2632
  %cmp69 = icmp ne i64 %dec68, 0, !dbg !13490
  br i1 %cmp69, label %if.then.70, label %if.else.71, !dbg !13491

if.then.70:                                       ; preds = %do.body.65
  br label %if.end.74, !dbg !13492

if.else.71:                                       ; preds = %do.body.65
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !13494, !tbaa !2563
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !13496
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !13496, !tbaa !2640
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !13497
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !13497, !tbaa !2642
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !13498, !tbaa !2563
  call void %72(%struct._object* %73), !dbg !13499
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  %74 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !13500
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !13500
  br label %do.cond.75, !dbg !13502

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !13503

do.end.76:                                        ; preds = %do.cond.75
  store %struct._object* null, %struct._object** %retval, !dbg !13505
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13505

if.end.77:                                        ; preds = %if.end.59
  %75 = load %struct._object*, %struct._object** %sum, align 8, !dbg !13506, !tbaa !2563
  %76 = load %struct._object*, %struct._object** %x, align 8, !dbg !13507, !tbaa !2563
  %call78 = call %struct._object* @PyNumber_Add(%struct._object* %75, %struct._object* %76), !dbg !13508
  store %struct._object* %call78, %struct._object** %y, align 8, !dbg !13509, !tbaa !2563
  br label %do.body.79, !dbg !13510

do.body.79:                                       ; preds = %if.end.77
  %77 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !13511
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !13511
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp80, metadata !1921, metadata !2553), !dbg !13513
  %78 = load %struct._object*, %struct._object** %sum, align 8, !dbg !13514, !tbaa !2563
  store %struct._object* %78, %struct._object** %_py_decref_tmp80, align 8, !dbg !13513, !tbaa !2563
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !13515, !tbaa !2563
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !13517
  %80 = load i64, i64* %ob_refcnt81, align 8, !dbg !13518, !tbaa !2632
  %dec82 = add i64 %80, -1, !dbg !13518
  store i64 %dec82, i64* %ob_refcnt81, align 8, !dbg !13518, !tbaa !2632
  %cmp83 = icmp ne i64 %dec82, 0, !dbg !13519
  br i1 %cmp83, label %if.then.84, label %if.else.85, !dbg !13520

if.then.84:                                       ; preds = %do.body.79
  br label %if.end.88, !dbg !13521

if.else.85:                                       ; preds = %do.body.79
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !13523, !tbaa !2563
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !13525
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !13525, !tbaa !2640
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !13526
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !13526, !tbaa !2642
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !13527, !tbaa !2563
  call void %83(%struct._object* %84), !dbg !13528
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %85 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !13529
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !13529
  br label %do.cond.89, !dbg !13530

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !13531

do.end.90:                                        ; preds = %do.cond.89
  br label %do.body.91, !dbg !13533

do.body.91:                                       ; preds = %do.end.90
  %86 = bitcast %struct._object** %_py_decref_tmp92 to i8*, !dbg !13534
  call void @llvm.lifetime.start(i64 8, i8* %86) #1, !dbg !13534
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp92, metadata !1923, metadata !2553), !dbg !13536
  %87 = load %struct._object*, %struct._object** %x, align 8, !dbg !13537, !tbaa !2563
  store %struct._object* %87, %struct._object** %_py_decref_tmp92, align 8, !dbg !13536, !tbaa !2563
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !13538, !tbaa !2563
  %ob_refcnt93 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0, !dbg !13540
  %89 = load i64, i64* %ob_refcnt93, align 8, !dbg !13541, !tbaa !2632
  %dec94 = add i64 %89, -1, !dbg !13541
  store i64 %dec94, i64* %ob_refcnt93, align 8, !dbg !13541, !tbaa !2632
  %cmp95 = icmp ne i64 %dec94, 0, !dbg !13542
  br i1 %cmp95, label %if.then.96, label %if.else.97, !dbg !13543

if.then.96:                                       ; preds = %do.body.91
  br label %if.end.100, !dbg !13544

if.else.97:                                       ; preds = %do.body.91
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !13546, !tbaa !2563
  %ob_type98 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !13548
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type98, align 8, !dbg !13548, !tbaa !2640
  %tp_dealloc99 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4, !dbg !13549
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc99, align 8, !dbg !13549, !tbaa !2642
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !13550, !tbaa !2563
  call void %92(%struct._object* %93), !dbg !13551
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.97, %if.then.96
  %94 = bitcast %struct._object** %_py_decref_tmp92 to i8*, !dbg !13552
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !13552
  br label %do.cond.101, !dbg !13553

do.cond.101:                                      ; preds = %if.end.100
  br label %do.end.102, !dbg !13554

do.end.102:                                       ; preds = %do.cond.101
  %95 = load double, double* %fracpart, align 8, !dbg !13556, !tbaa !10963
  %96 = load double*, double** %leftover.addr, align 8, !dbg !13557, !tbaa !2563
  %97 = load double, double* %96, align 8, !dbg !13558, !tbaa !10963
  %add = fadd double %97, %95, !dbg !13558
  store double %add, double* %96, align 8, !dbg !13558, !tbaa !10963
  %98 = load %struct._object*, %struct._object** %y, align 8, !dbg !13559, !tbaa !2563
  store %struct._object* %98, %struct._object** %retval, !dbg !13560
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13560

cleanup:                                          ; preds = %do.end.102, %do.end.76, %if.then.58, %if.then.55, %if.then.39, %if.then.23, %if.then.18
  %99 = bitcast %struct._object** %y to i8*, !dbg !13561
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !13561
  %100 = bitcast %struct._object** %x to i8*, !dbg !13561
  call void @llvm.lifetime.end(i64 8, i8* %100) #1, !dbg !13561
  %101 = bitcast double* %intpart to i8*, !dbg !13561
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !13561
  %102 = bitcast double* %fracpart to i8*, !dbg !13561
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !13561
  %103 = bitcast double* %dnum to i8*, !dbg !13561
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !13561
  br label %cleanup.110

if.end.107:                                       ; preds = %lor.lhs.false
  %104 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13562, !tbaa !2563
  %105 = load i8*, i8** %tag.addr, align 8, !dbg !13563, !tbaa !2563
  %106 = load %struct._object*, %struct._object** %num.addr, align 8, !dbg !13564, !tbaa !2563
  %ob_type108 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1, !dbg !13565
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type108, align 8, !dbg !13565, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 1, !dbg !13566
  %108 = load i8*, i8** %tp_name, align 8, !dbg !13566, !tbaa !3653
  %call109 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %104, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.197, i32 0, i32 0), i8* %105, i8* %108), !dbg !13567
  store %struct._object* null, %struct._object** %retval, !dbg !13568
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110, !dbg !13568

cleanup.110:                                      ; preds = %if.end.107, %cleanup, %do.end, %if.then.2
  %109 = bitcast %struct._object** %sum to i8*, !dbg !13569
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !13569
  %110 = bitcast %struct._object** %prod to i8*, !dbg !13569
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !13569
  %111 = load %struct._object*, %struct._object** %retval, !dbg !13569
  ret %struct._object* %111, !dbg !13569
}

; Function Attrs: nounwind readnone
declare double @round(double) #6

; Function Attrs: nounwind readnone
declare double @fabs(double) #6

declare %struct._object* @PyNumber_And(%struct._object*, %struct._object*) #3

declare i32 @PyObject_IsTrue(%struct._object*) #3

declare double @PyFloat_AsDouble(%struct._object*) #3

; Function Attrs: nounwind
declare double @modf(double, double*) #5

declare double @PyLong_AsDouble(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @time_dealloc(%struct.PyDateTime_Time* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !1929, metadata !2553), !dbg !13570
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13571, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Time* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !13572
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !13573
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !13573, !tbaa !5575
  %tobool = icmp ne i8 %2, 0, !dbg !13574
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !13575

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13576

do.body:                                          ; preds = %if.then
  %3 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13577
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !13577
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1930, metadata !2553), !dbg !13579
  %4 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13580, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %4, i32 0, i32 4, !dbg !13581
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !13581, !tbaa !3489
  store %struct._object* %5, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13579, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13582, !tbaa !2563
  %cmp = icmp ne %struct._object* %6, null, !dbg !13583
  br i1 %cmp, label %if.then.1, label %if.end.5, !dbg !13584

if.then.1:                                        ; preds = %do.body
  br label %do.body.2, !dbg !13585

do.body.2:                                        ; preds = %if.then.1
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13587
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !13587
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1934, metadata !2553), !dbg !13589
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13590, !tbaa !2563
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !13589, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13591, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !13593
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !13594, !tbaa !2632
  %dec = add i64 %10, -1, !dbg !13594
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13594, !tbaa !2632
  %cmp3 = icmp ne i64 %dec, 0, !dbg !13595
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !13596

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !13597

if.else:                                          ; preds = %do.body.2
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13599, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !13601
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13601, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !13602
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13602, !tbaa !2642
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13603, !tbaa !2563
  call void %13(%struct._object* %14), !dbg !13604
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13605
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !13605
  br label %do.cond, !dbg !13607

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !13608

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !13610

if.end.5:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13612
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !13612
  br label %do.end.7, !dbg !13615

do.end.7:                                         ; preds = %if.end.5
  br label %if.end.8, !dbg !13616

if.end.8:                                         ; preds = %do.end.7, %entry
  %17 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13617, !tbaa !2563
  %18 = bitcast %struct.PyDateTime_Time* %17 to %struct._object*, !dbg !13618
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !13619
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !13619, !tbaa !2640
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !13620
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !13620, !tbaa !6467
  %21 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13621, !tbaa !2563
  %22 = bitcast %struct.PyDateTime_Time* %21 to %struct._object*, !dbg !13622
  %23 = bitcast %struct._object* %22 to i8*, !dbg !13622
  call void %20(i8* %23), !dbg !13623
  ret void, !dbg !13624
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_repr(%struct.PyDateTime_Time* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %type_name = alloca i8*, align 8
  %h = alloca i32, align 4
  %m = alloca i32, align 4
  %s = alloca i32, align 4
  %us = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !1941, metadata !2553), !dbg !13625
  %0 = bitcast i8** %type_name to i8*, !dbg !13626
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13626
  call void @llvm.dbg.declare(metadata i8** %type_name, metadata !1942, metadata !2553), !dbg !13627
  %1 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13628, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_Time* %1 to %struct._object*, !dbg !13629
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !13630
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13630, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !13631
  %4 = load i8*, i8** %tp_name, align 8, !dbg !13631, !tbaa !3653
  store i8* %4, i8** %type_name, align 8, !dbg !13627, !tbaa !2563
  %5 = bitcast i32* %h to i8*, !dbg !13632
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !13632
  call void @llvm.dbg.declare(metadata i32* %h, metadata !1943, metadata !2553), !dbg !13633
  %6 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13634, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %6, i32 0, i32 3, !dbg !13635
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 0, !dbg !13636
  %7 = load i8, i8* %arrayidx, align 1, !dbg !13636, !tbaa !3415
  %conv = zext i8 %7 to i32, !dbg !13637
  store i32 %conv, i32* %h, align 4, !dbg !13633, !tbaa !3325
  %8 = bitcast i32* %m to i8*, !dbg !13638
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !13638
  call void @llvm.dbg.declare(metadata i32* %m, metadata !1944, metadata !2553), !dbg !13639
  %9 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13640, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %9, i32 0, i32 3, !dbg !13641
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %data1, i32 0, i64 1, !dbg !13642
  %10 = load i8, i8* %arrayidx2, align 1, !dbg !13642, !tbaa !3415
  %conv3 = zext i8 %10 to i32, !dbg !13643
  store i32 %conv3, i32* %m, align 4, !dbg !13639, !tbaa !3325
  %11 = bitcast i32* %s to i8*, !dbg !13644
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !13644
  call void @llvm.dbg.declare(metadata i32* %s, metadata !1945, metadata !2553), !dbg !13645
  %12 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13646, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %12, i32 0, i32 3, !dbg !13647
  %arrayidx5 = getelementptr [6 x i8], [6 x i8]* %data4, i32 0, i64 2, !dbg !13648
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !13648, !tbaa !3415
  %conv6 = zext i8 %13 to i32, !dbg !13649
  store i32 %conv6, i32* %s, align 4, !dbg !13645, !tbaa !3325
  %14 = bitcast i32* %us to i8*, !dbg !13650
  call void @llvm.lifetime.start(i64 4, i8* %14) #1, !dbg !13650
  call void @llvm.dbg.declare(metadata i32* %us, metadata !1946, metadata !2553), !dbg !13651
  %15 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13652, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %15, i32 0, i32 3, !dbg !13653
  %arrayidx8 = getelementptr [6 x i8], [6 x i8]* %data7, i32 0, i64 3, !dbg !13654
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !13654, !tbaa !3415
  %conv9 = zext i8 %16 to i32, !dbg !13654
  %shl = shl i32 %conv9, 16, !dbg !13655
  %17 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13656, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %17, i32 0, i32 3, !dbg !13657
  %arrayidx11 = getelementptr [6 x i8], [6 x i8]* %data10, i32 0, i64 4, !dbg !13658
  %18 = load i8, i8* %arrayidx11, align 1, !dbg !13658, !tbaa !3415
  %conv12 = zext i8 %18 to i32, !dbg !13658
  %shl13 = shl i32 %conv12, 8, !dbg !13659
  %or = or i32 %shl, %shl13, !dbg !13660
  %19 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13661, !tbaa !2563
  %data14 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %19, i32 0, i32 3, !dbg !13662
  %arrayidx15 = getelementptr [6 x i8], [6 x i8]* %data14, i32 0, i64 5, !dbg !13663
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !13663, !tbaa !3415
  %conv16 = zext i8 %20 to i32, !dbg !13663
  %or17 = or i32 %or, %conv16, !dbg !13664
  store i32 %or17, i32* %us, align 4, !dbg !13651, !tbaa !3325
  %21 = bitcast %struct._object** %result to i8*, !dbg !13665
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !13665
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1947, metadata !2553), !dbg !13666
  store %struct._object* null, %struct._object** %result, align 8, !dbg !13666, !tbaa !2563
  %22 = load i32, i32* %us, align 4, !dbg !13667, !tbaa !3325
  %tobool = icmp ne i32 %22, 0, !dbg !13667
  br i1 %tobool, label %if.then, label %if.else, !dbg !13669

if.then:                                          ; preds = %entry
  %23 = load i8*, i8** %type_name, align 8, !dbg !13670, !tbaa !2563
  %24 = load i32, i32* %h, align 4, !dbg !13671, !tbaa !3325
  %25 = load i32, i32* %m, align 4, !dbg !13672, !tbaa !3325
  %26 = load i32, i32* %s, align 4, !dbg !13673, !tbaa !3325
  %27 = load i32, i32* %us, align 4, !dbg !13674, !tbaa !3325
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.199, i32 0, i32 0), i8* %23, i32 %24, i32 %25, i32 %26, i32 %27), !dbg !13675
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !13676, !tbaa !2563
  br label %if.end.23, !dbg !13677

if.else:                                          ; preds = %entry
  %28 = load i32, i32* %s, align 4, !dbg !13678, !tbaa !3325
  %tobool18 = icmp ne i32 %28, 0, !dbg !13678
  br i1 %tobool18, label %if.then.19, label %if.else.21, !dbg !13680

if.then.19:                                       ; preds = %if.else
  %29 = load i8*, i8** %type_name, align 8, !dbg !13681, !tbaa !2563
  %30 = load i32, i32* %h, align 4, !dbg !13682, !tbaa !3325
  %31 = load i32, i32* %m, align 4, !dbg !13683, !tbaa !3325
  %32 = load i32, i32* %s, align 4, !dbg !13684, !tbaa !3325
  %call20 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* %29, i32 %30, i32 %31, i32 %32), !dbg !13685
  store %struct._object* %call20, %struct._object** %result, align 8, !dbg !13686, !tbaa !2563
  br label %if.end, !dbg !13687

if.else.21:                                       ; preds = %if.else
  %33 = load i8*, i8** %type_name, align 8, !dbg !13688, !tbaa !2563
  %34 = load i32, i32* %h, align 4, !dbg !13689, !tbaa !3325
  %35 = load i32, i32* %m, align 4, !dbg !13690, !tbaa !3325
  %call22 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0), i8* %33, i32 %34, i32 %35), !dbg !13691
  store %struct._object* %call22, %struct._object** %result, align 8, !dbg !13692, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else.21, %if.then.19
  br label %if.end.23

if.end.23:                                        ; preds = %if.end, %if.then
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !13693, !tbaa !2563
  %cmp = icmp ne %struct._object* %36, null, !dbg !13695
  br i1 %cmp, label %land.lhs.true, label %if.end.29, !dbg !13696

land.lhs.true:                                    ; preds = %if.end.23
  %37 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13697, !tbaa !2563
  %38 = bitcast %struct.PyDateTime_Time* %37 to %struct._PyDateTime_BaseTZInfo*, !dbg !13699
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %38, i32 0, i32 2, !dbg !13700
  %39 = load i8, i8* %hastzinfo, align 1, !dbg !13700, !tbaa !5575
  %conv25 = sext i8 %39 to i32, !dbg !13701
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !13701
  br i1 %tobool26, label %if.then.27, label %if.end.29, !dbg !13702

if.then.27:                                       ; preds = %land.lhs.true
  %40 = load %struct._object*, %struct._object** %result, align 8, !dbg !13703, !tbaa !2563
  %41 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13704, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %41, i32 0, i32 4, !dbg !13705
  %42 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !13705, !tbaa !3489
  %call28 = call %struct._object* @append_keyword_tzinfo(%struct._object* %40, %struct._object* %42), !dbg !13706
  store %struct._object* %call28, %struct._object** %result, align 8, !dbg !13707, !tbaa !2563
  br label %if.end.29, !dbg !13708

if.end.29:                                        ; preds = %if.then.27, %land.lhs.true, %if.end.23
  %43 = load %struct._object*, %struct._object** %result, align 8, !dbg !13709, !tbaa !2563
  %44 = bitcast %struct._object** %result to i8*, !dbg !13710
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !13710
  %45 = bitcast i32* %us to i8*, !dbg !13710
  call void @llvm.lifetime.end(i64 4, i8* %45) #1, !dbg !13710
  %46 = bitcast i32* %s to i8*, !dbg !13710
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !13710
  %47 = bitcast i32* %m to i8*, !dbg !13710
  call void @llvm.lifetime.end(i64 4, i8* %47) #1, !dbg !13710
  %48 = bitcast i32* %h to i8*, !dbg !13710
  call void @llvm.lifetime.end(i64 4, i8* %48) #1, !dbg !13710
  %49 = bitcast i8** %type_name to i8*, !dbg !13710
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !13710
  ret %struct._object* %43, !dbg !13711
}

; Function Attrs: nounwind uwtable
define internal i64 @time_hash(%struct.PyDateTime_Time* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %offset = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %temp1 = alloca %struct._object*, align 8
  %temp2 = alloca %struct._object*, align 8
  %seconds = alloca i32, align 4
  %microseconds = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !1962, metadata !2553), !dbg !13712
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13713, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %0, i32 0, i32 1, !dbg !13714
  %1 = load i64, i64* %hashcode, align 8, !dbg !13714, !tbaa !3436
  %cmp = icmp eq i64 %1, -1, !dbg !13715
  br i1 %cmp, label %if.then, label %if.end.103, !dbg !13716

if.then:                                          ; preds = %entry
  %2 = bitcast %struct._object** %offset to i8*, !dbg !13717
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13717
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !1963, metadata !2553), !dbg !13718
  %3 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13719, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_Time* %3 to %struct._object*, !dbg !13720
  %call = call %struct._object* @time_utcoffset(%struct._object* %4, %struct._object* null), !dbg !13721
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !13722, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %offset, align 8, !dbg !13723, !tbaa !2563
  %cmp1 = icmp eq %struct._object* %5, null, !dbg !13725
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !13726

if.then.2:                                        ; preds = %if.then
  store i64 -1, i64* %retval, !dbg !13727
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.100, !dbg !13727

if.end:                                           ; preds = %if.then
  %6 = load %struct._object*, %struct._object** %offset, align 8, !dbg !13728, !tbaa !2563
  %cmp3 = icmp eq %struct._object* %6, @_Py_NoneStruct, !dbg !13729
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !13730

if.then.4:                                        ; preds = %if.end
  %7 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13731, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %7, i32 0, i32 3, !dbg !13732
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %data, i32 0, i32 0, !dbg !13731
  %call5 = call i64 @generic_hash(i8* %arraydecay, i32 6), !dbg !13733
  %8 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13734, !tbaa !2563
  %hashcode6 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %8, i32 0, i32 1, !dbg !13735
  store i64 %call5, i64* %hashcode6, align 8, !dbg !13736, !tbaa !3436
  br label %if.end.86, !dbg !13734

if.else:                                          ; preds = %if.end
  %9 = bitcast %struct._object** %temp1 to i8*, !dbg !13737
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !13737
  call void @llvm.dbg.declare(metadata %struct._object** %temp1, metadata !1966, metadata !2553), !dbg !13738
  %10 = bitcast %struct._object** %temp2 to i8*, !dbg !13737
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !13737
  call void @llvm.dbg.declare(metadata %struct._object** %temp2, metadata !1969, metadata !2553), !dbg !13739
  %11 = bitcast i32* %seconds to i8*, !dbg !13740
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !13740
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !1970, metadata !2553), !dbg !13741
  %12 = bitcast i32* %microseconds to i8*, !dbg !13740
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !13740
  call void @llvm.dbg.declare(metadata i32* %microseconds, metadata !1971, metadata !2553), !dbg !13742
  %13 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13743, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %13, i32 0, i32 3, !dbg !13744
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data7, i32 0, i64 0, !dbg !13745
  %14 = load i8, i8* %arrayidx, align 1, !dbg !13745, !tbaa !3415
  %conv = zext i8 %14 to i32, !dbg !13746
  %mul = mul i32 %conv, 3600, !dbg !13747
  %15 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13748, !tbaa !2563
  %data8 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %15, i32 0, i32 3, !dbg !13749
  %arrayidx9 = getelementptr [6 x i8], [6 x i8]* %data8, i32 0, i64 1, !dbg !13750
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !13750, !tbaa !3415
  %conv10 = zext i8 %16 to i32, !dbg !13751
  %mul11 = mul i32 %conv10, 60, !dbg !13752
  %add = add i32 %mul, %mul11, !dbg !13753
  %17 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13754, !tbaa !2563
  %data12 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %17, i32 0, i32 3, !dbg !13755
  %arrayidx13 = getelementptr [6 x i8], [6 x i8]* %data12, i32 0, i64 2, !dbg !13756
  %18 = load i8, i8* %arrayidx13, align 1, !dbg !13756, !tbaa !3415
  %conv14 = zext i8 %18 to i32, !dbg !13757
  %add15 = add i32 %add, %conv14, !dbg !13758
  store i32 %add15, i32* %seconds, align 4, !dbg !13759, !tbaa !3325
  %19 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13760, !tbaa !2563
  %data16 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %19, i32 0, i32 3, !dbg !13761
  %arrayidx17 = getelementptr [6 x i8], [6 x i8]* %data16, i32 0, i64 3, !dbg !13762
  %20 = load i8, i8* %arrayidx17, align 1, !dbg !13762, !tbaa !3415
  %conv18 = zext i8 %20 to i32, !dbg !13762
  %shl = shl i32 %conv18, 16, !dbg !13763
  %21 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13764, !tbaa !2563
  %data19 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %21, i32 0, i32 3, !dbg !13765
  %arrayidx20 = getelementptr [6 x i8], [6 x i8]* %data19, i32 0, i64 4, !dbg !13766
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !13766, !tbaa !3415
  %conv21 = zext i8 %22 to i32, !dbg !13766
  %shl22 = shl i32 %conv21, 8, !dbg !13767
  %or = or i32 %shl, %shl22, !dbg !13768
  %23 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13769, !tbaa !2563
  %data23 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %23, i32 0, i32 3, !dbg !13770
  %arrayidx24 = getelementptr [6 x i8], [6 x i8]* %data23, i32 0, i64 5, !dbg !13771
  %24 = load i8, i8* %arrayidx24, align 1, !dbg !13771, !tbaa !3415
  %conv25 = zext i8 %24 to i32, !dbg !13771
  %or26 = or i32 %or, %conv25, !dbg !13772
  store i32 %or26, i32* %microseconds, align 4, !dbg !13773, !tbaa !3325
  %25 = load i32, i32* %seconds, align 4, !dbg !13774, !tbaa !3325
  %26 = load i32, i32* %microseconds, align 4, !dbg !13775, !tbaa !3325
  %call27 = call %struct._object* @new_delta_ex(i32 0, i32 %25, i32 %26, i32 1, %struct._typeobject* @PyDateTime_DeltaType), !dbg !13776
  store %struct._object* %call27, %struct._object** %temp1, align 8, !dbg !13777, !tbaa !2563
  %27 = load %struct._object*, %struct._object** %temp1, align 8, !dbg !13778, !tbaa !2563
  %cmp28 = icmp eq %struct._object* %27, null, !dbg !13779
  br i1 %cmp28, label %if.then.30, label %if.end.36, !dbg !13780

if.then.30:                                       ; preds = %if.else
  br label %do.body, !dbg !13781

do.body:                                          ; preds = %if.then.30
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13782
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !13782
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1972, metadata !2553), !dbg !13784
  %29 = load %struct._object*, %struct._object** %offset, align 8, !dbg !13785, !tbaa !2563
  store %struct._object* %29, %struct._object** %_py_decref_tmp, align 8, !dbg !13784, !tbaa !2563
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13786, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !13788
  %31 = load i64, i64* %ob_refcnt, align 8, !dbg !13789, !tbaa !2632
  %dec = add i64 %31, -1, !dbg !13789
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13789, !tbaa !2632
  %cmp31 = icmp ne i64 %dec, 0, !dbg !13790
  br i1 %cmp31, label %if.then.33, label %if.else.34, !dbg !13791

if.then.33:                                       ; preds = %do.body
  br label %if.end.35, !dbg !13792

if.else.34:                                       ; preds = %do.body
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13794, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !13796
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13796, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !13797
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13797, !tbaa !2642
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13798, !tbaa !2563
  call void %34(%struct._object* %35), !dbg !13799
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.34, %if.then.33
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13800
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !13800
  br label %do.cond, !dbg !13802

do.cond:                                          ; preds = %if.end.35
  br label %do.end, !dbg !13803

do.end:                                           ; preds = %do.cond
  store i64 -1, i64* %retval, !dbg !13805
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13805

if.end.36:                                        ; preds = %if.else
  %37 = load %struct._object*, %struct._object** %temp1, align 8, !dbg !13806, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %offset, align 8, !dbg !13807, !tbaa !2563
  %call37 = call %struct._object* @delta_subtract(%struct._object* %37, %struct._object* %38), !dbg !13808
  store %struct._object* %call37, %struct._object** %temp2, align 8, !dbg !13809, !tbaa !2563
  br label %do.body.38, !dbg !13810

do.body.38:                                       ; preds = %if.end.36
  %39 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !13811
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !13811
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !1976, metadata !2553), !dbg !13813
  %40 = load %struct._object*, %struct._object** %temp1, align 8, !dbg !13814, !tbaa !2563
  store %struct._object* %40, %struct._object** %_py_decref_tmp39, align 8, !dbg !13813, !tbaa !2563
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !13815, !tbaa !2563
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !13817
  %42 = load i64, i64* %ob_refcnt40, align 8, !dbg !13818, !tbaa !2632
  %dec41 = add i64 %42, -1, !dbg !13818
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !13818, !tbaa !2632
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !13819
  br i1 %cmp42, label %if.then.44, label %if.else.45, !dbg !13820

if.then.44:                                       ; preds = %do.body.38
  br label %if.end.48, !dbg !13821

if.else.45:                                       ; preds = %do.body.38
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !13823, !tbaa !2563
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !13825
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !13825, !tbaa !2640
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !13826
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !13826, !tbaa !2642
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !13827, !tbaa !2563
  call void %45(%struct._object* %46), !dbg !13828
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %47 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !13829
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !13829
  br label %do.cond.49, !dbg !13831

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !13832

do.end.50:                                        ; preds = %do.cond.49
  %48 = load %struct._object*, %struct._object** %temp2, align 8, !dbg !13834, !tbaa !2563
  %cmp51 = icmp eq %struct._object* %48, null, !dbg !13835
  br i1 %cmp51, label %if.then.53, label %if.end.67, !dbg !13836

if.then.53:                                       ; preds = %do.end.50
  br label %do.body.54, !dbg !13837

do.body.54:                                       ; preds = %if.then.53
  %49 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !13838
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !13838
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !1978, metadata !2553), !dbg !13840
  %50 = load %struct._object*, %struct._object** %offset, align 8, !dbg !13841, !tbaa !2563
  store %struct._object* %50, %struct._object** %_py_decref_tmp55, align 8, !dbg !13840, !tbaa !2563
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !13842, !tbaa !2563
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !13844
  %52 = load i64, i64* %ob_refcnt56, align 8, !dbg !13845, !tbaa !2632
  %dec57 = add i64 %52, -1, !dbg !13845
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !13845, !tbaa !2632
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !13846
  br i1 %cmp58, label %if.then.60, label %if.else.61, !dbg !13847

if.then.60:                                       ; preds = %do.body.54
  br label %if.end.64, !dbg !13848

if.else.61:                                       ; preds = %do.body.54
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !13850, !tbaa !2563
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !13852
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !13852, !tbaa !2640
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !13853
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !13853, !tbaa !2642
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !13854, !tbaa !2563
  call void %55(%struct._object* %56), !dbg !13855
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %57 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !13856
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !13856
  br label %do.cond.65, !dbg !13858

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !13859

do.end.66:                                        ; preds = %do.cond.65
  store i64 -1, i64* %retval, !dbg !13861
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13861

if.end.67:                                        ; preds = %do.end.50
  %58 = load %struct._object*, %struct._object** %temp2, align 8, !dbg !13862, !tbaa !2563
  %call68 = call i64 @PyObject_Hash(%struct._object* %58), !dbg !13863
  %59 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13864, !tbaa !2563
  %hashcode69 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %59, i32 0, i32 1, !dbg !13865
  store i64 %call68, i64* %hashcode69, align 8, !dbg !13866, !tbaa !3436
  br label %do.body.70, !dbg !13867

do.body.70:                                       ; preds = %if.end.67
  %60 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !13868
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !13868
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp71, metadata !1982, metadata !2553), !dbg !13870
  %61 = load %struct._object*, %struct._object** %temp2, align 8, !dbg !13871, !tbaa !2563
  store %struct._object* %61, %struct._object** %_py_decref_tmp71, align 8, !dbg !13870, !tbaa !2563
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !13872, !tbaa !2563
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !13874
  %63 = load i64, i64* %ob_refcnt72, align 8, !dbg !13875, !tbaa !2632
  %dec73 = add i64 %63, -1, !dbg !13875
  store i64 %dec73, i64* %ob_refcnt72, align 8, !dbg !13875, !tbaa !2632
  %cmp74 = icmp ne i64 %dec73, 0, !dbg !13876
  br i1 %cmp74, label %if.then.76, label %if.else.77, !dbg !13877

if.then.76:                                       ; preds = %do.body.70
  br label %if.end.80, !dbg !13878

if.else.77:                                       ; preds = %do.body.70
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !13880, !tbaa !2563
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !13882
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !13882, !tbaa !2640
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !13883
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !13883, !tbaa !2642
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !13884, !tbaa !2563
  call void %66(%struct._object* %67), !dbg !13885
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %68 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !13886
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !13886
  br label %do.cond.81, !dbg !13887

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !13888

do.end.82:                                        ; preds = %do.cond.81
  store i32 0, i32* %cleanup.dest.slot, !dbg !13890
  br label %cleanup, !dbg !13890

cleanup:                                          ; preds = %do.end.82, %do.end.66, %do.end
  %69 = bitcast i32* %microseconds to i8*, !dbg !13891
  call void @llvm.lifetime.end(i64 4, i8* %69) #1, !dbg !13891
  %70 = bitcast i32* %seconds to i8*, !dbg !13891
  call void @llvm.lifetime.end(i64 4, i8* %70) #1, !dbg !13891
  %71 = bitcast %struct._object** %temp2 to i8*, !dbg !13891
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !13891
  %72 = bitcast %struct._object** %temp1 to i8*, !dbg !13891
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !13891
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.100 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.86

if.end.86:                                        ; preds = %cleanup.cont, %if.then.4
  br label %do.body.87, !dbg !13893

do.body.87:                                       ; preds = %if.end.86
  %73 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !13894
  call void @llvm.lifetime.start(i64 8, i8* %73) #1, !dbg !13894
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp88, metadata !1984, metadata !2553), !dbg !13896
  %74 = load %struct._object*, %struct._object** %offset, align 8, !dbg !13897, !tbaa !2563
  store %struct._object* %74, %struct._object** %_py_decref_tmp88, align 8, !dbg !13896, !tbaa !2563
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !13898, !tbaa !2563
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !13900
  %76 = load i64, i64* %ob_refcnt89, align 8, !dbg !13901, !tbaa !2632
  %dec90 = add i64 %76, -1, !dbg !13901
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !13901, !tbaa !2632
  %cmp91 = icmp ne i64 %dec90, 0, !dbg !13902
  br i1 %cmp91, label %if.then.93, label %if.else.94, !dbg !13903

if.then.93:                                       ; preds = %do.body.87
  br label %if.end.97, !dbg !13904

if.else.94:                                       ; preds = %do.body.87
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !13906, !tbaa !2563
  %ob_type95 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !13908
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type95, align 8, !dbg !13908, !tbaa !2640
  %tp_dealloc96 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4, !dbg !13909
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc96, align 8, !dbg !13909, !tbaa !2642
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !13910, !tbaa !2563
  call void %79(%struct._object* %80), !dbg !13911
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.94, %if.then.93
  %81 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !13912
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !13912
  br label %do.cond.98, !dbg !13914

do.cond.98:                                       ; preds = %if.end.97
  br label %do.end.99, !dbg !13915

do.end.99:                                        ; preds = %do.cond.98
  store i32 0, i32* %cleanup.dest.slot, !dbg !13917
  br label %cleanup.100, !dbg !13917

cleanup.100:                                      ; preds = %do.end.99, %cleanup, %if.then.2
  %82 = bitcast %struct._object** %offset to i8*, !dbg !13918
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !13918
  %cleanup.dest.101 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.101, label %unreachable [
    i32 0, label %cleanup.cont.102
    i32 1, label %return
  ]

cleanup.cont.102:                                 ; preds = %cleanup.100
  br label %if.end.103, !dbg !13920

if.end.103:                                       ; preds = %cleanup.cont.102, %entry
  %83 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13921, !tbaa !2563
  %hashcode104 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %83, i32 0, i32 1, !dbg !13922
  %84 = load i64, i64* %hashcode104, align 8, !dbg !13922, !tbaa !3436
  store i64 %84, i64* %retval, !dbg !13923
  br label %return, !dbg !13923

return:                                           ; preds = %if.end.103, %cleanup.100
  %85 = load i64, i64* %retval, !dbg !13924
  ret i64 %85, !dbg !13924

unreachable:                                      ; preds = %cleanup.100
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_str(%struct.PyDateTime_Time* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !1992, metadata !2553), !dbg !13925
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !13926, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Time* %0 to %struct._object*, !dbg !13927
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %1, %struct._Py_Identifier* @PyId_isoformat, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)), !dbg !13928
  ret %struct._object* %call, !dbg !13929
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_richcompare(%struct._object* %self, %struct._object* %other, i32 %op) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %other.addr = alloca %struct._object*, align 8
  %op.addr = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  %offset1 = alloca %struct._object*, align 8
  %offset2 = alloca %struct._object*, align 8
  %diff = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %offsecs1 = alloca i32, align 4
  %offsecs2 = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp152 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1995, metadata !2553), !dbg !13930
  store %struct._object* %other, %struct._object** %other.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %other.addr, metadata !1996, metadata !2553), !dbg !13931
  store i32 %op, i32* %op.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !1997, metadata !2553), !dbg !13932
  %0 = bitcast %struct._object** %result to i8*, !dbg !13933
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13933
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1998, metadata !2553), !dbg !13934
  store %struct._object* null, %struct._object** %result, align 8, !dbg !13934, !tbaa !2563
  %1 = bitcast %struct._object** %offset1 to i8*, !dbg !13935
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13935
  call void @llvm.dbg.declare(metadata %struct._object** %offset1, metadata !1999, metadata !2553), !dbg !13936
  %2 = bitcast %struct._object** %offset2 to i8*, !dbg !13935
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13935
  call void @llvm.dbg.declare(metadata %struct._object** %offset2, metadata !2000, metadata !2553), !dbg !13937
  %3 = bitcast i32* %diff to i8*, !dbg !13938
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !13938
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !2001, metadata !2553), !dbg !13939
  %4 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !13940, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !13942
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13942, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %5, @PyDateTime_TimeType, !dbg !13943
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !13944

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !13945, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !13947
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !13947, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_TimeType), !dbg !13948
  %tobool = icmp ne i32 %call, 0, !dbg !13948
  br i1 %tobool, label %if.end, label %if.then, !dbg !13949

if.then:                                          ; preds = %lor.lhs.false
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !13950, !tbaa !2632
  %inc = add i64 %8, 1, !dbg !13950
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !13950, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !13951
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13951

if.end:                                           ; preds = %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !13952, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct._PyDateTime_BaseTZInfo*, !dbg !13954
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %10, i32 0, i32 2, !dbg !13955
  %11 = load i8, i8* %hastzinfo, align 1, !dbg !13955, !tbaa !5575
  %conv = sext i8 %11 to i32, !dbg !13956
  %tobool2 = icmp ne i32 %conv, 0, !dbg !13956
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !13956

cond.true:                                        ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !13957, !tbaa !2563
  %13 = bitcast %struct._object* %12 to %struct.PyDateTime_Time*, !dbg !13959
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %13, i32 0, i32 4, !dbg !13960
  %14 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !13960, !tbaa !3489
  br label %cond.end, !dbg !13956

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13961

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %14, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !13956
  %15 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !13963, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct._PyDateTime_BaseTZInfo*, !dbg !13966
  %hastzinfo3 = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %16, i32 0, i32 2, !dbg !13967
  %17 = load i8, i8* %hastzinfo3, align 1, !dbg !13967, !tbaa !5575
  %conv4 = sext i8 %17 to i32, !dbg !13968
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !13968
  br i1 %tobool5, label %cond.true.6, label %cond.false.8, !dbg !13968

cond.true.6:                                      ; preds = %cond.end
  %18 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !13969, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Time*, !dbg !13971
  %tzinfo7 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %19, i32 0, i32 4, !dbg !13972
  %20 = load %struct._object*, %struct._object** %tzinfo7, align 8, !dbg !13972, !tbaa !3489
  br label %cond.end.9, !dbg !13968

cond.false.8:                                     ; preds = %cond.end
  br label %cond.end.9, !dbg !13973

cond.end.9:                                       ; preds = %cond.false.8, %cond.true.6
  %cond10 = phi %struct._object* [ %20, %cond.true.6 ], [ @_Py_NoneStruct, %cond.false.8 ], !dbg !13968
  %cmp11 = icmp eq %struct._object* %cond, %cond10, !dbg !13975
  br i1 %cmp11, label %if.then.13, label %if.end.18, !dbg !13978

if.then.13:                                       ; preds = %cond.end.9
  %21 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !13979, !tbaa !2563
  %22 = bitcast %struct._object* %21 to %struct.PyDateTime_Time*, !dbg !13981
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %22, i32 0, i32 3, !dbg !13982
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %data, i32 0, i32 0, !dbg !13983
  %23 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !13984, !tbaa !2563
  %24 = bitcast %struct._object* %23 to %struct.PyDateTime_Time*, !dbg !13985
  %data14 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %24, i32 0, i32 3, !dbg !13986
  %arraydecay15 = getelementptr inbounds [6 x i8], [6 x i8]* %data14, i32 0, i32 0, !dbg !13987
  %call16 = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay15, i64 6) #7, !dbg !13988
  store i32 %call16, i32* %diff, align 4, !dbg !13989, !tbaa !3325
  %25 = load i32, i32* %diff, align 4, !dbg !13990, !tbaa !3325
  %26 = load i32, i32* %op.addr, align 4, !dbg !13991, !tbaa !3325
  %call17 = call %struct._object* @diff_to_bool(i32 %25, i32 %26), !dbg !13992
  store %struct._object* %call17, %struct._object** %retval, !dbg !13993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13993

if.end.18:                                        ; preds = %cond.end.9
  %27 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !13994, !tbaa !2563
  %call19 = call %struct._object* @time_utcoffset(%struct._object* %27, %struct._object* null), !dbg !13995
  store %struct._object* %call19, %struct._object** %offset1, align 8, !dbg !13996, !tbaa !2563
  %28 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !13997, !tbaa !2563
  %cmp20 = icmp eq %struct._object* %28, null, !dbg !13999
  br i1 %cmp20, label %if.then.22, label %if.end.23, !dbg !14000

if.then.22:                                       ; preds = %if.end.18
  store %struct._object* null, %struct._object** %retval, !dbg !14001
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14001

if.end.23:                                        ; preds = %if.end.18
  %29 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14002, !tbaa !2563
  %call24 = call %struct._object* @time_utcoffset(%struct._object* %29, %struct._object* null), !dbg !14003
  store %struct._object* %call24, %struct._object** %offset2, align 8, !dbg !14004, !tbaa !2563
  %30 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14005, !tbaa !2563
  %cmp25 = icmp eq %struct._object* %30, null, !dbg !14007
  br i1 %cmp25, label %if.then.27, label %if.end.28, !dbg !14008

if.then.27:                                       ; preds = %if.end.23
  br label %done, !dbg !14009

if.end.28:                                        ; preds = %if.end.23
  %31 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14010, !tbaa !2563
  %32 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14011, !tbaa !2563
  %cmp29 = icmp eq %struct._object* %31, %32, !dbg !14012
  br i1 %cmp29, label %if.then.50, label %lor.lhs.false.31, !dbg !14013

lor.lhs.false.31:                                 ; preds = %if.end.28
  %33 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14014, !tbaa !2563
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !14015
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !14015, !tbaa !2640
  %cmp33 = icmp eq %struct._typeobject* %34, @PyDateTime_DeltaType, !dbg !14016
  br i1 %cmp33, label %land.lhs.true, label %lor.lhs.false.35, !dbg !14017

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.31
  %35 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14018, !tbaa !2563
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !14020
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !14020, !tbaa !2640
  %call37 = call i32 @PyType_IsSubtype(%struct._typeobject* %36, %struct._typeobject* @PyDateTime_DeltaType), !dbg !14021
  %tobool38 = icmp ne i32 %call37, 0, !dbg !14021
  br i1 %tobool38, label %land.lhs.true, label %if.else, !dbg !14022

land.lhs.true:                                    ; preds = %lor.lhs.false.35, %lor.lhs.false.31
  %37 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14023, !tbaa !2563
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !14026
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !14026, !tbaa !2640
  %cmp40 = icmp eq %struct._typeobject* %38, @PyDateTime_DeltaType, !dbg !14027
  br i1 %cmp40, label %land.lhs.true.46, label %lor.lhs.false.42, !dbg !14028

lor.lhs.false.42:                                 ; preds = %land.lhs.true
  %39 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14029, !tbaa !2563
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !14031
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !14031, !tbaa !2640
  %call44 = call i32 @PyType_IsSubtype(%struct._typeobject* %40, %struct._typeobject* @PyDateTime_DeltaType), !dbg !14032
  %tobool45 = icmp ne i32 %call44, 0, !dbg !14032
  br i1 %tobool45, label %land.lhs.true.46, label %if.else, !dbg !14033

land.lhs.true.46:                                 ; preds = %lor.lhs.false.42, %land.lhs.true
  %41 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14034, !tbaa !2563
  %42 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14035, !tbaa !2563
  %call47 = call i32 @delta_cmp(%struct._object* %41, %struct._object* %42), !dbg !14036
  %cmp48 = icmp eq i32 %call47, 0, !dbg !14037
  br i1 %cmp48, label %if.then.50, label %if.else, !dbg !14038

if.then.50:                                       ; preds = %land.lhs.true.46, %if.end.28
  %43 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14039, !tbaa !2563
  %44 = bitcast %struct._object* %43 to %struct.PyDateTime_Time*, !dbg !14041
  %data51 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %44, i32 0, i32 3, !dbg !14042
  %arraydecay52 = getelementptr inbounds [6 x i8], [6 x i8]* %data51, i32 0, i32 0, !dbg !14043
  %45 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14044, !tbaa !2563
  %46 = bitcast %struct._object* %45 to %struct.PyDateTime_Time*, !dbg !14045
  %data53 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %46, i32 0, i32 3, !dbg !14046
  %arraydecay54 = getelementptr inbounds [6 x i8], [6 x i8]* %data53, i32 0, i32 0, !dbg !14047
  %call55 = call i32 @memcmp(i8* %arraydecay52, i8* %arraydecay54, i64 6) #7, !dbg !14048
  store i32 %call55, i32* %diff, align 4, !dbg !14049, !tbaa !3325
  %47 = load i32, i32* %diff, align 4, !dbg !14050, !tbaa !3325
  %48 = load i32, i32* %op.addr, align 4, !dbg !14051, !tbaa !3325
  %call56 = call %struct._object* @diff_to_bool(i32 %47, i32 %48), !dbg !14052
  store %struct._object* %call56, %struct._object** %result, align 8, !dbg !14053, !tbaa !2563
  br label %if.end.139, !dbg !14054

if.else:                                          ; preds = %land.lhs.true.46, %lor.lhs.false.42, %lor.lhs.false.35
  %49 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14055, !tbaa !2563
  %cmp57 = icmp ne %struct._object* %49, @_Py_NoneStruct, !dbg !14056
  br i1 %cmp57, label %land.lhs.true.59, label %if.else.124, !dbg !14057

land.lhs.true.59:                                 ; preds = %if.else
  %50 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14058, !tbaa !2563
  %cmp60 = icmp ne %struct._object* %50, @_Py_NoneStruct, !dbg !14060
  br i1 %cmp60, label %if.then.62, label %if.else.124, !dbg !14061

if.then.62:                                       ; preds = %land.lhs.true.59
  %51 = bitcast i32* %offsecs1 to i8*, !dbg !14062
  call void @llvm.lifetime.start(i64 4, i8* %51) #1, !dbg !14062
  call void @llvm.dbg.declare(metadata i32* %offsecs1, metadata !2002, metadata !2553), !dbg !14063
  %52 = bitcast i32* %offsecs2 to i8*, !dbg !14062
  call void @llvm.lifetime.start(i64 4, i8* %52) #1, !dbg !14062
  call void @llvm.dbg.declare(metadata i32* %offsecs2, metadata !2006, metadata !2553), !dbg !14064
  %53 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14065, !tbaa !2563
  %54 = bitcast %struct._object* %53 to %struct.PyDateTime_Time*, !dbg !14066
  %data63 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %54, i32 0, i32 3, !dbg !14067
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data63, i32 0, i64 0, !dbg !14068
  %55 = load i8, i8* %arrayidx, align 1, !dbg !14068, !tbaa !3415
  %conv64 = zext i8 %55 to i32, !dbg !14069
  %mul = mul i32 %conv64, 3600, !dbg !14070
  %56 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14071, !tbaa !2563
  %57 = bitcast %struct._object* %56 to %struct.PyDateTime_Time*, !dbg !14072
  %data65 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %57, i32 0, i32 3, !dbg !14073
  %arrayidx66 = getelementptr [6 x i8], [6 x i8]* %data65, i32 0, i64 1, !dbg !14074
  %58 = load i8, i8* %arrayidx66, align 1, !dbg !14074, !tbaa !3415
  %conv67 = zext i8 %58 to i32, !dbg !14075
  %mul68 = mul i32 %conv67, 60, !dbg !14076
  %add = add i32 %mul, %mul68, !dbg !14077
  %59 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14078, !tbaa !2563
  %60 = bitcast %struct._object* %59 to %struct.PyDateTime_Time*, !dbg !14079
  %data69 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %60, i32 0, i32 3, !dbg !14080
  %arrayidx70 = getelementptr [6 x i8], [6 x i8]* %data69, i32 0, i64 2, !dbg !14081
  %61 = load i8, i8* %arrayidx70, align 1, !dbg !14081, !tbaa !3415
  %conv71 = zext i8 %61 to i32, !dbg !14082
  %add72 = add i32 %add, %conv71, !dbg !14083
  %62 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14084, !tbaa !2563
  %63 = bitcast %struct._object* %62 to %struct.PyDateTime_Delta*, !dbg !14085
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %63, i32 0, i32 2, !dbg !14086
  %64 = load i32, i32* %days, align 4, !dbg !14086, !tbaa !3363
  %mul73 = mul i32 %64, 86400, !dbg !14087
  %sub = sub i32 %add72, %mul73, !dbg !14088
  %65 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14089, !tbaa !2563
  %66 = bitcast %struct._object* %65 to %struct.PyDateTime_Delta*, !dbg !14090
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %66, i32 0, i32 3, !dbg !14091
  %67 = load i32, i32* %seconds, align 4, !dbg !14091, !tbaa !3368
  %sub74 = sub i32 %sub, %67, !dbg !14092
  store i32 %sub74, i32* %offsecs1, align 4, !dbg !14093, !tbaa !3325
  %68 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14094, !tbaa !2563
  %69 = bitcast %struct._object* %68 to %struct.PyDateTime_Time*, !dbg !14095
  %data75 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %69, i32 0, i32 3, !dbg !14096
  %arrayidx76 = getelementptr [6 x i8], [6 x i8]* %data75, i32 0, i64 0, !dbg !14097
  %70 = load i8, i8* %arrayidx76, align 1, !dbg !14097, !tbaa !3415
  %conv77 = zext i8 %70 to i32, !dbg !14098
  %mul78 = mul i32 %conv77, 3600, !dbg !14099
  %71 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14100, !tbaa !2563
  %72 = bitcast %struct._object* %71 to %struct.PyDateTime_Time*, !dbg !14101
  %data79 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %72, i32 0, i32 3, !dbg !14102
  %arrayidx80 = getelementptr [6 x i8], [6 x i8]* %data79, i32 0, i64 1, !dbg !14103
  %73 = load i8, i8* %arrayidx80, align 1, !dbg !14103, !tbaa !3415
  %conv81 = zext i8 %73 to i32, !dbg !14104
  %mul82 = mul i32 %conv81, 60, !dbg !14105
  %add83 = add i32 %mul78, %mul82, !dbg !14106
  %74 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14107, !tbaa !2563
  %75 = bitcast %struct._object* %74 to %struct.PyDateTime_Time*, !dbg !14108
  %data84 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %75, i32 0, i32 3, !dbg !14109
  %arrayidx85 = getelementptr [6 x i8], [6 x i8]* %data84, i32 0, i64 2, !dbg !14110
  %76 = load i8, i8* %arrayidx85, align 1, !dbg !14110, !tbaa !3415
  %conv86 = zext i8 %76 to i32, !dbg !14111
  %add87 = add i32 %add83, %conv86, !dbg !14112
  %77 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14113, !tbaa !2563
  %78 = bitcast %struct._object* %77 to %struct.PyDateTime_Delta*, !dbg !14114
  %days88 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %78, i32 0, i32 2, !dbg !14115
  %79 = load i32, i32* %days88, align 4, !dbg !14115, !tbaa !3363
  %mul89 = mul i32 %79, 86400, !dbg !14116
  %sub90 = sub i32 %add87, %mul89, !dbg !14117
  %80 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14118, !tbaa !2563
  %81 = bitcast %struct._object* %80 to %struct.PyDateTime_Delta*, !dbg !14119
  %seconds91 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %81, i32 0, i32 3, !dbg !14120
  %82 = load i32, i32* %seconds91, align 4, !dbg !14120, !tbaa !3368
  %sub92 = sub i32 %sub90, %82, !dbg !14121
  store i32 %sub92, i32* %offsecs2, align 4, !dbg !14122, !tbaa !3325
  %83 = load i32, i32* %offsecs1, align 4, !dbg !14123, !tbaa !3325
  %84 = load i32, i32* %offsecs2, align 4, !dbg !14124, !tbaa !3325
  %sub93 = sub i32 %83, %84, !dbg !14125
  store i32 %sub93, i32* %diff, align 4, !dbg !14126, !tbaa !3325
  %85 = load i32, i32* %diff, align 4, !dbg !14127, !tbaa !3325
  %cmp94 = icmp eq i32 %85, 0, !dbg !14129
  br i1 %cmp94, label %if.then.96, label %if.end.122, !dbg !14130

if.then.96:                                       ; preds = %if.then.62
  %86 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14131, !tbaa !2563
  %87 = bitcast %struct._object* %86 to %struct.PyDateTime_Time*, !dbg !14132
  %data97 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %87, i32 0, i32 3, !dbg !14133
  %arrayidx98 = getelementptr [6 x i8], [6 x i8]* %data97, i32 0, i64 3, !dbg !14134
  %88 = load i8, i8* %arrayidx98, align 1, !dbg !14134, !tbaa !3415
  %conv99 = zext i8 %88 to i32, !dbg !14134
  %shl = shl i32 %conv99, 16, !dbg !14135
  %89 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14136, !tbaa !2563
  %90 = bitcast %struct._object* %89 to %struct.PyDateTime_Time*, !dbg !14137
  %data100 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %90, i32 0, i32 3, !dbg !14138
  %arrayidx101 = getelementptr [6 x i8], [6 x i8]* %data100, i32 0, i64 4, !dbg !14139
  %91 = load i8, i8* %arrayidx101, align 1, !dbg !14139, !tbaa !3415
  %conv102 = zext i8 %91 to i32, !dbg !14139
  %shl103 = shl i32 %conv102, 8, !dbg !14140
  %or = or i32 %shl, %shl103, !dbg !14141
  %92 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14142, !tbaa !2563
  %93 = bitcast %struct._object* %92 to %struct.PyDateTime_Time*, !dbg !14143
  %data104 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %93, i32 0, i32 3, !dbg !14144
  %arrayidx105 = getelementptr [6 x i8], [6 x i8]* %data104, i32 0, i64 5, !dbg !14145
  %94 = load i8, i8* %arrayidx105, align 1, !dbg !14145, !tbaa !3415
  %conv106 = zext i8 %94 to i32, !dbg !14145
  %or107 = or i32 %or, %conv106, !dbg !14146
  %95 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14147, !tbaa !2563
  %96 = bitcast %struct._object* %95 to %struct.PyDateTime_Time*, !dbg !14148
  %data108 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %96, i32 0, i32 3, !dbg !14149
  %arrayidx109 = getelementptr [6 x i8], [6 x i8]* %data108, i32 0, i64 3, !dbg !14150
  %97 = load i8, i8* %arrayidx109, align 1, !dbg !14150, !tbaa !3415
  %conv110 = zext i8 %97 to i32, !dbg !14150
  %shl111 = shl i32 %conv110, 16, !dbg !14151
  %98 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14152, !tbaa !2563
  %99 = bitcast %struct._object* %98 to %struct.PyDateTime_Time*, !dbg !14153
  %data112 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %99, i32 0, i32 3, !dbg !14154
  %arrayidx113 = getelementptr [6 x i8], [6 x i8]* %data112, i32 0, i64 4, !dbg !14155
  %100 = load i8, i8* %arrayidx113, align 1, !dbg !14155, !tbaa !3415
  %conv114 = zext i8 %100 to i32, !dbg !14155
  %shl115 = shl i32 %conv114, 8, !dbg !14156
  %or116 = or i32 %shl111, %shl115, !dbg !14157
  %101 = load %struct._object*, %struct._object** %other.addr, align 8, !dbg !14158, !tbaa !2563
  %102 = bitcast %struct._object* %101 to %struct.PyDateTime_Time*, !dbg !14159
  %data117 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %102, i32 0, i32 3, !dbg !14160
  %arrayidx118 = getelementptr [6 x i8], [6 x i8]* %data117, i32 0, i64 5, !dbg !14161
  %103 = load i8, i8* %arrayidx118, align 1, !dbg !14161, !tbaa !3415
  %conv119 = zext i8 %103 to i32, !dbg !14161
  %or120 = or i32 %or116, %conv119, !dbg !14162
  %sub121 = sub i32 %or107, %or120, !dbg !14163
  store i32 %sub121, i32* %diff, align 4, !dbg !14164, !tbaa !3325
  br label %if.end.122, !dbg !14165

if.end.122:                                       ; preds = %if.then.96, %if.then.62
  %104 = load i32, i32* %diff, align 4, !dbg !14166, !tbaa !3325
  %105 = load i32, i32* %op.addr, align 4, !dbg !14167, !tbaa !3325
  %call123 = call %struct._object* @diff_to_bool(i32 %104, i32 %105), !dbg !14168
  store %struct._object* %call123, %struct._object** %result, align 8, !dbg !14169, !tbaa !2563
  %106 = bitcast i32* %offsecs2 to i8*, !dbg !14170
  call void @llvm.lifetime.end(i64 4, i8* %106) #1, !dbg !14170
  %107 = bitcast i32* %offsecs1 to i8*, !dbg !14170
  call void @llvm.lifetime.end(i64 4, i8* %107) #1, !dbg !14170
  br label %if.end.138, !dbg !14171

if.else.124:                                      ; preds = %land.lhs.true.59, %if.else
  %108 = load i32, i32* %op.addr, align 4, !dbg !14172, !tbaa !3325
  %cmp125 = icmp eq i32 %108, 2, !dbg !14174
  br i1 %cmp125, label %if.then.127, label %if.else.129, !dbg !14175

if.then.127:                                      ; preds = %if.else.124
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %result, align 8, !dbg !14176, !tbaa !2563
  %109 = load %struct._object*, %struct._object** %result, align 8, !dbg !14178, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 0, !dbg !14179
  %110 = load i64, i64* %ob_refcnt, align 8, !dbg !14180, !tbaa !2632
  %inc128 = add i64 %110, 1, !dbg !14180
  store i64 %inc128, i64* %ob_refcnt, align 8, !dbg !14180, !tbaa !2632
  br label %if.end.137, !dbg !14181

if.else.129:                                      ; preds = %if.else.124
  %111 = load i32, i32* %op.addr, align 4, !dbg !14182, !tbaa !3325
  %cmp130 = icmp eq i32 %111, 3, !dbg !14184
  br i1 %cmp130, label %if.then.132, label %if.else.135, !dbg !14185

if.then.132:                                      ; preds = %if.else.129
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %result, align 8, !dbg !14186, !tbaa !2563
  %112 = load %struct._object*, %struct._object** %result, align 8, !dbg !14188, !tbaa !2563
  %ob_refcnt133 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !14189
  %113 = load i64, i64* %ob_refcnt133, align 8, !dbg !14190, !tbaa !2632
  %inc134 = add i64 %113, 1, !dbg !14190
  store i64 %inc134, i64* %ob_refcnt133, align 8, !dbg !14190, !tbaa !2632
  br label %if.end.136, !dbg !14191

if.else.135:                                      ; preds = %if.else.129
  %114 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14192, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %114, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.200, i32 0, i32 0)), !dbg !14194
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.135, %if.then.132
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %if.then.127
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %if.end.122
  br label %if.end.139

if.end.139:                                       ; preds = %if.end.138, %if.then.50
  br label %done, !dbg !14195

done:                                             ; preds = %if.end.139, %if.then.27
  br label %do.body, !dbg !14196

do.body:                                          ; preds = %done
  %115 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14197
  call void @llvm.lifetime.start(i64 8, i8* %115) #1, !dbg !14197
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2007, metadata !2553), !dbg !14199
  %116 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !14200, !tbaa !2563
  store %struct._object* %116, %struct._object** %_py_decref_tmp, align 8, !dbg !14199, !tbaa !2563
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14201, !tbaa !2563
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 0, !dbg !14203
  %118 = load i64, i64* %ob_refcnt140, align 8, !dbg !14204, !tbaa !2632
  %dec = add i64 %118, -1, !dbg !14204
  store i64 %dec, i64* %ob_refcnt140, align 8, !dbg !14204, !tbaa !2632
  %cmp141 = icmp ne i64 %dec, 0, !dbg !14205
  br i1 %cmp141, label %if.then.143, label %if.else.144, !dbg !14206

if.then.143:                                      ; preds = %do.body
  br label %if.end.146, !dbg !14207

if.else.144:                                      ; preds = %do.body
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14209, !tbaa !2563
  %ob_type145 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1, !dbg !14211
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type145, align 8, !dbg !14211, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 4, !dbg !14212
  %121 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14212, !tbaa !2642
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14213, !tbaa !2563
  call void %121(%struct._object* %122), !dbg !14214
  br label %if.end.146

if.end.146:                                       ; preds = %if.else.144, %if.then.143
  %123 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14215
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !14215
  br label %do.cond, !dbg !14217

do.cond:                                          ; preds = %if.end.146
  br label %do.end, !dbg !14218

do.end:                                           ; preds = %do.cond
  br label %do.body.147, !dbg !14220

do.body.147:                                      ; preds = %do.end
  %124 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14221
  call void @llvm.lifetime.start(i64 8, i8* %124) #1, !dbg !14221
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2009, metadata !2553), !dbg !14223
  %125 = load %struct._object*, %struct._object** %offset2, align 8, !dbg !14224, !tbaa !2563
  store %struct._object* %125, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14223, !tbaa !2563
  %126 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14225, !tbaa !2563
  %cmp148 = icmp ne %struct._object* %126, null, !dbg !14226
  br i1 %cmp148, label %if.then.150, label %if.end.164, !dbg !14227

if.then.150:                                      ; preds = %do.body.147
  br label %do.body.151, !dbg !14228

do.body.151:                                      ; preds = %if.then.150
  %127 = bitcast %struct._object** %_py_decref_tmp152 to i8*, !dbg !14230
  call void @llvm.lifetime.start(i64 8, i8* %127) #1, !dbg !14230
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp152, metadata !2011, metadata !2553), !dbg !14232
  %128 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14233, !tbaa !2563
  store %struct._object* %128, %struct._object** %_py_decref_tmp152, align 8, !dbg !14232, !tbaa !2563
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp152, align 8, !dbg !14234, !tbaa !2563
  %ob_refcnt153 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 0, !dbg !14236
  %130 = load i64, i64* %ob_refcnt153, align 8, !dbg !14237, !tbaa !2632
  %dec154 = add i64 %130, -1, !dbg !14237
  store i64 %dec154, i64* %ob_refcnt153, align 8, !dbg !14237, !tbaa !2632
  %cmp155 = icmp ne i64 %dec154, 0, !dbg !14238
  br i1 %cmp155, label %if.then.157, label %if.else.158, !dbg !14239

if.then.157:                                      ; preds = %do.body.151
  br label %if.end.161, !dbg !14240

if.else.158:                                      ; preds = %do.body.151
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp152, align 8, !dbg !14242, !tbaa !2563
  %ob_type159 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 1, !dbg !14244
  %132 = load %struct._typeobject*, %struct._typeobject** %ob_type159, align 8, !dbg !14244, !tbaa !2640
  %tp_dealloc160 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %132, i32 0, i32 4, !dbg !14245
  %133 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc160, align 8, !dbg !14245, !tbaa !2642
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp152, align 8, !dbg !14246, !tbaa !2563
  call void %133(%struct._object* %134), !dbg !14247
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.158, %if.then.157
  %135 = bitcast %struct._object** %_py_decref_tmp152 to i8*, !dbg !14248
  call void @llvm.lifetime.end(i64 8, i8* %135) #1, !dbg !14248
  br label %do.cond.162, !dbg !14250

do.cond.162:                                      ; preds = %if.end.161
  br label %do.end.163, !dbg !14251

do.end.163:                                       ; preds = %do.cond.162
  br label %if.end.164, !dbg !14253

if.end.164:                                       ; preds = %do.end.163, %do.body.147
  %136 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14255
  call void @llvm.lifetime.end(i64 8, i8* %136) #1, !dbg !14255
  br label %do.cond.165, !dbg !14258

do.cond.165:                                      ; preds = %if.end.164
  br label %do.end.166, !dbg !14259

do.end.166:                                       ; preds = %do.cond.165
  %137 = load %struct._object*, %struct._object** %result, align 8, !dbg !14261, !tbaa !2563
  store %struct._object* %137, %struct._object** %retval, !dbg !14262
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14262

cleanup:                                          ; preds = %do.end.166, %if.then.22, %if.then.13, %if.then
  %138 = bitcast i32* %diff to i8*, !dbg !14263
  call void @llvm.lifetime.end(i64 4, i8* %138) #1, !dbg !14263
  %139 = bitcast %struct._object** %offset2 to i8*, !dbg !14263
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !14263
  %140 = bitcast %struct._object** %offset1 to i8*, !dbg !14263
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !14263
  %141 = bitcast %struct._object** %result to i8*, !dbg !14263
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !14263
  %142 = load %struct._object*, %struct._object** %retval, !dbg !14263
  ret %struct._object* %142, !dbg !14263
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_alloc(%struct._typeobject* %type, i64 %aware) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %aware.addr = alloca i64, align 8
  %self = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2099, metadata !2553), !dbg !14264
  store i64 %aware, i64* %aware.addr, align 8, !tbaa !5078
  call void @llvm.dbg.declare(metadata i64* %aware.addr, metadata !2100, metadata !2553), !dbg !14265
  %0 = bitcast %struct._object** %self to i8*, !dbg !14266
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14266
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !2101, metadata !2553), !dbg !14267
  %1 = load i64, i64* %aware.addr, align 8, !dbg !14268, !tbaa !5078
  %tobool = icmp ne i64 %1, 0, !dbg !14268
  %cond = select i1 %tobool, i64 40, i64 32, !dbg !14268
  %call = call i8* @PyObject_Malloc(i64 %cond), !dbg !14269
  %2 = bitcast i8* %call to %struct._object*, !dbg !14270
  store %struct._object* %2, %struct._object** %self, align 8, !dbg !14271, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %self, align 8, !dbg !14272, !tbaa !2563
  %cmp = icmp eq %struct._object* %3, null, !dbg !14274
  br i1 %cmp, label %if.then, label %if.end, !dbg !14275

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @PyErr_NoMemory(), !dbg !14276
  store %struct._object* %call1, %struct._object** %retval, !dbg !14277
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14277

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !14278, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %self, align 8, !dbg !14279, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !14280
  store %struct._typeobject* %4, %struct._typeobject** %ob_type, align 8, !dbg !14281, !tbaa !2640
  %6 = load %struct._object*, %struct._object** %self, align 8, !dbg !14282, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !14283
  store i64 1, i64* %ob_refcnt, align 8, !dbg !14284, !tbaa !2632
  %7 = load %struct._object*, %struct._object** %self, align 8, !dbg !14285, !tbaa !2563
  %8 = load %struct._object*, %struct._object** %self, align 8, !dbg !14286, !tbaa !2563
  store %struct._object* %8, %struct._object** %retval, !dbg !14287
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14287

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast %struct._object** %self to i8*, !dbg !14288
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !14288
  %10 = load %struct._object*, %struct._object** %retval, !dbg !14288
  ret %struct._object* %10, !dbg !14288
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %self = alloca %struct._object*, align 8
  %state = alloca %struct._object*, align 8
  %hour = alloca i32, align 4
  %minute = alloca i32, align 4
  %second = alloca i32, align 4
  %usecond = alloca i32, align 4
  %tzinfo = alloca %struct._object*, align 8
  %me = alloca %struct.PyDateTime_Time*, align 8
  %aware = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %pdata = alloca i8*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2104, metadata !2553), !dbg !14289
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2105, metadata !2553), !dbg !14290
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2106, metadata !2553), !dbg !14291
  %0 = bitcast %struct._object** %self to i8*, !dbg !14292
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14292
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !2107, metadata !2553), !dbg !14293
  store %struct._object* null, %struct._object** %self, align 8, !dbg !14293, !tbaa !2563
  %1 = bitcast %struct._object** %state to i8*, !dbg !14294
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14294
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !2108, metadata !2553), !dbg !14295
  %2 = bitcast i32* %hour to i8*, !dbg !14296
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !14296
  call void @llvm.dbg.declare(metadata i32* %hour, metadata !2109, metadata !2553), !dbg !14297
  store i32 0, i32* %hour, align 4, !dbg !14297, !tbaa !3325
  %3 = bitcast i32* %minute to i8*, !dbg !14298
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !14298
  call void @llvm.dbg.declare(metadata i32* %minute, metadata !2110, metadata !2553), !dbg !14299
  store i32 0, i32* %minute, align 4, !dbg !14299, !tbaa !3325
  %4 = bitcast i32* %second to i8*, !dbg !14300
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !14300
  call void @llvm.dbg.declare(metadata i32* %second, metadata !2111, metadata !2553), !dbg !14301
  store i32 0, i32* %second, align 4, !dbg !14301, !tbaa !3325
  %5 = bitcast i32* %usecond to i8*, !dbg !14302
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !14302
  call void @llvm.dbg.declare(metadata i32* %usecond, metadata !2112, metadata !2553), !dbg !14303
  store i32 0, i32* %usecond, align 4, !dbg !14303, !tbaa !3325
  %6 = bitcast %struct._object** %tzinfo to i8*, !dbg !14304
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !14304
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !2113, metadata !2553), !dbg !14305
  store %struct._object* @_Py_NoneStruct, %struct._object** %tzinfo, align 8, !dbg !14305, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14306, !tbaa !2563
  %8 = bitcast %struct._object* %7 to %struct.PyVarObject*, !dbg !14307
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1, !dbg !14308
  %9 = load i64, i64* %ob_size, align 8, !dbg !14308, !tbaa !3741
  %cmp = icmp sge i64 %9, 1, !dbg !14309
  br i1 %cmp, label %land.lhs.true, label %if.end.37, !dbg !14310

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14311, !tbaa !2563
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !14312
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !14313
  %12 = load i64, i64* %ob_size1, align 8, !dbg !14313, !tbaa !3741
  %cmp2 = icmp sle i64 %12, 2, !dbg !14314
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.37, !dbg !14315

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14316, !tbaa !2563
  %14 = bitcast %struct._object* %13 to %struct.PyTupleObject*, !dbg !14317
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %14, i32 0, i32 1, !dbg !14318
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !14319
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !14319, !tbaa !2563
  store %struct._object* %15, %struct._object** %state, align 8, !dbg !14320, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !14321
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14321, !tbaa !2640
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 19, !dbg !14322
  %17 = load i64, i64* %tp_flags, align 8, !dbg !14322, !tbaa !3751
  %and = and i64 %17, 134217728, !dbg !14323
  %cmp4 = icmp ne i64 %and, 0, !dbg !14324
  br i1 %cmp4, label %land.lhs.true.5, label %if.end.37, !dbg !14325

land.lhs.true.5:                                  ; preds = %land.lhs.true.3
  %18 = load %struct._object*, %struct._object** %state, align 8, !dbg !14326, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyVarObject*, !dbg !14327
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1, !dbg !14328
  %20 = load i64, i64* %ob_size6, align 8, !dbg !14328, !tbaa !3741
  %cmp7 = icmp eq i64 %20, 6, !dbg !14329
  br i1 %cmp7, label %land.lhs.true.8, label %if.end.37, !dbg !14330

land.lhs.true.8:                                  ; preds = %land.lhs.true.5
  %21 = load %struct._object*, %struct._object** %state, align 8, !dbg !14331, !tbaa !2563
  %22 = bitcast %struct._object* %21 to %struct.PyBytesObject*, !dbg !14332
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %22, i32 0, i32 2, !dbg !14333
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !14334
  %arrayidx9 = getelementptr i8, i8* %arraydecay, i64 0, !dbg !14335
  %23 = load i8, i8* %arrayidx9, align 1, !dbg !14335, !tbaa !3415
  %conv = zext i8 %23 to i32, !dbg !14336
  %cmp10 = icmp slt i32 %conv, 24, !dbg !14337
  br i1 %cmp10, label %if.then, label %if.end.37, !dbg !14338

if.then:                                          ; preds = %land.lhs.true.8
  %24 = bitcast %struct.PyDateTime_Time** %me to i8*, !dbg !14339
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !14339
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %me, metadata !2114, metadata !2553), !dbg !14340
  call void @llvm.lifetime.start(i64 1, i8* %aware) #1, !dbg !14341
  call void @llvm.dbg.declare(metadata i8* %aware, metadata !2117, metadata !2553), !dbg !14342
  %25 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14343, !tbaa !2563
  %26 = bitcast %struct._object* %25 to %struct.PyVarObject*, !dbg !14345
  %ob_size12 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %26, i32 0, i32 1, !dbg !14346
  %27 = load i64, i64* %ob_size12, align 8, !dbg !14346, !tbaa !3741
  %cmp13 = icmp eq i64 %27, 2, !dbg !14347
  br i1 %cmp13, label %if.then.15, label %if.end.21, !dbg !14348

if.then.15:                                       ; preds = %if.then
  %28 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14349, !tbaa !2563
  %29 = bitcast %struct._object* %28 to %struct.PyTupleObject*, !dbg !14351
  %ob_item16 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %29, i32 0, i32 1, !dbg !14352
  %arrayidx17 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item16, i32 0, i64 1, !dbg !14353
  %30 = load %struct._object*, %struct._object** %arrayidx17, align 8, !dbg !14353, !tbaa !2563
  store %struct._object* %30, %struct._object** %tzinfo, align 8, !dbg !14354, !tbaa !2563
  %31 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14355, !tbaa !2563
  %call = call i32 @check_tzinfo_subclass(%struct._object* %31), !dbg !14357
  %cmp18 = icmp slt i32 %call, 0, !dbg !14358
  br i1 %cmp18, label %if.then.20, label %if.end, !dbg !14359

if.then.20:                                       ; preds = %if.then.15
  %32 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14360, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.167, i32 0, i32 0)), !dbg !14362
  store %struct._object* null, %struct._object** %retval, !dbg !14363
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14363

if.end:                                           ; preds = %if.then.15
  br label %if.end.21, !dbg !14364

if.end.21:                                        ; preds = %if.end, %if.then
  %33 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14365, !tbaa !2563
  %cmp22 = icmp ne %struct._object* %33, @_Py_NoneStruct, !dbg !14366
  %conv23 = zext i1 %cmp22 to i32, !dbg !14366
  %conv24 = trunc i32 %conv23 to i8, !dbg !14367
  store i8 %conv24, i8* %aware, align 1, !dbg !14368, !tbaa !3415
  %34 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !14369, !tbaa !2563
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 36, !dbg !14370
  %35 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !14370, !tbaa !3345
  %36 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !14371, !tbaa !2563
  %37 = load i8, i8* %aware, align 1, !dbg !14372, !tbaa !3415
  %conv25 = sext i8 %37 to i64, !dbg !14372
  %call26 = call %struct._object* %35(%struct._typeobject* %36, i64 %conv25), !dbg !14369
  %38 = bitcast %struct._object* %call26 to %struct.PyDateTime_Time*, !dbg !14373
  store %struct.PyDateTime_Time* %38, %struct.PyDateTime_Time** %me, align 8, !dbg !14374, !tbaa !2563
  %39 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %me, align 8, !dbg !14375, !tbaa !2563
  %cmp27 = icmp ne %struct.PyDateTime_Time* %39, null, !dbg !14376
  br i1 %cmp27, label %if.then.29, label %if.end.35, !dbg !14377

if.then.29:                                       ; preds = %if.end.21
  %40 = bitcast i8** %pdata to i8*, !dbg !14378
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !14378
  call void @llvm.dbg.declare(metadata i8** %pdata, metadata !2118, metadata !2553), !dbg !14379
  %41 = load %struct._object*, %struct._object** %state, align 8, !dbg !14380, !tbaa !2563
  %42 = bitcast %struct._object* %41 to %struct.PyBytesObject*, !dbg !14381
  %ob_sval30 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %42, i32 0, i32 2, !dbg !14382
  %arraydecay31 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval30, i32 0, i32 0, !dbg !14383
  store i8* %arraydecay31, i8** %pdata, align 8, !dbg !14379, !tbaa !2563
  %43 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %me, align 8, !dbg !14384, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %43, i32 0, i32 3, !dbg !14385
  %44 = bitcast [6 x i8]* %data to i8*, !dbg !14386
  %45 = load i8*, i8** %pdata, align 8, !dbg !14387, !tbaa !2563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 6, i32 1, i1 false), !dbg !14386
  %46 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %me, align 8, !dbg !14388, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %46, i32 0, i32 1, !dbg !14389
  store i64 -1, i64* %hashcode, align 8, !dbg !14390, !tbaa !3436
  %47 = load i8, i8* %aware, align 1, !dbg !14391, !tbaa !3415
  %48 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %me, align 8, !dbg !14392, !tbaa !2563
  %hastzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %48, i32 0, i32 2, !dbg !14393
  store i8 %47, i8* %hastzinfo, align 1, !dbg !14394, !tbaa !3431
  %49 = load i8, i8* %aware, align 1, !dbg !14395, !tbaa !3415
  %tobool = icmp ne i8 %49, 0, !dbg !14395
  br i1 %tobool, label %if.then.32, label %if.end.34, !dbg !14397

if.then.32:                                       ; preds = %if.then.29
  %50 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14398, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !14400
  %51 = load i64, i64* %ob_refcnt, align 8, !dbg !14401, !tbaa !2632
  %inc = add i64 %51, 1, !dbg !14401
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14401, !tbaa !2632
  %52 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14402, !tbaa !2563
  %53 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %me, align 8, !dbg !14403, !tbaa !2563
  %tzinfo33 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %53, i32 0, i32 4, !dbg !14404
  store %struct._object* %52, %struct._object** %tzinfo33, align 8, !dbg !14405, !tbaa !3489
  br label %if.end.34, !dbg !14406

if.end.34:                                        ; preds = %if.then.32, %if.then.29
  %54 = bitcast i8** %pdata to i8*, !dbg !14407
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !14407
  br label %if.end.35, !dbg !14408

if.end.35:                                        ; preds = %if.end.34, %if.end.21
  %55 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %me, align 8, !dbg !14409, !tbaa !2563
  %56 = bitcast %struct.PyDateTime_Time* %55 to %struct._object*, !dbg !14410
  store %struct._object* %56, %struct._object** %retval, !dbg !14411
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14411

cleanup:                                          ; preds = %if.end.35, %if.then.20
  call void @llvm.lifetime.end(i64 1, i8* %aware) #1, !dbg !14412
  %57 = bitcast %struct.PyDateTime_Time** %me to i8*, !dbg !14412
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !14412
  br label %cleanup.53

if.end.37:                                        ; preds = %land.lhs.true.8, %land.lhs.true.5, %land.lhs.true.3, %land.lhs.true, %entry
  %58 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14413, !tbaa !2563
  %59 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !14415, !tbaa !2563
  %call38 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %58, %struct._object* %59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_kws, i32 0, i32 0), i32* %hour, i32* %minute, i32* %second, i32* %usecond, %struct._object** %tzinfo), !dbg !14416
  %tobool39 = icmp ne i32 %call38, 0, !dbg !14416
  br i1 %tobool39, label %if.then.40, label %if.end.52, !dbg !14417

if.then.40:                                       ; preds = %if.end.37
  %60 = load i32, i32* %hour, align 4, !dbg !14418, !tbaa !3325
  %61 = load i32, i32* %minute, align 4, !dbg !14421, !tbaa !3325
  %62 = load i32, i32* %second, align 4, !dbg !14422, !tbaa !3325
  %63 = load i32, i32* %usecond, align 4, !dbg !14423, !tbaa !3325
  %call41 = call i32 @check_time_args(i32 %60, i32 %61, i32 %62, i32 %63), !dbg !14424
  %cmp42 = icmp slt i32 %call41, 0, !dbg !14425
  br i1 %cmp42, label %if.then.44, label %if.end.45, !dbg !14426

if.then.44:                                       ; preds = %if.then.40
  store %struct._object* null, %struct._object** %retval, !dbg !14427
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !14427

if.end.45:                                        ; preds = %if.then.40
  %64 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14428, !tbaa !2563
  %call46 = call i32 @check_tzinfo_subclass(%struct._object* %64), !dbg !14430
  %cmp47 = icmp slt i32 %call46, 0, !dbg !14431
  br i1 %cmp47, label %if.then.49, label %if.end.50, !dbg !14432

if.then.49:                                       ; preds = %if.end.45
  store %struct._object* null, %struct._object** %retval, !dbg !14433
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !14433

if.end.50:                                        ; preds = %if.end.45
  %65 = load i32, i32* %hour, align 4, !dbg !14434, !tbaa !3325
  %66 = load i32, i32* %minute, align 4, !dbg !14435, !tbaa !3325
  %67 = load i32, i32* %second, align 4, !dbg !14436, !tbaa !3325
  %68 = load i32, i32* %usecond, align 4, !dbg !14437, !tbaa !3325
  %69 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14438, !tbaa !2563
  %70 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !14439, !tbaa !2563
  %call51 = call %struct._object* @new_time_ex(i32 %65, i32 %66, i32 %67, i32 %68, %struct._object* %69, %struct._typeobject* %70), !dbg !14440
  store %struct._object* %call51, %struct._object** %self, align 8, !dbg !14441, !tbaa !2563
  br label %if.end.52, !dbg !14442

if.end.52:                                        ; preds = %if.end.50, %if.end.37
  %71 = load %struct._object*, %struct._object** %self, align 8, !dbg !14443, !tbaa !2563
  store %struct._object* %71, %struct._object** %retval, !dbg !14444
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !14444

cleanup.53:                                       ; preds = %if.end.52, %if.then.49, %if.then.44, %cleanup
  %72 = bitcast %struct._object** %tzinfo to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !14445
  %73 = bitcast i32* %usecond to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 4, i8* %73) #1, !dbg !14445
  %74 = bitcast i32* %second to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 4, i8* %74) #1, !dbg !14445
  %75 = bitcast i32* %minute to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 4, i8* %75) #1, !dbg !14445
  %76 = bitcast i32* %hour to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 4, i8* %76) #1, !dbg !14445
  %77 = bitcast %struct._object** %state to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !14445
  %78 = bitcast %struct._object** %self to i8*, !dbg !14445
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !14445
  %79 = load %struct._object*, %struct._object** %retval, !dbg !14445
  ret %struct._object* %79, !dbg !14445
}

; Function Attrs: nounwind uwtable
define internal i32 @time_bool(%struct._object* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %offset = alloca %struct._object*, align 8
  %tzinfo = alloca %struct._object*, align 8
  %offsecs = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1950, metadata !2553), !dbg !14446
  %0 = bitcast %struct._object** %offset to i8*, !dbg !14447
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14447
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !1951, metadata !2553), !dbg !14448
  %1 = bitcast %struct._object** %tzinfo to i8*, !dbg !14447
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14447
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !1952, metadata !2553), !dbg !14449
  %2 = bitcast i32* %offsecs to i8*, !dbg !14450
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !14450
  call void @llvm.dbg.declare(metadata i32* %offsecs, metadata !1953, metadata !2553), !dbg !14451
  store i32 0, i32* %offsecs, align 4, !dbg !14451, !tbaa !3325
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14452, !tbaa !2563
  %4 = bitcast %struct._object* %3 to %struct.PyDateTime_Time*, !dbg !14454
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %4, i32 0, i32 3, !dbg !14455
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 2, !dbg !14456
  %5 = load i8, i8* %arrayidx, align 1, !dbg !14456, !tbaa !3415
  %conv = zext i8 %5 to i32, !dbg !14457
  %tobool = icmp ne i32 %conv, 0, !dbg !14457
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14458

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14459, !tbaa !2563
  %7 = bitcast %struct._object* %6 to %struct.PyDateTime_Time*, !dbg !14461
  %data1 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %7, i32 0, i32 3, !dbg !14462
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %data1, i32 0, i64 3, !dbg !14463
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !14463, !tbaa !3415
  %conv3 = zext i8 %8 to i32, !dbg !14463
  %shl = shl i32 %conv3, 16, !dbg !14464
  %9 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14465, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct.PyDateTime_Time*, !dbg !14466
  %data4 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %10, i32 0, i32 3, !dbg !14467
  %arrayidx5 = getelementptr [6 x i8], [6 x i8]* %data4, i32 0, i64 4, !dbg !14468
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !14468, !tbaa !3415
  %conv6 = zext i8 %11 to i32, !dbg !14468
  %shl7 = shl i32 %conv6, 8, !dbg !14469
  %or = or i32 %shl, %shl7, !dbg !14470
  %12 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14471, !tbaa !2563
  %13 = bitcast %struct._object* %12 to %struct.PyDateTime_Time*, !dbg !14472
  %data8 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %13, i32 0, i32 3, !dbg !14473
  %arrayidx9 = getelementptr [6 x i8], [6 x i8]* %data8, i32 0, i64 5, !dbg !14474
  %14 = load i8, i8* %arrayidx9, align 1, !dbg !14474, !tbaa !3415
  %conv10 = zext i8 %14 to i32, !dbg !14474
  %or11 = or i32 %or, %conv10, !dbg !14475
  %tobool12 = icmp ne i32 %or11, 0, !dbg !14475
  br i1 %tobool12, label %if.then, label %if.end, !dbg !14476

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, !dbg !14477
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14477

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14479, !tbaa !2563
  %16 = bitcast %struct._object* %15 to %struct._PyDateTime_BaseTZInfo*, !dbg !14480
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %16, i32 0, i32 2, !dbg !14481
  %17 = load i8, i8* %hastzinfo, align 1, !dbg !14481, !tbaa !5575
  %conv13 = sext i8 %17 to i32, !dbg !14482
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !14482
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !14482

cond.true:                                        ; preds = %if.end
  %18 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14483, !tbaa !2563
  %19 = bitcast %struct._object* %18 to %struct.PyDateTime_Time*, !dbg !14485
  %tzinfo15 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %19, i32 0, i32 4, !dbg !14486
  %20 = load %struct._object*, %struct._object** %tzinfo15, align 8, !dbg !14486, !tbaa !3489
  br label %cond.end, !dbg !14482

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !14487

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %20, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !14482
  store %struct._object* %cond, %struct._object** %tzinfo, align 8, !dbg !14489, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14492, !tbaa !2563
  %cmp = icmp ne %struct._object* %21, @_Py_NoneStruct, !dbg !14493
  br i1 %cmp, label %if.then.17, label %if.end.26, !dbg !14494

if.then.17:                                       ; preds = %cond.end
  %22 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14495, !tbaa !2563
  %call = call %struct._object* @call_utcoffset(%struct._object* %22, %struct._object* @_Py_NoneStruct), !dbg !14496
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !14497, !tbaa !2563
  %23 = load %struct._object*, %struct._object** %offset, align 8, !dbg !14498, !tbaa !2563
  %cmp18 = icmp eq %struct._object* %23, null, !dbg !14500
  br i1 %cmp18, label %if.then.20, label %if.end.21, !dbg !14501

if.then.20:                                       ; preds = %if.then.17
  store i32 -1, i32* %retval, !dbg !14502
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14502

if.end.21:                                        ; preds = %if.then.17
  %24 = load %struct._object*, %struct._object** %offset, align 8, !dbg !14503, !tbaa !2563
  %25 = bitcast %struct._object* %24 to %struct.PyDateTime_Delta*, !dbg !14504
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %25, i32 0, i32 2, !dbg !14505
  %26 = load i32, i32* %days, align 4, !dbg !14505, !tbaa !3363
  %mul = mul i32 %26, 86400, !dbg !14506
  %27 = load %struct._object*, %struct._object** %offset, align 8, !dbg !14507, !tbaa !2563
  %28 = bitcast %struct._object* %27 to %struct.PyDateTime_Delta*, !dbg !14508
  %seconds = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %28, i32 0, i32 3, !dbg !14509
  %29 = load i32, i32* %seconds, align 4, !dbg !14509, !tbaa !3368
  %add = add i32 %mul, %29, !dbg !14510
  store i32 %add, i32* %offsecs, align 4, !dbg !14511, !tbaa !3325
  br label %do.body, !dbg !14512

do.body:                                          ; preds = %if.end.21
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14513
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !14513
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1954, metadata !2553), !dbg !14515
  %31 = load %struct._object*, %struct._object** %offset, align 8, !dbg !14516, !tbaa !2563
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8, !dbg !14515, !tbaa !2563
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14517, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !14519
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !14520, !tbaa !2632
  %dec = add i64 %33, -1, !dbg !14520
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14520, !tbaa !2632
  %cmp22 = icmp ne i64 %dec, 0, !dbg !14521
  br i1 %cmp22, label %if.then.24, label %if.else, !dbg !14522

if.then.24:                                       ; preds = %do.body
  br label %if.end.25, !dbg !14523

if.else:                                          ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14525, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !14527
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14527, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !14528
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14528, !tbaa !2642
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14529, !tbaa !2563
  call void %36(%struct._object* %37), !dbg !14530
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.24
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14531
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !14531
  br label %do.cond, !dbg !14533

do.cond:                                          ; preds = %if.end.25
  br label %do.end, !dbg !14534

do.end:                                           ; preds = %do.cond
  br label %if.end.26, !dbg !14536

if.end.26:                                        ; preds = %do.end, %cond.end
  %39 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14537, !tbaa !2563
  %40 = bitcast %struct._object* %39 to %struct.PyDateTime_Time*, !dbg !14538
  %data27 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %40, i32 0, i32 3, !dbg !14539
  %arrayidx28 = getelementptr [6 x i8], [6 x i8]* %data27, i32 0, i64 1, !dbg !14540
  %41 = load i8, i8* %arrayidx28, align 1, !dbg !14540, !tbaa !3415
  %conv29 = zext i8 %41 to i32, !dbg !14541
  %mul30 = mul i32 %conv29, 60, !dbg !14542
  %42 = load i32, i32* %offsecs, align 4, !dbg !14543, !tbaa !3325
  %sub = sub i32 %mul30, %42, !dbg !14544
  %43 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14545, !tbaa !2563
  %44 = bitcast %struct._object* %43 to %struct.PyDateTime_Time*, !dbg !14546
  %data31 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %44, i32 0, i32 3, !dbg !14547
  %arrayidx32 = getelementptr [6 x i8], [6 x i8]* %data31, i32 0, i64 0, !dbg !14548
  %45 = load i8, i8* %arrayidx32, align 1, !dbg !14548, !tbaa !3415
  %conv33 = zext i8 %45 to i32, !dbg !14549
  %mul34 = mul i32 %conv33, 3600, !dbg !14550
  %add35 = add i32 %sub, %mul34, !dbg !14551
  %cmp36 = icmp ne i32 %add35, 0, !dbg !14552
  %conv37 = zext i1 %cmp36 to i32, !dbg !14552
  store i32 %conv37, i32* %retval, !dbg !14553
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14553

cleanup:                                          ; preds = %if.end.26, %if.then.20, %if.then
  %46 = bitcast i32* %offsecs to i8*, !dbg !14554
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !14554
  %47 = bitcast %struct._object** %tzinfo to i8*, !dbg !14554
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !14554
  %48 = bitcast %struct._object** %offset to i8*, !dbg !14554
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !14554
  %49 = load i32, i32* %retval, !dbg !14554
  ret i32 %49, !dbg !14554
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_utcoffset(%struct._object* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1988, metadata !2553), !dbg !14555
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !1989, metadata !2553), !dbg !14556
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14557, !tbaa !2563
  %1 = bitcast %struct._object* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !14558
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !14559
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !14559, !tbaa !5575
  %conv = sext i8 %2 to i32, !dbg !14560
  %tobool = icmp ne i32 %conv, 0, !dbg !14560
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14560

cond.true:                                        ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14561, !tbaa !2563
  %4 = bitcast %struct._object* %3 to %struct.PyDateTime_Time*, !dbg !14563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %4, i32 0, i32 4, !dbg !14564
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14564, !tbaa !3489
  br label %cond.end, !dbg !14560

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14565

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !14560
  %call = call %struct._object* @call_utcoffset(%struct._object* %cond, %struct._object* @_Py_NoneStruct), !dbg !14567
  ret %struct._object* %call, !dbg !14570
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_isoformat(%struct.PyDateTime_Time* %self, %struct._object* %unused) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca %struct._object*, align 8
  %buf = alloca [100 x i8], align 16
  %result = alloca %struct._object*, align 8
  %us = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2018, metadata !2553), !dbg !14571
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !2019, metadata !2553), !dbg !14572
  %0 = bitcast [100 x i8]* %buf to i8*, !dbg !14573
  call void @llvm.lifetime.start(i64 100, i8* %0) #1, !dbg !14573
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf, metadata !2020, metadata !2553), !dbg !14574
  %1 = bitcast %struct._object** %result to i8*, !dbg !14575
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14575
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2021, metadata !2553), !dbg !14576
  %2 = bitcast i32* %us to i8*, !dbg !14577
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !14577
  call void @llvm.dbg.declare(metadata i32* %us, metadata !2022, metadata !2553), !dbg !14578
  %3 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14579, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %3, i32 0, i32 3, !dbg !14580
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 3, !dbg !14581
  %4 = load i8, i8* %arrayidx, align 1, !dbg !14581, !tbaa !3415
  %conv = zext i8 %4 to i32, !dbg !14581
  %shl = shl i32 %conv, 16, !dbg !14582
  %5 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14583, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %5, i32 0, i32 3, !dbg !14584
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %data1, i32 0, i64 4, !dbg !14585
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !14585, !tbaa !3415
  %conv3 = zext i8 %6 to i32, !dbg !14585
  %shl4 = shl i32 %conv3, 8, !dbg !14586
  %or = or i32 %shl, %shl4, !dbg !14587
  %7 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14588, !tbaa !2563
  %data5 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %7, i32 0, i32 3, !dbg !14589
  %arrayidx6 = getelementptr [6 x i8], [6 x i8]* %data5, i32 0, i64 5, !dbg !14590
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !14590, !tbaa !3415
  %conv7 = zext i8 %8 to i32, !dbg !14590
  %or8 = or i32 %or, %conv7, !dbg !14591
  store i32 %or8, i32* %us, align 4, !dbg !14578, !tbaa !3325
  %9 = load i32, i32* %us, align 4, !dbg !14592, !tbaa !3325
  %tobool = icmp ne i32 %9, 0, !dbg !14592
  br i1 %tobool, label %if.then, label %if.else, !dbg !14594

if.then:                                          ; preds = %entry
  %10 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14595, !tbaa !2563
  %data9 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %10, i32 0, i32 3, !dbg !14596
  %arrayidx10 = getelementptr [6 x i8], [6 x i8]* %data9, i32 0, i64 0, !dbg !14597
  %11 = load i8, i8* %arrayidx10, align 1, !dbg !14597, !tbaa !3415
  %conv11 = zext i8 %11 to i32, !dbg !14598
  %12 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14599, !tbaa !2563
  %data12 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %12, i32 0, i32 3, !dbg !14600
  %arrayidx13 = getelementptr [6 x i8], [6 x i8]* %data12, i32 0, i64 1, !dbg !14601
  %13 = load i8, i8* %arrayidx13, align 1, !dbg !14601, !tbaa !3415
  %conv14 = zext i8 %13 to i32, !dbg !14602
  %14 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14603, !tbaa !2563
  %data15 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %14, i32 0, i32 3, !dbg !14604
  %arrayidx16 = getelementptr [6 x i8], [6 x i8]* %data15, i32 0, i64 2, !dbg !14605
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !14605, !tbaa !3415
  %conv17 = zext i8 %15 to i32, !dbg !14606
  %16 = load i32, i32* %us, align 4, !dbg !14607, !tbaa !3325
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i32 0, i32 0), i32 %conv11, i32 %conv14, i32 %conv17, i32 %16), !dbg !14608
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !14609, !tbaa !2563
  br label %if.end, !dbg !14610

if.else:                                          ; preds = %entry
  %17 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14611, !tbaa !2563
  %data18 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %17, i32 0, i32 3, !dbg !14612
  %arrayidx19 = getelementptr [6 x i8], [6 x i8]* %data18, i32 0, i64 0, !dbg !14613
  %18 = load i8, i8* %arrayidx19, align 1, !dbg !14613, !tbaa !3415
  %conv20 = zext i8 %18 to i32, !dbg !14614
  %19 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14615, !tbaa !2563
  %data21 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %19, i32 0, i32 3, !dbg !14616
  %arrayidx22 = getelementptr [6 x i8], [6 x i8]* %data21, i32 0, i64 1, !dbg !14617
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !14617, !tbaa !3415
  %conv23 = zext i8 %20 to i32, !dbg !14618
  %21 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14619, !tbaa !2563
  %data24 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %21, i32 0, i32 3, !dbg !14620
  %arrayidx25 = getelementptr [6 x i8], [6 x i8]* %data24, i32 0, i64 2, !dbg !14621
  %22 = load i8, i8* %arrayidx25, align 1, !dbg !14621, !tbaa !3415
  %conv26 = zext i8 %22 to i32, !dbg !14622
  %call27 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.204, i32 0, i32 0), i32 %conv20, i32 %conv23, i32 %conv26), !dbg !14623
  store %struct._object* %call27, %struct._object** %result, align 8, !dbg !14624, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !14625, !tbaa !2563
  %cmp = icmp eq %struct._object* %23, null, !dbg !14627
  br i1 %cmp, label %if.then.33, label %lor.lhs.false, !dbg !14628

lor.lhs.false:                                    ; preds = %if.end
  %24 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14629, !tbaa !2563
  %25 = bitcast %struct.PyDateTime_Time* %24 to %struct._PyDateTime_BaseTZInfo*, !dbg !14631
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %25, i32 0, i32 2, !dbg !14632
  %26 = load i8, i8* %hastzinfo, align 1, !dbg !14632, !tbaa !5575
  %tobool29 = icmp ne i8 %26, 0, !dbg !14633
  br i1 %tobool29, label %lor.lhs.false.30, label %if.then.33, !dbg !14634

lor.lhs.false.30:                                 ; preds = %lor.lhs.false
  %27 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14635, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %27, i32 0, i32 4, !dbg !14637
  %28 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14637, !tbaa !3489
  %cmp31 = icmp eq %struct._object* %28, @_Py_NoneStruct, !dbg !14638
  br i1 %cmp31, label %if.then.33, label %if.end.34, !dbg !14639

if.then.33:                                       ; preds = %lor.lhs.false.30, %lor.lhs.false, %if.end
  %29 = load %struct._object*, %struct._object** %result, align 8, !dbg !14640, !tbaa !2563
  store %struct._object* %29, %struct._object** %retval, !dbg !14641
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14641

if.end.34:                                        ; preds = %lor.lhs.false.30
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !14642
  %30 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14643, !tbaa !2563
  %tzinfo35 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %30, i32 0, i32 4, !dbg !14644
  %31 = load %struct._object*, %struct._object** %tzinfo35, align 8, !dbg !14644, !tbaa !3489
  %call36 = call i32 @format_utcoffset(i8* %arraydecay, i64 100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.156, i32 0, i32 0), %struct._object* %31, %struct._object* @_Py_NoneStruct), !dbg !14645
  %cmp37 = icmp slt i32 %call36, 0, !dbg !14646
  br i1 %cmp37, label %if.then.39, label %if.end.45, !dbg !14647

if.then.39:                                       ; preds = %if.end.34
  br label %do.body, !dbg !14648

do.body:                                          ; preds = %if.then.39
  %32 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14649
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !14649
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2023, metadata !2553), !dbg !14651
  %33 = load %struct._object*, %struct._object** %result, align 8, !dbg !14652, !tbaa !2563
  store %struct._object* %33, %struct._object** %_py_decref_tmp, align 8, !dbg !14651, !tbaa !2563
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14653, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !14655
  %35 = load i64, i64* %ob_refcnt, align 8, !dbg !14656, !tbaa !2632
  %dec = add i64 %35, -1, !dbg !14656
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14656, !tbaa !2632
  %cmp40 = icmp ne i64 %dec, 0, !dbg !14657
  br i1 %cmp40, label %if.then.42, label %if.else.43, !dbg !14658

if.then.42:                                       ; preds = %do.body
  br label %if.end.44, !dbg !14659

if.else.43:                                       ; preds = %do.body
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14661, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !14663
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14663, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !14664
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14664, !tbaa !2642
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14665, !tbaa !2563
  call void %38(%struct._object* %39), !dbg !14666
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.43, %if.then.42
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14667
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !14667
  br label %do.cond, !dbg !14669

do.cond:                                          ; preds = %if.end.44
  br label %do.end, !dbg !14670

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !14672
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14672

if.end.45:                                        ; preds = %if.end.34
  %arraydecay46 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0, !dbg !14673
  %call47 = call %struct._object* @PyUnicode_FromString(i8* %arraydecay46), !dbg !14674
  call void @PyUnicode_AppendAndDel(%struct._object** %result, %struct._object* %call47), !dbg !14675
  %41 = load %struct._object*, %struct._object** %result, align 8, !dbg !14676, !tbaa !2563
  store %struct._object* %41, %struct._object** %retval, !dbg !14677
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14677

cleanup:                                          ; preds = %if.end.45, %do.end, %if.then.33
  %42 = bitcast i32* %us to i8*, !dbg !14678
  call void @llvm.lifetime.end(i64 4, i8* %42) #1, !dbg !14678
  %43 = bitcast %struct._object** %result to i8*, !dbg !14678
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !14678
  %44 = bitcast [100 x i8]* %buf to i8*, !dbg !14678
  call void @llvm.lifetime.end(i64 100, i8* %44) #1, !dbg !14678
  %45 = load %struct._object*, %struct._object** %retval, !dbg !14678
  ret %struct._object* %45, !dbg !14678
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_strftime(%struct.PyDateTime_Time* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2031, metadata !2553), !dbg !14679
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2032, metadata !2553), !dbg !14680
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2033, metadata !2553), !dbg !14681
  %0 = bitcast %struct._object** %result to i8*, !dbg !14682
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14682
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2034, metadata !2553), !dbg !14683
  %1 = bitcast %struct._object** %tuple to i8*, !dbg !14684
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14684
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !2035, metadata !2553), !dbg !14685
  %2 = bitcast %struct._object** %format to i8*, !dbg !14686
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !14686
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !2036, metadata !2553), !dbg !14687
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14688, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !14690, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @time_strftime.keywords, i32 0, i32 0), %struct._object** %format), !dbg !14691
  %tobool = icmp ne i32 %call, 0, !dbg !14691
  br i1 %tobool, label %if.end, label %if.then, !dbg !14692

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !14693
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14693

if.end:                                           ; preds = %entry
  %5 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14694, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %5, i32 0, i32 3, !dbg !14695
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 0, !dbg !14696
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14696, !tbaa !3415
  %conv = zext i8 %6 to i32, !dbg !14697
  %7 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14698, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %7, i32 0, i32 3, !dbg !14699
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %data1, i32 0, i64 1, !dbg !14700
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !14700, !tbaa !3415
  %conv3 = zext i8 %8 to i32, !dbg !14701
  %9 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14702, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %9, i32 0, i32 3, !dbg !14703
  %arrayidx5 = getelementptr [6 x i8], [6 x i8]* %data4, i32 0, i64 2, !dbg !14704
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !14704, !tbaa !3415
  %conv6 = zext i8 %10 to i32, !dbg !14705
  %call7 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i32 0, i32 0), i32 1900, i32 1, i32 1, i32 %conv, i32 %conv3, i32 %conv6, i32 0, i32 1, i32 -1), !dbg !14706
  store %struct._object* %call7, %struct._object** %tuple, align 8, !dbg !14707, !tbaa !2563
  %11 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !14708, !tbaa !2563
  %cmp = icmp eq %struct._object* %11, null, !dbg !14710
  br i1 %cmp, label %if.then.9, label %if.end.10, !dbg !14711

if.then.9:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !14712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14712

if.end.10:                                        ; preds = %if.end
  %12 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14713, !tbaa !2563
  %13 = bitcast %struct.PyDateTime_Time* %12 to %struct._object*, !dbg !14714
  %14 = load %struct._object*, %struct._object** %format, align 8, !dbg !14715, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !14716, !tbaa !2563
  %call11 = call %struct._object* @wrap_strftime(%struct._object* %13, %struct._object* %14, %struct._object* %15, %struct._object* @_Py_NoneStruct), !dbg !14717
  store %struct._object* %call11, %struct._object** %result, align 8, !dbg !14718, !tbaa !2563
  br label %do.body, !dbg !14719

do.body:                                          ; preds = %if.end.10
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14720
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !14720
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2037, metadata !2553), !dbg !14722
  %17 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !14723, !tbaa !2563
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !14722, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14724, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !14726
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !14727, !tbaa !2632
  %dec = add i64 %19, -1, !dbg !14727
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14727, !tbaa !2632
  %cmp12 = icmp ne i64 %dec, 0, !dbg !14728
  br i1 %cmp12, label %if.then.14, label %if.else, !dbg !14729

if.then.14:                                       ; preds = %do.body
  br label %if.end.15, !dbg !14730

if.else:                                          ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14732, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !14734
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14734, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !14735
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14735, !tbaa !2642
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14736, !tbaa !2563
  call void %22(%struct._object* %23), !dbg !14737
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.14
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14738
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !14738
  br label %do.cond, !dbg !14740

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !14741

do.end:                                           ; preds = %do.cond
  %25 = load %struct._object*, %struct._object** %result, align 8, !dbg !14743, !tbaa !2563
  store %struct._object* %25, %struct._object** %retval, !dbg !14744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14744

cleanup:                                          ; preds = %do.end, %if.then.9, %if.then
  %26 = bitcast %struct._object** %format to i8*, !dbg !14745
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !14745
  %27 = bitcast %struct._object** %tuple to i8*, !dbg !14745
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !14745
  %28 = bitcast %struct._object** %result to i8*, !dbg !14745
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !14745
  %29 = load %struct._object*, %struct._object** %retval, !dbg !14745
  ret %struct._object* %29, !dbg !14745
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_tzname(%struct.PyDateTime_Time* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2041, metadata !2553), !dbg !14746
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !2042, metadata !2553), !dbg !14747
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14748, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Time* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !14749
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !14750
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !14750, !tbaa !5575
  %conv = sext i8 %2 to i32, !dbg !14751
  %tobool = icmp ne i32 %conv, 0, !dbg !14751
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14751

cond.true:                                        ; preds = %entry
  %3 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14752, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %3, i32 0, i32 4, !dbg !14754
  %4 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14754, !tbaa !3489
  br label %cond.end, !dbg !14751

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %4, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !14751
  %call = call %struct._object* @call_tzname(%struct._object* %cond, %struct._object* @_Py_NoneStruct), !dbg !14757
  ret %struct._object* %call, !dbg !14760
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_dst(%struct._object* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %unused.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2045, metadata !2553), !dbg !14761
  store %struct._object* %unused, %struct._object** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %unused.addr, metadata !2046, metadata !2553), !dbg !14762
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14763, !tbaa !2563
  %1 = bitcast %struct._object* %0 to %struct._PyDateTime_BaseTZInfo*, !dbg !14764
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %1, i32 0, i32 2, !dbg !14765
  %2 = load i8, i8* %hastzinfo, align 1, !dbg !14765, !tbaa !5575
  %conv = sext i8 %2 to i32, !dbg !14766
  %tobool = icmp ne i32 %conv, 0, !dbg !14766
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14766

cond.true:                                        ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14767, !tbaa !2563
  %4 = bitcast %struct._object* %3 to %struct.PyDateTime_Time*, !dbg !14769
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %4, i32 0, i32 4, !dbg !14770
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14770, !tbaa !3489
  br label %cond.end, !dbg !14766

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14771

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !14766
  %call = call %struct._object* @call_dst(%struct._object* %cond, %struct._object* @_Py_NoneStruct), !dbg !14773
  ret %struct._object* %call, !dbg !14776
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_replace(%struct.PyDateTime_Time* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %clone = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %hh = alloca i32, align 4
  %mm = alloca i32, align 4
  %ss = alloca i32, align 4
  %us = alloca i32, align 4
  %tzinfo = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2049, metadata !2553), !dbg !14777
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2050, metadata !2553), !dbg !14778
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2051, metadata !2553), !dbg !14779
  %0 = bitcast %struct._object** %clone to i8*, !dbg !14780
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14780
  call void @llvm.dbg.declare(metadata %struct._object** %clone, metadata !2052, metadata !2553), !dbg !14781
  %1 = bitcast %struct._object** %tuple to i8*, !dbg !14782
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14782
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !2053, metadata !2553), !dbg !14783
  %2 = bitcast i32* %hh to i8*, !dbg !14784
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !14784
  call void @llvm.dbg.declare(metadata i32* %hh, metadata !2054, metadata !2553), !dbg !14785
  %3 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14786, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %3, i32 0, i32 3, !dbg !14787
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 0, !dbg !14788
  %4 = load i8, i8* %arrayidx, align 1, !dbg !14788, !tbaa !3415
  %conv = zext i8 %4 to i32, !dbg !14789
  store i32 %conv, i32* %hh, align 4, !dbg !14785, !tbaa !3325
  %5 = bitcast i32* %mm to i8*, !dbg !14790
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !14790
  call void @llvm.dbg.declare(metadata i32* %mm, metadata !2055, metadata !2553), !dbg !14791
  %6 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14792, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %6, i32 0, i32 3, !dbg !14793
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %data1, i32 0, i64 1, !dbg !14794
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !14794, !tbaa !3415
  %conv3 = zext i8 %7 to i32, !dbg !14795
  store i32 %conv3, i32* %mm, align 4, !dbg !14791, !tbaa !3325
  %8 = bitcast i32* %ss to i8*, !dbg !14796
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !14796
  call void @llvm.dbg.declare(metadata i32* %ss, metadata !2056, metadata !2553), !dbg !14797
  %9 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14798, !tbaa !2563
  %data4 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %9, i32 0, i32 3, !dbg !14799
  %arrayidx5 = getelementptr [6 x i8], [6 x i8]* %data4, i32 0, i64 2, !dbg !14800
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !14800, !tbaa !3415
  %conv6 = zext i8 %10 to i32, !dbg !14801
  store i32 %conv6, i32* %ss, align 4, !dbg !14797, !tbaa !3325
  %11 = bitcast i32* %us to i8*, !dbg !14802
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !14802
  call void @llvm.dbg.declare(metadata i32* %us, metadata !2057, metadata !2553), !dbg !14803
  %12 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14804, !tbaa !2563
  %data7 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %12, i32 0, i32 3, !dbg !14805
  %arrayidx8 = getelementptr [6 x i8], [6 x i8]* %data7, i32 0, i64 3, !dbg !14806
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !14806, !tbaa !3415
  %conv9 = zext i8 %13 to i32, !dbg !14806
  %shl = shl i32 %conv9, 16, !dbg !14807
  %14 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14808, !tbaa !2563
  %data10 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %14, i32 0, i32 3, !dbg !14809
  %arrayidx11 = getelementptr [6 x i8], [6 x i8]* %data10, i32 0, i64 4, !dbg !14810
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !14810, !tbaa !3415
  %conv12 = zext i8 %15 to i32, !dbg !14810
  %shl13 = shl i32 %conv12, 8, !dbg !14811
  %or = or i32 %shl, %shl13, !dbg !14812
  %16 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14813, !tbaa !2563
  %data14 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %16, i32 0, i32 3, !dbg !14814
  %arrayidx15 = getelementptr [6 x i8], [6 x i8]* %data14, i32 0, i64 5, !dbg !14815
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !14815, !tbaa !3415
  %conv16 = zext i8 %17 to i32, !dbg !14815
  %or17 = or i32 %or, %conv16, !dbg !14816
  store i32 %or17, i32* %us, align 4, !dbg !14803, !tbaa !3325
  %18 = bitcast %struct._object** %tzinfo to i8*, !dbg !14817
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !14817
  call void @llvm.dbg.declare(metadata %struct._object** %tzinfo, metadata !2058, metadata !2553), !dbg !14818
  %19 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14819, !tbaa !2563
  %20 = bitcast %struct.PyDateTime_Time* %19 to %struct._PyDateTime_BaseTZInfo*, !dbg !14820
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %20, i32 0, i32 2, !dbg !14821
  %21 = load i8, i8* %hastzinfo, align 1, !dbg !14821, !tbaa !5575
  %conv18 = sext i8 %21 to i32, !dbg !14822
  %tobool = icmp ne i32 %conv18, 0, !dbg !14822
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14822

cond.true:                                        ; preds = %entry
  %22 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14823, !tbaa !2563
  %tzinfo19 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %22, i32 0, i32 4, !dbg !14825
  %23 = load %struct._object*, %struct._object** %tzinfo19, align 8, !dbg !14825, !tbaa !3489
  br label %cond.end, !dbg !14822

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14826

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %23, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !14822
  store %struct._object* %cond, %struct._object** %tzinfo, align 8, !dbg !14828, !tbaa !2563
  %24 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14831, !tbaa !2563
  %25 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !14833, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %24, %struct._object* %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.206, i32 0, i32 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_kws, i32 0, i32 0), i32* %hh, i32* %mm, i32* %ss, i32* %us, %struct._object** %tzinfo), !dbg !14834
  %tobool20 = icmp ne i32 %call, 0, !dbg !14834
  br i1 %tobool20, label %if.end, label %if.then, !dbg !14835

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !14836
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14836

if.end:                                           ; preds = %cond.end
  %26 = load i32, i32* %hh, align 4, !dbg !14837, !tbaa !3325
  %27 = load i32, i32* %mm, align 4, !dbg !14838, !tbaa !3325
  %28 = load i32, i32* %ss, align 4, !dbg !14839, !tbaa !3325
  %29 = load i32, i32* %us, align 4, !dbg !14840, !tbaa !3325
  %30 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14841, !tbaa !2563
  %call21 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0), i32 %26, i32 %27, i32 %28, i32 %29, %struct._object* %30), !dbg !14842
  store %struct._object* %call21, %struct._object** %tuple, align 8, !dbg !14843, !tbaa !2563
  %31 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !14844, !tbaa !2563
  %cmp = icmp eq %struct._object* %31, null, !dbg !14846
  br i1 %cmp, label %if.then.23, label %if.end.24, !dbg !14847

if.then.23:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !14848
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14848

if.end.24:                                        ; preds = %if.end
  %32 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14849, !tbaa !2563
  %33 = bitcast %struct.PyDateTime_Time* %32 to %struct._object*, !dbg !14850
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !14851
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14851, !tbaa !2640
  %35 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !14852, !tbaa !2563
  %call25 = call %struct._object* @time_new(%struct._typeobject* %34, %struct._object* %35, %struct._object* null), !dbg !14853
  store %struct._object* %call25, %struct._object** %clone, align 8, !dbg !14854, !tbaa !2563
  br label %do.body, !dbg !14855

do.body:                                          ; preds = %if.end.24
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14856
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !14856
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2059, metadata !2553), !dbg !14858
  %37 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !14859, !tbaa !2563
  store %struct._object* %37, %struct._object** %_py_decref_tmp, align 8, !dbg !14858, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14860, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !14862
  %39 = load i64, i64* %ob_refcnt, align 8, !dbg !14863, !tbaa !2632
  %dec = add i64 %39, -1, !dbg !14863
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14863, !tbaa !2632
  %cmp26 = icmp ne i64 %dec, 0, !dbg !14864
  br i1 %cmp26, label %if.then.28, label %if.else, !dbg !14865

if.then.28:                                       ; preds = %do.body
  br label %if.end.30, !dbg !14866

if.else:                                          ; preds = %do.body
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14868, !tbaa !2563
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !14870
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !14870, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !14871
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14871, !tbaa !2642
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14872, !tbaa !2563
  call void %42(%struct._object* %43), !dbg !14873
  br label %if.end.30

if.end.30:                                        ; preds = %if.else, %if.then.28
  %44 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14874
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !14874
  br label %do.cond, !dbg !14876

do.cond:                                          ; preds = %if.end.30
  br label %do.end, !dbg !14877

do.end:                                           ; preds = %do.cond
  %45 = load %struct._object*, %struct._object** %clone, align 8, !dbg !14879, !tbaa !2563
  store %struct._object* %45, %struct._object** %retval, !dbg !14880
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14880

cleanup:                                          ; preds = %do.end, %if.then.23, %if.then
  %46 = bitcast %struct._object** %tzinfo to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !14881
  %47 = bitcast i32* %us to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 4, i8* %47) #1, !dbg !14881
  %48 = bitcast i32* %ss to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 4, i8* %48) #1, !dbg !14881
  %49 = bitcast i32* %mm to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !14881
  %50 = bitcast i32* %hh to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 4, i8* %50) #1, !dbg !14881
  %51 = bitcast %struct._object** %tuple to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !14881
  %52 = bitcast %struct._object** %clone to i8*, !dbg !14881
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !14881
  %53 = load %struct._object*, %struct._object** %retval, !dbg !14881
  ret %struct._object* %53, !dbg !14881
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_reduce(%struct.PyDateTime_Time* %self, %struct._object* %arg) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %arg.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2063, metadata !2553), !dbg !14882
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !2064, metadata !2553), !dbg !14883
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14884, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_Time* %0 to %struct._object*, !dbg !14885
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !14886
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14886, !tbaa !2640
  %3 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14887, !tbaa !2563
  %call = call %struct._object* @time_getstate(%struct.PyDateTime_Time* %3), !dbg !14888
  %call1 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), %struct._typeobject* %2, %struct._object* %call), !dbg !14889
  ret %struct._object* %call1, !dbg !14890
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_getstate(%struct.PyDateTime_Time* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %basestate = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2067, metadata !2553), !dbg !14891
  %0 = bitcast %struct._object** %basestate to i8*, !dbg !14892
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14892
  call void @llvm.dbg.declare(metadata %struct._object** %basestate, metadata !2068, metadata !2553), !dbg !14893
  %1 = bitcast %struct._object** %result to i8*, !dbg !14894
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14894
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2069, metadata !2553), !dbg !14895
  store %struct._object* null, %struct._object** %result, align 8, !dbg !14895, !tbaa !2563
  %2 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14896, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %2, i32 0, i32 3, !dbg !14897
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %data, i32 0, i32 0, !dbg !14896
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay, i64 6), !dbg !14898
  store %struct._object* %call, %struct._object** %basestate, align 8, !dbg !14899, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !14900, !tbaa !2563
  %cmp = icmp ne %struct._object* %3, null, !dbg !14901
  br i1 %cmp, label %if.then, label %if.end.10, !dbg !14902

if.then:                                          ; preds = %entry
  %4 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14903, !tbaa !2563
  %5 = bitcast %struct.PyDateTime_Time* %4 to %struct._PyDateTime_BaseTZInfo*, !dbg !14905
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %5, i32 0, i32 2, !dbg !14906
  %6 = load i8, i8* %hastzinfo, align 1, !dbg !14906, !tbaa !5575
  %tobool = icmp ne i8 %6, 0, !dbg !14907
  br i1 %tobool, label %lor.lhs.false, label %if.then.2, !dbg !14908

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14909, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %7, i32 0, i32 4, !dbg !14911
  %8 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !14911, !tbaa !3489
  %cmp1 = icmp eq %struct._object* %8, @_Py_NoneStruct, !dbg !14912
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !14913

if.then.2:                                        ; preds = %lor.lhs.false, %if.then
  %9 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !14914, !tbaa !2563
  %call3 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 1, %struct._object* %9), !dbg !14915
  store %struct._object* %call3, %struct._object** %result, align 8, !dbg !14916, !tbaa !2563
  br label %if.end, !dbg !14917

if.else:                                          ; preds = %lor.lhs.false
  %10 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !14918, !tbaa !2563
  %11 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14919, !tbaa !2563
  %tzinfo4 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %11, i32 0, i32 4, !dbg !14920
  %12 = load %struct._object*, %struct._object** %tzinfo4, align 8, !dbg !14920, !tbaa !3489
  %call5 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %10, %struct._object* %12), !dbg !14921
  store %struct._object* %call5, %struct._object** %result, align 8, !dbg !14922, !tbaa !2563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %do.body, !dbg !14923

do.body:                                          ; preds = %if.end
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14924
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !14924
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2070, metadata !2553), !dbg !14926
  %14 = load %struct._object*, %struct._object** %basestate, align 8, !dbg !14927, !tbaa !2563
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !14926, !tbaa !2563
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14928, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !14930
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !14931, !tbaa !2632
  %dec = add i64 %16, -1, !dbg !14931
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14931, !tbaa !2632
  %cmp6 = icmp ne i64 %dec, 0, !dbg !14932
  br i1 %cmp6, label %if.then.7, label %if.else.8, !dbg !14933

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !14934

if.else.8:                                        ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14936, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !14938
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14938, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !14939
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14939, !tbaa !2642
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14940, !tbaa !2563
  call void %19(%struct._object* %20), !dbg !14941
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !14942
  br label %do.cond, !dbg !14944

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !14945

do.end:                                           ; preds = %do.cond
  br label %if.end.10, !dbg !14947

if.end.10:                                        ; preds = %do.end, %entry
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !14948, !tbaa !2563
  %23 = bitcast %struct._object** %result to i8*, !dbg !14949
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !14949
  %24 = bitcast %struct._object** %basestate to i8*, !dbg !14949
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !14949
  ret %struct._object* %22, !dbg !14950
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_hour(%struct.PyDateTime_Time* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2078, metadata !2553), !dbg !14951
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !2079, metadata !2553), !dbg !14952
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14953, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %0, i32 0, i32 3, !dbg !14954
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 0, !dbg !14955
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14955, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !14956
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !14957
  ret %struct._object* %call, !dbg !14958
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_minute(%struct.PyDateTime_Time* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2082, metadata !2553), !dbg !14959
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !2083, metadata !2553), !dbg !14960
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14961, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %0, i32 0, i32 3, !dbg !14962
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 1, !dbg !14963
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14963, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !14964
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !14965
  ret %struct._object* %call, !dbg !14966
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @py_time_second(%struct.PyDateTime_Time* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2086, metadata !2553), !dbg !14967
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !2087, metadata !2553), !dbg !14968
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14969, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %0, i32 0, i32 3, !dbg !14970
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 2, !dbg !14971
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14971, !tbaa !3415
  %conv = zext i8 %1 to i64, !dbg !14972
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !14973
  ret %struct._object* %call, !dbg !14974
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_microsecond(%struct.PyDateTime_Time* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2090, metadata !2553), !dbg !14975
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !2091, metadata !2553), !dbg !14976
  %0 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14977, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %0, i32 0, i32 3, !dbg !14978
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %data, i32 0, i64 3, !dbg !14979
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14979, !tbaa !3415
  %conv = zext i8 %1 to i32, !dbg !14979
  %shl = shl i32 %conv, 16, !dbg !14980
  %2 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14981, !tbaa !2563
  %data1 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %2, i32 0, i32 3, !dbg !14982
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %data1, i32 0, i64 4, !dbg !14983
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !14983, !tbaa !3415
  %conv3 = zext i8 %3 to i32, !dbg !14983
  %shl4 = shl i32 %conv3, 8, !dbg !14984
  %or = or i32 %shl, %shl4, !dbg !14985
  %4 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14986, !tbaa !2563
  %data5 = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %4, i32 0, i32 3, !dbg !14987
  %arrayidx6 = getelementptr [6 x i8], [6 x i8]* %data5, i32 0, i64 5, !dbg !14988
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !14988, !tbaa !3415
  %conv7 = zext i8 %5 to i32, !dbg !14988
  %or8 = or i32 %or, %conv7, !dbg !14989
  %conv9 = sext i32 %or8 to i64, !dbg !14990
  %call = call %struct._object* @PyLong_FromLong(i64 %conv9), !dbg !14991
  ret %struct._object* %call, !dbg !14992
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @time_tzinfo(%struct.PyDateTime_Time* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Time*, align 8
  %unused.addr = alloca i8*, align 8
  %result = alloca %struct._object*, align 8
  store %struct.PyDateTime_Time* %self, %struct.PyDateTime_Time** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Time** %self.addr, metadata !2094, metadata !2553), !dbg !14993
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !2095, metadata !2553), !dbg !14994
  %0 = bitcast %struct._object** %result to i8*, !dbg !14995
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14995
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2096, metadata !2553), !dbg !14996
  %1 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !14997, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_Time* %1 to %struct._PyDateTime_BaseTZInfo*, !dbg !14998
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %2, i32 0, i32 2, !dbg !14999
  %3 = load i8, i8* %hastzinfo, align 1, !dbg !14999, !tbaa !5575
  %conv = sext i8 %3 to i32, !dbg !15000
  %tobool = icmp ne i32 %conv, 0, !dbg !15000
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15000

cond.true:                                        ; preds = %entry
  %4 = load %struct.PyDateTime_Time*, %struct.PyDateTime_Time** %self.addr, align 8, !dbg !15001, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_Time, %struct.PyDateTime_Time* %4, i32 0, i32 4, !dbg !15003
  %5 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !15003, !tbaa !3489
  br label %cond.end, !dbg !15000

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15004

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %5, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !15000
  store %struct._object* %cond, %struct._object** %result, align 8, !dbg !15006, !tbaa !2563
  %6 = load %struct._object*, %struct._object** %result, align 8, !dbg !15009, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !15010
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !15011, !tbaa !2632
  %inc = add i64 %7, 1, !dbg !15011
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !15011, !tbaa !2632
  %8 = load %struct._object*, %struct._object** %result, align 8, !dbg !15012, !tbaa !2563
  %9 = bitcast %struct._object** %result to i8*, !dbg !15013
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !15013
  ret %struct._object* %8, !dbg !15014
}

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @tzinfo_tzname(%struct.PyDateTime_TZInfo* %self, %struct._object* %dt) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_TZInfo*, align 8
  %dt.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_TZInfo* %self, %struct.PyDateTime_TZInfo** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TZInfo** %self.addr, metadata !2130, metadata !2553), !dbg !15015
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2131, metadata !2553), !dbg !15016
  %call = call %struct._object* @tzinfo_nogo(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0)), !dbg !15017
  ret %struct._object* %call, !dbg !15018
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tzinfo_utcoffset(%struct.PyDateTime_TZInfo* %self, %struct._object* %dt) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_TZInfo*, align 8
  %dt.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_TZInfo* %self, %struct.PyDateTime_TZInfo** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TZInfo** %self.addr, metadata !2139, metadata !2553), !dbg !15019
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2140, metadata !2553), !dbg !15020
  %call = call %struct._object* @tzinfo_nogo(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0)), !dbg !15021
  ret %struct._object* %call, !dbg !15022
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tzinfo_dst(%struct.PyDateTime_TZInfo* %self, %struct._object* %dt) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_TZInfo*, align 8
  %dt.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_TZInfo* %self, %struct.PyDateTime_TZInfo** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TZInfo** %self.addr, metadata !2143, metadata !2553), !dbg !15023
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2144, metadata !2553), !dbg !15024
  %call = call %struct._object* @tzinfo_nogo(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0)), !dbg !15025
  ret %struct._object* %call, !dbg !15026
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tzinfo_fromutc(%struct.PyDateTime_TZInfo* %self, %struct._object* %dt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TZInfo*, align 8
  %dt.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %off = alloca %struct._object*, align 8
  %dst = alloca %struct._object*, align 8
  %delta = alloca %struct.PyDateTime_Delta*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_decref_tmp107 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp124 = alloca %struct._object*, align 8
  %_py_xdecref_tmp140 = alloca %struct._object*, align 8
  %_py_decref_tmp145 = alloca %struct._object*, align 8
  %_py_xdecref_tmp161 = alloca %struct._object*, align 8
  %_py_decref_tmp166 = alloca %struct._object*, align 8
  %_py_xdecref_tmp182 = alloca %struct._object*, align 8
  %_py_decref_tmp187 = alloca %struct._object*, align 8
  store %struct.PyDateTime_TZInfo* %self, %struct.PyDateTime_TZInfo** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TZInfo** %self.addr, metadata !2147, metadata !2553), !dbg !15027
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2148, metadata !2553), !dbg !15028
  %0 = bitcast %struct._object** %result to i8*, !dbg !15029
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15029
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2149, metadata !2553), !dbg !15030
  store %struct._object* null, %struct._object** %result, align 8, !dbg !15030, !tbaa !2563
  %1 = bitcast %struct._object** %off to i8*, !dbg !15031
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15031
  call void @llvm.dbg.declare(metadata %struct._object** %off, metadata !2150, metadata !2553), !dbg !15032
  store %struct._object* null, %struct._object** %off, align 8, !dbg !15032, !tbaa !2563
  %2 = bitcast %struct._object** %dst to i8*, !dbg !15031
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !15031
  call void @llvm.dbg.declare(metadata %struct._object** %dst, metadata !2151, metadata !2553), !dbg !15033
  store %struct._object* null, %struct._object** %dst, align 8, !dbg !15033, !tbaa !2563
  %3 = bitcast %struct.PyDateTime_Delta** %delta to i8*, !dbg !15034
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !15034
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Delta** %delta, metadata !2152, metadata !2553), !dbg !15035
  store %struct.PyDateTime_Delta* null, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15035, !tbaa !2563
  %4 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15036, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !15038
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15038, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %5, @PyDateTime_DateTimeType, !dbg !15039
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !15040

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15041, !tbaa !2563
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !15043
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !15043, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !15044
  %tobool = icmp ne i32 %call, 0, !dbg !15044
  br i1 %tobool, label %if.end, label %if.then, !dbg !15045

if.then:                                          ; preds = %lor.lhs.false
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !15046, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.216, i32 0, i32 0)), !dbg !15048
  store %struct._object* null, %struct._object** %retval, !dbg !15049
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !15049

if.end:                                           ; preds = %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15050, !tbaa !2563
  %10 = bitcast %struct._object* %9 to %struct._PyDateTime_BaseTZInfo*, !dbg !15052
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %10, i32 0, i32 2, !dbg !15053
  %11 = load i8, i8* %hastzinfo, align 1, !dbg !15053, !tbaa !5575
  %conv = sext i8 %11 to i32, !dbg !15054
  %tobool2 = icmp ne i32 %conv, 0, !dbg !15054
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !15054

cond.true:                                        ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15055, !tbaa !2563
  %13 = bitcast %struct._object* %12 to %struct.PyDateTime_DateTime*, !dbg !15057
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %13, i32 0, i32 4, !dbg !15058
  %14 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !15058, !tbaa !3586
  br label %cond.end, !dbg !15054

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !15059

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %14, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !15054
  %15 = load %struct.PyDateTime_TZInfo*, %struct.PyDateTime_TZInfo** %self.addr, align 8, !dbg !15061, !tbaa !2563
  %16 = bitcast %struct.PyDateTime_TZInfo* %15 to %struct._object*, !dbg !15064
  %cmp3 = icmp ne %struct._object* %cond, %16, !dbg !15065
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !15066

if.then.5:                                        ; preds = %cond.end
  %17 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !15067, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217, i32 0, i32 0)), !dbg !15069
  store %struct._object* null, %struct._object** %retval, !dbg !15070
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !15070

if.end.6:                                         ; preds = %cond.end
  %18 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15071, !tbaa !2563
  %call7 = call %struct._object* @datetime_utcoffset(%struct._object* %18, %struct._object* null), !dbg !15072
  store %struct._object* %call7, %struct._object** %off, align 8, !dbg !15073, !tbaa !2563
  %19 = load %struct._object*, %struct._object** %off, align 8, !dbg !15074, !tbaa !2563
  %cmp8 = icmp eq %struct._object* %19, null, !dbg !15076
  br i1 %cmp8, label %if.then.10, label %if.end.11, !dbg !15077

if.then.10:                                       ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval, !dbg !15078
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !15078

if.end.11:                                        ; preds = %if.end.6
  %20 = load %struct._object*, %struct._object** %off, align 8, !dbg !15079, !tbaa !2563
  %cmp12 = icmp eq %struct._object* %20, @_Py_NoneStruct, !dbg !15081
  br i1 %cmp12, label %if.then.14, label %if.end.15, !dbg !15082

if.then.14:                                       ; preds = %if.end.11
  %21 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !15083, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %21, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.218, i32 0, i32 0)), !dbg !15085
  br label %Fail, !dbg !15086

if.end.15:                                        ; preds = %if.end.11
  %22 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15087, !tbaa !2563
  %call16 = call %struct._object* @datetime_dst(%struct._object* %22, %struct._object* null), !dbg !15088
  store %struct._object* %call16, %struct._object** %dst, align 8, !dbg !15089, !tbaa !2563
  %23 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15090, !tbaa !2563
  %cmp17 = icmp eq %struct._object* %23, null, !dbg !15092
  br i1 %cmp17, label %if.then.19, label %if.end.20, !dbg !15093

if.then.19:                                       ; preds = %if.end.15
  br label %Fail, !dbg !15094

if.end.20:                                        ; preds = %if.end.15
  %24 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15095, !tbaa !2563
  %cmp21 = icmp eq %struct._object* %24, @_Py_NoneStruct, !dbg !15097
  br i1 %cmp21, label %if.then.23, label %if.end.24, !dbg !15098

if.then.23:                                       ; preds = %if.end.20
  %25 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !15099, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.219, i32 0, i32 0)), !dbg !15101
  br label %Fail, !dbg !15102

if.end.24:                                        ; preds = %if.end.20
  %26 = load %struct._object*, %struct._object** %off, align 8, !dbg !15103, !tbaa !2563
  %27 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15104, !tbaa !2563
  %call25 = call %struct._object* @delta_subtract(%struct._object* %26, %struct._object* %27), !dbg !15105
  %28 = bitcast %struct._object* %call25 to %struct.PyDateTime_Delta*, !dbg !15106
  store %struct.PyDateTime_Delta* %28, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15107, !tbaa !2563
  %29 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15108, !tbaa !2563
  %cmp26 = icmp eq %struct.PyDateTime_Delta* %29, null, !dbg !15110
  br i1 %cmp26, label %if.then.28, label %if.end.29, !dbg !15111

if.then.28:                                       ; preds = %if.end.24
  br label %Fail, !dbg !15112

if.end.29:                                        ; preds = %if.end.24
  %30 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15113, !tbaa !2563
  %31 = bitcast %struct._object* %30 to %struct.PyDateTime_DateTime*, !dbg !15114
  %32 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15115, !tbaa !2563
  %call30 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %31, %struct.PyDateTime_Delta* %32, i32 1), !dbg !15116
  store %struct._object* %call30, %struct._object** %result, align 8, !dbg !15117, !tbaa !2563
  %33 = load %struct._object*, %struct._object** %result, align 8, !dbg !15118, !tbaa !2563
  %cmp31 = icmp eq %struct._object* %33, null, !dbg !15120
  br i1 %cmp31, label %if.then.33, label %if.end.34, !dbg !15121

if.then.33:                                       ; preds = %if.end.29
  br label %Fail, !dbg !15122

if.end.34:                                        ; preds = %if.end.29
  br label %do.body, !dbg !15123

do.body:                                          ; preds = %if.end.34
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15124
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !15124
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2153, metadata !2553), !dbg !15126
  %35 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15127, !tbaa !2563
  store %struct._object* %35, %struct._object** %_py_decref_tmp, align 8, !dbg !15126, !tbaa !2563
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15128, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !15130
  %37 = load i64, i64* %ob_refcnt, align 8, !dbg !15131, !tbaa !2632
  %dec = add i64 %37, -1, !dbg !15131
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15131, !tbaa !2632
  %cmp35 = icmp ne i64 %dec, 0, !dbg !15132
  br i1 %cmp35, label %if.then.37, label %if.else, !dbg !15133

if.then.37:                                       ; preds = %do.body
  br label %if.end.39, !dbg !15134

if.else:                                          ; preds = %do.body
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15136, !tbaa !2563
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !15138
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !15138, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !15139
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15139, !tbaa !2642
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15140, !tbaa !2563
  call void %40(%struct._object* %41), !dbg !15141
  br label %if.end.39

if.end.39:                                        ; preds = %if.else, %if.then.37
  %42 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15142
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !15142
  br label %do.cond, !dbg !15144

do.cond:                                          ; preds = %if.end.39
  br label %do.end, !dbg !15145

do.end:                                           ; preds = %do.cond
  %43 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15147, !tbaa !2563
  %44 = bitcast %struct._object* %43 to %struct._PyDateTime_BaseTZInfo*, !dbg !15148
  %hastzinfo40 = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %44, i32 0, i32 2, !dbg !15149
  %45 = load i8, i8* %hastzinfo40, align 1, !dbg !15149, !tbaa !5575
  %conv41 = sext i8 %45 to i32, !dbg !15150
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !15150
  br i1 %tobool42, label %cond.true.43, label %cond.false.45, !dbg !15150

cond.true.43:                                     ; preds = %do.end
  %46 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15151, !tbaa !2563
  %47 = bitcast %struct._object* %46 to %struct.PyDateTime_DateTime*, !dbg !15153
  %tzinfo44 = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %47, i32 0, i32 4, !dbg !15154
  %48 = load %struct._object*, %struct._object** %tzinfo44, align 8, !dbg !15154, !tbaa !3586
  br label %cond.end.46, !dbg !15150

cond.false.45:                                    ; preds = %do.end
  br label %cond.end.46, !dbg !15155

cond.end.46:                                      ; preds = %cond.false.45, %cond.true.43
  %cond47 = phi %struct._object* [ %48, %cond.true.43 ], [ @_Py_NoneStruct, %cond.false.45 ], !dbg !15150
  %49 = load %struct._object*, %struct._object** %result, align 8, !dbg !15157, !tbaa !2563
  %call48 = call %struct._object* @call_dst(%struct._object* %cond47, %struct._object* %49), !dbg !15160
  store %struct._object* %call48, %struct._object** %dst, align 8, !dbg !15161, !tbaa !2563
  %50 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15162, !tbaa !2563
  %cmp49 = icmp eq %struct._object* %50, null, !dbg !15164
  br i1 %cmp49, label %if.then.51, label %if.end.52, !dbg !15165

if.then.51:                                       ; preds = %cond.end.46
  br label %Fail, !dbg !15166

if.end.52:                                        ; preds = %cond.end.46
  %51 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15167, !tbaa !2563
  %cmp53 = icmp eq %struct._object* %51, @_Py_NoneStruct, !dbg !15169
  br i1 %cmp53, label %if.then.55, label %if.end.56, !dbg !15170

if.then.55:                                       ; preds = %if.end.52
  br label %Inconsistent, !dbg !15171

if.end.56:                                        ; preds = %if.end.52
  %52 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15172, !tbaa !2563
  %call57 = call i32 @delta_bool(%struct.PyDateTime_Delta* %52), !dbg !15173
  %cmp58 = icmp ne i32 %call57, 0, !dbg !15174
  br i1 %cmp58, label %if.then.60, label %if.end.79, !dbg !15175

if.then.60:                                       ; preds = %if.end.56
  %53 = bitcast %struct._object** %temp to i8*, !dbg !15176
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !15176
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !2155, metadata !2553), !dbg !15177
  %54 = load %struct._object*, %struct._object** %result, align 8, !dbg !15178, !tbaa !2563
  store %struct._object* %54, %struct._object** %temp, align 8, !dbg !15177, !tbaa !2563
  %55 = load %struct._object*, %struct._object** %result, align 8, !dbg !15179, !tbaa !2563
  %56 = bitcast %struct._object* %55 to %struct.PyDateTime_DateTime*, !dbg !15180
  %57 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15181, !tbaa !2563
  %58 = bitcast %struct._object* %57 to %struct.PyDateTime_Delta*, !dbg !15182
  %call61 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %56, %struct.PyDateTime_Delta* %58, i32 1), !dbg !15183
  store %struct._object* %call61, %struct._object** %result, align 8, !dbg !15184, !tbaa !2563
  br label %do.body.62, !dbg !15185

do.body.62:                                       ; preds = %if.then.60
  %59 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !15186
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !15186
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp63, metadata !2158, metadata !2553), !dbg !15188
  %60 = load %struct._object*, %struct._object** %temp, align 8, !dbg !15189, !tbaa !2563
  store %struct._object* %60, %struct._object** %_py_decref_tmp63, align 8, !dbg !15188, !tbaa !2563
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !15190, !tbaa !2563
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !15192
  %62 = load i64, i64* %ob_refcnt64, align 8, !dbg !15193, !tbaa !2632
  %dec65 = add i64 %62, -1, !dbg !15193
  store i64 %dec65, i64* %ob_refcnt64, align 8, !dbg !15193, !tbaa !2632
  %cmp66 = icmp ne i64 %dec65, 0, !dbg !15194
  br i1 %cmp66, label %if.then.68, label %if.else.69, !dbg !15195

if.then.68:                                       ; preds = %do.body.62
  br label %if.end.72, !dbg !15196

if.else.69:                                       ; preds = %do.body.62
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !15198, !tbaa !2563
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !15200
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !15200, !tbaa !2640
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !15201
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !15201, !tbaa !2642
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !15202, !tbaa !2563
  call void %65(%struct._object* %66), !dbg !15203
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %67 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !15204
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !15204
  br label %do.cond.73, !dbg !15206

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !15207

do.end.74:                                        ; preds = %do.cond.73
  %68 = load %struct._object*, %struct._object** %result, align 8, !dbg !15209, !tbaa !2563
  %cmp75 = icmp eq %struct._object* %68, null, !dbg !15211
  br i1 %cmp75, label %if.then.77, label %if.end.78, !dbg !15212

if.then.77:                                       ; preds = %do.end.74
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15213

if.end.78:                                        ; preds = %do.end.74
  store i32 0, i32* %cleanup.dest.slot, !dbg !15214
  br label %cleanup, !dbg !15214

cleanup:                                          ; preds = %if.then.77, %if.end.78
  %69 = bitcast %struct._object** %temp to i8*, !dbg !15215
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !15215
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.202 [
    i32 0, label %cleanup.cont
    i32 2, label %Fail
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.79, !dbg !15217

if.end.79:                                        ; preds = %cleanup.cont, %if.end.56
  br label %do.body.80, !dbg !15218

do.body.80:                                       ; preds = %if.end.79
  %70 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !15219
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !15219
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp81, metadata !2160, metadata !2553), !dbg !15221
  %71 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15222, !tbaa !2563
  %72 = bitcast %struct.PyDateTime_Delta* %71 to %struct._object*, !dbg !15223
  store %struct._object* %72, %struct._object** %_py_decref_tmp81, align 8, !dbg !15221, !tbaa !2563
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !15224, !tbaa !2563
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !15226
  %74 = load i64, i64* %ob_refcnt82, align 8, !dbg !15227, !tbaa !2632
  %dec83 = add i64 %74, -1, !dbg !15227
  store i64 %dec83, i64* %ob_refcnt82, align 8, !dbg !15227, !tbaa !2632
  %cmp84 = icmp ne i64 %dec83, 0, !dbg !15228
  br i1 %cmp84, label %if.then.86, label %if.else.87, !dbg !15229

if.then.86:                                       ; preds = %do.body.80
  br label %if.end.90, !dbg !15230

if.else.87:                                       ; preds = %do.body.80
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !15232, !tbaa !2563
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1, !dbg !15234
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !15234, !tbaa !2640
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4, !dbg !15235
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !15235, !tbaa !2642
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !15236, !tbaa !2563
  call void %77(%struct._object* %78), !dbg !15237
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  %79 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !15238
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !15238
  br label %do.cond.91, !dbg !15239

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !15240

do.end.92:                                        ; preds = %do.cond.91
  br label %do.body.93, !dbg !15242

do.body.93:                                       ; preds = %do.end.92
  %80 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !15243
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !15243
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !2162, metadata !2553), !dbg !15245
  %81 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15246, !tbaa !2563
  store %struct._object* %81, %struct._object** %_py_decref_tmp94, align 8, !dbg !15245, !tbaa !2563
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !15247, !tbaa !2563
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !15249
  %83 = load i64, i64* %ob_refcnt95, align 8, !dbg !15250, !tbaa !2632
  %dec96 = add i64 %83, -1, !dbg !15250
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !15250, !tbaa !2632
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !15251
  br i1 %cmp97, label %if.then.99, label %if.else.100, !dbg !15252

if.then.99:                                       ; preds = %do.body.93
  br label %if.end.103, !dbg !15253

if.else.100:                                      ; preds = %do.body.93
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !15255, !tbaa !2563
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !15257
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8, !dbg !15257, !tbaa !2640
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !15258
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8, !dbg !15258, !tbaa !2642
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !15259, !tbaa !2563
  call void %86(%struct._object* %87), !dbg !15260
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  %88 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !15261
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !15261
  br label %do.cond.104, !dbg !15262

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !15263

do.end.105:                                       ; preds = %do.cond.104
  br label %do.body.106, !dbg !15265

do.body.106:                                      ; preds = %do.end.105
  %89 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !15266
  call void @llvm.lifetime.start(i64 8, i8* %89) #1, !dbg !15266
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp107, metadata !2164, metadata !2553), !dbg !15268
  %90 = load %struct._object*, %struct._object** %off, align 8, !dbg !15269, !tbaa !2563
  store %struct._object* %90, %struct._object** %_py_decref_tmp107, align 8, !dbg !15268, !tbaa !2563
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !15270, !tbaa !2563
  %ob_refcnt108 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !15272
  %92 = load i64, i64* %ob_refcnt108, align 8, !dbg !15273, !tbaa !2632
  %dec109 = add i64 %92, -1, !dbg !15273
  store i64 %dec109, i64* %ob_refcnt108, align 8, !dbg !15273, !tbaa !2632
  %cmp110 = icmp ne i64 %dec109, 0, !dbg !15274
  br i1 %cmp110, label %if.then.112, label %if.else.113, !dbg !15275

if.then.112:                                      ; preds = %do.body.106
  br label %if.end.116, !dbg !15276

if.else.113:                                      ; preds = %do.body.106
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !15278, !tbaa !2563
  %ob_type114 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !15280
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type114, align 8, !dbg !15280, !tbaa !2640
  %tp_dealloc115 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !15281
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc115, align 8, !dbg !15281, !tbaa !2642
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !15282, !tbaa !2563
  call void %95(%struct._object* %96), !dbg !15283
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.113, %if.then.112
  %97 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !15284
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !15284
  br label %do.cond.117, !dbg !15285

do.cond.117:                                      ; preds = %if.end.116
  br label %do.end.118, !dbg !15286

do.end.118:                                       ; preds = %do.cond.117
  %98 = load %struct._object*, %struct._object** %result, align 8, !dbg !15288, !tbaa !2563
  store %struct._object* %98, %struct._object** %retval, !dbg !15289
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !15289

Inconsistent:                                     ; preds = %if.then.55
  %99 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !15290, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %99, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.220, i32 0, i32 0)), !dbg !15291
  br label %Fail, !dbg !15291

Fail:                                             ; preds = %Inconsistent, %cleanup, %if.then.51, %if.then.33, %if.then.28, %if.then.23, %if.then.19, %if.then.14
  br label %do.body.119, !dbg !15292

do.body.119:                                      ; preds = %Fail
  %100 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15293
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !15293
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2166, metadata !2553), !dbg !15295
  %101 = load %struct._object*, %struct._object** %off, align 8, !dbg !15296, !tbaa !2563
  store %struct._object* %101, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15295, !tbaa !2563
  %102 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15297, !tbaa !2563
  %cmp120 = icmp ne %struct._object* %102, null, !dbg !15298
  br i1 %cmp120, label %if.then.122, label %if.end.136, !dbg !15299

if.then.122:                                      ; preds = %do.body.119
  br label %do.body.123, !dbg !15300

do.body.123:                                      ; preds = %if.then.122
  %103 = bitcast %struct._object** %_py_decref_tmp124 to i8*, !dbg !15302
  call void @llvm.lifetime.start(i64 8, i8* %103) #1, !dbg !15302
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp124, metadata !2168, metadata !2553), !dbg !15304
  %104 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15305, !tbaa !2563
  store %struct._object* %104, %struct._object** %_py_decref_tmp124, align 8, !dbg !15304, !tbaa !2563
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8, !dbg !15306, !tbaa !2563
  %ob_refcnt125 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 0, !dbg !15308
  %106 = load i64, i64* %ob_refcnt125, align 8, !dbg !15309, !tbaa !2632
  %dec126 = add i64 %106, -1, !dbg !15309
  store i64 %dec126, i64* %ob_refcnt125, align 8, !dbg !15309, !tbaa !2632
  %cmp127 = icmp ne i64 %dec126, 0, !dbg !15310
  br i1 %cmp127, label %if.then.129, label %if.else.130, !dbg !15311

if.then.129:                                      ; preds = %do.body.123
  br label %if.end.133, !dbg !15312

if.else.130:                                      ; preds = %do.body.123
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8, !dbg !15314, !tbaa !2563
  %ob_type131 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !15316
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type131, align 8, !dbg !15316, !tbaa !2640
  %tp_dealloc132 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 4, !dbg !15317
  %109 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc132, align 8, !dbg !15317, !tbaa !2642
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8, !dbg !15318, !tbaa !2563
  call void %109(%struct._object* %110), !dbg !15319
  br label %if.end.133

if.end.133:                                       ; preds = %if.else.130, %if.then.129
  %111 = bitcast %struct._object** %_py_decref_tmp124 to i8*, !dbg !15320
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !15320
  br label %do.cond.134, !dbg !15322

do.cond.134:                                      ; preds = %if.end.133
  br label %do.end.135, !dbg !15323

do.end.135:                                       ; preds = %do.cond.134
  br label %if.end.136, !dbg !15325

if.end.136:                                       ; preds = %do.end.135, %do.body.119
  %112 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15327
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !15327
  br label %do.cond.137, !dbg !15329

do.cond.137:                                      ; preds = %if.end.136
  br label %do.end.138, !dbg !15330

do.end.138:                                       ; preds = %do.cond.137
  br label %do.body.139, !dbg !15332

do.body.139:                                      ; preds = %do.end.138
  %113 = bitcast %struct._object** %_py_xdecref_tmp140 to i8*, !dbg !15333
  call void @llvm.lifetime.start(i64 8, i8* %113) #1, !dbg !15333
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp140, metadata !2171, metadata !2553), !dbg !15335
  %114 = load %struct._object*, %struct._object** %dst, align 8, !dbg !15336, !tbaa !2563
  store %struct._object* %114, %struct._object** %_py_xdecref_tmp140, align 8, !dbg !15335, !tbaa !2563
  %115 = load %struct._object*, %struct._object** %_py_xdecref_tmp140, align 8, !dbg !15337, !tbaa !2563
  %cmp141 = icmp ne %struct._object* %115, null, !dbg !15338
  br i1 %cmp141, label %if.then.143, label %if.end.157, !dbg !15339

if.then.143:                                      ; preds = %do.body.139
  br label %do.body.144, !dbg !15340

do.body.144:                                      ; preds = %if.then.143
  %116 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !15342
  call void @llvm.lifetime.start(i64 8, i8* %116) #1, !dbg !15342
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp145, metadata !2173, metadata !2553), !dbg !15344
  %117 = load %struct._object*, %struct._object** %_py_xdecref_tmp140, align 8, !dbg !15345, !tbaa !2563
  store %struct._object* %117, %struct._object** %_py_decref_tmp145, align 8, !dbg !15344, !tbaa !2563
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !15346, !tbaa !2563
  %ob_refcnt146 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 0, !dbg !15348
  %119 = load i64, i64* %ob_refcnt146, align 8, !dbg !15349, !tbaa !2632
  %dec147 = add i64 %119, -1, !dbg !15349
  store i64 %dec147, i64* %ob_refcnt146, align 8, !dbg !15349, !tbaa !2632
  %cmp148 = icmp ne i64 %dec147, 0, !dbg !15350
  br i1 %cmp148, label %if.then.150, label %if.else.151, !dbg !15351

if.then.150:                                      ; preds = %do.body.144
  br label %if.end.154, !dbg !15352

if.else.151:                                      ; preds = %do.body.144
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !15354, !tbaa !2563
  %ob_type152 = getelementptr inbounds %struct._object, %struct._object* %120, i32 0, i32 1, !dbg !15356
  %121 = load %struct._typeobject*, %struct._typeobject** %ob_type152, align 8, !dbg !15356, !tbaa !2640
  %tp_dealloc153 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %121, i32 0, i32 4, !dbg !15357
  %122 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc153, align 8, !dbg !15357, !tbaa !2642
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !15358, !tbaa !2563
  call void %122(%struct._object* %123), !dbg !15359
  br label %if.end.154

if.end.154:                                       ; preds = %if.else.151, %if.then.150
  %124 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !15360
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !15360
  br label %do.cond.155, !dbg !15362

do.cond.155:                                      ; preds = %if.end.154
  br label %do.end.156, !dbg !15363

do.end.156:                                       ; preds = %do.cond.155
  br label %if.end.157, !dbg !15365

if.end.157:                                       ; preds = %do.end.156, %do.body.139
  %125 = bitcast %struct._object** %_py_xdecref_tmp140 to i8*, !dbg !15367
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !15367
  br label %do.cond.158, !dbg !15368

do.cond.158:                                      ; preds = %if.end.157
  br label %do.end.159, !dbg !15369

do.end.159:                                       ; preds = %do.cond.158
  br label %do.body.160, !dbg !15371

do.body.160:                                      ; preds = %do.end.159
  %126 = bitcast %struct._object** %_py_xdecref_tmp161 to i8*, !dbg !15372
  call void @llvm.lifetime.start(i64 8, i8* %126) #1, !dbg !15372
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp161, metadata !2176, metadata !2553), !dbg !15374
  %127 = load %struct.PyDateTime_Delta*, %struct.PyDateTime_Delta** %delta, align 8, !dbg !15375, !tbaa !2563
  %128 = bitcast %struct.PyDateTime_Delta* %127 to %struct._object*, !dbg !15376
  store %struct._object* %128, %struct._object** %_py_xdecref_tmp161, align 8, !dbg !15374, !tbaa !2563
  %129 = load %struct._object*, %struct._object** %_py_xdecref_tmp161, align 8, !dbg !15377, !tbaa !2563
  %cmp162 = icmp ne %struct._object* %129, null, !dbg !15378
  br i1 %cmp162, label %if.then.164, label %if.end.178, !dbg !15379

if.then.164:                                      ; preds = %do.body.160
  br label %do.body.165, !dbg !15380

do.body.165:                                      ; preds = %if.then.164
  %130 = bitcast %struct._object** %_py_decref_tmp166 to i8*, !dbg !15382
  call void @llvm.lifetime.start(i64 8, i8* %130) #1, !dbg !15382
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp166, metadata !2178, metadata !2553), !dbg !15384
  %131 = load %struct._object*, %struct._object** %_py_xdecref_tmp161, align 8, !dbg !15385, !tbaa !2563
  store %struct._object* %131, %struct._object** %_py_decref_tmp166, align 8, !dbg !15384, !tbaa !2563
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !15386, !tbaa !2563
  %ob_refcnt167 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 0, !dbg !15388
  %133 = load i64, i64* %ob_refcnt167, align 8, !dbg !15389, !tbaa !2632
  %dec168 = add i64 %133, -1, !dbg !15389
  store i64 %dec168, i64* %ob_refcnt167, align 8, !dbg !15389, !tbaa !2632
  %cmp169 = icmp ne i64 %dec168, 0, !dbg !15390
  br i1 %cmp169, label %if.then.171, label %if.else.172, !dbg !15391

if.then.171:                                      ; preds = %do.body.165
  br label %if.end.175, !dbg !15392

if.else.172:                                      ; preds = %do.body.165
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !15394, !tbaa !2563
  %ob_type173 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 1, !dbg !15396
  %135 = load %struct._typeobject*, %struct._typeobject** %ob_type173, align 8, !dbg !15396, !tbaa !2640
  %tp_dealloc174 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %135, i32 0, i32 4, !dbg !15397
  %136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc174, align 8, !dbg !15397, !tbaa !2642
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !15398, !tbaa !2563
  call void %136(%struct._object* %137), !dbg !15399
  br label %if.end.175

if.end.175:                                       ; preds = %if.else.172, %if.then.171
  %138 = bitcast %struct._object** %_py_decref_tmp166 to i8*, !dbg !15400
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !15400
  br label %do.cond.176, !dbg !15402

do.cond.176:                                      ; preds = %if.end.175
  br label %do.end.177, !dbg !15403

do.end.177:                                       ; preds = %do.cond.176
  br label %if.end.178, !dbg !15405

if.end.178:                                       ; preds = %do.end.177, %do.body.160
  %139 = bitcast %struct._object** %_py_xdecref_tmp161 to i8*, !dbg !15407
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !15407
  br label %do.cond.179, !dbg !15408

do.cond.179:                                      ; preds = %if.end.178
  br label %do.end.180, !dbg !15409

do.end.180:                                       ; preds = %do.cond.179
  br label %do.body.181, !dbg !15411

do.body.181:                                      ; preds = %do.end.180
  %140 = bitcast %struct._object** %_py_xdecref_tmp182 to i8*, !dbg !15412
  call void @llvm.lifetime.start(i64 8, i8* %140) #1, !dbg !15412
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp182, metadata !2181, metadata !2553), !dbg !15414
  %141 = load %struct._object*, %struct._object** %result, align 8, !dbg !15415, !tbaa !2563
  store %struct._object* %141, %struct._object** %_py_xdecref_tmp182, align 8, !dbg !15414, !tbaa !2563
  %142 = load %struct._object*, %struct._object** %_py_xdecref_tmp182, align 8, !dbg !15416, !tbaa !2563
  %cmp183 = icmp ne %struct._object* %142, null, !dbg !15417
  br i1 %cmp183, label %if.then.185, label %if.end.199, !dbg !15418

if.then.185:                                      ; preds = %do.body.181
  br label %do.body.186, !dbg !15419

do.body.186:                                      ; preds = %if.then.185
  %143 = bitcast %struct._object** %_py_decref_tmp187 to i8*, !dbg !15421
  call void @llvm.lifetime.start(i64 8, i8* %143) #1, !dbg !15421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp187, metadata !2183, metadata !2553), !dbg !15423
  %144 = load %struct._object*, %struct._object** %_py_xdecref_tmp182, align 8, !dbg !15424, !tbaa !2563
  store %struct._object* %144, %struct._object** %_py_decref_tmp187, align 8, !dbg !15423, !tbaa !2563
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp187, align 8, !dbg !15425, !tbaa !2563
  %ob_refcnt188 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 0, !dbg !15427
  %146 = load i64, i64* %ob_refcnt188, align 8, !dbg !15428, !tbaa !2632
  %dec189 = add i64 %146, -1, !dbg !15428
  store i64 %dec189, i64* %ob_refcnt188, align 8, !dbg !15428, !tbaa !2632
  %cmp190 = icmp ne i64 %dec189, 0, !dbg !15429
  br i1 %cmp190, label %if.then.192, label %if.else.193, !dbg !15430

if.then.192:                                      ; preds = %do.body.186
  br label %if.end.196, !dbg !15431

if.else.193:                                      ; preds = %do.body.186
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp187, align 8, !dbg !15433, !tbaa !2563
  %ob_type194 = getelementptr inbounds %struct._object, %struct._object* %147, i32 0, i32 1, !dbg !15435
  %148 = load %struct._typeobject*, %struct._typeobject** %ob_type194, align 8, !dbg !15435, !tbaa !2640
  %tp_dealloc195 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %148, i32 0, i32 4, !dbg !15436
  %149 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc195, align 8, !dbg !15436, !tbaa !2642
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp187, align 8, !dbg !15437, !tbaa !2563
  call void %149(%struct._object* %150), !dbg !15438
  br label %if.end.196

if.end.196:                                       ; preds = %if.else.193, %if.then.192
  %151 = bitcast %struct._object** %_py_decref_tmp187 to i8*, !dbg !15439
  call void @llvm.lifetime.end(i64 8, i8* %151) #1, !dbg !15439
  br label %do.cond.197, !dbg !15441

do.cond.197:                                      ; preds = %if.end.196
  br label %do.end.198, !dbg !15442

do.end.198:                                       ; preds = %do.cond.197
  br label %if.end.199, !dbg !15444

if.end.199:                                       ; preds = %do.end.198, %do.body.181
  %152 = bitcast %struct._object** %_py_xdecref_tmp182 to i8*, !dbg !15446
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !15446
  br label %do.cond.200, !dbg !15447

do.cond.200:                                      ; preds = %if.end.199
  br label %do.end.201, !dbg !15448

do.end.201:                                       ; preds = %do.cond.200
  store %struct._object* null, %struct._object** %retval, !dbg !15450
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !15450

cleanup.202:                                      ; preds = %do.end.201, %do.end.118, %cleanup, %if.then.10, %if.then.5, %if.then
  %153 = bitcast %struct.PyDateTime_Delta** %delta to i8*, !dbg !15451
  call void @llvm.lifetime.end(i64 8, i8* %153) #1, !dbg !15451
  %154 = bitcast %struct._object** %dst to i8*, !dbg !15451
  call void @llvm.lifetime.end(i64 8, i8* %154) #1, !dbg !15451
  %155 = bitcast %struct._object** %off to i8*, !dbg !15451
  call void @llvm.lifetime.end(i64 8, i8* %155) #1, !dbg !15451
  %156 = bitcast %struct._object** %result to i8*, !dbg !15451
  call void @llvm.lifetime.end(i64 8, i8* %156) #1, !dbg !15451
  %157 = load %struct._object*, %struct._object** %retval, !dbg !15451
  ret %struct._object* %157, !dbg !15451
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tzinfo_reduce(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %state = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %getinitargs = alloca %struct._object*, align 8
  %getstate = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  %dictptr = alloca %struct._object**, align 8
  %_py_decref_tmp90 = alloca %struct._object*, align 8
  %_py_decref_tmp105 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2188, metadata !2553), !dbg !15452
  %0 = bitcast %struct._object** %args to i8*, !dbg !15453
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15453
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !2189, metadata !2553), !dbg !15454
  %1 = bitcast %struct._object** %state to i8*, !dbg !15453
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15453
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !2190, metadata !2553), !dbg !15455
  %2 = bitcast %struct._object** %tmp to i8*, !dbg !15453
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !15453
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !2191, metadata !2553), !dbg !15456
  %3 = bitcast %struct._object** %getinitargs to i8*, !dbg !15457
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !15457
  call void @llvm.dbg.declare(metadata %struct._object** %getinitargs, metadata !2192, metadata !2553), !dbg !15458
  %4 = bitcast %struct._object** %getstate to i8*, !dbg !15457
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !15457
  call void @llvm.dbg.declare(metadata %struct._object** %getstate, metadata !2193, metadata !2553), !dbg !15459
  %call = call %struct._object* @PyTuple_New(i64 0), !dbg !15460
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !15461, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15462, !tbaa !2563
  %cmp = icmp eq %struct._object* %5, null, !dbg !15464
  br i1 %cmp, label %if.then, label %if.end, !dbg !15465

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !15466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15466

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15467, !tbaa !2563
  %call3 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %6, %struct._Py_Identifier* @tzinfo_reduce.PyId___getinitargs__), !dbg !15468
  store %struct._object* %call3, %struct._object** %getinitargs, align 8, !dbg !15469, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %getinitargs, align 8, !dbg !15470, !tbaa !2563
  %cmp4 = icmp ne %struct._object* %7, null, !dbg !15471
  br i1 %cmp4, label %if.then.5, label %if.else.27, !dbg !15472

if.then.5:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %getinitargs, align 8, !dbg !15473, !tbaa !2563
  %9 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15474, !tbaa !2563
  %call6 = call %struct._object* @PyObject_CallObject(%struct._object* %8, %struct._object* %9), !dbg !15475
  store %struct._object* %call6, %struct._object** %args, align 8, !dbg !15476, !tbaa !2563
  br label %do.body, !dbg !15477

do.body:                                          ; preds = %if.then.5
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15478
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !15478
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2194, metadata !2553), !dbg !15480
  %11 = load %struct._object*, %struct._object** %getinitargs, align 8, !dbg !15481, !tbaa !2563
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !15480, !tbaa !2563
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15482, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !15484
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !15485, !tbaa !2632
  %dec = add i64 %13, -1, !dbg !15485
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15485, !tbaa !2632
  %cmp8 = icmp ne i64 %dec, 0, !dbg !15486
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !15487

if.then.9:                                        ; preds = %do.body
  br label %if.end.10, !dbg !15488

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15490, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !15492
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15492, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !15493
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15493, !tbaa !2642
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15494, !tbaa !2563
  call void %16(%struct._object* %17), !dbg !15495
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15496
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !15496
  br label %do.cond, !dbg !15498

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !15499

do.end:                                           ; preds = %do.cond
  %19 = load %struct._object*, %struct._object** %args, align 8, !dbg !15501, !tbaa !2563
  %cmp11 = icmp eq %struct._object* %19, null, !dbg !15502
  br i1 %cmp11, label %if.then.12, label %if.end.26, !dbg !15503

if.then.12:                                       ; preds = %do.end
  br label %do.body.13, !dbg !15504

do.body.13:                                       ; preds = %if.then.12
  %20 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !15505
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !15505
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !2198, metadata !2553), !dbg !15507
  %21 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15508, !tbaa !2563
  store %struct._object* %21, %struct._object** %_py_decref_tmp15, align 8, !dbg !15507, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !15509, !tbaa !2563
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !15511
  %23 = load i64, i64* %ob_refcnt16, align 8, !dbg !15512, !tbaa !2632
  %dec17 = add i64 %23, -1, !dbg !15512
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !15512, !tbaa !2632
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !15513
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !15514

if.then.19:                                       ; preds = %do.body.13
  br label %if.end.23, !dbg !15515

if.else.20:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !15517, !tbaa !2563
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !15519
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !15519, !tbaa !2640
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !15520
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !15520, !tbaa !2642
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !15521, !tbaa !2563
  call void %26(%struct._object* %27), !dbg !15522
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %28 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !15523
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !15523
  br label %do.cond.24, !dbg !15525

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !15526

do.end.25:                                        ; preds = %do.cond.24
  store %struct._object* null, %struct._object** %retval, !dbg !15528
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15528

if.end.26:                                        ; preds = %do.end
  br label %if.end.29, !dbg !15529

if.else.27:                                       ; preds = %if.end
  call void @PyErr_Clear(), !dbg !15530
  %29 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15532, !tbaa !2563
  store %struct._object* %29, %struct._object** %args, align 8, !dbg !15533, !tbaa !2563
  %30 = load %struct._object*, %struct._object** %args, align 8, !dbg !15534, !tbaa !2563
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !15535
  %31 = load i64, i64* %ob_refcnt28, align 8, !dbg !15536, !tbaa !2632
  %inc = add i64 %31, 1, !dbg !15536
  store i64 %inc, i64* %ob_refcnt28, align 8, !dbg !15536, !tbaa !2632
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.27, %if.end.26
  %32 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15537, !tbaa !2563
  %call30 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %32, %struct._Py_Identifier* @tzinfo_reduce.PyId___getstate__), !dbg !15538
  store %struct._object* %call30, %struct._object** %getstate, align 8, !dbg !15539, !tbaa !2563
  %33 = load %struct._object*, %struct._object** %getstate, align 8, !dbg !15540, !tbaa !2563
  %cmp31 = icmp ne %struct._object* %33, null, !dbg !15541
  br i1 %cmp31, label %if.then.32, label %if.else.76, !dbg !15542

if.then.32:                                       ; preds = %if.end.29
  %34 = load %struct._object*, %struct._object** %getstate, align 8, !dbg !15543, !tbaa !2563
  %35 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15544, !tbaa !2563
  %call33 = call %struct._object* @PyObject_CallObject(%struct._object* %34, %struct._object* %35), !dbg !15545
  store %struct._object* %call33, %struct._object** %state, align 8, !dbg !15546, !tbaa !2563
  br label %do.body.34, !dbg !15547

do.body.34:                                       ; preds = %if.then.32
  %36 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !15548
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !15548
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !2202, metadata !2553), !dbg !15550
  %37 = load %struct._object*, %struct._object** %getstate, align 8, !dbg !15551, !tbaa !2563
  store %struct._object* %37, %struct._object** %_py_decref_tmp36, align 8, !dbg !15550, !tbaa !2563
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !15552, !tbaa !2563
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !15554
  %39 = load i64, i64* %ob_refcnt37, align 8, !dbg !15555, !tbaa !2632
  %dec38 = add i64 %39, -1, !dbg !15555
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !15555, !tbaa !2632
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !15556
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !15557

if.then.40:                                       ; preds = %do.body.34
  br label %if.end.44, !dbg !15558

if.else.41:                                       ; preds = %do.body.34
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !15560, !tbaa !2563
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !15562
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !15562, !tbaa !2640
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !15563
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !15563, !tbaa !2642
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !15564, !tbaa !2563
  call void %42(%struct._object* %43), !dbg !15565
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %44 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !15566
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !15566
  br label %do.cond.45, !dbg !15568

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !15569

do.end.46:                                        ; preds = %do.cond.45
  %45 = load %struct._object*, %struct._object** %state, align 8, !dbg !15571, !tbaa !2563
  %cmp47 = icmp eq %struct._object* %45, null, !dbg !15572
  br i1 %cmp47, label %if.then.48, label %if.end.75, !dbg !15573

if.then.48:                                       ; preds = %do.end.46
  br label %do.body.49, !dbg !15574

do.body.49:                                       ; preds = %if.then.48
  %46 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !15575
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !15575
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !2206, metadata !2553), !dbg !15577
  %47 = load %struct._object*, %struct._object** %args, align 8, !dbg !15578, !tbaa !2563
  store %struct._object* %47, %struct._object** %_py_decref_tmp51, align 8, !dbg !15577, !tbaa !2563
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !15579, !tbaa !2563
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !15581
  %49 = load i64, i64* %ob_refcnt52, align 8, !dbg !15582, !tbaa !2632
  %dec53 = add i64 %49, -1, !dbg !15582
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !15582, !tbaa !2632
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !15583
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !15584

if.then.55:                                       ; preds = %do.body.49
  br label %if.end.59, !dbg !15585

if.else.56:                                       ; preds = %do.body.49
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !15587, !tbaa !2563
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !15589
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !15589, !tbaa !2640
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4, !dbg !15590
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !15590, !tbaa !2642
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !15591, !tbaa !2563
  call void %52(%struct._object* %53), !dbg !15592
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %54 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !15593
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !15593
  br label %do.cond.60, !dbg !15595

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !15596

do.end.61:                                        ; preds = %do.cond.60
  br label %do.body.62, !dbg !15598

do.body.62:                                       ; preds = %do.end.61
  %55 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !15599
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !15599
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !2210, metadata !2553), !dbg !15601
  %56 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15602, !tbaa !2563
  store %struct._object* %56, %struct._object** %_py_decref_tmp64, align 8, !dbg !15601, !tbaa !2563
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !15603, !tbaa !2563
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !15605
  %58 = load i64, i64* %ob_refcnt65, align 8, !dbg !15606, !tbaa !2632
  %dec66 = add i64 %58, -1, !dbg !15606
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !15606, !tbaa !2632
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !15607
  br i1 %cmp67, label %if.then.68, label %if.else.69, !dbg !15608

if.then.68:                                       ; preds = %do.body.62
  br label %if.end.72, !dbg !15609

if.else.69:                                       ; preds = %do.body.62
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !15611, !tbaa !2563
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !15613
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !15613, !tbaa !2640
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !15614
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !15614, !tbaa !2642
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !15615, !tbaa !2563
  call void %61(%struct._object* %62), !dbg !15616
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %63 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !15617
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !15617
  br label %do.cond.73, !dbg !15618

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !15619

do.end.74:                                        ; preds = %do.cond.73
  store %struct._object* null, %struct._object** %retval, !dbg !15621
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15621

if.end.75:                                        ; preds = %do.end.46
  br label %if.end.87, !dbg !15622

if.else.76:                                       ; preds = %if.end.29
  %64 = bitcast %struct._object*** %dictptr to i8*, !dbg !15623
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !15623
  call void @llvm.dbg.declare(metadata %struct._object*** %dictptr, metadata !2212, metadata !2553), !dbg !15624
  call void @PyErr_Clear(), !dbg !15625
  store %struct._object* @_Py_NoneStruct, %struct._object** %state, align 8, !dbg !15626, !tbaa !2563
  %65 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15627, !tbaa !2563
  %call78 = call %struct._object** @_PyObject_GetDictPtr(%struct._object* %65), !dbg !15628
  store %struct._object** %call78, %struct._object*** %dictptr, align 8, !dbg !15629, !tbaa !2563
  %66 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !15630, !tbaa !2563
  %tobool = icmp ne %struct._object** %66, null, !dbg !15630
  br i1 %tobool, label %land.lhs.true, label %if.end.84, !dbg !15632

land.lhs.true:                                    ; preds = %if.else.76
  %67 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !15633, !tbaa !2563
  %68 = load %struct._object*, %struct._object** %67, align 8, !dbg !15635, !tbaa !2563
  %tobool79 = icmp ne %struct._object* %68, null, !dbg !15635
  br i1 %tobool79, label %land.lhs.true.80, label %if.end.84, !dbg !15636

land.lhs.true.80:                                 ; preds = %land.lhs.true
  %69 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !15637, !tbaa !2563
  %70 = load %struct._object*, %struct._object** %69, align 8, !dbg !15639, !tbaa !2563
  %call81 = call i64 @PyDict_Size(%struct._object* %70), !dbg !15640
  %tobool82 = icmp ne i64 %call81, 0, !dbg !15640
  br i1 %tobool82, label %if.then.83, label %if.end.84, !dbg !15641

if.then.83:                                       ; preds = %land.lhs.true.80
  %71 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !15642, !tbaa !2563
  %72 = load %struct._object*, %struct._object** %71, align 8, !dbg !15643, !tbaa !2563
  store %struct._object* %72, %struct._object** %state, align 8, !dbg !15644, !tbaa !2563
  br label %if.end.84, !dbg !15645

if.end.84:                                        ; preds = %if.then.83, %land.lhs.true.80, %land.lhs.true, %if.else.76
  %73 = load %struct._object*, %struct._object** %state, align 8, !dbg !15646, !tbaa !2563
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !15647
  %74 = load i64, i64* %ob_refcnt85, align 8, !dbg !15648, !tbaa !2632
  %inc86 = add i64 %74, 1, !dbg !15648
  store i64 %inc86, i64* %ob_refcnt85, align 8, !dbg !15648, !tbaa !2632
  %75 = bitcast %struct._object*** %dictptr to i8*, !dbg !15649
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !15649
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.84, %if.end.75
  br label %do.body.88, !dbg !15650

do.body.88:                                       ; preds = %if.end.87
  %76 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !15651
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !15651
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp90, metadata !2215, metadata !2553), !dbg !15653
  %77 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !15654, !tbaa !2563
  store %struct._object* %77, %struct._object** %_py_decref_tmp90, align 8, !dbg !15653, !tbaa !2563
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !15655, !tbaa !2563
  %ob_refcnt91 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !15657
  %79 = load i64, i64* %ob_refcnt91, align 8, !dbg !15658, !tbaa !2632
  %dec92 = add i64 %79, -1, !dbg !15658
  store i64 %dec92, i64* %ob_refcnt91, align 8, !dbg !15658, !tbaa !2632
  %cmp93 = icmp ne i64 %dec92, 0, !dbg !15659
  br i1 %cmp93, label %if.then.94, label %if.else.95, !dbg !15660

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98, !dbg !15661

if.else.95:                                       ; preds = %do.body.88
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !15663, !tbaa !2563
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !15665
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8, !dbg !15665, !tbaa !2640
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !15666
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8, !dbg !15666, !tbaa !2642
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !15667, !tbaa !2563
  call void %82(%struct._object* %83), !dbg !15668
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  %84 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !15669
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !15669
  br label %do.cond.99, !dbg !15671

do.cond.99:                                       ; preds = %if.end.98
  br label %do.end.100, !dbg !15672

do.end.100:                                       ; preds = %do.cond.99
  %85 = load %struct._object*, %struct._object** %state, align 8, !dbg !15674, !tbaa !2563
  %cmp101 = icmp eq %struct._object* %85, @_Py_NoneStruct, !dbg !15675
  br i1 %cmp101, label %if.then.102, label %if.else.118, !dbg !15676

if.then.102:                                      ; preds = %do.end.100
  br label %do.body.103, !dbg !15677

do.body.103:                                      ; preds = %if.then.102
  %86 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !15678
  call void @llvm.lifetime.start(i64 8, i8* %86) #1, !dbg !15678
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp105, metadata !2217, metadata !2553), !dbg !15680
  %87 = load %struct._object*, %struct._object** %state, align 8, !dbg !15681, !tbaa !2563
  store %struct._object* %87, %struct._object** %_py_decref_tmp105, align 8, !dbg !15680, !tbaa !2563
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !15682, !tbaa !2563
  %ob_refcnt106 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0, !dbg !15684
  %89 = load i64, i64* %ob_refcnt106, align 8, !dbg !15685, !tbaa !2632
  %dec107 = add i64 %89, -1, !dbg !15685
  store i64 %dec107, i64* %ob_refcnt106, align 8, !dbg !15685, !tbaa !2632
  %cmp108 = icmp ne i64 %dec107, 0, !dbg !15686
  br i1 %cmp108, label %if.then.109, label %if.else.110, !dbg !15687

if.then.109:                                      ; preds = %do.body.103
  br label %if.end.113, !dbg !15688

if.else.110:                                      ; preds = %do.body.103
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !15690, !tbaa !2563
  %ob_type111 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !15692
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type111, align 8, !dbg !15692, !tbaa !2640
  %tp_dealloc112 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4, !dbg !15693
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc112, align 8, !dbg !15693, !tbaa !2642
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !15694, !tbaa !2563
  call void %92(%struct._object* %93), !dbg !15695
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.110, %if.then.109
  %94 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !15696
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !15696
  br label %do.cond.114, !dbg !15698

do.cond.114:                                      ; preds = %if.end.113
  br label %do.end.115, !dbg !15699

do.end.115:                                       ; preds = %do.cond.114
  %95 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15701, !tbaa !2563
  %ob_type116 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !15702
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type116, align 8, !dbg !15702, !tbaa !2640
  %97 = load %struct._object*, %struct._object** %args, align 8, !dbg !15703, !tbaa !2563
  %call117 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), %struct._typeobject* %96, %struct._object* %97), !dbg !15704
  store %struct._object* %call117, %struct._object** %retval, !dbg !15705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15705

if.else.118:                                      ; preds = %do.end.100
  %98 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15706, !tbaa !2563
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1, !dbg !15707
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8, !dbg !15707, !tbaa !2640
  %100 = load %struct._object*, %struct._object** %args, align 8, !dbg !15708, !tbaa !2563
  %101 = load %struct._object*, %struct._object** %state, align 8, !dbg !15709, !tbaa !2563
  %call120 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.223, i32 0, i32 0), %struct._typeobject* %99, %struct._object* %100, %struct._object* %101), !dbg !15710
  store %struct._object* %call120, %struct._object** %retval, !dbg !15711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15711

cleanup:                                          ; preds = %if.else.118, %do.end.115, %do.end.74, %do.end.25, %if.then
  %102 = bitcast %struct._object** %getstate to i8*, !dbg !15712
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !15712
  %103 = bitcast %struct._object** %getinitargs to i8*, !dbg !15712
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !15712
  %104 = bitcast %struct._object** %tmp to i8*, !dbg !15712
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !15712
  %105 = bitcast %struct._object** %state to i8*, !dbg !15712
  call void @llvm.lifetime.end(i64 8, i8* %105) #1, !dbg !15712
  %106 = bitcast %struct._object** %args to i8*, !dbg !15712
  call void @llvm.lifetime.end(i64 8, i8* %106) #1, !dbg !15712
  %107 = load %struct._object*, %struct._object** %retval, !dbg !15712
  ret %struct._object* %107, !dbg !15712
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tzinfo_nogo(i8* %methodname) #0 {
entry:
  %methodname.addr = alloca i8*, align 8
  store i8* %methodname, i8** %methodname.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %methodname.addr, metadata !2136, metadata !2553), !dbg !15713
  %0 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !15714, !tbaa !2563
  %1 = load i8*, i8** %methodname.addr, align 8, !dbg !15715, !tbaa !2563
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.215, i32 0, i32 0), i8* %1), !dbg !15716
  ret %struct._object* null, !dbg !15717
}

declare %struct._object* @PyTuple_New(i64) #3

declare %struct._object* @_PyObject_GetAttrId(%struct._object*, %struct._Py_Identifier*) #3

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

declare void @PyErr_Clear() #3

declare %struct._object** @_PyObject_GetDictPtr(%struct._object*) #3

declare i64 @PyDict_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @timezone_dealloc(%struct.PyDateTime_TimeZone* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2225, metadata !2553), !dbg !15718
  br label %do.body, !dbg !15719

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !15720
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15720
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2226, metadata !2553), !dbg !15722
  %1 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15723, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %1, i32 0, i32 1, !dbg !15724
  %2 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15724, !tbaa !3617
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !15722, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !15725, !tbaa !2563
  %cmp = icmp ne %struct._object* %3, null, !dbg !15726
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !15727

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15728, !tbaa !2563
  %offset1 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %4, i32 0, i32 1, !dbg !15730
  store %struct._object* null, %struct._object** %offset1, align 8, !dbg !15731, !tbaa !3617
  br label %do.body.2, !dbg !15732

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15733
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !15733
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2228, metadata !2553), !dbg !15735
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !15736, !tbaa !2563
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !15735, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15737, !tbaa !2563
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !15739
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !15740, !tbaa !2632
  %dec = add i64 %8, -1, !dbg !15740
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15740, !tbaa !2632
  %cmp3 = icmp ne i64 %dec, 0, !dbg !15741
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !15742

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !15743

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15745, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !15747
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15747, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !15748
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15748, !tbaa !2642
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15749, !tbaa !2563
  call void %11(%struct._object* %12), !dbg !15750
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15751
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !15751
  br label %do.cond, !dbg !15753

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !15754

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !15756

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !15758
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !15758
  br label %do.end.7, !dbg !15761

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !15762

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !15763
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !15763
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !2232, metadata !2553), !dbg !15765
  %16 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15766, !tbaa !2563
  %name = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %16, i32 0, i32 2, !dbg !15767
  %17 = load %struct._object*, %struct._object** %name, align 8, !dbg !15767, !tbaa !3643
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !15765, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !15768, !tbaa !2563
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !15769
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !15770

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15771, !tbaa !2563
  %name12 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %19, i32 0, i32 2, !dbg !15773
  store %struct._object* null, %struct._object** %name12, align 8, !dbg !15774, !tbaa !3643
  br label %do.body.13, !dbg !15775

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !15776
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !15776
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !2234, metadata !2553), !dbg !15778
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !15779, !tbaa !2563
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !15778, !tbaa !2563
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !15780, !tbaa !2563
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !15782
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !15783, !tbaa !2632
  %dec16 = add i64 %23, -1, !dbg !15783
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !15783, !tbaa !2632
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !15784
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !15785

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !15786

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !15788, !tbaa !2563
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !15790
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !15790, !tbaa !2640
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !15791
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !15791, !tbaa !2642
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !15792, !tbaa !2563
  call void %26(%struct._object* %27), !dbg !15793
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !15794
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !15794
  br label %do.cond.23, !dbg !15796

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !15797

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !15799

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !15801
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !15801
  br label %do.end.27, !dbg !15802

do.end.27:                                        ; preds = %if.end.25
  %30 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15803, !tbaa !2563
  %31 = bitcast %struct.PyDateTime_TimeZone* %30 to %struct._object*, !dbg !15804
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !15805
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !15805, !tbaa !2640
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !15806
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !15806, !tbaa !6467
  %34 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15807, !tbaa !2563
  %35 = bitcast %struct.PyDateTime_TimeZone* %34 to %struct._object*, !dbg !15808
  %36 = bitcast %struct._object* %35 to i8*, !dbg !15808
  call void %33(i8* %36), !dbg !15809
  ret void, !dbg !15810
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_repr(%struct.PyDateTime_TimeZone* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %type_name = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2242, metadata !2553), !dbg !15811
  %0 = bitcast i8** %type_name to i8*, !dbg !15812
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15812
  call void @llvm.dbg.declare(metadata i8** %type_name, metadata !2243, metadata !2553), !dbg !15813
  %1 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15814, !tbaa !2563
  %2 = bitcast %struct.PyDateTime_TimeZone* %1 to %struct._object*, !dbg !15815
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !15816
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15816, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !15817
  %4 = load i8*, i8** %tp_name, align 8, !dbg !15817, !tbaa !3653
  store i8* %4, i8** %type_name, align 8, !dbg !15813, !tbaa !2563
  %5 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15818, !tbaa !2563
  %6 = bitcast %struct.PyDateTime_TimeZone* %5 to %struct._object*, !dbg !15820
  %7 = load %struct._object*, %struct._object** @PyDateTime_TimeZone_UTC, align 8, !dbg !15821, !tbaa !2563
  %cmp = icmp eq %struct._object* %6, %7, !dbg !15822
  br i1 %cmp, label %if.then, label %if.end, !dbg !15823

if.then:                                          ; preds = %entry
  %8 = load i8*, i8** %type_name, align 8, !dbg !15824, !tbaa !2563
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), i8* %8), !dbg !15825
  store %struct._object* %call, %struct._object** %retval, !dbg !15826
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15826

if.end:                                           ; preds = %entry
  %9 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15827, !tbaa !2563
  %name = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %9, i32 0, i32 2, !dbg !15829
  %10 = load %struct._object*, %struct._object** %name, align 8, !dbg !15829, !tbaa !3643
  %cmp1 = icmp eq %struct._object* %10, null, !dbg !15830
  br i1 %cmp1, label %if.then.2, label %if.end.4, !dbg !15831

if.then.2:                                        ; preds = %if.end
  %11 = load i8*, i8** %type_name, align 8, !dbg !15832, !tbaa !2563
  %12 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15833, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %12, i32 0, i32 1, !dbg !15834
  %13 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15834, !tbaa !3617
  %call3 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), i8* %11, %struct._object* %13), !dbg !15835
  store %struct._object* %call3, %struct._object** %retval, !dbg !15836
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15836

if.end.4:                                         ; preds = %if.end
  %14 = load i8*, i8** %type_name, align 8, !dbg !15837, !tbaa !2563
  %15 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15838, !tbaa !2563
  %offset5 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %15, i32 0, i32 1, !dbg !15839
  %16 = load %struct._object*, %struct._object** %offset5, align 8, !dbg !15839, !tbaa !3617
  %17 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15840, !tbaa !2563
  %name6 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %17, i32 0, i32 2, !dbg !15841
  %18 = load %struct._object*, %struct._object** %name6, align 8, !dbg !15841, !tbaa !3643
  %call7 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.227, i32 0, i32 0), i8* %14, %struct._object* %16, %struct._object* %18), !dbg !15842
  store %struct._object* %call7, %struct._object** %retval, !dbg !15843
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15843

cleanup:                                          ; preds = %if.end.4, %if.then.2, %if.then
  %19 = bitcast i8** %type_name to i8*, !dbg !15844
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !15844
  %20 = load %struct._object*, %struct._object** %retval, !dbg !15844
  ret %struct._object* %20, !dbg !15844
}

; Function Attrs: nounwind uwtable
define internal i64 @timezone_hash(%struct.PyDateTime_TimeZone* %self) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2248, metadata !2553), !dbg !15845
  %0 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15846, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %0, i32 0, i32 1, !dbg !15847
  %1 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15847, !tbaa !3617
  %2 = bitcast %struct._object* %1 to %struct.PyDateTime_Delta*, !dbg !15848
  %call = call i64 @delta_hash(%struct.PyDateTime_Delta* %2), !dbg !15849
  ret i64 %call, !dbg !15850
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_str(%struct.PyDateTime_TimeZone* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %hours = alloca i32, align 4
  %minutes = alloca i32, align 4
  %seconds = alloca i32, align 4
  %offset = alloca %struct._object*, align 8
  %sign = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2251, metadata !2553), !dbg !15851
  %0 = bitcast i32* %hours to i8*, !dbg !15852
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !15852
  call void @llvm.dbg.declare(metadata i32* %hours, metadata !2252, metadata !2553), !dbg !15853
  %1 = bitcast i32* %minutes to i8*, !dbg !15852
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !15852
  call void @llvm.dbg.declare(metadata i32* %minutes, metadata !2253, metadata !2553), !dbg !15854
  %2 = bitcast i32* %seconds to i8*, !dbg !15852
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !15852
  call void @llvm.dbg.declare(metadata i32* %seconds, metadata !2254, metadata !2553), !dbg !15855
  %3 = bitcast %struct._object** %offset to i8*, !dbg !15856
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !15856
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !2255, metadata !2553), !dbg !15857
  call void @llvm.lifetime.start(i64 1, i8* %sign) #1, !dbg !15858
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !2256, metadata !2553), !dbg !15859
  %4 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15860, !tbaa !2563
  %name = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %4, i32 0, i32 2, !dbg !15862
  %5 = load %struct._object*, %struct._object** %name, align 8, !dbg !15862, !tbaa !3643
  %cmp = icmp ne %struct._object* %5, null, !dbg !15863
  br i1 %cmp, label %if.then, label %if.end, !dbg !15864

if.then:                                          ; preds = %entry
  %6 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15865, !tbaa !2563
  %name1 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %6, i32 0, i32 2, !dbg !15867
  %7 = load %struct._object*, %struct._object** %name1, align 8, !dbg !15867, !tbaa !3643
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !15868
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !15869, !tbaa !2632
  %inc = add i64 %8, 1, !dbg !15869
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !15869, !tbaa !2632
  %9 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15870, !tbaa !2563
  %name2 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %9, i32 0, i32 2, !dbg !15871
  %10 = load %struct._object*, %struct._object** %name2, align 8, !dbg !15871, !tbaa !3643
  store %struct._object* %10, %struct._object** %retval, !dbg !15872
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15872

if.end:                                           ; preds = %entry
  %11 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15873, !tbaa !2563
  %offset3 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %11, i32 0, i32 1, !dbg !15875
  %12 = load %struct._object*, %struct._object** %offset3, align 8, !dbg !15875, !tbaa !3617
  %13 = bitcast %struct._object* %12 to %struct.PyDateTime_Delta*, !dbg !15876
  %days = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %13, i32 0, i32 2, !dbg !15877
  %14 = load i32, i32* %days, align 4, !dbg !15877, !tbaa !3363
  %cmp4 = icmp slt i32 %14, 0, !dbg !15878
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !15879

if.then.5:                                        ; preds = %if.end
  store i8 45, i8* %sign, align 1, !dbg !15880, !tbaa !3415
  %15 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15882, !tbaa !2563
  %offset6 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %15, i32 0, i32 1, !dbg !15883
  %16 = load %struct._object*, %struct._object** %offset6, align 8, !dbg !15883, !tbaa !3617
  %17 = bitcast %struct._object* %16 to %struct.PyDateTime_Delta*, !dbg !15884
  %call = call %struct._object* @delta_negative(%struct.PyDateTime_Delta* %17), !dbg !15885
  store %struct._object* %call, %struct._object** %offset, align 8, !dbg !15886, !tbaa !2563
  %18 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15887, !tbaa !2563
  %cmp7 = icmp eq %struct._object* %18, null, !dbg !15889
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !15890

if.then.8:                                        ; preds = %if.then.5
  store %struct._object* null, %struct._object** %retval, !dbg !15891
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15891

if.end.9:                                         ; preds = %if.then.5
  br label %if.end.13, !dbg !15892

if.else:                                          ; preds = %if.end
  store i8 43, i8* %sign, align 1, !dbg !15893, !tbaa !3415
  %19 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15895, !tbaa !2563
  %offset10 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %19, i32 0, i32 1, !dbg !15896
  %20 = load %struct._object*, %struct._object** %offset10, align 8, !dbg !15896, !tbaa !3617
  store %struct._object* %20, %struct._object** %offset, align 8, !dbg !15897, !tbaa !2563
  %21 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15898, !tbaa !2563
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !15899
  %22 = load i64, i64* %ob_refcnt11, align 8, !dbg !15900, !tbaa !2632
  %inc12 = add i64 %22, 1, !dbg !15900
  store i64 %inc12, i64* %ob_refcnt11, align 8, !dbg !15900, !tbaa !2632
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.end.9
  %23 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15901, !tbaa !2563
  %24 = bitcast %struct._object* %23 to %struct.PyDateTime_Delta*, !dbg !15902
  %seconds14 = getelementptr inbounds %struct.PyDateTime_Delta, %struct.PyDateTime_Delta* %24, i32 0, i32 3, !dbg !15903
  %25 = load i32, i32* %seconds14, align 4, !dbg !15903, !tbaa !3368
  store i32 %25, i32* %seconds, align 4, !dbg !15904, !tbaa !3325
  br label %do.body, !dbg !15905

do.body:                                          ; preds = %if.end.13
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15906
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !15906
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2257, metadata !2553), !dbg !15908
  %27 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15909, !tbaa !2563
  store %struct._object* %27, %struct._object** %_py_decref_tmp, align 8, !dbg !15908, !tbaa !2563
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15910, !tbaa !2563
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !15912
  %29 = load i64, i64* %ob_refcnt15, align 8, !dbg !15913, !tbaa !2632
  %dec = add i64 %29, -1, !dbg !15913
  store i64 %dec, i64* %ob_refcnt15, align 8, !dbg !15913, !tbaa !2632
  %cmp16 = icmp ne i64 %dec, 0, !dbg !15914
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !15915

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !15916

if.else.18:                                       ; preds = %do.body
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15918, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !15920
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15920, !tbaa !2640
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !15921
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15921, !tbaa !2642
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15922, !tbaa !2563
  call void %32(%struct._object* %33), !dbg !15923
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.18, %if.then.17
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15924
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !15924
  br label %do.cond, !dbg !15926

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !15927

do.end:                                           ; preds = %do.cond
  %35 = load i32, i32* %seconds, align 4, !dbg !15929, !tbaa !3325
  %call20 = call i32 @divmod(i32 %35, i32 60, i32* %seconds), !dbg !15930
  store i32 %call20, i32* %minutes, align 4, !dbg !15931, !tbaa !3325
  %36 = load i32, i32* %minutes, align 4, !dbg !15932, !tbaa !3325
  %call21 = call i32 @divmod(i32 %36, i32 60, i32* %minutes), !dbg !15933
  store i32 %call21, i32* %hours, align 4, !dbg !15934, !tbaa !3325
  %37 = load i8, i8* %sign, align 1, !dbg !15935, !tbaa !3415
  %conv = sext i8 %37 to i32, !dbg !15935
  %38 = load i32, i32* %hours, align 4, !dbg !15936, !tbaa !3325
  %39 = load i32, i32* %minutes, align 4, !dbg !15937, !tbaa !3325
  %call22 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.228, i32 0, i32 0), i32 %conv, i32 %38, i32 %39), !dbg !15938
  store %struct._object* %call22, %struct._object** %retval, !dbg !15939
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15939

cleanup:                                          ; preds = %do.end, %if.then.8, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %sign) #1, !dbg !15940
  %40 = bitcast %struct._object** %offset to i8*, !dbg !15940
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !15940
  %41 = bitcast i32* %seconds to i8*, !dbg !15940
  call void @llvm.lifetime.end(i64 4, i8* %41) #1, !dbg !15940
  %42 = bitcast i32* %minutes to i8*, !dbg !15940
  call void @llvm.lifetime.end(i64 4, i8* %42) #1, !dbg !15940
  %43 = bitcast i32* %hours to i8*, !dbg !15940
  call void @llvm.lifetime.end(i64 4, i8* %43) #1, !dbg !15940
  %44 = load %struct._object*, %struct._object** %retval, !dbg !15940
  ret %struct._object* %44, !dbg !15940
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_richcompare(%struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone* %other, i32 %op) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %other.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %op.addr = alloca i32, align 4
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2263, metadata !2553), !dbg !15941
  store %struct.PyDateTime_TimeZone* %other, %struct.PyDateTime_TimeZone** %other.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %other.addr, metadata !2264, metadata !2553), !dbg !15942
  store i32 %op, i32* %op.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !2265, metadata !2553), !dbg !15943
  %0 = load i32, i32* %op.addr, align 4, !dbg !15944, !tbaa !3325
  %cmp = icmp ne i32 %0, 2, !dbg !15946
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15947

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !15948, !tbaa !3325
  %cmp1 = icmp ne i32 %1, 3, !dbg !15950
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15951

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !15952, !tbaa !2632
  %inc = add i64 %2, 1, !dbg !15952
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8, !dbg !15952, !tbaa !2632
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval, !dbg !15953
  br label %return, !dbg !15953

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %other.addr, align 8, !dbg !15954, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_TimeZone* %3 to %struct._object*, !dbg !15956
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !15957
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15957, !tbaa !2640
  %cmp2 = icmp ne %struct._typeobject* %5, @PyDateTime_TimeZoneType, !dbg !15958
  br i1 %cmp2, label %if.then.3, label %if.end.8, !dbg !15959

if.then.3:                                        ; preds = %if.end
  %6 = load i32, i32* %op.addr, align 4, !dbg !15960, !tbaa !3325
  %cmp4 = icmp eq i32 %6, 2, !dbg !15963
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !15964

if.then.5:                                        ; preds = %if.then.3
  %7 = load i64, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !15965, !tbaa !2632
  %inc6 = add i64 %7, 1, !dbg !15965
  store i64 %inc6, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !15965, !tbaa !2632
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %retval, !dbg !15966
  br label %return, !dbg !15966

if.else:                                          ; preds = %if.then.3
  %8 = load i64, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !15967, !tbaa !2632
  %inc7 = add i64 %8, 1, !dbg !15967
  store i64 %inc7, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !15967, !tbaa !2632
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %retval, !dbg !15968
  br label %return, !dbg !15968

if.end.8:                                         ; preds = %if.end
  %9 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !15969, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %9, i32 0, i32 1, !dbg !15970
  %10 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15970, !tbaa !3617
  %11 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %other.addr, align 8, !dbg !15971, !tbaa !2563
  %offset9 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %11, i32 0, i32 1, !dbg !15972
  %12 = load %struct._object*, %struct._object** %offset9, align 8, !dbg !15972, !tbaa !3617
  %13 = load i32, i32* %op.addr, align 4, !dbg !15973, !tbaa !3325
  %call = call %struct._object* @delta_richcompare(%struct._object* %10, %struct._object* %12, i32 %13), !dbg !15974
  store %struct._object* %call, %struct._object** %retval, !dbg !15975
  br label %return, !dbg !15975

return:                                           ; preds = %if.end.8, %if.else, %if.then.5, %if.then
  %14 = load %struct._object*, %struct._object** %retval, !dbg !15976
  ret %struct._object* %14, !dbg !15976
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %offset = alloca %struct._object*, align 8
  %name = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2297, metadata !2553), !dbg !15977
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2298, metadata !2553), !dbg !15978
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2299, metadata !2553), !dbg !15979
  %0 = bitcast %struct._object** %offset to i8*, !dbg !15980
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15980
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !2300, metadata !2553), !dbg !15981
  %1 = bitcast %struct._object** %name to i8*, !dbg !15982
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15982
  call void @llvm.dbg.declare(metadata %struct._object** %name, metadata !2301, metadata !2553), !dbg !15983
  store %struct._object* null, %struct._object** %name, align 8, !dbg !15983, !tbaa !2563
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15984, !tbaa !2563
  %3 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !15986, !tbaa !2563
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %2, %struct._object* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.236, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @timezone_kws, i32 0, i32 0), %struct._typeobject* @PyDateTime_DeltaType, %struct._object** %offset, %struct._typeobject* @PyUnicode_Type, %struct._object** %name), !dbg !15987
  %tobool = icmp ne i32 %call, 0, !dbg !15987
  br i1 %tobool, label %if.then, label %if.end, !dbg !15988

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %offset, align 8, !dbg !15989, !tbaa !2563
  %5 = load %struct._object*, %struct._object** %name, align 8, !dbg !15990, !tbaa !2563
  %call1 = call %struct._object* @new_timezone(%struct._object* %4, %struct._object* %5), !dbg !15991
  store %struct._object* %call1, %struct._object** %retval, !dbg !15992
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15992

if.end:                                           ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !15993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15993

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast %struct._object** %name to i8*, !dbg !15994
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !15994
  %7 = bitcast %struct._object** %offset to i8*, !dbg !15994
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !15994
  %8 = load %struct._object*, %struct._object** %retval, !dbg !15994
  ret %struct._object* %8, !dbg !15994
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_tzname(%struct.PyDateTime_TimeZone* %self, %struct._object* %dt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %dt.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2270, metadata !2553), !dbg !15995
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2271, metadata !2553), !dbg !15996
  %0 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !15997, !tbaa !2563
  %call = call i32 @_timezone_check_argument(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0)), !dbg !15999
  %cmp = icmp eq i32 %call, -1, !dbg !16000
  br i1 %cmp, label %if.then, label %if.end, !dbg !16001

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !16002
  br label %return, !dbg !16002

if.end:                                           ; preds = %entry
  %1 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16003, !tbaa !2563
  %call1 = call %struct._object* @timezone_str(%struct.PyDateTime_TimeZone* %1), !dbg !16004
  store %struct._object* %call1, %struct._object** %retval, !dbg !16005
  br label %return, !dbg !16005

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval, !dbg !16006
  ret %struct._object* %2, !dbg !16006
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_utcoffset(%struct.PyDateTime_TimeZone* %self, %struct._object* %dt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %dt.addr = alloca %struct._object*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2280, metadata !2553), !dbg !16007
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2281, metadata !2553), !dbg !16008
  %0 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !16009, !tbaa !2563
  %call = call i32 @_timezone_check_argument(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0)), !dbg !16011
  %cmp = icmp eq i32 %call, -1, !dbg !16012
  br i1 %cmp, label %if.then, label %if.end, !dbg !16013

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !16014
  br label %return, !dbg !16014

if.end:                                           ; preds = %entry
  %1 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16015, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %1, i32 0, i32 1, !dbg !16016
  %2 = load %struct._object*, %struct._object** %offset, align 8, !dbg !16016, !tbaa !3617
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0, !dbg !16017
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !16018, !tbaa !2632
  %inc = add i64 %3, 1, !dbg !16018
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !16018, !tbaa !2632
  %4 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16019, !tbaa !2563
  %offset1 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %4, i32 0, i32 1, !dbg !16020
  %5 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !16020, !tbaa !3617
  store %struct._object* %5, %struct._object** %retval, !dbg !16021
  br label %return, !dbg !16021

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct._object*, %struct._object** %retval, !dbg !16022
  ret %struct._object* %6, !dbg !16022
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_dst(%struct._object* %self, %struct._object* %dt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dt.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2284, metadata !2553), !dbg !16023
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2285, metadata !2553), !dbg !16024
  %0 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !16025, !tbaa !2563
  %call = call i32 @_timezone_check_argument(%struct._object* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0)), !dbg !16027
  %cmp = icmp eq i32 %call, -1, !dbg !16028
  br i1 %cmp, label %if.then, label %if.end, !dbg !16029

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !16030
  br label %return, !dbg !16030

if.end:                                           ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !16031, !tbaa !2632
  %inc = add i64 %1, 1, !dbg !16031
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !16031, !tbaa !2632
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !16032
  br label %return, !dbg !16032

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval, !dbg !16033
  ret %struct._object* %2, !dbg !16033
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_fromutc(%struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_DateTime* %dt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  %dt.addr = alloca %struct.PyDateTime_DateTime*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2290, metadata !2553), !dbg !16034
  store %struct.PyDateTime_DateTime* %dt, %struct.PyDateTime_DateTime** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_DateTime** %dt.addr, metadata !2291, metadata !2553), !dbg !16035
  %0 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %dt.addr, align 8, !dbg !16036, !tbaa !2563
  %1 = bitcast %struct.PyDateTime_DateTime* %0 to %struct._object*, !dbg !16038
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !16039
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !16039, !tbaa !2640
  %cmp = icmp eq %struct._typeobject* %2, @PyDateTime_DateTimeType, !dbg !16040
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !16041

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %dt.addr, align 8, !dbg !16042, !tbaa !2563
  %4 = bitcast %struct.PyDateTime_DateTime* %3 to %struct._object*, !dbg !16044
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !16045
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !16045, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %5, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !16046
  %tobool = icmp ne i32 %call, 0, !dbg !16046
  br i1 %tobool, label %if.end, label %if.then, !dbg !16047

if.then:                                          ; preds = %lor.lhs.false
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !16048, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.216, i32 0, i32 0)), !dbg !16050
  store %struct._object* null, %struct._object** %retval, !dbg !16051
  br label %return, !dbg !16051

if.end:                                           ; preds = %lor.lhs.false, %entry
  %7 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %dt.addr, align 8, !dbg !16052, !tbaa !2563
  %8 = bitcast %struct.PyDateTime_DateTime* %7 to %struct._PyDateTime_BaseTZInfo*, !dbg !16054
  %hastzinfo = getelementptr inbounds %struct._PyDateTime_BaseTZInfo, %struct._PyDateTime_BaseTZInfo* %8, i32 0, i32 2, !dbg !16055
  %9 = load i8, i8* %hastzinfo, align 1, !dbg !16055, !tbaa !5575
  %tobool2 = icmp ne i8 %9, 0, !dbg !16056
  br i1 %tobool2, label %lor.lhs.false.3, label %if.then.5, !dbg !16057

lor.lhs.false.3:                                  ; preds = %if.end
  %10 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %dt.addr, align 8, !dbg !16058, !tbaa !2563
  %tzinfo = getelementptr inbounds %struct.PyDateTime_DateTime, %struct.PyDateTime_DateTime* %10, i32 0, i32 4, !dbg !16060
  %11 = load %struct._object*, %struct._object** %tzinfo, align 8, !dbg !16060, !tbaa !3586
  %12 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16061, !tbaa !2563
  %13 = bitcast %struct.PyDateTime_TimeZone* %12 to %struct._object*, !dbg !16062
  %cmp4 = icmp ne %struct._object* %11, %13, !dbg !16063
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !16064

if.then.5:                                        ; preds = %lor.lhs.false.3, %if.end
  %14 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !16065, !tbaa !2563
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217, i32 0, i32 0)), !dbg !16067
  store %struct._object* null, %struct._object** %retval, !dbg !16068
  br label %return, !dbg !16068

if.end.6:                                         ; preds = %lor.lhs.false.3
  %15 = load %struct.PyDateTime_DateTime*, %struct.PyDateTime_DateTime** %dt.addr, align 8, !dbg !16069, !tbaa !2563
  %16 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16070, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %16, i32 0, i32 1, !dbg !16071
  %17 = load %struct._object*, %struct._object** %offset, align 8, !dbg !16071, !tbaa !3617
  %18 = bitcast %struct._object* %17 to %struct.PyDateTime_Delta*, !dbg !16072
  %call7 = call %struct._object* @add_datetime_timedelta(%struct.PyDateTime_DateTime* %15, %struct.PyDateTime_Delta* %18, i32 1), !dbg !16073
  store %struct._object* %call7, %struct._object** %retval, !dbg !16074
  br label %return, !dbg !16074

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %19 = load %struct._object*, %struct._object** %retval, !dbg !16075
  ret %struct._object* %19, !dbg !16075
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @timezone_getinitargs(%struct.PyDateTime_TimeZone* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyDateTime_TimeZone*, align 8
  store %struct.PyDateTime_TimeZone* %self, %struct.PyDateTime_TimeZone** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_TimeZone** %self.addr, metadata !2294, metadata !2553), !dbg !16076
  %0 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16077, !tbaa !2563
  %name = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %0, i32 0, i32 2, !dbg !16079
  %1 = load %struct._object*, %struct._object** %name, align 8, !dbg !16079, !tbaa !3643
  %cmp = icmp eq %struct._object* %1, null, !dbg !16080
  br i1 %cmp, label %if.then, label %if.end, !dbg !16081

if.then:                                          ; preds = %entry
  %2 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16082, !tbaa !2563
  %offset = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %2, i32 0, i32 1, !dbg !16083
  %3 = load %struct._object*, %struct._object** %offset, align 8, !dbg !16083, !tbaa !3617
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.234, i32 0, i32 0), %struct._object* %3), !dbg !16084
  store %struct._object* %call, %struct._object** %retval, !dbg !16085
  br label %return, !dbg !16085

if.end:                                           ; preds = %entry
  %4 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16086, !tbaa !2563
  %offset1 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %4, i32 0, i32 1, !dbg !16087
  %5 = load %struct._object*, %struct._object** %offset1, align 8, !dbg !16087, !tbaa !3617
  %6 = load %struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone** %self.addr, align 8, !dbg !16088, !tbaa !2563
  %name2 = getelementptr inbounds %struct.PyDateTime_TimeZone, %struct.PyDateTime_TimeZone* %6, i32 0, i32 2, !dbg !16089
  %7 = load %struct._object*, %struct._object** %name2, align 8, !dbg !16089, !tbaa !3643
  %call3 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i32 0, i32 0), %struct._object* %5, %struct._object* %7), !dbg !16090
  store %struct._object* %call3, %struct._object** %retval, !dbg !16091
  br label %return, !dbg !16091

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !16092
  ret %struct._object* %8, !dbg !16092
}

; Function Attrs: nounwind uwtable
define internal i32 @_timezone_check_argument(%struct._object* %dt, i8* %meth) #0 {
entry:
  %retval = alloca i32, align 4
  %dt.addr = alloca %struct._object*, align 8
  %meth.addr = alloca i8*, align 8
  store %struct._object* %dt, %struct._object** %dt.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct._object** %dt.addr, metadata !2276, metadata !2553), !dbg !16093
  store i8* %meth, i8** %meth.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i8** %meth.addr, metadata !2277, metadata !2553), !dbg !16094
  %0 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !16095, !tbaa !2563
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct, !dbg !16097
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16098

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !16099, !tbaa !2563
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !16101
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !16101, !tbaa !2640
  %cmp1 = icmp eq %struct._typeobject* %2, @PyDateTime_DateTimeType, !dbg !16102
  br i1 %cmp1, label %if.then, label %lor.lhs.false.2, !dbg !16103

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %3 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !16104, !tbaa !2563
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !16106
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !16106, !tbaa !2640
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* @PyDateTime_DateTimeType), !dbg !16107
  %tobool = icmp ne i32 %call, 0, !dbg !16107
  br i1 %tobool, label %if.then, label %if.end, !dbg !16108

if.then:                                          ; preds = %lor.lhs.false.2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, !dbg !16109
  br label %return, !dbg !16109

if.end:                                           ; preds = %lor.lhs.false.2
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !16110, !tbaa !2563
  %6 = load i8*, i8** %meth.addr, align 8, !dbg !16111, !tbaa !2563
  %7 = load %struct._object*, %struct._object** %dt.addr, align 8, !dbg !16112, !tbaa !2563
  %ob_type4 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !16113
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !16113, !tbaa !2640
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 1, !dbg !16114
  %9 = load i8*, i8** %tp_name, align 8, !dbg !16114, !tbaa !3653
  %call5 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.233, i32 0, i32 0), i8* %6, i8* %9), !dbg !16115
  store i32 -1, i32* %retval, !dbg !16116
  br label %return, !dbg !16116

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, !dbg !16117
  ret i32 %10, !dbg !16117
}

; Function Attrs: nounwind uwtable
define internal void @normalize_d_s_us(i32* %d, i32* %s, i32* %us) #0 {
entry:
  %d.addr = alloca i32*, align 8
  %s.addr = alloca i32*, align 8
  %us.addr = alloca i32*, align 8
  store i32* %d, i32** %d.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %d.addr, metadata !2316, metadata !2553), !dbg !16118
  store i32* %s, i32** %s.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %s.addr, metadata !2317, metadata !2553), !dbg !16119
  store i32* %us, i32** %us.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata i32** %us.addr, metadata !2318, metadata !2553), !dbg !16120
  %0 = load i32*, i32** %us.addr, align 8, !dbg !16121, !tbaa !2563
  %1 = load i32, i32* %0, align 4, !dbg !16123, !tbaa !3325
  %cmp = icmp slt i32 %1, 0, !dbg !16124
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16125

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32*, i32** %us.addr, align 8, !dbg !16126, !tbaa !2563
  %3 = load i32, i32* %2, align 4, !dbg !16128, !tbaa !3325
  %cmp1 = icmp sge i32 %3, 1000000, !dbg !16129
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16130

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i32*, i32** %s.addr, align 8, !dbg !16131, !tbaa !2563
  %5 = load i32*, i32** %us.addr, align 8, !dbg !16133, !tbaa !2563
  call void @normalize_pair(i32* %4, i32* %5, i32 1000000), !dbg !16134
  br label %if.end, !dbg !16135

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load i32*, i32** %s.addr, align 8, !dbg !16136, !tbaa !2563
  %7 = load i32, i32* %6, align 4, !dbg !16138, !tbaa !3325
  %cmp2 = icmp slt i32 %7, 0, !dbg !16139
  br i1 %cmp2, label %if.then.5, label %lor.lhs.false.3, !dbg !16140

lor.lhs.false.3:                                  ; preds = %if.end
  %8 = load i32*, i32** %s.addr, align 8, !dbg !16141, !tbaa !2563
  %9 = load i32, i32* %8, align 4, !dbg !16143, !tbaa !3325
  %cmp4 = icmp sge i32 %9, 86400, !dbg !16144
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !16145

if.then.5:                                        ; preds = %lor.lhs.false.3, %if.end
  %10 = load i32*, i32** %d.addr, align 8, !dbg !16146, !tbaa !2563
  %11 = load i32*, i32** %s.addr, align 8, !dbg !16148, !tbaa !2563
  call void @normalize_pair(i32* %10, i32* %11, i32 86400), !dbg !16149
  br label %if.end.6, !dbg !16150

if.end.6:                                         ; preds = %if.then.5, %lor.lhs.false.3
  ret void, !dbg !16151
}

; Function Attrs: nounwind uwtable
define internal i32 @check_delta_day_range(i32 %days) #0 {
entry:
  %retval = alloca i32, align 4
  %days.addr = alloca i32, align 4
  store i32 %days, i32* %days.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %days.addr, metadata !2321, metadata !2553), !dbg !16152
  %0 = load i32, i32* %days.addr, align 4, !dbg !16153, !tbaa !3325
  %cmp = icmp sle i32 -999999999, %0, !dbg !16155
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16156

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %days.addr, align 4, !dbg !16157, !tbaa !3325
  %cmp1 = icmp sle i32 %1, 999999999, !dbg !16159
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16160

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, !dbg !16161
  br label %return, !dbg !16161

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !16162, !tbaa !2563
  %3 = load i32, i32* %days.addr, align 4, !dbg !16163, !tbaa !3325
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.239, i32 0, i32 0), i32 %3, i32 999999999), !dbg !16164
  store i32 -1, i32* %retval, !dbg !16165
  br label %return, !dbg !16165

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, !dbg !16166
  ret i32 %4, !dbg !16166
}

; Function Attrs: nounwind uwtable
define internal void @set_date_fields(%struct.PyDateTime_Date* %self, i32 %y, i32 %m, i32 %d) #0 {
entry:
  %self.addr = alloca %struct.PyDateTime_Date*, align 8
  %y.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %d.addr = alloca i32, align 4
  store %struct.PyDateTime_Date* %self, %struct.PyDateTime_Date** %self.addr, align 8, !tbaa !2563
  call void @llvm.dbg.declare(metadata %struct.PyDateTime_Date** %self.addr, metadata !2335, metadata !2553), !dbg !16167
  store i32 %y, i32* %y.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !2336, metadata !2553), !dbg !16168
  store i32 %m, i32* %m.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !2337, metadata !2553), !dbg !16169
  store i32 %d, i32* %d.addr, align 4, !tbaa !3325
  call void @llvm.dbg.declare(metadata i32* %d.addr, metadata !2338, metadata !2553), !dbg !16170
  %0 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !16171, !tbaa !2563
  %hashcode = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %0, i32 0, i32 1, !dbg !16172
  store i64 -1, i64* %hashcode, align 8, !dbg !16173, !tbaa !3676
  %1 = load i32, i32* %y.addr, align 4, !dbg !16174, !tbaa !3325
  %and = and i32 %1, 65280, !dbg !16175
  %shr = ashr i32 %and, 8, !dbg !16176
  %conv = trunc i32 %shr to i8, !dbg !16177
  %2 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !16178, !tbaa !2563
  %data = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %2, i32 0, i32 3, !dbg !16179
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i32 0, i64 0, !dbg !16180
  store i8 %conv, i8* %arrayidx, align 1, !dbg !16181, !tbaa !3415
  %3 = load i32, i32* %y.addr, align 4, !dbg !16182, !tbaa !3325
  %and1 = and i32 %3, 255, !dbg !16183
  %conv2 = trunc i32 %and1 to i8, !dbg !16184
  %4 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !16185, !tbaa !2563
  %data3 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %4, i32 0, i32 3, !dbg !16186
  %arrayidx4 = getelementptr [4 x i8], [4 x i8]* %data3, i32 0, i64 1, !dbg !16187
  store i8 %conv2, i8* %arrayidx4, align 1, !dbg !16188, !tbaa !3415
  %5 = load i32, i32* %m.addr, align 4, !dbg !16189, !tbaa !3325
  %conv5 = trunc i32 %5 to i8, !dbg !16190
  %6 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !16191, !tbaa !2563
  %data6 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %6, i32 0, i32 3, !dbg !16192
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %data6, i32 0, i64 2, !dbg !16193
  store i8 %conv5, i8* %arrayidx7, align 1, !dbg !16194, !tbaa !3415
  %7 = load i32, i32* %d.addr, align 4, !dbg !16195, !tbaa !3325
  %conv8 = trunc i32 %7 to i8, !dbg !16196
  %8 = load %struct.PyDateTime_Date*, %struct.PyDateTime_Date** %self.addr, align 8, !dbg !16197, !tbaa !2563
  %data9 = getelementptr inbounds %struct.PyDateTime_Date, %struct.PyDateTime_Date* %8, i32 0, i32 3, !dbg !16198
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %data9, i32 0, i64 3, !dbg !16199
  store i8 %conv8, i8* %arrayidx10, align 1, !dbg !16200, !tbaa !3415
  ret void, !dbg !16201
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2548, !2549, !2550}
!llvm.ident = !{!2551}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !8, subprograms: !456, globals: !2374)
!1 = !DIFile(filename: "_datetimemodule.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 57, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./Include/pytime.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7}
!6 = !DIEnumerator(name: "_PyTime_ROUND_DOWN", value: 0)
!7 = !DIEnumerator(name: "_PyTime_ROUND_UP", value: 1)
!8 = !{!9, !10, !355, !368, !353, !377, !378, !386, !16, !99, !387, !394, !406, !57, !418, !426, !49, !445, !36, !22, !365, !448}
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !12, line: 109, baseType: !13)
!12 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !12, line: 105, size: 128, align: 64, elements: !14)
!14 = !{!15, !23}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !13, file: !12, line: 107, baseType: !16, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !17, line: 177, baseType: !18)
!17 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !19, line: 102, baseType: !20)
!19 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !21, line: 181, baseType: !22)
!21 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!22 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !13, file: !12, line: 108, baseType: !24, size: 64, align: 64, offset: 64)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!25 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !12, line: 334, size: 3200, align: 64, elements: !26)
!26 = !{!27, !33, !37, !38, !39, !44, !107, !112, !117, !118, !123, !175, !206, !218, !224, !225, !226, !228, !230, !261, !262, !263, !272, !273, !278, !279, !281, !283, !293, !303, !321, !322, !323, !325, !327, !328, !330, !335, !340, !345, !346, !347, !348, !349, !350, !351, !352, !354}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !25, file: !12, line: 335, baseType: !28, size: 192, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !12, line: 114, baseType: !29)
!29 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 111, size: 192, align: 64, elements: !30)
!30 = !{!31, !32}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !29, file: !12, line: 112, baseType: !11, size: 128, align: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !29, file: !12, line: 113, baseType: !16, size: 64, align: 64, offset: 128)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !25, file: !12, line: 336, baseType: !34, size: 64, align: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64, align: 64)
!35 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!36 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !25, file: !12, line: 337, baseType: !16, size: 64, align: 64, offset: 256)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !25, file: !12, line: 337, baseType: !16, size: 64, align: 64, offset: 320)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !25, file: !12, line: 341, baseType: !40, size: 64, align: 64, offset: 384)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !12, line: 308, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DISubroutineType(types: !43)
!43 = !{null, !10}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !25, file: !12, line: 342, baseType: !45, size: 64, align: 64, offset: 448)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !12, line: 314, baseType: !46)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!47 = !DISubroutineType(types: !48)
!48 = !{!49, !10, !50, !49}
!49 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !19, line: 48, baseType: !52)
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !53, line: 246, size: 1728, align: 64, elements: !54)
!53 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!54 = !{!55, !56, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !76, !77, !78, !79, !81, !83, !85, !89, !92, !94, !95, !96, !97, !98, !102, !103}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !52, file: !53, line: 247, baseType: !49, size: 32, align: 32)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !52, file: !53, line: 252, baseType: !57, size: 64, align: 64, offset: 64)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !52, file: !53, line: 253, baseType: !57, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !52, file: !53, line: 254, baseType: !57, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !52, file: !53, line: 255, baseType: !57, size: 64, align: 64, offset: 256)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !52, file: !53, line: 256, baseType: !57, size: 64, align: 64, offset: 320)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !52, file: !53, line: 257, baseType: !57, size: 64, align: 64, offset: 384)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !52, file: !53, line: 258, baseType: !57, size: 64, align: 64, offset: 448)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !52, file: !53, line: 259, baseType: !57, size: 64, align: 64, offset: 512)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !52, file: !53, line: 261, baseType: !57, size: 64, align: 64, offset: 576)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !52, file: !53, line: 262, baseType: !57, size: 64, align: 64, offset: 640)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !52, file: !53, line: 263, baseType: !57, size: 64, align: 64, offset: 704)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !52, file: !53, line: 265, baseType: !69, size: 64, align: 64, offset: 768)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64)
!70 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !53, line: 161, size: 192, align: 64, elements: !71)
!71 = !{!72, !73, !75}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !70, file: !53, line: 162, baseType: !69, size: 64, align: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !70, file: !53, line: 163, baseType: !74, size: 64, align: 64, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !70, file: !53, line: 167, baseType: !49, size: 32, align: 32, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !52, file: !53, line: 267, baseType: !74, size: 64, align: 64, offset: 832)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !52, file: !53, line: 269, baseType: !49, size: 32, align: 32, offset: 896)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !52, file: !53, line: 273, baseType: !49, size: 32, align: 32, offset: 928)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !52, file: !53, line: 275, baseType: !80, size: 64, align: 64, offset: 960)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !21, line: 140, baseType: !22)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !52, file: !53, line: 279, baseType: !82, size: 16, align: 16, offset: 1024)
!82 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !52, file: !53, line: 280, baseType: !84, size: 8, align: 8, offset: 1040)
!84 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !52, file: !53, line: 281, baseType: !86, size: 8, align: 8, offset: 1048)
!86 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 8, align: 8, elements: !87)
!87 = !{!88}
!88 = !DISubrange(count: 1)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !52, file: !53, line: 285, baseType: !90, size: 64, align: 64, offset: 1088)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !53, line: 155, baseType: null)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !52, file: !53, line: 294, baseType: !93, size: 64, align: 64, offset: 1152)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !21, line: 141, baseType: !22)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !52, file: !53, line: 303, baseType: !9, size: 64, align: 64, offset: 1216)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !52, file: !53, line: 304, baseType: !9, size: 64, align: 64, offset: 1280)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !52, file: !53, line: 305, baseType: !9, size: 64, align: 64, offset: 1344)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !52, file: !53, line: 306, baseType: !9, size: 64, align: 64, offset: 1408)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !52, file: !53, line: 307, baseType: !99, size: 64, align: 64, offset: 1472)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !100, line: 62, baseType: !101)
!100 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!101 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !52, file: !53, line: 309, baseType: !49, size: 32, align: 32, offset: 1536)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !52, file: !53, line: 311, baseType: !104, size: 160, align: 8, offset: 1568)
!104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 160, align: 8, elements: !105)
!105 = !{!106}
!106 = !DISubrange(count: 20)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !25, file: !12, line: 343, baseType: !108, size: 64, align: 64, offset: 512)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !12, line: 316, baseType: !109)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!10, !10, !57}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !25, file: !12, line: 344, baseType: !113, size: 64, align: 64, offset: 576)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !12, line: 318, baseType: !114)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64, align: 64)
!115 = !DISubroutineType(types: !116)
!116 = !{!49, !10, !57, !10}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !25, file: !12, line: 345, baseType: !9, size: 64, align: 64, offset: 640)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !25, file: !12, line: 346, baseType: !119, size: 64, align: 64, offset: 704)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !12, line: 320, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64, align: 64)
!121 = !DISubroutineType(types: !122)
!122 = !{!10, !10}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !25, file: !12, line: 350, baseType: !124, size: 64, align: 64, offset: 768)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64, align: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !12, line: 278, baseType: !126)
!126 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 236, size: 2176, align: 64, elements: !127)
!127 = !{!128, !133, !134, !135, !136, !137, !142, !144, !145, !146, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !126, file: !12, line: 241, baseType: !129, size: 64, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !12, line: 166, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64, align: 64)
!131 = !DISubroutineType(types: !132)
!132 = !{!10, !10, !10}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !126, file: !12, line: 242, baseType: !129, size: 64, align: 64, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !126, file: !12, line: 243, baseType: !129, size: 64, align: 64, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !126, file: !12, line: 244, baseType: !129, size: 64, align: 64, offset: 192)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !126, file: !12, line: 245, baseType: !129, size: 64, align: 64, offset: 256)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !126, file: !12, line: 246, baseType: !138, size: 64, align: 64, offset: 320)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !12, line: 167, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64, align: 64)
!140 = !DISubroutineType(types: !141)
!141 = !{!10, !10, !10, !10}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !126, file: !12, line: 247, baseType: !143, size: 64, align: 64, offset: 384)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !12, line: 165, baseType: !120)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !126, file: !12, line: 248, baseType: !143, size: 64, align: 64, offset: 448)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !126, file: !12, line: 249, baseType: !143, size: 64, align: 64, offset: 512)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !126, file: !12, line: 250, baseType: !147, size: 64, align: 64, offset: 576)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !12, line: 168, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64, align: 64)
!149 = !DISubroutineType(types: !150)
!150 = !{!49, !10}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !126, file: !12, line: 251, baseType: !143, size: 64, align: 64, offset: 640)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !126, file: !12, line: 252, baseType: !129, size: 64, align: 64, offset: 704)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !126, file: !12, line: 253, baseType: !129, size: 64, align: 64, offset: 768)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !126, file: !12, line: 254, baseType: !129, size: 64, align: 64, offset: 832)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !126, file: !12, line: 255, baseType: !129, size: 64, align: 64, offset: 896)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !126, file: !12, line: 256, baseType: !129, size: 64, align: 64, offset: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !126, file: !12, line: 257, baseType: !143, size: 64, align: 64, offset: 1024)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !126, file: !12, line: 258, baseType: !9, size: 64, align: 64, offset: 1088)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !126, file: !12, line: 259, baseType: !143, size: 64, align: 64, offset: 1152)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !126, file: !12, line: 261, baseType: !129, size: 64, align: 64, offset: 1216)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !126, file: !12, line: 262, baseType: !129, size: 64, align: 64, offset: 1280)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !126, file: !12, line: 263, baseType: !129, size: 64, align: 64, offset: 1344)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !126, file: !12, line: 264, baseType: !129, size: 64, align: 64, offset: 1408)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !126, file: !12, line: 265, baseType: !138, size: 64, align: 64, offset: 1472)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !126, file: !12, line: 266, baseType: !129, size: 64, align: 64, offset: 1536)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !126, file: !12, line: 267, baseType: !129, size: 64, align: 64, offset: 1600)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !126, file: !12, line: 268, baseType: !129, size: 64, align: 64, offset: 1664)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !126, file: !12, line: 269, baseType: !129, size: 64, align: 64, offset: 1728)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !126, file: !12, line: 270, baseType: !129, size: 64, align: 64, offset: 1792)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !126, file: !12, line: 272, baseType: !129, size: 64, align: 64, offset: 1856)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !126, file: !12, line: 273, baseType: !129, size: 64, align: 64, offset: 1920)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !126, file: !12, line: 274, baseType: !129, size: 64, align: 64, offset: 1984)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !126, file: !12, line: 275, baseType: !129, size: 64, align: 64, offset: 2048)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !126, file: !12, line: 277, baseType: !143, size: 64, align: 64, offset: 2112)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !25, file: !12, line: 351, baseType: !176, size: 64, align: 64, offset: 832)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64, align: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !12, line: 292, baseType: !178)
!178 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 280, size: 640, align: 64, elements: !179)
!179 = !{!180, !185, !186, !191, !192, !193, !198, !199, !204, !205}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !178, file: !12, line: 281, baseType: !181, size: 64, align: 64)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !12, line: 169, baseType: !182)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!16, !10}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !178, file: !12, line: 282, baseType: !129, size: 64, align: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !178, file: !12, line: 283, baseType: !187, size: 64, align: 64, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !12, line: 170, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!10, !10, !16}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !178, file: !12, line: 284, baseType: !187, size: 64, align: 64, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !178, file: !12, line: 285, baseType: !9, size: 64, align: 64, offset: 256)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !178, file: !12, line: 286, baseType: !194, size: 64, align: 64, offset: 320)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !12, line: 172, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64, align: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!49, !10, !16, !10}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !178, file: !12, line: 287, baseType: !9, size: 64, align: 64, offset: 384)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !178, file: !12, line: 288, baseType: !200, size: 64, align: 64, offset: 448)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !12, line: 231, baseType: !201)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64, align: 64)
!202 = !DISubroutineType(types: !203)
!203 = !{!49, !10, !10}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !178, file: !12, line: 290, baseType: !129, size: 64, align: 64, offset: 512)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !178, file: !12, line: 291, baseType: !187, size: 64, align: 64, offset: 576)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !25, file: !12, line: 352, baseType: !207, size: 64, align: 64, offset: 896)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64, align: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !12, line: 298, baseType: !209)
!209 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 294, size: 192, align: 64, elements: !210)
!210 = !{!211, !212, !213}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !209, file: !12, line: 295, baseType: !181, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !209, file: !12, line: 296, baseType: !129, size: 64, align: 64, offset: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !209, file: !12, line: 297, baseType: !214, size: 64, align: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !12, line: 174, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{!49, !10, !10, !10}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !25, file: !12, line: 356, baseType: !219, size: 64, align: 64, offset: 960)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !12, line: 321, baseType: !220)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64, align: 64)
!221 = !DISubroutineType(types: !222)
!222 = !{!223, !10}
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !17, line: 186, baseType: !16)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !25, file: !12, line: 357, baseType: !138, size: 64, align: 64, offset: 1024)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !25, file: !12, line: 358, baseType: !119, size: 64, align: 64, offset: 1088)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !25, file: !12, line: 359, baseType: !227, size: 64, align: 64, offset: 1152)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !12, line: 317, baseType: !130)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !25, file: !12, line: 360, baseType: !229, size: 64, align: 64, offset: 1216)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !12, line: 319, baseType: !215)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !25, file: !12, line: 363, baseType: !231, size: 64, align: 64, offset: 1280)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !12, line: 304, baseType: !233)
!233 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 301, size: 128, align: 64, elements: !234)
!234 = !{!235, !256}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !233, file: !12, line: 302, baseType: !236, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !12, line: 193, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64, align: 64)
!238 = !DISubroutineType(types: !239)
!239 = !{!49, !10, !240, !49}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64, align: 64)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !12, line: 191, baseType: !242)
!242 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !12, line: 178, size: 640, align: 64, elements: !243)
!243 = !{!244, !245, !246, !247, !248, !249, !250, !251, !253, !254, !255}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !242, file: !12, line: 179, baseType: !9, size: 64, align: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !242, file: !12, line: 180, baseType: !10, size: 64, align: 64, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !242, file: !12, line: 181, baseType: !16, size: 64, align: 64, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !242, file: !12, line: 182, baseType: !16, size: 64, align: 64, offset: 192)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !242, file: !12, line: 184, baseType: !49, size: 32, align: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !242, file: !12, line: 185, baseType: !49, size: 32, align: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !242, file: !12, line: 186, baseType: !57, size: 64, align: 64, offset: 320)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !242, file: !12, line: 187, baseType: !252, size: 64, align: 64, offset: 384)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !242, file: !12, line: 188, baseType: !252, size: 64, align: 64, offset: 448)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !242, file: !12, line: 189, baseType: !252, size: 64, align: 64, offset: 512)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !242, file: !12, line: 190, baseType: !9, size: 64, align: 64, offset: 576)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !233, file: !12, line: 303, baseType: !257, size: 64, align: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !12, line: 194, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64, align: 64)
!259 = !DISubroutineType(types: !260)
!260 = !{null, !10, !240}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !25, file: !12, line: 366, baseType: !101, size: 64, align: 64, offset: 1344)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !25, file: !12, line: 368, baseType: !34, size: 64, align: 64, offset: 1408)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !25, file: !12, line: 372, baseType: !264, size: 64, align: 64, offset: 1472)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !12, line: 233, baseType: !265)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DISubroutineType(types: !267)
!267 = !{!49, !10, !268, !9}
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !12, line: 232, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{!49, !10, !9}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !25, file: !12, line: 375, baseType: !147, size: 64, align: 64, offset: 1536)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !25, file: !12, line: 379, baseType: !274, size: 64, align: 64, offset: 1600)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !12, line: 322, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64, align: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{!10, !10, !10, !49}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !25, file: !12, line: 382, baseType: !16, size: 64, align: 64, offset: 1664)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !25, file: !12, line: 385, baseType: !280, size: 64, align: 64, offset: 1728)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !12, line: 323, baseType: !120)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !25, file: !12, line: 386, baseType: !282, size: 64, align: 64, offset: 1792)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !12, line: 324, baseType: !120)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !25, file: !12, line: 389, baseType: !284, size: 64, align: 64, offset: 1856)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64, align: 64)
!285 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !286, line: 40, size: 256, align: 64, elements: !287)
!286 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!287 = !{!288, !289, !291, !292}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !285, file: !286, line: 41, baseType: !34, size: 64, align: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !285, file: !286, line: 42, baseType: !290, size: 64, align: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !286, line: 18, baseType: !130)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !285, file: !286, line: 43, baseType: !49, size: 32, align: 32, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !285, file: !286, line: 45, baseType: !34, size: 64, align: 64, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !25, file: !12, line: 390, baseType: !294, size: 64, align: 64, offset: 1920)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64, align: 64)
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !296, line: 18, size: 320, align: 64, elements: !297)
!296 = !DIFile(filename: "./Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!297 = !{!298, !299, !300, !301, !302}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !295, file: !296, line: 19, baseType: !57, size: 64, align: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !295, file: !296, line: 20, baseType: !49, size: 32, align: 32, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !295, file: !296, line: 21, baseType: !16, size: 64, align: 64, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !295, file: !296, line: 22, baseType: !49, size: 32, align: 32, offset: 192)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !295, file: !296, line: 23, baseType: !57, size: 64, align: 64, offset: 256)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !25, file: !12, line: 391, baseType: !304, size: 64, align: 64, offset: 1984)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !306, line: 11, size: 320, align: 64, elements: !307)
!306 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!307 = !{!308, !309, !314, !319, !320}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !305, file: !306, line: 12, baseType: !57, size: 64, align: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !305, file: !306, line: 13, baseType: !310, size: 64, align: 64, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !306, line: 8, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!10, !10, !9}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !305, file: !306, line: 14, baseType: !315, size: 64, align: 64, offset: 128)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !306, line: 9, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64, align: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!49, !10, !10, !9}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !305, file: !306, line: 15, baseType: !57, size: 64, align: 64, offset: 192)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !305, file: !306, line: 16, baseType: !9, size: 64, align: 64, offset: 256)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !25, file: !12, line: 392, baseType: !24, size: 64, align: 64, offset: 2048)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !25, file: !12, line: 393, baseType: !10, size: 64, align: 64, offset: 2112)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !25, file: !12, line: 394, baseType: !324, size: 64, align: 64, offset: 2176)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !12, line: 325, baseType: !139)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !25, file: !12, line: 395, baseType: !326, size: 64, align: 64, offset: 2240)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !12, line: 326, baseType: !215)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !25, file: !12, line: 396, baseType: !16, size: 64, align: 64, offset: 2304)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !25, file: !12, line: 397, baseType: !329, size: 64, align: 64, offset: 2368)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !12, line: 327, baseType: !215)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !25, file: !12, line: 398, baseType: !331, size: 64, align: 64, offset: 2432)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !12, line: 329, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64)
!333 = !DISubroutineType(types: !334)
!334 = !{!10, !24, !16}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !25, file: !12, line: 399, baseType: !336, size: 64, align: 64, offset: 2496)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !12, line: 328, baseType: !337)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64, align: 64)
!338 = !DISubroutineType(types: !339)
!339 = !{!10, !24, !10, !10}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !25, file: !12, line: 400, baseType: !341, size: 64, align: 64, offset: 2560)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !12, line: 307, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64, align: 64)
!343 = !DISubroutineType(types: !344)
!344 = !{null, !9}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !25, file: !12, line: 401, baseType: !147, size: 64, align: 64, offset: 2624)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !25, file: !12, line: 402, baseType: !10, size: 64, align: 64, offset: 2688)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !25, file: !12, line: 403, baseType: !10, size: 64, align: 64, offset: 2752)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !25, file: !12, line: 404, baseType: !10, size: 64, align: 64, offset: 2816)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !25, file: !12, line: 405, baseType: !10, size: 64, align: 64, offset: 2880)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !25, file: !12, line: 406, baseType: !10, size: 64, align: 64, offset: 2944)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !25, file: !12, line: 407, baseType: !40, size: 64, align: 64, offset: 3008)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !25, file: !12, line: 410, baseType: !353, size: 32, align: 32, offset: 3072)
!353 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !25, file: !12, line: 412, baseType: !40, size: 64, align: 64, offset: 3136)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64, align: 64)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_Date", file: !357, line: 97, baseType: !358)
!357 = !DIFile(filename: "./Include/datetime.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!358 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 93, size: 256, align: 64, elements: !359)
!359 = !{!360, !361, !362, !363}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !358, file: !357, line: 95, baseType: !11, size: 128, align: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !358, file: !357, line: 95, baseType: !223, size: 64, align: 64, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "hastzinfo", scope: !358, file: !357, line: 95, baseType: !36, size: 8, align: 8, offset: 192)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !358, file: !357, line: 96, baseType: !364, size: 32, align: 8, offset: 200)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 32, align: 8, elements: !366)
!365 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!366 = !{!367}
!367 = !DISubrange(count: 4)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_Delta", file: !357, line: 41, baseType: !370)
!370 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 34, size: 320, align: 64, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !370, file: !357, line: 36, baseType: !11, size: 128, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !370, file: !357, line: 37, baseType: !223, size: 64, align: 64, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "days", scope: !370, file: !357, line: 38, baseType: !49, size: 32, align: 32, offset: 192)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !370, file: !357, line: 39, baseType: !49, size: 32, align: 32, offset: 224)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !370, file: !357, line: 40, baseType: !49, size: 32, align: 32, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64, align: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !380, line: 41, baseType: !381)
!380 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!381 = !DICompositeType(tag: DW_TAG_structure_type, file: !380, line: 31, size: 320, align: 64, elements: !382)
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !381, file: !380, line: 32, baseType: !28, size: 192, align: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !381, file: !380, line: 33, baseType: !223, size: 64, align: 64, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !381, file: !380, line: 34, baseType: !86, size: 8, align: 8, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyDateTime_BaseTZInfo", file: !357, line: 64, baseType: !389)
!389 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 61, size: 256, align: 64, elements: !390)
!390 = !{!391, !392, !393}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !389, file: !357, line: 63, baseType: !11, size: 128, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !389, file: !357, line: 63, baseType: !223, size: 64, align: 64, offset: 128)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "hastzinfo", scope: !389, file: !357, line: 63, baseType: !36, size: 8, align: 8, offset: 192)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_DateTime", file: !357, line: 112, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 108, size: 384, align: 64, elements: !397)
!397 = !{!398, !399, !400, !401, !405}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !396, file: !357, line: 110, baseType: !11, size: 128, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !396, file: !357, line: 110, baseType: !223, size: 64, align: 64, offset: 128)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "hastzinfo", scope: !396, file: !357, line: 110, baseType: !36, size: 8, align: 8, offset: 192)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !396, file: !357, line: 110, baseType: !402, size: 80, align: 8, offset: 200)
!402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 80, align: 8, elements: !403)
!403 = !{!404}
!404 = !DISubrange(count: 10)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "tzinfo", scope: !396, file: !357, line: 111, baseType: !10, size: 64, align: 64, offset: 320)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_Time", file: !357, line: 85, baseType: !408)
!408 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 81, size: 320, align: 64, elements: !409)
!409 = !{!410, !411, !412, !413, !417}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !408, file: !357, line: 83, baseType: !11, size: 128, align: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !408, file: !357, line: 83, baseType: !223, size: 64, align: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "hastzinfo", scope: !408, file: !357, line: 83, baseType: !36, size: 8, align: 8, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !408, file: !357, line: 83, baseType: !414, size: 48, align: 8, offset: 200)
!414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 48, align: 8, elements: !415)
!415 = !{!416}
!416 = !DISubrange(count: 6)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tzinfo", scope: !408, file: !357, line: 84, baseType: !10, size: 64, align: 64, offset: 256)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !420, line: 33, baseType: !421)
!420 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!421 = !DICompositeType(tag: DW_TAG_structure_type, file: !420, line: 25, size: 256, align: 64, elements: !422)
!422 = !{!423, !424}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !421, file: !420, line: 26, baseType: !28, size: 192, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !421, file: !420, line: 27, baseType: !425, size: 64, align: 64, offset: 192)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, align: 64, elements: !87)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !428, line: 351, baseType: !429)
!428 = !DIFile(filename: "./Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!429 = !DICompositeType(tag: DW_TAG_structure_type, file: !428, line: 217, size: 384, align: 64, elements: !430)
!430 = !{!431, !432, !433, !434, !442}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !429, file: !428, line: 291, baseType: !11, size: 128, align: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !429, file: !428, line: 292, baseType: !16, size: 64, align: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !429, file: !428, line: 293, baseType: !223, size: 64, align: 64, offset: 192)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !429, file: !428, line: 349, baseType: !435, size: 32, align: 32, offset: 256)
!435 = !DICompositeType(tag: DW_TAG_structure_type, scope: !429, file: !428, line: 294, size: 32, align: 32, elements: !436)
!436 = !{!437, !438, !439, !440, !441}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !435, file: !428, line: 303, baseType: !353, size: 2, align: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !435, file: !428, line: 331, baseType: !353, size: 3, align: 32, offset: 2)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !435, file: !428, line: 336, baseType: !353, size: 1, align: 32, offset: 5)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !435, file: !428, line: 340, baseType: !353, size: 1, align: 32, offset: 6)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !435, file: !428, line: 345, baseType: !353, size: 1, align: 32, offset: 7)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !429, file: !428, line: 350, baseType: !443, size: 64, align: 64, offset: 320)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !100, line: 90, baseType: !49)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !446, line: 75, baseType: !447)
!446 = !DIFile(filename: "/usr/include/time.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !21, line: 148, baseType: !22)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_TimeZone", file: !450, line: 763, baseType: !451)
!450 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_datetimemodule.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!451 = !DICompositeType(tag: DW_TAG_structure_type, file: !450, line: 758, size: 256, align: 64, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !451, file: !450, line: 760, baseType: !11, size: 128, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !451, file: !450, line: 761, baseType: !10, size: 64, align: 64, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !451, file: !450, line: 762, baseType: !10, size: 64, align: 64, offset: 192)
!456 = !{!457, !499, !504, !508, !520, !528, !540, !546, !553, !560, !564, !569, !584, !594, !599, !605, !608, !616, !624, !630, !650, !661, !669, !677, !680, !689, !694, !706, !772, !776, !801, !805, !826, !831, !839, !856, !865, !872, !879, !882, !899, !907, !913, !916, !920, !923, !927, !939, !943, !947, !953, !957, !961, !981, !986, !998, !1005, !1014, !1018, !1032, !1043, !1055, !1101, !1105, !1110, !1120, !1148, !1151, !1173, !1177, !1184, !1196, !1199, !1220, !1230, !1234, !1247, !1257, !1263, !1269, !1280, !1283, !1286, !1289, !1292, !1301, !1305, !1310, !1322, !1329, !1359, !1382, !1397, !1401, !1405, !1422, !1449, !1473, !1490, !1494, !1500, !1509, !1515, !1519, !1523, !1527, !1532, !1539, !1561, !1569, !1572, !1582, !1587, !1600, !1627, !1652, !1660, !1678, !1703, !1706, !1710, !1715, !1728, !1733, !1748, !1773, !1784, !1796, !1799, !1807, !1815, !1818, !1890, !1925, !1937, !1948, !1958, !1986, !1990, !1993, !2014, !2027, !2039, !2043, !2047, !2061, !2065, !2074, !2080, !2084, !2088, !2092, !2097, !2102, !2121, !2132, !2137, !2141, !2145, !2186, !2221, !2238, !2244, !2249, !2259, !2266, !2272, !2278, !2282, !2286, !2292, !2295, !2302, !2312, !2319, !2322, !2331, !2339, !2351, !2366}
!457 = !DISubprogram(name: "PyInit__datetime", scope: !450, file: !450, line: 5222, type: !458, isLocal: false, isDefinition: true, scopeLine: 5223, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__datetime, variables: !460)
!458 = !DISubroutineType(types: !459)
!459 = !{!10}
!460 = !{!461, !462, !463, !464, !465, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !487, !489, !491, !493, !495, !497}
!461 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !457, file: !450, line: 5224, type: !10)
!462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !457, file: !450, line: 5225, type: !10)
!463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !457, file: !450, line: 5226, type: !10)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !457, file: !450, line: 5227, type: !10)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !466, file: !450, line: 5252, type: !10)
!466 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5252, column: 8)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !468, file: !450, line: 5257, type: !10)
!468 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5257, column: 8)
!469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !470, file: !450, line: 5262, type: !10)
!470 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5262, column: 8)
!471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !472, file: !450, line: 5270, type: !10)
!472 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5270, column: 8)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !474, file: !450, line: 5275, type: !10)
!474 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5275, column: 8)
!475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !476, file: !450, line: 5280, type: !10)
!476 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5280, column: 8)
!477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !478, file: !450, line: 5288, type: !10)
!478 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5288, column: 8)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !480, file: !450, line: 5293, type: !10)
!480 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5293, column: 8)
!481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !482, file: !450, line: 5298, type: !10)
!482 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5298, column: 8)
!483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !484, file: !450, line: 5306, type: !10)
!484 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5306, column: 8)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !486, file: !450, line: 5311, type: !10)
!486 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5311, column: 8)
!487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !488, file: !450, line: 5316, type: !10)
!488 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5316, column: 8)
!489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !490, file: !450, line: 5325, type: !10)
!490 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5325, column: 8)
!491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !492, file: !450, line: 5334, type: !10)
!492 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5334, column: 8)
!493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !494, file: !450, line: 5337, type: !10)
!494 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5337, column: 8)
!495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !496, file: !450, line: 5343, type: !10)
!496 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5343, column: 8)
!497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !498, file: !450, line: 5346, type: !10)
!498 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5346, column: 8)
!499 = !DISubprogram(name: "date_repr", scope: !450, file: !450, line: 2627, type: !500, isLocal: true, isDefinition: true, scopeLine: 2628, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_repr, variables: !502)
!500 = !DISubroutineType(types: !501)
!501 = !{!10, !355}
!502 = !{!503}
!503 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !499, file: !450, line: 2627, type: !355)
!504 = !DISubprogram(name: "date_add", scope: !450, file: !450, line: 2570, type: !131, isLocal: true, isDefinition: true, scopeLine: 2571, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @date_add, variables: !505)
!505 = !{!506, !507}
!506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !504, file: !450, line: 2570, type: !10)
!507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !504, file: !450, line: 2570, type: !10)
!508 = !DISubprogram(name: "add_date_timedelta", scope: !450, file: !450, line: 2555, type: !509, isLocal: true, isDefinition: true, scopeLine: 2556, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, %struct.PyDateTime_Delta*, i32)* @add_date_timedelta, variables: !511)
!509 = !DISubroutineType(types: !510)
!510 = !{!10, !355, !368, !49}
!511 = !{!512, !513, !514, !515, !516, !517, !518, !519}
!512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "date", arg: 1, scope: !508, file: !450, line: 2555, type: !355)
!513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 2, scope: !508, file: !450, line: 2555, type: !368)
!514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "negate", arg: 3, scope: !508, file: !450, line: 2555, type: !49)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !508, file: !450, line: 2557, type: !10)
!516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !508, file: !450, line: 2558, type: !49)
!517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "month", scope: !508, file: !450, line: 2559, type: !49)
!518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "deltadays", scope: !508, file: !450, line: 2560, type: !49)
!519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !508, file: !450, line: 2562, type: !49)
!520 = !DISubprogram(name: "normalize_date", scope: !450, file: !450, line: 564, type: !521, isLocal: true, isDefinition: true, scopeLine: 565, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32*, i32*, i32*)* @normalize_date, variables: !524)
!521 = !DISubroutineType(types: !522)
!522 = !{!49, !523, !523, !523}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64, align: 64)
!524 = !{!525, !526, !527}
!525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !520, file: !450, line: 564, type: !523)
!526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !520, file: !450, line: 564, type: !523)
!527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !520, file: !450, line: 564, type: !523)
!528 = !DISubprogram(name: "normalize_y_m_d", scope: !450, file: !450, line: 497, type: !521, isLocal: true, isDefinition: true, scopeLine: 498, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32*, i32*, i32*)* @normalize_y_m_d, variables: !529)
!529 = !{!530, !531, !532, !533, !534}
!530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 1, scope: !528, file: !450, line: 497, type: !523)
!531 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 2, scope: !528, file: !450, line: 497, type: !523)
!532 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 3, scope: !528, file: !450, line: 497, type: !523)
!533 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dim", scope: !528, file: !450, line: 499, type: !49)
!534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ordinal", scope: !535, file: !450, line: 538, type: !49)
!535 = distinct !DILexicalBlock(scope: !536, file: !450, line: 537, column: 14)
!536 = distinct !DILexicalBlock(scope: !537, file: !450, line: 528, column: 18)
!537 = distinct !DILexicalBlock(scope: !538, file: !450, line: 518, column: 13)
!538 = distinct !DILexicalBlock(scope: !539, file: !450, line: 513, column: 29)
!539 = distinct !DILexicalBlock(scope: !528, file: !450, line: 513, column: 9)
!540 = !DISubprogram(name: "days_in_month", scope: !450, file: !450, line: 206, type: !541, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32)* @days_in_month, variables: !543)
!541 = !DISubroutineType(types: !542)
!542 = !{!49, !49, !49}
!543 = !{!544, !545}
!544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !540, file: !450, line: 206, type: !49)
!545 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !540, file: !450, line: 206, type: !49)
!546 = !DISubprogram(name: "is_leap", scope: !450, file: !450, line: 193, type: !547, isLocal: true, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @is_leap, variables: !549)
!547 = !DISubroutineType(types: !548)
!548 = !{!49, !49}
!549 = !{!550, !551}
!550 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !546, file: !450, line: 193, type: !49)
!551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ayear", scope: !546, file: !450, line: 200, type: !552)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !353)
!553 = !DISubprogram(name: "ymd_to_ord", scope: !450, file: !450, line: 338, type: !554, isLocal: true, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32, i32)* @ymd_to_ord, variables: !556)
!554 = !DISubroutineType(types: !555)
!555 = !{!49, !49, !49, !49}
!556 = !{!557, !558, !559}
!557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !553, file: !450, line: 338, type: !49)
!558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !553, file: !450, line: 338, type: !49)
!559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !553, file: !450, line: 338, type: !49)
!560 = !DISubprogram(name: "days_before_year", scope: !450, file: !450, line: 234, type: !547, isLocal: true, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @days_before_year, variables: !561)
!561 = !{!562, !563}
!562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !560, file: !450, line: 234, type: !49)
!563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !560, file: !450, line: 236, type: !49)
!564 = !DISubprogram(name: "days_before_month", scope: !450, file: !450, line: 218, type: !541, isLocal: true, isDefinition: true, scopeLine: 219, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32)* @days_before_month, variables: !565)
!565 = !{!566, !567, !568}
!566 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !564, file: !450, line: 218, type: !49)
!567 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !564, file: !450, line: 218, type: !49)
!568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "days", scope: !564, file: !450, line: 220, type: !49)
!569 = !DISubprogram(name: "ord_to_ymd", scope: !450, file: !450, line: 254, type: !570, isLocal: true, isDefinition: true, scopeLine: 255, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, i32*, i32*, i32*)* @ord_to_ymd, variables: !572)
!570 = !DISubroutineType(types: !571)
!571 = !{null, !49, !523, !523, !523}
!572 = !{!573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583}
!573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ordinal", arg: 1, scope: !569, file: !450, line: 254, type: !49)
!574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 2, scope: !569, file: !450, line: 254, type: !523)
!575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 3, scope: !569, file: !450, line: 254, type: !523)
!576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 4, scope: !569, file: !450, line: 254, type: !523)
!577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !569, file: !450, line: 256, type: !49)
!578 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n1", scope: !569, file: !450, line: 256, type: !49)
!579 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n4", scope: !569, file: !450, line: 256, type: !49)
!580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n100", scope: !569, file: !450, line: 256, type: !49)
!581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n400", scope: !569, file: !450, line: 256, type: !49)
!582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "leapyear", scope: !569, file: !450, line: 256, type: !49)
!583 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "preceding", scope: !569, file: !450, line: 256, type: !49)
!584 = !DISubprogram(name: "date_subtract", scope: !450, file: !450, line: 2597, type: !131, isLocal: true, isDefinition: true, scopeLine: 2598, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @date_subtract, variables: !585)
!585 = !{!586, !587, !588, !593}
!586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !584, file: !450, line: 2597, type: !10)
!587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !584, file: !450, line: 2597, type: !10)
!588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "left_ord", scope: !589, file: !450, line: 2605, type: !49)
!589 = distinct !DILexicalBlock(scope: !590, file: !450, line: 2603, column: 151)
!590 = distinct !DILexicalBlock(scope: !591, file: !450, line: 2603, column: 13)
!591 = distinct !DILexicalBlock(scope: !592, file: !450, line: 2602, column: 145)
!592 = distinct !DILexicalBlock(scope: !584, file: !450, line: 2602, column: 9)
!593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "right_ord", scope: !589, file: !450, line: 2608, type: !49)
!594 = !DISubprogram(name: "date_hash", scope: !450, file: !450, line: 2781, type: !595, isLocal: true, isDefinition: true, scopeLine: 2782, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyDateTime_Date*)* @date_hash, variables: !597)
!595 = !DISubroutineType(types: !596)
!596 = !{!223, !355}
!597 = !{!598}
!598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !594, file: !450, line: 2781, type: !355)
!599 = !DISubprogram(name: "generic_hash", scope: !450, file: !450, line: 2772, type: !600, isLocal: true, isDefinition: true, scopeLine: 2773, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i8*, i32)* @generic_hash, variables: !602)
!600 = !DISubroutineType(types: !601)
!601 = !{!223, !377, !49}
!602 = !{!603, !604}
!603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 1, scope: !599, file: !450, line: 2772, type: !377)
!604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !599, file: !450, line: 2772, type: !49)
!605 = !DISubprogram(name: "date_str", scope: !450, file: !450, line: 2643, type: !500, isLocal: true, isDefinition: true, scopeLine: 2644, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_str, variables: !606)
!606 = !{!607}
!607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !605, file: !450, line: 2643, type: !355)
!608 = !DISubprogram(name: "date_richcompare", scope: !450, file: !450, line: 2730, type: !276, isLocal: true, isDefinition: true, scopeLine: 2731, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @date_richcompare, variables: !609)
!609 = !{!610, !611, !612, !613}
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !608, file: !450, line: 2730, type: !10)
!611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "other", arg: 2, scope: !608, file: !450, line: 2730, type: !10)
!612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !608, file: !450, line: 2730, type: !49)
!613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !614, file: !450, line: 2733, type: !49)
!614 = distinct !DILexicalBlock(scope: !615, file: !450, line: 2732, column: 147)
!615 = distinct !DILexicalBlock(scope: !608, file: !450, line: 2732, column: 9)
!616 = !DISubprogram(name: "diff_to_bool", scope: !450, file: !450, line: 1360, type: !617, isLocal: true, isDefinition: true, scopeLine: 1361, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32)* @diff_to_bool, variables: !619)
!617 = !DISubroutineType(types: !618)
!618 = !{!10, !49, !49}
!619 = !{!620, !621, !622, !623}
!620 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "diff", arg: 1, scope: !616, file: !450, line: 1360, type: !49)
!621 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 2, scope: !616, file: !450, line: 1360, type: !49)
!622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !616, file: !450, line: 1362, type: !10)
!623 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "istrue", scope: !616, file: !450, line: 1363, type: !49)
!624 = !DISubprogram(name: "date_fromtimestamp", scope: !450, file: !450, line: 2511, type: !131, isLocal: true, isDefinition: true, scopeLine: 2512, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @date_fromtimestamp, variables: !625)
!625 = !{!626, !627, !628, !629}
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !624, file: !450, line: 2511, type: !10)
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !624, file: !450, line: 2511, type: !10)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timestamp", scope: !624, file: !450, line: 2513, type: !10)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !624, file: !450, line: 2514, type: !10)
!630 = !DISubprogram(name: "date_local_from_object", scope: !450, file: !450, line: 2457, type: !131, isLocal: true, isDefinition: true, scopeLine: 2458, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @date_local_from_object, variables: !631)
!631 = !{!632, !633, !634, !649}
!632 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !630, file: !450, line: 2457, type: !10)
!633 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 2, scope: !630, file: !450, line: 2457, type: !10)
!634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tm", scope: !630, file: !450, line: 2459, type: !635)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64, align: 64)
!636 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !446, line: 133, size: 448, align: 64, elements: !637)
!637 = !{!638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !636, file: !446, line: 135, baseType: !49, size: 32, align: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !636, file: !446, line: 136, baseType: !49, size: 32, align: 32, offset: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !636, file: !446, line: 137, baseType: !49, size: 32, align: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !636, file: !446, line: 138, baseType: !49, size: 32, align: 32, offset: 96)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !636, file: !446, line: 139, baseType: !49, size: 32, align: 32, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !636, file: !446, line: 140, baseType: !49, size: 32, align: 32, offset: 160)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !636, file: !446, line: 141, baseType: !49, size: 32, align: 32, offset: 192)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !636, file: !446, line: 142, baseType: !49, size: 32, align: 32, offset: 224)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !636, file: !446, line: 143, baseType: !49, size: 32, align: 32, offset: 256)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !636, file: !446, line: 146, baseType: !22, size: 64, align: 64, offset: 320)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !636, file: !446, line: 147, baseType: !34, size: 64, align: 64, offset: 384)
!649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !630, file: !450, line: 2460, type: !445)
!650 = !DISubprogram(name: "date_fromordinal", scope: !450, file: !450, line: 2525, type: !131, isLocal: true, isDefinition: true, scopeLine: 2526, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @date_fromordinal, variables: !651)
!651 = !{!652, !653, !654, !655, !656, !659, !660}
!652 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !650, file: !450, line: 2525, type: !10)
!653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !650, file: !450, line: 2525, type: !10)
!654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !650, file: !450, line: 2527, type: !10)
!655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ordinal", scope: !650, file: !450, line: 2528, type: !49)
!656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !657, file: !450, line: 2531, type: !49)
!657 = distinct !DILexicalBlock(scope: !658, file: !450, line: 2530, column: 60)
!658 = distinct !DILexicalBlock(scope: !650, file: !450, line: 2530, column: 9)
!659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "month", scope: !657, file: !450, line: 2532, type: !49)
!660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !657, file: !450, line: 2533, type: !49)
!661 = !DISubprogram(name: "date_today", scope: !450, file: !450, line: 2488, type: !131, isLocal: true, isDefinition: true, scopeLine: 2489, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @date_today, variables: !662)
!662 = !{!663, !664, !665, !666, !667}
!663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !661, file: !450, line: 2488, type: !10)
!664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !661, file: !450, line: 2488, type: !10)
!665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !661, file: !450, line: 2490, type: !10)
!666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !661, file: !450, line: 2491, type: !10)
!667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !668, file: !450, line: 2505, type: !10)
!668 = distinct !DILexicalBlock(scope: !661, file: !450, line: 2505, column: 8)
!669 = !DISubprogram(name: "time_time", scope: !450, file: !450, line: 1312, type: !458, isLocal: true, isDefinition: true, scopeLine: 1313, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @time_time, variables: !670)
!670 = !{!671, !672, !673}
!671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !669, file: !450, line: 1314, type: !10)
!672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !669, file: !450, line: 1315, type: !10)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !674, file: !450, line: 1321, type: !10)
!674 = distinct !DILexicalBlock(scope: !675, file: !450, line: 1321, column: 12)
!675 = distinct !DILexicalBlock(scope: !676, file: !450, line: 1317, column: 29)
!676 = distinct !DILexicalBlock(scope: !669, file: !450, line: 1317, column: 9)
!677 = !DISubprogram(name: "date_ctime", scope: !450, file: !450, line: 2650, type: !500, isLocal: true, isDefinition: true, scopeLine: 2651, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_ctime, variables: !678)
!678 = !{!679}
!679 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !677, file: !450, line: 2650, type: !355)
!680 = !DISubprogram(name: "format_ctime", scope: !450, file: !450, line: 1004, type: !681, isLocal: true, isDefinition: true, scopeLine: 1005, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, i32, i32, i32)* @format_ctime, variables: !683)
!681 = !DISubroutineType(types: !682)
!682 = !{!10, !355, !49, !49, !49}
!683 = !{!684, !685, !686, !687, !688}
!684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "date", arg: 1, scope: !680, file: !450, line: 1004, type: !355)
!685 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hours", arg: 2, scope: !680, file: !450, line: 1004, type: !49)
!686 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minutes", arg: 3, scope: !680, file: !450, line: 1004, type: !49)
!687 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seconds", arg: 4, scope: !680, file: !450, line: 1004, type: !49)
!688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wday", scope: !680, file: !450, line: 1014, type: !49)
!689 = !DISubprogram(name: "weekday", scope: !450, file: !450, line: 345, type: !554, isLocal: true, isDefinition: true, scopeLine: 346, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32, i32)* @weekday, variables: !690)
!690 = !{!691, !692, !693}
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !689, file: !450, line: 345, type: !49)
!692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !689, file: !450, line: 345, type: !49)
!693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !689, file: !450, line: 345, type: !49)
!694 = !DISubprogram(name: "date_strftime", scope: !450, file: !450, line: 2656, type: !695, isLocal: true, isDefinition: true, scopeLine: 2657, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, %struct._object*, %struct._object*)* @date_strftime, variables: !697)
!695 = !DISubroutineType(types: !696)
!696 = !{!10, !355, !10, !10}
!697 = !{!698, !699, !700, !701, !702, !703, !704}
!698 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !694, file: !450, line: 2656, type: !355)
!699 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !694, file: !450, line: 2656, type: !10)
!700 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !694, file: !450, line: 2656, type: !10)
!701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !694, file: !450, line: 2661, type: !10)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !694, file: !450, line: 2662, type: !10)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !694, file: !450, line: 2663, type: !10)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !705, file: !450, line: 2676, type: !10)
!705 = distinct !DILexicalBlock(scope: !694, file: !450, line: 2676, column: 8)
!706 = !DISubprogram(name: "wrap_strftime", scope: !450, file: !450, line: 1142, type: !707, isLocal: true, isDefinition: true, scopeLine: 1144, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*, %struct._object*)* @wrap_strftime, variables: !709)
!707 = !DISubroutineType(types: !708)
!708 = !{!10, !10, !10, !10, !10}
!709 = !{!710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !738, !739, !743, !745, !746, !750, !752, !754, !757, !759, !762, !764, !767, !769}
!710 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !706, file: !450, line: 1142, type: !10)
!711 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 2, scope: !706, file: !450, line: 1142, type: !10)
!712 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "timetuple", arg: 3, scope: !706, file: !450, line: 1142, type: !10)
!713 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 4, scope: !706, file: !450, line: 1143, type: !10)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !706, file: !450, line: 1145, type: !10)
!715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zreplacement", scope: !706, file: !450, line: 1147, type: !10)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Zreplacement", scope: !706, file: !450, line: 1148, type: !10)
!717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "freplacement", scope: !706, file: !450, line: 1149, type: !10)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pin", scope: !706, file: !450, line: 1151, type: !34)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flen", scope: !706, file: !450, line: 1152, type: !16)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !706, file: !450, line: 1153, type: !36)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newfmt", scope: !706, file: !450, line: 1155, type: !10)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pnew", scope: !706, file: !450, line: 1156, type: !57)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "totalnew", scope: !706, file: !450, line: 1157, type: !99)
!724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "usednew", scope: !706, file: !450, line: 1159, type: !99)
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptoappend", scope: !706, file: !450, line: 1161, type: !34)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ntoappend", scope: !706, file: !450, line: 1162, type: !16)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !728, file: !450, line: 1201, type: !735)
!728 = distinct !DILexicalBlock(scope: !729, file: !450, line: 1199, column: 45)
!729 = distinct !DILexicalBlock(scope: !730, file: !450, line: 1199, column: 17)
!730 = distinct !DILexicalBlock(scope: !731, file: !450, line: 1198, column: 29)
!731 = distinct !DILexicalBlock(scope: !732, file: !450, line: 1198, column: 18)
!732 = distinct !DILexicalBlock(scope: !733, file: !450, line: 1191, column: 18)
!733 = distinct !DILexicalBlock(scope: !734, file: !450, line: 1187, column: 13)
!734 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1186, column: 35)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 800, align: 8, elements: !736)
!736 = !{!737}
!737 = !DISubrange(count: 100)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !728, file: !450, line: 1202, type: !10)
!739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !740, file: !450, line: 1213, type: !10)
!740 = distinct !DILexicalBlock(scope: !741, file: !450, line: 1213, column: 24)
!741 = distinct !DILexicalBlock(scope: !742, file: !450, line: 1205, column: 74)
!742 = distinct !DILexicalBlock(scope: !728, file: !450, line: 1205, column: 21)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !744, file: !450, line: 1284, type: !10)
!744 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1283, column: 5)
!745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !744, file: !450, line: 1285, type: !10)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !747, file: !450, line: 1293, type: !10)
!747 = distinct !DILexicalBlock(scope: !748, file: !450, line: 1293, column: 16)
!748 = distinct !DILexicalBlock(scope: !749, file: !450, line: 1290, column: 35)
!749 = distinct !DILexicalBlock(scope: !744, file: !450, line: 1290, column: 13)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !751, file: !450, line: 1295, type: !10)
!751 = distinct !DILexicalBlock(scope: !744, file: !450, line: 1295, column: 12)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !753, file: !450, line: 1298, type: !10)
!753 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1298, column: 8)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !755, file: !450, line: 1298, type: !10)
!755 = distinct !DILexicalBlock(scope: !756, file: !450, line: 1298, column: 104)
!756 = distinct !DILexicalBlock(scope: !753, file: !450, line: 1298, column: 70)
!757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !758, file: !450, line: 1299, type: !10)
!758 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1299, column: 8)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !760, file: !450, line: 1299, type: !10)
!760 = distinct !DILexicalBlock(scope: !761, file: !450, line: 1299, column: 104)
!761 = distinct !DILexicalBlock(scope: !758, file: !450, line: 1299, column: 70)
!762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !763, file: !450, line: 1300, type: !10)
!763 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1300, column: 8)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !765, file: !450, line: 1300, type: !10)
!765 = distinct !DILexicalBlock(scope: !766, file: !450, line: 1300, column: 104)
!766 = distinct !DILexicalBlock(scope: !763, file: !450, line: 1300, column: 70)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !768, file: !450, line: 1301, type: !10)
!768 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1301, column: 8)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !770, file: !450, line: 1301, type: !10)
!770 = distinct !DILexicalBlock(scope: !771, file: !450, line: 1301, column: 98)
!771 = distinct !DILexicalBlock(scope: !768, file: !450, line: 1301, column: 64)
!772 = !DISubprogram(name: "get_tzinfo_member", scope: !450, file: !450, line: 850, type: !121, isLocal: true, isDefinition: true, scopeLine: 851, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @get_tzinfo_member, variables: !773)
!773 = !{!774, !775}
!774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !772, file: !450, line: 850, type: !10)
!775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !772, file: !450, line: 852, type: !10)
!776 = !DISubprogram(name: "format_utcoffset", scope: !450, file: !450, line: 1035, type: !777, isLocal: true, isDefinition: true, scopeLine: 1037, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i64, i8*, %struct._object*, %struct._object*)* @format_utcoffset, variables: !779)
!777 = !DISubroutineType(types: !778)
!778 = !{!49, !57, !99, !34, !10, !10}
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !794, !797, !799}
!780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !776, file: !450, line: 1035, type: !57)
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buflen", arg: 2, scope: !776, file: !450, line: 1035, type: !99)
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sep", arg: 3, scope: !776, file: !450, line: 1035, type: !34)
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 4, scope: !776, file: !450, line: 1036, type: !10)
!784 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 5, scope: !776, file: !450, line: 1036, type: !10)
!785 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !776, file: !450, line: 1038, type: !10)
!786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hours", scope: !776, file: !450, line: 1039, type: !49)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minutes", scope: !776, file: !450, line: 1039, type: !49)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !776, file: !450, line: 1039, type: !49)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !776, file: !450, line: 1040, type: !36)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !791, file: !450, line: 1048, type: !10)
!791 = distinct !DILexicalBlock(scope: !792, file: !450, line: 1048, column: 12)
!792 = distinct !DILexicalBlock(scope: !793, file: !450, line: 1047, column: 38)
!793 = distinct !DILexicalBlock(scope: !776, file: !450, line: 1047, column: 9)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !795, file: !450, line: 1054, type: !10)
!795 = distinct !DILexicalBlock(scope: !796, file: !450, line: 1053, column: 53)
!796 = distinct !DILexicalBlock(scope: !776, file: !450, line: 1053, column: 9)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !798, file: !450, line: 1057, type: !10)
!798 = distinct !DILexicalBlock(scope: !795, file: !450, line: 1057, column: 12)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !800, file: !450, line: 1066, type: !10)
!800 = distinct !DILexicalBlock(scope: !776, file: !450, line: 1066, column: 8)
!801 = !DISubprogram(name: "call_utcoffset", scope: !450, file: !450, line: 920, type: !131, isLocal: true, isDefinition: true, scopeLine: 921, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @call_utcoffset, variables: !802)
!802 = !{!803, !804}
!803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 1, scope: !801, file: !450, line: 920, type: !10)
!804 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 2, scope: !801, file: !450, line: 920, type: !10)
!805 = !DISubprogram(name: "call_tzinfo_method", scope: !450, file: !450, line: 870, type: !806, isLocal: true, isDefinition: true, scopeLine: 871, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*, %struct._object*)* @call_tzinfo_method, variables: !808)
!806 = !DISubroutineType(types: !807)
!807 = !{!10, !10, !57, !10}
!808 = !{!809, !810, !811, !812, !813, !819, !823}
!809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 1, scope: !805, file: !450, line: 870, type: !10)
!810 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !805, file: !450, line: 870, type: !57)
!811 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 3, scope: !805, file: !450, line: 870, type: !10)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !805, file: !450, line: 872, type: !10)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !814, file: !450, line: 885, type: !10)
!814 = distinct !DILexicalBlock(scope: !815, file: !450, line: 885, column: 16)
!815 = distinct !DILexicalBlock(scope: !816, file: !450, line: 884, column: 121)
!816 = distinct !DILexicalBlock(scope: !817, file: !450, line: 884, column: 13)
!817 = distinct !DILexicalBlock(scope: !818, file: !450, line: 883, column: 151)
!818 = distinct !DILexicalBlock(scope: !805, file: !450, line: 883, column: 9)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !820, file: !450, line: 892, type: !10)
!820 = distinct !DILexicalBlock(scope: !821, file: !450, line: 892, column: 16)
!821 = distinct !DILexicalBlock(scope: !822, file: !450, line: 891, column: 105)
!822 = distinct !DILexicalBlock(scope: !817, file: !450, line: 890, column: 13)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !824, file: !450, line: 900, type: !10)
!824 = distinct !DILexicalBlock(scope: !825, file: !450, line: 900, column: 12)
!825 = distinct !DILexicalBlock(scope: !818, file: !450, line: 899, column: 10)
!826 = !DISubprogram(name: "delta_negative", scope: !450, file: !450, line: 1742, type: !827, isLocal: true, isDefinition: true, scopeLine: 1743, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_negative, variables: !829)
!827 = !DISubroutineType(types: !828)
!828 = !{!10, !368}
!829 = !{!830}
!830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !826, file: !450, line: 1742, type: !368)
!831 = !DISubprogram(name: "divmod", scope: !450, file: !450, line: 139, type: !832, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32, i32*)* @divmod, variables: !834)
!832 = !DISubroutineType(types: !833)
!833 = !{!49, !49, !49, !523}
!834 = !{!835, !836, !837, !838}
!835 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !831, file: !450, line: 139, type: !49)
!836 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !831, file: !450, line: 139, type: !49)
!837 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 3, scope: !831, file: !450, line: 139, type: !523)
!838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "quo", scope: !831, file: !450, line: 141, type: !49)
!839 = !DISubprogram(name: "make_Zreplacement", scope: !450, file: !450, line: 1077, type: !131, isLocal: true, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @make_Zreplacement, variables: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !850, !852, !854}
!841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !839, file: !450, line: 1077, type: !10)
!842 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 2, scope: !839, file: !450, line: 1077, type: !10)
!843 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !839, file: !450, line: 1079, type: !10)
!844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !839, file: !450, line: 1080, type: !10)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Zreplacement", scope: !839, file: !450, line: 1081, type: !10)
!846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !847, file: !450, line: 1094, type: !10)
!847 = distinct !DILexicalBlock(scope: !848, file: !450, line: 1094, column: 12)
!848 = distinct !DILexicalBlock(scope: !849, file: !450, line: 1093, column: 36)
!849 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1093, column: 9)
!850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !851, file: !450, line: 1103, type: !10)
!851 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1103, column: 8)
!852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !853, file: !450, line: 1105, type: !10)
!853 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1105, column: 8)
!854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !855, file: !450, line: 1116, type: !10)
!855 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1116, column: 8)
!856 = !DISubprogram(name: "call_tzname", scope: !450, file: !450, line: 946, type: !131, isLocal: true, isDefinition: true, scopeLine: 947, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @call_tzname, variables: !857)
!857 = !{!858, !859, !860, !861}
!858 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 1, scope: !856, file: !450, line: 946, type: !10)
!859 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 2, scope: !856, file: !450, line: 946, type: !10)
!860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !856, file: !450, line: 948, type: !10)
!861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !862, file: !450, line: 967, type: !10)
!862 = distinct !DILexicalBlock(scope: !863, file: !450, line: 967, column: 12)
!863 = distinct !DILexicalBlock(scope: !864, file: !450, line: 963, column: 81)
!864 = distinct !DILexicalBlock(scope: !856, file: !450, line: 963, column: 9)
!865 = !DISubprogram(name: "make_freplacement", scope: !450, file: !450, line: 1121, type: !121, isLocal: true, isDefinition: true, scopeLine: 1122, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @make_freplacement, variables: !866)
!866 = !{!867, !868}
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !865, file: !450, line: 1121, type: !10)
!868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "freplacement", scope: !865, file: !450, line: 1123, type: !869)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 512, align: 8, elements: !870)
!870 = !{!871}
!871 = !DISubrange(count: 64)
!872 = !DISubprogram(name: "date_format", scope: !450, file: !450, line: 2681, type: !873, isLocal: true, isDefinition: true, scopeLine: 2682, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, %struct._object*)* @date_format, variables: !875)
!873 = !DISubroutineType(types: !874)
!874 = !{!10, !355, !10}
!875 = !{!876, !877, !878}
!876 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !872, file: !450, line: 2681, type: !355)
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !872, file: !450, line: 2681, type: !10)
!878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !872, file: !450, line: 2683, type: !10)
!879 = !DISubprogram(name: "date_timetuple", scope: !450, file: !450, line: 2743, type: !500, isLocal: true, isDefinition: true, scopeLine: 2744, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_timetuple, variables: !880)
!880 = !{!881}
!881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !879, file: !450, line: 2743, type: !355)
!882 = !DISubprogram(name: "build_struct_time", scope: !450, file: !450, line: 1330, type: !883, isLocal: true, isDefinition: true, scopeLine: 1331, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32, i32, i32, i32, i32, i32)* @build_struct_time, variables: !885)
!883 = !DISubroutineType(types: !884)
!884 = !{!10, !49, !49, !49, !49, !49, !49, !49}
!885 = !{!886, !887, !888, !889, !890, !891, !892, !893, !894, !895}
!886 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 1, scope: !882, file: !450, line: 1330, type: !49)
!887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 2, scope: !882, file: !450, line: 1330, type: !49)
!888 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 3, scope: !882, file: !450, line: 1330, type: !49)
!889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hh", arg: 4, scope: !882, file: !450, line: 1330, type: !49)
!890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mm", arg: 5, scope: !882, file: !450, line: 1330, type: !49)
!891 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ss", arg: 6, scope: !882, file: !450, line: 1330, type: !49)
!892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dstflag", arg: 7, scope: !882, file: !450, line: 1330, type: !49)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !882, file: !450, line: 1332, type: !10)
!894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !882, file: !450, line: 1333, type: !10)
!895 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !896, file: !450, line: 1346, type: !10)
!896 = distinct !DILexicalBlock(scope: !897, file: !450, line: 1346, column: 12)
!897 = distinct !DILexicalBlock(scope: !898, file: !450, line: 1336, column: 29)
!898 = distinct !DILexicalBlock(scope: !882, file: !450, line: 1336, column: 9)
!899 = !DISubprogram(name: "date_isocalendar", scope: !450, file: !450, line: 2706, type: !500, isLocal: true, isDefinition: true, scopeLine: 2707, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_isocalendar, variables: !900)
!900 = !{!901, !902, !903, !904, !905, !906}
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !899, file: !450, line: 2706, type: !355)
!902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !899, file: !450, line: 2708, type: !49)
!903 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "week1_monday", scope: !899, file: !450, line: 2709, type: !49)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "today", scope: !899, file: !450, line: 2710, type: !49)
!905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "week", scope: !899, file: !450, line: 2711, type: !49)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !899, file: !450, line: 2712, type: !49)
!907 = !DISubprogram(name: "iso_week1_monday", scope: !450, file: !450, line: 354, type: !547, isLocal: true, isDefinition: true, scopeLine: 355, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @iso_week1_monday, variables: !908)
!908 = !{!909, !910, !911, !912}
!909 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !907, file: !450, line: 354, type: !49)
!910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "first_day", scope: !907, file: !450, line: 356, type: !49)
!911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "first_weekday", scope: !907, file: !450, line: 358, type: !49)
!912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "week1_monday", scope: !907, file: !450, line: 360, type: !49)
!913 = !DISubprogram(name: "date_isoformat", scope: !450, file: !450, line: 2635, type: !500, isLocal: true, isDefinition: true, scopeLine: 2636, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_isoformat, variables: !914)
!914 = !{!915}
!915 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !913, file: !450, line: 2635, type: !355)
!916 = !DISubprogram(name: "date_isoweekday", scope: !450, file: !450, line: 2698, type: !500, isLocal: true, isDefinition: true, scopeLine: 2699, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_isoweekday, variables: !917)
!917 = !{!918, !919}
!918 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !916, file: !450, line: 2698, type: !355)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dow", scope: !916, file: !450, line: 2700, type: !49)
!920 = !DISubprogram(name: "date_toordinal", scope: !450, file: !450, line: 2791, type: !500, isLocal: true, isDefinition: true, scopeLine: 2792, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_toordinal, variables: !921)
!921 = !{!922}
!922 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !920, file: !450, line: 2791, type: !355)
!923 = !DISubprogram(name: "date_weekday", scope: !450, file: !450, line: 2798, type: !500, isLocal: true, isDefinition: true, scopeLine: 2799, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_weekday, variables: !924)
!924 = !{!925, !926}
!925 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !923, file: !450, line: 2798, type: !355)
!926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dow", scope: !923, file: !450, line: 2800, type: !49)
!927 = !DISubprogram(name: "date_replace", scope: !450, file: !450, line: 2752, type: !695, isLocal: true, isDefinition: true, scopeLine: 2753, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, %struct._object*, %struct._object*)* @date_replace, variables: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936, !937}
!929 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !927, file: !450, line: 2752, type: !355)
!930 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !927, file: !450, line: 2752, type: !10)
!931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !927, file: !450, line: 2752, type: !10)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clone", scope: !927, file: !450, line: 2754, type: !10)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !927, file: !450, line: 2755, type: !10)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !927, file: !450, line: 2756, type: !49)
!935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "month", scope: !927, file: !450, line: 2757, type: !49)
!936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !927, file: !450, line: 2758, type: !49)
!937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !938, file: !450, line: 2767, type: !10)
!938 = distinct !DILexicalBlock(scope: !927, file: !450, line: 2767, column: 8)
!939 = !DISubprogram(name: "date_reduce", scope: !450, file: !450, line: 2818, type: !873, isLocal: true, isDefinition: true, scopeLine: 2819, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, %struct._object*)* @date_reduce, variables: !940)
!940 = !{!941, !942}
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !939, file: !450, line: 2818, type: !355)
!942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !939, file: !450, line: 2818, type: !10)
!943 = !DISubprogram(name: "date_getstate", scope: !450, file: !450, line: 2809, type: !500, isLocal: true, isDefinition: true, scopeLine: 2810, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*)* @date_getstate, variables: !944)
!944 = !{!945, !946}
!945 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !943, file: !450, line: 2809, type: !355)
!946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "field", scope: !943, file: !450, line: 2811, type: !10)
!947 = !DISubprogram(name: "date_year", scope: !450, file: !450, line: 2392, type: !948, isLocal: true, isDefinition: true, scopeLine: 2393, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, i8*)* @date_year, variables: !950)
!948 = !DISubroutineType(types: !949)
!949 = !{!10, !355, !9}
!950 = !{!951, !952}
!951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !947, file: !450, line: 2392, type: !355)
!952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !947, file: !450, line: 2392, type: !9)
!953 = !DISubprogram(name: "date_month", scope: !450, file: !450, line: 2398, type: !948, isLocal: true, isDefinition: true, scopeLine: 2399, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, i8*)* @date_month, variables: !954)
!954 = !{!955, !956}
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !953, file: !450, line: 2398, type: !355)
!956 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !953, file: !450, line: 2398, type: !9)
!957 = !DISubprogram(name: "date_day", scope: !450, file: !450, line: 2404, type: !948, isLocal: true, isDefinition: true, scopeLine: 2405, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Date*, i8*)* @date_day, variables: !958)
!958 = !{!959, !960}
!959 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !957, file: !450, line: 2404, type: !355)
!960 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !957, file: !450, line: 2404, type: !9)
!961 = !DISubprogram(name: "date_new", scope: !450, file: !450, line: 2421, type: !962, isLocal: true, isDefinition: true, scopeLine: 2422, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @date_new, variables: !966)
!962 = !DISubroutineType(types: !963)
!963 = !{!10, !964, !10, !10}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !12, line: 422, baseType: !25)
!966 = !{!967, !968, !969, !970, !971, !972, !973, !974, !975, !978}
!967 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !961, file: !450, line: 2421, type: !964)
!968 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !961, file: !450, line: 2421, type: !10)
!969 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !961, file: !450, line: 2421, type: !10)
!970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !961, file: !450, line: 2423, type: !10)
!971 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !961, file: !450, line: 2424, type: !10)
!972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !961, file: !450, line: 2425, type: !49)
!973 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "month", scope: !961, file: !450, line: 2426, type: !49)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !961, file: !450, line: 2427, type: !49)
!975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "me", scope: !976, file: !450, line: 2435, type: !355)
!976 = distinct !DILexicalBlock(scope: !977, file: !450, line: 2434, column: 5)
!977 = distinct !DILexicalBlock(scope: !961, file: !450, line: 2430, column: 9)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pdata", scope: !979, file: !450, line: 2439, type: !57)
!979 = distinct !DILexicalBlock(scope: !980, file: !450, line: 2438, column: 31)
!980 = distinct !DILexicalBlock(scope: !976, file: !450, line: 2438, column: 13)
!981 = !DISubprogram(name: "check_date_args", scope: !450, file: !450, line: 389, type: !554, isLocal: true, isDefinition: true, scopeLine: 390, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32, i32)* @check_date_args, variables: !982)
!982 = !{!983, !984, !985}
!983 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !981, file: !450, line: 389, type: !49)
!984 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !981, file: !450, line: 389, type: !49)
!985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !981, file: !450, line: 389, type: !49)
!986 = !DISubprogram(name: "datetime_dealloc", scope: !450, file: !450, line: 4325, type: !987, isLocal: true, isDefinition: true, scopeLine: 4326, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyDateTime_DateTime*)* @datetime_dealloc, variables: !989)
!987 = !DISubroutineType(types: !988)
!988 = !{null, !394}
!989 = !{!990, !991, !995}
!990 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !986, file: !450, line: 4325, type: !394)
!991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !992, file: !450, line: 4328, type: !10)
!992 = distinct !DILexicalBlock(scope: !993, file: !450, line: 4328, column: 12)
!993 = distinct !DILexicalBlock(scope: !994, file: !450, line: 4327, column: 58)
!994 = distinct !DILexicalBlock(scope: !986, file: !450, line: 4327, column: 9)
!995 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !996, file: !450, line: 4328, type: !10)
!996 = distinct !DILexicalBlock(scope: !997, file: !450, line: 4328, column: 108)
!997 = distinct !DILexicalBlock(scope: !992, file: !450, line: 4328, column: 74)
!998 = !DISubprogram(name: "datetime_repr", scope: !450, file: !450, line: 4499, type: !999, isLocal: true, isDefinition: true, scopeLine: 4500, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_repr, variables: !1001)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!10, !394}
!1001 = !{!1002, !1003, !1004}
!1002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !998, file: !450, line: 4499, type: !394)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type_name", scope: !998, file: !450, line: 4501, type: !34)
!1004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "baserepr", scope: !998, file: !450, line: 4502, type: !10)
!1005 = !DISubprogram(name: "append_keyword_tzinfo", scope: !450, file: !450, line: 980, type: !131, isLocal: true, isDefinition: true, scopeLine: 981, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @append_keyword_tzinfo, variables: !1006)
!1006 = !{!1007, !1008, !1009, !1010, !1012}
!1007 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "repr", arg: 1, scope: !1005, file: !450, line: 980, type: !10)
!1008 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 2, scope: !1005, file: !450, line: 980, type: !10)
!1009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1005, file: !450, line: 982, type: !10)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1011, file: !450, line: 991, type: !10)
!1011 = distinct !DILexicalBlock(scope: !1005, file: !450, line: 991, column: 8)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1013, file: !450, line: 995, type: !10)
!1013 = distinct !DILexicalBlock(scope: !1005, file: !450, line: 995, column: 8)
!1014 = !DISubprogram(name: "datetime_add", scope: !450, file: !450, line: 4387, type: !131, isLocal: true, isDefinition: true, scopeLine: 4388, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_add, variables: !1015)
!1015 = !{!1016, !1017}
!1016 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1014, file: !450, line: 4387, type: !10)
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1014, file: !450, line: 4387, type: !10)
!1018 = !DISubprogram(name: "add_datetime_timedelta", scope: !450, file: !450, line: 4361, type: !1019, isLocal: true, isDefinition: true, scopeLine: 4363, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, %struct.PyDateTime_Delta*, i32)* @add_datetime_timedelta, variables: !1021)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!10, !394, !368, !49}
!1021 = !{!1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031}
!1022 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "date", arg: 1, scope: !1018, file: !450, line: 4361, type: !394)
!1023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 2, scope: !1018, file: !450, line: 4361, type: !368)
!1024 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "factor", arg: 3, scope: !1018, file: !450, line: 4362, type: !49)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !1018, file: !450, line: 4367, type: !49)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "month", scope: !1018, file: !450, line: 4368, type: !49)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !1018, file: !450, line: 4369, type: !49)
!1028 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hour", scope: !1018, file: !450, line: 4370, type: !49)
!1029 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minute", scope: !1018, file: !450, line: 4371, type: !49)
!1030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "second", scope: !1018, file: !450, line: 4372, type: !49)
!1031 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "microsecond", scope: !1018, file: !450, line: 4373, type: !49)
!1032 = !DISubprogram(name: "normalize_datetime", scope: !450, file: !450, line: 573, type: !1033, isLocal: true, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32*, i32*, i32*, i32*, i32*, i32*, i32*)* @normalize_datetime, variables: !1035)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!49, !523, !523, !523, !523, !523, !523, !523}
!1035 = !{!1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1036 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !1032, file: !450, line: 573, type: !523)
!1037 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !1032, file: !450, line: 573, type: !523)
!1038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !1032, file: !450, line: 573, type: !523)
!1039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hour", arg: 4, scope: !1032, file: !450, line: 574, type: !523)
!1040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minute", arg: 5, scope: !1032, file: !450, line: 574, type: !523)
!1041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "second", arg: 6, scope: !1032, file: !450, line: 574, type: !523)
!1042 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "microsecond", arg: 7, scope: !1032, file: !450, line: 575, type: !523)
!1043 = !DISubprogram(name: "normalize_pair", scope: !450, file: !450, line: 450, type: !1044, isLocal: true, isDefinition: true, scopeLine: 451, flags: DIFlagPrototyped, isOptimized: true, function: void (i32*, i32*, i32)* @normalize_pair, variables: !1046)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{null, !523, !523, !49}
!1046 = !{!1047, !1048, !1049, !1050, !1054}
!1047 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 1, scope: !1043, file: !450, line: 450, type: !523)
!1048 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 2, scope: !1043, file: !450, line: 450, type: !523)
!1049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "factor", arg: 3, scope: !1043, file: !450, line: 450, type: !49)
!1050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_hi", scope: !1051, file: !450, line: 455, type: !1053)
!1051 = distinct !DILexicalBlock(scope: !1052, file: !450, line: 454, column: 35)
!1052 = distinct !DILexicalBlock(scope: !1043, file: !450, line: 454, column: 9)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!1054 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_hi", scope: !1051, file: !450, line: 456, type: !1053)
!1055 = !DISubprogram(name: "datetime_subtract", scope: !450, file: !450, line: 4408, type: !131, isLocal: true, isDefinition: true, scopeLine: 4409, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_subtract, variables: !1056)
!1056 = !{!1057, !1058, !1059, !1060, !1065, !1066, !1067, !1068, !1069, !1070, !1076, !1080, !1082, !1088, !1090, !1092, !1094, !1097, !1099}
!1057 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1055, file: !450, line: 4408, type: !10)
!1058 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1055, file: !450, line: 4408, type: !10)
!1059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1055, file: !450, line: 4410, type: !10)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset1", scope: !1061, file: !450, line: 4416, type: !10)
!1061 = distinct !DILexicalBlock(scope: !1062, file: !450, line: 4414, column: 159)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !450, line: 4414, column: 13)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !450, line: 4412, column: 153)
!1064 = distinct !DILexicalBlock(scope: !1055, file: !450, line: 4412, column: 9)
!1065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset2", scope: !1061, file: !450, line: 4416, type: !10)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offdiff", scope: !1061, file: !450, line: 4416, type: !10)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta_d", scope: !1061, file: !450, line: 4417, type: !49)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta_s", scope: !1061, file: !450, line: 4417, type: !49)
!1069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta_us", scope: !1061, file: !450, line: 4417, type: !49)
!1070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1071, file: !450, line: 4430, type: !10)
!1071 = distinct !DILexicalBlock(scope: !1072, file: !450, line: 4430, column: 24)
!1072 = distinct !DILexicalBlock(scope: !1073, file: !450, line: 4429, column: 44)
!1073 = distinct !DILexicalBlock(scope: !1074, file: !450, line: 4429, column: 21)
!1074 = distinct !DILexicalBlock(scope: !1075, file: !450, line: 4424, column: 18)
!1075 = distinct !DILexicalBlock(scope: !1061, file: !450, line: 4419, column: 17)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1077, file: !450, line: 4437, type: !10)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !450, line: 4437, column: 24)
!1078 = distinct !DILexicalBlock(scope: !1079, file: !450, line: 4433, column: 87)
!1079 = distinct !DILexicalBlock(scope: !1074, file: !450, line: 4433, column: 21)
!1080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1081, file: !450, line: 4438, type: !10)
!1081 = distinct !DILexicalBlock(scope: !1078, file: !450, line: 4438, column: 24)
!1082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1083, file: !450, line: 4446, type: !10)
!1083 = distinct !DILexicalBlock(scope: !1084, file: !450, line: 4446, column: 24)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !450, line: 4445, column: 44)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !450, line: 4445, column: 21)
!1086 = distinct !DILexicalBlock(scope: !1087, file: !450, line: 4443, column: 51)
!1087 = distinct !DILexicalBlock(scope: !1061, file: !450, line: 4442, column: 17)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1089, file: !450, line: 4447, type: !10)
!1089 = distinct !DILexicalBlock(scope: !1084, file: !450, line: 4447, column: 24)
!1090 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1091, file: !450, line: 4451, type: !10)
!1091 = distinct !DILexicalBlock(scope: !1061, file: !450, line: 4451, column: 16)
!1092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1093, file: !450, line: 4452, type: !10)
!1093 = distinct !DILexicalBlock(scope: !1061, file: !450, line: 4452, column: 16)
!1094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1095, file: !450, line: 4476, type: !10)
!1095 = distinct !DILexicalBlock(scope: !1096, file: !450, line: 4475, column: 40)
!1096 = distinct !DILexicalBlock(scope: !1061, file: !450, line: 4475, column: 17)
!1097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1098, file: !450, line: 4478, type: !10)
!1098 = distinct !DILexicalBlock(scope: !1095, file: !450, line: 4478, column: 20)
!1099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1100, file: !450, line: 4479, type: !10)
!1100 = distinct !DILexicalBlock(scope: !1095, file: !450, line: 4479, column: 20)
!1101 = !DISubprogram(name: "datetime_utcoffset", scope: !450, file: !450, line: 4339, type: !131, isLocal: true, isDefinition: true, scopeLine: 4339, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_utcoffset, variables: !1102)
!1102 = !{!1103, !1104}
!1103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1101, file: !450, line: 4339, type: !10)
!1104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1101, file: !450, line: 4339, type: !10)
!1105 = !DISubprogram(name: "delta_cmp", scope: !450, file: !450, line: 1801, type: !202, isLocal: true, isDefinition: true, scopeLine: 1802, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @delta_cmp, variables: !1106)
!1106 = !{!1107, !1108, !1109}
!1107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1105, file: !450, line: 1801, type: !10)
!1108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "other", arg: 2, scope: !1105, file: !450, line: 1801, type: !10)
!1109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !1105, file: !450, line: 1803, type: !49)
!1110 = !DISubprogram(name: "delta_subtract", scope: !450, file: !450, line: 1779, type: !131, isLocal: true, isDefinition: true, scopeLine: 1780, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_subtract, variables: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1118, !1119}
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1110, file: !450, line: 1779, type: !10)
!1113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1110, file: !450, line: 1779, type: !10)
!1114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1110, file: !450, line: 1781, type: !10)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "days", scope: !1116, file: !450, line: 1788, type: !49)
!1116 = distinct !DILexicalBlock(scope: !1117, file: !450, line: 1783, column: 289)
!1117 = distinct !DILexicalBlock(scope: !1110, file: !450, line: 1783, column: 9)
!1118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !1116, file: !450, line: 1789, type: !49)
!1119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "microseconds", scope: !1116, file: !450, line: 1790, type: !49)
!1120 = !DISubprogram(name: "datetime_hash", scope: !450, file: !450, line: 4671, type: !1121, isLocal: true, isDefinition: true, scopeLine: 4672, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyDateTime_DateTime*)* @datetime_hash, variables: !1123)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!223, !394}
!1123 = !{!1124, !1125, !1128, !1131, !1132, !1133, !1134, !1138, !1140, !1144, !1146}
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1120, file: !450, line: 4671, type: !394)
!1125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1126, file: !450, line: 4674, type: !10)
!1126 = distinct !DILexicalBlock(scope: !1127, file: !450, line: 4673, column: 31)
!1127 = distinct !DILexicalBlock(scope: !1120, file: !450, line: 4673, column: 9)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp1", scope: !1129, file: !450, line: 4686, type: !10)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !450, line: 4685, column: 14)
!1130 = distinct !DILexicalBlock(scope: !1126, file: !450, line: 4682, column: 13)
!1131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp2", scope: !1129, file: !450, line: 4686, type: !10)
!1132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "days", scope: !1129, file: !450, line: 4687, type: !49)
!1133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !1129, file: !450, line: 4687, type: !49)
!1134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1135, file: !450, line: 4700, type: !10)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !450, line: 4700, column: 20)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !450, line: 4699, column: 38)
!1137 = distinct !DILexicalBlock(scope: !1129, file: !450, line: 4699, column: 17)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1139, file: !450, line: 4704, type: !10)
!1139 = distinct !DILexicalBlock(scope: !1129, file: !450, line: 4704, column: 16)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1141, file: !450, line: 4706, type: !10)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !450, line: 4706, column: 20)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !450, line: 4705, column: 38)
!1143 = distinct !DILexicalBlock(scope: !1129, file: !450, line: 4705, column: 17)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1145, file: !450, line: 4710, type: !10)
!1145 = distinct !DILexicalBlock(scope: !1129, file: !450, line: 4710, column: 16)
!1146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1147, file: !450, line: 4712, type: !10)
!1147 = distinct !DILexicalBlock(scope: !1126, file: !450, line: 4712, column: 12)
!1148 = !DISubprogram(name: "datetime_str", scope: !450, file: !450, line: 4534, type: !999, isLocal: true, isDefinition: true, scopeLine: 4535, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_str, variables: !1149)
!1149 = !{!1150}
!1150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1148, file: !450, line: 4534, type: !394)
!1151 = !DISubprogram(name: "datetime_richcompare", scope: !450, file: !450, line: 4588, type: !276, isLocal: true, isDefinition: true, scopeLine: 4589, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @datetime_richcompare, variables: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1164, !1166, !1168, !1170}
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1151, file: !450, line: 4588, type: !10)
!1154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "other", arg: 2, scope: !1151, file: !450, line: 4588, type: !10)
!1155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !1151, file: !450, line: 4588, type: !49)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1151, file: !450, line: 4590, type: !10)
!1157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset1", scope: !1151, file: !450, line: 4591, type: !10)
!1158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset2", scope: !1151, file: !450, line: 4591, type: !10)
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !1151, file: !450, line: 4592, type: !49)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !1161, file: !450, line: 4637, type: !368)
!1161 = distinct !DILexicalBlock(scope: !1162, file: !450, line: 4636, column: 76)
!1162 = distinct !DILexicalBlock(scope: !1163, file: !450, line: 4636, column: 14)
!1163 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4628, column: 9)
!1164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1165, file: !450, line: 4648, type: !10)
!1165 = distinct !DILexicalBlock(scope: !1161, file: !450, line: 4648, column: 12)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1167, file: !450, line: 4665, type: !10)
!1167 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4665, column: 8)
!1168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1169, file: !450, line: 4666, type: !10)
!1169 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4666, column: 8)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1171, file: !450, line: 4666, type: !10)
!1171 = distinct !DILexicalBlock(scope: !1172, file: !450, line: 4666, column: 99)
!1172 = distinct !DILexicalBlock(scope: !1169, file: !450, line: 4666, column: 65)
!1173 = !DISubprogram(name: "cmperror", scope: !450, file: !450, line: 1383, type: !131, isLocal: true, isDefinition: true, scopeLine: 1384, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @cmperror, variables: !1174)
!1174 = !{!1175, !1176}
!1175 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1173, file: !450, line: 1383, type: !10)
!1176 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1173, file: !450, line: 1383, type: !10)
!1177 = !DISubprogram(name: "datetime_datetime_now", scope: !450, file: !450, line: 4179, type: !962, isLocal: true, isDefinition: true, scopeLine: 4180, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @datetime_datetime_now, variables: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183}
!1179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1177, file: !450, line: 4179, type: !964)
!1180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1177, file: !450, line: 4179, type: !10)
!1181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1177, file: !450, line: 4179, type: !10)
!1182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1177, file: !450, line: 4181, type: !10)
!1183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tz", scope: !1177, file: !450, line: 4183, type: !10)
!1184 = !DISubprogram(name: "datetime_datetime_now_impl", scope: !450, file: !450, line: 4196, type: !1185, isLocal: true, isDefinition: true, scopeLine: 4198, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*)* @datetime_datetime_now_impl, variables: !1187)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!10, !964, !10}
!1187 = !{!1188, !1189, !1190, !1191, !1194}
!1188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1184, file: !450, line: 4196, type: !964)
!1189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tz", arg: 2, scope: !1184, file: !450, line: 4196, type: !10)
!1190 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1184, file: !450, line: 4199, type: !10)
!1191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1192, file: !450, line: 4212, type: !10)
!1192 = distinct !DILexicalBlock(scope: !1193, file: !450, line: 4210, column: 56)
!1193 = distinct !DILexicalBlock(scope: !1184, file: !450, line: 4210, column: 9)
!1194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1195, file: !450, line: 4215, type: !10)
!1195 = distinct !DILexicalBlock(scope: !1192, file: !450, line: 4215, column: 12)
!1196 = !DISubprogram(name: "check_tzinfo_subclass", scope: !450, file: !450, line: 834, type: !149, isLocal: true, isDefinition: true, scopeLine: 835, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @check_tzinfo_subclass, variables: !1197)
!1197 = !{!1198}
!1198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1196, file: !450, line: 834, type: !10)
!1199 = !DISubprogram(name: "datetime_best_possible", scope: !450, file: !450, line: 4140, type: !1200, isLocal: true, isDefinition: true, scopeLine: 4141, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct.tm* (i64*)*, %struct._object*)* @datetime_best_possible, variables: !1208)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!10, !10, !1202, !10}
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "TM_FUNC", file: !450, line: 4076, baseType: !1203)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64, align: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!635, !1206}
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!1208 = !{!1209, !1210, !1211, !1212}
!1209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1199, file: !450, line: 4140, type: !10)
!1210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !1199, file: !450, line: 4140, type: !1202)
!1211 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 3, scope: !1199, file: !450, line: 4140, type: !10)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1199, file: !450, line: 4142, type: !1213)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyTime_timeval", file: !4, line: 17, baseType: !1214)
!1214 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1215, line: 30, size: 128, align: 64, elements: !1216)
!1215 = !DIFile(filename: "/usr/include/bits/time.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1216 = !{!1217, !1218}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1214, file: !1215, line: 32, baseType: !447, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1214, file: !1215, line: 33, baseType: !1219, size: 64, align: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !21, line: 150, baseType: !22)
!1220 = !DISubprogram(name: "datetime_from_timet_and_us", scope: !450, file: !450, line: 4083, type: !1221, isLocal: true, isDefinition: true, scopeLine: 4085, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct.tm* (i64*)*, i64, i32, %struct._object*)* @datetime_from_timet_and_us, variables: !1223)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!10, !10, !1202, !445, !49, !10}
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229}
!1224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1220, file: !450, line: 4083, type: !10)
!1225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !1220, file: !450, line: 4083, type: !1202)
!1226 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "timet", arg: 3, scope: !1220, file: !450, line: 4083, type: !445)
!1227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "us", arg: 4, scope: !1220, file: !450, line: 4083, type: !49)
!1228 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 5, scope: !1220, file: !450, line: 4084, type: !10)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tm", scope: !1220, file: !450, line: 4086, type: !635)
!1230 = !DISubprogram(name: "datetime_utcnow", scope: !450, file: !450, line: 4224, type: !131, isLocal: true, isDefinition: true, scopeLine: 4225, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_utcnow, variables: !1231)
!1231 = !{!1232, !1233}
!1232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1230, file: !450, line: 4224, type: !10)
!1233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1230, file: !450, line: 4224, type: !10)
!1234 = !DISubprogram(name: "datetime_fromtimestamp", scope: !450, file: !450, line: 4231, type: !140, isLocal: true, isDefinition: true, scopeLine: 4232, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @datetime_fromtimestamp, variables: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1245}
!1236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1234, file: !450, line: 4231, type: !10)
!1237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1234, file: !450, line: 4231, type: !10)
!1238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1234, file: !450, line: 4231, type: !10)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1234, file: !450, line: 4233, type: !10)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timestamp", scope: !1234, file: !450, line: 4234, type: !10)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1234, file: !450, line: 4235, type: !10)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1243, file: !450, line: 4250, type: !10)
!1243 = distinct !DILexicalBlock(scope: !1244, file: !450, line: 4248, column: 60)
!1244 = distinct !DILexicalBlock(scope: !1234, file: !450, line: 4248, column: 9)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1246, file: !450, line: 4253, type: !10)
!1246 = distinct !DILexicalBlock(scope: !1243, file: !450, line: 4253, column: 12)
!1247 = !DISubprogram(name: "datetime_from_timestamp", scope: !450, file: !450, line: 4124, type: !1248, isLocal: true, isDefinition: true, scopeLine: 4126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct.tm* (i64*)*, %struct._object*, %struct._object*)* @datetime_from_timestamp, variables: !1250)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!10, !10, !1202, !10, !10}
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256}
!1251 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1247, file: !450, line: 4124, type: !10)
!1252 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !1247, file: !450, line: 4124, type: !1202)
!1253 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "timestamp", arg: 3, scope: !1247, file: !450, line: 4124, type: !10)
!1254 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 4, scope: !1247, file: !450, line: 4125, type: !10)
!1255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timet", scope: !1247, file: !450, line: 4127, type: !445)
!1256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1247, file: !450, line: 4128, type: !22)
!1257 = !DISubprogram(name: "datetime_utcfromtimestamp", scope: !450, file: !450, line: 4260, type: !131, isLocal: true, isDefinition: true, scopeLine: 4261, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_utcfromtimestamp, variables: !1258)
!1258 = !{!1259, !1260, !1261, !1262}
!1259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1257, file: !450, line: 4260, type: !10)
!1260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1257, file: !450, line: 4260, type: !10)
!1261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timestamp", scope: !1257, file: !450, line: 4262, type: !10)
!1262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1257, file: !450, line: 4263, type: !10)
!1263 = !DISubprogram(name: "datetime_strptime", scope: !450, file: !450, line: 4273, type: !131, isLocal: true, isDefinition: true, scopeLine: 4274, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_strptime, variables: !1264)
!1264 = !{!1265, !1266, !1267, !1268}
!1265 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1263, file: !450, line: 4273, type: !10)
!1266 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1263, file: !450, line: 4273, type: !10)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "string", scope: !1263, file: !450, line: 4276, type: !10)
!1268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !1263, file: !450, line: 4276, type: !10)
!1269 = !DISubprogram(name: "datetime_combine", scope: !450, file: !450, line: 4293, type: !140, isLocal: true, isDefinition: true, scopeLine: 4294, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @datetime_combine, variables: !1270)
!1270 = !{!1271, !1272, !1273, !1274, !1275, !1276, !1277}
!1271 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cls", arg: 1, scope: !1269, file: !450, line: 4293, type: !10)
!1272 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1269, file: !450, line: 4293, type: !10)
!1273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1269, file: !450, line: 4293, type: !10)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "date", scope: !1269, file: !450, line: 4296, type: !10)
!1275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !1269, file: !450, line: 4297, type: !10)
!1276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1269, file: !450, line: 4298, type: !10)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1278, file: !450, line: 4303, type: !10)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !450, line: 4302, column: 67)
!1279 = distinct !DILexicalBlock(scope: !1269, file: !450, line: 4300, column: 9)
!1280 = !DISubprogram(name: "datetime_getdate", scope: !450, file: !450, line: 4944, type: !999, isLocal: true, isDefinition: true, scopeLine: 4945, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_getdate, variables: !1281)
!1281 = !{!1282}
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1280, file: !450, line: 4944, type: !394)
!1283 = !DISubprogram(name: "datetime_gettime", scope: !450, file: !450, line: 4952, type: !999, isLocal: true, isDefinition: true, scopeLine: 4953, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_gettime, variables: !1284)
!1284 = !{!1285}
!1285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1283, file: !450, line: 4952, type: !394)
!1286 = !DISubprogram(name: "datetime_gettimetz", scope: !450, file: !450, line: 4962, type: !999, isLocal: true, isDefinition: true, scopeLine: 4963, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_gettimetz, variables: !1287)
!1287 = !{!1288}
!1288 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1286, file: !450, line: 4962, type: !394)
!1289 = !DISubprogram(name: "datetime_ctime", scope: !450, file: !450, line: 4577, type: !999, isLocal: true, isDefinition: true, scopeLine: 4578, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_ctime, variables: !1290)
!1290 = !{!1291}
!1291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1289, file: !450, line: 4577, type: !394)
!1292 = !DISubprogram(name: "datetime_timetuple", scope: !450, file: !450, line: 4874, type: !999, isLocal: true, isDefinition: true, scopeLine: 4875, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_timetuple, variables: !1293)
!1293 = !{!1294, !1295, !1296, !1299}
!1294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1292, file: !450, line: 4874, type: !394)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dstflag", scope: !1292, file: !450, line: 4876, type: !49)
!1296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !1297, file: !450, line: 4879, type: !10)
!1297 = distinct !DILexicalBlock(scope: !1298, file: !450, line: 4878, column: 95)
!1298 = distinct !DILexicalBlock(scope: !1292, file: !450, line: 4878, column: 9)
!1299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1300, file: !450, line: 4887, type: !10)
!1300 = distinct !DILexicalBlock(scope: !1297, file: !450, line: 4887, column: 12)
!1301 = !DISubprogram(name: "call_dst", scope: !450, file: !450, line: 934, type: !131, isLocal: true, isDefinition: true, scopeLine: 935, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @call_dst, variables: !1302)
!1302 = !{!1303, !1304}
!1303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 1, scope: !1301, file: !450, line: 934, type: !10)
!1304 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfoarg", arg: 2, scope: !1301, file: !450, line: 934, type: !10)
!1305 = !DISubprogram(name: "delta_bool", scope: !450, file: !450, line: 2190, type: !1306, isLocal: true, isDefinition: true, scopeLine: 2191, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyDateTime_Delta*)* @delta_bool, variables: !1308)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!49, !368}
!1308 = !{!1309}
!1309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1305, file: !450, line: 2190, type: !368)
!1310 = !DISubprogram(name: "datetime_timestamp", scope: !450, file: !450, line: 4899, type: !999, isLocal: true, isDefinition: true, scopeLine: 4900, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_timestamp, variables: !1311)
!1311 = !{!1312, !1313, !1314, !1317, !1319, !1321}
!1312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1310, file: !450, line: 4899, type: !394)
!1313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1310, file: !450, line: 4901, type: !10)
!1314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !1315, file: !450, line: 4904, type: !10)
!1315 = distinct !DILexicalBlock(scope: !1316, file: !450, line: 4903, column: 95)
!1316 = distinct !DILexicalBlock(scope: !1310, file: !450, line: 4903, column: 9)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1318, file: !450, line: 4909, type: !10)
!1318 = distinct !DILexicalBlock(scope: !1315, file: !450, line: 4909, column: 12)
!1319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !1320, file: !450, line: 4912, type: !636)
!1320 = distinct !DILexicalBlock(scope: !1316, file: !450, line: 4911, column: 10)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timestamp", scope: !1320, file: !450, line: 4913, type: !445)
!1322 = !DISubprogram(name: "delta_total_seconds", scope: !450, file: !450, line: 2258, type: !121, isLocal: true, isDefinition: true, scopeLine: 2259, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @delta_total_seconds, variables: !1323)
!1323 = !{!1324, !1325, !1326, !1327}
!1324 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1322, file: !450, line: 2258, type: !10)
!1325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total_seconds", scope: !1322, file: !450, line: 2260, type: !10)
!1326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total_microseconds", scope: !1322, file: !450, line: 2261, type: !10)
!1327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1328, file: !450, line: 2269, type: !10)
!1328 = distinct !DILexicalBlock(scope: !1322, file: !450, line: 2269, column: 8)
!1329 = !DISubprogram(name: "delta_to_microseconds", scope: !450, file: !450, line: 1420, type: !827, isLocal: true, isDefinition: true, scopeLine: 1421, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_to_microseconds, variables: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1335, !1336, !1338, !1340, !1342, !1344, !1346, !1349, !1351, !1354, !1356}
!1331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1329, file: !450, line: 1420, type: !368)
!1332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x1", scope: !1329, file: !450, line: 1422, type: !10)
!1333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x2", scope: !1329, file: !450, line: 1423, type: !10)
!1334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x3", scope: !1329, file: !450, line: 1424, type: !10)
!1335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1329, file: !450, line: 1425, type: !10)
!1336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1337, file: !450, line: 1433, type: !10)
!1337 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1433, column: 8)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1339, file: !450, line: 1443, type: !10)
!1339 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1443, column: 8)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1341, file: !450, line: 1444, type: !10)
!1341 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1444, column: 8)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1343, file: !450, line: 1451, type: !10)
!1343 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1451, column: 8)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1345, file: !450, line: 1461, type: !10)
!1345 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1461, column: 8)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1347, file: !450, line: 1461, type: !10)
!1347 = distinct !DILexicalBlock(scope: !1348, file: !450, line: 1461, column: 94)
!1348 = distinct !DILexicalBlock(scope: !1345, file: !450, line: 1461, column: 60)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1350, file: !450, line: 1462, type: !10)
!1350 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1462, column: 8)
!1351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1352, file: !450, line: 1462, type: !10)
!1352 = distinct !DILexicalBlock(scope: !1353, file: !450, line: 1462, column: 94)
!1353 = distinct !DILexicalBlock(scope: !1350, file: !450, line: 1462, column: 60)
!1354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1355, file: !450, line: 1463, type: !10)
!1355 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1463, column: 8)
!1356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1357, file: !450, line: 1463, type: !10)
!1357 = distinct !DILexicalBlock(scope: !1358, file: !450, line: 1463, column: 94)
!1358 = distinct !DILexicalBlock(scope: !1355, file: !450, line: 1463, column: 60)
!1359 = !DISubprogram(name: "datetime_utctimetuple", scope: !450, file: !450, line: 4972, type: !999, isLocal: true, isDefinition: true, scopeLine: 4973, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_utctimetuple, variables: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1373, !1377, !1380}
!1361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1359, file: !450, line: 4972, type: !394)
!1362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1359, file: !450, line: 4974, type: !49)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !1359, file: !450, line: 4974, type: !49)
!1364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !1359, file: !450, line: 4974, type: !49)
!1365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hh", scope: !1359, file: !450, line: 4974, type: !49)
!1366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mm", scope: !1359, file: !450, line: 4974, type: !49)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ss", scope: !1359, file: !450, line: 4974, type: !49)
!1368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1359, file: !450, line: 4975, type: !10)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "utcself", scope: !1359, file: !450, line: 4976, type: !394)
!1370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1371, file: !450, line: 4984, type: !10)
!1371 = distinct !DILexicalBlock(scope: !1372, file: !450, line: 4983, column: 10)
!1372 = distinct !DILexicalBlock(scope: !1359, file: !450, line: 4979, column: 9)
!1373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1374, file: !450, line: 4989, type: !10)
!1374 = distinct !DILexicalBlock(scope: !1375, file: !450, line: 4989, column: 16)
!1375 = distinct !DILexicalBlock(scope: !1376, file: !450, line: 4988, column: 42)
!1376 = distinct !DILexicalBlock(scope: !1371, file: !450, line: 4988, column: 13)
!1377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1378, file: !450, line: 4996, type: !10)
!1378 = distinct !DILexicalBlock(scope: !1379, file: !450, line: 4996, column: 16)
!1379 = distinct !DILexicalBlock(scope: !1376, file: !450, line: 4993, column: 14)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1381, file: !450, line: 5008, type: !10)
!1381 = distinct !DILexicalBlock(scope: !1359, file: !450, line: 5008, column: 8)
!1382 = !DISubprogram(name: "datetime_isoformat", scope: !450, file: !450, line: 4540, type: !1383, isLocal: true, isDefinition: true, scopeLine: 4541, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, %struct._object*, %struct._object*)* @datetime_isoformat, variables: !1385)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!10, !394, !10, !10}
!1385 = !{!1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393}
!1386 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1382, file: !450, line: 4540, type: !394)
!1387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1382, file: !450, line: 4540, type: !10)
!1388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1382, file: !450, line: 4540, type: !10)
!1389 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sep", scope: !1382, file: !450, line: 4542, type: !49)
!1390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1382, file: !450, line: 4544, type: !735)
!1391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1382, file: !450, line: 4545, type: !10)
!1392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1382, file: !450, line: 4546, type: !49)
!1393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1394, file: !450, line: 4569, type: !10)
!1394 = distinct !DILexicalBlock(scope: !1395, file: !450, line: 4569, column: 12)
!1395 = distinct !DILexicalBlock(scope: !1396, file: !450, line: 4568, column: 49)
!1396 = distinct !DILexicalBlock(scope: !1382, file: !450, line: 4567, column: 9)
!1397 = !DISubprogram(name: "datetime_tzname", scope: !450, file: !450, line: 4349, type: !131, isLocal: true, isDefinition: true, scopeLine: 4349, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_tzname, variables: !1398)
!1398 = !{!1399, !1400}
!1399 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1397, file: !450, line: 4349, type: !10)
!1400 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1397, file: !450, line: 4349, type: !10)
!1401 = !DISubprogram(name: "datetime_dst", scope: !450, file: !450, line: 4344, type: !131, isLocal: true, isDefinition: true, scopeLine: 4344, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @datetime_dst, variables: !1402)
!1402 = !{!1403, !1404}
!1403 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1401, file: !450, line: 4344, type: !10)
!1404 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1401, file: !450, line: 4344, type: !10)
!1405 = !DISubprogram(name: "datetime_replace", scope: !450, file: !450, line: 4718, type: !1383, isLocal: true, isDefinition: true, scopeLine: 4719, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, %struct._object*, %struct._object*)* @datetime_replace, variables: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420}
!1407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1405, file: !450, line: 4718, type: !394)
!1408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1405, file: !450, line: 4718, type: !10)
!1409 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1405, file: !450, line: 4718, type: !10)
!1410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clone", scope: !1405, file: !450, line: 4720, type: !10)
!1411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1405, file: !450, line: 4721, type: !10)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1405, file: !450, line: 4722, type: !49)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !1405, file: !450, line: 4723, type: !49)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !1405, file: !450, line: 4724, type: !49)
!1415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hh", scope: !1405, file: !450, line: 4725, type: !49)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mm", scope: !1405, file: !450, line: 4726, type: !49)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ss", scope: !1405, file: !450, line: 4727, type: !49)
!1418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1405, file: !450, line: 4728, type: !49)
!1419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1405, file: !450, line: 4729, type: !10)
!1420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1421, file: !450, line: 4740, type: !10)
!1421 = distinct !DILexicalBlock(scope: !1405, file: !450, line: 4740, column: 8)
!1422 = !DISubprogram(name: "datetime_astimezone", scope: !450, file: !450, line: 4808, type: !1423, isLocal: true, isDefinition: true, scopeLine: 4809, flags: DIFlagPrototyped, isOptimized: true, function: %struct.PyDateTime_DateTime* (%struct.PyDateTime_DateTime*, %struct._object*, %struct._object*)* @datetime_astimezone, variables: !1425)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!394, !394, !10, !10}
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1437, !1439, !1445, !1447}
!1426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1422, file: !450, line: 4808, type: !394)
!1427 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1422, file: !450, line: 4808, type: !10)
!1428 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1422, file: !450, line: 4808, type: !10)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1422, file: !450, line: 4810, type: !394)
!1430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1422, file: !450, line: 4811, type: !10)
!1431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1422, file: !450, line: 4812, type: !10)
!1432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1422, file: !450, line: 4813, type: !10)
!1433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1434, file: !450, line: 4837, type: !10)
!1434 = distinct !DILexicalBlock(scope: !1435, file: !450, line: 4837, column: 12)
!1435 = distinct !DILexicalBlock(scope: !1436, file: !450, line: 4836, column: 38)
!1436 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4836, column: 9)
!1437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1438, file: !450, line: 4847, type: !10)
!1438 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4847, column: 8)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1440, file: !450, line: 4856, type: !10)
!1440 = distinct !DILexicalBlock(scope: !1441, file: !450, line: 4856, column: 16)
!1441 = distinct !DILexicalBlock(scope: !1442, file: !450, line: 4855, column: 35)
!1442 = distinct !DILexicalBlock(scope: !1443, file: !450, line: 4855, column: 13)
!1443 = distinct !DILexicalBlock(scope: !1444, file: !450, line: 4853, column: 38)
!1444 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4853, column: 9)
!1445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1446, file: !450, line: 4863, type: !10)
!1446 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4863, column: 8)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1448, file: !450, line: 4868, type: !10)
!1448 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4868, column: 8)
!1449 = !DISubprogram(name: "local_timezone", scope: !450, file: !450, line: 4745, type: !999, isLocal: true, isDefinition: true, scopeLine: 4746, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @local_timezone, variables: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1462, !1464, !1466, !1468, !1471}
!1451 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "utc_time", arg: 1, scope: !1449, file: !450, line: 4745, type: !394)
!1452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1449, file: !450, line: 4747, type: !10)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timep", scope: !1449, file: !450, line: 4748, type: !635)
!1454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "timestamp", scope: !1449, file: !450, line: 4749, type: !445)
!1455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !1449, file: !450, line: 4750, type: !10)
!1456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one_second", scope: !1449, file: !450, line: 4751, type: !10)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !1449, file: !450, line: 4752, type: !10)
!1458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nameo", scope: !1449, file: !450, line: 4753, type: !10)
!1459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zone", scope: !1449, file: !450, line: 4754, type: !34)
!1460 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1461, file: !450, line: 4764, type: !10)
!1461 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4764, column: 8)
!1462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1463, file: !450, line: 4767, type: !10)
!1463 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4767, column: 8)
!1464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1465, file: !450, line: 4769, type: !10)
!1465 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4769, column: 8)
!1466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1467, file: !450, line: 4801, type: !10)
!1467 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4801, column: 8)
!1468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1469, file: !450, line: 4801, type: !10)
!1469 = distinct !DILexicalBlock(scope: !1470, file: !450, line: 4801, column: 97)
!1470 = distinct !DILexicalBlock(scope: !1467, file: !450, line: 4801, column: 63)
!1471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1472, file: !450, line: 4803, type: !10)
!1472 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4803, column: 8)
!1473 = !DISubprogram(name: "divide_timedelta_timedelta", scope: !450, file: !450, line: 1625, type: !1474, isLocal: true, isDefinition: true, scopeLine: 1626, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*, %struct.PyDateTime_Delta*)* @divide_timedelta_timedelta, variables: !1476)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!10, !368, !368}
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1486, !1488}
!1477 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1473, file: !450, line: 1625, type: !368)
!1478 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1473, file: !450, line: 1625, type: !368)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_left", scope: !1473, file: !450, line: 1627, type: !10)
!1480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_right", scope: !1473, file: !450, line: 1628, type: !10)
!1481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1473, file: !450, line: 1629, type: !10)
!1482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1483, file: !450, line: 1637, type: !10)
!1483 = distinct !DILexicalBlock(scope: !1484, file: !450, line: 1637, column: 12)
!1484 = distinct !DILexicalBlock(scope: !1485, file: !450, line: 1636, column: 35)
!1485 = distinct !DILexicalBlock(scope: !1473, file: !450, line: 1636, column: 9)
!1486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1487, file: !450, line: 1642, type: !10)
!1487 = distinct !DILexicalBlock(scope: !1473, file: !450, line: 1642, column: 8)
!1488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1489, file: !450, line: 1643, type: !10)
!1489 = distinct !DILexicalBlock(scope: !1473, file: !450, line: 1643, column: 8)
!1490 = !DISubprogram(name: "new_timezone", scope: !450, file: !450, line: 798, type: !131, isLocal: true, isDefinition: true, scopeLine: 799, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @new_timezone, variables: !1491)
!1491 = !{!1492, !1493}
!1492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 1, scope: !1490, file: !450, line: 798, type: !10)
!1493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1490, file: !450, line: 798, type: !10)
!1494 = !DISubprogram(name: "datetime_reduce", scope: !450, file: !450, line: 5038, type: !1495, isLocal: true, isDefinition: true, scopeLine: 5039, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, %struct._object*)* @datetime_reduce, variables: !1497)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!10, !394, !10}
!1497 = !{!1498, !1499}
!1498 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1494, file: !450, line: 5038, type: !394)
!1499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1494, file: !450, line: 5038, type: !10)
!1500 = !DISubprogram(name: "datetime_getstate", scope: !450, file: !450, line: 5020, type: !999, isLocal: true, isDefinition: true, scopeLine: 5021, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*)* @datetime_getstate, variables: !1501)
!1501 = !{!1502, !1503, !1504, !1505}
!1502 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1500, file: !450, line: 5020, type: !394)
!1503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "basestate", scope: !1500, file: !450, line: 5022, type: !10)
!1504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1500, file: !450, line: 5023, type: !10)
!1505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1506, file: !450, line: 5032, type: !10)
!1506 = distinct !DILexicalBlock(scope: !1507, file: !450, line: 5032, column: 12)
!1507 = distinct !DILexicalBlock(scope: !1508, file: !450, line: 5027, column: 34)
!1508 = distinct !DILexicalBlock(scope: !1500, file: !450, line: 5027, column: 9)
!1509 = !DISubprogram(name: "datetime_hour", scope: !450, file: !450, line: 3962, type: !1510, isLocal: true, isDefinition: true, scopeLine: 3963, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_hour, variables: !1512)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!10, !394, !9}
!1512 = !{!1513, !1514}
!1513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1509, file: !450, line: 3962, type: !394)
!1514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1509, file: !450, line: 3962, type: !9)
!1515 = !DISubprogram(name: "datetime_minute", scope: !450, file: !450, line: 3968, type: !1510, isLocal: true, isDefinition: true, scopeLine: 3969, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_minute, variables: !1516)
!1516 = !{!1517, !1518}
!1517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1515, file: !450, line: 3968, type: !394)
!1518 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1515, file: !450, line: 3968, type: !9)
!1519 = !DISubprogram(name: "datetime_second", scope: !450, file: !450, line: 3974, type: !1510, isLocal: true, isDefinition: true, scopeLine: 3975, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_second, variables: !1520)
!1520 = !{!1521, !1522}
!1521 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1519, file: !450, line: 3974, type: !394)
!1522 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1519, file: !450, line: 3974, type: !9)
!1523 = !DISubprogram(name: "datetime_microsecond", scope: !450, file: !450, line: 3980, type: !1510, isLocal: true, isDefinition: true, scopeLine: 3981, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_microsecond, variables: !1524)
!1524 = !{!1525, !1526}
!1525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1523, file: !450, line: 3980, type: !394)
!1526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1523, file: !450, line: 3980, type: !9)
!1527 = !DISubprogram(name: "datetime_tzinfo", scope: !450, file: !450, line: 3986, type: !1510, isLocal: true, isDefinition: true, scopeLine: 3987, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_DateTime*, i8*)* @datetime_tzinfo, variables: !1528)
!1528 = !{!1529, !1530, !1531}
!1529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1527, file: !450, line: 3986, type: !394)
!1530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1527, file: !450, line: 3986, type: !9)
!1531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1527, file: !450, line: 3988, type: !10)
!1532 = !DISubprogram(name: "datetime_alloc", scope: !450, file: !450, line: 621, type: !1533, isLocal: true, isDefinition: true, scopeLine: 622, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, i64)* @datetime_alloc, variables: !1535)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!10, !964, !16}
!1535 = !{!1536, !1537, !1538}
!1536 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1532, file: !450, line: 621, type: !964)
!1537 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "aware", arg: 2, scope: !1532, file: !450, line: 621, type: !16)
!1538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1532, file: !450, line: 623, type: !10)
!1539 = !DISubprogram(name: "datetime_new", scope: !450, file: !450, line: 4012, type: !962, isLocal: true, isDefinition: true, scopeLine: 4013, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @datetime_new, variables: !1540)
!1540 = !{!1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1557, !1558}
!1541 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1539, file: !450, line: 4012, type: !964)
!1542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1539, file: !450, line: 4012, type: !10)
!1543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1539, file: !450, line: 4012, type: !10)
!1544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1539, file: !450, line: 4014, type: !10)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1539, file: !450, line: 4015, type: !10)
!1546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "year", scope: !1539, file: !450, line: 4016, type: !49)
!1547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "month", scope: !1539, file: !450, line: 4017, type: !49)
!1548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !1539, file: !450, line: 4018, type: !49)
!1549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hour", scope: !1539, file: !450, line: 4019, type: !49)
!1550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minute", scope: !1539, file: !450, line: 4020, type: !49)
!1551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "second", scope: !1539, file: !450, line: 4021, type: !49)
!1552 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "usecond", scope: !1539, file: !450, line: 4022, type: !49)
!1553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1539, file: !450, line: 4023, type: !10)
!1554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "me", scope: !1555, file: !450, line: 4032, type: !394)
!1555 = distinct !DILexicalBlock(scope: !1556, file: !450, line: 4031, column: 5)
!1556 = distinct !DILexicalBlock(scope: !1539, file: !450, line: 4026, column: 9)
!1557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aware", scope: !1555, file: !450, line: 4033, type: !36)
!1558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pdata", scope: !1559, file: !450, line: 4046, type: !57)
!1559 = distinct !DILexicalBlock(scope: !1560, file: !450, line: 4045, column: 31)
!1560 = distinct !DILexicalBlock(scope: !1555, file: !450, line: 4045, column: 13)
!1561 = !DISubprogram(name: "check_time_args", scope: !450, file: !450, line: 414, type: !1562, isLocal: true, isDefinition: true, scopeLine: 415, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32, i32, i32)* @check_time_args, variables: !1564)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!49, !49, !49, !49, !49}
!1564 = !{!1565, !1566, !1567, !1568}
!1565 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h", arg: 1, scope: !1561, file: !450, line: 414, type: !49)
!1566 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 2, scope: !1561, file: !450, line: 414, type: !49)
!1567 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 3, scope: !1561, file: !450, line: 414, type: !49)
!1568 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "us", arg: 4, scope: !1561, file: !450, line: 414, type: !49)
!1569 = !DISubprogram(name: "delta_repr", scope: !450, file: !450, line: 2198, type: !827, isLocal: true, isDefinition: true, scopeLine: 2199, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_repr, variables: !1570)
!1570 = !{!1571}
!1571 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1569, file: !450, line: 2198, type: !368)
!1572 = !DISubprogram(name: "delta_add", scope: !450, file: !450, line: 1720, type: !131, isLocal: true, isDefinition: true, scopeLine: 1721, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_add, variables: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1580, !1581}
!1574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1572, file: !450, line: 1720, type: !10)
!1575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1572, file: !450, line: 1720, type: !10)
!1576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1572, file: !450, line: 1722, type: !10)
!1577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "days", scope: !1578, file: !450, line: 1729, type: !49)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !450, line: 1724, column: 289)
!1579 = distinct !DILexicalBlock(scope: !1572, file: !450, line: 1724, column: 9)
!1580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !1578, file: !450, line: 1730, type: !49)
!1581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "microseconds", scope: !1578, file: !450, line: 1731, type: !49)
!1582 = !DISubprogram(name: "delta_multiply", scope: !450, file: !450, line: 1841, type: !131, isLocal: true, isDefinition: true, scopeLine: 1842, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_multiply, variables: !1583)
!1583 = !{!1584, !1585, !1586}
!1584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1582, file: !450, line: 1841, type: !10)
!1585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1582, file: !450, line: 1841, type: !10)
!1586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1582, file: !450, line: 1843, type: !10)
!1587 = !DISubprogram(name: "multiply_int_timedelta", scope: !450, file: !450, line: 1552, type: !1588, isLocal: true, isDefinition: true, scopeLine: 1553, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct.PyDateTime_Delta*)* @multiply_int_timedelta, variables: !1590)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!10, !10, !368}
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1598}
!1591 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "intobj", arg: 1, scope: !1587, file: !450, line: 1552, type: !10)
!1592 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 2, scope: !1587, file: !450, line: 1552, type: !368)
!1593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_in", scope: !1587, file: !450, line: 1554, type: !10)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_out", scope: !1587, file: !450, line: 1555, type: !10)
!1595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1587, file: !450, line: 1556, type: !10)
!1596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1597, file: !450, line: 1563, type: !10)
!1597 = distinct !DILexicalBlock(scope: !1587, file: !450, line: 1563, column: 8)
!1598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1599, file: !450, line: 1568, type: !10)
!1599 = distinct !DILexicalBlock(scope: !1587, file: !450, line: 1568, column: 8)
!1600 = !DISubprogram(name: "microseconds_to_delta_ex", scope: !450, file: !450, line: 1470, type: !1601, isLocal: true, isDefinition: true, scopeLine: 1471, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._typeobject*)* @microseconds_to_delta_ex, variables: !1603)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!10, !10, !964}
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1615, !1617, !1619, !1622, !1624}
!1604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pyus", arg: 1, scope: !1600, file: !450, line: 1470, type: !10)
!1605 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 2, scope: !1600, file: !450, line: 1470, type: !964)
!1606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1600, file: !450, line: 1472, type: !49)
!1607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1600, file: !450, line: 1473, type: !49)
!1608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !1600, file: !450, line: 1474, type: !49)
!1609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1600, file: !450, line: 1475, type: !22)
!1610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1600, file: !450, line: 1477, type: !10)
!1611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num", scope: !1600, file: !450, line: 1478, type: !10)
!1612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1600, file: !450, line: 1479, type: !10)
!1613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1614, file: !450, line: 1504, type: !10)
!1614 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1504, column: 8)
!1615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1616, file: !450, line: 1509, type: !10)
!1616 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1509, column: 8)
!1617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1618, file: !450, line: 1543, type: !10)
!1618 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1543, column: 8)
!1619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1620, file: !450, line: 1543, type: !10)
!1620 = distinct !DILexicalBlock(scope: !1621, file: !450, line: 1543, column: 97)
!1621 = distinct !DILexicalBlock(scope: !1618, file: !450, line: 1543, column: 63)
!1622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1623, file: !450, line: 1544, type: !10)
!1623 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1544, column: 8)
!1624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1625, file: !450, line: 1544, type: !10)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !450, line: 1544, column: 95)
!1626 = distinct !DILexicalBlock(scope: !1623, file: !450, line: 1544, column: 61)
!1627 = !DISubprogram(name: "multiply_float_timedelta", scope: !450, file: !450, line: 1573, type: !1588, isLocal: true, isDefinition: true, scopeLine: 1574, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct.PyDateTime_Delta*)* @multiply_float_timedelta, variables: !1628)
!1628 = !{!1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1638, !1640, !1642, !1644, !1647, !1649}
!1629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "floatobj", arg: 1, scope: !1627, file: !450, line: 1573, type: !10)
!1630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 2, scope: !1627, file: !450, line: 1573, type: !368)
!1631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1627, file: !450, line: 1575, type: !10)
!1632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_in", scope: !1627, file: !450, line: 1576, type: !10)
!1633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1627, file: !450, line: 1576, type: !10)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_out", scope: !1627, file: !450, line: 1576, type: !10)
!1635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ratio", scope: !1627, file: !450, line: 1577, type: !10)
!1636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1637, file: !450, line: 1586, type: !10)
!1637 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1586, column: 8)
!1638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1639, file: !450, line: 1591, type: !10)
!1639 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1591, column: 8)
!1640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1641, file: !450, line: 1595, type: !10)
!1641 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1595, column: 8)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1643, file: !450, line: 1597, type: !10)
!1643 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1597, column: 8)
!1644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1645, file: !450, line: 1597, type: !10)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !450, line: 1597, column: 99)
!1646 = distinct !DILexicalBlock(scope: !1643, file: !450, line: 1597, column: 65)
!1647 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1648, file: !450, line: 1598, type: !10)
!1648 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1598, column: 8)
!1649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1650, file: !450, line: 1598, type: !10)
!1650 = distinct !DILexicalBlock(scope: !1651, file: !450, line: 1598, column: 97)
!1651 = distinct !DILexicalBlock(scope: !1648, file: !450, line: 1598, column: 63)
!1652 = !DISubprogram(name: "divide_nearest", scope: !450, file: !450, line: 158, type: !131, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @divide_nearest, variables: !1653)
!1653 = !{!1654, !1655, !1656, !1657, !1658}
!1654 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !1652, file: !450, line: 158, type: !10)
!1655 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !1652, file: !450, line: 158, type: !10)
!1656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1652, file: !450, line: 160, type: !10)
!1657 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1652, file: !450, line: 161, type: !10)
!1658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1659, file: !450, line: 168, type: !10)
!1659 = distinct !DILexicalBlock(scope: !1652, file: !450, line: 168, column: 8)
!1660 = !DISubprogram(name: "delta_remainder", scope: !450, file: !450, line: 1912, type: !131, isLocal: true, isDefinition: true, scopeLine: 1913, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_remainder, variables: !1661)
!1661 = !{!1662, !1663, !1664, !1665, !1666, !1667, !1668, !1672, !1674, !1676}
!1662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1660, file: !450, line: 1912, type: !10)
!1663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1660, file: !450, line: 1912, type: !10)
!1664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_left", scope: !1660, file: !450, line: 1914, type: !10)
!1665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_right", scope: !1660, file: !450, line: 1915, type: !10)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_remainder", scope: !1660, file: !450, line: 1916, type: !10)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remainder", scope: !1660, file: !450, line: 1917, type: !10)
!1668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1669, file: !450, line: 1928, type: !10)
!1669 = distinct !DILexicalBlock(scope: !1670, file: !450, line: 1928, column: 12)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !450, line: 1927, column: 35)
!1671 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1927, column: 9)
!1672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1673, file: !450, line: 1933, type: !10)
!1673 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1933, column: 8)
!1674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1675, file: !450, line: 1934, type: !10)
!1675 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1934, column: 8)
!1676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1677, file: !450, line: 1939, type: !10)
!1677 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1939, column: 8)
!1678 = !DISubprogram(name: "delta_divmod", scope: !450, file: !450, line: 1947, type: !131, isLocal: true, isDefinition: true, scopeLine: 1948, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_divmod, variables: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1691, !1693, !1695, !1699, !1701}
!1680 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1678, file: !450, line: 1947, type: !10)
!1681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1678, file: !450, line: 1947, type: !10)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_left", scope: !1678, file: !450, line: 1949, type: !10)
!1683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_right", scope: !1678, file: !450, line: 1950, type: !10)
!1684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "divmod", scope: !1678, file: !450, line: 1951, type: !10)
!1685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !1678, file: !450, line: 1952, type: !10)
!1686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1678, file: !450, line: 1953, type: !10)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1688, file: !450, line: 1964, type: !10)
!1688 = distinct !DILexicalBlock(scope: !1689, file: !450, line: 1964, column: 12)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !450, line: 1963, column: 35)
!1690 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1963, column: 9)
!1691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1692, file: !450, line: 1969, type: !10)
!1692 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1969, column: 8)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1694, file: !450, line: 1970, type: !10)
!1694 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1970, column: 8)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1696, file: !450, line: 1977, type: !10)
!1696 = distinct !DILexicalBlock(scope: !1697, file: !450, line: 1977, column: 12)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !450, line: 1976, column: 30)
!1698 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1976, column: 9)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1700, file: !450, line: 1981, type: !10)
!1700 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1981, column: 8)
!1701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1702, file: !450, line: 1982, type: !10)
!1702 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1982, column: 8)
!1703 = !DISubprogram(name: "delta_positive", scope: !450, file: !450, line: 1751, type: !827, isLocal: true, isDefinition: true, scopeLine: 1752, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_positive, variables: !1704)
!1704 = !{!1705}
!1705 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1703, file: !450, line: 1751, type: !368)
!1706 = !DISubprogram(name: "delta_abs", scope: !450, file: !450, line: 1763, type: !827, isLocal: true, isDefinition: true, scopeLine: 1764, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_abs, variables: !1707)
!1707 = !{!1708, !1709}
!1708 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1706, file: !450, line: 1763, type: !368)
!1709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1706, file: !450, line: 1765, type: !10)
!1710 = !DISubprogram(name: "delta_divide", scope: !450, file: !450, line: 1867, type: !131, isLocal: true, isDefinition: true, scopeLine: 1868, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_divide, variables: !1711)
!1711 = !{!1712, !1713, !1714}
!1712 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1710, file: !450, line: 1867, type: !10)
!1713 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1710, file: !450, line: 1867, type: !10)
!1714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1710, file: !450, line: 1869, type: !10)
!1715 = !DISubprogram(name: "divide_timedelta_int", scope: !450, file: !450, line: 1604, type: !1716, isLocal: true, isDefinition: true, scopeLine: 1605, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*, %struct._object*)* @divide_timedelta_int, variables: !1718)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!10, !368, !10}
!1718 = !{!1719, !1720, !1721, !1722, !1723, !1724, !1726}
!1719 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 1, scope: !1715, file: !450, line: 1604, type: !368)
!1720 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "intobj", arg: 2, scope: !1715, file: !450, line: 1604, type: !10)
!1721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_in", scope: !1715, file: !450, line: 1606, type: !10)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_out", scope: !1715, file: !450, line: 1607, type: !10)
!1723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1715, file: !450, line: 1608, type: !10)
!1724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1725, file: !450, line: 1615, type: !10)
!1725 = distinct !DILexicalBlock(scope: !1715, file: !450, line: 1615, column: 8)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1727, file: !450, line: 1620, type: !10)
!1727 = distinct !DILexicalBlock(scope: !1715, file: !450, line: 1620, column: 8)
!1728 = !DISubprogram(name: "delta_truedivide", scope: !450, file: !450, line: 1889, type: !131, isLocal: true, isDefinition: true, scopeLine: 1890, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @delta_truedivide, variables: !1729)
!1729 = !{!1730, !1731, !1732}
!1730 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1728, file: !450, line: 1889, type: !10)
!1731 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1728, file: !450, line: 1889, type: !10)
!1732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1728, file: !450, line: 1891, type: !10)
!1733 = !DISubprogram(name: "truedivide_timedelta_timedelta", scope: !450, file: !450, line: 1648, type: !1474, isLocal: true, isDefinition: true, scopeLine: 1649, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*, %struct.PyDateTime_Delta*)* @truedivide_timedelta_timedelta, variables: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1740, !1744, !1746}
!1735 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "left", arg: 1, scope: !1733, file: !450, line: 1648, type: !368)
!1736 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "right", arg: 2, scope: !1733, file: !450, line: 1648, type: !368)
!1737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_left", scope: !1733, file: !450, line: 1650, type: !10)
!1738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_right", scope: !1733, file: !450, line: 1651, type: !10)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1733, file: !450, line: 1652, type: !10)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1741, file: !450, line: 1660, type: !10)
!1741 = distinct !DILexicalBlock(scope: !1742, file: !450, line: 1660, column: 12)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !450, line: 1659, column: 35)
!1743 = distinct !DILexicalBlock(scope: !1733, file: !450, line: 1659, column: 9)
!1744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1745, file: !450, line: 1665, type: !10)
!1745 = distinct !DILexicalBlock(scope: !1733, file: !450, line: 1665, column: 8)
!1746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1747, file: !450, line: 1666, type: !10)
!1747 = distinct !DILexicalBlock(scope: !1733, file: !450, line: 1666, column: 8)
!1748 = !DISubprogram(name: "truedivide_timedelta_float", scope: !450, file: !450, line: 1671, type: !1716, isLocal: true, isDefinition: true, scopeLine: 1672, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*, %struct._object*)* @truedivide_timedelta_float, variables: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1759, !1761, !1763, !1765, !1768, !1770}
!1750 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 1, scope: !1748, file: !450, line: 1671, type: !368)
!1751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !1748, file: !450, line: 1671, type: !10)
!1752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1748, file: !450, line: 1673, type: !10)
!1753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_in", scope: !1748, file: !450, line: 1674, type: !10)
!1754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1748, file: !450, line: 1674, type: !10)
!1755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_out", scope: !1748, file: !450, line: 1674, type: !10)
!1756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ratio", scope: !1748, file: !450, line: 1675, type: !10)
!1757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1758, file: !450, line: 1684, type: !10)
!1758 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1684, column: 8)
!1759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1760, file: !450, line: 1689, type: !10)
!1760 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1689, column: 8)
!1761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1762, file: !450, line: 1693, type: !10)
!1762 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1693, column: 8)
!1763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1764, file: !450, line: 1695, type: !10)
!1764 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1695, column: 8)
!1765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1766, file: !450, line: 1695, type: !10)
!1766 = distinct !DILexicalBlock(scope: !1767, file: !450, line: 1695, column: 99)
!1767 = distinct !DILexicalBlock(scope: !1764, file: !450, line: 1695, column: 65)
!1768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1769, file: !450, line: 1696, type: !10)
!1769 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1696, column: 8)
!1770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1771, file: !450, line: 1696, type: !10)
!1771 = distinct !DILexicalBlock(scope: !1772, file: !450, line: 1696, column: 97)
!1772 = distinct !DILexicalBlock(scope: !1769, file: !450, line: 1696, column: 63)
!1773 = !DISubprogram(name: "truedivide_timedelta_int", scope: !450, file: !450, line: 1702, type: !1716, isLocal: true, isDefinition: true, scopeLine: 1703, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*, %struct._object*)* @truedivide_timedelta_int, variables: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1782}
!1775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 1, scope: !1773, file: !450, line: 1702, type: !368)
!1776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 2, scope: !1773, file: !450, line: 1702, type: !10)
!1777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1773, file: !450, line: 1704, type: !10)
!1778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_in", scope: !1773, file: !450, line: 1705, type: !10)
!1779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyus_out", scope: !1773, file: !450, line: 1705, type: !10)
!1780 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1781, file: !450, line: 1710, type: !10)
!1781 = distinct !DILexicalBlock(scope: !1773, file: !450, line: 1710, column: 8)
!1782 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1783, file: !450, line: 1714, type: !10)
!1783 = distinct !DILexicalBlock(scope: !1773, file: !450, line: 1714, column: 8)
!1784 = !DISubprogram(name: "delta_hash", scope: !450, file: !450, line: 1828, type: !1785, isLocal: true, isDefinition: true, scopeLine: 1829, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyDateTime_Delta*)* @delta_hash, variables: !1787)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!223, !368}
!1787 = !{!1788, !1789, !1792}
!1788 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1784, file: !450, line: 1828, type: !368)
!1789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1790, file: !450, line: 1831, type: !10)
!1790 = distinct !DILexicalBlock(scope: !1791, file: !450, line: 1830, column: 31)
!1791 = distinct !DILexicalBlock(scope: !1784, file: !450, line: 1830, column: 9)
!1792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1793, file: !450, line: 1834, type: !10)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !450, line: 1834, column: 16)
!1794 = distinct !DILexicalBlock(scope: !1795, file: !450, line: 1832, column: 33)
!1795 = distinct !DILexicalBlock(scope: !1790, file: !450, line: 1832, column: 13)
!1796 = !DISubprogram(name: "delta_getstate", scope: !450, file: !450, line: 2250, type: !827, isLocal: true, isDefinition: true, scopeLine: 2251, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_getstate, variables: !1797)
!1797 = !{!1798}
!1798 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1796, file: !450, line: 2250, type: !368)
!1799 = !DISubprogram(name: "delta_str", scope: !450, file: !450, line: 2218, type: !827, isLocal: true, isDefinition: true, scopeLine: 2219, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_str, variables: !1800)
!1800 = !{!1801, !1802, !1803, !1804, !1805, !1806}
!1801 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1799, file: !450, line: 2218, type: !368)
!1802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1799, file: !450, line: 2220, type: !49)
!1803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !1799, file: !450, line: 2221, type: !49)
!1804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minutes", scope: !1799, file: !450, line: 2222, type: !49)
!1805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hours", scope: !1799, file: !450, line: 2223, type: !49)
!1806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "days", scope: !1799, file: !450, line: 2224, type: !49)
!1807 = !DISubprogram(name: "delta_richcompare", scope: !450, file: !450, line: 1814, type: !276, isLocal: true, isDefinition: true, scopeLine: 1815, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @delta_richcompare, variables: !1808)
!1808 = !{!1809, !1810, !1811, !1812}
!1809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1807, file: !450, line: 1814, type: !10)
!1810 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "other", arg: 2, scope: !1807, file: !450, line: 1814, type: !10)
!1811 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !1807, file: !450, line: 1814, type: !49)
!1812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !1813, file: !450, line: 1817, type: !49)
!1813 = distinct !DILexicalBlock(scope: !1814, file: !450, line: 1816, column: 149)
!1814 = distinct !DILexicalBlock(scope: !1807, file: !450, line: 1816, column: 9)
!1815 = !DISubprogram(name: "delta_reduce", scope: !450, file: !450, line: 2274, type: !827, isLocal: true, isDefinition: true, scopeLine: 2275, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Delta*)* @delta_reduce, variables: !1816)
!1816 = !{!1817}
!1817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1815, file: !450, line: 2274, type: !368)
!1818 = !DISubprogram(name: "delta_new", scope: !450, file: !450, line: 2077, type: !962, isLocal: true, isDefinition: true, scopeLine: 2078, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @delta_new, variables: !1819)
!1819 = !{!1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1835, !1839, !1843, !1847, !1851, !1855, !1859, !1863, !1866, !1867, !1868, !1874, !1876, !1880, !1884, !1886, !1888}
!1820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1818, file: !450, line: 2077, type: !964)
!1821 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1818, file: !450, line: 2077, type: !10)
!1822 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1818, file: !450, line: 2077, type: !10)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1818, file: !450, line: 2079, type: !10)
!1824 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "day", scope: !1818, file: !450, line: 2082, type: !10)
!1825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "second", scope: !1818, file: !450, line: 2083, type: !10)
!1826 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1818, file: !450, line: 2084, type: !10)
!1827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ms", scope: !1818, file: !450, line: 2085, type: !10)
!1828 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minute", scope: !1818, file: !450, line: 2086, type: !10)
!1829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hour", scope: !1818, file: !450, line: 2087, type: !10)
!1830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "week", scope: !1818, file: !450, line: 2088, type: !10)
!1831 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1818, file: !450, line: 2090, type: !10)
!1832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1818, file: !450, line: 2091, type: !10)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "leftover_us", scope: !1818, file: !450, line: 2092, type: !1834)
!1834 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1836, file: !450, line: 2117, type: !10)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !450, line: 2117, column: 12)
!1837 = distinct !DILexicalBlock(scope: !1838, file: !450, line: 2115, column: 13)
!1838 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2115, column: 9)
!1839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1840, file: !450, line: 2121, type: !10)
!1840 = distinct !DILexicalBlock(scope: !1841, file: !450, line: 2121, column: 12)
!1841 = distinct !DILexicalBlock(scope: !1842, file: !450, line: 2119, column: 13)
!1842 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2119, column: 9)
!1843 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1844, file: !450, line: 2125, type: !10)
!1844 = distinct !DILexicalBlock(scope: !1845, file: !450, line: 2125, column: 12)
!1845 = distinct !DILexicalBlock(scope: !1846, file: !450, line: 2123, column: 17)
!1846 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2123, column: 9)
!1847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1848, file: !450, line: 2129, type: !10)
!1848 = distinct !DILexicalBlock(scope: !1849, file: !450, line: 2129, column: 12)
!1849 = distinct !DILexicalBlock(scope: !1850, file: !450, line: 2127, column: 17)
!1850 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2127, column: 9)
!1851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1852, file: !450, line: 2133, type: !10)
!1852 = distinct !DILexicalBlock(scope: !1853, file: !450, line: 2133, column: 12)
!1853 = distinct !DILexicalBlock(scope: !1854, file: !450, line: 2131, column: 15)
!1854 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2131, column: 9)
!1855 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1856, file: !450, line: 2137, type: !10)
!1856 = distinct !DILexicalBlock(scope: !1857, file: !450, line: 2137, column: 12)
!1857 = distinct !DILexicalBlock(scope: !1858, file: !450, line: 2135, column: 14)
!1858 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2135, column: 9)
!1859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1860, file: !450, line: 2141, type: !10)
!1860 = distinct !DILexicalBlock(scope: !1861, file: !450, line: 2141, column: 12)
!1861 = distinct !DILexicalBlock(scope: !1862, file: !450, line: 2139, column: 15)
!1862 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2139, column: 9)
!1863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "whole_us", scope: !1864, file: !450, line: 2145, type: !1834)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !450, line: 2143, column: 22)
!1865 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2143, column: 9)
!1866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x_is_odd", scope: !1864, file: !450, line: 2146, type: !49)
!1867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1864, file: !450, line: 2147, type: !10)
!1868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1869, file: !450, line: 2158, type: !10)
!1869 = distinct !DILexicalBlock(scope: !1870, file: !450, line: 2158, column: 20)
!1870 = distinct !DILexicalBlock(scope: !1871, file: !450, line: 2157, column: 37)
!1871 = distinct !DILexicalBlock(scope: !1872, file: !450, line: 2157, column: 17)
!1872 = distinct !DILexicalBlock(scope: !1873, file: !450, line: 2150, column: 50)
!1873 = distinct !DILexicalBlock(scope: !1864, file: !450, line: 2150, column: 13)
!1874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1875, file: !450, line: 2162, type: !10)
!1875 = distinct !DILexicalBlock(scope: !1872, file: !450, line: 2162, column: 16)
!1876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1877, file: !450, line: 2164, type: !10)
!1877 = distinct !DILexicalBlock(scope: !1878, file: !450, line: 2164, column: 20)
!1878 = distinct !DILexicalBlock(scope: !1879, file: !450, line: 2163, column: 33)
!1879 = distinct !DILexicalBlock(scope: !1872, file: !450, line: 2163, column: 17)
!1880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1881, file: !450, line: 2173, type: !10)
!1881 = distinct !DILexicalBlock(scope: !1882, file: !450, line: 2173, column: 16)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !450, line: 2172, column: 33)
!1883 = distinct !DILexicalBlock(scope: !1864, file: !450, line: 2172, column: 13)
!1884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1885, file: !450, line: 2177, type: !10)
!1885 = distinct !DILexicalBlock(scope: !1864, file: !450, line: 2177, column: 12)
!1886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1887, file: !450, line: 2178, type: !10)
!1887 = distinct !DILexicalBlock(scope: !1864, file: !450, line: 2178, column: 12)
!1888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1889, file: !450, line: 2182, type: !10)
!1889 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2182, column: 8)
!1890 = !DISubprogram(name: "accum", scope: !450, file: !450, line: 1996, type: !1891, isLocal: true, isDefinition: true, scopeLine: 1998, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, %struct._object*, %struct._object*, %struct._object*, double*)* @accum, variables: !1894)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!10, !34, !10, !10, !10, !1893}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64, align: 64)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1906, !1909, !1910, !1911, !1912, !1913, !1915, !1917, !1921, !1923}
!1895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 1, scope: !1890, file: !450, line: 1996, type: !34)
!1896 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sofar", arg: 2, scope: !1890, file: !450, line: 1996, type: !10)
!1897 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "num", arg: 3, scope: !1890, file: !450, line: 1996, type: !10)
!1898 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "factor", arg: 4, scope: !1890, file: !450, line: 1996, type: !10)
!1899 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "leftover", arg: 5, scope: !1890, file: !450, line: 1997, type: !1893)
!1900 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prod", scope: !1890, file: !450, line: 1999, type: !10)
!1901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !1890, file: !450, line: 2000, type: !10)
!1902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1903, file: !450, line: 2009, type: !10)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !450, line: 2009, column: 12)
!1904 = distinct !DILexicalBlock(scope: !1905, file: !450, line: 2004, column: 77)
!1905 = distinct !DILexicalBlock(scope: !1890, file: !450, line: 2004, column: 9)
!1906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dnum", scope: !1907, file: !450, line: 2014, type: !1834)
!1907 = distinct !DILexicalBlock(scope: !1908, file: !450, line: 2013, column: 129)
!1908 = distinct !DILexicalBlock(scope: !1890, file: !450, line: 2013, column: 9)
!1909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fracpart", scope: !1907, file: !450, line: 2015, type: !1834)
!1910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "intpart", scope: !1907, file: !450, line: 2016, type: !1834)
!1911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1907, file: !450, line: 2017, type: !10)
!1912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1907, file: !450, line: 2018, type: !10)
!1913 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1914, file: !450, line: 2037, type: !10)
!1914 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2037, column: 12)
!1915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1916, file: !450, line: 2042, type: !10)
!1916 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2042, column: 12)
!1917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1918, file: !450, line: 2059, type: !10)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !450, line: 2059, column: 16)
!1919 = distinct !DILexicalBlock(scope: !1920, file: !450, line: 2058, column: 30)
!1920 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2058, column: 13)
!1921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1922, file: !450, line: 2064, type: !10)
!1922 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2064, column: 12)
!1923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1924, file: !450, line: 2065, type: !10)
!1924 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2065, column: 12)
!1925 = !DISubprogram(name: "time_dealloc", scope: !450, file: !450, line: 3542, type: !1926, isLocal: true, isDefinition: true, scopeLine: 3543, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyDateTime_Time*)* @time_dealloc, variables: !1928)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{null, !406}
!1928 = !{!1929, !1930, !1934}
!1929 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1925, file: !450, line: 3542, type: !406)
!1930 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1931, file: !450, line: 3545, type: !10)
!1931 = distinct !DILexicalBlock(scope: !1932, file: !450, line: 3545, column: 12)
!1932 = distinct !DILexicalBlock(scope: !1933, file: !450, line: 3544, column: 58)
!1933 = distinct !DILexicalBlock(scope: !1925, file: !450, line: 3544, column: 9)
!1934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1935, file: !450, line: 3545, type: !10)
!1935 = distinct !DILexicalBlock(scope: !1936, file: !450, line: 3545, column: 108)
!1936 = distinct !DILexicalBlock(scope: !1931, file: !450, line: 3545, column: 74)
!1937 = !DISubprogram(name: "time_repr", scope: !450, file: !450, line: 3575, type: !1938, isLocal: true, isDefinition: true, scopeLine: 3576, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*)* @time_repr, variables: !1940)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!10, !406}
!1940 = !{!1941, !1942, !1943, !1944, !1945, !1946, !1947}
!1941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1937, file: !450, line: 3575, type: !406)
!1942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type_name", scope: !1937, file: !450, line: 3577, type: !34)
!1943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1937, file: !450, line: 3578, type: !49)
!1944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !1937, file: !450, line: 3579, type: !49)
!1945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1937, file: !450, line: 3580, type: !49)
!1946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !1937, file: !450, line: 3581, type: !49)
!1947 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1937, file: !450, line: 3582, type: !10)
!1948 = !DISubprogram(name: "time_bool", scope: !450, file: !450, line: 3809, type: !149, isLocal: true, isDefinition: true, scopeLine: 3810, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @time_bool, variables: !1949)
!1949 = !{!1950, !1951, !1952, !1953, !1954}
!1950 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1948, file: !450, line: 3809, type: !10)
!1951 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1948, file: !450, line: 3811, type: !10)
!1952 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !1948, file: !450, line: 3811, type: !10)
!1953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offsecs", scope: !1948, file: !450, line: 3812, type: !49)
!1954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1955, file: !450, line: 3826, type: !10)
!1955 = distinct !DILexicalBlock(scope: !1956, file: !450, line: 3826, column: 12)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !450, line: 3821, column: 38)
!1957 = distinct !DILexicalBlock(scope: !1948, file: !450, line: 3821, column: 9)
!1958 = !DISubprogram(name: "time_hash", scope: !450, file: !450, line: 3744, type: !1959, isLocal: true, isDefinition: true, scopeLine: 3745, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyDateTime_Time*)* @time_hash, variables: !1961)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!223, !406}
!1961 = !{!1962, !1963, !1966, !1969, !1970, !1971, !1972, !1976, !1978, !1982, !1984}
!1962 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1958, file: !450, line: 3744, type: !406)
!1963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1964, file: !450, line: 3747, type: !10)
!1964 = distinct !DILexicalBlock(scope: !1965, file: !450, line: 3746, column: 31)
!1965 = distinct !DILexicalBlock(scope: !1958, file: !450, line: 3746, column: 9)
!1966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp1", scope: !1967, file: !450, line: 3759, type: !10)
!1967 = distinct !DILexicalBlock(scope: !1968, file: !450, line: 3758, column: 14)
!1968 = distinct !DILexicalBlock(scope: !1964, file: !450, line: 3755, column: 13)
!1969 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp2", scope: !1967, file: !450, line: 3759, type: !10)
!1970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !1967, file: !450, line: 3760, type: !49)
!1971 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "microseconds", scope: !1967, file: !450, line: 3760, type: !49)
!1972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1973, file: !450, line: 3768, type: !10)
!1973 = distinct !DILexicalBlock(scope: !1974, file: !450, line: 3768, column: 20)
!1974 = distinct !DILexicalBlock(scope: !1975, file: !450, line: 3767, column: 38)
!1975 = distinct !DILexicalBlock(scope: !1967, file: !450, line: 3767, column: 17)
!1976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1977, file: !450, line: 3772, type: !10)
!1977 = distinct !DILexicalBlock(scope: !1967, file: !450, line: 3772, column: 16)
!1978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1979, file: !450, line: 3774, type: !10)
!1979 = distinct !DILexicalBlock(scope: !1980, file: !450, line: 3774, column: 20)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !450, line: 3773, column: 38)
!1981 = distinct !DILexicalBlock(scope: !1967, file: !450, line: 3773, column: 17)
!1982 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1983, file: !450, line: 3778, type: !10)
!1983 = distinct !DILexicalBlock(scope: !1967, file: !450, line: 3778, column: 16)
!1984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1985, file: !450, line: 3780, type: !10)
!1985 = distinct !DILexicalBlock(scope: !1964, file: !450, line: 3780, column: 12)
!1986 = !DISubprogram(name: "time_utcoffset", scope: !450, file: !450, line: 3556, type: !131, isLocal: true, isDefinition: true, scopeLine: 3556, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @time_utcoffset, variables: !1987)
!1987 = !{!1988, !1989}
!1988 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1986, file: !450, line: 3556, type: !10)
!1989 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1986, file: !450, line: 3556, type: !10)
!1990 = !DISubprogram(name: "time_str", scope: !450, file: !450, line: 3598, type: !1938, isLocal: true, isDefinition: true, scopeLine: 3599, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*)* @time_str, variables: !1991)
!1991 = !{!1992}
!1992 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1990, file: !450, line: 3598, type: !406)
!1993 = !DISubprogram(name: "time_richcompare", scope: !450, file: !450, line: 3671, type: !276, isLocal: true, isDefinition: true, scopeLine: 3672, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @time_richcompare, variables: !1994)
!1994 = !{!1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2006, !2007, !2009, !2011}
!1995 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1993, file: !450, line: 3671, type: !10)
!1996 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "other", arg: 2, scope: !1993, file: !450, line: 3671, type: !10)
!1997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !1993, file: !450, line: 3671, type: !49)
!1998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1993, file: !450, line: 3673, type: !10)
!1999 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset1", scope: !1993, file: !450, line: 3674, type: !10)
!2000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset2", scope: !1993, file: !450, line: 3674, type: !10)
!2001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !1993, file: !450, line: 3675, type: !49)
!2002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offsecs1", scope: !2003, file: !450, line: 3706, type: !49)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !450, line: 3705, column: 76)
!2004 = distinct !DILexicalBlock(scope: !2005, file: !450, line: 3705, column: 14)
!2005 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3696, column: 9)
!2006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offsecs2", scope: !2003, file: !450, line: 3706, type: !49)
!2007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2008, file: !450, line: 3738, type: !10)
!2008 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3738, column: 8)
!2009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2010, file: !450, line: 3739, type: !10)
!2010 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3739, column: 8)
!2011 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2012, file: !450, line: 3739, type: !10)
!2012 = distinct !DILexicalBlock(scope: !2013, file: !450, line: 3739, column: 99)
!2013 = distinct !DILexicalBlock(scope: !2010, file: !450, line: 3739, column: 65)
!2014 = !DISubprogram(name: "time_isoformat", scope: !450, file: !450, line: 3604, type: !2015, isLocal: true, isDefinition: true, scopeLine: 3605, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, %struct._object*)* @time_isoformat, variables: !2017)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!10, !406, !10}
!2017 = !{!2018, !2019, !2020, !2021, !2022, !2023}
!2018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2014, file: !450, line: 3604, type: !406)
!2019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2014, file: !450, line: 3604, type: !10)
!2020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2014, file: !450, line: 3606, type: !735)
!2021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2014, file: !450, line: 3607, type: !10)
!2022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !2014, file: !450, line: 3608, type: !49)
!2023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2024, file: !450, line: 3628, type: !10)
!2024 = distinct !DILexicalBlock(scope: !2025, file: !450, line: 3628, column: 12)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !450, line: 3627, column: 50)
!2026 = distinct !DILexicalBlock(scope: !2014, file: !450, line: 3626, column: 9)
!2027 = !DISubprogram(name: "time_strftime", scope: !450, file: !450, line: 3636, type: !2028, isLocal: true, isDefinition: true, scopeLine: 3637, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, %struct._object*, %struct._object*)* @time_strftime, variables: !2030)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!10, !406, !10, !10}
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037}
!2031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2027, file: !450, line: 3636, type: !406)
!2032 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2027, file: !450, line: 3636, type: !10)
!2033 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2027, file: !450, line: 3636, type: !10)
!2034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2027, file: !450, line: 3638, type: !10)
!2035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !2027, file: !450, line: 3639, type: !10)
!2036 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !2027, file: !450, line: 3640, type: !10)
!2037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2038, file: !450, line: 3662, type: !10)
!2038 = distinct !DILexicalBlock(scope: !2027, file: !450, line: 3662, column: 8)
!2039 = !DISubprogram(name: "time_tzname", scope: !450, file: !450, line: 3566, type: !2015, isLocal: true, isDefinition: true, scopeLine: 3566, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, %struct._object*)* @time_tzname, variables: !2040)
!2040 = !{!2041, !2042}
!2041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2039, file: !450, line: 3566, type: !406)
!2042 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2039, file: !450, line: 3566, type: !10)
!2043 = !DISubprogram(name: "time_dst", scope: !450, file: !450, line: 3561, type: !131, isLocal: true, isDefinition: true, scopeLine: 3561, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @time_dst, variables: !2044)
!2044 = !{!2045, !2046}
!2045 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2043, file: !450, line: 3561, type: !10)
!2046 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2043, file: !450, line: 3561, type: !10)
!2047 = !DISubprogram(name: "time_replace", scope: !450, file: !450, line: 3786, type: !2028, isLocal: true, isDefinition: true, scopeLine: 3787, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, %struct._object*, %struct._object*)* @time_replace, variables: !2048)
!2048 = !{!2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059}
!2049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2047, file: !450, line: 3786, type: !406)
!2050 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2047, file: !450, line: 3786, type: !10)
!2051 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2047, file: !450, line: 3786, type: !10)
!2052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clone", scope: !2047, file: !450, line: 3788, type: !10)
!2053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !2047, file: !450, line: 3789, type: !10)
!2054 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hh", scope: !2047, file: !450, line: 3790, type: !49)
!2055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mm", scope: !2047, file: !450, line: 3791, type: !49)
!2056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ss", scope: !2047, file: !450, line: 3792, type: !49)
!2057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "us", scope: !2047, file: !450, line: 3793, type: !49)
!2058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !2047, file: !450, line: 3794, type: !10)
!2059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2060, file: !450, line: 3804, type: !10)
!2060 = distinct !DILexicalBlock(scope: !2047, file: !450, line: 3804, column: 8)
!2061 = !DISubprogram(name: "time_reduce", scope: !450, file: !450, line: 3857, type: !2015, isLocal: true, isDefinition: true, scopeLine: 3858, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, %struct._object*)* @time_reduce, variables: !2062)
!2062 = !{!2063, !2064}
!2063 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2061, file: !450, line: 3857, type: !406)
!2064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2061, file: !450, line: 3857, type: !10)
!2065 = !DISubprogram(name: "time_getstate", scope: !450, file: !450, line: 3839, type: !1938, isLocal: true, isDefinition: true, scopeLine: 3840, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*)* @time_getstate, variables: !2066)
!2066 = !{!2067, !2068, !2069, !2070}
!2067 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2065, file: !450, line: 3839, type: !406)
!2068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "basestate", scope: !2065, file: !450, line: 3841, type: !10)
!2069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2065, file: !450, line: 3842, type: !10)
!2070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2071, file: !450, line: 3851, type: !10)
!2071 = distinct !DILexicalBlock(scope: !2072, file: !450, line: 3851, column: 12)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !450, line: 3846, column: 34)
!2073 = distinct !DILexicalBlock(scope: !2065, file: !450, line: 3846, column: 9)
!2074 = !DISubprogram(name: "time_hour", scope: !450, file: !450, line: 3431, type: !2075, isLocal: true, isDefinition: true, scopeLine: 3432, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, i8*)* @time_hour, variables: !2077)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{!10, !406, !9}
!2077 = !{!2078, !2079}
!2078 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2074, file: !450, line: 3431, type: !406)
!2079 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2074, file: !450, line: 3431, type: !9)
!2080 = !DISubprogram(name: "time_minute", scope: !450, file: !450, line: 3437, type: !2075, isLocal: true, isDefinition: true, scopeLine: 3438, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, i8*)* @time_minute, variables: !2081)
!2081 = !{!2082, !2083}
!2082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2080, file: !450, line: 3437, type: !406)
!2083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2080, file: !450, line: 3437, type: !9)
!2084 = !DISubprogram(name: "py_time_second", scope: !450, file: !450, line: 3444, type: !2075, isLocal: true, isDefinition: true, scopeLine: 3445, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, i8*)* @py_time_second, variables: !2085)
!2085 = !{!2086, !2087}
!2086 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2084, file: !450, line: 3444, type: !406)
!2087 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2084, file: !450, line: 3444, type: !9)
!2088 = !DISubprogram(name: "time_microsecond", scope: !450, file: !450, line: 3450, type: !2075, isLocal: true, isDefinition: true, scopeLine: 3451, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, i8*)* @time_microsecond, variables: !2089)
!2089 = !{!2090, !2091}
!2090 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2088, file: !450, line: 3450, type: !406)
!2091 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2088, file: !450, line: 3450, type: !9)
!2092 = !DISubprogram(name: "time_tzinfo", scope: !450, file: !450, line: 3456, type: !2075, isLocal: true, isDefinition: true, scopeLine: 3457, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_Time*, i8*)* @time_tzinfo, variables: !2093)
!2093 = !{!2094, !2095, !2096}
!2094 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2092, file: !450, line: 3456, type: !406)
!2095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !2092, file: !450, line: 3456, type: !9)
!2096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2092, file: !450, line: 3458, type: !10)
!2097 = !DISubprogram(name: "time_alloc", scope: !450, file: !450, line: 606, type: !1533, isLocal: true, isDefinition: true, scopeLine: 607, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, i64)* @time_alloc, variables: !2098)
!2098 = !{!2099, !2100, !2101}
!2099 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2097, file: !450, line: 606, type: !964)
!2100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "aware", arg: 2, scope: !2097, file: !450, line: 606, type: !16)
!2101 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2097, file: !450, line: 608, type: !10)
!2102 = !DISubprogram(name: "time_new", scope: !450, file: !450, line: 3480, type: !962, isLocal: true, isDefinition: true, scopeLine: 3481, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @time_new, variables: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2117, !2118}
!2104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2102, file: !450, line: 3480, type: !964)
!2105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2102, file: !450, line: 3480, type: !10)
!2106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2102, file: !450, line: 3480, type: !10)
!2107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2102, file: !450, line: 3482, type: !10)
!2108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !2102, file: !450, line: 3483, type: !10)
!2109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hour", scope: !2102, file: !450, line: 3484, type: !49)
!2110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minute", scope: !2102, file: !450, line: 3485, type: !49)
!2111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "second", scope: !2102, file: !450, line: 3486, type: !49)
!2112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "usecond", scope: !2102, file: !450, line: 3487, type: !49)
!2113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tzinfo", scope: !2102, file: !450, line: 3488, type: !10)
!2114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "me", scope: !2115, file: !450, line: 3497, type: !406)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !450, line: 3496, column: 5)
!2116 = distinct !DILexicalBlock(scope: !2102, file: !450, line: 3491, column: 9)
!2117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aware", scope: !2115, file: !450, line: 3498, type: !36)
!2118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pdata", scope: !2119, file: !450, line: 3511, type: !57)
!2119 = distinct !DILexicalBlock(scope: !2120, file: !450, line: 3510, column: 31)
!2120 = distinct !DILexicalBlock(scope: !2115, file: !450, line: 3510, column: 13)
!2121 = !DISubprogram(name: "tzinfo_tzname", scope: !450, file: !450, line: 2970, type: !2122, isLocal: true, isDefinition: true, scopeLine: 2971, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_tzname, variables: !2129)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!10, !2124, !10}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_TZInfo", file: !357, line: 46, baseType: !2126)
!2126 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 43, size: 128, align: 64, elements: !2127)
!2127 = !{!2128}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2126, file: !357, line: 45, baseType: !11, size: 128, align: 64)
!2129 = !{!2130, !2131}
!2130 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2121, file: !450, line: 2970, type: !2124)
!2131 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2121, file: !450, line: 2970, type: !10)
!2132 = !DISubprogram(name: "tzinfo_nogo", scope: !450, file: !450, line: 2959, type: !2133, isLocal: true, isDefinition: true, scopeLine: 2960, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @tzinfo_nogo, variables: !2135)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!10, !34}
!2135 = !{!2136}
!2136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "methodname", arg: 1, scope: !2132, file: !450, line: 2959, type: !34)
!2137 = !DISubprogram(name: "tzinfo_utcoffset", scope: !450, file: !450, line: 2976, type: !2122, isLocal: true, isDefinition: true, scopeLine: 2977, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_utcoffset, variables: !2138)
!2138 = !{!2139, !2140}
!2139 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2137, file: !450, line: 2976, type: !2124)
!2140 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2137, file: !450, line: 2976, type: !10)
!2141 = !DISubprogram(name: "tzinfo_dst", scope: !450, file: !450, line: 2982, type: !2122, isLocal: true, isDefinition: true, scopeLine: 2983, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_dst, variables: !2142)
!2142 = !{!2143, !2144}
!2143 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2141, file: !450, line: 2982, type: !2124)
!2144 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2141, file: !450, line: 2982, type: !10)
!2145 = !DISubprogram(name: "tzinfo_fromutc", scope: !450, file: !450, line: 2995, type: !2122, isLocal: true, isDefinition: true, scopeLine: 2996, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TZInfo*, %struct._object*)* @tzinfo_fromutc, variables: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2155, !2158, !2160, !2162, !2164, !2166, !2168, !2171, !2173, !2176, !2178, !2181, !2183}
!2147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2145, file: !450, line: 2995, type: !2124)
!2148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2145, file: !450, line: 2995, type: !10)
!2149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2145, file: !450, line: 2997, type: !10)
!2150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "off", scope: !2145, file: !450, line: 2998, type: !10)
!2151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !2145, file: !450, line: 2998, type: !10)
!2152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !2145, file: !450, line: 2999, type: !368)
!2153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2154, file: !450, line: 3037, type: !10)
!2154 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3037, column: 8)
!2155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !2156, file: !450, line: 3044, type: !10)
!2156 = distinct !DILexicalBlock(scope: !2157, file: !450, line: 3043, column: 33)
!2157 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3043, column: 9)
!2158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2159, file: !450, line: 3047, type: !10)
!2159 = distinct !DILexicalBlock(scope: !2156, file: !450, line: 3047, column: 12)
!2160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2161, file: !450, line: 3051, type: !10)
!2161 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3051, column: 8)
!2162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2163, file: !450, line: 3052, type: !10)
!2163 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3052, column: 8)
!2164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2165, file: !450, line: 3053, type: !10)
!2165 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3053, column: 8)
!2166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2167, file: !450, line: 3062, type: !10)
!2167 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3062, column: 8)
!2168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2169, file: !450, line: 3062, type: !10)
!2169 = distinct !DILexicalBlock(scope: !2170, file: !450, line: 3062, column: 95)
!2170 = distinct !DILexicalBlock(scope: !2167, file: !450, line: 3062, column: 61)
!2171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2172, file: !450, line: 3063, type: !10)
!2172 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3063, column: 8)
!2173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2174, file: !450, line: 3063, type: !10)
!2174 = distinct !DILexicalBlock(scope: !2175, file: !450, line: 3063, column: 95)
!2175 = distinct !DILexicalBlock(scope: !2172, file: !450, line: 3063, column: 61)
!2176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2177, file: !450, line: 3064, type: !10)
!2177 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3064, column: 8)
!2178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2179, file: !450, line: 3064, type: !10)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !450, line: 3064, column: 97)
!2180 = distinct !DILexicalBlock(scope: !2177, file: !450, line: 3064, column: 63)
!2181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2182, file: !450, line: 3065, type: !10)
!2182 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3065, column: 8)
!2183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2184, file: !450, line: 3065, type: !10)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !450, line: 3065, column: 98)
!2185 = distinct !DILexicalBlock(scope: !2182, file: !450, line: 3065, column: 64)
!2186 = !DISubprogram(name: "tzinfo_reduce", scope: !450, file: !450, line: 3075, type: !121, isLocal: true, isDefinition: true, scopeLine: 3076, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @tzinfo_reduce, variables: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2198, !2202, !2206, !2210, !2212, !2215, !2217}
!2188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2186, file: !450, line: 3075, type: !10)
!2189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !2186, file: !450, line: 3077, type: !10)
!2190 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !2186, file: !450, line: 3077, type: !10)
!2191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !2186, file: !450, line: 3077, type: !10)
!2192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "getinitargs", scope: !2186, file: !450, line: 3078, type: !10)
!2193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "getstate", scope: !2186, file: !450, line: 3078, type: !10)
!2194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2195, file: !450, line: 3089, type: !10)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !450, line: 3089, column: 12)
!2196 = distinct !DILexicalBlock(scope: !2197, file: !450, line: 3087, column: 36)
!2197 = distinct !DILexicalBlock(scope: !2186, file: !450, line: 3087, column: 9)
!2198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2199, file: !450, line: 3091, type: !10)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !450, line: 3091, column: 16)
!2200 = distinct !DILexicalBlock(scope: !2201, file: !450, line: 3090, column: 33)
!2201 = distinct !DILexicalBlock(scope: !2196, file: !450, line: 3090, column: 13)
!2202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2203, file: !450, line: 3104, type: !10)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !450, line: 3104, column: 12)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !450, line: 3102, column: 33)
!2205 = distinct !DILexicalBlock(scope: !2186, file: !450, line: 3102, column: 9)
!2206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2207, file: !450, line: 3106, type: !10)
!2207 = distinct !DILexicalBlock(scope: !2208, file: !450, line: 3106, column: 16)
!2208 = distinct !DILexicalBlock(scope: !2209, file: !450, line: 3105, column: 34)
!2209 = distinct !DILexicalBlock(scope: !2204, file: !450, line: 3105, column: 13)
!2210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2211, file: !450, line: 3107, type: !10)
!2211 = distinct !DILexicalBlock(scope: !2208, file: !450, line: 3107, column: 16)
!2212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dictptr", scope: !2213, file: !450, line: 3112, type: !2214)
!2213 = distinct !DILexicalBlock(scope: !2205, file: !450, line: 3111, column: 10)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!2215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2216, file: !450, line: 3121, type: !10)
!2216 = distinct !DILexicalBlock(scope: !2186, file: !450, line: 3121, column: 8)
!2217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2218, file: !450, line: 3124, type: !10)
!2218 = distinct !DILexicalBlock(scope: !2219, file: !450, line: 3124, column: 12)
!2219 = distinct !DILexicalBlock(scope: !2220, file: !450, line: 3123, column: 37)
!2220 = distinct !DILexicalBlock(scope: !2186, file: !450, line: 3123, column: 9)
!2221 = !DISubprogram(name: "timezone_dealloc", scope: !450, file: !450, line: 3213, type: !2222, isLocal: true, isDefinition: true, scopeLine: 3214, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyDateTime_TimeZone*)* @timezone_dealloc, variables: !2224)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{null, !448}
!2224 = !{!2225, !2226, !2228, !2232, !2234}
!2225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2221, file: !450, line: 3213, type: !448)
!2226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2227, file: !450, line: 3215, type: !10)
!2227 = distinct !DILexicalBlock(scope: !2221, file: !450, line: 3215, column: 8)
!2228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2229, file: !450, line: 3215, type: !10)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !450, line: 3215, column: 119)
!2230 = distinct !DILexicalBlock(scope: !2231, file: !450, line: 3215, column: 85)
!2231 = distinct !DILexicalBlock(scope: !2227, file: !450, line: 3215, column: 62)
!2232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2233, file: !450, line: 3216, type: !10)
!2233 = distinct !DILexicalBlock(scope: !2221, file: !450, line: 3216, column: 8)
!2234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2235, file: !450, line: 3216, type: !10)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !450, line: 3216, column: 115)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !450, line: 3216, column: 83)
!2237 = distinct !DILexicalBlock(scope: !2233, file: !450, line: 3216, column: 60)
!2238 = !DISubprogram(name: "timezone_repr", scope: !450, file: !450, line: 3256, type: !2239, isLocal: true, isDefinition: true, scopeLine: 3257, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*)* @timezone_repr, variables: !2241)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!10, !448}
!2241 = !{!2242, !2243}
!2242 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2238, file: !450, line: 3256, type: !448)
!2243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type_name", scope: !2238, file: !450, line: 3260, type: !34)
!2244 = !DISubprogram(name: "timezone_hash", scope: !450, file: !450, line: 3236, type: !2245, isLocal: true, isDefinition: true, scopeLine: 3237, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyDateTime_TimeZone*)* @timezone_hash, variables: !2247)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!223, !448}
!2247 = !{!2248}
!2248 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2244, file: !450, line: 3236, type: !448)
!2249 = !DISubprogram(name: "timezone_str", scope: !450, file: !450, line: 3274, type: !2239, isLocal: true, isDefinition: true, scopeLine: 3275, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*)* @timezone_str, variables: !2250)
!2250 = !{!2251, !2252, !2253, !2254, !2255, !2256, !2257}
!2251 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2249, file: !450, line: 3274, type: !448)
!2252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hours", scope: !2249, file: !450, line: 3276, type: !49)
!2253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minutes", scope: !2249, file: !450, line: 3276, type: !49)
!2254 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seconds", scope: !2249, file: !450, line: 3276, type: !49)
!2255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2249, file: !450, line: 3277, type: !10)
!2256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !2249, file: !450, line: 3278, type: !36)
!2257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2258, file: !450, line: 3298, type: !10)
!2258 = distinct !DILexicalBlock(scope: !2249, file: !450, line: 3298, column: 8)
!2259 = !DISubprogram(name: "timezone_richcompare", scope: !450, file: !450, line: 3221, type: !2260, isLocal: true, isDefinition: true, scopeLine: 3223, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*, %struct.PyDateTime_TimeZone*, i32)* @timezone_richcompare, variables: !2262)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!10, !448, !448, !49}
!2262 = !{!2263, !2264, !2265}
!2263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2259, file: !450, line: 3221, type: !448)
!2264 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "other", arg: 2, scope: !2259, file: !450, line: 3222, type: !448)
!2265 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !2259, file: !450, line: 3222, type: !49)
!2266 = !DISubprogram(name: "timezone_tzname", scope: !450, file: !450, line: 3307, type: !2267, isLocal: true, isDefinition: true, scopeLine: 3308, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*, %struct._object*)* @timezone_tzname, variables: !2269)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!10, !448, !10}
!2269 = !{!2270, !2271}
!2270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2266, file: !450, line: 3307, type: !448)
!2271 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2266, file: !450, line: 3307, type: !10)
!2272 = !DISubprogram(name: "_timezone_check_argument", scope: !450, file: !450, line: 3246, type: !2273, isLocal: true, isDefinition: true, scopeLine: 3247, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @_timezone_check_argument, variables: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!49, !10, !34}
!2275 = !{!2276, !2277}
!2276 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 1, scope: !2272, file: !450, line: 3246, type: !10)
!2277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "meth", arg: 2, scope: !2272, file: !450, line: 3246, type: !34)
!2278 = !DISubprogram(name: "timezone_utcoffset", scope: !450, file: !450, line: 3316, type: !2267, isLocal: true, isDefinition: true, scopeLine: 3317, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*, %struct._object*)* @timezone_utcoffset, variables: !2279)
!2279 = !{!2280, !2281}
!2280 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2278, file: !450, line: 3316, type: !448)
!2281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2278, file: !450, line: 3316, type: !10)
!2282 = !DISubprogram(name: "timezone_dst", scope: !450, file: !450, line: 3326, type: !131, isLocal: true, isDefinition: true, scopeLine: 3327, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @timezone_dst, variables: !2283)
!2283 = !{!2284, !2285}
!2284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2282, file: !450, line: 3326, type: !10)
!2285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2282, file: !450, line: 3326, type: !10)
!2286 = !DISubprogram(name: "timezone_fromutc", scope: !450, file: !450, line: 3335, type: !2287, isLocal: true, isDefinition: true, scopeLine: 3336, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*, %struct.PyDateTime_DateTime*)* @timezone_fromutc, variables: !2289)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!10, !448, !394}
!2289 = !{!2290, !2291}
!2290 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2286, file: !450, line: 3335, type: !448)
!2291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 2, scope: !2286, file: !450, line: 3335, type: !394)
!2292 = !DISubprogram(name: "timezone_getinitargs", scope: !450, file: !450, line: 3352, type: !2239, isLocal: true, isDefinition: true, scopeLine: 3353, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyDateTime_TimeZone*)* @timezone_getinitargs, variables: !2293)
!2293 = !{!2294}
!2294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2292, file: !450, line: 3352, type: !448)
!2295 = !DISubprogram(name: "timezone_new", scope: !450, file: !450, line: 3200, type: !962, isLocal: true, isDefinition: true, scopeLine: 3201, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @timezone_new, variables: !2296)
!2296 = !{!2297, !2298, !2299, !2300, !2301}
!2297 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2295, file: !450, line: 3200, type: !964)
!2298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2295, file: !450, line: 3200, type: !10)
!2299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2295, file: !450, line: 3200, type: !10)
!2300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2295, file: !450, line: 3202, type: !10)
!2301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2295, file: !450, line: 3203, type: !10)
!2302 = !DISubprogram(name: "new_delta_ex", scope: !450, file: !450, line: 731, type: !2303, isLocal: true, isDefinition: true, scopeLine: 733, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32, i32, i32, %struct._typeobject*)* @new_delta_ex, variables: !2305)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!10, !49, !49, !49, !49, !964}
!2305 = !{!2306, !2307, !2308, !2309, !2310, !2311}
!2306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "days", arg: 1, scope: !2302, file: !450, line: 731, type: !49)
!2307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seconds", arg: 2, scope: !2302, file: !450, line: 731, type: !49)
!2308 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "microseconds", arg: 3, scope: !2302, file: !450, line: 731, type: !49)
!2309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "normalize", arg: 4, scope: !2302, file: !450, line: 731, type: !49)
!2310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 5, scope: !2302, file: !450, line: 732, type: !964)
!2311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2302, file: !450, line: 734, type: !368)
!2312 = !DISubprogram(name: "normalize_d_s_us", scope: !450, file: !450, line: 470, type: !2313, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: true, function: void (i32*, i32*, i32*)* @normalize_d_s_us, variables: !2315)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{null, !523, !523, !523}
!2315 = !{!2316, !2317, !2318}
!2316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 1, scope: !2312, file: !450, line: 470, type: !523)
!2317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2312, file: !450, line: 470, type: !523)
!2318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "us", arg: 3, scope: !2312, file: !450, line: 470, type: !523)
!2319 = !DISubprogram(name: "check_delta_day_range", scope: !450, file: !450, line: 375, type: !547, isLocal: true, isDefinition: true, scopeLine: 376, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @check_delta_day_range, variables: !2320)
!2320 = !{!2321}
!2321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "days", arg: 1, scope: !2319, file: !450, line: 375, type: !49)
!2322 = !DISubprogram(name: "new_date_ex", scope: !450, file: !450, line: 656, type: !2323, isLocal: true, isDefinition: true, scopeLine: 657, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32, i32, %struct._typeobject*)* @new_date_ex, variables: !2325)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!10, !49, !49, !49, !964}
!2325 = !{!2326, !2327, !2328, !2329, !2330}
!2326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !2322, file: !450, line: 656, type: !49)
!2327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !2322, file: !450, line: 656, type: !49)
!2328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !2322, file: !450, line: 656, type: !49)
!2329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 4, scope: !2322, file: !450, line: 656, type: !964)
!2330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2322, file: !450, line: 658, type: !355)
!2331 = !DISubprogram(name: "set_date_fields", scope: !450, file: !450, line: 642, type: !2332, isLocal: true, isDefinition: true, scopeLine: 643, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyDateTime_Date*, i32, i32, i32)* @set_date_fields, variables: !2334)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{null, !355, !49, !49, !49}
!2334 = !{!2335, !2336, !2337, !2338}
!2335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2331, file: !450, line: 642, type: !355)
!2336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !2331, file: !450, line: 642, type: !49)
!2337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 3, scope: !2331, file: !450, line: 642, type: !49)
!2338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 4, scope: !2331, file: !450, line: 642, type: !49)
!2339 = !DISubprogram(name: "new_time_ex", scope: !450, file: !450, line: 699, type: !2340, isLocal: true, isDefinition: true, scopeLine: 701, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32, i32, i32, %struct._object*, %struct._typeobject*)* @new_time_ex, variables: !2342)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{!10, !49, !49, !49, !49, !10, !964}
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350}
!2343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hour", arg: 1, scope: !2339, file: !450, line: 699, type: !49)
!2344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minute", arg: 2, scope: !2339, file: !450, line: 699, type: !49)
!2345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "second", arg: 3, scope: !2339, file: !450, line: 699, type: !49)
!2346 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "usecond", arg: 4, scope: !2339, file: !450, line: 699, type: !49)
!2347 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 5, scope: !2339, file: !450, line: 700, type: !10)
!2348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 6, scope: !2339, file: !450, line: 700, type: !964)
!2349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2339, file: !450, line: 702, type: !406)
!2350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aware", scope: !2339, file: !450, line: 703, type: !36)
!2351 = !DISubprogram(name: "new_datetime_ex", scope: !450, file: !450, line: 671, type: !2352, isLocal: true, isDefinition: true, scopeLine: 673, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32, i32, i32, i32, i32, i32, %struct._object*, %struct._typeobject*)* @new_datetime_ex, variables: !2354)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!10, !49, !49, !49, !49, !49, !49, !49, !10, !964}
!2354 = !{!2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365}
!2355 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "year", arg: 1, scope: !2351, file: !450, line: 671, type: !49)
!2356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "month", arg: 2, scope: !2351, file: !450, line: 671, type: !49)
!2357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "day", arg: 3, scope: !2351, file: !450, line: 671, type: !49)
!2358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hour", arg: 4, scope: !2351, file: !450, line: 671, type: !49)
!2359 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minute", arg: 5, scope: !2351, file: !450, line: 671, type: !49)
!2360 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "second", arg: 6, scope: !2351, file: !450, line: 672, type: !49)
!2361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "usecond", arg: 7, scope: !2351, file: !450, line: 672, type: !49)
!2362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tzinfo", arg: 8, scope: !2351, file: !450, line: 672, type: !10)
!2363 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 9, scope: !2351, file: !450, line: 672, type: !964)
!2364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2351, file: !450, line: 674, type: !394)
!2365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aware", scope: !2351, file: !450, line: 675, type: !36)
!2366 = !DISubprogram(name: "create_timezone", scope: !450, file: !450, line: 775, type: !131, isLocal: true, isDefinition: true, scopeLine: 776, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @create_timezone, variables: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372}
!2368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 1, scope: !2366, file: !450, line: 775, type: !10)
!2369 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !2366, file: !450, line: 775, type: !10)
!2370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2366, file: !450, line: 777, type: !448)
!2371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !2366, file: !450, line: 778, type: !964)
!2372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !2373, file: !450, line: 790, type: !10)
!2373 = distinct !DILexicalBlock(scope: !2366, file: !450, line: 790, column: 8)
!2374 = !{!2375, !2376, !2377, !2400, !2402, !2403, !2404, !2408, !2409, !2417, !2421, !2425, !2426, !2427, !2431, !2435, !2436, !2440, !2441, !2442, !2443, !2444, !2446, !2449, !2450, !2451, !2455, !2459, !2460, !2461, !2465, !2469, !2470, !2471, !2472, !2473, !2477, !2478, !2480, !2481, !2482, !2483, !2487, !2489, !2492, !2496, !2497, !2498, !2502, !2504, !2505, !2507, !2508, !2509, !2513, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547}
!2375 = !DIGlobalVariable(name: "PyDateTime_TimeZone_UTC", scope: !0, file: !450, line: 766, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @PyDateTime_TimeZone_UTC)
!2376 = !DIGlobalVariable(name: "PyDateTime_Epoch", scope: !0, file: !450, line: 768, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @PyDateTime_Epoch)
!2377 = !DIGlobalVariable(name: "datetimemodule", scope: !0, file: !450, line: 5209, type: !2378, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @datetimemodule)
!2378 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !2379, line: 47, size: 832, align: 64, elements: !2380)
!2379 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2380 = !{!2381, !2390, !2391, !2392, !2393, !2396, !2397, !2398, !2399}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !2378, file: !2379, line: 48, baseType: !2382, size: 320, align: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !2379, line: 38, baseType: !2383)
!2383 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !2379, line: 33, size: 320, align: 64, elements: !2384)
!2384 = !{!2385, !2386, !2388, !2389}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2383, file: !2379, line: 34, baseType: !11, size: 128, align: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !2383, file: !2379, line: 35, baseType: !2387, size: 64, align: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64, align: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !2383, file: !2379, line: 36, baseType: !16, size: 64, align: 64, offset: 192)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !2383, file: !2379, line: 37, baseType: !10, size: 64, align: 64, offset: 256)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !2378, file: !2379, line: 49, baseType: !34, size: 64, align: 64, offset: 320)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !2378, file: !2379, line: 50, baseType: !34, size: 64, align: 64, offset: 384)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2378, file: !2379, line: 51, baseType: !16, size: 64, align: 64, offset: 448)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !2378, file: !2379, line: 52, baseType: !2394, size: 64, align: 64, offset: 512)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64, align: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !286, line: 47, baseType: !285)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !2378, file: !2379, line: 53, baseType: !147, size: 64, align: 64, offset: 576)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !2378, file: !2379, line: 54, baseType: !264, size: 64, align: 64, offset: 640)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !2378, file: !2379, line: 55, baseType: !147, size: 64, align: 64, offset: 704)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !2378, file: !2379, line: 56, baseType: !341, size: 64, align: 64, offset: 768)
!2400 = !DIGlobalVariable(name: "module_methods", scope: !0, file: !450, line: 5186, type: !2401, isLocal: true, isDefinition: true, variable: [1 x %struct.PyMethodDef]* @module_methods)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 256, align: 64, elements: !87)
!2402 = !DIGlobalVariable(name: "PyDateTime_DateType", scope: !0, file: !450, line: 2899, type: !965, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PyDateTime_DateType)
!2403 = !DIGlobalVariable(name: "date_as_number", scope: !0, file: !450, line: 2886, type: !125, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @date_as_number)
!2404 = !DIGlobalVariable(name: "_days_in_month", scope: !0, file: !450, line: 181, type: !2405, isLocal: true, isDefinition: true, variable: [13 x i32]* @_days_in_month)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 416, align: 32, elements: !2406)
!2406 = !{!2407}
!2407 = !DISubrange(count: 13)
!2408 = !DIGlobalVariable(name: "_days_before_month", scope: !0, file: !450, line: 186, type: !2405, isLocal: true, isDefinition: true, variable: [13 x i32]* @_days_before_month)
!2409 = !DIGlobalVariable(name: "PyId_isoformat", scope: !0, file: !450, line: 115, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_isoformat)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !12, line: 144, baseType: !2411)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !12, line: 140, size: 192, align: 64, elements: !2412)
!2412 = !{!2413, !2415, !2416}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2411, file: !12, line: 141, baseType: !2414, size: 64, align: 64)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64, align: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2411, file: !12, line: 142, baseType: !34, size: 64, align: 64, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2411, file: !12, line: 143, baseType: !10, size: 64, align: 64, offset: 128)
!2417 = !DIGlobalVariable(name: "date_doc", scope: !0, file: !450, line: 2883, type: !2418, isLocal: true, isDefinition: true, variable: [39 x i8]* @date_doc)
!2418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 312, align: 8, elements: !2419)
!2419 = !{!2420}
!2420 = !DISubrange(count: 39)
!2421 = !DIGlobalVariable(name: "date_methods", scope: !0, file: !450, line: 2823, type: !2422, isLocal: true, isDefinition: true, variable: [15 x %struct.PyMethodDef]* @date_methods)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 3840, align: 64, elements: !2423)
!2423 = !{!2424}
!2424 = !DISubrange(count: 15)
!2425 = !DIGlobalVariable(name: "PyId_fromtimestamp", scope: !661, file: !450, line: 2492, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @date_today.PyId_fromtimestamp)
!2426 = !DIGlobalVariable(name: "PyId_time", scope: !669, file: !450, line: 1318, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @time_time.PyId_time)
!2427 = !DIGlobalVariable(name: "DayNames", scope: !680, file: !450, line: 1006, type: !2428, isLocal: true, isDefinition: true, variable: [7 x i8*]* @format_ctime.DayNames)
!2428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 448, align: 64, elements: !2429)
!2429 = !{!2430}
!2430 = !DISubrange(count: 7)
!2431 = !DIGlobalVariable(name: "MonthNames", scope: !680, file: !450, line: 1009, type: !2432, isLocal: true, isDefinition: true, variable: [12 x i8*]* @format_ctime.MonthNames)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 768, align: 64, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 12)
!2435 = !DIGlobalVariable(name: "PyId_timetuple", scope: !694, file: !450, line: 2664, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @date_strftime.PyId_timetuple)
!2436 = !DIGlobalVariable(name: "keywords", scope: !694, file: !450, line: 2665, type: !2437, isLocal: true, isDefinition: true, variable: [2 x i8*]* @date_strftime.keywords)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 128, align: 64, elements: !2438)
!2438 = !{!2439}
!2439 = !DISubrange(count: 2)
!2440 = !DIGlobalVariable(name: "PyId_replace", scope: !839, file: !450, line: 1082, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @make_Zreplacement.PyId_replace)
!2441 = !DIGlobalVariable(name: "PyId_tzname", scope: !856, file: !450, line: 949, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @call_tzname.PyId_tzname)
!2442 = !DIGlobalVariable(name: "PyId_strftime", scope: !0, file: !450, line: 116, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_strftime)
!2443 = !DIGlobalVariable(name: "PyId_struct_time", scope: !882, file: !450, line: 1337, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @build_struct_time.PyId_struct_time)
!2444 = !DIGlobalVariable(name: "date_kws", scope: !0, file: !450, line: 2418, type: !2445, isLocal: true, isDefinition: true, variable: [4 x i8*]* @date_kws)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 256, align: 64, elements: !366)
!2446 = !DIGlobalVariable(name: "date_getset", scope: !0, file: !450, line: 2409, type: !2447, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @date_getset)
!2447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2448, size: 1280, align: 64, elements: !366)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !306, line: 17, baseType: !305)
!2449 = !DIGlobalVariable(name: "PyDateTime_DateTimeType", scope: !0, file: !450, line: 5140, type: !965, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PyDateTime_DateTimeType)
!2450 = !DIGlobalVariable(name: "datetime_as_number", scope: !0, file: !450, line: 5127, type: !125, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @datetime_as_number)
!2451 = !DIGlobalVariable(name: "datetime_doc", scope: !0, file: !450, line: 5121, type: !2452, isLocal: true, isDefinition: true, variable: [223 x i8]* @datetime_doc)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 1784, align: 8, elements: !2453)
!2453 = !{!2454}
!2454 = !DISubrange(count: 223)
!2455 = !DIGlobalVariable(name: "datetime_methods", scope: !0, file: !450, line: 5043, type: !2456, isLocal: true, isDefinition: true, variable: [21 x %struct.PyMethodDef]* @datetime_methods)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 5376, align: 64, elements: !2457)
!2457 = !{!2458}
!2458 = !DISubrange(count: 21)
!2459 = !DIGlobalVariable(name: "_keywords", scope: !1177, file: !450, line: 4182, type: !2437, isLocal: true, isDefinition: true, variable: [2 x i8*]* @datetime_datetime_now._keywords)
!2460 = !DIGlobalVariable(name: "PyId_fromutc", scope: !0, file: !450, line: 114, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_fromutc)
!2461 = !DIGlobalVariable(name: "datetime_datetime_now__doc__", scope: !0, file: !450, line: 4161, type: !2462, isLocal: true, isDefinition: true, variable: [166 x i8]* @datetime_datetime_now__doc__)
!2462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 1328, align: 8, elements: !2463)
!2463 = !{!2464}
!2464 = !DISubrange(count: 166)
!2465 = !DIGlobalVariable(name: "keywords", scope: !1234, file: !450, line: 4236, type: !2466, isLocal: true, isDefinition: true, variable: [3 x i8*]* @datetime_fromtimestamp.keywords)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 192, align: 64, elements: !2467)
!2467 = !{!2468}
!2468 = !DISubrange(count: 3)
!2469 = !DIGlobalVariable(name: "module", scope: !1263, file: !450, line: 4275, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @datetime_strptime.module)
!2470 = !DIGlobalVariable(name: "PyId__strptime_datetime", scope: !1263, file: !450, line: 4277, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @datetime_strptime.PyId__strptime_datetime)
!2471 = !DIGlobalVariable(name: "keywords", scope: !1269, file: !450, line: 4295, type: !2466, isLocal: true, isDefinition: true, variable: [3 x i8*]* @datetime_combine.keywords)
!2472 = !DIGlobalVariable(name: "keywords", scope: !1382, file: !450, line: 4543, type: !2437, isLocal: true, isDefinition: true, variable: [2 x i8*]* @datetime_isoformat.keywords)
!2473 = !DIGlobalVariable(name: "datetime_kws", scope: !0, file: !450, line: 4006, type: !2474, isLocal: true, isDefinition: true, variable: [9 x i8*]* @datetime_kws)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 576, align: 64, elements: !2475)
!2475 = !{!2476}
!2476 = !DISubrange(count: 9)
!2477 = !DIGlobalVariable(name: "keywords", scope: !1422, file: !450, line: 4814, type: !2437, isLocal: true, isDefinition: true, variable: [2 x i8*]* @datetime_astimezone.keywords)
!2478 = !DIGlobalVariable(name: "datetime_getset", scope: !0, file: !450, line: 3993, type: !2479, isLocal: true, isDefinition: true, variable: [6 x %struct.PyGetSetDef]* @datetime_getset)
!2479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2448, size: 1920, align: 64, elements: !415)
!2480 = !DIGlobalVariable(name: "PyDateTime_DeltaType", scope: !0, file: !450, line: 2343, type: !965, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PyDateTime_DeltaType)
!2481 = !DIGlobalVariable(name: "delta_as_number", scope: !0, file: !450, line: 2307, type: !125, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @delta_as_number)
!2482 = !DIGlobalVariable(name: "PyId_as_integer_ratio", scope: !0, file: !450, line: 113, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_as_integer_ratio)
!2483 = !DIGlobalVariable(name: "delta_doc", scope: !0, file: !450, line: 2304, type: !2484, isLocal: true, isDefinition: true, variable: [40 x i8]* @delta_doc)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 320, align: 8, elements: !2485)
!2485 = !{!2486}
!2486 = !DISubrange(count: 40)
!2487 = !DIGlobalVariable(name: "delta_methods", scope: !0, file: !450, line: 2294, type: !2488, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @delta_methods)
!2488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 768, align: 64, elements: !2467)
!2489 = !DIGlobalVariable(name: "delta_members", scope: !0, file: !450, line: 2281, type: !2490, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMemberDef]* @delta_members)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2491, size: 1280, align: 64, elements: !366)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !296, line: 24, baseType: !295)
!2492 = !DIGlobalVariable(name: "keywords", scope: !1818, file: !450, line: 2094, type: !2493, isLocal: true, isDefinition: true, variable: [8 x i8*]* @delta_new.keywords)
!2493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 512, align: 64, elements: !2494)
!2494 = !{!2495}
!2495 = !DISubrange(count: 8)
!2496 = !DIGlobalVariable(name: "PyDateTime_TimeType", scope: !0, file: !450, line: 3911, type: !965, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PyDateTime_TimeType)
!2497 = !DIGlobalVariable(name: "time_as_number", scope: !0, file: !450, line: 3898, type: !125, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @time_as_number)
!2498 = !DIGlobalVariable(name: "time_doc", scope: !0, file: !450, line: 3892, type: !2499, isLocal: true, isDefinition: true, variable: [200 x i8]* @time_doc)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 1600, align: 8, elements: !2500)
!2500 = !{!2501}
!2501 = !DISubrange(count: 200)
!2502 = !DIGlobalVariable(name: "time_methods", scope: !0, file: !450, line: 3862, type: !2503, isLocal: true, isDefinition: true, variable: [9 x %struct.PyMethodDef]* @time_methods)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 2304, align: 64, elements: !2475)
!2504 = !DIGlobalVariable(name: "keywords", scope: !2027, file: !450, line: 3641, type: !2437, isLocal: true, isDefinition: true, variable: [2 x i8*]* @time_strftime.keywords)
!2505 = !DIGlobalVariable(name: "time_kws", scope: !0, file: !450, line: 3476, type: !2506, isLocal: true, isDefinition: true, variable: [6 x i8*]* @time_kws)
!2506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 384, align: 64, elements: !415)
!2507 = !DIGlobalVariable(name: "time_getset", scope: !0, file: !450, line: 3463, type: !2479, isLocal: true, isDefinition: true, variable: [6 x %struct.PyGetSetDef]* @time_getset)
!2508 = !DIGlobalVariable(name: "PyDateTime_TZInfoType", scope: !0, file: !450, line: 3155, type: !965, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PyDateTime_TZInfoType)
!2509 = !DIGlobalVariable(name: "tzinfo_doc", scope: !0, file: !450, line: 3152, type: !2510, isLocal: true, isDefinition: true, variable: [48 x i8]* @tzinfo_doc)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 384, align: 8, elements: !2511)
!2511 = !{!2512}
!2512 = !DISubrange(count: 48)
!2513 = !DIGlobalVariable(name: "tzinfo_methods", scope: !0, file: !450, line: 3131, type: !2514, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMethodDef]* @tzinfo_methods)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 1536, align: 64, elements: !415)
!2515 = !DIGlobalVariable(name: "PyId___getinitargs__", scope: !2186, file: !450, line: 3079, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @tzinfo_reduce.PyId___getinitargs__)
!2516 = !DIGlobalVariable(name: "PyId___getstate__", scope: !2186, file: !450, line: 3080, type: !2410, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @tzinfo_reduce.PyId___getstate__)
!2517 = !DIGlobalVariable(name: "PyDateTime_TimeZoneType", scope: !0, file: !450, line: 3382, type: !965, isLocal: true, isDefinition: true, variable: %struct._typeobject* @PyDateTime_TimeZoneType)
!2518 = !DIGlobalVariable(name: "timezone_doc", scope: !0, file: !450, line: 3379, type: !2510, isLocal: true, isDefinition: true, variable: [48 x i8]* @timezone_doc)
!2519 = !DIGlobalVariable(name: "timezone_methods", scope: !0, file: !450, line: 3359, type: !2514, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMethodDef]* @timezone_methods)
!2520 = !DIGlobalVariable(name: "timezone_kws", scope: !0, file: !450, line: 3197, type: !2466, isLocal: true, isDefinition: true, variable: [3 x i8*]* @timezone_kws)
!2521 = !DIGlobalVariable(name: "CAPI", scope: !0, file: !450, line: 5193, type: !2522, isLocal: true, isDefinition: true, variable: %struct.PyDateTime_CAPI* @CAPI)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_CAPI", file: !357, line: 165, baseType: !2523)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, file: !357, line: 146, size: 704, align: 64, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2528, !2529, !2530, !2532, !2534, !2536, !2538, !2539}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "DateType", scope: !2523, file: !357, line: 148, baseType: !964, size: 64, align: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "DateTimeType", scope: !2523, file: !357, line: 149, baseType: !964, size: 64, align: 64, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "TimeType", scope: !2523, file: !357, line: 150, baseType: !964, size: 64, align: 64, offset: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "DeltaType", scope: !2523, file: !357, line: 151, baseType: !964, size: 64, align: 64, offset: 192)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "TZInfoType", scope: !2523, file: !357, line: 152, baseType: !964, size: 64, align: 64, offset: 256)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "Date_FromDate", scope: !2523, file: !357, line: 155, baseType: !2531, size: 64, align: 64, offset: 320)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "DateTime_FromDateAndTime", scope: !2523, file: !357, line: 156, baseType: !2533, size: 64, align: 64, offset: 384)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64, align: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "Time_FromTime", scope: !2523, file: !357, line: 158, baseType: !2535, size: 64, align: 64, offset: 448)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64, align: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "Delta_FromDelta", scope: !2523, file: !357, line: 159, baseType: !2537, size: 64, align: 64, offset: 512)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64, align: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "DateTime_FromTimestamp", scope: !2523, file: !357, line: 162, baseType: !139, size: 64, align: 64, offset: 576)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "Date_FromTimestamp", scope: !2523, file: !357, line: 163, baseType: !130, size: 64, align: 64, offset: 640)
!2540 = !DIGlobalVariable(name: "one", scope: !0, file: !450, line: 1396, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @one)
!2541 = !DIGlobalVariable(name: "us_per_ms", scope: !0, file: !450, line: 1397, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @us_per_ms)
!2542 = !DIGlobalVariable(name: "us_per_second", scope: !0, file: !450, line: 1398, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @us_per_second)
!2543 = !DIGlobalVariable(name: "us_per_minute", scope: !0, file: !450, line: 1399, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @us_per_minute)
!2544 = !DIGlobalVariable(name: "seconds_per_day", scope: !0, file: !450, line: 1403, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @seconds_per_day)
!2545 = !DIGlobalVariable(name: "us_per_hour", scope: !0, file: !450, line: 1400, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @us_per_hour)
!2546 = !DIGlobalVariable(name: "us_per_day", scope: !0, file: !450, line: 1401, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @us_per_day)
!2547 = !DIGlobalVariable(name: "us_per_week", scope: !0, file: !450, line: 1402, type: !10, isLocal: true, isDefinition: true, variable: %struct._object** @us_per_week)
!2548 = !{i32 2, !"Dwarf Version", i32 4}
!2549 = !{i32 2, !"Debug Info Version", i32 3}
!2550 = !{i32 1, !"PIC Level", i32 2}
!2551 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!2552 = !DILocation(line: 5224, column: 5, scope: !457)
!2553 = !DIExpression()
!2554 = !DILocation(line: 5224, column: 15, scope: !457)
!2555 = !DILocation(line: 5225, column: 5, scope: !457)
!2556 = !DILocation(line: 5225, column: 15, scope: !457)
!2557 = !DILocation(line: 5226, column: 5, scope: !457)
!2558 = !DILocation(line: 5226, column: 15, scope: !457)
!2559 = !DILocation(line: 5227, column: 5, scope: !457)
!2560 = !DILocation(line: 5227, column: 15, scope: !457)
!2561 = !DILocation(line: 5229, column: 9, scope: !457)
!2562 = !DILocation(line: 5229, column: 7, scope: !457)
!2563 = !{!2564, !2564, i64 0}
!2564 = !{!"any pointer", !2565, i64 0}
!2565 = !{!"omnipotent char", !2566, i64 0}
!2566 = !{!"Simple C/C++ TBAA"}
!2567 = !DILocation(line: 5230, column: 9, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5230, column: 9)
!2569 = !DILocation(line: 5230, column: 11, scope: !2568)
!2570 = !DILocation(line: 5230, column: 9, scope: !457)
!2571 = !DILocation(line: 5231, column: 9, scope: !2568)
!2572 = !DILocation(line: 5233, column: 9, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5233, column: 9)
!2574 = !DILocation(line: 5233, column: 44, scope: !2573)
!2575 = !DILocation(line: 5233, column: 9, scope: !457)
!2576 = !DILocation(line: 5234, column: 9, scope: !2573)
!2577 = !DILocation(line: 5235, column: 9, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5235, column: 9)
!2579 = !DILocation(line: 5235, column: 48, scope: !2578)
!2580 = !DILocation(line: 5235, column: 9, scope: !457)
!2581 = !DILocation(line: 5236, column: 9, scope: !2578)
!2582 = !DILocation(line: 5237, column: 9, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5237, column: 9)
!2584 = !DILocation(line: 5237, column: 45, scope: !2583)
!2585 = !DILocation(line: 5237, column: 9, scope: !457)
!2586 = !DILocation(line: 5238, column: 9, scope: !2583)
!2587 = !DILocation(line: 5239, column: 9, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5239, column: 9)
!2589 = !DILocation(line: 5239, column: 44, scope: !2588)
!2590 = !DILocation(line: 5239, column: 9, scope: !457)
!2591 = !DILocation(line: 5240, column: 9, scope: !2588)
!2592 = !DILocation(line: 5241, column: 9, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5241, column: 9)
!2594 = !DILocation(line: 5241, column: 46, scope: !2593)
!2595 = !DILocation(line: 5241, column: 9, scope: !457)
!2596 = !DILocation(line: 5242, column: 9, scope: !2593)
!2597 = !DILocation(line: 5243, column: 9, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5243, column: 9)
!2599 = !DILocation(line: 5243, column: 48, scope: !2598)
!2600 = !DILocation(line: 5243, column: 9, scope: !457)
!2601 = !DILocation(line: 5244, column: 9, scope: !2598)
!2602 = !DILocation(line: 5247, column: 30, scope: !457)
!2603 = !{!2604, !2564, i64 264}
!2604 = !{!"_typeobject", !2605, i64 0, !2564, i64 24, !2607, i64 32, !2607, i64 40, !2564, i64 48, !2564, i64 56, !2564, i64 64, !2564, i64 72, !2564, i64 80, !2564, i64 88, !2564, i64 96, !2564, i64 104, !2564, i64 112, !2564, i64 120, !2564, i64 128, !2564, i64 136, !2564, i64 144, !2564, i64 152, !2564, i64 160, !2607, i64 168, !2564, i64 176, !2564, i64 184, !2564, i64 192, !2564, i64 200, !2607, i64 208, !2564, i64 216, !2564, i64 224, !2564, i64 232, !2564, i64 240, !2564, i64 248, !2564, i64 256, !2564, i64 264, !2564, i64 272, !2564, i64 280, !2607, i64 288, !2564, i64 296, !2564, i64 304, !2564, i64 312, !2564, i64 320, !2564, i64 328, !2564, i64 336, !2564, i64 344, !2564, i64 352, !2564, i64 360, !2564, i64 368, !2564, i64 376, !2608, i64 384, !2564, i64 392}
!2605 = !{!"", !2606, i64 0, !2607, i64 16}
!2606 = !{!"_object", !2607, i64 0, !2564, i64 8}
!2607 = !{!"long", !2565, i64 0}
!2608 = !{!"int", !2565, i64 0}
!2609 = !DILocation(line: 5247, column: 7, scope: !457)
!2610 = !DILocation(line: 5249, column: 9, scope: !457)
!2611 = !DILocation(line: 5249, column: 7, scope: !457)
!2612 = !DILocation(line: 5250, column: 9, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5250, column: 9)
!2614 = !DILocation(line: 5250, column: 11, scope: !2613)
!2615 = !DILocation(line: 5250, column: 25, scope: !2613)
!2616 = !DILocation(line: 5250, column: 49, scope: !2617)
!2617 = !DILexicalBlockFile(scope: !2613, file: !450, discriminator: 1)
!2618 = !DILocation(line: 5250, column: 66, scope: !2613)
!2619 = !DILocation(line: 5250, column: 28, scope: !2613)
!2620 = !DILocation(line: 5250, column: 69, scope: !2613)
!2621 = !DILocation(line: 5250, column: 9, scope: !457)
!2622 = !DILocation(line: 5251, column: 9, scope: !2613)
!2623 = !DILocation(line: 5252, column: 5, scope: !457)
!2624 = !DILocation(line: 5252, column: 10, scope: !2625)
!2625 = !DILexicalBlockFile(scope: !466, file: !450, discriminator: 1)
!2626 = !DILocation(line: 5252, column: 20, scope: !466)
!2627 = !DILocation(line: 5252, column: 50, scope: !466)
!2628 = !DILocation(line: 5252, column: 62, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !466, file: !450, line: 5252, column: 59)
!2630 = !DILocation(line: 5252, column: 79, scope: !2629)
!2631 = !DILocation(line: 5252, column: 59, scope: !2629)
!2632 = !{!2606, !2607, i64 0}
!2633 = !DILocation(line: 5252, column: 89, scope: !2629)
!2634 = !DILocation(line: 5252, column: 59, scope: !466)
!2635 = !DILocation(line: 5252, column: 59, scope: !2636)
!2636 = !DILexicalBlockFile(scope: !466, file: !450, discriminator: 2)
!2637 = !DILocation(line: 5252, column: 120, scope: !2638)
!2638 = !DILexicalBlockFile(scope: !2629, file: !450, discriminator: 3)
!2639 = !DILocation(line: 5252, column: 138, scope: !2629)
!2640 = !{!2606, !2564, i64 8}
!2641 = !DILocation(line: 5252, column: 148, scope: !2629)
!2642 = !{!2604, !2564, i64 48}
!2643 = !DILocation(line: 5252, column: 173, scope: !2629)
!2644 = !DILocation(line: 5252, column: 104, scope: !2629)
!2645 = !DILocation(line: 5252, column: 192, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !457, file: !450, discriminator: 4)
!2647 = !DILocation(line: 5252, column: 192, scope: !466)
!2648 = !DILocation(line: 5252, column: 192, scope: !2649)
!2649 = !DILexicalBlockFile(scope: !466, file: !450, discriminator: 5)
!2650 = !DILocation(line: 5254, column: 9, scope: !457)
!2651 = !DILocation(line: 5254, column: 7, scope: !457)
!2652 = !DILocation(line: 5255, column: 9, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5255, column: 9)
!2654 = !DILocation(line: 5255, column: 11, scope: !2653)
!2655 = !DILocation(line: 5255, column: 25, scope: !2653)
!2656 = !DILocation(line: 5255, column: 49, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2653, file: !450, discriminator: 1)
!2658 = !DILocation(line: 5255, column: 59, scope: !2653)
!2659 = !DILocation(line: 5255, column: 28, scope: !2653)
!2660 = !DILocation(line: 5255, column: 62, scope: !2653)
!2661 = !DILocation(line: 5255, column: 9, scope: !457)
!2662 = !DILocation(line: 5256, column: 9, scope: !2653)
!2663 = !DILocation(line: 5257, column: 5, scope: !457)
!2664 = !DILocation(line: 5257, column: 10, scope: !2665)
!2665 = !DILexicalBlockFile(scope: !468, file: !450, discriminator: 1)
!2666 = !DILocation(line: 5257, column: 20, scope: !468)
!2667 = !DILocation(line: 5257, column: 50, scope: !468)
!2668 = !DILocation(line: 5257, column: 62, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !468, file: !450, line: 5257, column: 59)
!2670 = !DILocation(line: 5257, column: 79, scope: !2669)
!2671 = !DILocation(line: 5257, column: 59, scope: !2669)
!2672 = !DILocation(line: 5257, column: 89, scope: !2669)
!2673 = !DILocation(line: 5257, column: 59, scope: !468)
!2674 = !DILocation(line: 5257, column: 59, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !468, file: !450, discriminator: 2)
!2676 = !DILocation(line: 5257, column: 120, scope: !2677)
!2677 = !DILexicalBlockFile(scope: !2669, file: !450, discriminator: 3)
!2678 = !DILocation(line: 5257, column: 138, scope: !2669)
!2679 = !DILocation(line: 5257, column: 148, scope: !2669)
!2680 = !DILocation(line: 5257, column: 173, scope: !2669)
!2681 = !DILocation(line: 5257, column: 104, scope: !2669)
!2682 = !DILocation(line: 5257, column: 192, scope: !2646)
!2683 = !DILocation(line: 5257, column: 192, scope: !468)
!2684 = !DILocation(line: 5257, column: 192, scope: !2685)
!2685 = !DILexicalBlockFile(scope: !468, file: !450, discriminator: 5)
!2686 = !DILocation(line: 5259, column: 9, scope: !457)
!2687 = !DILocation(line: 5259, column: 7, scope: !457)
!2688 = !DILocation(line: 5260, column: 9, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5260, column: 9)
!2690 = !DILocation(line: 5260, column: 11, scope: !2689)
!2691 = !DILocation(line: 5260, column: 25, scope: !2689)
!2692 = !DILocation(line: 5260, column: 49, scope: !2693)
!2693 = !DILexicalBlockFile(scope: !2689, file: !450, discriminator: 1)
!2694 = !DILocation(line: 5260, column: 59, scope: !2689)
!2695 = !DILocation(line: 5260, column: 28, scope: !2689)
!2696 = !DILocation(line: 5260, column: 62, scope: !2689)
!2697 = !DILocation(line: 5260, column: 9, scope: !457)
!2698 = !DILocation(line: 5261, column: 9, scope: !2689)
!2699 = !DILocation(line: 5262, column: 5, scope: !457)
!2700 = !DILocation(line: 5262, column: 10, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !470, file: !450, discriminator: 1)
!2702 = !DILocation(line: 5262, column: 20, scope: !470)
!2703 = !DILocation(line: 5262, column: 50, scope: !470)
!2704 = !DILocation(line: 5262, column: 62, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !470, file: !450, line: 5262, column: 59)
!2706 = !DILocation(line: 5262, column: 79, scope: !2705)
!2707 = !DILocation(line: 5262, column: 59, scope: !2705)
!2708 = !DILocation(line: 5262, column: 89, scope: !2705)
!2709 = !DILocation(line: 5262, column: 59, scope: !470)
!2710 = !DILocation(line: 5262, column: 59, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !470, file: !450, discriminator: 2)
!2712 = !DILocation(line: 5262, column: 120, scope: !2713)
!2713 = !DILexicalBlockFile(scope: !2705, file: !450, discriminator: 3)
!2714 = !DILocation(line: 5262, column: 138, scope: !2705)
!2715 = !DILocation(line: 5262, column: 148, scope: !2705)
!2716 = !DILocation(line: 5262, column: 173, scope: !2705)
!2717 = !DILocation(line: 5262, column: 104, scope: !2705)
!2718 = !DILocation(line: 5262, column: 192, scope: !2646)
!2719 = !DILocation(line: 5262, column: 192, scope: !470)
!2720 = !DILocation(line: 5262, column: 192, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !470, file: !450, discriminator: 5)
!2722 = !DILocation(line: 5265, column: 29, scope: !457)
!2723 = !DILocation(line: 5265, column: 7, scope: !457)
!2724 = !DILocation(line: 5267, column: 9, scope: !457)
!2725 = !DILocation(line: 5267, column: 7, scope: !457)
!2726 = !DILocation(line: 5268, column: 9, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5268, column: 9)
!2728 = !DILocation(line: 5268, column: 11, scope: !2727)
!2729 = !DILocation(line: 5268, column: 25, scope: !2727)
!2730 = !DILocation(line: 5268, column: 49, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2727, file: !450, discriminator: 1)
!2732 = !DILocation(line: 5268, column: 59, scope: !2727)
!2733 = !DILocation(line: 5268, column: 28, scope: !2727)
!2734 = !DILocation(line: 5268, column: 62, scope: !2727)
!2735 = !DILocation(line: 5268, column: 9, scope: !457)
!2736 = !DILocation(line: 5269, column: 9, scope: !2727)
!2737 = !DILocation(line: 5270, column: 5, scope: !457)
!2738 = !DILocation(line: 5270, column: 10, scope: !2739)
!2739 = !DILexicalBlockFile(scope: !472, file: !450, discriminator: 1)
!2740 = !DILocation(line: 5270, column: 20, scope: !472)
!2741 = !DILocation(line: 5270, column: 50, scope: !472)
!2742 = !DILocation(line: 5270, column: 62, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !472, file: !450, line: 5270, column: 59)
!2744 = !DILocation(line: 5270, column: 79, scope: !2743)
!2745 = !DILocation(line: 5270, column: 59, scope: !2743)
!2746 = !DILocation(line: 5270, column: 89, scope: !2743)
!2747 = !DILocation(line: 5270, column: 59, scope: !472)
!2748 = !DILocation(line: 5270, column: 59, scope: !2749)
!2749 = !DILexicalBlockFile(scope: !472, file: !450, discriminator: 2)
!2750 = !DILocation(line: 5270, column: 120, scope: !2751)
!2751 = !DILexicalBlockFile(scope: !2743, file: !450, discriminator: 3)
!2752 = !DILocation(line: 5270, column: 138, scope: !2743)
!2753 = !DILocation(line: 5270, column: 148, scope: !2743)
!2754 = !DILocation(line: 5270, column: 173, scope: !2743)
!2755 = !DILocation(line: 5270, column: 104, scope: !2743)
!2756 = !DILocation(line: 5270, column: 192, scope: !2646)
!2757 = !DILocation(line: 5270, column: 192, scope: !472)
!2758 = !DILocation(line: 5270, column: 192, scope: !2759)
!2759 = !DILexicalBlockFile(scope: !472, file: !450, discriminator: 5)
!2760 = !DILocation(line: 5272, column: 9, scope: !457)
!2761 = !DILocation(line: 5272, column: 7, scope: !457)
!2762 = !DILocation(line: 5273, column: 9, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5273, column: 9)
!2764 = !DILocation(line: 5273, column: 11, scope: !2763)
!2765 = !DILocation(line: 5273, column: 25, scope: !2763)
!2766 = !DILocation(line: 5273, column: 49, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2763, file: !450, discriminator: 1)
!2768 = !DILocation(line: 5273, column: 59, scope: !2763)
!2769 = !DILocation(line: 5273, column: 28, scope: !2763)
!2770 = !DILocation(line: 5273, column: 62, scope: !2763)
!2771 = !DILocation(line: 5273, column: 9, scope: !457)
!2772 = !DILocation(line: 5274, column: 9, scope: !2763)
!2773 = !DILocation(line: 5275, column: 5, scope: !457)
!2774 = !DILocation(line: 5275, column: 10, scope: !2775)
!2775 = !DILexicalBlockFile(scope: !474, file: !450, discriminator: 1)
!2776 = !DILocation(line: 5275, column: 20, scope: !474)
!2777 = !DILocation(line: 5275, column: 50, scope: !474)
!2778 = !DILocation(line: 5275, column: 62, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !474, file: !450, line: 5275, column: 59)
!2780 = !DILocation(line: 5275, column: 79, scope: !2779)
!2781 = !DILocation(line: 5275, column: 59, scope: !2779)
!2782 = !DILocation(line: 5275, column: 89, scope: !2779)
!2783 = !DILocation(line: 5275, column: 59, scope: !474)
!2784 = !DILocation(line: 5275, column: 59, scope: !2785)
!2785 = !DILexicalBlockFile(scope: !474, file: !450, discriminator: 2)
!2786 = !DILocation(line: 5275, column: 120, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !2779, file: !450, discriminator: 3)
!2788 = !DILocation(line: 5275, column: 138, scope: !2779)
!2789 = !DILocation(line: 5275, column: 148, scope: !2779)
!2790 = !DILocation(line: 5275, column: 173, scope: !2779)
!2791 = !DILocation(line: 5275, column: 104, scope: !2779)
!2792 = !DILocation(line: 5275, column: 192, scope: !2646)
!2793 = !DILocation(line: 5275, column: 192, scope: !474)
!2794 = !DILocation(line: 5275, column: 192, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !474, file: !450, discriminator: 5)
!2796 = !DILocation(line: 5277, column: 9, scope: !457)
!2797 = !DILocation(line: 5277, column: 7, scope: !457)
!2798 = !DILocation(line: 5278, column: 9, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5278, column: 9)
!2800 = !DILocation(line: 5278, column: 11, scope: !2799)
!2801 = !DILocation(line: 5278, column: 25, scope: !2799)
!2802 = !DILocation(line: 5278, column: 49, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2799, file: !450, discriminator: 1)
!2804 = !DILocation(line: 5278, column: 66, scope: !2799)
!2805 = !DILocation(line: 5278, column: 28, scope: !2799)
!2806 = !DILocation(line: 5278, column: 69, scope: !2799)
!2807 = !DILocation(line: 5278, column: 9, scope: !457)
!2808 = !DILocation(line: 5279, column: 9, scope: !2799)
!2809 = !DILocation(line: 5280, column: 5, scope: !457)
!2810 = !DILocation(line: 5280, column: 10, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !476, file: !450, discriminator: 1)
!2812 = !DILocation(line: 5280, column: 20, scope: !476)
!2813 = !DILocation(line: 5280, column: 50, scope: !476)
!2814 = !DILocation(line: 5280, column: 62, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !476, file: !450, line: 5280, column: 59)
!2816 = !DILocation(line: 5280, column: 79, scope: !2815)
!2817 = !DILocation(line: 5280, column: 59, scope: !2815)
!2818 = !DILocation(line: 5280, column: 89, scope: !2815)
!2819 = !DILocation(line: 5280, column: 59, scope: !476)
!2820 = !DILocation(line: 5280, column: 59, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !476, file: !450, discriminator: 2)
!2822 = !DILocation(line: 5280, column: 120, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2815, file: !450, discriminator: 3)
!2824 = !DILocation(line: 5280, column: 138, scope: !2815)
!2825 = !DILocation(line: 5280, column: 148, scope: !2815)
!2826 = !DILocation(line: 5280, column: 173, scope: !2815)
!2827 = !DILocation(line: 5280, column: 104, scope: !2815)
!2828 = !DILocation(line: 5280, column: 192, scope: !2646)
!2829 = !DILocation(line: 5280, column: 192, scope: !476)
!2830 = !DILocation(line: 5280, column: 192, scope: !2831)
!2831 = !DILexicalBlockFile(scope: !476, file: !450, discriminator: 5)
!2832 = !DILocation(line: 5283, column: 29, scope: !457)
!2833 = !DILocation(line: 5283, column: 7, scope: !457)
!2834 = !DILocation(line: 5285, column: 9, scope: !457)
!2835 = !DILocation(line: 5285, column: 7, scope: !457)
!2836 = !DILocation(line: 5286, column: 9, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5286, column: 9)
!2838 = !DILocation(line: 5286, column: 11, scope: !2837)
!2839 = !DILocation(line: 5286, column: 25, scope: !2837)
!2840 = !DILocation(line: 5286, column: 49, scope: !2841)
!2841 = !DILexicalBlockFile(scope: !2837, file: !450, discriminator: 1)
!2842 = !DILocation(line: 5286, column: 59, scope: !2837)
!2843 = !DILocation(line: 5286, column: 28, scope: !2837)
!2844 = !DILocation(line: 5286, column: 62, scope: !2837)
!2845 = !DILocation(line: 5286, column: 9, scope: !457)
!2846 = !DILocation(line: 5287, column: 9, scope: !2837)
!2847 = !DILocation(line: 5288, column: 5, scope: !457)
!2848 = !DILocation(line: 5288, column: 10, scope: !2849)
!2849 = !DILexicalBlockFile(scope: !478, file: !450, discriminator: 1)
!2850 = !DILocation(line: 5288, column: 20, scope: !478)
!2851 = !DILocation(line: 5288, column: 50, scope: !478)
!2852 = !DILocation(line: 5288, column: 62, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !478, file: !450, line: 5288, column: 59)
!2854 = !DILocation(line: 5288, column: 79, scope: !2853)
!2855 = !DILocation(line: 5288, column: 59, scope: !2853)
!2856 = !DILocation(line: 5288, column: 89, scope: !2853)
!2857 = !DILocation(line: 5288, column: 59, scope: !478)
!2858 = !DILocation(line: 5288, column: 59, scope: !2859)
!2859 = !DILexicalBlockFile(scope: !478, file: !450, discriminator: 2)
!2860 = !DILocation(line: 5288, column: 120, scope: !2861)
!2861 = !DILexicalBlockFile(scope: !2853, file: !450, discriminator: 3)
!2862 = !DILocation(line: 5288, column: 138, scope: !2853)
!2863 = !DILocation(line: 5288, column: 148, scope: !2853)
!2864 = !DILocation(line: 5288, column: 173, scope: !2853)
!2865 = !DILocation(line: 5288, column: 104, scope: !2853)
!2866 = !DILocation(line: 5288, column: 192, scope: !2646)
!2867 = !DILocation(line: 5288, column: 192, scope: !478)
!2868 = !DILocation(line: 5288, column: 192, scope: !2869)
!2869 = !DILexicalBlockFile(scope: !478, file: !450, discriminator: 5)
!2870 = !DILocation(line: 5290, column: 9, scope: !457)
!2871 = !DILocation(line: 5290, column: 7, scope: !457)
!2872 = !DILocation(line: 5291, column: 9, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5291, column: 9)
!2874 = !DILocation(line: 5291, column: 11, scope: !2873)
!2875 = !DILocation(line: 5291, column: 25, scope: !2873)
!2876 = !DILocation(line: 5291, column: 49, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2873, file: !450, discriminator: 1)
!2878 = !DILocation(line: 5291, column: 59, scope: !2873)
!2879 = !DILocation(line: 5291, column: 28, scope: !2873)
!2880 = !DILocation(line: 5291, column: 62, scope: !2873)
!2881 = !DILocation(line: 5291, column: 9, scope: !457)
!2882 = !DILocation(line: 5292, column: 9, scope: !2873)
!2883 = !DILocation(line: 5293, column: 5, scope: !457)
!2884 = !DILocation(line: 5293, column: 10, scope: !2885)
!2885 = !DILexicalBlockFile(scope: !480, file: !450, discriminator: 1)
!2886 = !DILocation(line: 5293, column: 20, scope: !480)
!2887 = !DILocation(line: 5293, column: 50, scope: !480)
!2888 = !DILocation(line: 5293, column: 62, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !480, file: !450, line: 5293, column: 59)
!2890 = !DILocation(line: 5293, column: 79, scope: !2889)
!2891 = !DILocation(line: 5293, column: 59, scope: !2889)
!2892 = !DILocation(line: 5293, column: 89, scope: !2889)
!2893 = !DILocation(line: 5293, column: 59, scope: !480)
!2894 = !DILocation(line: 5293, column: 59, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !480, file: !450, discriminator: 2)
!2896 = !DILocation(line: 5293, column: 120, scope: !2897)
!2897 = !DILexicalBlockFile(scope: !2889, file: !450, discriminator: 3)
!2898 = !DILocation(line: 5293, column: 138, scope: !2889)
!2899 = !DILocation(line: 5293, column: 148, scope: !2889)
!2900 = !DILocation(line: 5293, column: 173, scope: !2889)
!2901 = !DILocation(line: 5293, column: 104, scope: !2889)
!2902 = !DILocation(line: 5293, column: 192, scope: !2646)
!2903 = !DILocation(line: 5293, column: 192, scope: !480)
!2904 = !DILocation(line: 5293, column: 192, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !480, file: !450, discriminator: 5)
!2906 = !DILocation(line: 5295, column: 9, scope: !457)
!2907 = !DILocation(line: 5295, column: 7, scope: !457)
!2908 = !DILocation(line: 5296, column: 9, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5296, column: 9)
!2910 = !DILocation(line: 5296, column: 11, scope: !2909)
!2911 = !DILocation(line: 5296, column: 25, scope: !2909)
!2912 = !DILocation(line: 5296, column: 49, scope: !2913)
!2913 = !DILexicalBlockFile(scope: !2909, file: !450, discriminator: 1)
!2914 = !DILocation(line: 5296, column: 66, scope: !2909)
!2915 = !DILocation(line: 5296, column: 28, scope: !2909)
!2916 = !DILocation(line: 5296, column: 69, scope: !2909)
!2917 = !DILocation(line: 5296, column: 9, scope: !457)
!2918 = !DILocation(line: 5297, column: 9, scope: !2909)
!2919 = !DILocation(line: 5298, column: 5, scope: !457)
!2920 = !DILocation(line: 5298, column: 10, scope: !2921)
!2921 = !DILexicalBlockFile(scope: !482, file: !450, discriminator: 1)
!2922 = !DILocation(line: 5298, column: 20, scope: !482)
!2923 = !DILocation(line: 5298, column: 50, scope: !482)
!2924 = !DILocation(line: 5298, column: 62, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !482, file: !450, line: 5298, column: 59)
!2926 = !DILocation(line: 5298, column: 79, scope: !2925)
!2927 = !DILocation(line: 5298, column: 59, scope: !2925)
!2928 = !DILocation(line: 5298, column: 89, scope: !2925)
!2929 = !DILocation(line: 5298, column: 59, scope: !482)
!2930 = !DILocation(line: 5298, column: 59, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !482, file: !450, discriminator: 2)
!2932 = !DILocation(line: 5298, column: 120, scope: !2933)
!2933 = !DILexicalBlockFile(scope: !2925, file: !450, discriminator: 3)
!2934 = !DILocation(line: 5298, column: 138, scope: !2925)
!2935 = !DILocation(line: 5298, column: 148, scope: !2925)
!2936 = !DILocation(line: 5298, column: 173, scope: !2925)
!2937 = !DILocation(line: 5298, column: 104, scope: !2925)
!2938 = !DILocation(line: 5298, column: 192, scope: !2646)
!2939 = !DILocation(line: 5298, column: 192, scope: !482)
!2940 = !DILocation(line: 5298, column: 192, scope: !2941)
!2941 = !DILexicalBlockFile(scope: !482, file: !450, discriminator: 5)
!2942 = !DILocation(line: 5301, column: 33, scope: !457)
!2943 = !DILocation(line: 5301, column: 7, scope: !457)
!2944 = !DILocation(line: 5303, column: 9, scope: !457)
!2945 = !DILocation(line: 5303, column: 7, scope: !457)
!2946 = !DILocation(line: 5304, column: 9, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5304, column: 9)
!2948 = !DILocation(line: 5304, column: 11, scope: !2947)
!2949 = !DILocation(line: 5304, column: 25, scope: !2947)
!2950 = !DILocation(line: 5304, column: 49, scope: !2951)
!2951 = !DILexicalBlockFile(scope: !2947, file: !450, discriminator: 1)
!2952 = !DILocation(line: 5304, column: 59, scope: !2947)
!2953 = !DILocation(line: 5304, column: 28, scope: !2947)
!2954 = !DILocation(line: 5304, column: 62, scope: !2947)
!2955 = !DILocation(line: 5304, column: 9, scope: !457)
!2956 = !DILocation(line: 5305, column: 9, scope: !2947)
!2957 = !DILocation(line: 5306, column: 5, scope: !457)
!2958 = !DILocation(line: 5306, column: 10, scope: !2959)
!2959 = !DILexicalBlockFile(scope: !484, file: !450, discriminator: 1)
!2960 = !DILocation(line: 5306, column: 20, scope: !484)
!2961 = !DILocation(line: 5306, column: 50, scope: !484)
!2962 = !DILocation(line: 5306, column: 62, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !484, file: !450, line: 5306, column: 59)
!2964 = !DILocation(line: 5306, column: 79, scope: !2963)
!2965 = !DILocation(line: 5306, column: 59, scope: !2963)
!2966 = !DILocation(line: 5306, column: 89, scope: !2963)
!2967 = !DILocation(line: 5306, column: 59, scope: !484)
!2968 = !DILocation(line: 5306, column: 59, scope: !2969)
!2969 = !DILexicalBlockFile(scope: !484, file: !450, discriminator: 2)
!2970 = !DILocation(line: 5306, column: 120, scope: !2971)
!2971 = !DILexicalBlockFile(scope: !2963, file: !450, discriminator: 3)
!2972 = !DILocation(line: 5306, column: 138, scope: !2963)
!2973 = !DILocation(line: 5306, column: 148, scope: !2963)
!2974 = !DILocation(line: 5306, column: 173, scope: !2963)
!2975 = !DILocation(line: 5306, column: 104, scope: !2963)
!2976 = !DILocation(line: 5306, column: 192, scope: !2646)
!2977 = !DILocation(line: 5306, column: 192, scope: !484)
!2978 = !DILocation(line: 5306, column: 192, scope: !2979)
!2979 = !DILexicalBlockFile(scope: !484, file: !450, discriminator: 5)
!2980 = !DILocation(line: 5308, column: 9, scope: !457)
!2981 = !DILocation(line: 5308, column: 7, scope: !457)
!2982 = !DILocation(line: 5309, column: 9, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5309, column: 9)
!2984 = !DILocation(line: 5309, column: 11, scope: !2983)
!2985 = !DILocation(line: 5309, column: 25, scope: !2983)
!2986 = !DILocation(line: 5309, column: 49, scope: !2987)
!2987 = !DILexicalBlockFile(scope: !2983, file: !450, discriminator: 1)
!2988 = !DILocation(line: 5309, column: 59, scope: !2983)
!2989 = !DILocation(line: 5309, column: 28, scope: !2983)
!2990 = !DILocation(line: 5309, column: 62, scope: !2983)
!2991 = !DILocation(line: 5309, column: 9, scope: !457)
!2992 = !DILocation(line: 5310, column: 9, scope: !2983)
!2993 = !DILocation(line: 5311, column: 5, scope: !457)
!2994 = !DILocation(line: 5311, column: 10, scope: !2995)
!2995 = !DILexicalBlockFile(scope: !486, file: !450, discriminator: 1)
!2996 = !DILocation(line: 5311, column: 20, scope: !486)
!2997 = !DILocation(line: 5311, column: 50, scope: !486)
!2998 = !DILocation(line: 5311, column: 62, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !486, file: !450, line: 5311, column: 59)
!3000 = !DILocation(line: 5311, column: 79, scope: !2999)
!3001 = !DILocation(line: 5311, column: 59, scope: !2999)
!3002 = !DILocation(line: 5311, column: 89, scope: !2999)
!3003 = !DILocation(line: 5311, column: 59, scope: !486)
!3004 = !DILocation(line: 5311, column: 59, scope: !3005)
!3005 = !DILexicalBlockFile(scope: !486, file: !450, discriminator: 2)
!3006 = !DILocation(line: 5311, column: 120, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !2999, file: !450, discriminator: 3)
!3008 = !DILocation(line: 5311, column: 138, scope: !2999)
!3009 = !DILocation(line: 5311, column: 148, scope: !2999)
!3010 = !DILocation(line: 5311, column: 173, scope: !2999)
!3011 = !DILocation(line: 5311, column: 104, scope: !2999)
!3012 = !DILocation(line: 5311, column: 192, scope: !2646)
!3013 = !DILocation(line: 5311, column: 192, scope: !486)
!3014 = !DILocation(line: 5311, column: 192, scope: !3015)
!3015 = !DILexicalBlockFile(scope: !486, file: !450, discriminator: 5)
!3016 = !DILocation(line: 5313, column: 9, scope: !457)
!3017 = !DILocation(line: 5313, column: 7, scope: !457)
!3018 = !DILocation(line: 5314, column: 9, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5314, column: 9)
!3020 = !DILocation(line: 5314, column: 11, scope: !3019)
!3021 = !DILocation(line: 5314, column: 25, scope: !3019)
!3022 = !DILocation(line: 5314, column: 49, scope: !3023)
!3023 = !DILexicalBlockFile(scope: !3019, file: !450, discriminator: 1)
!3024 = !DILocation(line: 5314, column: 66, scope: !3019)
!3025 = !DILocation(line: 5314, column: 28, scope: !3019)
!3026 = !DILocation(line: 5314, column: 69, scope: !3019)
!3027 = !DILocation(line: 5314, column: 9, scope: !457)
!3028 = !DILocation(line: 5315, column: 9, scope: !3019)
!3029 = !DILocation(line: 5316, column: 5, scope: !457)
!3030 = !DILocation(line: 5316, column: 10, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !488, file: !450, discriminator: 1)
!3032 = !DILocation(line: 5316, column: 20, scope: !488)
!3033 = !DILocation(line: 5316, column: 50, scope: !488)
!3034 = !DILocation(line: 5316, column: 62, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !488, file: !450, line: 5316, column: 59)
!3036 = !DILocation(line: 5316, column: 79, scope: !3035)
!3037 = !DILocation(line: 5316, column: 59, scope: !3035)
!3038 = !DILocation(line: 5316, column: 89, scope: !3035)
!3039 = !DILocation(line: 5316, column: 59, scope: !488)
!3040 = !DILocation(line: 5316, column: 59, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !488, file: !450, discriminator: 2)
!3042 = !DILocation(line: 5316, column: 120, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !3035, file: !450, discriminator: 3)
!3044 = !DILocation(line: 5316, column: 138, scope: !3035)
!3045 = !DILocation(line: 5316, column: 148, scope: !3035)
!3046 = !DILocation(line: 5316, column: 173, scope: !3035)
!3047 = !DILocation(line: 5316, column: 104, scope: !3035)
!3048 = !DILocation(line: 5316, column: 192, scope: !2646)
!3049 = !DILocation(line: 5316, column: 192, scope: !488)
!3050 = !DILocation(line: 5316, column: 192, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !488, file: !450, discriminator: 5)
!3052 = !DILocation(line: 5319, column: 33, scope: !457)
!3053 = !DILocation(line: 5319, column: 7, scope: !457)
!3054 = !DILocation(line: 5321, column: 13, scope: !457)
!3055 = !DILocation(line: 5321, column: 11, scope: !457)
!3056 = !DILocation(line: 5322, column: 9, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5322, column: 9)
!3058 = !DILocation(line: 5322, column: 15, scope: !3057)
!3059 = !DILocation(line: 5322, column: 9, scope: !457)
!3060 = !DILocation(line: 5323, column: 9, scope: !3057)
!3061 = !DILocation(line: 5324, column: 25, scope: !457)
!3062 = !DILocation(line: 5324, column: 9, scope: !457)
!3063 = !DILocation(line: 5324, column: 7, scope: !457)
!3064 = !DILocation(line: 5325, column: 5, scope: !457)
!3065 = !DILocation(line: 5325, column: 10, scope: !3066)
!3066 = !DILexicalBlockFile(scope: !490, file: !450, discriminator: 1)
!3067 = !DILocation(line: 5325, column: 20, scope: !490)
!3068 = !DILocation(line: 5325, column: 50, scope: !490)
!3069 = !DILocation(line: 5325, column: 66, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !490, file: !450, line: 5325, column: 63)
!3071 = !DILocation(line: 5325, column: 83, scope: !3070)
!3072 = !DILocation(line: 5325, column: 63, scope: !3070)
!3073 = !DILocation(line: 5325, column: 93, scope: !3070)
!3074 = !DILocation(line: 5325, column: 63, scope: !490)
!3075 = !DILocation(line: 5325, column: 63, scope: !3076)
!3076 = !DILexicalBlockFile(scope: !490, file: !450, discriminator: 2)
!3077 = !DILocation(line: 5325, column: 124, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !3070, file: !450, discriminator: 3)
!3079 = !DILocation(line: 5325, column: 142, scope: !3070)
!3080 = !DILocation(line: 5325, column: 152, scope: !3070)
!3081 = !DILocation(line: 5325, column: 177, scope: !3070)
!3082 = !DILocation(line: 5325, column: 108, scope: !3070)
!3083 = !DILocation(line: 5325, column: 196, scope: !2646)
!3084 = !DILocation(line: 5325, column: 196, scope: !490)
!3085 = !DILocation(line: 5325, column: 196, scope: !3086)
!3086 = !DILexicalBlockFile(scope: !490, file: !450, discriminator: 5)
!3087 = !DILocation(line: 5326, column: 9, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5326, column: 9)
!3089 = !DILocation(line: 5326, column: 11, scope: !3088)
!3090 = !DILocation(line: 5326, column: 25, scope: !3088)
!3091 = !DILocation(line: 5326, column: 49, scope: !3092)
!3092 = !DILexicalBlockFile(scope: !3088, file: !450, discriminator: 1)
!3093 = !DILocation(line: 5326, column: 59, scope: !3088)
!3094 = !DILocation(line: 5326, column: 28, scope: !3088)
!3095 = !DILocation(line: 5326, column: 62, scope: !3088)
!3096 = !DILocation(line: 5326, column: 9, scope: !457)
!3097 = !DILocation(line: 5327, column: 9, scope: !3088)
!3098 = !DILocation(line: 5328, column: 31, scope: !457)
!3099 = !DILocation(line: 5328, column: 29, scope: !457)
!3100 = !DILocation(line: 5330, column: 13, scope: !457)
!3101 = !DILocation(line: 5330, column: 11, scope: !457)
!3102 = !DILocation(line: 5331, column: 9, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5331, column: 9)
!3104 = !DILocation(line: 5331, column: 15, scope: !3103)
!3105 = !DILocation(line: 5331, column: 9, scope: !457)
!3106 = !DILocation(line: 5332, column: 9, scope: !3103)
!3107 = !DILocation(line: 5333, column: 25, scope: !457)
!3108 = !DILocation(line: 5333, column: 9, scope: !457)
!3109 = !DILocation(line: 5333, column: 7, scope: !457)
!3110 = !DILocation(line: 5334, column: 5, scope: !457)
!3111 = !DILocation(line: 5334, column: 10, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !492, file: !450, discriminator: 1)
!3113 = !DILocation(line: 5334, column: 20, scope: !492)
!3114 = !DILocation(line: 5334, column: 50, scope: !492)
!3115 = !DILocation(line: 5334, column: 66, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !492, file: !450, line: 5334, column: 63)
!3117 = !DILocation(line: 5334, column: 83, scope: !3116)
!3118 = !DILocation(line: 5334, column: 63, scope: !3116)
!3119 = !DILocation(line: 5334, column: 93, scope: !3116)
!3120 = !DILocation(line: 5334, column: 63, scope: !492)
!3121 = !DILocation(line: 5334, column: 63, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !492, file: !450, discriminator: 2)
!3123 = !DILocation(line: 5334, column: 124, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !3116, file: !450, discriminator: 3)
!3125 = !DILocation(line: 5334, column: 142, scope: !3116)
!3126 = !DILocation(line: 5334, column: 152, scope: !3116)
!3127 = !DILocation(line: 5334, column: 177, scope: !3116)
!3128 = !DILocation(line: 5334, column: 108, scope: !3116)
!3129 = !DILocation(line: 5334, column: 196, scope: !2646)
!3130 = !DILocation(line: 5334, column: 196, scope: !492)
!3131 = !DILocation(line: 5334, column: 196, scope: !3132)
!3132 = !DILexicalBlockFile(scope: !492, file: !450, discriminator: 5)
!3133 = !DILocation(line: 5335, column: 9, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5335, column: 9)
!3135 = !DILocation(line: 5335, column: 11, scope: !3134)
!3136 = !DILocation(line: 5335, column: 25, scope: !3134)
!3137 = !DILocation(line: 5335, column: 49, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3134, file: !450, discriminator: 1)
!3139 = !DILocation(line: 5335, column: 59, scope: !3134)
!3140 = !DILocation(line: 5335, column: 28, scope: !3134)
!3141 = !DILocation(line: 5335, column: 62, scope: !3134)
!3142 = !DILocation(line: 5335, column: 9, scope: !457)
!3143 = !DILocation(line: 5336, column: 9, scope: !3134)
!3144 = !DILocation(line: 5337, column: 5, scope: !457)
!3145 = !DILocation(line: 5337, column: 10, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !494, file: !450, discriminator: 1)
!3147 = !DILocation(line: 5337, column: 20, scope: !494)
!3148 = !DILocation(line: 5337, column: 50, scope: !494)
!3149 = !DILocation(line: 5337, column: 62, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !494, file: !450, line: 5337, column: 59)
!3151 = !DILocation(line: 5337, column: 79, scope: !3150)
!3152 = !DILocation(line: 5337, column: 59, scope: !3150)
!3153 = !DILocation(line: 5337, column: 89, scope: !3150)
!3154 = !DILocation(line: 5337, column: 59, scope: !494)
!3155 = !DILocation(line: 5337, column: 59, scope: !3156)
!3156 = !DILexicalBlockFile(scope: !494, file: !450, discriminator: 2)
!3157 = !DILocation(line: 5337, column: 120, scope: !3158)
!3158 = !DILexicalBlockFile(scope: !3150, file: !450, discriminator: 3)
!3159 = !DILocation(line: 5337, column: 138, scope: !3150)
!3160 = !DILocation(line: 5337, column: 148, scope: !3150)
!3161 = !DILocation(line: 5337, column: 173, scope: !3150)
!3162 = !DILocation(line: 5337, column: 104, scope: !3150)
!3163 = !DILocation(line: 5337, column: 192, scope: !2646)
!3164 = !DILocation(line: 5337, column: 192, scope: !494)
!3165 = !DILocation(line: 5337, column: 192, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !494, file: !450, discriminator: 5)
!3167 = !DILocation(line: 5339, column: 13, scope: !457)
!3168 = !DILocation(line: 5339, column: 11, scope: !457)
!3169 = !DILocation(line: 5340, column: 9, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5340, column: 9)
!3171 = !DILocation(line: 5340, column: 15, scope: !3170)
!3172 = !DILocation(line: 5340, column: 9, scope: !457)
!3173 = !DILocation(line: 5341, column: 9, scope: !3170)
!3174 = !DILocation(line: 5342, column: 25, scope: !457)
!3175 = !DILocation(line: 5342, column: 9, scope: !457)
!3176 = !DILocation(line: 5342, column: 7, scope: !457)
!3177 = !DILocation(line: 5343, column: 5, scope: !457)
!3178 = !DILocation(line: 5343, column: 10, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !496, file: !450, discriminator: 1)
!3180 = !DILocation(line: 5343, column: 20, scope: !496)
!3181 = !DILocation(line: 5343, column: 50, scope: !496)
!3182 = !DILocation(line: 5343, column: 66, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !496, file: !450, line: 5343, column: 63)
!3184 = !DILocation(line: 5343, column: 83, scope: !3183)
!3185 = !DILocation(line: 5343, column: 63, scope: !3183)
!3186 = !DILocation(line: 5343, column: 93, scope: !3183)
!3187 = !DILocation(line: 5343, column: 63, scope: !496)
!3188 = !DILocation(line: 5343, column: 63, scope: !3189)
!3189 = !DILexicalBlockFile(scope: !496, file: !450, discriminator: 2)
!3190 = !DILocation(line: 5343, column: 124, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !3183, file: !450, discriminator: 3)
!3192 = !DILocation(line: 5343, column: 142, scope: !3183)
!3193 = !DILocation(line: 5343, column: 152, scope: !3183)
!3194 = !DILocation(line: 5343, column: 177, scope: !3183)
!3195 = !DILocation(line: 5343, column: 108, scope: !3183)
!3196 = !DILocation(line: 5343, column: 196, scope: !2646)
!3197 = !DILocation(line: 5343, column: 196, scope: !496)
!3198 = !DILocation(line: 5343, column: 196, scope: !3199)
!3199 = !DILexicalBlockFile(scope: !496, file: !450, discriminator: 5)
!3200 = !DILocation(line: 5344, column: 9, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5344, column: 9)
!3202 = !DILocation(line: 5344, column: 11, scope: !3201)
!3203 = !DILocation(line: 5344, column: 25, scope: !3201)
!3204 = !DILocation(line: 5344, column: 49, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3201, file: !450, discriminator: 1)
!3206 = !DILocation(line: 5344, column: 59, scope: !3201)
!3207 = !DILocation(line: 5344, column: 28, scope: !3201)
!3208 = !DILocation(line: 5344, column: 62, scope: !3201)
!3209 = !DILocation(line: 5344, column: 9, scope: !457)
!3210 = !DILocation(line: 5345, column: 9, scope: !3201)
!3211 = !DILocation(line: 5346, column: 5, scope: !457)
!3212 = !DILocation(line: 5346, column: 10, scope: !3213)
!3213 = !DILexicalBlockFile(scope: !498, file: !450, discriminator: 1)
!3214 = !DILocation(line: 5346, column: 20, scope: !498)
!3215 = !DILocation(line: 5346, column: 50, scope: !498)
!3216 = !DILocation(line: 5346, column: 62, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !498, file: !450, line: 5346, column: 59)
!3218 = !DILocation(line: 5346, column: 79, scope: !3217)
!3219 = !DILocation(line: 5346, column: 59, scope: !3217)
!3220 = !DILocation(line: 5346, column: 89, scope: !3217)
!3221 = !DILocation(line: 5346, column: 59, scope: !498)
!3222 = !DILocation(line: 5346, column: 59, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !498, file: !450, discriminator: 2)
!3224 = !DILocation(line: 5346, column: 120, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3217, file: !450, discriminator: 3)
!3226 = !DILocation(line: 5346, column: 138, scope: !3217)
!3227 = !DILocation(line: 5346, column: 148, scope: !3217)
!3228 = !DILocation(line: 5346, column: 173, scope: !3217)
!3229 = !DILocation(line: 5346, column: 104, scope: !3217)
!3230 = !DILocation(line: 5346, column: 192, scope: !2646)
!3231 = !DILocation(line: 5346, column: 192, scope: !498)
!3232 = !DILocation(line: 5346, column: 192, scope: !3233)
!3233 = !DILexicalBlockFile(scope: !498, file: !450, discriminator: 5)
!3234 = !DILocation(line: 5349, column: 64, scope: !457)
!3235 = !DILocation(line: 5349, column: 24, scope: !457)
!3236 = !DILocation(line: 5349, column: 22, scope: !457)
!3237 = !DILocation(line: 5351, column: 9, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5351, column: 9)
!3239 = !DILocation(line: 5351, column: 26, scope: !3238)
!3240 = !DILocation(line: 5351, column: 9, scope: !457)
!3241 = !DILocation(line: 5352, column: 7, scope: !3238)
!3242 = !DILocation(line: 5355, column: 29, scope: !457)
!3243 = !DILocation(line: 5355, column: 5, scope: !457)
!3244 = !DILocation(line: 5356, column: 29, scope: !457)
!3245 = !DILocation(line: 5356, column: 5, scope: !457)
!3246 = !DILocation(line: 5358, column: 54, scope: !457)
!3247 = !DILocation(line: 5359, column: 24, scope: !457)
!3248 = !DILocation(line: 5359, column: 5, scope: !457)
!3249 = !DILocation(line: 5361, column: 58, scope: !457)
!3250 = !DILocation(line: 5362, column: 24, scope: !457)
!3251 = !DILocation(line: 5362, column: 5, scope: !457)
!3252 = !DILocation(line: 5365, column: 54, scope: !457)
!3253 = !DILocation(line: 5366, column: 24, scope: !457)
!3254 = !DILocation(line: 5366, column: 5, scope: !457)
!3255 = !DILocation(line: 5368, column: 55, scope: !457)
!3256 = !DILocation(line: 5369, column: 24, scope: !457)
!3257 = !DILocation(line: 5369, column: 5, scope: !457)
!3258 = !DILocation(line: 5371, column: 56, scope: !457)
!3259 = !DILocation(line: 5372, column: 24, scope: !457)
!3260 = !DILocation(line: 5372, column: 5, scope: !457)
!3261 = !DILocation(line: 5374, column: 58, scope: !457)
!3262 = !DILocation(line: 5375, column: 24, scope: !457)
!3263 = !DILocation(line: 5375, column: 5, scope: !457)
!3264 = !DILocation(line: 5377, column: 9, scope: !457)
!3265 = !DILocation(line: 5377, column: 7, scope: !457)
!3266 = !DILocation(line: 5378, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5378, column: 9)
!3268 = !DILocation(line: 5378, column: 11, scope: !3267)
!3269 = !DILocation(line: 5378, column: 9, scope: !457)
!3270 = !DILocation(line: 5379, column: 9, scope: !3267)
!3271 = !DILocation(line: 5380, column: 24, scope: !457)
!3272 = !DILocation(line: 5380, column: 44, scope: !457)
!3273 = !DILocation(line: 5380, column: 5, scope: !457)
!3274 = !DILocation(line: 5400, column: 11, scope: !457)
!3275 = !DILocation(line: 5400, column: 9, scope: !457)
!3276 = !DILocation(line: 5401, column: 17, scope: !457)
!3277 = !DILocation(line: 5401, column: 15, scope: !457)
!3278 = !DILocation(line: 5402, column: 21, scope: !457)
!3279 = !DILocation(line: 5402, column: 19, scope: !457)
!3280 = !DILocation(line: 5403, column: 21, scope: !457)
!3281 = !DILocation(line: 5403, column: 19, scope: !457)
!3282 = !DILocation(line: 5404, column: 23, scope: !457)
!3283 = !DILocation(line: 5404, column: 21, scope: !457)
!3284 = !DILocation(line: 5405, column: 9, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5405, column: 9)
!3286 = !DILocation(line: 5405, column: 13, scope: !3285)
!3287 = !DILocation(line: 5405, column: 27, scope: !3285)
!3288 = !DILocation(line: 5405, column: 30, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3285, file: !450, discriminator: 1)
!3290 = !DILocation(line: 5405, column: 40, scope: !3285)
!3291 = !DILocation(line: 5405, column: 54, scope: !3285)
!3292 = !DILocation(line: 5405, column: 57, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3285, file: !450, discriminator: 2)
!3294 = !DILocation(line: 5405, column: 71, scope: !3285)
!3295 = !DILocation(line: 5405, column: 85, scope: !3285)
!3296 = !DILocation(line: 5406, column: 9, scope: !3285)
!3297 = !DILocation(line: 5406, column: 23, scope: !3285)
!3298 = !DILocation(line: 5406, column: 37, scope: !3285)
!3299 = !DILocation(line: 5406, column: 40, scope: !3289)
!3300 = !DILocation(line: 5406, column: 56, scope: !3285)
!3301 = !DILocation(line: 5405, column: 9, scope: !457)
!3302 = !DILocation(line: 5407, column: 9, scope: !3285)
!3303 = !DILocation(line: 5412, column: 19, scope: !457)
!3304 = !DILocation(line: 5412, column: 17, scope: !457)
!3305 = !DILocation(line: 5413, column: 18, scope: !457)
!3306 = !DILocation(line: 5413, column: 16, scope: !457)
!3307 = !DILocation(line: 5414, column: 19, scope: !457)
!3308 = !DILocation(line: 5414, column: 17, scope: !457)
!3309 = !DILocation(line: 5415, column: 9, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !457, file: !450, line: 5415, column: 9)
!3311 = !DILocation(line: 5415, column: 21, scope: !3310)
!3312 = !DILocation(line: 5415, column: 35, scope: !3310)
!3313 = !DILocation(line: 5415, column: 38, scope: !3314)
!3314 = !DILexicalBlockFile(scope: !3310, file: !450, discriminator: 1)
!3315 = !DILocation(line: 5415, column: 49, scope: !3310)
!3316 = !DILocation(line: 5415, column: 63, scope: !3310)
!3317 = !DILocation(line: 5415, column: 66, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !3310, file: !450, discriminator: 2)
!3319 = !DILocation(line: 5415, column: 78, scope: !3310)
!3320 = !DILocation(line: 5415, column: 9, scope: !457)
!3321 = !DILocation(line: 5416, column: 9, scope: !3310)
!3322 = !DILocation(line: 5417, column: 12, scope: !457)
!3323 = !DILocation(line: 5417, column: 5, scope: !457)
!3324 = !DILocation(line: 5418, column: 1, scope: !457)
!3325 = !{!2608, !2608, i64 0}
!3326 = !DILocation(line: 731, column: 18, scope: !2302)
!3327 = !DILocation(line: 731, column: 28, scope: !2302)
!3328 = !DILocation(line: 731, column: 41, scope: !2302)
!3329 = !DILocation(line: 731, column: 59, scope: !2302)
!3330 = !DILocation(line: 732, column: 28, scope: !2302)
!3331 = !DILocation(line: 734, column: 5, scope: !2302)
!3332 = !DILocation(line: 734, column: 23, scope: !2302)
!3333 = !DILocation(line: 736, column: 9, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !2302, file: !450, line: 736, column: 9)
!3335 = !DILocation(line: 736, column: 9, scope: !2302)
!3336 = !DILocation(line: 737, column: 9, scope: !3334)
!3337 = !DILocation(line: 741, column: 31, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !2302, file: !450, line: 741, column: 9)
!3339 = !DILocation(line: 741, column: 9, scope: !3338)
!3340 = !DILocation(line: 741, column: 37, scope: !3338)
!3341 = !DILocation(line: 741, column: 9, scope: !2302)
!3342 = !DILocation(line: 742, column: 9, scope: !3338)
!3343 = !DILocation(line: 744, column: 34, scope: !2302)
!3344 = !DILocation(line: 744, column: 40, scope: !2302)
!3345 = !{!2604, !2564, i64 304}
!3346 = !DILocation(line: 744, column: 49, scope: !2302)
!3347 = !DILocation(line: 744, column: 12, scope: !2302)
!3348 = !DILocation(line: 744, column: 10, scope: !2302)
!3349 = !DILocation(line: 745, column: 9, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !2302, file: !450, line: 745, column: 9)
!3351 = !DILocation(line: 745, column: 14, scope: !3350)
!3352 = !DILocation(line: 745, column: 9, scope: !2302)
!3353 = !DILocation(line: 746, column: 9, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3350, file: !450, line: 745, column: 29)
!3355 = !DILocation(line: 746, column: 15, scope: !3354)
!3356 = !DILocation(line: 746, column: 24, scope: !3354)
!3357 = !{!3358, !2607, i64 16}
!3358 = !{!"", !2606, i64 0, !2607, i64 16, !2608, i64 24, !2608, i64 28, !2608, i64 32}
!3359 = !DILocation(line: 747, column: 26, scope: !3354)
!3360 = !DILocation(line: 747, column: 11, scope: !3354)
!3361 = !DILocation(line: 747, column: 18, scope: !3354)
!3362 = !DILocation(line: 747, column: 23, scope: !3354)
!3363 = !{!3358, !2608, i64 24}
!3364 = !DILocation(line: 748, column: 29, scope: !3354)
!3365 = !DILocation(line: 748, column: 11, scope: !3354)
!3366 = !DILocation(line: 748, column: 18, scope: !3354)
!3367 = !DILocation(line: 748, column: 26, scope: !3354)
!3368 = !{!3358, !2608, i64 28}
!3369 = !DILocation(line: 749, column: 34, scope: !3354)
!3370 = !DILocation(line: 749, column: 11, scope: !3354)
!3371 = !DILocation(line: 749, column: 18, scope: !3354)
!3372 = !DILocation(line: 749, column: 31, scope: !3354)
!3373 = !{!3358, !2608, i64 32}
!3374 = !DILocation(line: 750, column: 5, scope: !3354)
!3375 = !DILocation(line: 751, column: 25, scope: !2302)
!3376 = !DILocation(line: 751, column: 12, scope: !2302)
!3377 = !DILocation(line: 751, column: 5, scope: !2302)
!3378 = !DILocation(line: 752, column: 1, scope: !2302)
!3379 = !DILocation(line: 656, column: 17, scope: !2322)
!3380 = !DILocation(line: 656, column: 27, scope: !2322)
!3381 = !DILocation(line: 656, column: 38, scope: !2322)
!3382 = !DILocation(line: 656, column: 57, scope: !2322)
!3383 = !DILocation(line: 658, column: 5, scope: !2322)
!3384 = !DILocation(line: 658, column: 22, scope: !2322)
!3385 = !DILocation(line: 660, column: 33, scope: !2322)
!3386 = !DILocation(line: 660, column: 39, scope: !2322)
!3387 = !DILocation(line: 660, column: 48, scope: !2322)
!3388 = !DILocation(line: 660, column: 12, scope: !2322)
!3389 = !DILocation(line: 660, column: 10, scope: !2322)
!3390 = !DILocation(line: 661, column: 9, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !2322, file: !450, line: 661, column: 9)
!3392 = !DILocation(line: 661, column: 14, scope: !3391)
!3393 = !DILocation(line: 661, column: 9, scope: !2322)
!3394 = !DILocation(line: 662, column: 25, scope: !3391)
!3395 = !DILocation(line: 662, column: 31, scope: !3391)
!3396 = !DILocation(line: 662, column: 37, scope: !3391)
!3397 = !DILocation(line: 662, column: 44, scope: !3391)
!3398 = !DILocation(line: 662, column: 9, scope: !3391)
!3399 = !DILocation(line: 663, column: 25, scope: !2322)
!3400 = !DILocation(line: 663, column: 12, scope: !2322)
!3401 = !DILocation(line: 664, column: 1, scope: !2322)
!3402 = !DILocation(line: 663, column: 5, scope: !2322)
!3403 = !DILocation(line: 699, column: 17, scope: !2339)
!3404 = !DILocation(line: 699, column: 27, scope: !2339)
!3405 = !DILocation(line: 699, column: 39, scope: !2339)
!3406 = !DILocation(line: 699, column: 51, scope: !2339)
!3407 = !DILocation(line: 700, column: 23, scope: !2339)
!3408 = !DILocation(line: 700, column: 45, scope: !2339)
!3409 = !DILocation(line: 702, column: 5, scope: !2339)
!3410 = !DILocation(line: 702, column: 22, scope: !2339)
!3411 = !DILocation(line: 703, column: 5, scope: !2339)
!3412 = !DILocation(line: 703, column: 10, scope: !2339)
!3413 = !DILocation(line: 703, column: 18, scope: !2339)
!3414 = !DILocation(line: 703, column: 25, scope: !2339)
!3415 = !{!2565, !2565, i64 0}
!3416 = !DILocation(line: 705, column: 33, scope: !2339)
!3417 = !DILocation(line: 705, column: 39, scope: !2339)
!3418 = !DILocation(line: 705, column: 48, scope: !2339)
!3419 = !DILocation(line: 705, column: 54, scope: !2339)
!3420 = !DILocation(line: 705, column: 12, scope: !2339)
!3421 = !DILocation(line: 705, column: 10, scope: !2339)
!3422 = !DILocation(line: 706, column: 9, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !2339, file: !450, line: 706, column: 9)
!3424 = !DILocation(line: 706, column: 14, scope: !3423)
!3425 = !DILocation(line: 706, column: 9, scope: !2339)
!3426 = !DILocation(line: 707, column: 27, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3423, file: !450, line: 706, column: 29)
!3428 = !DILocation(line: 707, column: 9, scope: !3427)
!3429 = !DILocation(line: 707, column: 15, scope: !3427)
!3430 = !DILocation(line: 707, column: 25, scope: !3427)
!3431 = !{!3432, !2565, i64 24}
!3432 = !{!"", !2606, i64 0, !2607, i64 16, !2565, i64 24, !2565, i64 25, !2564, i64 32}
!3433 = !DILocation(line: 708, column: 9, scope: !3427)
!3434 = !DILocation(line: 708, column: 15, scope: !3427)
!3435 = !DILocation(line: 708, column: 24, scope: !3427)
!3436 = !{!3432, !2607, i64 16}
!3437 = !DILocation(line: 709, column: 49, scope: !3427)
!3438 = !DILocation(line: 709, column: 48, scope: !3427)
!3439 = !DILocation(line: 709, column: 30, scope: !3427)
!3440 = !DILocation(line: 709, column: 37, scope: !3427)
!3441 = !DILocation(line: 709, column: 11, scope: !3427)
!3442 = !DILocation(line: 709, column: 46, scope: !3427)
!3443 = !DILocation(line: 710, column: 49, scope: !3427)
!3444 = !DILocation(line: 710, column: 48, scope: !3427)
!3445 = !DILocation(line: 710, column: 30, scope: !3427)
!3446 = !DILocation(line: 710, column: 37, scope: !3427)
!3447 = !DILocation(line: 710, column: 11, scope: !3427)
!3448 = !DILocation(line: 710, column: 46, scope: !3427)
!3449 = !DILocation(line: 711, column: 49, scope: !3427)
!3450 = !DILocation(line: 711, column: 48, scope: !3427)
!3451 = !DILocation(line: 711, column: 30, scope: !3427)
!3452 = !DILocation(line: 711, column: 37, scope: !3427)
!3453 = !DILocation(line: 711, column: 11, scope: !3427)
!3454 = !DILocation(line: 711, column: 46, scope: !3427)
!3455 = !DILocation(line: 712, column: 31, scope: !3427)
!3456 = !DILocation(line: 712, column: 40, scope: !3427)
!3457 = !DILocation(line: 712, column: 52, scope: !3427)
!3458 = !DILocation(line: 712, column: 29, scope: !3427)
!3459 = !DILocation(line: 712, column: 12, scope: !3427)
!3460 = !DILocation(line: 712, column: 19, scope: !3427)
!3461 = !DILocation(line: 712, column: 11, scope: !3427)
!3462 = !DILocation(line: 712, column: 27, scope: !3427)
!3463 = !DILocation(line: 712, column: 81, scope: !3427)
!3464 = !DILocation(line: 712, column: 90, scope: !3427)
!3465 = !DILocation(line: 712, column: 102, scope: !3427)
!3466 = !DILocation(line: 712, column: 79, scope: !3427)
!3467 = !DILocation(line: 712, column: 62, scope: !3427)
!3468 = !DILocation(line: 712, column: 69, scope: !3427)
!3469 = !DILocation(line: 712, column: 61, scope: !3427)
!3470 = !DILocation(line: 712, column: 77, scope: !3427)
!3471 = !DILocation(line: 712, column: 130, scope: !3427)
!3472 = !DILocation(line: 712, column: 139, scope: !3427)
!3473 = !DILocation(line: 712, column: 128, scope: !3427)
!3474 = !DILocation(line: 712, column: 111, scope: !3427)
!3475 = !DILocation(line: 712, column: 118, scope: !3427)
!3476 = !DILocation(line: 712, column: 110, scope: !3427)
!3477 = !DILocation(line: 712, column: 126, scope: !3427)
!3478 = !DILocation(line: 713, column: 13, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3427, file: !450, line: 713, column: 13)
!3480 = !DILocation(line: 713, column: 13, scope: !3427)
!3481 = !DILocation(line: 714, column: 29, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3479, file: !450, line: 713, column: 20)
!3483 = !DILocation(line: 714, column: 39, scope: !3482)
!3484 = !DILocation(line: 714, column: 48, scope: !3482)
!3485 = !DILocation(line: 715, column: 28, scope: !3482)
!3486 = !DILocation(line: 715, column: 13, scope: !3482)
!3487 = !DILocation(line: 715, column: 19, scope: !3482)
!3488 = !DILocation(line: 715, column: 26, scope: !3482)
!3489 = !{!3432, !2564, i64 32}
!3490 = !DILocation(line: 716, column: 9, scope: !3482)
!3491 = !DILocation(line: 717, column: 5, scope: !3427)
!3492 = !DILocation(line: 718, column: 24, scope: !2339)
!3493 = !DILocation(line: 718, column: 12, scope: !2339)
!3494 = !DILocation(line: 719, column: 1, scope: !2339)
!3495 = !DILocation(line: 718, column: 5, scope: !2339)
!3496 = !DILocation(line: 671, column: 21, scope: !2351)
!3497 = !DILocation(line: 671, column: 31, scope: !2351)
!3498 = !DILocation(line: 671, column: 42, scope: !2351)
!3499 = !DILocation(line: 671, column: 51, scope: !2351)
!3500 = !DILocation(line: 671, column: 61, scope: !2351)
!3501 = !DILocation(line: 672, column: 18, scope: !2351)
!3502 = !DILocation(line: 672, column: 30, scope: !2351)
!3503 = !DILocation(line: 672, column: 49, scope: !2351)
!3504 = !DILocation(line: 672, column: 71, scope: !2351)
!3505 = !DILocation(line: 674, column: 5, scope: !2351)
!3506 = !DILocation(line: 674, column: 26, scope: !2351)
!3507 = !DILocation(line: 675, column: 5, scope: !2351)
!3508 = !DILocation(line: 675, column: 10, scope: !2351)
!3509 = !DILocation(line: 675, column: 18, scope: !2351)
!3510 = !DILocation(line: 675, column: 25, scope: !2351)
!3511 = !DILocation(line: 677, column: 37, scope: !2351)
!3512 = !DILocation(line: 677, column: 43, scope: !2351)
!3513 = !DILocation(line: 677, column: 52, scope: !2351)
!3514 = !DILocation(line: 677, column: 58, scope: !2351)
!3515 = !DILocation(line: 677, column: 12, scope: !2351)
!3516 = !DILocation(line: 677, column: 10, scope: !2351)
!3517 = !DILocation(line: 678, column: 9, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !2351, file: !450, line: 678, column: 9)
!3519 = !DILocation(line: 678, column: 14, scope: !3518)
!3520 = !DILocation(line: 678, column: 9, scope: !2351)
!3521 = !DILocation(line: 679, column: 27, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !450, line: 678, column: 29)
!3523 = !DILocation(line: 679, column: 9, scope: !3522)
!3524 = !DILocation(line: 679, column: 15, scope: !3522)
!3525 = !DILocation(line: 679, column: 25, scope: !3522)
!3526 = !{!3527, !2565, i64 24}
!3527 = !{!"", !2606, i64 0, !2607, i64 16, !2565, i64 24, !2565, i64 25, !2564, i64 40}
!3528 = !DILocation(line: 680, column: 44, scope: !3522)
!3529 = !DILocation(line: 680, column: 25, scope: !3522)
!3530 = !DILocation(line: 680, column: 50, scope: !3522)
!3531 = !DILocation(line: 680, column: 56, scope: !3522)
!3532 = !DILocation(line: 680, column: 63, scope: !3522)
!3533 = !DILocation(line: 680, column: 9, scope: !3522)
!3534 = !DILocation(line: 681, column: 53, scope: !3522)
!3535 = !DILocation(line: 681, column: 52, scope: !3522)
!3536 = !DILocation(line: 681, column: 34, scope: !3522)
!3537 = !DILocation(line: 681, column: 41, scope: !3522)
!3538 = !DILocation(line: 681, column: 11, scope: !3522)
!3539 = !DILocation(line: 681, column: 50, scope: !3522)
!3540 = !DILocation(line: 682, column: 53, scope: !3522)
!3541 = !DILocation(line: 682, column: 52, scope: !3522)
!3542 = !DILocation(line: 682, column: 34, scope: !3522)
!3543 = !DILocation(line: 682, column: 41, scope: !3522)
!3544 = !DILocation(line: 682, column: 11, scope: !3522)
!3545 = !DILocation(line: 682, column: 50, scope: !3522)
!3546 = !DILocation(line: 683, column: 53, scope: !3522)
!3547 = !DILocation(line: 683, column: 52, scope: !3522)
!3548 = !DILocation(line: 683, column: 34, scope: !3522)
!3549 = !DILocation(line: 683, column: 41, scope: !3522)
!3550 = !DILocation(line: 683, column: 11, scope: !3522)
!3551 = !DILocation(line: 683, column: 50, scope: !3522)
!3552 = !DILocation(line: 684, column: 31, scope: !3522)
!3553 = !DILocation(line: 684, column: 40, scope: !3522)
!3554 = !DILocation(line: 684, column: 52, scope: !3522)
!3555 = !DILocation(line: 684, column: 29, scope: !3522)
!3556 = !DILocation(line: 684, column: 12, scope: !3522)
!3557 = !DILocation(line: 684, column: 19, scope: !3522)
!3558 = !DILocation(line: 684, column: 11, scope: !3522)
!3559 = !DILocation(line: 684, column: 27, scope: !3522)
!3560 = !DILocation(line: 684, column: 81, scope: !3522)
!3561 = !DILocation(line: 684, column: 90, scope: !3522)
!3562 = !DILocation(line: 684, column: 102, scope: !3522)
!3563 = !DILocation(line: 684, column: 79, scope: !3522)
!3564 = !DILocation(line: 684, column: 62, scope: !3522)
!3565 = !DILocation(line: 684, column: 69, scope: !3522)
!3566 = !DILocation(line: 684, column: 61, scope: !3522)
!3567 = !DILocation(line: 684, column: 77, scope: !3522)
!3568 = !DILocation(line: 684, column: 130, scope: !3522)
!3569 = !DILocation(line: 684, column: 139, scope: !3522)
!3570 = !DILocation(line: 684, column: 128, scope: !3522)
!3571 = !DILocation(line: 684, column: 111, scope: !3522)
!3572 = !DILocation(line: 684, column: 118, scope: !3522)
!3573 = !DILocation(line: 684, column: 110, scope: !3522)
!3574 = !DILocation(line: 684, column: 126, scope: !3522)
!3575 = !DILocation(line: 685, column: 13, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3522, file: !450, line: 685, column: 13)
!3577 = !DILocation(line: 685, column: 13, scope: !3522)
!3578 = !DILocation(line: 686, column: 29, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !450, line: 685, column: 20)
!3580 = !DILocation(line: 686, column: 39, scope: !3579)
!3581 = !DILocation(line: 686, column: 48, scope: !3579)
!3582 = !DILocation(line: 687, column: 28, scope: !3579)
!3583 = !DILocation(line: 687, column: 13, scope: !3579)
!3584 = !DILocation(line: 687, column: 19, scope: !3579)
!3585 = !DILocation(line: 687, column: 26, scope: !3579)
!3586 = !{!3527, !2564, i64 40}
!3587 = !DILocation(line: 688, column: 9, scope: !3579)
!3588 = !DILocation(line: 689, column: 5, scope: !3522)
!3589 = !DILocation(line: 690, column: 24, scope: !2351)
!3590 = !DILocation(line: 690, column: 12, scope: !2351)
!3591 = !DILocation(line: 691, column: 1, scope: !2351)
!3592 = !DILocation(line: 690, column: 5, scope: !2351)
!3593 = !DILocation(line: 775, column: 27, scope: !2366)
!3594 = !DILocation(line: 775, column: 45, scope: !2366)
!3595 = !DILocation(line: 777, column: 5, scope: !2366)
!3596 = !DILocation(line: 777, column: 26, scope: !2366)
!3597 = !DILocation(line: 778, column: 5, scope: !2366)
!3598 = !DILocation(line: 778, column: 19, scope: !2366)
!3599 = !DILocation(line: 784, column: 36, scope: !2366)
!3600 = !DILocation(line: 784, column: 42, scope: !2366)
!3601 = !DILocation(line: 784, column: 51, scope: !2366)
!3602 = !DILocation(line: 784, column: 12, scope: !2366)
!3603 = !DILocation(line: 784, column: 10, scope: !2366)
!3604 = !DILocation(line: 785, column: 9, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !2366, file: !450, line: 785, column: 9)
!3606 = !DILocation(line: 785, column: 14, scope: !3605)
!3607 = !DILocation(line: 785, column: 9, scope: !2366)
!3608 = !DILocation(line: 786, column: 9, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !450, line: 785, column: 29)
!3610 = !DILocation(line: 788, column: 21, scope: !2366)
!3611 = !DILocation(line: 788, column: 31, scope: !2366)
!3612 = !DILocation(line: 788, column: 40, scope: !2366)
!3613 = !DILocation(line: 789, column: 20, scope: !2366)
!3614 = !DILocation(line: 789, column: 5, scope: !2366)
!3615 = !DILocation(line: 789, column: 11, scope: !2366)
!3616 = !DILocation(line: 789, column: 18, scope: !2366)
!3617 = !{!3618, !2564, i64 16}
!3618 = !{!"", !2606, i64 0, !2564, i64 16, !2564, i64 24}
!3619 = !DILocation(line: 790, column: 5, scope: !2366)
!3620 = !DILocation(line: 790, column: 10, scope: !3621)
!3621 = !DILexicalBlockFile(scope: !2373, file: !450, discriminator: 1)
!3622 = !DILocation(line: 790, column: 20, scope: !2373)
!3623 = !DILocation(line: 790, column: 51, scope: !2373)
!3624 = !DILocation(line: 790, column: 62, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !2373, file: !450, line: 790, column: 62)
!3626 = !DILocation(line: 790, column: 78, scope: !3625)
!3627 = !DILocation(line: 790, column: 62, scope: !2373)
!3628 = !DILocation(line: 790, column: 109, scope: !3629)
!3629 = !DILexicalBlockFile(scope: !3625, file: !450, discriminator: 2)
!3630 = !DILocation(line: 790, column: 128, scope: !3625)
!3631 = !DILocation(line: 790, column: 137, scope: !3625)
!3632 = !DILocation(line: 790, column: 93, scope: !3625)
!3633 = !DILocation(line: 790, column: 142, scope: !3634)
!3634 = !DILexicalBlockFile(scope: !3635, file: !450, discriminator: 4)
!3635 = !DILexicalBlockFile(scope: !2366, file: !450, discriminator: 3)
!3636 = !DILocation(line: 790, column: 142, scope: !2373)
!3637 = !DILocation(line: 790, column: 142, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !2373, file: !450, discriminator: 5)
!3639 = !DILocation(line: 791, column: 18, scope: !2366)
!3640 = !DILocation(line: 791, column: 5, scope: !2366)
!3641 = !DILocation(line: 791, column: 11, scope: !2366)
!3642 = !DILocation(line: 791, column: 16, scope: !2366)
!3643 = !{!3618, !2564, i64 24}
!3644 = !DILocation(line: 792, column: 24, scope: !2366)
!3645 = !DILocation(line: 792, column: 12, scope: !2366)
!3646 = !DILocation(line: 792, column: 5, scope: !2366)
!3647 = !DILocation(line: 793, column: 1, scope: !2366)
!3648 = !DILocation(line: 2627, column: 28, scope: !499)
!3649 = !DILocation(line: 2630, column: 47, scope: !499)
!3650 = !DILocation(line: 2630, column: 35, scope: !499)
!3651 = !DILocation(line: 2630, column: 55, scope: !499)
!3652 = !DILocation(line: 2630, column: 65, scope: !499)
!3653 = !{!2604, !2564, i64 24}
!3654 = !DILocation(line: 2631, column: 54, scope: !499)
!3655 = !DILocation(line: 2631, column: 61, scope: !499)
!3656 = !DILocation(line: 2631, column: 35, scope: !499)
!3657 = !DILocation(line: 2631, column: 69, scope: !499)
!3658 = !DILocation(line: 2631, column: 96, scope: !499)
!3659 = !DILocation(line: 2631, column: 103, scope: !499)
!3660 = !DILocation(line: 2631, column: 77, scope: !499)
!3661 = !DILocation(line: 2631, column: 75, scope: !499)
!3662 = !DILocation(line: 2631, column: 133, scope: !499)
!3663 = !DILocation(line: 2631, column: 140, scope: !499)
!3664 = !DILocation(line: 2631, column: 114, scope: !499)
!3665 = !DILocation(line: 2631, column: 113, scope: !499)
!3666 = !DILocation(line: 2631, column: 170, scope: !499)
!3667 = !DILocation(line: 2631, column: 177, scope: !499)
!3668 = !DILocation(line: 2631, column: 151, scope: !499)
!3669 = !DILocation(line: 2631, column: 150, scope: !499)
!3670 = !DILocation(line: 2629, column: 12, scope: !499)
!3671 = !DILocation(line: 2629, column: 5, scope: !499)
!3672 = !DILocation(line: 2781, column: 28, scope: !594)
!3673 = !DILocation(line: 2783, column: 9, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !594, file: !450, line: 2783, column: 9)
!3675 = !DILocation(line: 2783, column: 15, scope: !3674)
!3676 = !{!3677, !2607, i64 16}
!3677 = !{!"", !2606, i64 0, !2607, i64 16, !2565, i64 24, !2565, i64 25}
!3678 = !DILocation(line: 2783, column: 24, scope: !3674)
!3679 = !DILocation(line: 2783, column: 9, scope: !594)
!3680 = !DILocation(line: 2785, column: 30, scope: !3674)
!3681 = !DILocation(line: 2785, column: 36, scope: !3674)
!3682 = !DILocation(line: 2784, column: 26, scope: !3674)
!3683 = !DILocation(line: 2784, column: 9, scope: !3674)
!3684 = !DILocation(line: 2784, column: 15, scope: !3674)
!3685 = !DILocation(line: 2784, column: 24, scope: !3674)
!3686 = !DILocation(line: 2787, column: 12, scope: !594)
!3687 = !DILocation(line: 2787, column: 18, scope: !594)
!3688 = !DILocation(line: 2787, column: 5, scope: !594)
!3689 = !DILocation(line: 2643, column: 27, scope: !605)
!3690 = !DILocation(line: 2645, column: 47, scope: !605)
!3691 = !DILocation(line: 2645, column: 35, scope: !605)
!3692 = !DILocation(line: 2645, column: 12, scope: !605)
!3693 = !DILocation(line: 2645, column: 5, scope: !605)
!3694 = !DILocation(line: 2730, column: 28, scope: !608)
!3695 = !DILocation(line: 2730, column: 44, scope: !608)
!3696 = !DILocation(line: 2730, column: 55, scope: !608)
!3697 = !DILocation(line: 2732, column: 24, scope: !615)
!3698 = !DILocation(line: 2732, column: 33, scope: !615)
!3699 = !DILocation(line: 2732, column: 42, scope: !615)
!3700 = !DILocation(line: 2732, column: 68, scope: !615)
!3701 = !DILocation(line: 2732, column: 102, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !615, file: !450, discriminator: 1)
!3703 = !DILocation(line: 2732, column: 111, scope: !615)
!3704 = !DILocation(line: 2732, column: 71, scope: !615)
!3705 = !DILocation(line: 2732, column: 9, scope: !608)
!3706 = !DILocation(line: 2733, column: 9, scope: !614)
!3707 = !DILocation(line: 2733, column: 13, scope: !614)
!3708 = !DILocation(line: 2733, column: 47, scope: !614)
!3709 = !DILocation(line: 2733, column: 28, scope: !614)
!3710 = !DILocation(line: 2733, column: 54, scope: !614)
!3711 = !DILocation(line: 2733, column: 27, scope: !614)
!3712 = !DILocation(line: 2734, column: 47, scope: !614)
!3713 = !DILocation(line: 2734, column: 28, scope: !614)
!3714 = !DILocation(line: 2734, column: 55, scope: !614)
!3715 = !DILocation(line: 2734, column: 27, scope: !614)
!3716 = !DILocation(line: 2733, column: 20, scope: !614)
!3717 = !DILocation(line: 2736, column: 29, scope: !614)
!3718 = !DILocation(line: 2736, column: 35, scope: !614)
!3719 = !DILocation(line: 2736, column: 16, scope: !614)
!3720 = !DILocation(line: 2736, column: 9, scope: !614)
!3721 = !DILocation(line: 2737, column: 5, scope: !615)
!3722 = !DILocation(line: 2739, column: 72, scope: !615)
!3723 = !DILocation(line: 2739, column: 9, scope: !615)
!3724 = !DILocation(line: 2740, column: 1, scope: !608)
!3725 = !DILocation(line: 2421, column: 24, scope: !961)
!3726 = !DILocation(line: 2421, column: 40, scope: !961)
!3727 = !DILocation(line: 2421, column: 56, scope: !961)
!3728 = !DILocation(line: 2423, column: 5, scope: !961)
!3729 = !DILocation(line: 2423, column: 15, scope: !961)
!3730 = !DILocation(line: 2424, column: 5, scope: !961)
!3731 = !DILocation(line: 2424, column: 15, scope: !961)
!3732 = !DILocation(line: 2425, column: 5, scope: !961)
!3733 = !DILocation(line: 2425, column: 9, scope: !961)
!3734 = !DILocation(line: 2426, column: 5, scope: !961)
!3735 = !DILocation(line: 2426, column: 9, scope: !961)
!3736 = !DILocation(line: 2427, column: 5, scope: !961)
!3737 = !DILocation(line: 2427, column: 9, scope: !961)
!3738 = !DILocation(line: 2430, column: 26, scope: !977)
!3739 = !DILocation(line: 2430, column: 11, scope: !977)
!3740 = !DILocation(line: 2430, column: 34, scope: !977)
!3741 = !{!2605, !2607, i64 16}
!3742 = !DILocation(line: 2430, column: 43, scope: !977)
!3743 = !DILocation(line: 2430, column: 48, scope: !977)
!3744 = !DILocation(line: 2431, column: 54, scope: !977)
!3745 = !DILocation(line: 2431, column: 36, scope: !977)
!3746 = !DILocation(line: 2431, column: 62, scope: !977)
!3747 = !DILocation(line: 2431, column: 35, scope: !977)
!3748 = !DILocation(line: 2431, column: 32, scope: !977)
!3749 = !DILocation(line: 2431, column: 77, scope: !977)
!3750 = !DILocation(line: 2431, column: 88, scope: !977)
!3751 = !{!2604, !2607, i64 168}
!3752 = !DILocation(line: 2431, column: 97, scope: !977)
!3753 = !DILocation(line: 2431, column: 114, scope: !977)
!3754 = !DILocation(line: 2431, column: 120, scope: !977)
!3755 = !DILocation(line: 2432, column: 40, scope: !977)
!3756 = !DILocation(line: 2432, column: 25, scope: !977)
!3757 = !DILocation(line: 2432, column: 49, scope: !977)
!3758 = !DILocation(line: 2432, column: 59, scope: !977)
!3759 = !DILocation(line: 2432, column: 64, scope: !977)
!3760 = !DILocation(line: 2433, column: 60, scope: !977)
!3761 = !DILocation(line: 2433, column: 42, scope: !977)
!3762 = !DILocation(line: 2433, column: 69, scope: !977)
!3763 = !DILocation(line: 2433, column: 40, scope: !977)
!3764 = !DILocation(line: 2433, column: 25, scope: !977)
!3765 = !DILocation(line: 2433, column: 10, scope: !977)
!3766 = !DILocation(line: 2433, column: 83, scope: !977)
!3767 = !DILocation(line: 2433, column: 87, scope: !977)
!3768 = !DILocation(line: 2430, column: 9, scope: !961)
!3769 = !DILocation(line: 2435, column: 9, scope: !976)
!3770 = !DILocation(line: 2435, column: 26, scope: !976)
!3771 = !DILocation(line: 2437, column: 35, scope: !976)
!3772 = !DILocation(line: 2437, column: 41, scope: !976)
!3773 = !DILocation(line: 2437, column: 50, scope: !976)
!3774 = !DILocation(line: 2437, column: 14, scope: !976)
!3775 = !DILocation(line: 2437, column: 12, scope: !976)
!3776 = !DILocation(line: 2438, column: 13, scope: !980)
!3777 = !DILocation(line: 2438, column: 16, scope: !980)
!3778 = !DILocation(line: 2438, column: 13, scope: !976)
!3779 = !DILocation(line: 2439, column: 13, scope: !979)
!3780 = !DILocation(line: 2439, column: 19, scope: !979)
!3781 = !DILocation(line: 2439, column: 62, scope: !979)
!3782 = !DILocation(line: 2439, column: 44, scope: !979)
!3783 = !DILocation(line: 2439, column: 71, scope: !979)
!3784 = !DILocation(line: 2439, column: 42, scope: !979)
!3785 = !DILocation(line: 2440, column: 20, scope: !979)
!3786 = !DILocation(line: 2440, column: 24, scope: !979)
!3787 = !DILocation(line: 2440, column: 13, scope: !979)
!3788 = !DILocation(line: 2440, column: 30, scope: !979)
!3789 = !DILocation(line: 2441, column: 13, scope: !979)
!3790 = !DILocation(line: 2441, column: 17, scope: !979)
!3791 = !DILocation(line: 2441, column: 26, scope: !979)
!3792 = !DILocation(line: 2442, column: 9, scope: !980)
!3793 = !DILocation(line: 2442, column: 9, scope: !979)
!3794 = !DILocation(line: 2443, column: 28, scope: !976)
!3795 = !DILocation(line: 2443, column: 16, scope: !976)
!3796 = !DILocation(line: 2443, column: 9, scope: !976)
!3797 = !DILocation(line: 2444, column: 5, scope: !977)
!3798 = !DILocation(line: 2446, column: 37, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !961, file: !450, line: 2446, column: 9)
!3800 = !DILocation(line: 2446, column: 43, scope: !3799)
!3801 = !DILocation(line: 2446, column: 9, scope: !3799)
!3802 = !DILocation(line: 2446, column: 9, scope: !961)
!3803 = !DILocation(line: 2448, column: 29, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !450, line: 2448, column: 13)
!3805 = distinct !DILexicalBlock(scope: !3799, file: !450, line: 2447, column: 59)
!3806 = !DILocation(line: 2448, column: 35, scope: !3804)
!3807 = !DILocation(line: 2448, column: 42, scope: !3804)
!3808 = !DILocation(line: 2448, column: 13, scope: !3804)
!3809 = !DILocation(line: 2448, column: 47, scope: !3804)
!3810 = !DILocation(line: 2448, column: 13, scope: !3805)
!3811 = !DILocation(line: 2449, column: 13, scope: !3804)
!3812 = !DILocation(line: 2450, column: 28, scope: !3805)
!3813 = !DILocation(line: 2450, column: 34, scope: !3805)
!3814 = !DILocation(line: 2450, column: 41, scope: !3805)
!3815 = !DILocation(line: 2450, column: 46, scope: !3805)
!3816 = !DILocation(line: 2450, column: 16, scope: !3805)
!3817 = !DILocation(line: 2450, column: 14, scope: !3805)
!3818 = !DILocation(line: 2451, column: 5, scope: !3805)
!3819 = !DILocation(line: 2452, column: 12, scope: !961)
!3820 = !DILocation(line: 2452, column: 5, scope: !961)
!3821 = !DILocation(line: 2453, column: 1, scope: !961)
!3822 = !DILocation(line: 2570, column: 20, scope: !504)
!3823 = !DILocation(line: 2570, column: 36, scope: !504)
!3824 = !DILocation(line: 2572, column: 24, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !504, file: !450, line: 2572, column: 9)
!3826 = !DILocation(line: 2572, column: 32, scope: !3825)
!3827 = !DILocation(line: 2572, column: 41, scope: !3825)
!3828 = !DILocation(line: 2572, column: 71, scope: !3825)
!3829 = !DILocation(line: 2572, column: 105, scope: !3830)
!3830 = !DILexicalBlockFile(scope: !3825, file: !450, discriminator: 1)
!3831 = !DILocation(line: 2572, column: 113, scope: !3825)
!3832 = !DILocation(line: 2572, column: 74, scope: !3825)
!3833 = !DILocation(line: 2572, column: 152, scope: !3825)
!3834 = !DILocation(line: 2572, column: 170, scope: !3835)
!3835 = !DILexicalBlockFile(scope: !3825, file: !450, discriminator: 2)
!3836 = !DILocation(line: 2572, column: 179, scope: !3825)
!3837 = !DILocation(line: 2572, column: 188, scope: !3825)
!3838 = !DILocation(line: 2572, column: 218, scope: !3825)
!3839 = !DILocation(line: 2572, column: 252, scope: !3840)
!3840 = !DILexicalBlockFile(scope: !3825, file: !450, discriminator: 3)
!3841 = !DILocation(line: 2572, column: 261, scope: !3825)
!3842 = !DILocation(line: 2572, column: 221, scope: !3825)
!3843 = !DILocation(line: 2572, column: 9, scope: !504)
!3844 = !DILocation(line: 2573, column: 72, scope: !3825)
!3845 = !DILocation(line: 2573, column: 9, scope: !3825)
!3846 = !DILocation(line: 2575, column: 24, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !504, file: !450, line: 2575, column: 9)
!3848 = !DILocation(line: 2575, column: 32, scope: !3847)
!3849 = !DILocation(line: 2575, column: 41, scope: !3847)
!3850 = !DILocation(line: 2575, column: 67, scope: !3847)
!3851 = !DILocation(line: 2575, column: 101, scope: !3852)
!3852 = !DILexicalBlockFile(scope: !3847, file: !450, discriminator: 1)
!3853 = !DILocation(line: 2575, column: 109, scope: !3847)
!3854 = !DILocation(line: 2575, column: 70, scope: !3847)
!3855 = !DILocation(line: 2575, column: 9, scope: !504)
!3856 = !DILocation(line: 2577, column: 28, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !450, line: 2577, column: 13)
!3858 = distinct !DILexicalBlock(scope: !3847, file: !450, line: 2575, column: 145)
!3859 = !DILocation(line: 2577, column: 37, scope: !3857)
!3860 = !DILocation(line: 2577, column: 46, scope: !3857)
!3861 = !DILocation(line: 2577, column: 73, scope: !3857)
!3862 = !DILocation(line: 2577, column: 107, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !3857, file: !450, discriminator: 1)
!3864 = !DILocation(line: 2577, column: 116, scope: !3857)
!3865 = !DILocation(line: 2577, column: 76, scope: !3857)
!3866 = !DILocation(line: 2577, column: 13, scope: !3858)
!3867 = !DILocation(line: 2579, column: 59, scope: !3857)
!3868 = !DILocation(line: 2579, column: 39, scope: !3857)
!3869 = !DILocation(line: 2580, column: 60, scope: !3857)
!3870 = !DILocation(line: 2580, column: 39, scope: !3857)
!3871 = !DILocation(line: 2579, column: 20, scope: !3857)
!3872 = !DILocation(line: 2579, column: 13, scope: !3857)
!3873 = !DILocation(line: 2582, column: 5, scope: !3858)
!3874 = !DILocation(line: 2587, column: 28, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !450, line: 2587, column: 13)
!3876 = distinct !DILexicalBlock(scope: !3847, file: !450, line: 2583, column: 10)
!3877 = !DILocation(line: 2587, column: 36, scope: !3875)
!3878 = !DILocation(line: 2587, column: 45, scope: !3875)
!3879 = !DILocation(line: 2587, column: 72, scope: !3875)
!3880 = !DILocation(line: 2587, column: 106, scope: !3881)
!3881 = !DILexicalBlockFile(scope: !3875, file: !450, discriminator: 1)
!3882 = !DILocation(line: 2587, column: 114, scope: !3875)
!3883 = !DILocation(line: 2587, column: 75, scope: !3875)
!3884 = !DILocation(line: 2587, column: 13, scope: !3876)
!3885 = !DILocation(line: 2589, column: 59, scope: !3875)
!3886 = !DILocation(line: 2589, column: 39, scope: !3875)
!3887 = !DILocation(line: 2590, column: 60, scope: !3875)
!3888 = !DILocation(line: 2590, column: 39, scope: !3875)
!3889 = !DILocation(line: 2589, column: 20, scope: !3875)
!3890 = !DILocation(line: 2589, column: 13, scope: !3875)
!3891 = !DILocation(line: 2593, column: 68, scope: !504)
!3892 = !DILocation(line: 2593, column: 5, scope: !504)
!3893 = !DILocation(line: 2594, column: 1, scope: !504)
!3894 = !DILocation(line: 2597, column: 25, scope: !584)
!3895 = !DILocation(line: 2597, column: 41, scope: !584)
!3896 = !DILocation(line: 2599, column: 24, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !584, file: !450, line: 2599, column: 9)
!3898 = !DILocation(line: 2599, column: 32, scope: !3897)
!3899 = !DILocation(line: 2599, column: 41, scope: !3897)
!3900 = !DILocation(line: 2599, column: 71, scope: !3897)
!3901 = !DILocation(line: 2599, column: 105, scope: !3902)
!3902 = !DILexicalBlockFile(scope: !3897, file: !450, discriminator: 1)
!3903 = !DILocation(line: 2599, column: 113, scope: !3897)
!3904 = !DILocation(line: 2599, column: 74, scope: !3897)
!3905 = !DILocation(line: 2599, column: 152, scope: !3897)
!3906 = !DILocation(line: 2599, column: 170, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3897, file: !450, discriminator: 2)
!3908 = !DILocation(line: 2599, column: 179, scope: !3897)
!3909 = !DILocation(line: 2599, column: 188, scope: !3897)
!3910 = !DILocation(line: 2599, column: 218, scope: !3897)
!3911 = !DILocation(line: 2599, column: 252, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3897, file: !450, discriminator: 3)
!3913 = !DILocation(line: 2599, column: 261, scope: !3897)
!3914 = !DILocation(line: 2599, column: 221, scope: !3897)
!3915 = !DILocation(line: 2599, column: 9, scope: !584)
!3916 = !DILocation(line: 2600, column: 72, scope: !3897)
!3917 = !DILocation(line: 2600, column: 9, scope: !3897)
!3918 = !DILocation(line: 2602, column: 24, scope: !592)
!3919 = !DILocation(line: 2602, column: 32, scope: !592)
!3920 = !DILocation(line: 2602, column: 41, scope: !592)
!3921 = !DILocation(line: 2602, column: 67, scope: !592)
!3922 = !DILocation(line: 2602, column: 101, scope: !3923)
!3923 = !DILexicalBlockFile(scope: !592, file: !450, discriminator: 1)
!3924 = !DILocation(line: 2602, column: 109, scope: !592)
!3925 = !DILocation(line: 2602, column: 70, scope: !592)
!3926 = !DILocation(line: 2602, column: 9, scope: !584)
!3927 = !DILocation(line: 2603, column: 28, scope: !590)
!3928 = !DILocation(line: 2603, column: 37, scope: !590)
!3929 = !DILocation(line: 2603, column: 46, scope: !590)
!3930 = !DILocation(line: 2603, column: 72, scope: !590)
!3931 = !DILocation(line: 2603, column: 106, scope: !3932)
!3932 = !DILexicalBlockFile(scope: !590, file: !450, discriminator: 1)
!3933 = !DILocation(line: 2603, column: 115, scope: !590)
!3934 = !DILocation(line: 2603, column: 75, scope: !590)
!3935 = !DILocation(line: 2603, column: 13, scope: !591)
!3936 = !DILocation(line: 2605, column: 13, scope: !589)
!3937 = !DILocation(line: 2605, column: 17, scope: !589)
!3938 = !DILocation(line: 2605, column: 60, scope: !589)
!3939 = !DILocation(line: 2605, column: 42, scope: !589)
!3940 = !DILocation(line: 2605, column: 67, scope: !589)
!3941 = !DILocation(line: 2605, column: 41, scope: !589)
!3942 = !DILocation(line: 2605, column: 75, scope: !589)
!3943 = !DILocation(line: 2605, column: 102, scope: !589)
!3944 = !DILocation(line: 2605, column: 84, scope: !589)
!3945 = !DILocation(line: 2605, column: 109, scope: !589)
!3946 = !DILocation(line: 2605, column: 83, scope: !589)
!3947 = !DILocation(line: 2605, column: 81, scope: !589)
!3948 = !DILocation(line: 2606, column: 59, scope: !589)
!3949 = !DILocation(line: 2606, column: 41, scope: !589)
!3950 = !DILocation(line: 2606, column: 66, scope: !589)
!3951 = !DILocation(line: 2606, column: 40, scope: !589)
!3952 = !DILocation(line: 2606, column: 39, scope: !589)
!3953 = !DILocation(line: 2607, column: 59, scope: !589)
!3954 = !DILocation(line: 2607, column: 41, scope: !589)
!3955 = !DILocation(line: 2607, column: 66, scope: !589)
!3956 = !DILocation(line: 2607, column: 40, scope: !589)
!3957 = !DILocation(line: 2607, column: 39, scope: !589)
!3958 = !DILocation(line: 2605, column: 28, scope: !589)
!3959 = !DILocation(line: 2608, column: 13, scope: !589)
!3960 = !DILocation(line: 2608, column: 17, scope: !589)
!3961 = !DILocation(line: 2608, column: 61, scope: !589)
!3962 = !DILocation(line: 2608, column: 43, scope: !589)
!3963 = !DILocation(line: 2608, column: 69, scope: !589)
!3964 = !DILocation(line: 2608, column: 42, scope: !589)
!3965 = !DILocation(line: 2608, column: 77, scope: !589)
!3966 = !DILocation(line: 2608, column: 104, scope: !589)
!3967 = !DILocation(line: 2608, column: 86, scope: !589)
!3968 = !DILocation(line: 2608, column: 112, scope: !589)
!3969 = !DILocation(line: 2608, column: 85, scope: !589)
!3970 = !DILocation(line: 2608, column: 83, scope: !589)
!3971 = !DILocation(line: 2609, column: 60, scope: !589)
!3972 = !DILocation(line: 2609, column: 42, scope: !589)
!3973 = !DILocation(line: 2609, column: 68, scope: !589)
!3974 = !DILocation(line: 2609, column: 41, scope: !589)
!3975 = !DILocation(line: 2609, column: 40, scope: !589)
!3976 = !DILocation(line: 2610, column: 60, scope: !589)
!3977 = !DILocation(line: 2610, column: 42, scope: !589)
!3978 = !DILocation(line: 2610, column: 68, scope: !589)
!3979 = !DILocation(line: 2610, column: 41, scope: !589)
!3980 = !DILocation(line: 2610, column: 40, scope: !589)
!3981 = !DILocation(line: 2608, column: 29, scope: !589)
!3982 = !DILocation(line: 2611, column: 33, scope: !589)
!3983 = !DILocation(line: 2611, column: 44, scope: !589)
!3984 = !DILocation(line: 2611, column: 42, scope: !589)
!3985 = !DILocation(line: 2611, column: 20, scope: !589)
!3986 = !DILocation(line: 2611, column: 13, scope: !589)
!3987 = !DILocation(line: 2612, column: 9, scope: !590)
!3988 = !DILocation(line: 2613, column: 28, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !591, file: !450, line: 2613, column: 13)
!3990 = !DILocation(line: 2613, column: 37, scope: !3989)
!3991 = !DILocation(line: 2613, column: 46, scope: !3989)
!3992 = !DILocation(line: 2613, column: 73, scope: !3989)
!3993 = !DILocation(line: 2613, column: 107, scope: !3994)
!3994 = !DILexicalBlockFile(scope: !3989, file: !450, discriminator: 1)
!3995 = !DILocation(line: 2613, column: 116, scope: !3989)
!3996 = !DILocation(line: 2613, column: 76, scope: !3989)
!3997 = !DILocation(line: 2613, column: 13, scope: !591)
!3998 = !DILocation(line: 2615, column: 59, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3989, file: !450, line: 2613, column: 153)
!4000 = !DILocation(line: 2615, column: 39, scope: !3999)
!4001 = !DILocation(line: 2616, column: 60, scope: !3999)
!4002 = !DILocation(line: 2616, column: 39, scope: !3999)
!4003 = !DILocation(line: 2615, column: 20, scope: !3999)
!4004 = !DILocation(line: 2615, column: 13, scope: !3999)
!4005 = !DILocation(line: 2619, column: 5, scope: !591)
!4006 = !DILocation(line: 2620, column: 68, scope: !584)
!4007 = !DILocation(line: 2620, column: 5, scope: !584)
!4008 = !DILocation(line: 2621, column: 1, scope: !584)
!4009 = !DILocation(line: 2555, column: 37, scope: !508)
!4010 = !DILocation(line: 2555, column: 61, scope: !508)
!4011 = !DILocation(line: 2555, column: 72, scope: !508)
!4012 = !DILocation(line: 2557, column: 5, scope: !508)
!4013 = !DILocation(line: 2557, column: 15, scope: !508)
!4014 = !DILocation(line: 2558, column: 5, scope: !508)
!4015 = !DILocation(line: 2558, column: 9, scope: !508)
!4016 = !DILocation(line: 2558, column: 37, scope: !508)
!4017 = !DILocation(line: 2558, column: 44, scope: !508)
!4018 = !DILocation(line: 2558, column: 18, scope: !508)
!4019 = !DILocation(line: 2558, column: 52, scope: !508)
!4020 = !DILocation(line: 2558, column: 79, scope: !508)
!4021 = !DILocation(line: 2558, column: 86, scope: !508)
!4022 = !DILocation(line: 2558, column: 60, scope: !508)
!4023 = !DILocation(line: 2558, column: 58, scope: !508)
!4024 = !DILocation(line: 2559, column: 5, scope: !508)
!4025 = !DILocation(line: 2559, column: 9, scope: !508)
!4026 = !DILocation(line: 2559, column: 37, scope: !508)
!4027 = !DILocation(line: 2559, column: 44, scope: !508)
!4028 = !DILocation(line: 2559, column: 18, scope: !508)
!4029 = !DILocation(line: 2559, column: 17, scope: !508)
!4030 = !DILocation(line: 2560, column: 5, scope: !508)
!4031 = !DILocation(line: 2560, column: 9, scope: !508)
!4032 = !DILocation(line: 2560, column: 44, scope: !508)
!4033 = !DILocation(line: 2560, column: 53, scope: !508)
!4034 = !DILocation(line: 2562, column: 5, scope: !508)
!4035 = !DILocation(line: 2562, column: 9, scope: !508)
!4036 = !DILocation(line: 2562, column: 35, scope: !508)
!4037 = !DILocation(line: 2562, column: 42, scope: !508)
!4038 = !DILocation(line: 2562, column: 16, scope: !508)
!4039 = !DILocation(line: 2562, column: 15, scope: !508)
!4040 = !DILocation(line: 2562, column: 54, scope: !508)
!4041 = !DILocation(line: 2562, column: 64, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !508, file: !450, discriminator: 1)
!4043 = !DILocation(line: 2562, column: 63, scope: !508)
!4044 = !DILocation(line: 2562, column: 76, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !508, file: !450, discriminator: 2)
!4046 = !DILocation(line: 2562, column: 51, scope: !4047)
!4047 = !DILexicalBlockFile(scope: !4048, file: !450, discriminator: 4)
!4048 = !DILexicalBlockFile(scope: !508, file: !450, discriminator: 3)
!4049 = !DILocation(line: 2564, column: 9, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !508, file: !450, line: 2564, column: 9)
!4051 = !DILocation(line: 2564, column: 45, scope: !4050)
!4052 = !DILocation(line: 2564, column: 9, scope: !508)
!4053 = !DILocation(line: 2565, column: 30, scope: !4050)
!4054 = !DILocation(line: 2565, column: 36, scope: !4050)
!4055 = !DILocation(line: 2565, column: 43, scope: !4050)
!4056 = !DILocation(line: 2565, column: 18, scope: !4050)
!4057 = !DILocation(line: 2565, column: 16, scope: !4050)
!4058 = !DILocation(line: 2565, column: 9, scope: !4050)
!4059 = !DILocation(line: 2566, column: 12, scope: !508)
!4060 = !DILocation(line: 2567, column: 1, scope: !508)
!4061 = !DILocation(line: 2566, column: 5, scope: !508)
!4062 = !DILocation(line: 564, column: 21, scope: !520)
!4063 = !DILocation(line: 564, column: 32, scope: !520)
!4064 = !DILocation(line: 564, column: 44, scope: !520)
!4065 = !DILocation(line: 566, column: 28, scope: !520)
!4066 = !DILocation(line: 566, column: 34, scope: !520)
!4067 = !DILocation(line: 566, column: 41, scope: !520)
!4068 = !DILocation(line: 566, column: 12, scope: !520)
!4069 = !DILocation(line: 566, column: 5, scope: !520)
!4070 = !DILocation(line: 497, column: 22, scope: !528)
!4071 = !DILocation(line: 497, column: 30, scope: !528)
!4072 = !DILocation(line: 497, column: 38, scope: !528)
!4073 = !DILocation(line: 499, column: 5, scope: !528)
!4074 = !DILocation(line: 499, column: 9, scope: !528)
!4075 = !DILocation(line: 512, column: 26, scope: !528)
!4076 = !DILocation(line: 512, column: 25, scope: !528)
!4077 = !DILocation(line: 512, column: 30, scope: !528)
!4078 = !DILocation(line: 512, column: 29, scope: !528)
!4079 = !DILocation(line: 512, column: 11, scope: !528)
!4080 = !DILocation(line: 512, column: 9, scope: !528)
!4081 = !DILocation(line: 513, column: 10, scope: !539)
!4082 = !DILocation(line: 513, column: 9, scope: !539)
!4083 = !DILocation(line: 513, column: 12, scope: !539)
!4084 = !DILocation(line: 513, column: 16, scope: !539)
!4085 = !DILocation(line: 513, column: 20, scope: !4086)
!4086 = !DILexicalBlockFile(scope: !539, file: !450, discriminator: 1)
!4087 = !DILocation(line: 513, column: 19, scope: !539)
!4088 = !DILocation(line: 513, column: 24, scope: !539)
!4089 = !DILocation(line: 513, column: 22, scope: !539)
!4090 = !DILocation(line: 513, column: 9, scope: !528)
!4091 = !DILocation(line: 518, column: 14, scope: !537)
!4092 = !DILocation(line: 518, column: 13, scope: !537)
!4093 = !DILocation(line: 518, column: 16, scope: !537)
!4094 = !DILocation(line: 518, column: 13, scope: !538)
!4095 = !DILocation(line: 519, column: 16, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !537, file: !450, line: 518, column: 22)
!4097 = !DILocation(line: 519, column: 13, scope: !4096)
!4098 = !DILocation(line: 520, column: 18, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4096, file: !450, line: 520, column: 17)
!4100 = !DILocation(line: 520, column: 17, scope: !4099)
!4101 = !DILocation(line: 520, column: 20, scope: !4099)
!4102 = !DILocation(line: 520, column: 17, scope: !4096)
!4103 = !DILocation(line: 521, column: 37, scope: !4099)
!4104 = !DILocation(line: 521, column: 36, scope: !4099)
!4105 = !DILocation(line: 521, column: 41, scope: !4099)
!4106 = !DILocation(line: 521, column: 40, scope: !4099)
!4107 = !DILocation(line: 521, column: 22, scope: !4099)
!4108 = !DILocation(line: 521, column: 18, scope: !4099)
!4109 = !DILocation(line: 521, column: 20, scope: !4099)
!4110 = !DILocation(line: 521, column: 17, scope: !4099)
!4111 = !DILocation(line: 523, column: 20, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4099, file: !450, line: 522, column: 18)
!4113 = !DILocation(line: 523, column: 17, scope: !4112)
!4114 = !DILocation(line: 524, column: 18, scope: !4112)
!4115 = !DILocation(line: 524, column: 20, scope: !4112)
!4116 = !DILocation(line: 525, column: 18, scope: !4112)
!4117 = !DILocation(line: 525, column: 20, scope: !4112)
!4118 = !DILocation(line: 527, column: 9, scope: !4096)
!4119 = !DILocation(line: 528, column: 19, scope: !536)
!4120 = !DILocation(line: 528, column: 18, scope: !536)
!4121 = !DILocation(line: 528, column: 24, scope: !536)
!4122 = !DILocation(line: 528, column: 28, scope: !536)
!4123 = !DILocation(line: 528, column: 21, scope: !536)
!4124 = !DILocation(line: 528, column: 18, scope: !537)
!4125 = !DILocation(line: 530, column: 16, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !536, file: !450, line: 528, column: 33)
!4127 = !DILocation(line: 530, column: 13, scope: !4126)
!4128 = !DILocation(line: 531, column: 14, scope: !4126)
!4129 = !DILocation(line: 531, column: 16, scope: !4126)
!4130 = !DILocation(line: 532, column: 18, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !450, line: 532, column: 17)
!4132 = !DILocation(line: 532, column: 17, scope: !4131)
!4133 = !DILocation(line: 532, column: 20, scope: !4131)
!4134 = !DILocation(line: 532, column: 17, scope: !4126)
!4135 = !DILocation(line: 533, column: 18, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4131, file: !450, line: 532, column: 26)
!4137 = !DILocation(line: 533, column: 20, scope: !4136)
!4138 = !DILocation(line: 534, column: 20, scope: !4136)
!4139 = !DILocation(line: 534, column: 17, scope: !4136)
!4140 = !DILocation(line: 535, column: 13, scope: !4136)
!4141 = !DILocation(line: 536, column: 9, scope: !4126)
!4142 = !DILocation(line: 538, column: 13, scope: !535)
!4143 = !DILocation(line: 538, column: 17, scope: !535)
!4144 = !DILocation(line: 538, column: 39, scope: !535)
!4145 = !DILocation(line: 538, column: 38, scope: !535)
!4146 = !DILocation(line: 538, column: 43, scope: !535)
!4147 = !DILocation(line: 538, column: 42, scope: !535)
!4148 = !DILocation(line: 538, column: 27, scope: !535)
!4149 = !DILocation(line: 539, column: 40, scope: !535)
!4150 = !DILocation(line: 539, column: 39, scope: !535)
!4151 = !DILocation(line: 538, column: 49, scope: !535)
!4152 = !DILocation(line: 539, column: 42, scope: !535)
!4153 = !DILocation(line: 540, column: 17, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !535, file: !450, line: 540, column: 17)
!4155 = !DILocation(line: 540, column: 25, scope: !4154)
!4156 = !DILocation(line: 540, column: 29, scope: !4154)
!4157 = !DILocation(line: 540, column: 32, scope: !4158)
!4158 = !DILexicalBlockFile(scope: !4154, file: !450, discriminator: 1)
!4159 = !DILocation(line: 540, column: 40, scope: !4154)
!4160 = !DILocation(line: 540, column: 17, scope: !535)
!4161 = !DILocation(line: 541, column: 17, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4154, file: !450, line: 540, column: 51)
!4163 = !DILocation(line: 543, column: 28, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4154, file: !450, line: 542, column: 20)
!4165 = !DILocation(line: 543, column: 37, scope: !4164)
!4166 = !DILocation(line: 543, column: 40, scope: !4164)
!4167 = !DILocation(line: 543, column: 43, scope: !4164)
!4168 = !DILocation(line: 543, column: 17, scope: !4164)
!4169 = !DILocation(line: 544, column: 17, scope: !4164)
!4170 = !DILocation(line: 546, column: 9, scope: !536)
!4171 = !DILocation(line: 547, column: 5, scope: !538)
!4172 = !DILocation(line: 550, column: 15, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !528, file: !450, line: 550, column: 9)
!4174 = !DILocation(line: 550, column: 14, scope: !4173)
!4175 = !DILocation(line: 550, column: 11, scope: !4173)
!4176 = !DILocation(line: 550, column: 17, scope: !4173)
!4177 = !DILocation(line: 550, column: 21, scope: !4178)
!4178 = !DILexicalBlockFile(scope: !4173, file: !450, discriminator: 1)
!4179 = !DILocation(line: 550, column: 20, scope: !4173)
!4180 = !DILocation(line: 550, column: 23, scope: !4173)
!4181 = !DILocation(line: 550, column: 9, scope: !528)
!4182 = !DILocation(line: 551, column: 9, scope: !4173)
!4183 = !DILocation(line: 550, column: 26, scope: !4184)
!4184 = !DILexicalBlockFile(scope: !4185, file: !450, discriminator: 3)
!4185 = !DILexicalBlockFile(scope: !4173, file: !450, discriminator: 2)
!4186 = !DILocation(line: 553, column: 21, scope: !528)
!4187 = !DILocation(line: 553, column: 5, scope: !528)
!4188 = !DILocation(line: 555, column: 5, scope: !528)
!4189 = !DILocation(line: 557, column: 1, scope: !528)
!4190 = !DILocation(line: 206, column: 19, scope: !540)
!4191 = !DILocation(line: 206, column: 29, scope: !540)
!4192 = !DILocation(line: 210, column: 9, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !540, file: !450, line: 210, column: 9)
!4194 = !DILocation(line: 210, column: 15, scope: !4193)
!4195 = !DILocation(line: 210, column: 20, scope: !4193)
!4196 = !DILocation(line: 210, column: 31, scope: !4197)
!4197 = !DILexicalBlockFile(scope: !4193, file: !450, discriminator: 1)
!4198 = !DILocation(line: 210, column: 23, scope: !4193)
!4199 = !DILocation(line: 210, column: 9, scope: !540)
!4200 = !DILocation(line: 211, column: 9, scope: !4193)
!4201 = !DILocation(line: 213, column: 31, scope: !4193)
!4202 = !DILocation(line: 213, column: 16, scope: !4193)
!4203 = !DILocation(line: 213, column: 9, scope: !4193)
!4204 = !DILocation(line: 214, column: 1, scope: !540)
!4205 = !DILocation(line: 338, column: 16, scope: !553)
!4206 = !DILocation(line: 338, column: 26, scope: !553)
!4207 = !DILocation(line: 338, column: 37, scope: !553)
!4208 = !DILocation(line: 340, column: 29, scope: !553)
!4209 = !DILocation(line: 340, column: 12, scope: !553)
!4210 = !DILocation(line: 340, column: 55, scope: !553)
!4211 = !DILocation(line: 340, column: 61, scope: !553)
!4212 = !DILocation(line: 340, column: 37, scope: !553)
!4213 = !DILocation(line: 340, column: 35, scope: !553)
!4214 = !DILocation(line: 340, column: 70, scope: !553)
!4215 = !DILocation(line: 340, column: 68, scope: !553)
!4216 = !DILocation(line: 340, column: 5, scope: !553)
!4217 = !DILocation(line: 254, column: 16, scope: !569)
!4218 = !DILocation(line: 254, column: 30, scope: !569)
!4219 = !DILocation(line: 254, column: 41, scope: !569)
!4220 = !DILocation(line: 254, column: 53, scope: !569)
!4221 = !DILocation(line: 256, column: 5, scope: !569)
!4222 = !DILocation(line: 256, column: 9, scope: !569)
!4223 = !DILocation(line: 256, column: 12, scope: !569)
!4224 = !DILocation(line: 256, column: 16, scope: !569)
!4225 = !DILocation(line: 256, column: 20, scope: !569)
!4226 = !DILocation(line: 256, column: 26, scope: !569)
!4227 = !DILocation(line: 256, column: 32, scope: !569)
!4228 = !DILocation(line: 256, column: 42, scope: !569)
!4229 = !DILocation(line: 281, column: 5, scope: !569)
!4230 = !DILocation(line: 282, column: 12, scope: !569)
!4231 = !DILocation(line: 282, column: 20, scope: !569)
!4232 = !DILocation(line: 282, column: 10, scope: !569)
!4233 = !DILocation(line: 283, column: 9, scope: !569)
!4234 = !DILocation(line: 283, column: 17, scope: !569)
!4235 = !DILocation(line: 283, column: 7, scope: !569)
!4236 = !DILocation(line: 284, column: 13, scope: !569)
!4237 = !DILocation(line: 284, column: 18, scope: !569)
!4238 = !DILocation(line: 284, column: 24, scope: !569)
!4239 = !DILocation(line: 284, column: 6, scope: !569)
!4240 = !DILocation(line: 284, column: 11, scope: !569)
!4241 = !DILocation(line: 293, column: 12, scope: !569)
!4242 = !DILocation(line: 293, column: 14, scope: !569)
!4243 = !DILocation(line: 293, column: 10, scope: !569)
!4244 = !DILocation(line: 294, column: 9, scope: !569)
!4245 = !DILocation(line: 294, column: 11, scope: !569)
!4246 = !DILocation(line: 294, column: 7, scope: !569)
!4247 = !DILocation(line: 297, column: 10, scope: !569)
!4248 = !DILocation(line: 297, column: 12, scope: !569)
!4249 = !DILocation(line: 297, column: 8, scope: !569)
!4250 = !DILocation(line: 298, column: 9, scope: !569)
!4251 = !DILocation(line: 298, column: 11, scope: !569)
!4252 = !DILocation(line: 298, column: 7, scope: !569)
!4253 = !DILocation(line: 304, column: 10, scope: !569)
!4254 = !DILocation(line: 304, column: 12, scope: !569)
!4255 = !DILocation(line: 304, column: 8, scope: !569)
!4256 = !DILocation(line: 305, column: 9, scope: !569)
!4257 = !DILocation(line: 305, column: 11, scope: !569)
!4258 = !DILocation(line: 305, column: 7, scope: !569)
!4259 = !DILocation(line: 307, column: 14, scope: !569)
!4260 = !DILocation(line: 307, column: 19, scope: !569)
!4261 = !DILocation(line: 307, column: 27, scope: !569)
!4262 = !DILocation(line: 307, column: 30, scope: !569)
!4263 = !DILocation(line: 307, column: 25, scope: !569)
!4264 = !DILocation(line: 307, column: 36, scope: !569)
!4265 = !DILocation(line: 307, column: 34, scope: !569)
!4266 = !DILocation(line: 307, column: 6, scope: !569)
!4267 = !DILocation(line: 307, column: 11, scope: !569)
!4268 = !DILocation(line: 308, column: 9, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !569, file: !450, line: 308, column: 9)
!4270 = !DILocation(line: 308, column: 12, scope: !4269)
!4271 = !DILocation(line: 308, column: 17, scope: !4269)
!4272 = !DILocation(line: 308, column: 20, scope: !4273)
!4273 = !DILexicalBlockFile(scope: !4269, file: !450, discriminator: 1)
!4274 = !DILocation(line: 308, column: 25, scope: !4269)
!4275 = !DILocation(line: 308, column: 9, scope: !569)
!4276 = !DILocation(line: 310, column: 10, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4269, file: !450, line: 308, column: 31)
!4278 = !DILocation(line: 310, column: 15, scope: !4277)
!4279 = !DILocation(line: 311, column: 10, scope: !4277)
!4280 = !DILocation(line: 311, column: 16, scope: !4277)
!4281 = !DILocation(line: 312, column: 10, scope: !4277)
!4282 = !DILocation(line: 312, column: 14, scope: !4277)
!4283 = !DILocation(line: 313, column: 9, scope: !4277)
!4284 = !DILocation(line: 320, column: 16, scope: !569)
!4285 = !DILocation(line: 320, column: 19, scope: !569)
!4286 = !DILocation(line: 320, column: 24, scope: !569)
!4287 = !DILocation(line: 320, column: 28, scope: !4288)
!4288 = !DILexicalBlockFile(scope: !569, file: !450, discriminator: 1)
!4289 = !DILocation(line: 320, column: 31, scope: !569)
!4290 = !DILocation(line: 320, column: 37, scope: !569)
!4291 = !DILocation(line: 320, column: 40, scope: !4292)
!4292 = !DILexicalBlockFile(scope: !569, file: !450, discriminator: 3)
!4293 = !DILocation(line: 320, column: 45, scope: !569)
!4294 = !DILocation(line: 320, column: 24, scope: !4295)
!4295 = !DILexicalBlockFile(scope: !569, file: !450, discriminator: 2)
!4296 = !DILocation(line: 320, column: 14, scope: !569)
!4297 = !DILocation(line: 322, column: 15, scope: !569)
!4298 = !DILocation(line: 322, column: 17, scope: !569)
!4299 = !DILocation(line: 322, column: 23, scope: !569)
!4300 = !DILocation(line: 322, column: 6, scope: !569)
!4301 = !DILocation(line: 322, column: 12, scope: !569)
!4302 = !DILocation(line: 323, column: 38, scope: !569)
!4303 = !DILocation(line: 323, column: 37, scope: !569)
!4304 = !DILocation(line: 323, column: 18, scope: !569)
!4305 = !DILocation(line: 323, column: 49, scope: !569)
!4306 = !DILocation(line: 323, column: 48, scope: !569)
!4307 = !DILocation(line: 323, column: 55, scope: !569)
!4308 = !DILocation(line: 323, column: 59, scope: !569)
!4309 = !DILocation(line: 323, column: 62, scope: !4288)
!4310 = !DILocation(line: 323, column: 59, scope: !4295)
!4311 = !DILocation(line: 323, column: 45, scope: !569)
!4312 = !DILocation(line: 323, column: 15, scope: !569)
!4313 = !DILocation(line: 324, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !569, file: !450, line: 324, column: 9)
!4315 = !DILocation(line: 324, column: 21, scope: !4314)
!4316 = !DILocation(line: 324, column: 19, scope: !4314)
!4317 = !DILocation(line: 324, column: 9, scope: !569)
!4318 = !DILocation(line: 326, column: 10, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4314, file: !450, line: 324, column: 24)
!4320 = !DILocation(line: 326, column: 16, scope: !4319)
!4321 = !DILocation(line: 327, column: 37, scope: !4319)
!4322 = !DILocation(line: 327, column: 36, scope: !4319)
!4323 = !DILocation(line: 327, column: 44, scope: !4319)
!4324 = !DILocation(line: 327, column: 43, scope: !4319)
!4325 = !DILocation(line: 327, column: 22, scope: !4319)
!4326 = !DILocation(line: 327, column: 19, scope: !4319)
!4327 = !DILocation(line: 328, column: 5, scope: !4319)
!4328 = !DILocation(line: 329, column: 10, scope: !569)
!4329 = !DILocation(line: 329, column: 7, scope: !569)
!4330 = !DILocation(line: 333, column: 12, scope: !569)
!4331 = !DILocation(line: 333, column: 14, scope: !569)
!4332 = !DILocation(line: 333, column: 6, scope: !569)
!4333 = !DILocation(line: 333, column: 10, scope: !569)
!4334 = !DILocation(line: 334, column: 1, scope: !569)
!4335 = !DILocation(line: 334, column: 1, scope: !4288)
!4336 = !DILocation(line: 193, column: 13, scope: !546)
!4337 = !DILocation(line: 200, column: 5, scope: !546)
!4338 = !DILocation(line: 200, column: 24, scope: !546)
!4339 = !DILocation(line: 200, column: 46, scope: !546)
!4340 = !DILocation(line: 201, column: 12, scope: !546)
!4341 = !DILocation(line: 201, column: 18, scope: !546)
!4342 = !DILocation(line: 201, column: 22, scope: !546)
!4343 = !DILocation(line: 201, column: 27, scope: !546)
!4344 = !DILocation(line: 201, column: 31, scope: !4345)
!4345 = !DILexicalBlockFile(scope: !546, file: !450, discriminator: 1)
!4346 = !DILocation(line: 201, column: 37, scope: !546)
!4347 = !DILocation(line: 201, column: 43, scope: !546)
!4348 = !DILocation(line: 201, column: 48, scope: !546)
!4349 = !DILocation(line: 201, column: 51, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !546, file: !450, discriminator: 3)
!4351 = !DILocation(line: 201, column: 57, scope: !546)
!4352 = !DILocation(line: 201, column: 63, scope: !546)
!4353 = !DILocation(line: 201, column: 27, scope: !4354)
!4354 = !DILexicalBlockFile(scope: !546, file: !450, discriminator: 2)
!4355 = !DILocation(line: 202, column: 1, scope: !546)
!4356 = !DILocation(line: 201, column: 5, scope: !546)
!4357 = !DILocation(line: 234, column: 22, scope: !560)
!4358 = !DILocation(line: 236, column: 5, scope: !560)
!4359 = !DILocation(line: 236, column: 9, scope: !560)
!4360 = !DILocation(line: 236, column: 13, scope: !560)
!4361 = !DILocation(line: 236, column: 18, scope: !560)
!4362 = !DILocation(line: 242, column: 12, scope: !560)
!4363 = !DILocation(line: 242, column: 13, scope: !560)
!4364 = !DILocation(line: 242, column: 20, scope: !560)
!4365 = !DILocation(line: 242, column: 21, scope: !560)
!4366 = !DILocation(line: 242, column: 18, scope: !560)
!4367 = !DILocation(line: 242, column: 26, scope: !560)
!4368 = !DILocation(line: 242, column: 27, scope: !560)
!4369 = !DILocation(line: 242, column: 24, scope: !560)
!4370 = !DILocation(line: 242, column: 34, scope: !560)
!4371 = !DILocation(line: 242, column: 35, scope: !560)
!4372 = !DILocation(line: 242, column: 32, scope: !560)
!4373 = !DILocation(line: 243, column: 1, scope: !560)
!4374 = !DILocation(line: 242, column: 5, scope: !560)
!4375 = !DILocation(line: 218, column: 23, scope: !564)
!4376 = !DILocation(line: 218, column: 33, scope: !564)
!4377 = !DILocation(line: 220, column: 5, scope: !564)
!4378 = !DILocation(line: 220, column: 9, scope: !564)
!4379 = !DILocation(line: 224, column: 31, scope: !564)
!4380 = !DILocation(line: 224, column: 12, scope: !564)
!4381 = !DILocation(line: 224, column: 10, scope: !564)
!4382 = !DILocation(line: 225, column: 9, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !564, file: !450, line: 225, column: 9)
!4384 = !DILocation(line: 225, column: 15, scope: !4383)
!4385 = !DILocation(line: 225, column: 19, scope: !4383)
!4386 = !DILocation(line: 225, column: 30, scope: !4387)
!4387 = !DILexicalBlockFile(scope: !4383, file: !450, discriminator: 1)
!4388 = !DILocation(line: 225, column: 22, scope: !4383)
!4389 = !DILocation(line: 225, column: 9, scope: !564)
!4390 = !DILocation(line: 226, column: 9, scope: !4383)
!4391 = !DILocation(line: 227, column: 12, scope: !564)
!4392 = !DILocation(line: 228, column: 1, scope: !564)
!4393 = !DILocation(line: 227, column: 5, scope: !564)
!4394 = !DILocation(line: 2772, column: 29, scope: !599)
!4395 = !DILocation(line: 2772, column: 39, scope: !599)
!4396 = !DILocation(line: 2774, column: 26, scope: !599)
!4397 = !DILocation(line: 2774, column: 32, scope: !599)
!4398 = !DILocation(line: 2774, column: 12, scope: !599)
!4399 = !DILocation(line: 2774, column: 5, scope: !599)
!4400 = !DILocation(line: 1360, column: 18, scope: !616)
!4401 = !DILocation(line: 1360, column: 28, scope: !616)
!4402 = !DILocation(line: 1362, column: 5, scope: !616)
!4403 = !DILocation(line: 1362, column: 15, scope: !616)
!4404 = !DILocation(line: 1363, column: 5, scope: !616)
!4405 = !DILocation(line: 1363, column: 9, scope: !616)
!4406 = !DILocation(line: 1365, column: 13, scope: !616)
!4407 = !DILocation(line: 1365, column: 5, scope: !616)
!4408 = !DILocation(line: 1366, column: 26, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !616, file: !450, line: 1365, column: 17)
!4410 = !DILocation(line: 1366, column: 31, scope: !4409)
!4411 = !DILocation(line: 1366, column: 24, scope: !4409)
!4412 = !DILocation(line: 1366, column: 37, scope: !4409)
!4413 = !DILocation(line: 1367, column: 26, scope: !4409)
!4414 = !DILocation(line: 1367, column: 31, scope: !4409)
!4415 = !DILocation(line: 1367, column: 24, scope: !4409)
!4416 = !DILocation(line: 1367, column: 37, scope: !4409)
!4417 = !DILocation(line: 1368, column: 26, scope: !4409)
!4418 = !DILocation(line: 1368, column: 31, scope: !4409)
!4419 = !DILocation(line: 1368, column: 24, scope: !4409)
!4420 = !DILocation(line: 1368, column: 37, scope: !4409)
!4421 = !DILocation(line: 1369, column: 26, scope: !4409)
!4422 = !DILocation(line: 1369, column: 31, scope: !4409)
!4423 = !DILocation(line: 1369, column: 24, scope: !4409)
!4424 = !DILocation(line: 1369, column: 37, scope: !4409)
!4425 = !DILocation(line: 1370, column: 26, scope: !4409)
!4426 = !DILocation(line: 1370, column: 31, scope: !4409)
!4427 = !DILocation(line: 1370, column: 24, scope: !4409)
!4428 = !DILocation(line: 1370, column: 36, scope: !4409)
!4429 = !DILocation(line: 1371, column: 26, scope: !4409)
!4430 = !DILocation(line: 1371, column: 31, scope: !4409)
!4431 = !DILocation(line: 1371, column: 24, scope: !4409)
!4432 = !DILocation(line: 1371, column: 36, scope: !4409)
!4433 = !DILocation(line: 1374, column: 20, scope: !4409)
!4434 = !DILocation(line: 1375, column: 5, scope: !4409)
!4435 = !DILocation(line: 1376, column: 14, scope: !616)
!4436 = !DILocation(line: 1376, column: 12, scope: !616)
!4437 = !DILocation(line: 1377, column: 21, scope: !616)
!4438 = !DILocation(line: 1377, column: 31, scope: !616)
!4439 = !DILocation(line: 1377, column: 40, scope: !616)
!4440 = !DILocation(line: 1378, column: 12, scope: !616)
!4441 = !DILocation(line: 1379, column: 1, scope: !616)
!4442 = !DILocation(line: 1378, column: 5, scope: !616)
!4443 = !DILocation(line: 2511, column: 30, scope: !624)
!4444 = !DILocation(line: 2511, column: 45, scope: !624)
!4445 = !DILocation(line: 2513, column: 5, scope: !624)
!4446 = !DILocation(line: 2513, column: 15, scope: !624)
!4447 = !DILocation(line: 2514, column: 5, scope: !624)
!4448 = !DILocation(line: 2514, column: 15, scope: !624)
!4449 = !DILocation(line: 2516, column: 26, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !624, file: !450, line: 2516, column: 9)
!4451 = !DILocation(line: 2516, column: 9, scope: !4450)
!4452 = !DILocation(line: 2516, column: 9, scope: !624)
!4453 = !DILocation(line: 2517, column: 41, scope: !4450)
!4454 = !DILocation(line: 2517, column: 46, scope: !4450)
!4455 = !DILocation(line: 2517, column: 18, scope: !4450)
!4456 = !DILocation(line: 2517, column: 16, scope: !4450)
!4457 = !DILocation(line: 2517, column: 9, scope: !4450)
!4458 = !DILocation(line: 2518, column: 12, scope: !624)
!4459 = !DILocation(line: 2519, column: 1, scope: !624)
!4460 = !DILocation(line: 2518, column: 5, scope: !624)
!4461 = !DILocation(line: 2525, column: 28, scope: !650)
!4462 = !DILocation(line: 2525, column: 43, scope: !650)
!4463 = !DILocation(line: 2527, column: 5, scope: !650)
!4464 = !DILocation(line: 2527, column: 15, scope: !650)
!4465 = !DILocation(line: 2528, column: 5, scope: !650)
!4466 = !DILocation(line: 2528, column: 9, scope: !650)
!4467 = !DILocation(line: 2530, column: 26, scope: !658)
!4468 = !DILocation(line: 2530, column: 9, scope: !658)
!4469 = !DILocation(line: 2530, column: 9, scope: !650)
!4470 = !DILocation(line: 2531, column: 9, scope: !657)
!4471 = !DILocation(line: 2531, column: 13, scope: !657)
!4472 = !DILocation(line: 2532, column: 9, scope: !657)
!4473 = !DILocation(line: 2532, column: 13, scope: !657)
!4474 = !DILocation(line: 2533, column: 9, scope: !657)
!4475 = !DILocation(line: 2533, column: 13, scope: !657)
!4476 = !DILocation(line: 2535, column: 13, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !657, file: !450, line: 2535, column: 13)
!4478 = !DILocation(line: 2535, column: 21, scope: !4477)
!4479 = !DILocation(line: 2535, column: 13, scope: !657)
!4480 = !DILocation(line: 2536, column: 29, scope: !4477)
!4481 = !DILocation(line: 2536, column: 13, scope: !4477)
!4482 = !DILocation(line: 2539, column: 24, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4477, file: !450, line: 2538, column: 14)
!4484 = !DILocation(line: 2539, column: 13, scope: !4483)
!4485 = !DILocation(line: 2540, column: 44, scope: !4483)
!4486 = !DILocation(line: 2541, column: 44, scope: !4483)
!4487 = !DILocation(line: 2541, column: 50, scope: !4483)
!4488 = !DILocation(line: 2541, column: 57, scope: !4483)
!4489 = !DILocation(line: 2540, column: 22, scope: !4483)
!4490 = !DILocation(line: 2540, column: 20, scope: !4483)
!4491 = !DILocation(line: 2543, column: 5, scope: !658)
!4492 = !DILocation(line: 2543, column: 5, scope: !657)
!4493 = !DILocation(line: 2544, column: 12, scope: !650)
!4494 = !DILocation(line: 2545, column: 1, scope: !650)
!4495 = !DILocation(line: 2544, column: 5, scope: !650)
!4496 = !DILocation(line: 2488, column: 22, scope: !661)
!4497 = !DILocation(line: 2488, column: 37, scope: !661)
!4498 = !DILocation(line: 2490, column: 5, scope: !661)
!4499 = !DILocation(line: 2490, column: 15, scope: !661)
!4500 = !DILocation(line: 2491, column: 5, scope: !661)
!4501 = !DILocation(line: 2491, column: 15, scope: !661)
!4502 = !DILocation(line: 2494, column: 12, scope: !661)
!4503 = !DILocation(line: 2494, column: 10, scope: !661)
!4504 = !DILocation(line: 2495, column: 9, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !661, file: !450, line: 2495, column: 9)
!4506 = !DILocation(line: 2495, column: 14, scope: !4505)
!4507 = !DILocation(line: 2495, column: 9, scope: !661)
!4508 = !DILocation(line: 2496, column: 9, scope: !4505)
!4509 = !DILocation(line: 2504, column: 37, scope: !661)
!4510 = !DILocation(line: 2504, column: 68, scope: !661)
!4511 = !DILocation(line: 2504, column: 14, scope: !661)
!4512 = !DILocation(line: 2504, column: 12, scope: !661)
!4513 = !DILocation(line: 2505, column: 5, scope: !661)
!4514 = !DILocation(line: 2505, column: 10, scope: !4515)
!4515 = !DILexicalBlockFile(scope: !668, file: !450, discriminator: 1)
!4516 = !DILocation(line: 2505, column: 20, scope: !668)
!4517 = !DILocation(line: 2505, column: 50, scope: !668)
!4518 = !DILocation(line: 2505, column: 65, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !668, file: !450, line: 2505, column: 62)
!4520 = !DILocation(line: 2505, column: 82, scope: !4519)
!4521 = !DILocation(line: 2505, column: 62, scope: !4519)
!4522 = !DILocation(line: 2505, column: 92, scope: !4519)
!4523 = !DILocation(line: 2505, column: 62, scope: !668)
!4524 = !DILocation(line: 2505, column: 62, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !668, file: !450, discriminator: 2)
!4526 = !DILocation(line: 2505, column: 123, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !4519, file: !450, discriminator: 3)
!4528 = !DILocation(line: 2505, column: 141, scope: !4519)
!4529 = !DILocation(line: 2505, column: 151, scope: !4519)
!4530 = !DILocation(line: 2505, column: 176, scope: !4519)
!4531 = !DILocation(line: 2505, column: 107, scope: !4519)
!4532 = !DILocation(line: 2505, column: 195, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !661, file: !450, discriminator: 4)
!4534 = !DILocation(line: 2505, column: 195, scope: !668)
!4535 = !DILocation(line: 2505, column: 195, scope: !4536)
!4536 = !DILexicalBlockFile(scope: !668, file: !450, discriminator: 5)
!4537 = !DILocation(line: 2506, column: 12, scope: !661)
!4538 = !DILocation(line: 2506, column: 5, scope: !661)
!4539 = !DILocation(line: 2507, column: 1, scope: !661)
!4540 = !DILocation(line: 2650, column: 29, scope: !677)
!4541 = !DILocation(line: 2652, column: 25, scope: !677)
!4542 = !DILocation(line: 2652, column: 12, scope: !677)
!4543 = !DILocation(line: 2652, column: 5, scope: !677)
!4544 = !DILocation(line: 2656, column: 32, scope: !694)
!4545 = !DILocation(line: 2656, column: 48, scope: !694)
!4546 = !DILocation(line: 2656, column: 64, scope: !694)
!4547 = !DILocation(line: 2661, column: 5, scope: !694)
!4548 = !DILocation(line: 2661, column: 15, scope: !694)
!4549 = !DILocation(line: 2662, column: 5, scope: !694)
!4550 = !DILocation(line: 2662, column: 15, scope: !694)
!4551 = !DILocation(line: 2663, column: 5, scope: !694)
!4552 = !DILocation(line: 2663, column: 15, scope: !694)
!4553 = !DILocation(line: 2667, column: 39, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !694, file: !450, line: 2667, column: 9)
!4555 = !DILocation(line: 2667, column: 45, scope: !4554)
!4556 = !DILocation(line: 2667, column: 11, scope: !4554)
!4557 = !DILocation(line: 2667, column: 9, scope: !694)
!4558 = !DILocation(line: 2669, column: 9, scope: !4554)
!4559 = !DILocation(line: 2671, column: 48, scope: !694)
!4560 = !DILocation(line: 2671, column: 36, scope: !694)
!4561 = !DILocation(line: 2671, column: 13, scope: !694)
!4562 = !DILocation(line: 2671, column: 11, scope: !694)
!4563 = !DILocation(line: 2672, column: 9, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !694, file: !450, line: 2672, column: 9)
!4565 = !DILocation(line: 2672, column: 15, scope: !4564)
!4566 = !DILocation(line: 2672, column: 9, scope: !694)
!4567 = !DILocation(line: 2673, column: 9, scope: !4564)
!4568 = !DILocation(line: 2674, column: 40, scope: !694)
!4569 = !DILocation(line: 2674, column: 28, scope: !694)
!4570 = !DILocation(line: 2674, column: 46, scope: !694)
!4571 = !DILocation(line: 2674, column: 54, scope: !694)
!4572 = !DILocation(line: 2675, column: 40, scope: !694)
!4573 = !DILocation(line: 2675, column: 28, scope: !694)
!4574 = !DILocation(line: 2674, column: 14, scope: !694)
!4575 = !DILocation(line: 2674, column: 12, scope: !694)
!4576 = !DILocation(line: 2676, column: 5, scope: !694)
!4577 = !DILocation(line: 2676, column: 10, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !705, file: !450, discriminator: 1)
!4579 = !DILocation(line: 2676, column: 20, scope: !705)
!4580 = !DILocation(line: 2676, column: 50, scope: !705)
!4581 = !DILocation(line: 2676, column: 66, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !705, file: !450, line: 2676, column: 63)
!4583 = !DILocation(line: 2676, column: 83, scope: !4582)
!4584 = !DILocation(line: 2676, column: 63, scope: !4582)
!4585 = !DILocation(line: 2676, column: 93, scope: !4582)
!4586 = !DILocation(line: 2676, column: 63, scope: !705)
!4587 = !DILocation(line: 2676, column: 63, scope: !4588)
!4588 = !DILexicalBlockFile(scope: !705, file: !450, discriminator: 2)
!4589 = !DILocation(line: 2676, column: 124, scope: !4590)
!4590 = !DILexicalBlockFile(scope: !4582, file: !450, discriminator: 3)
!4591 = !DILocation(line: 2676, column: 142, scope: !4582)
!4592 = !DILocation(line: 2676, column: 152, scope: !4582)
!4593 = !DILocation(line: 2676, column: 177, scope: !4582)
!4594 = !DILocation(line: 2676, column: 108, scope: !4582)
!4595 = !DILocation(line: 2676, column: 196, scope: !4596)
!4596 = !DILexicalBlockFile(scope: !694, file: !450, discriminator: 4)
!4597 = !DILocation(line: 2676, column: 196, scope: !705)
!4598 = !DILocation(line: 2676, column: 196, scope: !4599)
!4599 = !DILexicalBlockFile(scope: !705, file: !450, discriminator: 5)
!4600 = !DILocation(line: 2677, column: 12, scope: !694)
!4601 = !DILocation(line: 2677, column: 5, scope: !694)
!4602 = !DILocation(line: 2678, column: 1, scope: !694)
!4603 = !DILocation(line: 2681, column: 30, scope: !872)
!4604 = !DILocation(line: 2681, column: 46, scope: !872)
!4605 = !DILocation(line: 2683, column: 5, scope: !872)
!4606 = !DILocation(line: 2683, column: 15, scope: !872)
!4607 = !DILocation(line: 2685, column: 27, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !872, file: !450, line: 2685, column: 9)
!4609 = !DILocation(line: 2685, column: 10, scope: !4608)
!4610 = !DILocation(line: 2685, column: 9, scope: !872)
!4611 = !DILocation(line: 2686, column: 9, scope: !4608)
!4612 = !DILocation(line: 2689, column: 29, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !872, file: !450, line: 2689, column: 9)
!4614 = !DILocation(line: 2689, column: 9, scope: !4613)
!4615 = !DILocation(line: 2689, column: 37, scope: !4613)
!4616 = !DILocation(line: 2689, column: 9, scope: !872)
!4617 = !DILocation(line: 2690, column: 41, scope: !4613)
!4618 = !DILocation(line: 2690, column: 29, scope: !4613)
!4619 = !DILocation(line: 2690, column: 16, scope: !4613)
!4620 = !DILocation(line: 2690, column: 9, scope: !4613)
!4621 = !DILocation(line: 2692, column: 47, scope: !872)
!4622 = !DILocation(line: 2692, column: 35, scope: !872)
!4623 = !DILocation(line: 2692, column: 74, scope: !872)
!4624 = !DILocation(line: 2692, column: 12, scope: !872)
!4625 = !DILocation(line: 2692, column: 5, scope: !872)
!4626 = !DILocation(line: 2693, column: 1, scope: !872)
!4627 = !DILocation(line: 2743, column: 33, scope: !879)
!4628 = !DILocation(line: 2745, column: 51, scope: !879)
!4629 = !DILocation(line: 2745, column: 58, scope: !879)
!4630 = !DILocation(line: 2745, column: 32, scope: !879)
!4631 = !DILocation(line: 2745, column: 66, scope: !879)
!4632 = !DILocation(line: 2745, column: 93, scope: !879)
!4633 = !DILocation(line: 2745, column: 100, scope: !879)
!4634 = !DILocation(line: 2745, column: 74, scope: !879)
!4635 = !DILocation(line: 2745, column: 72, scope: !879)
!4636 = !DILocation(line: 2746, column: 50, scope: !879)
!4637 = !DILocation(line: 2746, column: 57, scope: !879)
!4638 = !DILocation(line: 2746, column: 31, scope: !879)
!4639 = !DILocation(line: 2746, column: 30, scope: !879)
!4640 = !DILocation(line: 2747, column: 50, scope: !879)
!4641 = !DILocation(line: 2747, column: 57, scope: !879)
!4642 = !DILocation(line: 2747, column: 31, scope: !879)
!4643 = !DILocation(line: 2747, column: 30, scope: !879)
!4644 = !DILocation(line: 2745, column: 12, scope: !879)
!4645 = !DILocation(line: 2745, column: 5, scope: !879)
!4646 = !DILocation(line: 2706, column: 35, scope: !899)
!4647 = !DILocation(line: 2708, column: 5, scope: !899)
!4648 = !DILocation(line: 2708, column: 9, scope: !899)
!4649 = !DILocation(line: 2708, column: 37, scope: !899)
!4650 = !DILocation(line: 2708, column: 44, scope: !899)
!4651 = !DILocation(line: 2708, column: 18, scope: !899)
!4652 = !DILocation(line: 2708, column: 52, scope: !899)
!4653 = !DILocation(line: 2708, column: 79, scope: !899)
!4654 = !DILocation(line: 2708, column: 86, scope: !899)
!4655 = !DILocation(line: 2708, column: 60, scope: !899)
!4656 = !DILocation(line: 2708, column: 58, scope: !899)
!4657 = !DILocation(line: 2709, column: 5, scope: !899)
!4658 = !DILocation(line: 2709, column: 9, scope: !899)
!4659 = !DILocation(line: 2709, column: 41, scope: !899)
!4660 = !DILocation(line: 2709, column: 24, scope: !899)
!4661 = !DILocation(line: 2710, column: 5, scope: !899)
!4662 = !DILocation(line: 2710, column: 9, scope: !899)
!4663 = !DILocation(line: 2710, column: 28, scope: !899)
!4664 = !DILocation(line: 2710, column: 54, scope: !899)
!4665 = !DILocation(line: 2710, column: 61, scope: !899)
!4666 = !DILocation(line: 2710, column: 35, scope: !899)
!4667 = !DILocation(line: 2710, column: 34, scope: !899)
!4668 = !DILocation(line: 2710, column: 91, scope: !899)
!4669 = !DILocation(line: 2710, column: 98, scope: !899)
!4670 = !DILocation(line: 2710, column: 72, scope: !899)
!4671 = !DILocation(line: 2710, column: 71, scope: !899)
!4672 = !DILocation(line: 2710, column: 17, scope: !899)
!4673 = !DILocation(line: 2711, column: 5, scope: !899)
!4674 = !DILocation(line: 2711, column: 9, scope: !899)
!4675 = !DILocation(line: 2712, column: 5, scope: !899)
!4676 = !DILocation(line: 2712, column: 9, scope: !899)
!4677 = !DILocation(line: 2714, column: 19, scope: !899)
!4678 = !DILocation(line: 2714, column: 27, scope: !899)
!4679 = !DILocation(line: 2714, column: 25, scope: !899)
!4680 = !DILocation(line: 2714, column: 12, scope: !899)
!4681 = !DILocation(line: 2714, column: 10, scope: !899)
!4682 = !DILocation(line: 2715, column: 9, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !899, file: !450, line: 2715, column: 9)
!4684 = !DILocation(line: 2715, column: 14, scope: !4683)
!4685 = !DILocation(line: 2715, column: 9, scope: !899)
!4686 = !DILocation(line: 2716, column: 9, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4683, file: !450, line: 2715, column: 19)
!4688 = !DILocation(line: 2717, column: 41, scope: !4687)
!4689 = !DILocation(line: 2717, column: 24, scope: !4687)
!4690 = !DILocation(line: 2717, column: 22, scope: !4687)
!4691 = !DILocation(line: 2718, column: 23, scope: !4687)
!4692 = !DILocation(line: 2718, column: 31, scope: !4687)
!4693 = !DILocation(line: 2718, column: 29, scope: !4687)
!4694 = !DILocation(line: 2718, column: 16, scope: !4687)
!4695 = !DILocation(line: 2718, column: 14, scope: !4687)
!4696 = !DILocation(line: 2719, column: 5, scope: !4687)
!4697 = !DILocation(line: 2720, column: 14, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4683, file: !450, line: 2720, column: 14)
!4699 = !DILocation(line: 2720, column: 19, scope: !4698)
!4700 = !DILocation(line: 2720, column: 25, scope: !4698)
!4701 = !DILocation(line: 2720, column: 28, scope: !4702)
!4702 = !DILexicalBlockFile(scope: !4698, file: !450, discriminator: 1)
!4703 = !DILocation(line: 2720, column: 54, scope: !4698)
!4704 = !DILocation(line: 2720, column: 59, scope: !4698)
!4705 = !DILocation(line: 2720, column: 37, scope: !4698)
!4706 = !DILocation(line: 2720, column: 34, scope: !4698)
!4707 = !DILocation(line: 2720, column: 14, scope: !4683)
!4708 = !DILocation(line: 2721, column: 9, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4698, file: !450, line: 2720, column: 65)
!4710 = !DILocation(line: 2722, column: 14, scope: !4709)
!4711 = !DILocation(line: 2723, column: 5, scope: !4709)
!4712 = !DILocation(line: 2724, column: 33, scope: !899)
!4713 = !DILocation(line: 2724, column: 39, scope: !899)
!4714 = !DILocation(line: 2724, column: 44, scope: !899)
!4715 = !DILocation(line: 2724, column: 49, scope: !899)
!4716 = !DILocation(line: 2724, column: 53, scope: !899)
!4717 = !DILocation(line: 2724, column: 12, scope: !899)
!4718 = !DILocation(line: 2725, column: 1, scope: !899)
!4719 = !DILocation(line: 2724, column: 5, scope: !899)
!4720 = !DILocation(line: 2635, column: 33, scope: !913)
!4721 = !DILocation(line: 2638, column: 54, scope: !913)
!4722 = !DILocation(line: 2638, column: 61, scope: !913)
!4723 = !DILocation(line: 2638, column: 35, scope: !913)
!4724 = !DILocation(line: 2638, column: 69, scope: !913)
!4725 = !DILocation(line: 2638, column: 96, scope: !913)
!4726 = !DILocation(line: 2638, column: 103, scope: !913)
!4727 = !DILocation(line: 2638, column: 77, scope: !913)
!4728 = !DILocation(line: 2638, column: 75, scope: !913)
!4729 = !DILocation(line: 2638, column: 133, scope: !913)
!4730 = !DILocation(line: 2638, column: 140, scope: !913)
!4731 = !DILocation(line: 2638, column: 114, scope: !913)
!4732 = !DILocation(line: 2638, column: 113, scope: !913)
!4733 = !DILocation(line: 2638, column: 170, scope: !913)
!4734 = !DILocation(line: 2638, column: 177, scope: !913)
!4735 = !DILocation(line: 2638, column: 151, scope: !913)
!4736 = !DILocation(line: 2638, column: 150, scope: !913)
!4737 = !DILocation(line: 2637, column: 12, scope: !913)
!4738 = !DILocation(line: 2637, column: 5, scope: !913)
!4739 = !DILocation(line: 2698, column: 34, scope: !916)
!4740 = !DILocation(line: 2700, column: 5, scope: !916)
!4741 = !DILocation(line: 2700, column: 9, scope: !916)
!4742 = !DILocation(line: 2700, column: 44, scope: !916)
!4743 = !DILocation(line: 2700, column: 51, scope: !916)
!4744 = !DILocation(line: 2700, column: 25, scope: !916)
!4745 = !DILocation(line: 2700, column: 59, scope: !916)
!4746 = !DILocation(line: 2700, column: 86, scope: !916)
!4747 = !DILocation(line: 2700, column: 93, scope: !916)
!4748 = !DILocation(line: 2700, column: 67, scope: !916)
!4749 = !DILocation(line: 2700, column: 65, scope: !916)
!4750 = !DILocation(line: 2700, column: 123, scope: !916)
!4751 = !DILocation(line: 2700, column: 130, scope: !916)
!4752 = !DILocation(line: 2700, column: 104, scope: !916)
!4753 = !DILocation(line: 2700, column: 103, scope: !916)
!4754 = !DILocation(line: 2700, column: 160, scope: !916)
!4755 = !DILocation(line: 2700, column: 167, scope: !916)
!4756 = !DILocation(line: 2700, column: 141, scope: !916)
!4757 = !DILocation(line: 2700, column: 140, scope: !916)
!4758 = !DILocation(line: 2700, column: 15, scope: !916)
!4759 = !DILocation(line: 2702, column: 28, scope: !916)
!4760 = !DILocation(line: 2702, column: 32, scope: !916)
!4761 = !DILocation(line: 2702, column: 12, scope: !916)
!4762 = !DILocation(line: 2703, column: 1, scope: !916)
!4763 = !DILocation(line: 2702, column: 5, scope: !916)
!4764 = !DILocation(line: 2791, column: 33, scope: !920)
!4765 = !DILocation(line: 2793, column: 60, scope: !920)
!4766 = !DILocation(line: 2793, column: 67, scope: !920)
!4767 = !DILocation(line: 2793, column: 41, scope: !920)
!4768 = !DILocation(line: 2793, column: 75, scope: !920)
!4769 = !DILocation(line: 2793, column: 102, scope: !920)
!4770 = !DILocation(line: 2793, column: 109, scope: !920)
!4771 = !DILocation(line: 2793, column: 83, scope: !920)
!4772 = !DILocation(line: 2793, column: 81, scope: !920)
!4773 = !DILocation(line: 2793, column: 139, scope: !920)
!4774 = !DILocation(line: 2793, column: 146, scope: !920)
!4775 = !DILocation(line: 2793, column: 120, scope: !920)
!4776 = !DILocation(line: 2793, column: 119, scope: !920)
!4777 = !DILocation(line: 2794, column: 58, scope: !920)
!4778 = !DILocation(line: 2794, column: 65, scope: !920)
!4779 = !DILocation(line: 2794, column: 39, scope: !920)
!4780 = !DILocation(line: 2794, column: 38, scope: !920)
!4781 = !DILocation(line: 2793, column: 28, scope: !920)
!4782 = !DILocation(line: 2793, column: 12, scope: !920)
!4783 = !DILocation(line: 2793, column: 5, scope: !920)
!4784 = !DILocation(line: 2798, column: 31, scope: !923)
!4785 = !DILocation(line: 2800, column: 5, scope: !923)
!4786 = !DILocation(line: 2800, column: 9, scope: !923)
!4787 = !DILocation(line: 2800, column: 44, scope: !923)
!4788 = !DILocation(line: 2800, column: 51, scope: !923)
!4789 = !DILocation(line: 2800, column: 25, scope: !923)
!4790 = !DILocation(line: 2800, column: 59, scope: !923)
!4791 = !DILocation(line: 2800, column: 86, scope: !923)
!4792 = !DILocation(line: 2800, column: 93, scope: !923)
!4793 = !DILocation(line: 2800, column: 67, scope: !923)
!4794 = !DILocation(line: 2800, column: 65, scope: !923)
!4795 = !DILocation(line: 2800, column: 123, scope: !923)
!4796 = !DILocation(line: 2800, column: 130, scope: !923)
!4797 = !DILocation(line: 2800, column: 104, scope: !923)
!4798 = !DILocation(line: 2800, column: 103, scope: !923)
!4799 = !DILocation(line: 2800, column: 160, scope: !923)
!4800 = !DILocation(line: 2800, column: 167, scope: !923)
!4801 = !DILocation(line: 2800, column: 141, scope: !923)
!4802 = !DILocation(line: 2800, column: 140, scope: !923)
!4803 = !DILocation(line: 2800, column: 15, scope: !923)
!4804 = !DILocation(line: 2802, column: 28, scope: !923)
!4805 = !DILocation(line: 2802, column: 12, scope: !923)
!4806 = !DILocation(line: 2803, column: 1, scope: !923)
!4807 = !DILocation(line: 2802, column: 5, scope: !923)
!4808 = !DILocation(line: 2752, column: 31, scope: !927)
!4809 = !DILocation(line: 2752, column: 47, scope: !927)
!4810 = !DILocation(line: 2752, column: 63, scope: !927)
!4811 = !DILocation(line: 2754, column: 5, scope: !927)
!4812 = !DILocation(line: 2754, column: 15, scope: !927)
!4813 = !DILocation(line: 2755, column: 5, scope: !927)
!4814 = !DILocation(line: 2755, column: 15, scope: !927)
!4815 = !DILocation(line: 2756, column: 5, scope: !927)
!4816 = !DILocation(line: 2756, column: 9, scope: !927)
!4817 = !DILocation(line: 2756, column: 37, scope: !927)
!4818 = !DILocation(line: 2756, column: 44, scope: !927)
!4819 = !DILocation(line: 2756, column: 18, scope: !927)
!4820 = !DILocation(line: 2756, column: 52, scope: !927)
!4821 = !DILocation(line: 2756, column: 79, scope: !927)
!4822 = !DILocation(line: 2756, column: 86, scope: !927)
!4823 = !DILocation(line: 2756, column: 60, scope: !927)
!4824 = !DILocation(line: 2756, column: 58, scope: !927)
!4825 = !DILocation(line: 2757, column: 5, scope: !927)
!4826 = !DILocation(line: 2757, column: 9, scope: !927)
!4827 = !DILocation(line: 2757, column: 37, scope: !927)
!4828 = !DILocation(line: 2757, column: 44, scope: !927)
!4829 = !DILocation(line: 2757, column: 18, scope: !927)
!4830 = !DILocation(line: 2757, column: 17, scope: !927)
!4831 = !DILocation(line: 2758, column: 5, scope: !927)
!4832 = !DILocation(line: 2758, column: 9, scope: !927)
!4833 = !DILocation(line: 2758, column: 35, scope: !927)
!4834 = !DILocation(line: 2758, column: 42, scope: !927)
!4835 = !DILocation(line: 2758, column: 16, scope: !927)
!4836 = !DILocation(line: 2758, column: 15, scope: !927)
!4837 = !DILocation(line: 2760, column: 39, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !927, file: !450, line: 2760, column: 9)
!4839 = !DILocation(line: 2760, column: 45, scope: !4838)
!4840 = !DILocation(line: 2760, column: 11, scope: !4838)
!4841 = !DILocation(line: 2760, column: 9, scope: !927)
!4842 = !DILocation(line: 2762, column: 9, scope: !4838)
!4843 = !DILocation(line: 2763, column: 34, scope: !927)
!4844 = !DILocation(line: 2763, column: 40, scope: !927)
!4845 = !DILocation(line: 2763, column: 47, scope: !927)
!4846 = !DILocation(line: 2763, column: 13, scope: !927)
!4847 = !DILocation(line: 2763, column: 11, scope: !927)
!4848 = !DILocation(line: 2764, column: 9, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !927, file: !450, line: 2764, column: 9)
!4850 = !DILocation(line: 2764, column: 15, scope: !4849)
!4851 = !DILocation(line: 2764, column: 9, scope: !927)
!4852 = !DILocation(line: 2765, column: 9, scope: !4849)
!4853 = !DILocation(line: 2766, column: 36, scope: !927)
!4854 = !DILocation(line: 2766, column: 24, scope: !927)
!4855 = !DILocation(line: 2766, column: 44, scope: !927)
!4856 = !DILocation(line: 2766, column: 54, scope: !927)
!4857 = !DILocation(line: 2766, column: 13, scope: !927)
!4858 = !DILocation(line: 2766, column: 11, scope: !927)
!4859 = !DILocation(line: 2767, column: 5, scope: !927)
!4860 = !DILocation(line: 2767, column: 10, scope: !4861)
!4861 = !DILexicalBlockFile(scope: !938, file: !450, discriminator: 1)
!4862 = !DILocation(line: 2767, column: 20, scope: !938)
!4863 = !DILocation(line: 2767, column: 50, scope: !938)
!4864 = !DILocation(line: 2767, column: 66, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !938, file: !450, line: 2767, column: 63)
!4866 = !DILocation(line: 2767, column: 83, scope: !4865)
!4867 = !DILocation(line: 2767, column: 63, scope: !4865)
!4868 = !DILocation(line: 2767, column: 93, scope: !4865)
!4869 = !DILocation(line: 2767, column: 63, scope: !938)
!4870 = !DILocation(line: 2767, column: 63, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !938, file: !450, discriminator: 2)
!4872 = !DILocation(line: 2767, column: 124, scope: !4873)
!4873 = !DILexicalBlockFile(scope: !4865, file: !450, discriminator: 3)
!4874 = !DILocation(line: 2767, column: 142, scope: !4865)
!4875 = !DILocation(line: 2767, column: 152, scope: !4865)
!4876 = !DILocation(line: 2767, column: 177, scope: !4865)
!4877 = !DILocation(line: 2767, column: 108, scope: !4865)
!4878 = !DILocation(line: 2767, column: 196, scope: !4879)
!4879 = !DILexicalBlockFile(scope: !927, file: !450, discriminator: 4)
!4880 = !DILocation(line: 2767, column: 196, scope: !938)
!4881 = !DILocation(line: 2767, column: 196, scope: !4882)
!4882 = !DILexicalBlockFile(scope: !938, file: !450, discriminator: 5)
!4883 = !DILocation(line: 2768, column: 12, scope: !927)
!4884 = !DILocation(line: 2768, column: 5, scope: !927)
!4885 = !DILocation(line: 2769, column: 1, scope: !927)
!4886 = !DILocation(line: 2818, column: 30, scope: !939)
!4887 = !DILocation(line: 2818, column: 46, scope: !939)
!4888 = !DILocation(line: 2820, column: 48, scope: !939)
!4889 = !DILocation(line: 2820, column: 36, scope: !939)
!4890 = !DILocation(line: 2820, column: 56, scope: !939)
!4891 = !DILocation(line: 2820, column: 80, scope: !939)
!4892 = !DILocation(line: 2820, column: 66, scope: !939)
!4893 = !DILocation(line: 2820, column: 12, scope: !939)
!4894 = !DILocation(line: 2820, column: 5, scope: !939)
!4895 = !DILocation(line: 2457, column: 34, scope: !630)
!4896 = !DILocation(line: 2457, column: 49, scope: !630)
!4897 = !DILocation(line: 2459, column: 5, scope: !630)
!4898 = !DILocation(line: 2459, column: 16, scope: !630)
!4899 = !DILocation(line: 2460, column: 5, scope: !630)
!4900 = !DILocation(line: 2460, column: 12, scope: !630)
!4901 = !DILocation(line: 2462, column: 32, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !630, file: !450, line: 2462, column: 9)
!4903 = !DILocation(line: 2462, column: 9, scope: !4902)
!4904 = !DILocation(line: 2462, column: 61, scope: !4902)
!4905 = !DILocation(line: 2462, column: 9, scope: !630)
!4906 = !DILocation(line: 2463, column: 9, scope: !4902)
!4907 = !DILocation(line: 2465, column: 10, scope: !630)
!4908 = !DILocation(line: 2465, column: 8, scope: !630)
!4909 = !DILocation(line: 2466, column: 9, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !630, file: !450, line: 2466, column: 9)
!4911 = !DILocation(line: 2466, column: 12, scope: !4910)
!4912 = !DILocation(line: 2466, column: 9, scope: !630)
!4913 = !DILocation(line: 2469, column: 15, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !450, line: 2469, column: 13)
!4915 = distinct !DILexicalBlock(scope: !4910, file: !450, line: 2466, column: 27)
!4916 = !DILocation(line: 2469, column: 14, scope: !4914)
!4917 = !DILocation(line: 2469, column: 36, scope: !4914)
!4918 = !DILocation(line: 2469, column: 13, scope: !4915)
!4919 = !DILocation(line: 2470, column: 15, scope: !4914)
!4920 = !DILocation(line: 2470, column: 36, scope: !4914)
!4921 = !DILocation(line: 2470, column: 13, scope: !4914)
!4922 = !DILocation(line: 2472, column: 28, scope: !4915)
!4923 = !DILocation(line: 2472, column: 9, scope: !4915)
!4924 = !DILocation(line: 2473, column: 9, scope: !4915)
!4925 = !DILocation(line: 2476, column: 34, scope: !630)
!4926 = !DILocation(line: 2477, column: 34, scope: !630)
!4927 = !DILocation(line: 2477, column: 38, scope: !630)
!4928 = !{!4929, !2608, i64 20}
!4929 = !{!"tm", !2608, i64 0, !2608, i64 4, !2608, i64 8, !2608, i64 12, !2608, i64 16, !2608, i64 20, !2608, i64 24, !2608, i64 28, !2608, i64 32, !2607, i64 40, !2564, i64 48}
!4930 = !DILocation(line: 2477, column: 46, scope: !630)
!4931 = !DILocation(line: 2478, column: 34, scope: !630)
!4932 = !DILocation(line: 2478, column: 38, scope: !630)
!4933 = !{!4929, !2608, i64 16}
!4934 = !DILocation(line: 2478, column: 45, scope: !630)
!4935 = !DILocation(line: 2479, column: 34, scope: !630)
!4936 = !DILocation(line: 2479, column: 38, scope: !630)
!4937 = !{!4929, !2608, i64 12}
!4938 = !DILocation(line: 2476, column: 12, scope: !630)
!4939 = !DILocation(line: 2476, column: 5, scope: !630)
!4940 = !DILocation(line: 2480, column: 1, scope: !630)
!4941 = !DILocation(line: 1314, column: 5, scope: !669)
!4942 = !DILocation(line: 1314, column: 15, scope: !669)
!4943 = !DILocation(line: 1315, column: 5, scope: !669)
!4944 = !DILocation(line: 1315, column: 15, scope: !669)
!4945 = !DILocation(line: 1315, column: 22, scope: !669)
!4946 = !DILocation(line: 1317, column: 9, scope: !676)
!4947 = !DILocation(line: 1317, column: 14, scope: !676)
!4948 = !DILocation(line: 1317, column: 9, scope: !669)
!4949 = !DILocation(line: 1320, column: 41, scope: !675)
!4950 = !DILocation(line: 1320, column: 18, scope: !675)
!4951 = !DILocation(line: 1320, column: 16, scope: !675)
!4952 = !DILocation(line: 1321, column: 9, scope: !675)
!4953 = !DILocation(line: 1321, column: 14, scope: !4954)
!4954 = !DILexicalBlockFile(scope: !674, file: !450, discriminator: 1)
!4955 = !DILocation(line: 1321, column: 24, scope: !674)
!4956 = !DILocation(line: 1321, column: 54, scope: !674)
!4957 = !DILocation(line: 1321, column: 69, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !674, file: !450, line: 1321, column: 66)
!4959 = !DILocation(line: 1321, column: 86, scope: !4958)
!4960 = !DILocation(line: 1321, column: 66, scope: !4958)
!4961 = !DILocation(line: 1321, column: 96, scope: !4958)
!4962 = !DILocation(line: 1321, column: 66, scope: !674)
!4963 = !DILocation(line: 1321, column: 66, scope: !4964)
!4964 = !DILexicalBlockFile(scope: !674, file: !450, discriminator: 2)
!4965 = !DILocation(line: 1321, column: 127, scope: !4966)
!4966 = !DILexicalBlockFile(scope: !4958, file: !450, discriminator: 3)
!4967 = !DILocation(line: 1321, column: 145, scope: !4958)
!4968 = !DILocation(line: 1321, column: 155, scope: !4958)
!4969 = !DILocation(line: 1321, column: 180, scope: !4958)
!4970 = !DILocation(line: 1321, column: 111, scope: !4958)
!4971 = !DILocation(line: 1321, column: 199, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !675, file: !450, discriminator: 4)
!4973 = !DILocation(line: 1321, column: 199, scope: !674)
!4974 = !DILocation(line: 1321, column: 199, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !674, file: !450, discriminator: 5)
!4976 = !DILocation(line: 1322, column: 5, scope: !675)
!4977 = !DILocation(line: 1323, column: 12, scope: !669)
!4978 = !DILocation(line: 1324, column: 1, scope: !669)
!4979 = !DILocation(line: 1323, column: 5, scope: !669)
!4980 = !DILocation(line: 1004, column: 31, scope: !680)
!4981 = !DILocation(line: 1004, column: 41, scope: !680)
!4982 = !DILocation(line: 1004, column: 52, scope: !680)
!4983 = !DILocation(line: 1004, column: 65, scope: !680)
!4984 = !DILocation(line: 1014, column: 5, scope: !680)
!4985 = !DILocation(line: 1014, column: 9, scope: !680)
!4986 = !DILocation(line: 1014, column: 45, scope: !680)
!4987 = !DILocation(line: 1014, column: 52, scope: !680)
!4988 = !DILocation(line: 1014, column: 26, scope: !680)
!4989 = !DILocation(line: 1014, column: 60, scope: !680)
!4990 = !DILocation(line: 1014, column: 87, scope: !680)
!4991 = !DILocation(line: 1014, column: 94, scope: !680)
!4992 = !DILocation(line: 1014, column: 68, scope: !680)
!4993 = !DILocation(line: 1014, column: 66, scope: !680)
!4994 = !DILocation(line: 1014, column: 124, scope: !680)
!4995 = !DILocation(line: 1014, column: 131, scope: !680)
!4996 = !DILocation(line: 1014, column: 105, scope: !680)
!4997 = !DILocation(line: 1014, column: 104, scope: !680)
!4998 = !DILocation(line: 1014, column: 161, scope: !680)
!4999 = !DILocation(line: 1014, column: 168, scope: !680)
!5000 = !DILocation(line: 1014, column: 142, scope: !680)
!5001 = !DILocation(line: 1014, column: 141, scope: !680)
!5002 = !DILocation(line: 1014, column: 16, scope: !680)
!5003 = !DILocation(line: 1017, column: 42, scope: !680)
!5004 = !DILocation(line: 1017, column: 33, scope: !680)
!5005 = !DILocation(line: 1017, column: 80, scope: !680)
!5006 = !DILocation(line: 1017, column: 87, scope: !680)
!5007 = !DILocation(line: 1017, column: 61, scope: !680)
!5008 = !DILocation(line: 1017, column: 60, scope: !680)
!5009 = !DILocation(line: 1017, column: 95, scope: !680)
!5010 = !DILocation(line: 1017, column: 49, scope: !680)
!5011 = !DILocation(line: 1018, column: 53, scope: !680)
!5012 = !DILocation(line: 1018, column: 60, scope: !680)
!5013 = !DILocation(line: 1018, column: 34, scope: !680)
!5014 = !DILocation(line: 1018, column: 33, scope: !680)
!5015 = !DILocation(line: 1018, column: 70, scope: !680)
!5016 = !DILocation(line: 1018, column: 77, scope: !680)
!5017 = !DILocation(line: 1018, column: 86, scope: !680)
!5018 = !DILocation(line: 1019, column: 54, scope: !680)
!5019 = !DILocation(line: 1019, column: 61, scope: !680)
!5020 = !DILocation(line: 1019, column: 35, scope: !680)
!5021 = !DILocation(line: 1019, column: 69, scope: !680)
!5022 = !DILocation(line: 1019, column: 96, scope: !680)
!5023 = !DILocation(line: 1019, column: 103, scope: !680)
!5024 = !DILocation(line: 1019, column: 77, scope: !680)
!5025 = !DILocation(line: 1019, column: 75, scope: !680)
!5026 = !DILocation(line: 1016, column: 12, scope: !680)
!5027 = !DILocation(line: 1020, column: 1, scope: !680)
!5028 = !DILocation(line: 1016, column: 5, scope: !680)
!5029 = !DILocation(line: 345, column: 13, scope: !689)
!5030 = !DILocation(line: 345, column: 23, scope: !689)
!5031 = !DILocation(line: 345, column: 34, scope: !689)
!5032 = !DILocation(line: 347, column: 24, scope: !689)
!5033 = !DILocation(line: 347, column: 30, scope: !689)
!5034 = !DILocation(line: 347, column: 37, scope: !689)
!5035 = !DILocation(line: 347, column: 13, scope: !689)
!5036 = !DILocation(line: 347, column: 42, scope: !689)
!5037 = !DILocation(line: 347, column: 47, scope: !689)
!5038 = !DILocation(line: 347, column: 5, scope: !689)
!5039 = !DILocation(line: 1142, column: 25, scope: !706)
!5040 = !DILocation(line: 1142, column: 43, scope: !706)
!5041 = !DILocation(line: 1142, column: 61, scope: !706)
!5042 = !DILocation(line: 1143, column: 25, scope: !706)
!5043 = !DILocation(line: 1145, column: 5, scope: !706)
!5044 = !DILocation(line: 1145, column: 15, scope: !706)
!5045 = !DILocation(line: 1147, column: 5, scope: !706)
!5046 = !DILocation(line: 1147, column: 15, scope: !706)
!5047 = !DILocation(line: 1148, column: 5, scope: !706)
!5048 = !DILocation(line: 1148, column: 15, scope: !706)
!5049 = !DILocation(line: 1149, column: 5, scope: !706)
!5050 = !DILocation(line: 1149, column: 15, scope: !706)
!5051 = !DILocation(line: 1151, column: 5, scope: !706)
!5052 = !DILocation(line: 1151, column: 17, scope: !706)
!5053 = !DILocation(line: 1152, column: 5, scope: !706)
!5054 = !DILocation(line: 1152, column: 16, scope: !706)
!5055 = !DILocation(line: 1153, column: 5, scope: !706)
!5056 = !DILocation(line: 1153, column: 10, scope: !706)
!5057 = !DILocation(line: 1155, column: 5, scope: !706)
!5058 = !DILocation(line: 1155, column: 15, scope: !706)
!5059 = !DILocation(line: 1156, column: 5, scope: !706)
!5060 = !DILocation(line: 1156, column: 11, scope: !706)
!5061 = !DILocation(line: 1157, column: 5, scope: !706)
!5062 = !DILocation(line: 1157, column: 12, scope: !706)
!5063 = !DILocation(line: 1159, column: 5, scope: !706)
!5064 = !DILocation(line: 1159, column: 12, scope: !706)
!5065 = !DILocation(line: 1161, column: 5, scope: !706)
!5066 = !DILocation(line: 1161, column: 17, scope: !706)
!5067 = !DILocation(line: 1162, column: 5, scope: !706)
!5068 = !DILocation(line: 1162, column: 16, scope: !706)
!5069 = !DILocation(line: 1167, column: 35, scope: !706)
!5070 = !DILocation(line: 1167, column: 11, scope: !706)
!5071 = !DILocation(line: 1167, column: 9, scope: !706)
!5072 = !DILocation(line: 1168, column: 10, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1168, column: 9)
!5074 = !DILocation(line: 1168, column: 9, scope: !706)
!5075 = !DILocation(line: 1169, column: 9, scope: !5073)
!5076 = !DILocation(line: 1175, column: 9, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1175, column: 9)
!5078 = !{!2607, !2607, i64 0}
!5079 = !DILocation(line: 1175, column: 14, scope: !5077)
!5080 = !DILocation(line: 1175, column: 9, scope: !706)
!5081 = !DILocation(line: 1176, column: 9, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5077, file: !450, line: 1175, column: 32)
!5083 = !DILocation(line: 1177, column: 9, scope: !5082)
!5084 = !DILocation(line: 1180, column: 16, scope: !706)
!5085 = !DILocation(line: 1180, column: 21, scope: !706)
!5086 = !DILocation(line: 1180, column: 14, scope: !706)
!5087 = !DILocation(line: 1181, column: 52, scope: !706)
!5088 = !DILocation(line: 1181, column: 14, scope: !706)
!5089 = !DILocation(line: 1181, column: 12, scope: !706)
!5090 = !DILocation(line: 1182, column: 9, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1182, column: 9)
!5092 = !DILocation(line: 1182, column: 16, scope: !5091)
!5093 = !DILocation(line: 1182, column: 9, scope: !706)
!5094 = !DILocation(line: 1182, column: 31, scope: !5095)
!5095 = !DILexicalBlockFile(scope: !5091, file: !450, discriminator: 1)
!5096 = !DILocation(line: 1183, column: 29, scope: !706)
!5097 = !DILocation(line: 1183, column: 12, scope: !706)
!5098 = !DILocation(line: 1183, column: 10, scope: !706)
!5099 = !DILocation(line: 1184, column: 13, scope: !706)
!5100 = !DILocation(line: 1186, column: 5, scope: !706)
!5101 = !DILocation(line: 1186, column: 22, scope: !5102)
!5102 = !DILexicalBlockFile(scope: !5103, file: !450, discriminator: 2)
!5103 = !DILexicalBlockFile(scope: !706, file: !450, discriminator: 1)
!5104 = !DILocation(line: 1186, column: 18, scope: !706)
!5105 = !DILocation(line: 1186, column: 16, scope: !706)
!5106 = !DILocation(line: 1186, column: 12, scope: !706)
!5107 = !DILocation(line: 1186, column: 26, scope: !706)
!5108 = !DILocation(line: 1187, column: 13, scope: !733)
!5109 = !DILocation(line: 1187, column: 16, scope: !733)
!5110 = !DILocation(line: 1187, column: 13, scope: !734)
!5111 = !DILocation(line: 1188, column: 25, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !733, file: !450, line: 1187, column: 24)
!5113 = !DILocation(line: 1188, column: 29, scope: !5112)
!5114 = !DILocation(line: 1188, column: 23, scope: !5112)
!5115 = !DILocation(line: 1189, column: 23, scope: !5112)
!5116 = !DILocation(line: 1190, column: 9, scope: !5112)
!5117 = !DILocation(line: 1191, column: 28, scope: !732)
!5118 = !DILocation(line: 1191, column: 24, scope: !732)
!5119 = !DILocation(line: 1191, column: 22, scope: !732)
!5120 = !DILocation(line: 1191, column: 18, scope: !732)
!5121 = !DILocation(line: 1191, column: 32, scope: !732)
!5122 = !DILocation(line: 1191, column: 18, scope: !733)
!5123 = !DILocation(line: 1193, column: 29, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !732, file: !450, line: 1191, column: 41)
!5125 = !DILocation(line: 1193, column: 13, scope: !5124)
!5126 = !DILocation(line: 1195, column: 13, scope: !5124)
!5127 = !DILocation(line: 1198, column: 18, scope: !731)
!5128 = !DILocation(line: 1198, column: 21, scope: !731)
!5129 = !DILocation(line: 1198, column: 18, scope: !732)
!5130 = !DILocation(line: 1199, column: 17, scope: !729)
!5131 = !DILocation(line: 1199, column: 30, scope: !729)
!5132 = !DILocation(line: 1199, column: 17, scope: !730)
!5133 = !DILocation(line: 1201, column: 17, scope: !728)
!5134 = !DILocation(line: 1201, column: 22, scope: !728)
!5135 = !DILocation(line: 1202, column: 17, scope: !728)
!5136 = !DILocation(line: 1202, column: 27, scope: !728)
!5137 = !DILocation(line: 1202, column: 54, scope: !728)
!5138 = !DILocation(line: 1202, column: 36, scope: !728)
!5139 = !DILocation(line: 1203, column: 32, scope: !728)
!5140 = !DILocation(line: 1203, column: 30, scope: !728)
!5141 = !DILocation(line: 1204, column: 21, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !728, file: !450, line: 1204, column: 21)
!5143 = !DILocation(line: 1204, column: 34, scope: !5142)
!5144 = !DILocation(line: 1204, column: 21, scope: !728)
!5145 = !DILocation(line: 1204, column: 49, scope: !5142)
!5146 = !DILocation(line: 1205, column: 21, scope: !742)
!5147 = !DILocation(line: 1205, column: 28, scope: !742)
!5148 = !DILocation(line: 1205, column: 49, scope: !742)
!5149 = !DILocation(line: 1205, column: 52, scope: !5150)
!5150 = !DILexicalBlockFile(scope: !742, file: !450, discriminator: 1)
!5151 = !DILocation(line: 1205, column: 59, scope: !742)
!5152 = !DILocation(line: 1205, column: 21, scope: !728)
!5153 = !DILocation(line: 1207, column: 42, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !741, file: !450, line: 1207, column: 25)
!5155 = !DILocation(line: 1210, column: 42, scope: !5154)
!5156 = !DILocation(line: 1211, column: 42, scope: !5154)
!5157 = !DILocation(line: 1207, column: 25, scope: !5154)
!5158 = !DILocation(line: 1211, column: 53, scope: !5154)
!5159 = !DILocation(line: 1207, column: 25, scope: !741)
!5160 = !DILocation(line: 1212, column: 25, scope: !5154)
!5161 = !DILocation(line: 1213, column: 21, scope: !741)
!5162 = !DILocation(line: 1213, column: 26, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !740, file: !450, discriminator: 1)
!5164 = !DILocation(line: 1213, column: 36, scope: !740)
!5165 = !DILocation(line: 1213, column: 66, scope: !740)
!5166 = !DILocation(line: 1213, column: 89, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !740, file: !450, line: 1213, column: 86)
!5168 = !DILocation(line: 1213, column: 106, scope: !5167)
!5169 = !DILocation(line: 1213, column: 86, scope: !5167)
!5170 = !DILocation(line: 1213, column: 116, scope: !5167)
!5171 = !DILocation(line: 1213, column: 86, scope: !740)
!5172 = !DILocation(line: 1213, column: 86, scope: !5173)
!5173 = !DILexicalBlockFile(scope: !740, file: !450, discriminator: 2)
!5174 = !DILocation(line: 1213, column: 147, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !5167, file: !450, discriminator: 3)
!5176 = !DILocation(line: 1213, column: 165, scope: !5167)
!5177 = !DILocation(line: 1213, column: 175, scope: !5167)
!5178 = !DILocation(line: 1213, column: 200, scope: !5167)
!5179 = !DILocation(line: 1213, column: 131, scope: !5167)
!5180 = !DILocation(line: 1213, column: 219, scope: !5181)
!5181 = !DILexicalBlockFile(scope: !741, file: !450, discriminator: 4)
!5182 = !DILocation(line: 1213, column: 219, scope: !740)
!5183 = !DILocation(line: 1213, column: 219, scope: !5184)
!5184 = !DILexicalBlockFile(scope: !740, file: !450, discriminator: 5)
!5185 = !DILocation(line: 1215, column: 49, scope: !741)
!5186 = !DILocation(line: 1216, column: 55, scope: !741)
!5187 = !DILocation(line: 1216, column: 48, scope: !741)
!5188 = !DILocation(line: 1215, column: 23, scope: !741)
!5189 = !DILocation(line: 1214, column: 34, scope: !741)
!5190 = !DILocation(line: 1217, column: 25, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !741, file: !450, line: 1217, column: 25)
!5192 = !DILocation(line: 1217, column: 38, scope: !5191)
!5193 = !DILocation(line: 1217, column: 25, scope: !741)
!5194 = !DILocation(line: 1218, column: 25, scope: !5191)
!5195 = !DILocation(line: 1219, column: 17, scope: !741)
!5196 = !DILocation(line: 1220, column: 13, scope: !729)
!5197 = !DILocation(line: 1220, column: 13, scope: !5198)
!5198 = !DILexicalBlockFile(scope: !729, file: !450, discriminator: 1)
!5199 = !DILocation(line: 1220, column: 13, scope: !728)
!5200 = !DILocation(line: 1222, column: 60, scope: !730)
!5201 = !DILocation(line: 1222, column: 42, scope: !730)
!5202 = !DILocation(line: 1222, column: 76, scope: !730)
!5203 = !DILocation(line: 1222, column: 40, scope: !730)
!5204 = !DILocation(line: 1222, column: 23, scope: !730)
!5205 = !DILocation(line: 1223, column: 56, scope: !730)
!5206 = !DILocation(line: 1223, column: 41, scope: !730)
!5207 = !DILocation(line: 1223, column: 72, scope: !730)
!5208 = !DILocation(line: 1223, column: 23, scope: !730)
!5209 = !DILocation(line: 1224, column: 9, scope: !730)
!5210 = !DILocation(line: 1225, column: 18, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !731, file: !450, line: 1225, column: 18)
!5212 = !DILocation(line: 1225, column: 21, scope: !5211)
!5213 = !DILocation(line: 1225, column: 18, scope: !731)
!5214 = !DILocation(line: 1227, column: 17, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !450, line: 1227, column: 17)
!5216 = distinct !DILexicalBlock(scope: !5211, file: !450, line: 1225, column: 29)
!5217 = !DILocation(line: 1227, column: 30, scope: !5215)
!5218 = !DILocation(line: 1227, column: 17, scope: !5216)
!5219 = !DILocation(line: 1228, column: 50, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5215, file: !450, line: 1227, column: 45)
!5221 = !DILocation(line: 1229, column: 50, scope: !5220)
!5222 = !DILocation(line: 1228, column: 32, scope: !5220)
!5223 = !DILocation(line: 1228, column: 30, scope: !5220)
!5224 = !DILocation(line: 1230, column: 21, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5220, file: !450, line: 1230, column: 21)
!5226 = !DILocation(line: 1230, column: 34, scope: !5225)
!5227 = !DILocation(line: 1230, column: 21, scope: !5220)
!5228 = !DILocation(line: 1231, column: 21, scope: !5225)
!5229 = !DILocation(line: 1232, column: 13, scope: !5220)
!5230 = !DILocation(line: 1235, column: 49, scope: !5216)
!5231 = !DILocation(line: 1235, column: 25, scope: !5216)
!5232 = !DILocation(line: 1235, column: 23, scope: !5216)
!5233 = !DILocation(line: 1237, column: 17, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5216, file: !450, line: 1237, column: 17)
!5235 = !DILocation(line: 1237, column: 27, scope: !5234)
!5236 = !DILocation(line: 1237, column: 17, scope: !5216)
!5237 = !DILocation(line: 1238, column: 17, scope: !5234)
!5238 = !DILocation(line: 1239, column: 9, scope: !5216)
!5239 = !DILocation(line: 1240, column: 18, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5211, file: !450, line: 1240, column: 18)
!5241 = !DILocation(line: 1240, column: 21, scope: !5240)
!5242 = !DILocation(line: 1240, column: 18, scope: !5211)
!5243 = !DILocation(line: 1242, column: 17, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5245, file: !450, line: 1242, column: 17)
!5245 = distinct !DILexicalBlock(scope: !5240, file: !450, line: 1240, column: 29)
!5246 = !DILocation(line: 1242, column: 30, scope: !5244)
!5247 = !DILocation(line: 1242, column: 17, scope: !5245)
!5248 = !DILocation(line: 1243, column: 50, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5244, file: !450, line: 1242, column: 45)
!5250 = !DILocation(line: 1243, column: 32, scope: !5249)
!5251 = !DILocation(line: 1243, column: 30, scope: !5249)
!5252 = !DILocation(line: 1244, column: 21, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5249, file: !450, line: 1244, column: 21)
!5254 = !DILocation(line: 1244, column: 34, scope: !5253)
!5255 = !DILocation(line: 1244, column: 21, scope: !5249)
!5256 = !DILocation(line: 1245, column: 21, scope: !5253)
!5257 = !DILocation(line: 1246, column: 13, scope: !5249)
!5258 = !DILocation(line: 1249, column: 60, scope: !5245)
!5259 = !DILocation(line: 1249, column: 42, scope: !5245)
!5260 = !DILocation(line: 1249, column: 76, scope: !5245)
!5261 = !DILocation(line: 1249, column: 40, scope: !5245)
!5262 = !DILocation(line: 1249, column: 23, scope: !5245)
!5263 = !DILocation(line: 1250, column: 56, scope: !5245)
!5264 = !DILocation(line: 1250, column: 41, scope: !5245)
!5265 = !DILocation(line: 1250, column: 72, scope: !5245)
!5266 = !DILocation(line: 1250, column: 23, scope: !5245)
!5267 = !DILocation(line: 1251, column: 9, scope: !5245)
!5268 = !DILocation(line: 1254, column: 25, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5240, file: !450, line: 1252, column: 14)
!5270 = !DILocation(line: 1254, column: 29, scope: !5269)
!5271 = !DILocation(line: 1254, column: 23, scope: !5269)
!5272 = !DILocation(line: 1255, column: 23, scope: !5269)
!5273 = !DILocation(line: 1261, column: 13, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !734, file: !450, line: 1261, column: 13)
!5275 = !DILocation(line: 1261, column: 23, scope: !5274)
!5276 = !DILocation(line: 1261, column: 13, scope: !734)
!5277 = !DILocation(line: 1262, column: 13, scope: !5274)
!5278 = !DILocation(line: 1265, column: 9, scope: !734)
!5279 = !DILocation(line: 1265, column: 16, scope: !5280)
!5280 = !DILexicalBlockFile(scope: !5281, file: !450, discriminator: 2)
!5281 = !DILexicalBlockFile(scope: !734, file: !450, discriminator: 1)
!5282 = !DILocation(line: 1265, column: 26, scope: !734)
!5283 = !DILocation(line: 1265, column: 24, scope: !734)
!5284 = !DILocation(line: 1265, column: 38, scope: !734)
!5285 = !DILocation(line: 1265, column: 36, scope: !734)
!5286 = !DILocation(line: 1266, column: 17, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !450, line: 1266, column: 17)
!5288 = distinct !DILexicalBlock(scope: !734, file: !450, line: 1265, column: 48)
!5289 = !DILocation(line: 1266, column: 26, scope: !5287)
!5290 = !DILocation(line: 1266, column: 17, scope: !5288)
!5291 = !DILocation(line: 1267, column: 17, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5287, file: !450, line: 1266, column: 68)
!5293 = !DILocation(line: 1268, column: 17, scope: !5292)
!5294 = !DILocation(line: 1270, column: 22, scope: !5288)
!5295 = !DILocation(line: 1271, column: 42, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5288, file: !450, line: 1271, column: 17)
!5297 = !DILocation(line: 1271, column: 17, scope: !5296)
!5298 = !DILocation(line: 1271, column: 52, scope: !5296)
!5299 = !DILocation(line: 1271, column: 17, scope: !5288)
!5300 = !DILocation(line: 1272, column: 17, scope: !5296)
!5301 = !DILocation(line: 1273, column: 37, scope: !5288)
!5302 = !DILocation(line: 1273, column: 20, scope: !5288)
!5303 = !DILocation(line: 1273, column: 47, scope: !5288)
!5304 = !DILocation(line: 1273, column: 45, scope: !5288)
!5305 = !DILocation(line: 1273, column: 18, scope: !5288)
!5306 = !DILocation(line: 1275, column: 16, scope: !734)
!5307 = !DILocation(line: 1275, column: 22, scope: !734)
!5308 = !DILocation(line: 1275, column: 33, scope: !734)
!5309 = !DILocation(line: 1275, column: 9, scope: !734)
!5310 = !DILocation(line: 1276, column: 17, scope: !734)
!5311 = !DILocation(line: 1276, column: 14, scope: !734)
!5312 = !DILocation(line: 1277, column: 20, scope: !734)
!5313 = !DILocation(line: 1277, column: 17, scope: !734)
!5314 = !DILocation(line: 1281, column: 34, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !706, file: !450, line: 1281, column: 9)
!5316 = !DILocation(line: 1281, column: 9, scope: !5315)
!5317 = !DILocation(line: 1281, column: 43, scope: !5315)
!5318 = !DILocation(line: 1281, column: 9, scope: !706)
!5319 = !DILocation(line: 1282, column: 9, scope: !5315)
!5320 = !DILocation(line: 1284, column: 9, scope: !744)
!5321 = !DILocation(line: 1284, column: 19, scope: !744)
!5322 = !DILocation(line: 1285, column: 9, scope: !744)
!5323 = !DILocation(line: 1285, column: 19, scope: !744)
!5324 = !DILocation(line: 1285, column: 26, scope: !744)
!5325 = !DILocation(line: 1287, column: 13, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !744, file: !450, line: 1287, column: 13)
!5327 = !DILocation(line: 1287, column: 18, scope: !5326)
!5328 = !DILocation(line: 1287, column: 13, scope: !744)
!5329 = !DILocation(line: 1288, column: 13, scope: !5326)
!5330 = !DILocation(line: 1289, column: 74, scope: !744)
!5331 = !DILocation(line: 1289, column: 56, scope: !744)
!5332 = !DILocation(line: 1289, column: 84, scope: !744)
!5333 = !DILocation(line: 1289, column: 54, scope: !744)
!5334 = !DILocation(line: 1289, column: 18, scope: !744)
!5335 = !DILocation(line: 1289, column: 16, scope: !744)
!5336 = !DILocation(line: 1290, column: 13, scope: !749)
!5337 = !DILocation(line: 1290, column: 20, scope: !749)
!5338 = !DILocation(line: 1290, column: 13, scope: !744)
!5339 = !DILocation(line: 1291, column: 45, scope: !748)
!5340 = !DILocation(line: 1292, column: 45, scope: !748)
!5341 = !DILocation(line: 1292, column: 53, scope: !748)
!5342 = !DILocation(line: 1291, column: 22, scope: !748)
!5343 = !DILocation(line: 1291, column: 20, scope: !748)
!5344 = !DILocation(line: 1293, column: 13, scope: !748)
!5345 = !DILocation(line: 1293, column: 18, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !747, file: !450, discriminator: 1)
!5347 = !DILocation(line: 1293, column: 28, scope: !747)
!5348 = !DILocation(line: 1293, column: 58, scope: !747)
!5349 = !DILocation(line: 1293, column: 75, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !747, file: !450, line: 1293, column: 72)
!5351 = !DILocation(line: 1293, column: 92, scope: !5350)
!5352 = !DILocation(line: 1293, column: 72, scope: !5350)
!5353 = !DILocation(line: 1293, column: 102, scope: !5350)
!5354 = !DILocation(line: 1293, column: 72, scope: !747)
!5355 = !DILocation(line: 1293, column: 72, scope: !5356)
!5356 = !DILexicalBlockFile(scope: !747, file: !450, discriminator: 2)
!5357 = !DILocation(line: 1293, column: 133, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !5350, file: !450, discriminator: 3)
!5359 = !DILocation(line: 1293, column: 151, scope: !5350)
!5360 = !DILocation(line: 1293, column: 161, scope: !5350)
!5361 = !DILocation(line: 1293, column: 186, scope: !5350)
!5362 = !DILocation(line: 1293, column: 117, scope: !5350)
!5363 = !DILocation(line: 1293, column: 205, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !748, file: !450, discriminator: 4)
!5365 = !DILocation(line: 1293, column: 205, scope: !747)
!5366 = !DILocation(line: 1293, column: 205, scope: !5367)
!5367 = !DILexicalBlockFile(scope: !747, file: !450, discriminator: 5)
!5368 = !DILocation(line: 1294, column: 9, scope: !748)
!5369 = !DILocation(line: 1295, column: 9, scope: !744)
!5370 = !DILocation(line: 1295, column: 14, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !751, file: !450, discriminator: 1)
!5372 = !DILocation(line: 1295, column: 24, scope: !751)
!5373 = !DILocation(line: 1295, column: 54, scope: !751)
!5374 = !DILocation(line: 1295, column: 69, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !751, file: !450, line: 1295, column: 66)
!5376 = !DILocation(line: 1295, column: 86, scope: !5375)
!5377 = !DILocation(line: 1295, column: 66, scope: !5375)
!5378 = !DILocation(line: 1295, column: 96, scope: !5375)
!5379 = !DILocation(line: 1295, column: 66, scope: !751)
!5380 = !DILocation(line: 1295, column: 66, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !751, file: !450, discriminator: 2)
!5382 = !DILocation(line: 1295, column: 127, scope: !5383)
!5383 = !DILexicalBlockFile(scope: !5375, file: !450, discriminator: 3)
!5384 = !DILocation(line: 1295, column: 145, scope: !5375)
!5385 = !DILocation(line: 1295, column: 155, scope: !5375)
!5386 = !DILocation(line: 1295, column: 180, scope: !5375)
!5387 = !DILocation(line: 1295, column: 111, scope: !5375)
!5388 = !DILocation(line: 1295, column: 199, scope: !5389)
!5389 = !DILexicalBlockFile(scope: !744, file: !450, discriminator: 4)
!5390 = !DILocation(line: 1295, column: 199, scope: !751)
!5391 = !DILocation(line: 1295, column: 199, scope: !5392)
!5392 = !DILexicalBlockFile(scope: !751, file: !450, discriminator: 5)
!5393 = !DILocation(line: 1296, column: 5, scope: !706)
!5394 = !DILocation(line: 1296, column: 5, scope: !5103)
!5395 = !DILocation(line: 1296, column: 5, scope: !744)
!5396 = !DILocation(line: 1298, column: 5, scope: !706)
!5397 = !DILocation(line: 1298, column: 10, scope: !5398)
!5398 = !DILexicalBlockFile(scope: !753, file: !450, discriminator: 1)
!5399 = !DILocation(line: 1298, column: 20, scope: !753)
!5400 = !DILocation(line: 1298, column: 51, scope: !753)
!5401 = !DILocation(line: 1298, column: 70, scope: !756)
!5402 = !DILocation(line: 1298, column: 86, scope: !756)
!5403 = !DILocation(line: 1298, column: 70, scope: !753)
!5404 = !DILocation(line: 1298, column: 101, scope: !5405)
!5405 = !DILexicalBlockFile(scope: !756, file: !450, discriminator: 2)
!5406 = !DILocation(line: 1298, column: 106, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !755, file: !450, discriminator: 4)
!5408 = !DILocation(line: 1298, column: 116, scope: !755)
!5409 = !DILocation(line: 1298, column: 146, scope: !755)
!5410 = !DILocation(line: 1298, column: 172, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !755, file: !450, line: 1298, column: 169)
!5412 = !DILocation(line: 1298, column: 189, scope: !5411)
!5413 = !DILocation(line: 1298, column: 169, scope: !5411)
!5414 = !DILocation(line: 1298, column: 199, scope: !5411)
!5415 = !DILocation(line: 1298, column: 169, scope: !755)
!5416 = !DILocation(line: 1298, column: 169, scope: !5417)
!5417 = !DILexicalBlockFile(scope: !755, file: !450, discriminator: 5)
!5418 = !DILocation(line: 1298, column: 230, scope: !5419)
!5419 = !DILexicalBlockFile(scope: !5411, file: !450, discriminator: 6)
!5420 = !DILocation(line: 1298, column: 248, scope: !5411)
!5421 = !DILocation(line: 1298, column: 258, scope: !5411)
!5422 = !DILocation(line: 1298, column: 283, scope: !5411)
!5423 = !DILocation(line: 1298, column: 214, scope: !5411)
!5424 = !DILocation(line: 1298, column: 302, scope: !5425)
!5425 = !DILexicalBlockFile(scope: !756, file: !450, discriminator: 7)
!5426 = !DILocation(line: 1298, column: 302, scope: !755)
!5427 = !DILocation(line: 1298, column: 302, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !755, file: !450, discriminator: 8)
!5429 = !DILocation(line: 1298, column: 302, scope: !5430)
!5430 = !DILexicalBlockFile(scope: !755, file: !450, discriminator: 9)
!5431 = !DILocation(line: 1298, column: 315, scope: !5432)
!5432 = !DILexicalBlockFile(scope: !5433, file: !450, discriminator: 10)
!5433 = !DILexicalBlockFile(scope: !706, file: !450, discriminator: 3)
!5434 = !DILocation(line: 1298, column: 315, scope: !753)
!5435 = !DILocation(line: 1298, column: 315, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !753, file: !450, discriminator: 11)
!5437 = !DILocation(line: 1299, column: 5, scope: !706)
!5438 = !DILocation(line: 1299, column: 10, scope: !5439)
!5439 = !DILexicalBlockFile(scope: !758, file: !450, discriminator: 1)
!5440 = !DILocation(line: 1299, column: 20, scope: !758)
!5441 = !DILocation(line: 1299, column: 51, scope: !758)
!5442 = !DILocation(line: 1299, column: 70, scope: !761)
!5443 = !DILocation(line: 1299, column: 86, scope: !761)
!5444 = !DILocation(line: 1299, column: 70, scope: !758)
!5445 = !DILocation(line: 1299, column: 101, scope: !5446)
!5446 = !DILexicalBlockFile(scope: !761, file: !450, discriminator: 2)
!5447 = !DILocation(line: 1299, column: 106, scope: !5448)
!5448 = !DILexicalBlockFile(scope: !760, file: !450, discriminator: 4)
!5449 = !DILocation(line: 1299, column: 116, scope: !760)
!5450 = !DILocation(line: 1299, column: 146, scope: !760)
!5451 = !DILocation(line: 1299, column: 172, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !760, file: !450, line: 1299, column: 169)
!5453 = !DILocation(line: 1299, column: 189, scope: !5452)
!5454 = !DILocation(line: 1299, column: 169, scope: !5452)
!5455 = !DILocation(line: 1299, column: 199, scope: !5452)
!5456 = !DILocation(line: 1299, column: 169, scope: !760)
!5457 = !DILocation(line: 1299, column: 169, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !760, file: !450, discriminator: 5)
!5459 = !DILocation(line: 1299, column: 230, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5452, file: !450, discriminator: 6)
!5461 = !DILocation(line: 1299, column: 248, scope: !5452)
!5462 = !DILocation(line: 1299, column: 258, scope: !5452)
!5463 = !DILocation(line: 1299, column: 283, scope: !5452)
!5464 = !DILocation(line: 1299, column: 214, scope: !5452)
!5465 = !DILocation(line: 1299, column: 302, scope: !5466)
!5466 = !DILexicalBlockFile(scope: !761, file: !450, discriminator: 7)
!5467 = !DILocation(line: 1299, column: 302, scope: !760)
!5468 = !DILocation(line: 1299, column: 302, scope: !5469)
!5469 = !DILexicalBlockFile(scope: !760, file: !450, discriminator: 8)
!5470 = !DILocation(line: 1299, column: 302, scope: !5471)
!5471 = !DILexicalBlockFile(scope: !760, file: !450, discriminator: 9)
!5472 = !DILocation(line: 1299, column: 315, scope: !5432)
!5473 = !DILocation(line: 1299, column: 315, scope: !758)
!5474 = !DILocation(line: 1299, column: 315, scope: !5475)
!5475 = !DILexicalBlockFile(scope: !758, file: !450, discriminator: 11)
!5476 = !DILocation(line: 1300, column: 5, scope: !706)
!5477 = !DILocation(line: 1300, column: 10, scope: !5478)
!5478 = !DILexicalBlockFile(scope: !763, file: !450, discriminator: 1)
!5479 = !DILocation(line: 1300, column: 20, scope: !763)
!5480 = !DILocation(line: 1300, column: 51, scope: !763)
!5481 = !DILocation(line: 1300, column: 70, scope: !766)
!5482 = !DILocation(line: 1300, column: 86, scope: !766)
!5483 = !DILocation(line: 1300, column: 70, scope: !763)
!5484 = !DILocation(line: 1300, column: 101, scope: !5485)
!5485 = !DILexicalBlockFile(scope: !766, file: !450, discriminator: 2)
!5486 = !DILocation(line: 1300, column: 106, scope: !5487)
!5487 = !DILexicalBlockFile(scope: !765, file: !450, discriminator: 4)
!5488 = !DILocation(line: 1300, column: 116, scope: !765)
!5489 = !DILocation(line: 1300, column: 146, scope: !765)
!5490 = !DILocation(line: 1300, column: 172, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !765, file: !450, line: 1300, column: 169)
!5492 = !DILocation(line: 1300, column: 189, scope: !5491)
!5493 = !DILocation(line: 1300, column: 169, scope: !5491)
!5494 = !DILocation(line: 1300, column: 199, scope: !5491)
!5495 = !DILocation(line: 1300, column: 169, scope: !765)
!5496 = !DILocation(line: 1300, column: 169, scope: !5497)
!5497 = !DILexicalBlockFile(scope: !765, file: !450, discriminator: 5)
!5498 = !DILocation(line: 1300, column: 230, scope: !5499)
!5499 = !DILexicalBlockFile(scope: !5491, file: !450, discriminator: 6)
!5500 = !DILocation(line: 1300, column: 248, scope: !5491)
!5501 = !DILocation(line: 1300, column: 258, scope: !5491)
!5502 = !DILocation(line: 1300, column: 283, scope: !5491)
!5503 = !DILocation(line: 1300, column: 214, scope: !5491)
!5504 = !DILocation(line: 1300, column: 302, scope: !5505)
!5505 = !DILexicalBlockFile(scope: !766, file: !450, discriminator: 7)
!5506 = !DILocation(line: 1300, column: 302, scope: !765)
!5507 = !DILocation(line: 1300, column: 302, scope: !5508)
!5508 = !DILexicalBlockFile(scope: !765, file: !450, discriminator: 8)
!5509 = !DILocation(line: 1300, column: 302, scope: !5510)
!5510 = !DILexicalBlockFile(scope: !765, file: !450, discriminator: 9)
!5511 = !DILocation(line: 1300, column: 315, scope: !5432)
!5512 = !DILocation(line: 1300, column: 315, scope: !763)
!5513 = !DILocation(line: 1300, column: 315, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !763, file: !450, discriminator: 11)
!5515 = !DILocation(line: 1301, column: 5, scope: !706)
!5516 = !DILocation(line: 1301, column: 10, scope: !5517)
!5517 = !DILexicalBlockFile(scope: !768, file: !450, discriminator: 1)
!5518 = !DILocation(line: 1301, column: 20, scope: !768)
!5519 = !DILocation(line: 1301, column: 51, scope: !768)
!5520 = !DILocation(line: 1301, column: 64, scope: !771)
!5521 = !DILocation(line: 1301, column: 80, scope: !771)
!5522 = !DILocation(line: 1301, column: 64, scope: !768)
!5523 = !DILocation(line: 1301, column: 95, scope: !5524)
!5524 = !DILexicalBlockFile(scope: !771, file: !450, discriminator: 2)
!5525 = !DILocation(line: 1301, column: 100, scope: !5526)
!5526 = !DILexicalBlockFile(scope: !770, file: !450, discriminator: 4)
!5527 = !DILocation(line: 1301, column: 110, scope: !770)
!5528 = !DILocation(line: 1301, column: 140, scope: !770)
!5529 = !DILocation(line: 1301, column: 166, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !770, file: !450, line: 1301, column: 163)
!5531 = !DILocation(line: 1301, column: 183, scope: !5530)
!5532 = !DILocation(line: 1301, column: 163, scope: !5530)
!5533 = !DILocation(line: 1301, column: 193, scope: !5530)
!5534 = !DILocation(line: 1301, column: 163, scope: !770)
!5535 = !DILocation(line: 1301, column: 163, scope: !5536)
!5536 = !DILexicalBlockFile(scope: !770, file: !450, discriminator: 5)
!5537 = !DILocation(line: 1301, column: 224, scope: !5538)
!5538 = !DILexicalBlockFile(scope: !5530, file: !450, discriminator: 6)
!5539 = !DILocation(line: 1301, column: 242, scope: !5530)
!5540 = !DILocation(line: 1301, column: 252, scope: !5530)
!5541 = !DILocation(line: 1301, column: 277, scope: !5530)
!5542 = !DILocation(line: 1301, column: 208, scope: !5530)
!5543 = !DILocation(line: 1301, column: 296, scope: !5544)
!5544 = !DILexicalBlockFile(scope: !771, file: !450, discriminator: 7)
!5545 = !DILocation(line: 1301, column: 296, scope: !770)
!5546 = !DILocation(line: 1301, column: 296, scope: !5547)
!5547 = !DILexicalBlockFile(scope: !770, file: !450, discriminator: 8)
!5548 = !DILocation(line: 1301, column: 296, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !770, file: !450, discriminator: 9)
!5550 = !DILocation(line: 1301, column: 309, scope: !5432)
!5551 = !DILocation(line: 1301, column: 309, scope: !768)
!5552 = !DILocation(line: 1301, column: 309, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !768, file: !450, discriminator: 11)
!5554 = !DILocation(line: 1302, column: 12, scope: !706)
!5555 = !DILocation(line: 1302, column: 5, scope: !706)
!5556 = !DILocation(line: 1303, column: 1, scope: !706)
!5557 = !DILocation(line: 850, column: 29, scope: !772)
!5558 = !DILocation(line: 852, column: 5, scope: !772)
!5559 = !DILocation(line: 852, column: 15, scope: !772)
!5560 = !DILocation(line: 854, column: 24, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !772, file: !450, line: 854, column: 9)
!5562 = !DILocation(line: 854, column: 32, scope: !5561)
!5563 = !DILocation(line: 854, column: 41, scope: !5561)
!5564 = !DILocation(line: 854, column: 71, scope: !5561)
!5565 = !DILocation(line: 854, column: 105, scope: !5566)
!5566 = !DILexicalBlockFile(scope: !5561, file: !450, discriminator: 2)
!5567 = !DILocation(line: 854, column: 113, scope: !5561)
!5568 = !DILocation(line: 854, column: 74, scope: !5561)
!5569 = !DILocation(line: 854, column: 152, scope: !5561)
!5570 = !DILocation(line: 854, column: 184, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5572, file: !450, discriminator: 3)
!5572 = !DILexicalBlockFile(scope: !5561, file: !450, discriminator: 1)
!5573 = !DILocation(line: 854, column: 157, scope: !5561)
!5574 = !DILocation(line: 854, column: 192, scope: !5561)
!5575 = !{!5576, !2565, i64 24}
!5576 = !{!"", !2606, i64 0, !2607, i64 16, !2565, i64 24}
!5577 = !DILocation(line: 854, column: 155, scope: !5561)
!5578 = !DILocation(line: 854, column: 9, scope: !772)
!5579 = !DILocation(line: 855, column: 42, scope: !5561)
!5580 = !DILocation(line: 855, column: 19, scope: !5561)
!5581 = !DILocation(line: 855, column: 49, scope: !5561)
!5582 = !DILocation(line: 855, column: 16, scope: !5561)
!5583 = !DILocation(line: 855, column: 9, scope: !5561)
!5584 = !DILocation(line: 856, column: 29, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5561, file: !450, line: 856, column: 14)
!5586 = !DILocation(line: 856, column: 37, scope: !5585)
!5587 = !DILocation(line: 856, column: 46, scope: !5585)
!5588 = !DILocation(line: 856, column: 72, scope: !5585)
!5589 = !DILocation(line: 856, column: 106, scope: !5590)
!5590 = !DILexicalBlockFile(scope: !5585, file: !450, discriminator: 2)
!5591 = !DILocation(line: 856, column: 114, scope: !5585)
!5592 = !DILocation(line: 856, column: 75, scope: !5585)
!5593 = !DILocation(line: 856, column: 149, scope: !5585)
!5594 = !DILocation(line: 856, column: 181, scope: !5595)
!5595 = !DILexicalBlockFile(scope: !5596, file: !450, discriminator: 3)
!5596 = !DILexicalBlockFile(scope: !5585, file: !450, discriminator: 1)
!5597 = !DILocation(line: 856, column: 154, scope: !5585)
!5598 = !DILocation(line: 856, column: 189, scope: !5585)
!5599 = !DILocation(line: 856, column: 152, scope: !5585)
!5600 = !DILocation(line: 856, column: 14, scope: !5561)
!5601 = !DILocation(line: 857, column: 38, scope: !5585)
!5602 = !DILocation(line: 857, column: 19, scope: !5585)
!5603 = !DILocation(line: 857, column: 45, scope: !5585)
!5604 = !DILocation(line: 857, column: 16, scope: !5585)
!5605 = !DILocation(line: 857, column: 9, scope: !5585)
!5606 = !DILocation(line: 859, column: 12, scope: !772)
!5607 = !DILocation(line: 860, column: 1, scope: !772)
!5608 = !DILocation(line: 859, column: 5, scope: !772)
!5609 = !DILocation(line: 1035, column: 24, scope: !776)
!5610 = !DILocation(line: 1035, column: 36, scope: !776)
!5611 = !DILocation(line: 1035, column: 56, scope: !776)
!5612 = !DILocation(line: 1036, column: 27, scope: !776)
!5613 = !DILocation(line: 1036, column: 45, scope: !776)
!5614 = !DILocation(line: 1038, column: 5, scope: !776)
!5615 = !DILocation(line: 1038, column: 15, scope: !776)
!5616 = !DILocation(line: 1039, column: 5, scope: !776)
!5617 = !DILocation(line: 1039, column: 9, scope: !776)
!5618 = !DILocation(line: 1039, column: 16, scope: !776)
!5619 = !DILocation(line: 1039, column: 25, scope: !776)
!5620 = !DILocation(line: 1040, column: 5, scope: !776)
!5621 = !DILocation(line: 1040, column: 10, scope: !776)
!5622 = !DILocation(line: 1044, column: 29, scope: !776)
!5623 = !DILocation(line: 1044, column: 37, scope: !776)
!5624 = !DILocation(line: 1044, column: 14, scope: !776)
!5625 = !DILocation(line: 1044, column: 12, scope: !776)
!5626 = !DILocation(line: 1045, column: 9, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !776, file: !450, line: 1045, column: 9)
!5628 = !DILocation(line: 1045, column: 16, scope: !5627)
!5629 = !DILocation(line: 1045, column: 9, scope: !776)
!5630 = !DILocation(line: 1046, column: 9, scope: !5627)
!5631 = !DILocation(line: 1047, column: 9, scope: !793)
!5632 = !DILocation(line: 1047, column: 16, scope: !793)
!5633 = !DILocation(line: 1047, column: 9, scope: !776)
!5634 = !DILocation(line: 1048, column: 9, scope: !792)
!5635 = !DILocation(line: 1048, column: 14, scope: !5636)
!5636 = !DILexicalBlockFile(scope: !791, file: !450, discriminator: 1)
!5637 = !DILocation(line: 1048, column: 24, scope: !791)
!5638 = !DILocation(line: 1048, column: 54, scope: !791)
!5639 = !DILocation(line: 1048, column: 71, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !791, file: !450, line: 1048, column: 68)
!5641 = !DILocation(line: 1048, column: 88, scope: !5640)
!5642 = !DILocation(line: 1048, column: 68, scope: !5640)
!5643 = !DILocation(line: 1048, column: 98, scope: !5640)
!5644 = !DILocation(line: 1048, column: 68, scope: !791)
!5645 = !DILocation(line: 1048, column: 68, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !791, file: !450, discriminator: 2)
!5647 = !DILocation(line: 1048, column: 129, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !5640, file: !450, discriminator: 3)
!5649 = !DILocation(line: 1048, column: 147, scope: !5640)
!5650 = !DILocation(line: 1048, column: 157, scope: !5640)
!5651 = !DILocation(line: 1048, column: 182, scope: !5640)
!5652 = !DILocation(line: 1048, column: 113, scope: !5640)
!5653 = !DILocation(line: 1048, column: 201, scope: !5654)
!5654 = !DILexicalBlockFile(scope: !792, file: !450, discriminator: 4)
!5655 = !DILocation(line: 1048, column: 201, scope: !791)
!5656 = !DILocation(line: 1048, column: 201, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !791, file: !450, discriminator: 5)
!5658 = !DILocation(line: 1049, column: 10, scope: !792)
!5659 = !DILocation(line: 1049, column: 14, scope: !792)
!5660 = !DILocation(line: 1050, column: 9, scope: !792)
!5661 = !DILocation(line: 1053, column: 32, scope: !796)
!5662 = !DILocation(line: 1053, column: 11, scope: !796)
!5663 = !DILocation(line: 1053, column: 42, scope: !796)
!5664 = !DILocation(line: 1053, column: 48, scope: !796)
!5665 = !DILocation(line: 1053, column: 9, scope: !776)
!5666 = !DILocation(line: 1054, column: 9, scope: !795)
!5667 = !DILocation(line: 1054, column: 19, scope: !795)
!5668 = !DILocation(line: 1054, column: 26, scope: !795)
!5669 = !DILocation(line: 1055, column: 14, scope: !795)
!5670 = !DILocation(line: 1056, column: 53, scope: !795)
!5671 = !DILocation(line: 1056, column: 33, scope: !795)
!5672 = !DILocation(line: 1056, column: 18, scope: !795)
!5673 = !DILocation(line: 1056, column: 16, scope: !795)
!5674 = !DILocation(line: 1057, column: 9, scope: !795)
!5675 = !DILocation(line: 1057, column: 14, scope: !5676)
!5676 = !DILexicalBlockFile(scope: !798, file: !450, discriminator: 1)
!5677 = !DILocation(line: 1057, column: 24, scope: !798)
!5678 = !DILocation(line: 1057, column: 54, scope: !798)
!5679 = !DILocation(line: 1057, column: 69, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !798, file: !450, line: 1057, column: 66)
!5681 = !DILocation(line: 1057, column: 86, scope: !5680)
!5682 = !DILocation(line: 1057, column: 66, scope: !5680)
!5683 = !DILocation(line: 1057, column: 96, scope: !5680)
!5684 = !DILocation(line: 1057, column: 66, scope: !798)
!5685 = !DILocation(line: 1057, column: 66, scope: !5686)
!5686 = !DILexicalBlockFile(scope: !798, file: !450, discriminator: 2)
!5687 = !DILocation(line: 1057, column: 127, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5680, file: !450, discriminator: 3)
!5689 = !DILocation(line: 1057, column: 145, scope: !5680)
!5690 = !DILocation(line: 1057, column: 155, scope: !5680)
!5691 = !DILocation(line: 1057, column: 180, scope: !5680)
!5692 = !DILocation(line: 1057, column: 111, scope: !5680)
!5693 = !DILocation(line: 1057, column: 199, scope: !5694)
!5694 = !DILexicalBlockFile(scope: !795, file: !450, discriminator: 4)
!5695 = !DILocation(line: 1057, column: 199, scope: !798)
!5696 = !DILocation(line: 1057, column: 199, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !798, file: !450, discriminator: 5)
!5698 = !DILocation(line: 1058, column: 13, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !795, file: !450, line: 1058, column: 13)
!5700 = !DILocation(line: 1058, column: 20, scope: !5699)
!5701 = !DILocation(line: 1058, column: 13, scope: !795)
!5702 = !DILocation(line: 1059, column: 13, scope: !5699)
!5703 = !DILocation(line: 1060, column: 5, scope: !796)
!5704 = !DILocation(line: 1060, column: 5, scope: !5705)
!5705 = !DILexicalBlockFile(scope: !796, file: !450, discriminator: 1)
!5706 = !DILocation(line: 1060, column: 5, scope: !795)
!5707 = !DILocation(line: 1062, column: 14, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !796, file: !450, line: 1061, column: 10)
!5709 = !DILocation(line: 1065, column: 38, scope: !776)
!5710 = !DILocation(line: 1065, column: 17, scope: !776)
!5711 = !DILocation(line: 1065, column: 48, scope: !776)
!5712 = !DILocation(line: 1065, column: 13, scope: !776)
!5713 = !DILocation(line: 1066, column: 5, scope: !776)
!5714 = !DILocation(line: 1066, column: 10, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !800, file: !450, discriminator: 1)
!5716 = !DILocation(line: 1066, column: 20, scope: !800)
!5717 = !DILocation(line: 1066, column: 50, scope: !800)
!5718 = !DILocation(line: 1066, column: 67, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !800, file: !450, line: 1066, column: 64)
!5720 = !DILocation(line: 1066, column: 84, scope: !5719)
!5721 = !DILocation(line: 1066, column: 64, scope: !5719)
!5722 = !DILocation(line: 1066, column: 94, scope: !5719)
!5723 = !DILocation(line: 1066, column: 64, scope: !800)
!5724 = !DILocation(line: 1066, column: 64, scope: !5725)
!5725 = !DILexicalBlockFile(scope: !800, file: !450, discriminator: 2)
!5726 = !DILocation(line: 1066, column: 125, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5719, file: !450, discriminator: 3)
!5728 = !DILocation(line: 1066, column: 143, scope: !5719)
!5729 = !DILocation(line: 1066, column: 153, scope: !5719)
!5730 = !DILocation(line: 1066, column: 178, scope: !5719)
!5731 = !DILocation(line: 1066, column: 109, scope: !5719)
!5732 = !DILocation(line: 1066, column: 197, scope: !5733)
!5733 = !DILexicalBlockFile(scope: !776, file: !450, discriminator: 4)
!5734 = !DILocation(line: 1066, column: 197, scope: !800)
!5735 = !DILocation(line: 1066, column: 197, scope: !5736)
!5736 = !DILexicalBlockFile(scope: !800, file: !450, discriminator: 5)
!5737 = !DILocation(line: 1067, column: 22, scope: !776)
!5738 = !DILocation(line: 1067, column: 15, scope: !776)
!5739 = !DILocation(line: 1067, column: 13, scope: !776)
!5740 = !DILocation(line: 1068, column: 20, scope: !776)
!5741 = !DILocation(line: 1068, column: 13, scope: !776)
!5742 = !DILocation(line: 1068, column: 11, scope: !776)
!5743 = !DILocation(line: 1071, column: 19, scope: !776)
!5744 = !DILocation(line: 1071, column: 24, scope: !776)
!5745 = !DILocation(line: 1071, column: 48, scope: !776)
!5746 = !DILocation(line: 1071, column: 54, scope: !776)
!5747 = !DILocation(line: 1071, column: 61, scope: !776)
!5748 = !DILocation(line: 1071, column: 66, scope: !776)
!5749 = !DILocation(line: 1071, column: 5, scope: !776)
!5750 = !DILocation(line: 1073, column: 5, scope: !776)
!5751 = !DILocation(line: 1074, column: 1, scope: !776)
!5752 = !DILocation(line: 1077, column: 29, scope: !839)
!5753 = !DILocation(line: 1077, column: 47, scope: !839)
!5754 = !DILocation(line: 1079, column: 5, scope: !839)
!5755 = !DILocation(line: 1079, column: 15, scope: !839)
!5756 = !DILocation(line: 1080, column: 5, scope: !839)
!5757 = !DILocation(line: 1080, column: 15, scope: !839)
!5758 = !DILocation(line: 1080, column: 42, scope: !839)
!5759 = !DILocation(line: 1080, column: 24, scope: !839)
!5760 = !DILocation(line: 1081, column: 5, scope: !839)
!5761 = !DILocation(line: 1081, column: 15, scope: !839)
!5762 = !DILocation(line: 1081, column: 30, scope: !839)
!5763 = !DILocation(line: 1084, column: 9, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1084, column: 9)
!5765 = !DILocation(line: 1084, column: 22, scope: !5764)
!5766 = !DILocation(line: 1084, column: 9, scope: !839)
!5767 = !DILocation(line: 1085, column: 9, scope: !5764)
!5768 = !DILocation(line: 1086, column: 9, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1086, column: 9)
!5770 = !DILocation(line: 1086, column: 16, scope: !5769)
!5771 = !DILocation(line: 1086, column: 37, scope: !5769)
!5772 = !DILocation(line: 1086, column: 40, scope: !5773)
!5773 = !DILexicalBlockFile(scope: !5769, file: !450, discriminator: 1)
!5774 = !DILocation(line: 1086, column: 47, scope: !5769)
!5775 = !DILocation(line: 1086, column: 9, scope: !839)
!5776 = !DILocation(line: 1087, column: 16, scope: !5769)
!5777 = !DILocation(line: 1087, column: 9, scope: !5769)
!5778 = !DILocation(line: 1090, column: 24, scope: !839)
!5779 = !DILocation(line: 1090, column: 32, scope: !839)
!5780 = !DILocation(line: 1090, column: 12, scope: !839)
!5781 = !DILocation(line: 1090, column: 10, scope: !839)
!5782 = !DILocation(line: 1091, column: 9, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1091, column: 9)
!5784 = !DILocation(line: 1091, column: 14, scope: !5783)
!5785 = !DILocation(line: 1091, column: 9, scope: !839)
!5786 = !DILocation(line: 1092, column: 9, scope: !5783)
!5787 = !DILocation(line: 1093, column: 9, scope: !849)
!5788 = !DILocation(line: 1093, column: 14, scope: !849)
!5789 = !DILocation(line: 1093, column: 9, scope: !839)
!5790 = !DILocation(line: 1094, column: 9, scope: !848)
!5791 = !DILocation(line: 1094, column: 14, scope: !5792)
!5792 = !DILexicalBlockFile(scope: !847, file: !450, discriminator: 1)
!5793 = !DILocation(line: 1094, column: 24, scope: !847)
!5794 = !DILocation(line: 1094, column: 54, scope: !847)
!5795 = !DILocation(line: 1094, column: 69, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !847, file: !450, line: 1094, column: 66)
!5797 = !DILocation(line: 1094, column: 86, scope: !5796)
!5798 = !DILocation(line: 1094, column: 66, scope: !5796)
!5799 = !DILocation(line: 1094, column: 96, scope: !5796)
!5800 = !DILocation(line: 1094, column: 66, scope: !847)
!5801 = !DILocation(line: 1094, column: 66, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !847, file: !450, discriminator: 2)
!5803 = !DILocation(line: 1094, column: 127, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !5796, file: !450, discriminator: 3)
!5805 = !DILocation(line: 1094, column: 145, scope: !5796)
!5806 = !DILocation(line: 1094, column: 155, scope: !5796)
!5807 = !DILocation(line: 1094, column: 180, scope: !5796)
!5808 = !DILocation(line: 1094, column: 111, scope: !5796)
!5809 = !DILocation(line: 1094, column: 199, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !848, file: !450, discriminator: 4)
!5811 = !DILocation(line: 1094, column: 199, scope: !847)
!5812 = !DILocation(line: 1094, column: 199, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !847, file: !450, discriminator: 5)
!5814 = !DILocation(line: 1095, column: 16, scope: !848)
!5815 = !DILocation(line: 1095, column: 9, scope: !848)
!5816 = !DILocation(line: 1103, column: 5, scope: !839)
!5817 = !DILocation(line: 1103, column: 10, scope: !5818)
!5818 = !DILexicalBlockFile(scope: !851, file: !450, discriminator: 1)
!5819 = !DILocation(line: 1103, column: 20, scope: !851)
!5820 = !DILocation(line: 1103, column: 50, scope: !851)
!5821 = !DILocation(line: 1103, column: 73, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !851, file: !450, line: 1103, column: 70)
!5823 = !DILocation(line: 1103, column: 90, scope: !5822)
!5824 = !DILocation(line: 1103, column: 70, scope: !5822)
!5825 = !DILocation(line: 1103, column: 100, scope: !5822)
!5826 = !DILocation(line: 1103, column: 70, scope: !851)
!5827 = !DILocation(line: 1103, column: 70, scope: !5828)
!5828 = !DILexicalBlockFile(scope: !851, file: !450, discriminator: 2)
!5829 = !DILocation(line: 1103, column: 131, scope: !5830)
!5830 = !DILexicalBlockFile(scope: !5822, file: !450, discriminator: 3)
!5831 = !DILocation(line: 1103, column: 149, scope: !5822)
!5832 = !DILocation(line: 1103, column: 159, scope: !5822)
!5833 = !DILocation(line: 1103, column: 184, scope: !5822)
!5834 = !DILocation(line: 1103, column: 115, scope: !5822)
!5835 = !DILocation(line: 1103, column: 203, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !839, file: !450, discriminator: 4)
!5837 = !DILocation(line: 1103, column: 203, scope: !851)
!5838 = !DILocation(line: 1103, column: 203, scope: !5839)
!5839 = !DILexicalBlockFile(scope: !851, file: !450, discriminator: 5)
!5840 = !DILocation(line: 1104, column: 43, scope: !839)
!5841 = !DILocation(line: 1104, column: 20, scope: !839)
!5842 = !DILocation(line: 1104, column: 18, scope: !839)
!5843 = !DILocation(line: 1105, column: 5, scope: !839)
!5844 = !DILocation(line: 1105, column: 10, scope: !5845)
!5845 = !DILexicalBlockFile(scope: !853, file: !450, discriminator: 1)
!5846 = !DILocation(line: 1105, column: 20, scope: !853)
!5847 = !DILocation(line: 1105, column: 50, scope: !853)
!5848 = !DILocation(line: 1105, column: 65, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !853, file: !450, line: 1105, column: 62)
!5850 = !DILocation(line: 1105, column: 82, scope: !5849)
!5851 = !DILocation(line: 1105, column: 62, scope: !5849)
!5852 = !DILocation(line: 1105, column: 92, scope: !5849)
!5853 = !DILocation(line: 1105, column: 62, scope: !853)
!5854 = !DILocation(line: 1105, column: 62, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !853, file: !450, discriminator: 2)
!5856 = !DILocation(line: 1105, column: 123, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !5849, file: !450, discriminator: 3)
!5858 = !DILocation(line: 1105, column: 141, scope: !5849)
!5859 = !DILocation(line: 1105, column: 151, scope: !5849)
!5860 = !DILocation(line: 1105, column: 176, scope: !5849)
!5861 = !DILocation(line: 1105, column: 107, scope: !5849)
!5862 = !DILocation(line: 1105, column: 195, scope: !5836)
!5863 = !DILocation(line: 1105, column: 195, scope: !853)
!5864 = !DILocation(line: 1105, column: 195, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !853, file: !450, discriminator: 5)
!5866 = !DILocation(line: 1106, column: 9, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1106, column: 9)
!5868 = !DILocation(line: 1106, column: 22, scope: !5867)
!5869 = !DILocation(line: 1106, column: 9, scope: !839)
!5870 = !DILocation(line: 1107, column: 9, scope: !5867)
!5871 = !DILocation(line: 1108, column: 27, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !839, file: !450, line: 1108, column: 9)
!5873 = !DILocation(line: 1108, column: 43, scope: !5872)
!5874 = !DILocation(line: 1108, column: 54, scope: !5872)
!5875 = !DILocation(line: 1108, column: 63, scope: !5872)
!5876 = !DILocation(line: 1108, column: 80, scope: !5872)
!5877 = !DILocation(line: 1108, column: 9, scope: !839)
!5878 = !DILocation(line: 1109, column: 25, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5872, file: !450, line: 1108, column: 87)
!5880 = !DILocation(line: 1109, column: 9, scope: !5879)
!5881 = !DILocation(line: 1111, column: 9, scope: !5879)
!5882 = !DILocation(line: 1113, column: 12, scope: !839)
!5883 = !DILocation(line: 1113, column: 5, scope: !839)
!5884 = !DILocation(line: 1116, column: 5, scope: !839)
!5885 = !DILocation(line: 1116, column: 10, scope: !5886)
!5886 = !DILexicalBlockFile(scope: !855, file: !450, discriminator: 1)
!5887 = !DILocation(line: 1116, column: 20, scope: !855)
!5888 = !DILocation(line: 1116, column: 50, scope: !855)
!5889 = !DILocation(line: 1116, column: 73, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !855, file: !450, line: 1116, column: 70)
!5891 = !DILocation(line: 1116, column: 90, scope: !5890)
!5892 = !DILocation(line: 1116, column: 70, scope: !5890)
!5893 = !DILocation(line: 1116, column: 100, scope: !5890)
!5894 = !DILocation(line: 1116, column: 70, scope: !855)
!5895 = !DILocation(line: 1116, column: 70, scope: !5896)
!5896 = !DILexicalBlockFile(scope: !855, file: !450, discriminator: 2)
!5897 = !DILocation(line: 1116, column: 131, scope: !5898)
!5898 = !DILexicalBlockFile(scope: !5890, file: !450, discriminator: 3)
!5899 = !DILocation(line: 1116, column: 149, scope: !5890)
!5900 = !DILocation(line: 1116, column: 159, scope: !5890)
!5901 = !DILocation(line: 1116, column: 184, scope: !5890)
!5902 = !DILocation(line: 1116, column: 115, scope: !5890)
!5903 = !DILocation(line: 1116, column: 203, scope: !5836)
!5904 = !DILocation(line: 1116, column: 203, scope: !855)
!5905 = !DILocation(line: 1116, column: 203, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !855, file: !450, discriminator: 5)
!5907 = !DILocation(line: 1117, column: 5, scope: !839)
!5908 = !DILocation(line: 1118, column: 1, scope: !839)
!5909 = !DILocation(line: 1121, column: 29, scope: !865)
!5910 = !DILocation(line: 1123, column: 5, scope: !865)
!5911 = !DILocation(line: 1123, column: 10, scope: !865)
!5912 = !DILocation(line: 1124, column: 24, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !865, file: !450, line: 1124, column: 9)
!5914 = !DILocation(line: 1124, column: 34, scope: !5913)
!5915 = !DILocation(line: 1124, column: 43, scope: !5913)
!5916 = !DILocation(line: 1124, column: 69, scope: !5913)
!5917 = !DILocation(line: 1124, column: 103, scope: !5918)
!5918 = !DILexicalBlockFile(scope: !5913, file: !450, discriminator: 1)
!5919 = !DILocation(line: 1124, column: 113, scope: !5913)
!5920 = !DILocation(line: 1124, column: 72, scope: !5913)
!5921 = !DILocation(line: 1124, column: 9, scope: !865)
!5922 = !DILocation(line: 1125, column: 17, scope: !5913)
!5923 = !DILocation(line: 1125, column: 60, scope: !5913)
!5924 = !DILocation(line: 1125, column: 42, scope: !5913)
!5925 = !DILocation(line: 1125, column: 69, scope: !5913)
!5926 = !DILocation(line: 1125, column: 41, scope: !5913)
!5927 = !DILocation(line: 1125, column: 77, scope: !5913)
!5928 = !DILocation(line: 1125, column: 106, scope: !5913)
!5929 = !DILocation(line: 1125, column: 88, scope: !5913)
!5930 = !DILocation(line: 1125, column: 115, scope: !5913)
!5931 = !DILocation(line: 1125, column: 87, scope: !5913)
!5932 = !DILocation(line: 1125, column: 123, scope: !5913)
!5933 = !DILocation(line: 1125, column: 84, scope: !5913)
!5934 = !DILocation(line: 1125, column: 150, scope: !5913)
!5935 = !DILocation(line: 1125, column: 132, scope: !5913)
!5936 = !DILocation(line: 1125, column: 159, scope: !5913)
!5937 = !DILocation(line: 1125, column: 131, scope: !5913)
!5938 = !DILocation(line: 1125, column: 129, scope: !5913)
!5939 = !DILocation(line: 1125, column: 9, scope: !5913)
!5940 = !DILocation(line: 1126, column: 29, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5913, file: !450, line: 1126, column: 14)
!5942 = !DILocation(line: 1126, column: 39, scope: !5941)
!5943 = !DILocation(line: 1126, column: 48, scope: !5941)
!5944 = !DILocation(line: 1126, column: 78, scope: !5941)
!5945 = !DILocation(line: 1126, column: 112, scope: !5946)
!5946 = !DILexicalBlockFile(scope: !5941, file: !450, discriminator: 1)
!5947 = !DILocation(line: 1126, column: 122, scope: !5941)
!5948 = !DILocation(line: 1126, column: 81, scope: !5941)
!5949 = !DILocation(line: 1126, column: 14, scope: !5913)
!5950 = !DILocation(line: 1127, column: 17, scope: !5941)
!5951 = !DILocation(line: 1127, column: 64, scope: !5941)
!5952 = !DILocation(line: 1127, column: 42, scope: !5941)
!5953 = !DILocation(line: 1127, column: 73, scope: !5941)
!5954 = !DILocation(line: 1127, column: 41, scope: !5941)
!5955 = !DILocation(line: 1127, column: 81, scope: !5941)
!5956 = !DILocation(line: 1127, column: 114, scope: !5941)
!5957 = !DILocation(line: 1127, column: 92, scope: !5941)
!5958 = !DILocation(line: 1127, column: 123, scope: !5941)
!5959 = !DILocation(line: 1127, column: 91, scope: !5941)
!5960 = !DILocation(line: 1127, column: 131, scope: !5941)
!5961 = !DILocation(line: 1127, column: 88, scope: !5941)
!5962 = !DILocation(line: 1127, column: 162, scope: !5941)
!5963 = !DILocation(line: 1127, column: 140, scope: !5941)
!5964 = !DILocation(line: 1127, column: 171, scope: !5941)
!5965 = !DILocation(line: 1127, column: 139, scope: !5941)
!5966 = !DILocation(line: 1127, column: 137, scope: !5941)
!5967 = !DILocation(line: 1127, column: 9, scope: !5941)
!5968 = !DILocation(line: 1129, column: 17, scope: !5941)
!5969 = !DILocation(line: 1129, column: 9, scope: !5941)
!5970 = !DILocation(line: 1131, column: 38, scope: !865)
!5971 = !DILocation(line: 1131, column: 59, scope: !865)
!5972 = !DILocation(line: 1131, column: 52, scope: !865)
!5973 = !DILocation(line: 1131, column: 12, scope: !865)
!5974 = !DILocation(line: 1132, column: 1, scope: !865)
!5975 = !DILocation(line: 1131, column: 5, scope: !865)
!5976 = !DILocation(line: 920, column: 26, scope: !801)
!5977 = !DILocation(line: 920, column: 44, scope: !801)
!5978 = !DILocation(line: 922, column: 31, scope: !801)
!5979 = !DILocation(line: 922, column: 52, scope: !801)
!5980 = !DILocation(line: 922, column: 12, scope: !801)
!5981 = !DILocation(line: 922, column: 5, scope: !801)
!5982 = !DILocation(line: 1742, column: 34, scope: !826)
!5983 = !DILocation(line: 1744, column: 49, scope: !826)
!5984 = !DILocation(line: 1744, column: 57, scope: !826)
!5985 = !DILocation(line: 1744, column: 25, scope: !826)
!5986 = !DILocation(line: 1744, column: 88, scope: !826)
!5987 = !DILocation(line: 1744, column: 96, scope: !826)
!5988 = !DILocation(line: 1744, column: 64, scope: !826)
!5989 = !DILocation(line: 1744, column: 130, scope: !826)
!5990 = !DILocation(line: 1744, column: 138, scope: !826)
!5991 = !DILocation(line: 1744, column: 106, scope: !826)
!5992 = !DILocation(line: 1744, column: 12, scope: !826)
!5993 = !DILocation(line: 1744, column: 5, scope: !826)
!5994 = !DILocation(line: 139, column: 12, scope: !831)
!5995 = !DILocation(line: 139, column: 19, scope: !831)
!5996 = !DILocation(line: 139, column: 27, scope: !831)
!5997 = !DILocation(line: 141, column: 5, scope: !831)
!5998 = !DILocation(line: 141, column: 9, scope: !831)
!5999 = !DILocation(line: 144, column: 11, scope: !831)
!6000 = !DILocation(line: 144, column: 15, scope: !831)
!6001 = !DILocation(line: 144, column: 13, scope: !831)
!6002 = !DILocation(line: 144, column: 9, scope: !831)
!6003 = !DILocation(line: 145, column: 10, scope: !831)
!6004 = !DILocation(line: 145, column: 14, scope: !831)
!6005 = !DILocation(line: 145, column: 20, scope: !831)
!6006 = !DILocation(line: 145, column: 18, scope: !831)
!6007 = !DILocation(line: 145, column: 12, scope: !831)
!6008 = !DILocation(line: 145, column: 6, scope: !831)
!6009 = !DILocation(line: 145, column: 8, scope: !831)
!6010 = !DILocation(line: 146, column: 10, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !831, file: !450, line: 146, column: 9)
!6012 = !DILocation(line: 146, column: 9, scope: !6011)
!6013 = !DILocation(line: 146, column: 12, scope: !6011)
!6014 = !DILocation(line: 146, column: 9, scope: !831)
!6015 = !DILocation(line: 147, column: 9, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6011, file: !450, line: 146, column: 17)
!6017 = !DILocation(line: 148, column: 15, scope: !6016)
!6018 = !DILocation(line: 148, column: 10, scope: !6016)
!6019 = !DILocation(line: 148, column: 12, scope: !6016)
!6020 = !DILocation(line: 149, column: 5, scope: !6016)
!6021 = !DILocation(line: 151, column: 12, scope: !831)
!6022 = !DILocation(line: 152, column: 1, scope: !831)
!6023 = !DILocation(line: 151, column: 5, scope: !831)
!6024 = !DILocation(line: 870, column: 30, scope: !805)
!6025 = !DILocation(line: 870, column: 44, scope: !805)
!6026 = !DILocation(line: 870, column: 60, scope: !805)
!6027 = !DILocation(line: 872, column: 5, scope: !805)
!6028 = !DILocation(line: 872, column: 15, scope: !805)
!6029 = !DILocation(line: 878, column: 9, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !805, file: !450, line: 878, column: 9)
!6031 = !DILocation(line: 878, column: 16, scope: !6030)
!6032 = !DILocation(line: 878, column: 9, scope: !805)
!6033 = !DILocation(line: 879, column: 62, scope: !6030)
!6034 = !DILocation(line: 879, column: 9, scope: !6030)
!6035 = !DILocation(line: 880, column: 34, scope: !805)
!6036 = !DILocation(line: 880, column: 42, scope: !805)
!6037 = !DILocation(line: 880, column: 53, scope: !805)
!6038 = !DILocation(line: 880, column: 14, scope: !805)
!6039 = !DILocation(line: 880, column: 12, scope: !805)
!6040 = !DILocation(line: 881, column: 9, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !805, file: !450, line: 881, column: 9)
!6042 = !DILocation(line: 881, column: 16, scope: !6041)
!6043 = !DILocation(line: 881, column: 37, scope: !6041)
!6044 = !DILocation(line: 881, column: 40, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !6041, file: !450, discriminator: 1)
!6046 = !DILocation(line: 881, column: 47, scope: !6041)
!6047 = !DILocation(line: 881, column: 9, scope: !805)
!6048 = !DILocation(line: 882, column: 16, scope: !6041)
!6049 = !DILocation(line: 882, column: 9, scope: !6041)
!6050 = !DILocation(line: 883, column: 24, scope: !818)
!6051 = !DILocation(line: 883, column: 34, scope: !818)
!6052 = !DILocation(line: 883, column: 43, scope: !818)
!6053 = !DILocation(line: 883, column: 70, scope: !818)
!6054 = !DILocation(line: 883, column: 104, scope: !6055)
!6055 = !DILexicalBlockFile(scope: !818, file: !450, discriminator: 1)
!6056 = !DILocation(line: 883, column: 114, scope: !818)
!6057 = !DILocation(line: 883, column: 73, scope: !818)
!6058 = !DILocation(line: 883, column: 9, scope: !805)
!6059 = !DILocation(line: 884, column: 36, scope: !816)
!6060 = !DILocation(line: 884, column: 15, scope: !816)
!6061 = !DILocation(line: 884, column: 46, scope: !816)
!6062 = !DILocation(line: 884, column: 60, scope: !816)
!6063 = !DILocation(line: 884, column: 65, scope: !816)
!6064 = !DILocation(line: 884, column: 91, scope: !6065)
!6065 = !DILexicalBlockFile(scope: !816, file: !450, discriminator: 1)
!6066 = !DILocation(line: 884, column: 70, scope: !816)
!6067 = !DILocation(line: 884, column: 101, scope: !816)
!6068 = !DILocation(line: 884, column: 110, scope: !816)
!6069 = !DILocation(line: 884, column: 115, scope: !816)
!6070 = !DILocation(line: 884, column: 13, scope: !817)
!6071 = !DILocation(line: 885, column: 13, scope: !815)
!6072 = !DILocation(line: 885, column: 18, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !814, file: !450, discriminator: 1)
!6074 = !DILocation(line: 885, column: 28, scope: !814)
!6075 = !DILocation(line: 885, column: 58, scope: !814)
!6076 = !DILocation(line: 885, column: 75, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !814, file: !450, line: 885, column: 72)
!6078 = !DILocation(line: 885, column: 92, scope: !6077)
!6079 = !DILocation(line: 885, column: 72, scope: !6077)
!6080 = !DILocation(line: 885, column: 102, scope: !6077)
!6081 = !DILocation(line: 885, column: 72, scope: !814)
!6082 = !DILocation(line: 885, column: 72, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !814, file: !450, discriminator: 2)
!6084 = !DILocation(line: 885, column: 133, scope: !6085)
!6085 = !DILexicalBlockFile(scope: !6077, file: !450, discriminator: 3)
!6086 = !DILocation(line: 885, column: 151, scope: !6077)
!6087 = !DILocation(line: 885, column: 161, scope: !6077)
!6088 = !DILocation(line: 885, column: 186, scope: !6077)
!6089 = !DILocation(line: 885, column: 117, scope: !6077)
!6090 = !DILocation(line: 885, column: 205, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !815, file: !450, discriminator: 4)
!6092 = !DILocation(line: 885, column: 205, scope: !814)
!6093 = !DILocation(line: 885, column: 205, scope: !6094)
!6094 = !DILexicalBlockFile(scope: !814, file: !450, discriminator: 5)
!6095 = !DILocation(line: 886, column: 26, scope: !815)
!6096 = !DILocation(line: 886, column: 13, scope: !815)
!6097 = !DILocation(line: 888, column: 13, scope: !815)
!6098 = !DILocation(line: 890, column: 37, scope: !822)
!6099 = !DILocation(line: 890, column: 16, scope: !822)
!6100 = !DILocation(line: 890, column: 47, scope: !822)
!6101 = !DILocation(line: 890, column: 53, scope: !822)
!6102 = !DILocation(line: 890, column: 59, scope: !822)
!6103 = !DILocation(line: 890, column: 85, scope: !6104)
!6104 = !DILexicalBlockFile(scope: !822, file: !450, discriminator: 1)
!6105 = !DILocation(line: 890, column: 64, scope: !822)
!6106 = !DILocation(line: 890, column: 95, scope: !822)
!6107 = !DILocation(line: 890, column: 104, scope: !822)
!6108 = !DILocation(line: 890, column: 110, scope: !822)
!6109 = !DILocation(line: 891, column: 36, scope: !822)
!6110 = !DILocation(line: 891, column: 15, scope: !822)
!6111 = !DILocation(line: 891, column: 46, scope: !822)
!6112 = !DILocation(line: 891, column: 52, scope: !822)
!6113 = !DILocation(line: 891, column: 57, scope: !822)
!6114 = !DILocation(line: 891, column: 83, scope: !6104)
!6115 = !DILocation(line: 891, column: 62, scope: !822)
!6116 = !DILocation(line: 891, column: 93, scope: !822)
!6117 = !DILocation(line: 891, column: 99, scope: !822)
!6118 = !DILocation(line: 890, column: 13, scope: !817)
!6119 = !DILocation(line: 892, column: 13, scope: !821)
!6120 = !DILocation(line: 892, column: 18, scope: !6121)
!6121 = !DILexicalBlockFile(scope: !820, file: !450, discriminator: 1)
!6122 = !DILocation(line: 892, column: 28, scope: !820)
!6123 = !DILocation(line: 892, column: 58, scope: !820)
!6124 = !DILocation(line: 892, column: 75, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !820, file: !450, line: 892, column: 72)
!6126 = !DILocation(line: 892, column: 92, scope: !6125)
!6127 = !DILocation(line: 892, column: 72, scope: !6125)
!6128 = !DILocation(line: 892, column: 102, scope: !6125)
!6129 = !DILocation(line: 892, column: 72, scope: !820)
!6130 = !DILocation(line: 892, column: 72, scope: !6131)
!6131 = !DILexicalBlockFile(scope: !820, file: !450, discriminator: 2)
!6132 = !DILocation(line: 892, column: 133, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !6125, file: !450, discriminator: 3)
!6134 = !DILocation(line: 892, column: 151, scope: !6125)
!6135 = !DILocation(line: 892, column: 161, scope: !6125)
!6136 = !DILocation(line: 892, column: 186, scope: !6125)
!6137 = !DILocation(line: 892, column: 117, scope: !6125)
!6138 = !DILocation(line: 892, column: 205, scope: !6139)
!6139 = !DILexicalBlockFile(scope: !821, file: !450, discriminator: 4)
!6140 = !DILocation(line: 892, column: 205, scope: !820)
!6141 = !DILocation(line: 892, column: 205, scope: !6142)
!6142 = !DILexicalBlockFile(scope: !820, file: !450, discriminator: 5)
!6143 = !DILocation(line: 893, column: 26, scope: !821)
!6144 = !DILocation(line: 893, column: 13, scope: !821)
!6145 = !DILocation(line: 896, column: 13, scope: !821)
!6146 = !DILocation(line: 898, column: 5, scope: !817)
!6147 = !DILocation(line: 900, column: 9, scope: !825)
!6148 = !DILocation(line: 900, column: 14, scope: !6149)
!6149 = !DILexicalBlockFile(scope: !824, file: !450, discriminator: 1)
!6150 = !DILocation(line: 900, column: 24, scope: !824)
!6151 = !DILocation(line: 900, column: 54, scope: !824)
!6152 = !DILocation(line: 900, column: 71, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !824, file: !450, line: 900, column: 68)
!6154 = !DILocation(line: 900, column: 88, scope: !6153)
!6155 = !DILocation(line: 900, column: 68, scope: !6153)
!6156 = !DILocation(line: 900, column: 98, scope: !6153)
!6157 = !DILocation(line: 900, column: 68, scope: !824)
!6158 = !DILocation(line: 900, column: 68, scope: !6159)
!6159 = !DILexicalBlockFile(scope: !824, file: !450, discriminator: 2)
!6160 = !DILocation(line: 900, column: 129, scope: !6161)
!6161 = !DILexicalBlockFile(scope: !6153, file: !450, discriminator: 3)
!6162 = !DILocation(line: 900, column: 147, scope: !6153)
!6163 = !DILocation(line: 900, column: 157, scope: !6153)
!6164 = !DILocation(line: 900, column: 182, scope: !6153)
!6165 = !DILocation(line: 900, column: 113, scope: !6153)
!6166 = !DILocation(line: 900, column: 201, scope: !6167)
!6167 = !DILexicalBlockFile(scope: !825, file: !450, discriminator: 4)
!6168 = !DILocation(line: 900, column: 201, scope: !824)
!6169 = !DILocation(line: 900, column: 201, scope: !6170)
!6170 = !DILexicalBlockFile(scope: !824, file: !450, discriminator: 5)
!6171 = !DILocation(line: 901, column: 22, scope: !825)
!6172 = !DILocation(line: 904, column: 22, scope: !825)
!6173 = !DILocation(line: 904, column: 42, scope: !825)
!6174 = !DILocation(line: 904, column: 52, scope: !825)
!6175 = !DILocation(line: 904, column: 62, scope: !825)
!6176 = !DILocation(line: 901, column: 9, scope: !825)
!6177 = !DILocation(line: 905, column: 9, scope: !825)
!6178 = !DILocation(line: 908, column: 12, scope: !805)
!6179 = !DILocation(line: 908, column: 5, scope: !805)
!6180 = !DILocation(line: 909, column: 1, scope: !805)
!6181 = !DILocation(line: 946, column: 23, scope: !856)
!6182 = !DILocation(line: 946, column: 41, scope: !856)
!6183 = !DILocation(line: 948, column: 5, scope: !856)
!6184 = !DILocation(line: 948, column: 15, scope: !856)
!6185 = !DILocation(line: 955, column: 9, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !856, file: !450, line: 955, column: 9)
!6187 = !DILocation(line: 955, column: 16, scope: !6186)
!6188 = !DILocation(line: 955, column: 9, scope: !856)
!6189 = !DILocation(line: 956, column: 62, scope: !6186)
!6190 = !DILocation(line: 956, column: 9, scope: !6186)
!6191 = !DILocation(line: 958, column: 37, scope: !856)
!6192 = !DILocation(line: 958, column: 64, scope: !856)
!6193 = !DILocation(line: 958, column: 14, scope: !856)
!6194 = !DILocation(line: 958, column: 12, scope: !856)
!6195 = !DILocation(line: 960, column: 9, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !856, file: !450, line: 960, column: 9)
!6197 = !DILocation(line: 960, column: 16, scope: !6196)
!6198 = !DILocation(line: 960, column: 30, scope: !6196)
!6199 = !DILocation(line: 960, column: 33, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6196, file: !450, discriminator: 1)
!6201 = !DILocation(line: 960, column: 40, scope: !6196)
!6202 = !DILocation(line: 960, column: 9, scope: !856)
!6203 = !DILocation(line: 961, column: 16, scope: !6196)
!6204 = !DILocation(line: 961, column: 9, scope: !6196)
!6205 = !DILocation(line: 963, column: 27, scope: !864)
!6206 = !DILocation(line: 963, column: 37, scope: !864)
!6207 = !DILocation(line: 963, column: 48, scope: !864)
!6208 = !DILocation(line: 963, column: 57, scope: !864)
!6209 = !DILocation(line: 963, column: 74, scope: !864)
!6210 = !DILocation(line: 963, column: 9, scope: !856)
!6211 = !DILocation(line: 964, column: 22, scope: !863)
!6212 = !DILocation(line: 966, column: 36, scope: !863)
!6213 = !DILocation(line: 966, column: 46, scope: !863)
!6214 = !DILocation(line: 966, column: 56, scope: !863)
!6215 = !DILocation(line: 964, column: 9, scope: !863)
!6216 = !DILocation(line: 967, column: 9, scope: !863)
!6217 = !DILocation(line: 967, column: 14, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !862, file: !450, discriminator: 1)
!6219 = !DILocation(line: 967, column: 24, scope: !862)
!6220 = !DILocation(line: 967, column: 54, scope: !862)
!6221 = !DILocation(line: 967, column: 71, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !862, file: !450, line: 967, column: 68)
!6223 = !DILocation(line: 967, column: 88, scope: !6222)
!6224 = !DILocation(line: 967, column: 68, scope: !6222)
!6225 = !DILocation(line: 967, column: 98, scope: !6222)
!6226 = !DILocation(line: 967, column: 68, scope: !862)
!6227 = !DILocation(line: 967, column: 68, scope: !6228)
!6228 = !DILexicalBlockFile(scope: !862, file: !450, discriminator: 2)
!6229 = !DILocation(line: 967, column: 129, scope: !6230)
!6230 = !DILexicalBlockFile(scope: !6222, file: !450, discriminator: 3)
!6231 = !DILocation(line: 967, column: 147, scope: !6222)
!6232 = !DILocation(line: 967, column: 157, scope: !6222)
!6233 = !DILocation(line: 967, column: 182, scope: !6222)
!6234 = !DILocation(line: 967, column: 113, scope: !6222)
!6235 = !DILocation(line: 967, column: 201, scope: !6236)
!6236 = !DILexicalBlockFile(scope: !863, file: !450, discriminator: 4)
!6237 = !DILocation(line: 967, column: 201, scope: !862)
!6238 = !DILocation(line: 967, column: 201, scope: !6239)
!6239 = !DILexicalBlockFile(scope: !862, file: !450, discriminator: 5)
!6240 = !DILocation(line: 968, column: 16, scope: !863)
!6241 = !DILocation(line: 969, column: 5, scope: !863)
!6242 = !DILocation(line: 971, column: 12, scope: !856)
!6243 = !DILocation(line: 971, column: 5, scope: !856)
!6244 = !DILocation(line: 972, column: 1, scope: !856)
!6245 = !DILocation(line: 1330, column: 23, scope: !882)
!6246 = !DILocation(line: 1330, column: 30, scope: !882)
!6247 = !DILocation(line: 1330, column: 37, scope: !882)
!6248 = !DILocation(line: 1330, column: 44, scope: !882)
!6249 = !DILocation(line: 1330, column: 52, scope: !882)
!6250 = !DILocation(line: 1330, column: 60, scope: !882)
!6251 = !DILocation(line: 1330, column: 68, scope: !882)
!6252 = !DILocation(line: 1332, column: 5, scope: !882)
!6253 = !DILocation(line: 1332, column: 15, scope: !882)
!6254 = !DILocation(line: 1333, column: 5, scope: !882)
!6255 = !DILocation(line: 1333, column: 15, scope: !882)
!6256 = !DILocation(line: 1335, column: 12, scope: !882)
!6257 = !DILocation(line: 1335, column: 10, scope: !882)
!6258 = !DILocation(line: 1336, column: 9, scope: !898)
!6259 = !DILocation(line: 1336, column: 14, scope: !898)
!6260 = !DILocation(line: 1336, column: 9, scope: !882)
!6261 = !DILocation(line: 1339, column: 41, scope: !897)
!6262 = !DILocation(line: 1341, column: 41, scope: !897)
!6263 = !DILocation(line: 1341, column: 44, scope: !897)
!6264 = !DILocation(line: 1341, column: 47, scope: !897)
!6265 = !DILocation(line: 1342, column: 41, scope: !897)
!6266 = !DILocation(line: 1342, column: 45, scope: !897)
!6267 = !DILocation(line: 1342, column: 49, scope: !897)
!6268 = !DILocation(line: 1343, column: 49, scope: !897)
!6269 = !DILocation(line: 1343, column: 52, scope: !897)
!6270 = !DILocation(line: 1343, column: 55, scope: !897)
!6271 = !DILocation(line: 1343, column: 41, scope: !897)
!6272 = !DILocation(line: 1344, column: 59, scope: !897)
!6273 = !DILocation(line: 1344, column: 62, scope: !897)
!6274 = !DILocation(line: 1344, column: 41, scope: !897)
!6275 = !DILocation(line: 1344, column: 67, scope: !897)
!6276 = !DILocation(line: 1344, column: 65, scope: !897)
!6277 = !DILocation(line: 1345, column: 41, scope: !897)
!6278 = !DILocation(line: 1339, column: 18, scope: !897)
!6279 = !DILocation(line: 1339, column: 16, scope: !897)
!6280 = !DILocation(line: 1346, column: 9, scope: !897)
!6281 = !DILocation(line: 1346, column: 14, scope: !6282)
!6282 = !DILexicalBlockFile(scope: !896, file: !450, discriminator: 1)
!6283 = !DILocation(line: 1346, column: 24, scope: !896)
!6284 = !DILocation(line: 1346, column: 54, scope: !896)
!6285 = !DILocation(line: 1346, column: 69, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !896, file: !450, line: 1346, column: 66)
!6287 = !DILocation(line: 1346, column: 86, scope: !6286)
!6288 = !DILocation(line: 1346, column: 66, scope: !6286)
!6289 = !DILocation(line: 1346, column: 96, scope: !6286)
!6290 = !DILocation(line: 1346, column: 66, scope: !896)
!6291 = !DILocation(line: 1346, column: 66, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !896, file: !450, discriminator: 2)
!6293 = !DILocation(line: 1346, column: 127, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6286, file: !450, discriminator: 3)
!6295 = !DILocation(line: 1346, column: 145, scope: !6286)
!6296 = !DILocation(line: 1346, column: 155, scope: !6286)
!6297 = !DILocation(line: 1346, column: 180, scope: !6286)
!6298 = !DILocation(line: 1346, column: 111, scope: !6286)
!6299 = !DILocation(line: 1346, column: 199, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !897, file: !450, discriminator: 4)
!6301 = !DILocation(line: 1346, column: 199, scope: !896)
!6302 = !DILocation(line: 1346, column: 199, scope: !6303)
!6303 = !DILexicalBlockFile(scope: !896, file: !450, discriminator: 5)
!6304 = !DILocation(line: 1347, column: 5, scope: !897)
!6305 = !DILocation(line: 1348, column: 12, scope: !882)
!6306 = !DILocation(line: 1349, column: 1, scope: !882)
!6307 = !DILocation(line: 1348, column: 5, scope: !882)
!6308 = !DILocation(line: 354, column: 22, scope: !907)
!6309 = !DILocation(line: 356, column: 5, scope: !907)
!6310 = !DILocation(line: 356, column: 9, scope: !907)
!6311 = !DILocation(line: 356, column: 32, scope: !907)
!6312 = !DILocation(line: 356, column: 21, scope: !907)
!6313 = !DILocation(line: 358, column: 5, scope: !907)
!6314 = !DILocation(line: 358, column: 9, scope: !907)
!6315 = !DILocation(line: 358, column: 26, scope: !907)
!6316 = !DILocation(line: 358, column: 36, scope: !907)
!6317 = !DILocation(line: 358, column: 41, scope: !907)
!6318 = !DILocation(line: 360, column: 5, scope: !907)
!6319 = !DILocation(line: 360, column: 9, scope: !907)
!6320 = !DILocation(line: 360, column: 24, scope: !907)
!6321 = !DILocation(line: 360, column: 36, scope: !907)
!6322 = !DILocation(line: 360, column: 34, scope: !907)
!6323 = !DILocation(line: 362, column: 9, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !907, file: !450, line: 362, column: 9)
!6325 = !DILocation(line: 362, column: 23, scope: !6324)
!6326 = !DILocation(line: 362, column: 9, scope: !907)
!6327 = !DILocation(line: 363, column: 22, scope: !6324)
!6328 = !DILocation(line: 363, column: 9, scope: !6324)
!6329 = !DILocation(line: 364, column: 12, scope: !907)
!6330 = !DILocation(line: 365, column: 1, scope: !907)
!6331 = !DILocation(line: 364, column: 5, scope: !907)
!6332 = !DILocation(line: 2809, column: 32, scope: !943)
!6333 = !DILocation(line: 2811, column: 5, scope: !943)
!6334 = !DILocation(line: 2811, column: 15, scope: !943)
!6335 = !DILocation(line: 2812, column: 46, scope: !943)
!6336 = !DILocation(line: 2812, column: 52, scope: !943)
!6337 = !DILocation(line: 2812, column: 13, scope: !943)
!6338 = !DILocation(line: 2812, column: 11, scope: !943)
!6339 = !DILocation(line: 2814, column: 33, scope: !943)
!6340 = !DILocation(line: 2814, column: 12, scope: !943)
!6341 = !DILocation(line: 2815, column: 1, scope: !943)
!6342 = !DILocation(line: 2814, column: 5, scope: !943)
!6343 = !DILocation(line: 2392, column: 28, scope: !947)
!6344 = !DILocation(line: 2392, column: 40, scope: !947)
!6345 = !DILocation(line: 2394, column: 49, scope: !947)
!6346 = !DILocation(line: 2394, column: 56, scope: !947)
!6347 = !DILocation(line: 2394, column: 30, scope: !947)
!6348 = !DILocation(line: 2394, column: 64, scope: !947)
!6349 = !DILocation(line: 2394, column: 91, scope: !947)
!6350 = !DILocation(line: 2394, column: 98, scope: !947)
!6351 = !DILocation(line: 2394, column: 72, scope: !947)
!6352 = !DILocation(line: 2394, column: 70, scope: !947)
!6353 = !DILocation(line: 2394, column: 28, scope: !947)
!6354 = !DILocation(line: 2394, column: 12, scope: !947)
!6355 = !DILocation(line: 2394, column: 5, scope: !947)
!6356 = !DILocation(line: 2398, column: 29, scope: !953)
!6357 = !DILocation(line: 2398, column: 41, scope: !953)
!6358 = !DILocation(line: 2400, column: 48, scope: !953)
!6359 = !DILocation(line: 2400, column: 55, scope: !953)
!6360 = !DILocation(line: 2400, column: 29, scope: !953)
!6361 = !DILocation(line: 2400, column: 28, scope: !953)
!6362 = !DILocation(line: 2400, column: 12, scope: !953)
!6363 = !DILocation(line: 2400, column: 5, scope: !953)
!6364 = !DILocation(line: 2404, column: 27, scope: !957)
!6365 = !DILocation(line: 2404, column: 39, scope: !957)
!6366 = !DILocation(line: 2406, column: 48, scope: !957)
!6367 = !DILocation(line: 2406, column: 55, scope: !957)
!6368 = !DILocation(line: 2406, column: 29, scope: !957)
!6369 = !DILocation(line: 2406, column: 28, scope: !957)
!6370 = !DILocation(line: 2406, column: 12, scope: !957)
!6371 = !DILocation(line: 2406, column: 5, scope: !957)
!6372 = !DILocation(line: 389, column: 21, scope: !981)
!6373 = !DILocation(line: 389, column: 31, scope: !981)
!6374 = !DILocation(line: 389, column: 42, scope: !981)
!6375 = !DILocation(line: 392, column: 9, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !981, file: !450, line: 392, column: 9)
!6377 = !DILocation(line: 392, column: 14, scope: !6376)
!6378 = !DILocation(line: 392, column: 18, scope: !6376)
!6379 = !DILocation(line: 392, column: 21, scope: !6380)
!6380 = !DILexicalBlockFile(scope: !6376, file: !450, discriminator: 1)
!6381 = !DILocation(line: 392, column: 26, scope: !6376)
!6382 = !DILocation(line: 392, column: 9, scope: !981)
!6383 = !DILocation(line: 393, column: 25, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6376, file: !450, line: 392, column: 34)
!6385 = !DILocation(line: 393, column: 9, scope: !6384)
!6386 = !DILocation(line: 395, column: 9, scope: !6384)
!6387 = !DILocation(line: 397, column: 9, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !981, file: !450, line: 397, column: 9)
!6389 = !DILocation(line: 397, column: 15, scope: !6388)
!6390 = !DILocation(line: 397, column: 19, scope: !6388)
!6391 = !DILocation(line: 397, column: 22, scope: !6392)
!6392 = !DILexicalBlockFile(scope: !6388, file: !450, discriminator: 1)
!6393 = !DILocation(line: 397, column: 28, scope: !6388)
!6394 = !DILocation(line: 397, column: 9, scope: !981)
!6395 = !DILocation(line: 398, column: 25, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6388, file: !450, line: 397, column: 34)
!6397 = !DILocation(line: 398, column: 9, scope: !6396)
!6398 = !DILocation(line: 400, column: 9, scope: !6396)
!6399 = !DILocation(line: 402, column: 9, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !981, file: !450, line: 402, column: 9)
!6401 = !DILocation(line: 402, column: 13, scope: !6400)
!6402 = !DILocation(line: 402, column: 17, scope: !6400)
!6403 = !DILocation(line: 402, column: 20, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !6400, file: !450, discriminator: 1)
!6405 = !DILocation(line: 402, column: 40, scope: !6400)
!6406 = !DILocation(line: 402, column: 46, scope: !6400)
!6407 = !DILocation(line: 402, column: 26, scope: !6400)
!6408 = !DILocation(line: 402, column: 24, scope: !6400)
!6409 = !DILocation(line: 402, column: 9, scope: !981)
!6410 = !DILocation(line: 403, column: 25, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6400, file: !450, line: 402, column: 54)
!6412 = !DILocation(line: 403, column: 9, scope: !6411)
!6413 = !DILocation(line: 405, column: 9, scope: !6411)
!6414 = !DILocation(line: 407, column: 5, scope: !981)
!6415 = !DILocation(line: 408, column: 1, scope: !981)
!6416 = !DILocation(line: 4325, column: 39, scope: !986)
!6417 = !DILocation(line: 4327, column: 38, scope: !994)
!6418 = !DILocation(line: 4327, column: 11, scope: !994)
!6419 = !DILocation(line: 4327, column: 46, scope: !994)
!6420 = !DILocation(line: 4327, column: 9, scope: !994)
!6421 = !DILocation(line: 4327, column: 9, scope: !986)
!6422 = !DILocation(line: 4328, column: 9, scope: !993)
!6423 = !DILocation(line: 4328, column: 14, scope: !6424)
!6424 = !DILexicalBlockFile(scope: !992, file: !450, discriminator: 1)
!6425 = !DILocation(line: 4328, column: 24, scope: !992)
!6426 = !DILocation(line: 4328, column: 55, scope: !992)
!6427 = !DILocation(line: 4328, column: 61, scope: !992)
!6428 = !DILocation(line: 4328, column: 74, scope: !997)
!6429 = !DILocation(line: 4328, column: 90, scope: !997)
!6430 = !DILocation(line: 4328, column: 74, scope: !992)
!6431 = !DILocation(line: 4328, column: 105, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !997, file: !450, discriminator: 2)
!6433 = !DILocation(line: 4328, column: 110, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !996, file: !450, discriminator: 4)
!6435 = !DILocation(line: 4328, column: 120, scope: !996)
!6436 = !DILocation(line: 4328, column: 150, scope: !996)
!6437 = !DILocation(line: 4328, column: 176, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !996, file: !450, line: 4328, column: 173)
!6439 = !DILocation(line: 4328, column: 193, scope: !6438)
!6440 = !DILocation(line: 4328, column: 173, scope: !6438)
!6441 = !DILocation(line: 4328, column: 203, scope: !6438)
!6442 = !DILocation(line: 4328, column: 173, scope: !996)
!6443 = !DILocation(line: 4328, column: 173, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !996, file: !450, discriminator: 5)
!6445 = !DILocation(line: 4328, column: 234, scope: !6446)
!6446 = !DILexicalBlockFile(scope: !6438, file: !450, discriminator: 6)
!6447 = !DILocation(line: 4328, column: 252, scope: !6438)
!6448 = !DILocation(line: 4328, column: 262, scope: !6438)
!6449 = !DILocation(line: 4328, column: 287, scope: !6438)
!6450 = !DILocation(line: 4328, column: 218, scope: !6438)
!6451 = !DILocation(line: 4328, column: 306, scope: !6452)
!6452 = !DILexicalBlockFile(scope: !997, file: !450, discriminator: 7)
!6453 = !DILocation(line: 4328, column: 306, scope: !996)
!6454 = !DILocation(line: 4328, column: 306, scope: !6455)
!6455 = !DILexicalBlockFile(scope: !996, file: !450, discriminator: 8)
!6456 = !DILocation(line: 4328, column: 306, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !996, file: !450, discriminator: 9)
!6458 = !DILocation(line: 4328, column: 319, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !6460, file: !450, discriminator: 10)
!6460 = !DILexicalBlockFile(scope: !993, file: !450, discriminator: 3)
!6461 = !DILocation(line: 4328, column: 319, scope: !992)
!6462 = !DILocation(line: 4329, column: 5, scope: !993)
!6463 = !DILocation(line: 4330, column: 19, scope: !986)
!6464 = !DILocation(line: 4330, column: 7, scope: !986)
!6465 = !DILocation(line: 4330, column: 27, scope: !986)
!6466 = !DILocation(line: 4330, column: 37, scope: !986)
!6467 = !{!2604, !2564, i64 320}
!6468 = !DILocation(line: 4330, column: 57, scope: !986)
!6469 = !DILocation(line: 4330, column: 45, scope: !986)
!6470 = !DILocation(line: 4330, column: 5, scope: !986)
!6471 = !DILocation(line: 4331, column: 1, scope: !986)
!6472 = !DILocation(line: 4499, column: 36, scope: !998)
!6473 = !DILocation(line: 4501, column: 5, scope: !998)
!6474 = !DILocation(line: 4501, column: 17, scope: !998)
!6475 = !DILocation(line: 4501, column: 43, scope: !998)
!6476 = !DILocation(line: 4501, column: 31, scope: !998)
!6477 = !DILocation(line: 4501, column: 51, scope: !998)
!6478 = !DILocation(line: 4501, column: 61, scope: !998)
!6479 = !DILocation(line: 4502, column: 5, scope: !998)
!6480 = !DILocation(line: 4502, column: 15, scope: !998)
!6481 = !DILocation(line: 4504, column: 34, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !998, file: !450, line: 4504, column: 9)
!6483 = !DILocation(line: 4504, column: 41, scope: !6482)
!6484 = !DILocation(line: 4504, column: 11, scope: !6482)
!6485 = !DILocation(line: 4504, column: 49, scope: !6482)
!6486 = !DILocation(line: 4504, column: 82, scope: !6482)
!6487 = !DILocation(line: 4504, column: 89, scope: !6482)
!6488 = !DILocation(line: 4504, column: 59, scope: !6482)
!6489 = !DILocation(line: 4504, column: 97, scope: !6482)
!6490 = !DILocation(line: 4504, column: 56, scope: !6482)
!6491 = !DILocation(line: 4504, column: 128, scope: !6482)
!6492 = !DILocation(line: 4504, column: 135, scope: !6482)
!6493 = !DILocation(line: 4504, column: 105, scope: !6482)
!6494 = !DILocation(line: 4504, column: 103, scope: !6482)
!6495 = !DILocation(line: 4504, column: 9, scope: !998)
!6496 = !DILocation(line: 4507, column: 23, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6482, file: !450, line: 4504, column: 145)
!6498 = !DILocation(line: 4508, column: 44, scope: !6497)
!6499 = !DILocation(line: 4508, column: 26, scope: !6497)
!6500 = !DILocation(line: 4508, column: 51, scope: !6497)
!6501 = !DILocation(line: 4508, column: 25, scope: !6497)
!6502 = !DILocation(line: 4508, column: 59, scope: !6497)
!6503 = !DILocation(line: 4508, column: 86, scope: !6497)
!6504 = !DILocation(line: 4508, column: 68, scope: !6497)
!6505 = !DILocation(line: 4508, column: 93, scope: !6497)
!6506 = !DILocation(line: 4508, column: 67, scope: !6497)
!6507 = !DILocation(line: 4508, column: 65, scope: !6497)
!6508 = !DILocation(line: 4508, column: 123, scope: !6497)
!6509 = !DILocation(line: 4508, column: 105, scope: !6497)
!6510 = !DILocation(line: 4508, column: 130, scope: !6497)
!6511 = !DILocation(line: 4508, column: 104, scope: !6497)
!6512 = !DILocation(line: 4508, column: 103, scope: !6497)
!6513 = !DILocation(line: 4508, column: 160, scope: !6497)
!6514 = !DILocation(line: 4508, column: 142, scope: !6497)
!6515 = !DILocation(line: 4508, column: 167, scope: !6497)
!6516 = !DILocation(line: 4508, column: 141, scope: !6497)
!6517 = !DILocation(line: 4508, column: 140, scope: !6497)
!6518 = !DILocation(line: 4509, column: 47, scope: !6497)
!6519 = !DILocation(line: 4509, column: 54, scope: !6497)
!6520 = !DILocation(line: 4509, column: 24, scope: !6497)
!6521 = !DILocation(line: 4509, column: 23, scope: !6497)
!6522 = !DILocation(line: 4509, column: 88, scope: !6497)
!6523 = !DILocation(line: 4509, column: 95, scope: !6497)
!6524 = !DILocation(line: 4509, column: 65, scope: !6497)
!6525 = !DILocation(line: 4509, column: 64, scope: !6497)
!6526 = !DILocation(line: 4510, column: 47, scope: !6497)
!6527 = !DILocation(line: 4510, column: 54, scope: !6497)
!6528 = !DILocation(line: 4510, column: 24, scope: !6497)
!6529 = !DILocation(line: 4510, column: 23, scope: !6497)
!6530 = !DILocation(line: 4511, column: 48, scope: !6497)
!6531 = !DILocation(line: 4511, column: 55, scope: !6497)
!6532 = !DILocation(line: 4511, column: 25, scope: !6497)
!6533 = !DILocation(line: 4511, column: 63, scope: !6497)
!6534 = !DILocation(line: 4511, column: 96, scope: !6497)
!6535 = !DILocation(line: 4511, column: 103, scope: !6497)
!6536 = !DILocation(line: 4511, column: 73, scope: !6497)
!6537 = !DILocation(line: 4511, column: 111, scope: !6497)
!6538 = !DILocation(line: 4511, column: 70, scope: !6497)
!6539 = !DILocation(line: 4511, column: 142, scope: !6497)
!6540 = !DILocation(line: 4511, column: 149, scope: !6497)
!6541 = !DILocation(line: 4511, column: 119, scope: !6497)
!6542 = !DILocation(line: 4511, column: 117, scope: !6497)
!6543 = !DILocation(line: 4505, column: 20, scope: !6497)
!6544 = !DILocation(line: 4505, column: 18, scope: !6497)
!6545 = !DILocation(line: 4512, column: 5, scope: !6497)
!6546 = !DILocation(line: 4513, column: 38, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6482, file: !450, line: 4513, column: 14)
!6548 = !DILocation(line: 4513, column: 45, scope: !6547)
!6549 = !DILocation(line: 4513, column: 15, scope: !6547)
!6550 = !DILocation(line: 4513, column: 14, scope: !6547)
!6551 = !DILocation(line: 4513, column: 14, scope: !6482)
!6552 = !DILocation(line: 4516, column: 23, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6547, file: !450, line: 4513, column: 55)
!6554 = !DILocation(line: 4517, column: 44, scope: !6553)
!6555 = !DILocation(line: 4517, column: 26, scope: !6553)
!6556 = !DILocation(line: 4517, column: 51, scope: !6553)
!6557 = !DILocation(line: 4517, column: 25, scope: !6553)
!6558 = !DILocation(line: 4517, column: 59, scope: !6553)
!6559 = !DILocation(line: 4517, column: 86, scope: !6553)
!6560 = !DILocation(line: 4517, column: 68, scope: !6553)
!6561 = !DILocation(line: 4517, column: 93, scope: !6553)
!6562 = !DILocation(line: 4517, column: 67, scope: !6553)
!6563 = !DILocation(line: 4517, column: 65, scope: !6553)
!6564 = !DILocation(line: 4517, column: 123, scope: !6553)
!6565 = !DILocation(line: 4517, column: 105, scope: !6553)
!6566 = !DILocation(line: 4517, column: 130, scope: !6553)
!6567 = !DILocation(line: 4517, column: 104, scope: !6553)
!6568 = !DILocation(line: 4517, column: 103, scope: !6553)
!6569 = !DILocation(line: 4517, column: 160, scope: !6553)
!6570 = !DILocation(line: 4517, column: 142, scope: !6553)
!6571 = !DILocation(line: 4517, column: 167, scope: !6553)
!6572 = !DILocation(line: 4517, column: 141, scope: !6553)
!6573 = !DILocation(line: 4517, column: 140, scope: !6553)
!6574 = !DILocation(line: 4518, column: 47, scope: !6553)
!6575 = !DILocation(line: 4518, column: 54, scope: !6553)
!6576 = !DILocation(line: 4518, column: 24, scope: !6553)
!6577 = !DILocation(line: 4518, column: 23, scope: !6553)
!6578 = !DILocation(line: 4518, column: 88, scope: !6553)
!6579 = !DILocation(line: 4518, column: 95, scope: !6553)
!6580 = !DILocation(line: 4518, column: 65, scope: !6553)
!6581 = !DILocation(line: 4518, column: 64, scope: !6553)
!6582 = !DILocation(line: 4519, column: 47, scope: !6553)
!6583 = !DILocation(line: 4519, column: 54, scope: !6553)
!6584 = !DILocation(line: 4519, column: 24, scope: !6553)
!6585 = !DILocation(line: 4519, column: 23, scope: !6553)
!6586 = !DILocation(line: 4514, column: 20, scope: !6553)
!6587 = !DILocation(line: 4514, column: 18, scope: !6553)
!6588 = !DILocation(line: 4520, column: 5, scope: !6553)
!6589 = !DILocation(line: 4524, column: 23, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6547, file: !450, line: 4521, column: 10)
!6591 = !DILocation(line: 4525, column: 44, scope: !6590)
!6592 = !DILocation(line: 4525, column: 26, scope: !6590)
!6593 = !DILocation(line: 4525, column: 51, scope: !6590)
!6594 = !DILocation(line: 4525, column: 25, scope: !6590)
!6595 = !DILocation(line: 4525, column: 59, scope: !6590)
!6596 = !DILocation(line: 4525, column: 86, scope: !6590)
!6597 = !DILocation(line: 4525, column: 68, scope: !6590)
!6598 = !DILocation(line: 4525, column: 93, scope: !6590)
!6599 = !DILocation(line: 4525, column: 67, scope: !6590)
!6600 = !DILocation(line: 4525, column: 65, scope: !6590)
!6601 = !DILocation(line: 4525, column: 123, scope: !6590)
!6602 = !DILocation(line: 4525, column: 105, scope: !6590)
!6603 = !DILocation(line: 4525, column: 130, scope: !6590)
!6604 = !DILocation(line: 4525, column: 104, scope: !6590)
!6605 = !DILocation(line: 4525, column: 103, scope: !6590)
!6606 = !DILocation(line: 4525, column: 160, scope: !6590)
!6607 = !DILocation(line: 4525, column: 142, scope: !6590)
!6608 = !DILocation(line: 4525, column: 167, scope: !6590)
!6609 = !DILocation(line: 4525, column: 141, scope: !6590)
!6610 = !DILocation(line: 4525, column: 140, scope: !6590)
!6611 = !DILocation(line: 4526, column: 47, scope: !6590)
!6612 = !DILocation(line: 4526, column: 54, scope: !6590)
!6613 = !DILocation(line: 4526, column: 24, scope: !6590)
!6614 = !DILocation(line: 4526, column: 23, scope: !6590)
!6615 = !DILocation(line: 4526, column: 88, scope: !6590)
!6616 = !DILocation(line: 4526, column: 95, scope: !6590)
!6617 = !DILocation(line: 4526, column: 65, scope: !6590)
!6618 = !DILocation(line: 4526, column: 64, scope: !6590)
!6619 = !DILocation(line: 4522, column: 20, scope: !6590)
!6620 = !DILocation(line: 4522, column: 18, scope: !6590)
!6621 = !DILocation(line: 4528, column: 9, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !998, file: !450, line: 4528, column: 9)
!6623 = !DILocation(line: 4528, column: 18, scope: !6622)
!6624 = !DILocation(line: 4528, column: 32, scope: !6622)
!6625 = !DILocation(line: 4528, column: 66, scope: !6626)
!6626 = !DILexicalBlockFile(scope: !6622, file: !450, discriminator: 1)
!6627 = !DILocation(line: 4528, column: 39, scope: !6622)
!6628 = !DILocation(line: 4528, column: 74, scope: !6622)
!6629 = !DILocation(line: 4528, column: 37, scope: !6622)
!6630 = !DILocation(line: 4528, column: 9, scope: !998)
!6631 = !DILocation(line: 4529, column: 16, scope: !6622)
!6632 = !DILocation(line: 4529, column: 9, scope: !6622)
!6633 = !DILocation(line: 4530, column: 34, scope: !998)
!6634 = !DILocation(line: 4530, column: 44, scope: !998)
!6635 = !DILocation(line: 4530, column: 50, scope: !998)
!6636 = !DILocation(line: 4530, column: 12, scope: !998)
!6637 = !DILocation(line: 4530, column: 5, scope: !998)
!6638 = !DILocation(line: 4531, column: 1, scope: !998)
!6639 = !DILocation(line: 4671, column: 36, scope: !1120)
!6640 = !DILocation(line: 4673, column: 9, scope: !1127)
!6641 = !DILocation(line: 4673, column: 15, scope: !1127)
!6642 = !{!3527, !2607, i64 16}
!6643 = !DILocation(line: 4673, column: 24, scope: !1127)
!6644 = !DILocation(line: 4673, column: 9, scope: !1120)
!6645 = !DILocation(line: 4674, column: 9, scope: !1126)
!6646 = !DILocation(line: 4674, column: 19, scope: !1126)
!6647 = !DILocation(line: 4676, column: 49, scope: !1126)
!6648 = !DILocation(line: 4676, column: 37, scope: !1126)
!6649 = !DILocation(line: 4676, column: 18, scope: !1126)
!6650 = !DILocation(line: 4676, column: 16, scope: !1126)
!6651 = !DILocation(line: 4678, column: 13, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !1126, file: !450, line: 4678, column: 13)
!6653 = !DILocation(line: 4678, column: 20, scope: !6652)
!6654 = !DILocation(line: 4678, column: 13, scope: !1126)
!6655 = !DILocation(line: 4679, column: 13, scope: !6652)
!6656 = !DILocation(line: 4682, column: 13, scope: !1130)
!6657 = !DILocation(line: 4682, column: 20, scope: !1130)
!6658 = !DILocation(line: 4682, column: 13, scope: !1126)
!6659 = !DILocation(line: 4684, column: 34, scope: !1130)
!6660 = !DILocation(line: 4684, column: 40, scope: !1130)
!6661 = !DILocation(line: 4683, column: 30, scope: !1130)
!6662 = !DILocation(line: 4683, column: 13, scope: !1130)
!6663 = !DILocation(line: 4683, column: 19, scope: !1130)
!6664 = !DILocation(line: 4683, column: 28, scope: !1130)
!6665 = !DILocation(line: 4686, column: 13, scope: !1129)
!6666 = !DILocation(line: 4686, column: 23, scope: !1129)
!6667 = !DILocation(line: 4686, column: 31, scope: !1129)
!6668 = !DILocation(line: 4687, column: 13, scope: !1129)
!6669 = !DILocation(line: 4687, column: 17, scope: !1129)
!6670 = !DILocation(line: 4687, column: 23, scope: !1129)
!6671 = !DILocation(line: 4690, column: 52, scope: !1129)
!6672 = !DILocation(line: 4690, column: 34, scope: !1129)
!6673 = !DILocation(line: 4690, column: 59, scope: !1129)
!6674 = !DILocation(line: 4690, column: 33, scope: !1129)
!6675 = !DILocation(line: 4690, column: 67, scope: !1129)
!6676 = !DILocation(line: 4690, column: 94, scope: !1129)
!6677 = !DILocation(line: 4690, column: 76, scope: !1129)
!6678 = !DILocation(line: 4690, column: 101, scope: !1129)
!6679 = !DILocation(line: 4690, column: 75, scope: !1129)
!6680 = !DILocation(line: 4690, column: 73, scope: !1129)
!6681 = !DILocation(line: 4691, column: 51, scope: !1129)
!6682 = !DILocation(line: 4691, column: 33, scope: !1129)
!6683 = !DILocation(line: 4691, column: 58, scope: !1129)
!6684 = !DILocation(line: 4691, column: 32, scope: !1129)
!6685 = !DILocation(line: 4691, column: 31, scope: !1129)
!6686 = !DILocation(line: 4692, column: 51, scope: !1129)
!6687 = !DILocation(line: 4692, column: 33, scope: !1129)
!6688 = !DILocation(line: 4692, column: 58, scope: !1129)
!6689 = !DILocation(line: 4692, column: 32, scope: !1129)
!6690 = !DILocation(line: 4692, column: 31, scope: !1129)
!6691 = !DILocation(line: 4690, column: 20, scope: !1129)
!6692 = !DILocation(line: 4690, column: 18, scope: !1129)
!6693 = !DILocation(line: 4693, column: 47, scope: !1129)
!6694 = !DILocation(line: 4693, column: 54, scope: !1129)
!6695 = !DILocation(line: 4693, column: 24, scope: !1129)
!6696 = !DILocation(line: 4693, column: 23, scope: !1129)
!6697 = !DILocation(line: 4693, column: 63, scope: !1129)
!6698 = !DILocation(line: 4694, column: 47, scope: !1129)
!6699 = !DILocation(line: 4694, column: 54, scope: !1129)
!6700 = !DILocation(line: 4694, column: 24, scope: !1129)
!6701 = !DILocation(line: 4694, column: 23, scope: !1129)
!6702 = !DILocation(line: 4694, column: 63, scope: !1129)
!6703 = !DILocation(line: 4693, column: 70, scope: !1129)
!6704 = !DILocation(line: 4695, column: 47, scope: !1129)
!6705 = !DILocation(line: 4695, column: 54, scope: !1129)
!6706 = !DILocation(line: 4695, column: 24, scope: !1129)
!6707 = !DILocation(line: 4695, column: 23, scope: !1129)
!6708 = !DILocation(line: 4694, column: 68, scope: !1129)
!6709 = !DILocation(line: 4693, column: 21, scope: !1129)
!6710 = !DILocation(line: 4696, column: 34, scope: !1129)
!6711 = !DILocation(line: 4696, column: 40, scope: !1129)
!6712 = !DILocation(line: 4696, column: 74, scope: !1129)
!6713 = !DILocation(line: 4696, column: 81, scope: !1129)
!6714 = !DILocation(line: 4696, column: 51, scope: !1129)
!6715 = !DILocation(line: 4696, column: 89, scope: !1129)
!6716 = !DILocation(line: 4696, column: 122, scope: !1129)
!6717 = !DILocation(line: 4696, column: 129, scope: !1129)
!6718 = !DILocation(line: 4696, column: 99, scope: !1129)
!6719 = !DILocation(line: 4696, column: 137, scope: !1129)
!6720 = !DILocation(line: 4696, column: 96, scope: !1129)
!6721 = !DILocation(line: 4696, column: 168, scope: !1129)
!6722 = !DILocation(line: 4696, column: 175, scope: !1129)
!6723 = !DILocation(line: 4696, column: 145, scope: !1129)
!6724 = !DILocation(line: 4696, column: 143, scope: !1129)
!6725 = !DILocation(line: 4696, column: 21, scope: !1129)
!6726 = !DILocation(line: 4696, column: 19, scope: !1129)
!6727 = !DILocation(line: 4699, column: 17, scope: !1137)
!6728 = !DILocation(line: 4699, column: 23, scope: !1137)
!6729 = !DILocation(line: 4699, column: 17, scope: !1129)
!6730 = !DILocation(line: 4700, column: 17, scope: !1136)
!6731 = !DILocation(line: 4700, column: 22, scope: !6732)
!6732 = !DILexicalBlockFile(scope: !1135, file: !450, discriminator: 1)
!6733 = !DILocation(line: 4700, column: 32, scope: !1135)
!6734 = !DILocation(line: 4700, column: 62, scope: !1135)
!6735 = !DILocation(line: 4700, column: 79, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !1135, file: !450, line: 4700, column: 76)
!6737 = !DILocation(line: 4700, column: 96, scope: !6736)
!6738 = !DILocation(line: 4700, column: 76, scope: !6736)
!6739 = !DILocation(line: 4700, column: 106, scope: !6736)
!6740 = !DILocation(line: 4700, column: 76, scope: !1135)
!6741 = !DILocation(line: 4700, column: 76, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !1135, file: !450, discriminator: 2)
!6743 = !DILocation(line: 4700, column: 137, scope: !6744)
!6744 = !DILexicalBlockFile(scope: !6736, file: !450, discriminator: 3)
!6745 = !DILocation(line: 4700, column: 155, scope: !6736)
!6746 = !DILocation(line: 4700, column: 165, scope: !6736)
!6747 = !DILocation(line: 4700, column: 190, scope: !6736)
!6748 = !DILocation(line: 4700, column: 121, scope: !6736)
!6749 = !DILocation(line: 4700, column: 209, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !1136, file: !450, discriminator: 4)
!6751 = !DILocation(line: 4700, column: 209, scope: !1135)
!6752 = !DILocation(line: 4700, column: 209, scope: !6753)
!6753 = !DILexicalBlockFile(scope: !1135, file: !450, discriminator: 5)
!6754 = !DILocation(line: 4701, column: 17, scope: !1136)
!6755 = !DILocation(line: 4703, column: 36, scope: !1129)
!6756 = !DILocation(line: 4703, column: 43, scope: !1129)
!6757 = !DILocation(line: 4703, column: 21, scope: !1129)
!6758 = !DILocation(line: 4703, column: 19, scope: !1129)
!6759 = !DILocation(line: 4704, column: 13, scope: !1129)
!6760 = !DILocation(line: 4704, column: 18, scope: !6761)
!6761 = !DILexicalBlockFile(scope: !1139, file: !450, discriminator: 1)
!6762 = !DILocation(line: 4704, column: 28, scope: !1139)
!6763 = !DILocation(line: 4704, column: 58, scope: !1139)
!6764 = !DILocation(line: 4704, column: 74, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !1139, file: !450, line: 4704, column: 71)
!6766 = !DILocation(line: 4704, column: 91, scope: !6765)
!6767 = !DILocation(line: 4704, column: 71, scope: !6765)
!6768 = !DILocation(line: 4704, column: 101, scope: !6765)
!6769 = !DILocation(line: 4704, column: 71, scope: !1139)
!6770 = !DILocation(line: 4704, column: 71, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !1139, file: !450, discriminator: 2)
!6772 = !DILocation(line: 4704, column: 132, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !6765, file: !450, discriminator: 3)
!6774 = !DILocation(line: 4704, column: 150, scope: !6765)
!6775 = !DILocation(line: 4704, column: 160, scope: !6765)
!6776 = !DILocation(line: 4704, column: 185, scope: !6765)
!6777 = !DILocation(line: 4704, column: 116, scope: !6765)
!6778 = !DILocation(line: 4704, column: 204, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !1129, file: !450, discriminator: 4)
!6780 = !DILocation(line: 4704, column: 204, scope: !1139)
!6781 = !DILocation(line: 4704, column: 204, scope: !6782)
!6782 = !DILexicalBlockFile(scope: !1139, file: !450, discriminator: 5)
!6783 = !DILocation(line: 4705, column: 17, scope: !1143)
!6784 = !DILocation(line: 4705, column: 23, scope: !1143)
!6785 = !DILocation(line: 4705, column: 17, scope: !1129)
!6786 = !DILocation(line: 4706, column: 17, scope: !1142)
!6787 = !DILocation(line: 4706, column: 22, scope: !6788)
!6788 = !DILexicalBlockFile(scope: !1141, file: !450, discriminator: 1)
!6789 = !DILocation(line: 4706, column: 32, scope: !1141)
!6790 = !DILocation(line: 4706, column: 62, scope: !1141)
!6791 = !DILocation(line: 4706, column: 79, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !1141, file: !450, line: 4706, column: 76)
!6793 = !DILocation(line: 4706, column: 96, scope: !6792)
!6794 = !DILocation(line: 4706, column: 76, scope: !6792)
!6795 = !DILocation(line: 4706, column: 106, scope: !6792)
!6796 = !DILocation(line: 4706, column: 76, scope: !1141)
!6797 = !DILocation(line: 4706, column: 76, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !1141, file: !450, discriminator: 2)
!6799 = !DILocation(line: 4706, column: 137, scope: !6800)
!6800 = !DILexicalBlockFile(scope: !6792, file: !450, discriminator: 3)
!6801 = !DILocation(line: 4706, column: 155, scope: !6792)
!6802 = !DILocation(line: 4706, column: 165, scope: !6792)
!6803 = !DILocation(line: 4706, column: 190, scope: !6792)
!6804 = !DILocation(line: 4706, column: 121, scope: !6792)
!6805 = !DILocation(line: 4706, column: 209, scope: !6806)
!6806 = !DILexicalBlockFile(scope: !1142, file: !450, discriminator: 4)
!6807 = !DILocation(line: 4706, column: 209, scope: !1141)
!6808 = !DILocation(line: 4706, column: 209, scope: !6809)
!6809 = !DILexicalBlockFile(scope: !1141, file: !450, discriminator: 5)
!6810 = !DILocation(line: 4707, column: 17, scope: !1142)
!6811 = !DILocation(line: 4709, column: 44, scope: !1129)
!6812 = !DILocation(line: 4709, column: 30, scope: !1129)
!6813 = !DILocation(line: 4709, column: 13, scope: !1129)
!6814 = !DILocation(line: 4709, column: 19, scope: !1129)
!6815 = !DILocation(line: 4709, column: 28, scope: !1129)
!6816 = !DILocation(line: 4710, column: 13, scope: !1129)
!6817 = !DILocation(line: 4710, column: 18, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !1145, file: !450, discriminator: 1)
!6819 = !DILocation(line: 4710, column: 28, scope: !1145)
!6820 = !DILocation(line: 4710, column: 58, scope: !1145)
!6821 = !DILocation(line: 4710, column: 74, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !1145, file: !450, line: 4710, column: 71)
!6823 = !DILocation(line: 4710, column: 91, scope: !6822)
!6824 = !DILocation(line: 4710, column: 71, scope: !6822)
!6825 = !DILocation(line: 4710, column: 101, scope: !6822)
!6826 = !DILocation(line: 4710, column: 71, scope: !1145)
!6827 = !DILocation(line: 4710, column: 71, scope: !6828)
!6828 = !DILexicalBlockFile(scope: !1145, file: !450, discriminator: 2)
!6829 = !DILocation(line: 4710, column: 132, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !6822, file: !450, discriminator: 3)
!6831 = !DILocation(line: 4710, column: 150, scope: !6822)
!6832 = !DILocation(line: 4710, column: 160, scope: !6822)
!6833 = !DILocation(line: 4710, column: 185, scope: !6822)
!6834 = !DILocation(line: 4710, column: 116, scope: !6822)
!6835 = !DILocation(line: 4710, column: 204, scope: !6779)
!6836 = !DILocation(line: 4710, column: 204, scope: !1145)
!6837 = !DILocation(line: 4710, column: 204, scope: !6838)
!6838 = !DILexicalBlockFile(scope: !1145, file: !450, discriminator: 5)
!6839 = !DILocation(line: 4711, column: 9, scope: !1130)
!6840 = !DILocation(line: 4711, column: 9, scope: !6841)
!6841 = !DILexicalBlockFile(scope: !1130, file: !450, discriminator: 1)
!6842 = !DILocation(line: 4712, column: 9, scope: !1126)
!6843 = !DILocation(line: 4712, column: 14, scope: !6844)
!6844 = !DILexicalBlockFile(scope: !1147, file: !450, discriminator: 1)
!6845 = !DILocation(line: 4712, column: 24, scope: !1147)
!6846 = !DILocation(line: 4712, column: 54, scope: !1147)
!6847 = !DILocation(line: 4712, column: 71, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !1147, file: !450, line: 4712, column: 68)
!6849 = !DILocation(line: 4712, column: 88, scope: !6848)
!6850 = !DILocation(line: 4712, column: 68, scope: !6848)
!6851 = !DILocation(line: 4712, column: 98, scope: !6848)
!6852 = !DILocation(line: 4712, column: 68, scope: !1147)
!6853 = !DILocation(line: 4712, column: 68, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !1147, file: !450, discriminator: 2)
!6855 = !DILocation(line: 4712, column: 129, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6848, file: !450, discriminator: 3)
!6857 = !DILocation(line: 4712, column: 147, scope: !6848)
!6858 = !DILocation(line: 4712, column: 157, scope: !6848)
!6859 = !DILocation(line: 4712, column: 182, scope: !6848)
!6860 = !DILocation(line: 4712, column: 113, scope: !6848)
!6861 = !DILocation(line: 4712, column: 201, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !1126, file: !450, discriminator: 4)
!6863 = !DILocation(line: 4712, column: 201, scope: !1147)
!6864 = !DILocation(line: 4712, column: 201, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !1147, file: !450, discriminator: 5)
!6866 = !DILocation(line: 4713, column: 5, scope: !1127)
!6867 = !DILocation(line: 4713, column: 5, scope: !6868)
!6868 = !DILexicalBlockFile(scope: !1127, file: !450, discriminator: 1)
!6869 = !DILocation(line: 4713, column: 5, scope: !1126)
!6870 = !DILocation(line: 4714, column: 12, scope: !1120)
!6871 = !DILocation(line: 4714, column: 18, scope: !1120)
!6872 = !DILocation(line: 4714, column: 5, scope: !1120)
!6873 = !DILocation(line: 4715, column: 1, scope: !1120)
!6874 = !DILocation(line: 4534, column: 35, scope: !1148)
!6875 = !DILocation(line: 4536, column: 47, scope: !1148)
!6876 = !DILocation(line: 4536, column: 35, scope: !1148)
!6877 = !DILocation(line: 4536, column: 12, scope: !1148)
!6878 = !DILocation(line: 4536, column: 5, scope: !1148)
!6879 = !DILocation(line: 4588, column: 32, scope: !1151)
!6880 = !DILocation(line: 4588, column: 48, scope: !1151)
!6881 = !DILocation(line: 4588, column: 59, scope: !1151)
!6882 = !DILocation(line: 4590, column: 5, scope: !1151)
!6883 = !DILocation(line: 4590, column: 15, scope: !1151)
!6884 = !DILocation(line: 4591, column: 5, scope: !1151)
!6885 = !DILocation(line: 4591, column: 15, scope: !1151)
!6886 = !DILocation(line: 4591, column: 25, scope: !1151)
!6887 = !DILocation(line: 4592, column: 5, scope: !1151)
!6888 = !DILocation(line: 4592, column: 9, scope: !1151)
!6889 = !DILocation(line: 4594, column: 26, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4594, column: 9)
!6891 = !DILocation(line: 4594, column: 35, scope: !6890)
!6892 = !DILocation(line: 4594, column: 44, scope: !6890)
!6893 = !DILocation(line: 4594, column: 74, scope: !6890)
!6894 = !DILocation(line: 4594, column: 108, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !6890, file: !450, discriminator: 1)
!6896 = !DILocation(line: 4594, column: 117, scope: !6890)
!6897 = !DILocation(line: 4594, column: 77, scope: !6890)
!6898 = !DILocation(line: 4594, column: 9, scope: !1151)
!6899 = !DILocation(line: 4595, column: 28, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !450, line: 4595, column: 13)
!6901 = distinct !DILexicalBlock(scope: !6890, file: !450, line: 4594, column: 157)
!6902 = !DILocation(line: 4595, column: 37, scope: !6900)
!6903 = !DILocation(line: 4595, column: 46, scope: !6900)
!6904 = !DILocation(line: 4595, column: 72, scope: !6900)
!6905 = !DILocation(line: 4595, column: 106, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !6900, file: !450, discriminator: 1)
!6907 = !DILocation(line: 4595, column: 115, scope: !6900)
!6908 = !DILocation(line: 4595, column: 75, scope: !6900)
!6909 = !DILocation(line: 4595, column: 13, scope: !6901)
!6910 = !DILocation(line: 4603, column: 17, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !450, line: 4603, column: 17)
!6912 = distinct !DILexicalBlock(scope: !6900, file: !450, line: 4595, column: 151)
!6913 = !DILocation(line: 4603, column: 20, scope: !6911)
!6914 = !DILocation(line: 4603, column: 17, scope: !6912)
!6915 = !DILocation(line: 4604, column: 84, scope: !6911)
!6916 = !DILocation(line: 4604, column: 17, scope: !6911)
!6917 = !DILocation(line: 4605, column: 17, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6912, file: !450, line: 4605, column: 17)
!6919 = !DILocation(line: 4605, column: 20, scope: !6918)
!6920 = !DILocation(line: 4605, column: 17, scope: !6912)
!6921 = !DILocation(line: 4606, column: 83, scope: !6918)
!6922 = !DILocation(line: 4606, column: 17, scope: !6918)
!6923 = !DILocation(line: 4607, column: 29, scope: !6912)
!6924 = !DILocation(line: 4607, column: 35, scope: !6912)
!6925 = !DILocation(line: 4607, column: 20, scope: !6912)
!6926 = !DILocation(line: 4607, column: 13, scope: !6912)
!6927 = !DILocation(line: 4609, column: 72, scope: !6901)
!6928 = !DILocation(line: 4609, column: 9, scope: !6901)
!6929 = !DILocation(line: 4612, column: 39, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4612, column: 9)
!6931 = !DILocation(line: 4612, column: 12, scope: !6930)
!6932 = !DILocation(line: 4612, column: 47, scope: !6930)
!6933 = !DILocation(line: 4612, column: 10, scope: !6930)
!6934 = !DILocation(line: 4612, column: 85, scope: !6935)
!6935 = !DILexicalBlockFile(scope: !6930, file: !450, discriminator: 1)
!6936 = !DILocation(line: 4612, column: 61, scope: !6930)
!6937 = !DILocation(line: 4612, column: 93, scope: !6930)
!6938 = !DILocation(line: 4612, column: 10, scope: !6939)
!6939 = !DILexicalBlockFile(scope: !6930, file: !450, discriminator: 2)
!6940 = !DILocation(line: 4612, column: 154, scope: !6941)
!6941 = !DILexicalBlockFile(scope: !6942, file: !450, discriminator: 4)
!6942 = !DILexicalBlockFile(scope: !6930, file: !450, discriminator: 3)
!6943 = !DILocation(line: 4612, column: 127, scope: !6930)
!6944 = !DILocation(line: 4612, column: 163, scope: !6930)
!6945 = !DILocation(line: 4612, column: 125, scope: !6930)
!6946 = !DILocation(line: 4612, column: 201, scope: !6947)
!6947 = !DILexicalBlockFile(scope: !6930, file: !450, discriminator: 5)
!6948 = !DILocation(line: 4612, column: 177, scope: !6930)
!6949 = !DILocation(line: 4612, column: 210, scope: !6930)
!6950 = !DILocation(line: 4612, column: 125, scope: !6951)
!6951 = !DILexicalBlockFile(scope: !6930, file: !450, discriminator: 6)
!6952 = !DILocation(line: 4612, column: 121, scope: !6953)
!6953 = !DILexicalBlockFile(scope: !6954, file: !450, discriminator: 8)
!6954 = !DILexicalBlockFile(scope: !6930, file: !450, discriminator: 7)
!6955 = !DILocation(line: 4612, column: 9, scope: !1151)
!6956 = !DILocation(line: 4613, column: 47, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6930, file: !450, line: 4612, column: 239)
!6958 = !DILocation(line: 4613, column: 24, scope: !6957)
!6959 = !DILocation(line: 4613, column: 54, scope: !6957)
!6960 = !DILocation(line: 4613, column: 23, scope: !6957)
!6961 = !DILocation(line: 4614, column: 47, scope: !6957)
!6962 = !DILocation(line: 4614, column: 24, scope: !6957)
!6963 = !DILocation(line: 4614, column: 55, scope: !6957)
!6964 = !DILocation(line: 4614, column: 23, scope: !6957)
!6965 = !DILocation(line: 4613, column: 16, scope: !6957)
!6966 = !DILocation(line: 4613, column: 14, scope: !6957)
!6967 = !DILocation(line: 4616, column: 29, scope: !6957)
!6968 = !DILocation(line: 4616, column: 35, scope: !6957)
!6969 = !DILocation(line: 4616, column: 16, scope: !6957)
!6970 = !DILocation(line: 4616, column: 9, scope: !6957)
!6971 = !DILocation(line: 4618, column: 34, scope: !1151)
!6972 = !DILocation(line: 4618, column: 15, scope: !1151)
!6973 = !DILocation(line: 4618, column: 13, scope: !1151)
!6974 = !DILocation(line: 4619, column: 9, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4619, column: 9)
!6976 = !DILocation(line: 4619, column: 17, scope: !6975)
!6977 = !DILocation(line: 4619, column: 9, scope: !1151)
!6978 = !DILocation(line: 4620, column: 9, scope: !6975)
!6979 = !DILocation(line: 4621, column: 34, scope: !1151)
!6980 = !DILocation(line: 4621, column: 15, scope: !1151)
!6981 = !DILocation(line: 4621, column: 13, scope: !1151)
!6982 = !DILocation(line: 4622, column: 9, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !1151, file: !450, line: 4622, column: 9)
!6984 = !DILocation(line: 4622, column: 17, scope: !6983)
!6985 = !DILocation(line: 4622, column: 9, scope: !1151)
!6986 = !DILocation(line: 4623, column: 9, scope: !6983)
!6987 = !DILocation(line: 4628, column: 10, scope: !1163)
!6988 = !DILocation(line: 4628, column: 21, scope: !1163)
!6989 = !DILocation(line: 4628, column: 18, scope: !1163)
!6990 = !DILocation(line: 4628, column: 30, scope: !1163)
!6991 = !DILocation(line: 4629, column: 25, scope: !1163)
!6992 = !DILocation(line: 4629, column: 36, scope: !1163)
!6993 = !DILocation(line: 4629, column: 45, scope: !1163)
!6994 = !DILocation(line: 4629, column: 72, scope: !1163)
!6995 = !DILocation(line: 4629, column: 106, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !1163, file: !450, discriminator: 2)
!6997 = !DILocation(line: 4629, column: 117, scope: !1163)
!6998 = !DILocation(line: 4629, column: 75, scope: !1163)
!6999 = !DILocation(line: 4629, column: 153, scope: !1163)
!7000 = !DILocation(line: 4629, column: 171, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !7002, file: !450, discriminator: 3)
!7002 = !DILexicalBlockFile(scope: !1163, file: !450, discriminator: 1)
!7003 = !DILocation(line: 4629, column: 182, scope: !1163)
!7004 = !DILocation(line: 4629, column: 191, scope: !1163)
!7005 = !DILocation(line: 4629, column: 218, scope: !1163)
!7006 = !DILocation(line: 4629, column: 252, scope: !7007)
!7007 = !DILexicalBlockFile(scope: !1163, file: !450, discriminator: 4)
!7008 = !DILocation(line: 4629, column: 263, scope: !1163)
!7009 = !DILocation(line: 4629, column: 221, scope: !1163)
!7010 = !DILocation(line: 4629, column: 299, scope: !1163)
!7011 = !DILocation(line: 4630, column: 20, scope: !1163)
!7012 = !DILocation(line: 4630, column: 29, scope: !1163)
!7013 = !DILocation(line: 4630, column: 10, scope: !1163)
!7014 = !DILocation(line: 4630, column: 38, scope: !1163)
!7015 = !DILocation(line: 4628, column: 9, scope: !1151)
!7016 = !DILocation(line: 4631, column: 47, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !1163, file: !450, line: 4630, column: 45)
!7018 = !DILocation(line: 4631, column: 24, scope: !7017)
!7019 = !DILocation(line: 4631, column: 54, scope: !7017)
!7020 = !DILocation(line: 4631, column: 23, scope: !7017)
!7021 = !DILocation(line: 4632, column: 47, scope: !7017)
!7022 = !DILocation(line: 4632, column: 24, scope: !7017)
!7023 = !DILocation(line: 4632, column: 55, scope: !7017)
!7024 = !DILocation(line: 4632, column: 23, scope: !7017)
!7025 = !DILocation(line: 4631, column: 16, scope: !7017)
!7026 = !DILocation(line: 4631, column: 14, scope: !7017)
!7027 = !DILocation(line: 4634, column: 31, scope: !7017)
!7028 = !DILocation(line: 4634, column: 37, scope: !7017)
!7029 = !DILocation(line: 4634, column: 18, scope: !7017)
!7030 = !DILocation(line: 4634, column: 16, scope: !7017)
!7031 = !DILocation(line: 4635, column: 5, scope: !7017)
!7032 = !DILocation(line: 4636, column: 14, scope: !1162)
!7033 = !DILocation(line: 4636, column: 22, scope: !1162)
!7034 = !DILocation(line: 4636, column: 43, scope: !1162)
!7035 = !DILocation(line: 4636, column: 46, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !1162, file: !450, discriminator: 1)
!7037 = !DILocation(line: 4636, column: 54, scope: !1162)
!7038 = !DILocation(line: 4636, column: 14, scope: !1163)
!7039 = !DILocation(line: 4637, column: 9, scope: !1161)
!7040 = !DILocation(line: 4637, column: 27, scope: !1161)
!7041 = !DILocation(line: 4640, column: 67, scope: !1161)
!7042 = !DILocation(line: 4641, column: 56, scope: !1161)
!7043 = !DILocation(line: 4640, column: 37, scope: !1161)
!7044 = !DILocation(line: 4640, column: 17, scope: !1161)
!7045 = !DILocation(line: 4640, column: 15, scope: !1161)
!7046 = !DILocation(line: 4642, column: 13, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !1161, file: !450, line: 4642, column: 13)
!7048 = !DILocation(line: 4642, column: 19, scope: !7047)
!7049 = !DILocation(line: 4642, column: 13, scope: !1161)
!7050 = !DILocation(line: 4643, column: 13, scope: !7047)
!7051 = !DILocation(line: 4644, column: 39, scope: !1161)
!7052 = !DILocation(line: 4644, column: 48, scope: !1161)
!7053 = !DILocation(line: 4644, column: 14, scope: !1161)
!7054 = !DILocation(line: 4645, column: 13, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !1161, file: !450, line: 4645, column: 13)
!7056 = !DILocation(line: 4645, column: 18, scope: !7055)
!7057 = !DILocation(line: 4645, column: 13, scope: !1161)
!7058 = !DILocation(line: 4646, column: 43, scope: !7055)
!7059 = !DILocation(line: 4646, column: 52, scope: !7055)
!7060 = !DILocation(line: 4647, column: 43, scope: !7055)
!7061 = !DILocation(line: 4647, column: 52, scope: !7055)
!7062 = !DILocation(line: 4646, column: 61, scope: !7055)
!7063 = !DILocation(line: 4646, column: 18, scope: !7055)
!7064 = !DILocation(line: 4646, column: 13, scope: !7055)
!7065 = !DILocation(line: 4648, column: 9, scope: !1161)
!7066 = !DILocation(line: 4648, column: 14, scope: !7067)
!7067 = !DILexicalBlockFile(scope: !1165, file: !450, discriminator: 1)
!7068 = !DILocation(line: 4648, column: 24, scope: !1165)
!7069 = !DILocation(line: 4648, column: 54, scope: !1165)
!7070 = !DILocation(line: 4648, column: 41, scope: !1165)
!7071 = !DILocation(line: 4648, column: 70, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !1165, file: !450, line: 4648, column: 67)
!7073 = !DILocation(line: 4648, column: 87, scope: !7072)
!7074 = !DILocation(line: 4648, column: 67, scope: !7072)
!7075 = !DILocation(line: 4648, column: 97, scope: !7072)
!7076 = !DILocation(line: 4648, column: 67, scope: !1165)
!7077 = !DILocation(line: 4648, column: 67, scope: !7078)
!7078 = !DILexicalBlockFile(scope: !1165, file: !450, discriminator: 2)
!7079 = !DILocation(line: 4648, column: 128, scope: !7080)
!7080 = !DILexicalBlockFile(scope: !7072, file: !450, discriminator: 3)
!7081 = !DILocation(line: 4648, column: 146, scope: !7072)
!7082 = !DILocation(line: 4648, column: 156, scope: !7072)
!7083 = !DILocation(line: 4648, column: 181, scope: !7072)
!7084 = !DILocation(line: 4648, column: 112, scope: !7072)
!7085 = !DILocation(line: 4648, column: 200, scope: !7086)
!7086 = !DILexicalBlockFile(scope: !1161, file: !450, discriminator: 4)
!7087 = !DILocation(line: 4648, column: 200, scope: !1165)
!7088 = !DILocation(line: 4648, column: 200, scope: !7089)
!7089 = !DILexicalBlockFile(scope: !1165, file: !450, discriminator: 5)
!7090 = !DILocation(line: 4649, column: 31, scope: !1161)
!7091 = !DILocation(line: 4649, column: 37, scope: !1161)
!7092 = !DILocation(line: 4649, column: 18, scope: !1161)
!7093 = !DILocation(line: 4649, column: 16, scope: !1161)
!7094 = !DILocation(line: 4650, column: 5, scope: !1162)
!7095 = !DILocation(line: 4650, column: 5, scope: !7036)
!7096 = !DILocation(line: 4650, column: 5, scope: !1161)
!7097 = !DILocation(line: 4651, column: 14, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !1162, file: !450, line: 4651, column: 14)
!7099 = !DILocation(line: 4651, column: 17, scope: !7098)
!7100 = !DILocation(line: 4651, column: 14, scope: !1162)
!7101 = !DILocation(line: 4652, column: 16, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7098, file: !450, line: 4651, column: 23)
!7103 = !DILocation(line: 4653, column: 25, scope: !7102)
!7104 = !DILocation(line: 4653, column: 35, scope: !7102)
!7105 = !DILocation(line: 4653, column: 44, scope: !7102)
!7106 = !DILocation(line: 4654, column: 5, scope: !7102)
!7107 = !DILocation(line: 4655, column: 14, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7098, file: !450, line: 4655, column: 14)
!7109 = !DILocation(line: 4655, column: 17, scope: !7108)
!7110 = !DILocation(line: 4655, column: 14, scope: !7098)
!7111 = !DILocation(line: 4656, column: 16, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7108, file: !450, line: 4655, column: 23)
!7113 = !DILocation(line: 4657, column: 25, scope: !7112)
!7114 = !DILocation(line: 4657, column: 35, scope: !7112)
!7115 = !DILocation(line: 4657, column: 44, scope: !7112)
!7116 = !DILocation(line: 4658, column: 5, scope: !7112)
!7117 = !DILocation(line: 4660, column: 25, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7108, file: !450, line: 4659, column: 10)
!7119 = !DILocation(line: 4660, column: 9, scope: !7118)
!7120 = !DILocation(line: 4630, column: 42, scope: !1163)
!7121 = !DILocation(line: 4665, column: 5, scope: !1151)
!7122 = !DILocation(line: 4665, column: 10, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !1167, file: !450, discriminator: 1)
!7124 = !DILocation(line: 4665, column: 20, scope: !1167)
!7125 = !DILocation(line: 4665, column: 50, scope: !1167)
!7126 = !DILocation(line: 4665, column: 68, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !1167, file: !450, line: 4665, column: 65)
!7128 = !DILocation(line: 4665, column: 85, scope: !7127)
!7129 = !DILocation(line: 4665, column: 65, scope: !7127)
!7130 = !DILocation(line: 4665, column: 95, scope: !7127)
!7131 = !DILocation(line: 4665, column: 65, scope: !1167)
!7132 = !DILocation(line: 4665, column: 65, scope: !7133)
!7133 = !DILexicalBlockFile(scope: !1167, file: !450, discriminator: 2)
!7134 = !DILocation(line: 4665, column: 126, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !7127, file: !450, discriminator: 3)
!7136 = !DILocation(line: 4665, column: 144, scope: !7127)
!7137 = !DILocation(line: 4665, column: 154, scope: !7127)
!7138 = !DILocation(line: 4665, column: 179, scope: !7127)
!7139 = !DILocation(line: 4665, column: 110, scope: !7127)
!7140 = !DILocation(line: 4665, column: 198, scope: !7141)
!7141 = !DILexicalBlockFile(scope: !1151, file: !450, discriminator: 4)
!7142 = !DILocation(line: 4665, column: 198, scope: !1167)
!7143 = !DILocation(line: 4665, column: 198, scope: !7144)
!7144 = !DILexicalBlockFile(scope: !1167, file: !450, discriminator: 5)
!7145 = !DILocation(line: 4666, column: 5, scope: !1151)
!7146 = !DILocation(line: 4666, column: 10, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !1169, file: !450, discriminator: 1)
!7148 = !DILocation(line: 4666, column: 20, scope: !1169)
!7149 = !DILocation(line: 4666, column: 51, scope: !1169)
!7150 = !DILocation(line: 4666, column: 65, scope: !1172)
!7151 = !DILocation(line: 4666, column: 81, scope: !1172)
!7152 = !DILocation(line: 4666, column: 65, scope: !1169)
!7153 = !DILocation(line: 4666, column: 96, scope: !7154)
!7154 = !DILexicalBlockFile(scope: !1172, file: !450, discriminator: 2)
!7155 = !DILocation(line: 4666, column: 101, scope: !7156)
!7156 = !DILexicalBlockFile(scope: !1171, file: !450, discriminator: 4)
!7157 = !DILocation(line: 4666, column: 111, scope: !1171)
!7158 = !DILocation(line: 4666, column: 141, scope: !1171)
!7159 = !DILocation(line: 4666, column: 167, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !1171, file: !450, line: 4666, column: 164)
!7161 = !DILocation(line: 4666, column: 184, scope: !7160)
!7162 = !DILocation(line: 4666, column: 164, scope: !7160)
!7163 = !DILocation(line: 4666, column: 194, scope: !7160)
!7164 = !DILocation(line: 4666, column: 164, scope: !1171)
!7165 = !DILocation(line: 4666, column: 164, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !1171, file: !450, discriminator: 5)
!7167 = !DILocation(line: 4666, column: 225, scope: !7168)
!7168 = !DILexicalBlockFile(scope: !7160, file: !450, discriminator: 6)
!7169 = !DILocation(line: 4666, column: 243, scope: !7160)
!7170 = !DILocation(line: 4666, column: 253, scope: !7160)
!7171 = !DILocation(line: 4666, column: 278, scope: !7160)
!7172 = !DILocation(line: 4666, column: 209, scope: !7160)
!7173 = !DILocation(line: 4666, column: 297, scope: !7174)
!7174 = !DILexicalBlockFile(scope: !1172, file: !450, discriminator: 7)
!7175 = !DILocation(line: 4666, column: 297, scope: !1171)
!7176 = !DILocation(line: 4666, column: 297, scope: !7177)
!7177 = !DILexicalBlockFile(scope: !1171, file: !450, discriminator: 8)
!7178 = !DILocation(line: 4666, column: 297, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !1171, file: !450, discriminator: 9)
!7180 = !DILocation(line: 4666, column: 310, scope: !7181)
!7181 = !DILexicalBlockFile(scope: !7182, file: !450, discriminator: 10)
!7182 = !DILexicalBlockFile(scope: !1151, file: !450, discriminator: 3)
!7183 = !DILocation(line: 4666, column: 310, scope: !1169)
!7184 = !DILocation(line: 4666, column: 310, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !1169, file: !450, discriminator: 11)
!7186 = !DILocation(line: 4667, column: 12, scope: !1151)
!7187 = !DILocation(line: 4667, column: 5, scope: !1151)
!7188 = !DILocation(line: 4668, column: 1, scope: !1151)
!7189 = !DILocation(line: 621, column: 30, scope: !1532)
!7190 = !DILocation(line: 621, column: 47, scope: !1532)
!7191 = !DILocation(line: 623, column: 5, scope: !1532)
!7192 = !DILocation(line: 623, column: 15, scope: !1532)
!7193 = !DILocation(line: 626, column: 25, scope: !1532)
!7194 = !DILocation(line: 626, column: 9, scope: !1532)
!7195 = !DILocation(line: 625, column: 12, scope: !1532)
!7196 = !DILocation(line: 625, column: 10, scope: !1532)
!7197 = !DILocation(line: 629, column: 9, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !1532, file: !450, line: 629, column: 9)
!7199 = !DILocation(line: 629, column: 14, scope: !7198)
!7200 = !DILocation(line: 629, column: 9, scope: !1532)
!7201 = !DILocation(line: 630, column: 28, scope: !7198)
!7202 = !DILocation(line: 630, column: 9, scope: !7198)
!7203 = !DILocation(line: 631, column: 47, scope: !1532)
!7204 = !DILocation(line: 631, column: 27, scope: !1532)
!7205 = !DILocation(line: 631, column: 35, scope: !1532)
!7206 = !DILocation(line: 631, column: 44, scope: !1532)
!7207 = !DILocation(line: 631, column: 83, scope: !1532)
!7208 = !DILocation(line: 631, column: 92, scope: !1532)
!7209 = !DILocation(line: 631, column: 103, scope: !1532)
!7210 = !DILocation(line: 631, column: 110, scope: !1532)
!7211 = !DILocation(line: 632, column: 12, scope: !1532)
!7212 = !DILocation(line: 632, column: 5, scope: !1532)
!7213 = !DILocation(line: 633, column: 1, scope: !1532)
!7214 = !DILocation(line: 4012, column: 28, scope: !1539)
!7215 = !DILocation(line: 4012, column: 44, scope: !1539)
!7216 = !DILocation(line: 4012, column: 60, scope: !1539)
!7217 = !DILocation(line: 4014, column: 5, scope: !1539)
!7218 = !DILocation(line: 4014, column: 15, scope: !1539)
!7219 = !DILocation(line: 4015, column: 5, scope: !1539)
!7220 = !DILocation(line: 4015, column: 15, scope: !1539)
!7221 = !DILocation(line: 4016, column: 5, scope: !1539)
!7222 = !DILocation(line: 4016, column: 9, scope: !1539)
!7223 = !DILocation(line: 4017, column: 5, scope: !1539)
!7224 = !DILocation(line: 4017, column: 9, scope: !1539)
!7225 = !DILocation(line: 4018, column: 5, scope: !1539)
!7226 = !DILocation(line: 4018, column: 9, scope: !1539)
!7227 = !DILocation(line: 4019, column: 5, scope: !1539)
!7228 = !DILocation(line: 4019, column: 9, scope: !1539)
!7229 = !DILocation(line: 4020, column: 5, scope: !1539)
!7230 = !DILocation(line: 4020, column: 9, scope: !1539)
!7231 = !DILocation(line: 4021, column: 5, scope: !1539)
!7232 = !DILocation(line: 4021, column: 9, scope: !1539)
!7233 = !DILocation(line: 4022, column: 5, scope: !1539)
!7234 = !DILocation(line: 4022, column: 9, scope: !1539)
!7235 = !DILocation(line: 4023, column: 5, scope: !1539)
!7236 = !DILocation(line: 4023, column: 15, scope: !1539)
!7237 = !DILocation(line: 4026, column: 26, scope: !1556)
!7238 = !DILocation(line: 4026, column: 11, scope: !1556)
!7239 = !DILocation(line: 4026, column: 34, scope: !1556)
!7240 = !DILocation(line: 4026, column: 43, scope: !1556)
!7241 = !DILocation(line: 4026, column: 48, scope: !1556)
!7242 = !DILocation(line: 4027, column: 26, scope: !1556)
!7243 = !DILocation(line: 4027, column: 11, scope: !1556)
!7244 = !DILocation(line: 4027, column: 34, scope: !1556)
!7245 = !DILocation(line: 4027, column: 43, scope: !1556)
!7246 = !DILocation(line: 4027, column: 48, scope: !1556)
!7247 = !DILocation(line: 4028, column: 54, scope: !1556)
!7248 = !DILocation(line: 4028, column: 36, scope: !1556)
!7249 = !DILocation(line: 4028, column: 62, scope: !1556)
!7250 = !DILocation(line: 4028, column: 35, scope: !1556)
!7251 = !DILocation(line: 4028, column: 32, scope: !1556)
!7252 = !DILocation(line: 4028, column: 77, scope: !1556)
!7253 = !DILocation(line: 4028, column: 88, scope: !1556)
!7254 = !DILocation(line: 4028, column: 97, scope: !1556)
!7255 = !DILocation(line: 4028, column: 114, scope: !1556)
!7256 = !DILocation(line: 4028, column: 120, scope: !1556)
!7257 = !DILocation(line: 4029, column: 40, scope: !1556)
!7258 = !DILocation(line: 4029, column: 25, scope: !1556)
!7259 = !DILocation(line: 4029, column: 49, scope: !1556)
!7260 = !DILocation(line: 4029, column: 59, scope: !1556)
!7261 = !DILocation(line: 4029, column: 65, scope: !1556)
!7262 = !DILocation(line: 4030, column: 60, scope: !1556)
!7263 = !DILocation(line: 4030, column: 42, scope: !1556)
!7264 = !DILocation(line: 4030, column: 69, scope: !1556)
!7265 = !DILocation(line: 4030, column: 40, scope: !1556)
!7266 = !DILocation(line: 4030, column: 25, scope: !1556)
!7267 = !DILocation(line: 4030, column: 10, scope: !1556)
!7268 = !DILocation(line: 4030, column: 83, scope: !1556)
!7269 = !DILocation(line: 4030, column: 87, scope: !1556)
!7270 = !DILocation(line: 4026, column: 9, scope: !1539)
!7271 = !DILocation(line: 4032, column: 9, scope: !1555)
!7272 = !DILocation(line: 4032, column: 30, scope: !1555)
!7273 = !DILocation(line: 4033, column: 9, scope: !1555)
!7274 = !DILocation(line: 4033, column: 14, scope: !1555)
!7275 = !DILocation(line: 4035, column: 30, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !1555, file: !450, line: 4035, column: 13)
!7277 = !DILocation(line: 4035, column: 15, scope: !7276)
!7278 = !DILocation(line: 4035, column: 38, scope: !7276)
!7279 = !DILocation(line: 4035, column: 47, scope: !7276)
!7280 = !DILocation(line: 4035, column: 13, scope: !1555)
!7281 = !DILocation(line: 4036, column: 42, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7276, file: !450, line: 4035, column: 53)
!7283 = !DILocation(line: 4036, column: 24, scope: !7282)
!7284 = !DILocation(line: 4036, column: 50, scope: !7282)
!7285 = !DILocation(line: 4036, column: 23, scope: !7282)
!7286 = !DILocation(line: 4036, column: 20, scope: !7282)
!7287 = !DILocation(line: 4037, column: 39, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7282, file: !450, line: 4037, column: 17)
!7289 = !DILocation(line: 4037, column: 17, scope: !7288)
!7290 = !DILocation(line: 4037, column: 47, scope: !7288)
!7291 = !DILocation(line: 4037, column: 17, scope: !7282)
!7292 = !DILocation(line: 4038, column: 33, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7288, file: !450, line: 4037, column: 52)
!7294 = !DILocation(line: 4038, column: 17, scope: !7293)
!7295 = !DILocation(line: 4040, column: 17, scope: !7293)
!7296 = !DILocation(line: 4042, column: 9, scope: !7282)
!7297 = !DILocation(line: 4043, column: 24, scope: !1555)
!7298 = !DILocation(line: 4043, column: 31, scope: !1555)
!7299 = !DILocation(line: 4043, column: 17, scope: !1555)
!7300 = !DILocation(line: 4043, column: 15, scope: !1555)
!7301 = !DILocation(line: 4044, column: 39, scope: !1555)
!7302 = !DILocation(line: 4044, column: 45, scope: !1555)
!7303 = !DILocation(line: 4044, column: 54, scope: !1555)
!7304 = !DILocation(line: 4044, column: 61, scope: !1555)
!7305 = !DILocation(line: 4044, column: 14, scope: !1555)
!7306 = !DILocation(line: 4044, column: 12, scope: !1555)
!7307 = !DILocation(line: 4045, column: 13, scope: !1560)
!7308 = !DILocation(line: 4045, column: 16, scope: !1560)
!7309 = !DILocation(line: 4045, column: 13, scope: !1555)
!7310 = !DILocation(line: 4046, column: 13, scope: !1559)
!7311 = !DILocation(line: 4046, column: 19, scope: !1559)
!7312 = !DILocation(line: 4046, column: 62, scope: !1559)
!7313 = !DILocation(line: 4046, column: 44, scope: !1559)
!7314 = !DILocation(line: 4046, column: 71, scope: !1559)
!7315 = !DILocation(line: 4046, column: 42, scope: !1559)
!7316 = !DILocation(line: 4048, column: 20, scope: !1559)
!7317 = !DILocation(line: 4048, column: 24, scope: !1559)
!7318 = !DILocation(line: 4048, column: 13, scope: !1559)
!7319 = !DILocation(line: 4048, column: 30, scope: !1559)
!7320 = !DILocation(line: 4049, column: 13, scope: !1559)
!7321 = !DILocation(line: 4049, column: 17, scope: !1559)
!7322 = !DILocation(line: 4049, column: 26, scope: !1559)
!7323 = !DILocation(line: 4050, column: 29, scope: !1559)
!7324 = !DILocation(line: 4050, column: 13, scope: !1559)
!7325 = !DILocation(line: 4050, column: 17, scope: !1559)
!7326 = !DILocation(line: 4050, column: 27, scope: !1559)
!7327 = !DILocation(line: 4051, column: 17, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !1559, file: !450, line: 4051, column: 17)
!7329 = !DILocation(line: 4051, column: 17, scope: !1559)
!7330 = !DILocation(line: 4052, column: 33, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7328, file: !450, line: 4051, column: 24)
!7332 = !DILocation(line: 4052, column: 43, scope: !7331)
!7333 = !DILocation(line: 4052, column: 52, scope: !7331)
!7334 = !DILocation(line: 4053, column: 30, scope: !7331)
!7335 = !DILocation(line: 4053, column: 17, scope: !7331)
!7336 = !DILocation(line: 4053, column: 21, scope: !7331)
!7337 = !DILocation(line: 4053, column: 28, scope: !7331)
!7338 = !DILocation(line: 4054, column: 13, scope: !7331)
!7339 = !DILocation(line: 4055, column: 9, scope: !1560)
!7340 = !DILocation(line: 4055, column: 9, scope: !1559)
!7341 = !DILocation(line: 4056, column: 28, scope: !1555)
!7342 = !DILocation(line: 4056, column: 16, scope: !1555)
!7343 = !DILocation(line: 4056, column: 9, scope: !1555)
!7344 = !DILocation(line: 4057, column: 5, scope: !1556)
!7345 = !DILocation(line: 4059, column: 37, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !1539, file: !450, line: 4059, column: 9)
!7347 = !DILocation(line: 4059, column: 43, scope: !7346)
!7348 = !DILocation(line: 4059, column: 9, scope: !7346)
!7349 = !DILocation(line: 4059, column: 9, scope: !1539)
!7350 = !DILocation(line: 4062, column: 29, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7352, file: !450, line: 4062, column: 13)
!7352 = distinct !DILexicalBlock(scope: !7346, file: !450, line: 4061, column: 66)
!7353 = !DILocation(line: 4062, column: 35, scope: !7351)
!7354 = !DILocation(line: 4062, column: 42, scope: !7351)
!7355 = !DILocation(line: 4062, column: 13, scope: !7351)
!7356 = !DILocation(line: 4062, column: 47, scope: !7351)
!7357 = !DILocation(line: 4062, column: 13, scope: !7352)
!7358 = !DILocation(line: 4063, column: 13, scope: !7351)
!7359 = !DILocation(line: 4064, column: 29, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7352, file: !450, line: 4064, column: 13)
!7361 = !DILocation(line: 4064, column: 35, scope: !7360)
!7362 = !DILocation(line: 4064, column: 43, scope: !7360)
!7363 = !DILocation(line: 4064, column: 51, scope: !7360)
!7364 = !DILocation(line: 4064, column: 13, scope: !7360)
!7365 = !DILocation(line: 4064, column: 60, scope: !7360)
!7366 = !DILocation(line: 4064, column: 13, scope: !7352)
!7367 = !DILocation(line: 4065, column: 13, scope: !7360)
!7368 = !DILocation(line: 4066, column: 35, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7352, file: !450, line: 4066, column: 13)
!7370 = !DILocation(line: 4066, column: 13, scope: !7369)
!7371 = !DILocation(line: 4066, column: 43, scope: !7369)
!7372 = !DILocation(line: 4066, column: 13, scope: !7352)
!7373 = !DILocation(line: 4067, column: 13, scope: !7369)
!7374 = !DILocation(line: 4068, column: 32, scope: !7352)
!7375 = !DILocation(line: 4068, column: 38, scope: !7352)
!7376 = !DILocation(line: 4068, column: 45, scope: !7352)
!7377 = !DILocation(line: 4069, column: 33, scope: !7352)
!7378 = !DILocation(line: 4069, column: 39, scope: !7352)
!7379 = !DILocation(line: 4069, column: 47, scope: !7352)
!7380 = !DILocation(line: 4069, column: 55, scope: !7352)
!7381 = !DILocation(line: 4070, column: 33, scope: !7352)
!7382 = !DILocation(line: 4070, column: 41, scope: !7352)
!7383 = !DILocation(line: 4068, column: 16, scope: !7352)
!7384 = !DILocation(line: 4068, column: 14, scope: !7352)
!7385 = !DILocation(line: 4071, column: 5, scope: !7352)
!7386 = !DILocation(line: 4072, column: 12, scope: !1539)
!7387 = !DILocation(line: 4072, column: 5, scope: !1539)
!7388 = !DILocation(line: 4073, column: 1, scope: !1539)
!7389 = !DILocation(line: 980, column: 33, scope: !1005)
!7390 = !DILocation(line: 980, column: 49, scope: !1005)
!7391 = !DILocation(line: 982, column: 5, scope: !1005)
!7392 = !DILocation(line: 982, column: 15, scope: !1005)
!7393 = !DILocation(line: 986, column: 9, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !1005, file: !450, line: 986, column: 9)
!7395 = !DILocation(line: 986, column: 16, scope: !7394)
!7396 = !DILocation(line: 986, column: 9, scope: !1005)
!7397 = !DILocation(line: 987, column: 16, scope: !7394)
!7398 = !DILocation(line: 987, column: 9, scope: !7394)
!7399 = !DILocation(line: 990, column: 32, scope: !1005)
!7400 = !DILocation(line: 990, column: 89, scope: !1005)
!7401 = !DILocation(line: 990, column: 71, scope: !1005)
!7402 = !DILocation(line: 990, column: 97, scope: !1005)
!7403 = !{!7404, !2607, i64 16}
!7404 = !{!"", !2606, i64 0, !2607, i64 16, !2607, i64 24, !7405, i64 32, !2564, i64 40}
!7405 = !{!"", !2608, i64 0, !2608, i64 0, !2608, i64 0, !2608, i64 0, !2608, i64 0, !2608, i64 1}
!7406 = !DILocation(line: 990, column: 105, scope: !1005)
!7407 = !DILocation(line: 990, column: 12, scope: !1005)
!7408 = !DILocation(line: 990, column: 10, scope: !1005)
!7409 = !DILocation(line: 991, column: 5, scope: !1005)
!7410 = !DILocation(line: 991, column: 10, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !1011, file: !450, discriminator: 1)
!7412 = !DILocation(line: 991, column: 20, scope: !1011)
!7413 = !DILocation(line: 991, column: 50, scope: !1011)
!7414 = !DILocation(line: 991, column: 65, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !1011, file: !450, line: 991, column: 62)
!7416 = !DILocation(line: 991, column: 82, scope: !7415)
!7417 = !DILocation(line: 991, column: 62, scope: !7415)
!7418 = !DILocation(line: 991, column: 92, scope: !7415)
!7419 = !DILocation(line: 991, column: 62, scope: !1011)
!7420 = !DILocation(line: 991, column: 62, scope: !7421)
!7421 = !DILexicalBlockFile(scope: !1011, file: !450, discriminator: 2)
!7422 = !DILocation(line: 991, column: 123, scope: !7423)
!7423 = !DILexicalBlockFile(scope: !7415, file: !450, discriminator: 3)
!7424 = !DILocation(line: 991, column: 141, scope: !7415)
!7425 = !DILocation(line: 991, column: 151, scope: !7415)
!7426 = !DILocation(line: 991, column: 176, scope: !7415)
!7427 = !DILocation(line: 991, column: 107, scope: !7415)
!7428 = !DILocation(line: 991, column: 195, scope: !7429)
!7429 = !DILexicalBlockFile(scope: !1005, file: !450, discriminator: 4)
!7430 = !DILocation(line: 991, column: 195, scope: !1011)
!7431 = !DILocation(line: 991, column: 195, scope: !7432)
!7432 = !DILexicalBlockFile(scope: !1011, file: !450, discriminator: 5)
!7433 = !DILocation(line: 992, column: 9, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !1005, file: !450, line: 992, column: 9)
!7435 = !DILocation(line: 992, column: 14, scope: !7434)
!7436 = !DILocation(line: 992, column: 9, scope: !1005)
!7437 = !DILocation(line: 993, column: 9, scope: !7434)
!7438 = !DILocation(line: 994, column: 51, scope: !1005)
!7439 = !DILocation(line: 994, column: 57, scope: !1005)
!7440 = !DILocation(line: 994, column: 12, scope: !1005)
!7441 = !DILocation(line: 994, column: 10, scope: !1005)
!7442 = !DILocation(line: 995, column: 5, scope: !1005)
!7443 = !DILocation(line: 995, column: 10, scope: !7444)
!7444 = !DILexicalBlockFile(scope: !1013, file: !450, discriminator: 1)
!7445 = !DILocation(line: 995, column: 20, scope: !1013)
!7446 = !DILocation(line: 995, column: 50, scope: !1013)
!7447 = !DILocation(line: 995, column: 65, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !1013, file: !450, line: 995, column: 62)
!7449 = !DILocation(line: 995, column: 82, scope: !7448)
!7450 = !DILocation(line: 995, column: 62, scope: !7448)
!7451 = !DILocation(line: 995, column: 92, scope: !7448)
!7452 = !DILocation(line: 995, column: 62, scope: !1013)
!7453 = !DILocation(line: 995, column: 62, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !1013, file: !450, discriminator: 2)
!7455 = !DILocation(line: 995, column: 123, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7448, file: !450, discriminator: 3)
!7457 = !DILocation(line: 995, column: 141, scope: !7448)
!7458 = !DILocation(line: 995, column: 151, scope: !7448)
!7459 = !DILocation(line: 995, column: 176, scope: !7448)
!7460 = !DILocation(line: 995, column: 107, scope: !7448)
!7461 = !DILocation(line: 995, column: 195, scope: !7429)
!7462 = !DILocation(line: 995, column: 195, scope: !1013)
!7463 = !DILocation(line: 995, column: 195, scope: !7464)
!7464 = !DILexicalBlockFile(scope: !1013, file: !450, discriminator: 5)
!7465 = !DILocation(line: 996, column: 12, scope: !1005)
!7466 = !DILocation(line: 996, column: 5, scope: !1005)
!7467 = !DILocation(line: 997, column: 1, scope: !1005)
!7468 = !DILocation(line: 4387, column: 24, scope: !1014)
!7469 = !DILocation(line: 4387, column: 40, scope: !1014)
!7470 = !DILocation(line: 4389, column: 24, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !1014, file: !450, line: 4389, column: 9)
!7472 = !DILocation(line: 4389, column: 32, scope: !7471)
!7473 = !DILocation(line: 4389, column: 41, scope: !7471)
!7474 = !DILocation(line: 4389, column: 71, scope: !7471)
!7475 = !DILocation(line: 4389, column: 105, scope: !7476)
!7476 = !DILexicalBlockFile(scope: !7471, file: !450, discriminator: 1)
!7477 = !DILocation(line: 4389, column: 113, scope: !7471)
!7478 = !DILocation(line: 4389, column: 74, scope: !7471)
!7479 = !DILocation(line: 4389, column: 9, scope: !1014)
!7480 = !DILocation(line: 4391, column: 28, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7482, file: !450, line: 4391, column: 13)
!7482 = distinct !DILexicalBlock(scope: !7471, file: !450, line: 4389, column: 153)
!7483 = !DILocation(line: 4391, column: 37, scope: !7481)
!7484 = !DILocation(line: 4391, column: 46, scope: !7481)
!7485 = !DILocation(line: 4391, column: 73, scope: !7481)
!7486 = !DILocation(line: 4391, column: 107, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7481, file: !450, discriminator: 1)
!7488 = !DILocation(line: 4391, column: 116, scope: !7481)
!7489 = !DILocation(line: 4391, column: 76, scope: !7481)
!7490 = !DILocation(line: 4391, column: 13, scope: !7482)
!7491 = !DILocation(line: 4394, column: 52, scope: !7481)
!7492 = !DILocation(line: 4394, column: 29, scope: !7481)
!7493 = !DILocation(line: 4395, column: 49, scope: !7481)
!7494 = !DILocation(line: 4395, column: 29, scope: !7481)
!7495 = !DILocation(line: 4393, column: 20, scope: !7481)
!7496 = !DILocation(line: 4393, column: 13, scope: !7481)
!7497 = !DILocation(line: 4397, column: 5, scope: !7482)
!7498 = !DILocation(line: 4398, column: 29, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7471, file: !450, line: 4398, column: 14)
!7500 = !DILocation(line: 4398, column: 37, scope: !7499)
!7501 = !DILocation(line: 4398, column: 46, scope: !7499)
!7502 = !DILocation(line: 4398, column: 73, scope: !7499)
!7503 = !DILocation(line: 4398, column: 107, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !7499, file: !450, discriminator: 1)
!7505 = !DILocation(line: 4398, column: 115, scope: !7499)
!7506 = !DILocation(line: 4398, column: 76, scope: !7499)
!7507 = !DILocation(line: 4398, column: 14, scope: !7471)
!7508 = !DILocation(line: 4400, column: 63, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7499, file: !450, line: 4398, column: 152)
!7510 = !DILocation(line: 4400, column: 39, scope: !7509)
!7511 = !DILocation(line: 4401, column: 60, scope: !7509)
!7512 = !DILocation(line: 4401, column: 39, scope: !7509)
!7513 = !DILocation(line: 4400, column: 16, scope: !7509)
!7514 = !DILocation(line: 4400, column: 9, scope: !7509)
!7515 = !DILocation(line: 4404, column: 68, scope: !1014)
!7516 = !DILocation(line: 4404, column: 5, scope: !1014)
!7517 = !DILocation(line: 4405, column: 1, scope: !1014)
!7518 = !DILocation(line: 4408, column: 29, scope: !1055)
!7519 = !DILocation(line: 4408, column: 45, scope: !1055)
!7520 = !DILocation(line: 4410, column: 5, scope: !1055)
!7521 = !DILocation(line: 4410, column: 15, scope: !1055)
!7522 = !DILocation(line: 4412, column: 24, scope: !1064)
!7523 = !DILocation(line: 4412, column: 32, scope: !1064)
!7524 = !DILocation(line: 4412, column: 41, scope: !1064)
!7525 = !DILocation(line: 4412, column: 71, scope: !1064)
!7526 = !DILocation(line: 4412, column: 105, scope: !7527)
!7527 = !DILexicalBlockFile(scope: !1064, file: !450, discriminator: 1)
!7528 = !DILocation(line: 4412, column: 113, scope: !1064)
!7529 = !DILocation(line: 4412, column: 74, scope: !1064)
!7530 = !DILocation(line: 4412, column: 9, scope: !1055)
!7531 = !DILocation(line: 4414, column: 28, scope: !1062)
!7532 = !DILocation(line: 4414, column: 37, scope: !1062)
!7533 = !DILocation(line: 4414, column: 46, scope: !1062)
!7534 = !DILocation(line: 4414, column: 76, scope: !1062)
!7535 = !DILocation(line: 4414, column: 110, scope: !7536)
!7536 = !DILexicalBlockFile(scope: !1062, file: !450, discriminator: 1)
!7537 = !DILocation(line: 4414, column: 119, scope: !1062)
!7538 = !DILocation(line: 4414, column: 79, scope: !1062)
!7539 = !DILocation(line: 4414, column: 13, scope: !1063)
!7540 = !DILocation(line: 4416, column: 13, scope: !1061)
!7541 = !DILocation(line: 4416, column: 23, scope: !1061)
!7542 = !DILocation(line: 4416, column: 33, scope: !1061)
!7543 = !DILocation(line: 4416, column: 43, scope: !1061)
!7544 = !DILocation(line: 4417, column: 13, scope: !1061)
!7545 = !DILocation(line: 4417, column: 17, scope: !1061)
!7546 = !DILocation(line: 4417, column: 26, scope: !1061)
!7547 = !DILocation(line: 4417, column: 35, scope: !1061)
!7548 = !DILocation(line: 4419, column: 47, scope: !1075)
!7549 = !DILocation(line: 4419, column: 20, scope: !1075)
!7550 = !DILocation(line: 4419, column: 55, scope: !1075)
!7551 = !DILocation(line: 4419, column: 18, scope: !1075)
!7552 = !DILocation(line: 4419, column: 93, scope: !7553)
!7553 = !DILexicalBlockFile(scope: !1075, file: !450, discriminator: 1)
!7554 = !DILocation(line: 4419, column: 69, scope: !1075)
!7555 = !DILocation(line: 4419, column: 101, scope: !1075)
!7556 = !DILocation(line: 4419, column: 18, scope: !7557)
!7557 = !DILexicalBlockFile(scope: !1075, file: !450, discriminator: 2)
!7558 = !DILocation(line: 4419, column: 162, scope: !7559)
!7559 = !DILexicalBlockFile(scope: !7560, file: !450, discriminator: 4)
!7560 = !DILexicalBlockFile(scope: !1075, file: !450, discriminator: 3)
!7561 = !DILocation(line: 4419, column: 135, scope: !1075)
!7562 = !DILocation(line: 4419, column: 171, scope: !1075)
!7563 = !DILocation(line: 4419, column: 133, scope: !1075)
!7564 = !DILocation(line: 4419, column: 209, scope: !7565)
!7565 = !DILexicalBlockFile(scope: !1075, file: !450, discriminator: 5)
!7566 = !DILocation(line: 4419, column: 185, scope: !1075)
!7567 = !DILocation(line: 4419, column: 218, scope: !1075)
!7568 = !DILocation(line: 4419, column: 133, scope: !7569)
!7569 = !DILexicalBlockFile(scope: !1075, file: !450, discriminator: 6)
!7570 = !DILocation(line: 4419, column: 129, scope: !7571)
!7571 = !DILexicalBlockFile(scope: !7572, file: !450, discriminator: 8)
!7572 = !DILexicalBlockFile(scope: !1075, file: !450, discriminator: 7)
!7573 = !DILocation(line: 4419, column: 17, scope: !1061)
!7574 = !DILocation(line: 4420, column: 35, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !1075, file: !450, line: 4419, column: 247)
!7576 = !DILocation(line: 4420, column: 25, scope: !7575)
!7577 = !DILocation(line: 4421, column: 33, scope: !7575)
!7578 = !DILocation(line: 4421, column: 44, scope: !7575)
!7579 = !DILocation(line: 4421, column: 53, scope: !7575)
!7580 = !DILocation(line: 4422, column: 33, scope: !7575)
!7581 = !DILocation(line: 4422, column: 44, scope: !7575)
!7582 = !DILocation(line: 4422, column: 53, scope: !7575)
!7583 = !DILocation(line: 4423, column: 13, scope: !7575)
!7584 = !DILocation(line: 4425, column: 46, scope: !1074)
!7585 = !DILocation(line: 4425, column: 27, scope: !1074)
!7586 = !DILocation(line: 4425, column: 25, scope: !1074)
!7587 = !DILocation(line: 4426, column: 21, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !1074, file: !450, line: 4426, column: 21)
!7589 = !DILocation(line: 4426, column: 29, scope: !7588)
!7590 = !DILocation(line: 4426, column: 21, scope: !1074)
!7591 = !DILocation(line: 4427, column: 21, scope: !7588)
!7592 = !DILocation(line: 4428, column: 46, scope: !1074)
!7593 = !DILocation(line: 4428, column: 27, scope: !1074)
!7594 = !DILocation(line: 4428, column: 25, scope: !1074)
!7595 = !DILocation(line: 4429, column: 21, scope: !1073)
!7596 = !DILocation(line: 4429, column: 29, scope: !1073)
!7597 = !DILocation(line: 4429, column: 21, scope: !1074)
!7598 = !DILocation(line: 4430, column: 21, scope: !1072)
!7599 = !DILocation(line: 4430, column: 26, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !1071, file: !450, discriminator: 1)
!7601 = !DILocation(line: 4430, column: 36, scope: !1071)
!7602 = !DILocation(line: 4430, column: 66, scope: !1071)
!7603 = !DILocation(line: 4430, column: 84, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !1071, file: !450, line: 4430, column: 81)
!7605 = !DILocation(line: 4430, column: 101, scope: !7604)
!7606 = !DILocation(line: 4430, column: 81, scope: !7604)
!7607 = !DILocation(line: 4430, column: 111, scope: !7604)
!7608 = !DILocation(line: 4430, column: 81, scope: !1071)
!7609 = !DILocation(line: 4430, column: 81, scope: !7610)
!7610 = !DILexicalBlockFile(scope: !1071, file: !450, discriminator: 2)
!7611 = !DILocation(line: 4430, column: 142, scope: !7612)
!7612 = !DILexicalBlockFile(scope: !7604, file: !450, discriminator: 3)
!7613 = !DILocation(line: 4430, column: 160, scope: !7604)
!7614 = !DILocation(line: 4430, column: 170, scope: !7604)
!7615 = !DILocation(line: 4430, column: 195, scope: !7604)
!7616 = !DILocation(line: 4430, column: 126, scope: !7604)
!7617 = !DILocation(line: 4430, column: 214, scope: !7618)
!7618 = !DILexicalBlockFile(scope: !1072, file: !450, discriminator: 4)
!7619 = !DILocation(line: 4430, column: 214, scope: !1071)
!7620 = !DILocation(line: 4430, column: 214, scope: !7621)
!7621 = !DILexicalBlockFile(scope: !1071, file: !450, discriminator: 5)
!7622 = !DILocation(line: 4431, column: 21, scope: !1072)
!7623 = !DILocation(line: 4433, column: 22, scope: !1079)
!7624 = !DILocation(line: 4433, column: 30, scope: !1079)
!7625 = !DILocation(line: 4433, column: 56, scope: !1079)
!7626 = !DILocation(line: 4433, column: 64, scope: !1079)
!7627 = !DILocation(line: 4433, column: 52, scope: !1079)
!7628 = !DILocation(line: 4433, column: 21, scope: !1074)
!7629 = !DILocation(line: 4434, column: 37, scope: !1078)
!7630 = !DILocation(line: 4434, column: 21, scope: !1078)
!7631 = !DILocation(line: 4437, column: 21, scope: !1078)
!7632 = !DILocation(line: 4437, column: 26, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !1077, file: !450, discriminator: 1)
!7634 = !DILocation(line: 4437, column: 36, scope: !1077)
!7635 = !DILocation(line: 4437, column: 66, scope: !1077)
!7636 = !DILocation(line: 4437, column: 84, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !1077, file: !450, line: 4437, column: 81)
!7638 = !DILocation(line: 4437, column: 101, scope: !7637)
!7639 = !DILocation(line: 4437, column: 81, scope: !7637)
!7640 = !DILocation(line: 4437, column: 111, scope: !7637)
!7641 = !DILocation(line: 4437, column: 81, scope: !1077)
!7642 = !DILocation(line: 4437, column: 81, scope: !7643)
!7643 = !DILexicalBlockFile(scope: !1077, file: !450, discriminator: 2)
!7644 = !DILocation(line: 4437, column: 142, scope: !7645)
!7645 = !DILexicalBlockFile(scope: !7637, file: !450, discriminator: 3)
!7646 = !DILocation(line: 4437, column: 160, scope: !7637)
!7647 = !DILocation(line: 4437, column: 170, scope: !7637)
!7648 = !DILocation(line: 4437, column: 195, scope: !7637)
!7649 = !DILocation(line: 4437, column: 126, scope: !7637)
!7650 = !DILocation(line: 4437, column: 214, scope: !7651)
!7651 = !DILexicalBlockFile(scope: !1078, file: !450, discriminator: 4)
!7652 = !DILocation(line: 4437, column: 214, scope: !1077)
!7653 = !DILocation(line: 4437, column: 214, scope: !7654)
!7654 = !DILexicalBlockFile(scope: !1077, file: !450, discriminator: 5)
!7655 = !DILocation(line: 4438, column: 21, scope: !1078)
!7656 = !DILocation(line: 4438, column: 26, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !1081, file: !450, discriminator: 1)
!7658 = !DILocation(line: 4438, column: 36, scope: !1081)
!7659 = !DILocation(line: 4438, column: 66, scope: !1081)
!7660 = !DILocation(line: 4438, column: 84, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !1081, file: !450, line: 4438, column: 81)
!7662 = !DILocation(line: 4438, column: 101, scope: !7661)
!7663 = !DILocation(line: 4438, column: 81, scope: !7661)
!7664 = !DILocation(line: 4438, column: 111, scope: !7661)
!7665 = !DILocation(line: 4438, column: 81, scope: !1081)
!7666 = !DILocation(line: 4438, column: 81, scope: !7667)
!7667 = !DILexicalBlockFile(scope: !1081, file: !450, discriminator: 2)
!7668 = !DILocation(line: 4438, column: 142, scope: !7669)
!7669 = !DILexicalBlockFile(scope: !7661, file: !450, discriminator: 3)
!7670 = !DILocation(line: 4438, column: 160, scope: !7661)
!7671 = !DILocation(line: 4438, column: 170, scope: !7661)
!7672 = !DILocation(line: 4438, column: 195, scope: !7661)
!7673 = !DILocation(line: 4438, column: 126, scope: !7661)
!7674 = !DILocation(line: 4438, column: 214, scope: !7651)
!7675 = !DILocation(line: 4438, column: 214, scope: !1081)
!7676 = !DILocation(line: 4438, column: 214, scope: !7677)
!7677 = !DILexicalBlockFile(scope: !1081, file: !450, discriminator: 5)
!7678 = !DILocation(line: 4439, column: 21, scope: !1078)
!7679 = !DILocation(line: 4442, column: 18, scope: !1087)
!7680 = !DILocation(line: 4442, column: 29, scope: !1087)
!7681 = !DILocation(line: 4442, column: 26, scope: !1087)
!7682 = !DILocation(line: 4442, column: 38, scope: !1087)
!7683 = !DILocation(line: 4443, column: 27, scope: !1087)
!7684 = !DILocation(line: 4443, column: 36, scope: !1087)
!7685 = !DILocation(line: 4443, column: 17, scope: !1087)
!7686 = !DILocation(line: 4443, column: 45, scope: !1087)
!7687 = !DILocation(line: 4442, column: 17, scope: !1061)
!7688 = !DILocation(line: 4444, column: 42, scope: !1086)
!7689 = !DILocation(line: 4444, column: 51, scope: !1086)
!7690 = !DILocation(line: 4444, column: 27, scope: !1086)
!7691 = !DILocation(line: 4444, column: 25, scope: !1086)
!7692 = !DILocation(line: 4445, column: 21, scope: !1085)
!7693 = !DILocation(line: 4445, column: 29, scope: !1085)
!7694 = !DILocation(line: 4445, column: 21, scope: !1086)
!7695 = !DILocation(line: 4446, column: 21, scope: !1084)
!7696 = !DILocation(line: 4446, column: 26, scope: !7697)
!7697 = !DILexicalBlockFile(scope: !1083, file: !450, discriminator: 1)
!7698 = !DILocation(line: 4446, column: 36, scope: !1083)
!7699 = !DILocation(line: 4446, column: 66, scope: !1083)
!7700 = !DILocation(line: 4446, column: 84, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !1083, file: !450, line: 4446, column: 81)
!7702 = !DILocation(line: 4446, column: 101, scope: !7701)
!7703 = !DILocation(line: 4446, column: 81, scope: !7701)
!7704 = !DILocation(line: 4446, column: 111, scope: !7701)
!7705 = !DILocation(line: 4446, column: 81, scope: !1083)
!7706 = !DILocation(line: 4446, column: 81, scope: !7707)
!7707 = !DILexicalBlockFile(scope: !1083, file: !450, discriminator: 2)
!7708 = !DILocation(line: 4446, column: 142, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !7701, file: !450, discriminator: 3)
!7710 = !DILocation(line: 4446, column: 160, scope: !7701)
!7711 = !DILocation(line: 4446, column: 170, scope: !7701)
!7712 = !DILocation(line: 4446, column: 195, scope: !7701)
!7713 = !DILocation(line: 4446, column: 126, scope: !7701)
!7714 = !DILocation(line: 4446, column: 214, scope: !7715)
!7715 = !DILexicalBlockFile(scope: !1084, file: !450, discriminator: 4)
!7716 = !DILocation(line: 4446, column: 214, scope: !1083)
!7717 = !DILocation(line: 4446, column: 214, scope: !7718)
!7718 = !DILexicalBlockFile(scope: !1083, file: !450, discriminator: 5)
!7719 = !DILocation(line: 4447, column: 21, scope: !1084)
!7720 = !DILocation(line: 4447, column: 26, scope: !7721)
!7721 = !DILexicalBlockFile(scope: !1089, file: !450, discriminator: 1)
!7722 = !DILocation(line: 4447, column: 36, scope: !1089)
!7723 = !DILocation(line: 4447, column: 66, scope: !1089)
!7724 = !DILocation(line: 4447, column: 84, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !1089, file: !450, line: 4447, column: 81)
!7726 = !DILocation(line: 4447, column: 101, scope: !7725)
!7727 = !DILocation(line: 4447, column: 81, scope: !7725)
!7728 = !DILocation(line: 4447, column: 111, scope: !7725)
!7729 = !DILocation(line: 4447, column: 81, scope: !1089)
!7730 = !DILocation(line: 4447, column: 81, scope: !7731)
!7731 = !DILexicalBlockFile(scope: !1089, file: !450, discriminator: 2)
!7732 = !DILocation(line: 4447, column: 142, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !7725, file: !450, discriminator: 3)
!7734 = !DILocation(line: 4447, column: 160, scope: !7725)
!7735 = !DILocation(line: 4447, column: 170, scope: !7725)
!7736 = !DILocation(line: 4447, column: 195, scope: !7725)
!7737 = !DILocation(line: 4447, column: 126, scope: !7725)
!7738 = !DILocation(line: 4447, column: 214, scope: !7715)
!7739 = !DILocation(line: 4447, column: 214, scope: !1089)
!7740 = !DILocation(line: 4447, column: 214, scope: !7741)
!7741 = !DILexicalBlockFile(scope: !1089, file: !450, discriminator: 5)
!7742 = !DILocation(line: 4448, column: 21, scope: !1084)
!7743 = !DILocation(line: 4450, column: 13, scope: !1086)
!7744 = !DILocation(line: 4451, column: 13, scope: !1061)
!7745 = !DILocation(line: 4451, column: 18, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !1091, file: !450, discriminator: 1)
!7747 = !DILocation(line: 4451, column: 28, scope: !1091)
!7748 = !DILocation(line: 4451, column: 58, scope: !1091)
!7749 = !DILocation(line: 4451, column: 76, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !1091, file: !450, line: 4451, column: 73)
!7751 = !DILocation(line: 4451, column: 93, scope: !7750)
!7752 = !DILocation(line: 4451, column: 73, scope: !7750)
!7753 = !DILocation(line: 4451, column: 103, scope: !7750)
!7754 = !DILocation(line: 4451, column: 73, scope: !1091)
!7755 = !DILocation(line: 4451, column: 73, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !1091, file: !450, discriminator: 2)
!7757 = !DILocation(line: 4451, column: 134, scope: !7758)
!7758 = !DILexicalBlockFile(scope: !7750, file: !450, discriminator: 3)
!7759 = !DILocation(line: 4451, column: 152, scope: !7750)
!7760 = !DILocation(line: 4451, column: 162, scope: !7750)
!7761 = !DILocation(line: 4451, column: 187, scope: !7750)
!7762 = !DILocation(line: 4451, column: 118, scope: !7750)
!7763 = !DILocation(line: 4451, column: 206, scope: !7764)
!7764 = !DILexicalBlockFile(scope: !1061, file: !450, discriminator: 4)
!7765 = !DILocation(line: 4451, column: 206, scope: !1091)
!7766 = !DILocation(line: 4451, column: 206, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !1091, file: !450, discriminator: 5)
!7768 = !DILocation(line: 4452, column: 13, scope: !1061)
!7769 = !DILocation(line: 4452, column: 18, scope: !7770)
!7770 = !DILexicalBlockFile(scope: !1093, file: !450, discriminator: 1)
!7771 = !DILocation(line: 4452, column: 28, scope: !1093)
!7772 = !DILocation(line: 4452, column: 58, scope: !1093)
!7773 = !DILocation(line: 4452, column: 76, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !1093, file: !450, line: 4452, column: 73)
!7775 = !DILocation(line: 4452, column: 93, scope: !7774)
!7776 = !DILocation(line: 4452, column: 73, scope: !7774)
!7777 = !DILocation(line: 4452, column: 103, scope: !7774)
!7778 = !DILocation(line: 4452, column: 73, scope: !1093)
!7779 = !DILocation(line: 4452, column: 73, scope: !7780)
!7780 = !DILexicalBlockFile(scope: !1093, file: !450, discriminator: 2)
!7781 = !DILocation(line: 4452, column: 134, scope: !7782)
!7782 = !DILexicalBlockFile(scope: !7774, file: !450, discriminator: 3)
!7783 = !DILocation(line: 4452, column: 152, scope: !7774)
!7784 = !DILocation(line: 4452, column: 162, scope: !7774)
!7785 = !DILocation(line: 4452, column: 187, scope: !7774)
!7786 = !DILocation(line: 4452, column: 118, scope: !7774)
!7787 = !DILocation(line: 4452, column: 206, scope: !7764)
!7788 = !DILocation(line: 4452, column: 206, scope: !1093)
!7789 = !DILocation(line: 4452, column: 206, scope: !7790)
!7790 = !DILexicalBlockFile(scope: !1093, file: !450, discriminator: 5)
!7791 = !DILocation(line: 4453, column: 55, scope: !1061)
!7792 = !DILocation(line: 4453, column: 37, scope: !1061)
!7793 = !DILocation(line: 4453, column: 62, scope: !1061)
!7794 = !DILocation(line: 4453, column: 36, scope: !1061)
!7795 = !DILocation(line: 4453, column: 70, scope: !1061)
!7796 = !DILocation(line: 4453, column: 97, scope: !1061)
!7797 = !DILocation(line: 4453, column: 79, scope: !1061)
!7798 = !DILocation(line: 4453, column: 104, scope: !1061)
!7799 = !DILocation(line: 4453, column: 78, scope: !1061)
!7800 = !DILocation(line: 4453, column: 76, scope: !1061)
!7801 = !DILocation(line: 4454, column: 54, scope: !1061)
!7802 = !DILocation(line: 4454, column: 36, scope: !1061)
!7803 = !DILocation(line: 4454, column: 61, scope: !1061)
!7804 = !DILocation(line: 4454, column: 35, scope: !1061)
!7805 = !DILocation(line: 4454, column: 34, scope: !1061)
!7806 = !DILocation(line: 4455, column: 54, scope: !1061)
!7807 = !DILocation(line: 4455, column: 36, scope: !1061)
!7808 = !DILocation(line: 4455, column: 61, scope: !1061)
!7809 = !DILocation(line: 4455, column: 35, scope: !1061)
!7810 = !DILocation(line: 4455, column: 34, scope: !1061)
!7811 = !DILocation(line: 4453, column: 23, scope: !1061)
!7812 = !DILocation(line: 4456, column: 55, scope: !1061)
!7813 = !DILocation(line: 4456, column: 37, scope: !1061)
!7814 = !DILocation(line: 4456, column: 63, scope: !1061)
!7815 = !DILocation(line: 4456, column: 36, scope: !1061)
!7816 = !DILocation(line: 4456, column: 71, scope: !1061)
!7817 = !DILocation(line: 4456, column: 98, scope: !1061)
!7818 = !DILocation(line: 4456, column: 80, scope: !1061)
!7819 = !DILocation(line: 4456, column: 106, scope: !1061)
!7820 = !DILocation(line: 4456, column: 79, scope: !1061)
!7821 = !DILocation(line: 4456, column: 77, scope: !1061)
!7822 = !DILocation(line: 4457, column: 54, scope: !1061)
!7823 = !DILocation(line: 4457, column: 36, scope: !1061)
!7824 = !DILocation(line: 4457, column: 62, scope: !1061)
!7825 = !DILocation(line: 4457, column: 35, scope: !1061)
!7826 = !DILocation(line: 4457, column: 34, scope: !1061)
!7827 = !DILocation(line: 4458, column: 54, scope: !1061)
!7828 = !DILocation(line: 4458, column: 36, scope: !1061)
!7829 = !DILocation(line: 4458, column: 62, scope: !1061)
!7830 = !DILocation(line: 4458, column: 35, scope: !1061)
!7831 = !DILocation(line: 4458, column: 34, scope: !1061)
!7832 = !DILocation(line: 4456, column: 23, scope: !1061)
!7833 = !DILocation(line: 4455, column: 71, scope: !1061)
!7834 = !DILocation(line: 4453, column: 21, scope: !1061)
!7835 = !DILocation(line: 4463, column: 48, scope: !1061)
!7836 = !DILocation(line: 4463, column: 26, scope: !1061)
!7837 = !DILocation(line: 4463, column: 55, scope: !1061)
!7838 = !DILocation(line: 4463, column: 25, scope: !1061)
!7839 = !DILocation(line: 4463, column: 24, scope: !1061)
!7840 = !DILocation(line: 4464, column: 48, scope: !1061)
!7841 = !DILocation(line: 4464, column: 26, scope: !1061)
!7842 = !DILocation(line: 4464, column: 56, scope: !1061)
!7843 = !DILocation(line: 4464, column: 25, scope: !1061)
!7844 = !DILocation(line: 4464, column: 24, scope: !1061)
!7845 = !DILocation(line: 4463, column: 64, scope: !1061)
!7846 = !DILocation(line: 4464, column: 66, scope: !1061)
!7847 = !DILocation(line: 4465, column: 48, scope: !1061)
!7848 = !DILocation(line: 4465, column: 26, scope: !1061)
!7849 = !DILocation(line: 4465, column: 55, scope: !1061)
!7850 = !DILocation(line: 4465, column: 25, scope: !1061)
!7851 = !DILocation(line: 4465, column: 24, scope: !1061)
!7852 = !DILocation(line: 4466, column: 48, scope: !1061)
!7853 = !DILocation(line: 4466, column: 26, scope: !1061)
!7854 = !DILocation(line: 4466, column: 56, scope: !1061)
!7855 = !DILocation(line: 4466, column: 25, scope: !1061)
!7856 = !DILocation(line: 4466, column: 24, scope: !1061)
!7857 = !DILocation(line: 4465, column: 64, scope: !1061)
!7858 = !DILocation(line: 4466, column: 66, scope: !1061)
!7859 = !DILocation(line: 4464, column: 73, scope: !1061)
!7860 = !DILocation(line: 4467, column: 48, scope: !1061)
!7861 = !DILocation(line: 4467, column: 26, scope: !1061)
!7862 = !DILocation(line: 4467, column: 55, scope: !1061)
!7863 = !DILocation(line: 4467, column: 25, scope: !1061)
!7864 = !DILocation(line: 4467, column: 24, scope: !1061)
!7865 = !DILocation(line: 4468, column: 48, scope: !1061)
!7866 = !DILocation(line: 4468, column: 26, scope: !1061)
!7867 = !DILocation(line: 4468, column: 56, scope: !1061)
!7868 = !DILocation(line: 4468, column: 25, scope: !1061)
!7869 = !DILocation(line: 4468, column: 24, scope: !1061)
!7870 = !DILocation(line: 4467, column: 64, scope: !1061)
!7871 = !DILocation(line: 4466, column: 71, scope: !1061)
!7872 = !DILocation(line: 4463, column: 21, scope: !1061)
!7873 = !DILocation(line: 4469, column: 49, scope: !1061)
!7874 = !DILocation(line: 4469, column: 27, scope: !1061)
!7875 = !DILocation(line: 4469, column: 56, scope: !1061)
!7876 = !DILocation(line: 4469, column: 26, scope: !1061)
!7877 = !DILocation(line: 4469, column: 64, scope: !1061)
!7878 = !DILocation(line: 4469, column: 97, scope: !1061)
!7879 = !DILocation(line: 4469, column: 75, scope: !1061)
!7880 = !DILocation(line: 4469, column: 104, scope: !1061)
!7881 = !DILocation(line: 4469, column: 74, scope: !1061)
!7882 = !DILocation(line: 4469, column: 112, scope: !1061)
!7883 = !DILocation(line: 4469, column: 71, scope: !1061)
!7884 = !DILocation(line: 4469, column: 143, scope: !1061)
!7885 = !DILocation(line: 4469, column: 121, scope: !1061)
!7886 = !DILocation(line: 4469, column: 150, scope: !1061)
!7887 = !DILocation(line: 4469, column: 120, scope: !1061)
!7888 = !DILocation(line: 4469, column: 118, scope: !1061)
!7889 = !DILocation(line: 4470, column: 49, scope: !1061)
!7890 = !DILocation(line: 4470, column: 27, scope: !1061)
!7891 = !DILocation(line: 4470, column: 57, scope: !1061)
!7892 = !DILocation(line: 4470, column: 26, scope: !1061)
!7893 = !DILocation(line: 4470, column: 65, scope: !1061)
!7894 = !DILocation(line: 4470, column: 98, scope: !1061)
!7895 = !DILocation(line: 4470, column: 76, scope: !1061)
!7896 = !DILocation(line: 4470, column: 106, scope: !1061)
!7897 = !DILocation(line: 4470, column: 75, scope: !1061)
!7898 = !DILocation(line: 4470, column: 114, scope: !1061)
!7899 = !DILocation(line: 4470, column: 72, scope: !1061)
!7900 = !DILocation(line: 4470, column: 145, scope: !1061)
!7901 = !DILocation(line: 4470, column: 123, scope: !1061)
!7902 = !DILocation(line: 4470, column: 153, scope: !1061)
!7903 = !DILocation(line: 4470, column: 122, scope: !1061)
!7904 = !DILocation(line: 4470, column: 120, scope: !1061)
!7905 = !DILocation(line: 4469, column: 159, scope: !1061)
!7906 = !DILocation(line: 4469, column: 22, scope: !1061)
!7907 = !DILocation(line: 4471, column: 35, scope: !1061)
!7908 = !DILocation(line: 4471, column: 44, scope: !1061)
!7909 = !DILocation(line: 4471, column: 53, scope: !1061)
!7910 = !DILocation(line: 4471, column: 22, scope: !1061)
!7911 = !DILocation(line: 4471, column: 20, scope: !1061)
!7912 = !DILocation(line: 4472, column: 17, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !1061, file: !450, line: 4472, column: 17)
!7914 = !DILocation(line: 4472, column: 24, scope: !7913)
!7915 = !DILocation(line: 4472, column: 17, scope: !1061)
!7916 = !DILocation(line: 4473, column: 17, scope: !7913)
!7917 = !DILocation(line: 4475, column: 17, scope: !1096)
!7918 = !DILocation(line: 4475, column: 25, scope: !1096)
!7919 = !DILocation(line: 4475, column: 17, scope: !1061)
!7920 = !DILocation(line: 4476, column: 17, scope: !1095)
!7921 = !DILocation(line: 4476, column: 27, scope: !1095)
!7922 = !DILocation(line: 4476, column: 34, scope: !1095)
!7923 = !DILocation(line: 4477, column: 41, scope: !1095)
!7924 = !DILocation(line: 4477, column: 49, scope: !1095)
!7925 = !DILocation(line: 4477, column: 26, scope: !1095)
!7926 = !DILocation(line: 4477, column: 24, scope: !1095)
!7927 = !DILocation(line: 4478, column: 17, scope: !1095)
!7928 = !DILocation(line: 4478, column: 22, scope: !7929)
!7929 = !DILexicalBlockFile(scope: !1098, file: !450, discriminator: 1)
!7930 = !DILocation(line: 4478, column: 32, scope: !1098)
!7931 = !DILocation(line: 4478, column: 62, scope: !1098)
!7932 = !DILocation(line: 4478, column: 77, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !1098, file: !450, line: 4478, column: 74)
!7934 = !DILocation(line: 4478, column: 94, scope: !7933)
!7935 = !DILocation(line: 4478, column: 74, scope: !7933)
!7936 = !DILocation(line: 4478, column: 104, scope: !7933)
!7937 = !DILocation(line: 4478, column: 74, scope: !1098)
!7938 = !DILocation(line: 4478, column: 74, scope: !7939)
!7939 = !DILexicalBlockFile(scope: !1098, file: !450, discriminator: 2)
!7940 = !DILocation(line: 4478, column: 135, scope: !7941)
!7941 = !DILexicalBlockFile(scope: !7933, file: !450, discriminator: 3)
!7942 = !DILocation(line: 4478, column: 153, scope: !7933)
!7943 = !DILocation(line: 4478, column: 163, scope: !7933)
!7944 = !DILocation(line: 4478, column: 188, scope: !7933)
!7945 = !DILocation(line: 4478, column: 119, scope: !7933)
!7946 = !DILocation(line: 4478, column: 207, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !1095, file: !450, discriminator: 4)
!7948 = !DILocation(line: 4478, column: 207, scope: !1098)
!7949 = !DILocation(line: 4478, column: 207, scope: !7950)
!7950 = !DILexicalBlockFile(scope: !1098, file: !450, discriminator: 5)
!7951 = !DILocation(line: 4479, column: 17, scope: !1095)
!7952 = !DILocation(line: 4479, column: 22, scope: !7953)
!7953 = !DILexicalBlockFile(scope: !1100, file: !450, discriminator: 1)
!7954 = !DILocation(line: 4479, column: 32, scope: !1100)
!7955 = !DILocation(line: 4479, column: 62, scope: !1100)
!7956 = !DILocation(line: 4479, column: 80, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !1100, file: !450, line: 4479, column: 77)
!7958 = !DILocation(line: 4479, column: 97, scope: !7957)
!7959 = !DILocation(line: 4479, column: 77, scope: !7957)
!7960 = !DILocation(line: 4479, column: 107, scope: !7957)
!7961 = !DILocation(line: 4479, column: 77, scope: !1100)
!7962 = !DILocation(line: 4479, column: 77, scope: !7963)
!7963 = !DILexicalBlockFile(scope: !1100, file: !450, discriminator: 2)
!7964 = !DILocation(line: 4479, column: 138, scope: !7965)
!7965 = !DILexicalBlockFile(scope: !7957, file: !450, discriminator: 3)
!7966 = !DILocation(line: 4479, column: 156, scope: !7957)
!7967 = !DILocation(line: 4479, column: 166, scope: !7957)
!7968 = !DILocation(line: 4479, column: 191, scope: !7957)
!7969 = !DILocation(line: 4479, column: 122, scope: !7957)
!7970 = !DILocation(line: 4479, column: 210, scope: !7947)
!7971 = !DILocation(line: 4479, column: 210, scope: !1100)
!7972 = !DILocation(line: 4479, column: 210, scope: !7973)
!7973 = !DILexicalBlockFile(scope: !1100, file: !450, discriminator: 5)
!7974 = !DILocation(line: 4480, column: 13, scope: !1096)
!7975 = !DILocation(line: 4480, column: 13, scope: !1095)
!7976 = !DILocation(line: 4481, column: 9, scope: !1062)
!7977 = !DILocation(line: 4481, column: 9, scope: !7536)
!7978 = !DILocation(line: 4481, column: 9, scope: !1061)
!7979 = !DILocation(line: 4482, column: 33, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !1062, file: !450, line: 4482, column: 18)
!7981 = !DILocation(line: 4482, column: 42, scope: !7980)
!7982 = !DILocation(line: 4482, column: 51, scope: !7980)
!7983 = !DILocation(line: 4482, column: 78, scope: !7980)
!7984 = !DILocation(line: 4482, column: 112, scope: !7985)
!7985 = !DILexicalBlockFile(scope: !7980, file: !450, discriminator: 1)
!7986 = !DILocation(line: 4482, column: 121, scope: !7980)
!7987 = !DILocation(line: 4482, column: 81, scope: !7980)
!7988 = !DILocation(line: 4482, column: 18, scope: !1062)
!7989 = !DILocation(line: 4485, column: 52, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7980, file: !450, line: 4482, column: 158)
!7991 = !DILocation(line: 4485, column: 29, scope: !7990)
!7992 = !DILocation(line: 4486, column: 49, scope: !7990)
!7993 = !DILocation(line: 4486, column: 29, scope: !7990)
!7994 = !DILocation(line: 4484, column: 22, scope: !7990)
!7995 = !DILocation(line: 4484, column: 20, scope: !7990)
!7996 = !DILocation(line: 4488, column: 9, scope: !7990)
!7997 = !DILocation(line: 4489, column: 5, scope: !1063)
!7998 = !DILocation(line: 4491, column: 9, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !1055, file: !450, line: 4491, column: 9)
!8000 = !DILocation(line: 4491, column: 16, scope: !7999)
!8001 = !DILocation(line: 4491, column: 9, scope: !1055)
!8002 = !DILocation(line: 4492, column: 25, scope: !7999)
!8003 = !DILocation(line: 4492, column: 35, scope: !7999)
!8004 = !DILocation(line: 4492, column: 44, scope: !7999)
!8005 = !DILocation(line: 4492, column: 9, scope: !7999)
!8006 = !DILocation(line: 4493, column: 12, scope: !1055)
!8007 = !DILocation(line: 4493, column: 5, scope: !1055)
!8008 = !DILocation(line: 4494, column: 1, scope: !1055)
!8009 = !DILocation(line: 4361, column: 45, scope: !1018)
!8010 = !DILocation(line: 4361, column: 69, scope: !1018)
!8011 = !DILocation(line: 4362, column: 28, scope: !1018)
!8012 = !DILocation(line: 4367, column: 5, scope: !1018)
!8013 = !DILocation(line: 4367, column: 9, scope: !1018)
!8014 = !DILocation(line: 4367, column: 37, scope: !1018)
!8015 = !DILocation(line: 4367, column: 19, scope: !1018)
!8016 = !DILocation(line: 4367, column: 44, scope: !1018)
!8017 = !DILocation(line: 4367, column: 18, scope: !1018)
!8018 = !DILocation(line: 4367, column: 52, scope: !1018)
!8019 = !DILocation(line: 4367, column: 79, scope: !1018)
!8020 = !DILocation(line: 4367, column: 61, scope: !1018)
!8021 = !DILocation(line: 4367, column: 86, scope: !1018)
!8022 = !DILocation(line: 4367, column: 60, scope: !1018)
!8023 = !DILocation(line: 4367, column: 58, scope: !1018)
!8024 = !DILocation(line: 4368, column: 5, scope: !1018)
!8025 = !DILocation(line: 4368, column: 9, scope: !1018)
!8026 = !DILocation(line: 4368, column: 37, scope: !1018)
!8027 = !DILocation(line: 4368, column: 19, scope: !1018)
!8028 = !DILocation(line: 4368, column: 44, scope: !1018)
!8029 = !DILocation(line: 4368, column: 18, scope: !1018)
!8030 = !DILocation(line: 4368, column: 17, scope: !1018)
!8031 = !DILocation(line: 4369, column: 5, scope: !1018)
!8032 = !DILocation(line: 4369, column: 9, scope: !1018)
!8033 = !DILocation(line: 4369, column: 35, scope: !1018)
!8034 = !DILocation(line: 4369, column: 17, scope: !1018)
!8035 = !DILocation(line: 4369, column: 42, scope: !1018)
!8036 = !DILocation(line: 4369, column: 16, scope: !1018)
!8037 = !DILocation(line: 4369, column: 15, scope: !1018)
!8038 = !DILocation(line: 4369, column: 76, scope: !1018)
!8039 = !DILocation(line: 4369, column: 85, scope: !1018)
!8040 = !DILocation(line: 4369, column: 93, scope: !1018)
!8041 = !DILocation(line: 4369, column: 91, scope: !1018)
!8042 = !DILocation(line: 4369, column: 51, scope: !1018)
!8043 = !DILocation(line: 4370, column: 5, scope: !1018)
!8044 = !DILocation(line: 4370, column: 9, scope: !1018)
!8045 = !DILocation(line: 4370, column: 40, scope: !1018)
!8046 = !DILocation(line: 4370, column: 47, scope: !1018)
!8047 = !DILocation(line: 4370, column: 17, scope: !1018)
!8048 = !DILocation(line: 4370, column: 16, scope: !1018)
!8049 = !DILocation(line: 4371, column: 5, scope: !1018)
!8050 = !DILocation(line: 4371, column: 9, scope: !1018)
!8051 = !DILocation(line: 4371, column: 42, scope: !1018)
!8052 = !DILocation(line: 4371, column: 49, scope: !1018)
!8053 = !DILocation(line: 4371, column: 19, scope: !1018)
!8054 = !DILocation(line: 4371, column: 18, scope: !1018)
!8055 = !DILocation(line: 4372, column: 5, scope: !1018)
!8056 = !DILocation(line: 4372, column: 9, scope: !1018)
!8057 = !DILocation(line: 4372, column: 42, scope: !1018)
!8058 = !DILocation(line: 4372, column: 49, scope: !1018)
!8059 = !DILocation(line: 4372, column: 19, scope: !1018)
!8060 = !DILocation(line: 4372, column: 18, scope: !1018)
!8061 = !DILocation(line: 4372, column: 83, scope: !1018)
!8062 = !DILocation(line: 4372, column: 92, scope: !1018)
!8063 = !DILocation(line: 4372, column: 103, scope: !1018)
!8064 = !DILocation(line: 4372, column: 101, scope: !1018)
!8065 = !DILocation(line: 4372, column: 58, scope: !1018)
!8066 = !DILocation(line: 4373, column: 5, scope: !1018)
!8067 = !DILocation(line: 4373, column: 9, scope: !1018)
!8068 = !DILocation(line: 4373, column: 48, scope: !1018)
!8069 = !DILocation(line: 4373, column: 55, scope: !1018)
!8070 = !DILocation(line: 4373, column: 25, scope: !1018)
!8071 = !DILocation(line: 4373, column: 63, scope: !1018)
!8072 = !DILocation(line: 4373, column: 96, scope: !1018)
!8073 = !DILocation(line: 4373, column: 103, scope: !1018)
!8074 = !DILocation(line: 4373, column: 73, scope: !1018)
!8075 = !DILocation(line: 4373, column: 111, scope: !1018)
!8076 = !DILocation(line: 4373, column: 70, scope: !1018)
!8077 = !DILocation(line: 4373, column: 142, scope: !1018)
!8078 = !DILocation(line: 4373, column: 149, scope: !1018)
!8079 = !DILocation(line: 4373, column: 119, scope: !1018)
!8080 = !DILocation(line: 4373, column: 117, scope: !1018)
!8081 = !DILocation(line: 4374, column: 46, scope: !1018)
!8082 = !DILocation(line: 4374, column: 55, scope: !1018)
!8083 = !DILocation(line: 4374, column: 71, scope: !1018)
!8084 = !DILocation(line: 4374, column: 69, scope: !1018)
!8085 = !DILocation(line: 4373, column: 158, scope: !1018)
!8086 = !DILocation(line: 4377, column: 9, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !1018, file: !450, line: 4377, column: 9)
!8088 = !DILocation(line: 4378, column: 67, scope: !8087)
!8089 = !DILocation(line: 4377, column: 9, scope: !1018)
!8090 = !DILocation(line: 4379, column: 9, scope: !8087)
!8091 = !DILocation(line: 4381, column: 32, scope: !8087)
!8092 = !DILocation(line: 4381, column: 38, scope: !8087)
!8093 = !DILocation(line: 4381, column: 45, scope: !8087)
!8094 = !DILocation(line: 4381, column: 50, scope: !8087)
!8095 = !DILocation(line: 4381, column: 56, scope: !8087)
!8096 = !DILocation(line: 4381, column: 64, scope: !8087)
!8097 = !DILocation(line: 4381, column: 72, scope: !8087)
!8098 = !DILocation(line: 4381, column: 114, scope: !8087)
!8099 = !DILocation(line: 4381, column: 87, scope: !8087)
!8100 = !DILocation(line: 4381, column: 122, scope: !8087)
!8101 = !DILocation(line: 4381, column: 85, scope: !8087)
!8102 = !DILocation(line: 4381, column: 135, scope: !8103)
!8103 = !DILexicalBlockFile(scope: !8087, file: !450, discriminator: 1)
!8104 = !DILocation(line: 4381, column: 141, scope: !8087)
!8105 = !DILocation(line: 4381, column: 85, scope: !8106)
!8106 = !DILexicalBlockFile(scope: !8087, file: !450, discriminator: 2)
!8107 = !DILocation(line: 4381, column: 16, scope: !8108)
!8108 = !DILexicalBlockFile(scope: !8109, file: !450, discriminator: 4)
!8109 = !DILexicalBlockFile(scope: !8087, file: !450, discriminator: 3)
!8110 = !DILocation(line: 4381, column: 9, scope: !8087)
!8111 = !DILocation(line: 4384, column: 1, scope: !1018)
!8112 = !DILocation(line: 573, column: 25, scope: !1032)
!8113 = !DILocation(line: 573, column: 36, scope: !1032)
!8114 = !DILocation(line: 573, column: 48, scope: !1032)
!8115 = !DILocation(line: 574, column: 25, scope: !1032)
!8116 = !DILocation(line: 574, column: 36, scope: !1032)
!8117 = !DILocation(line: 574, column: 49, scope: !1032)
!8118 = !DILocation(line: 575, column: 25, scope: !1032)
!8119 = !DILocation(line: 577, column: 20, scope: !1032)
!8120 = !DILocation(line: 577, column: 28, scope: !1032)
!8121 = !DILocation(line: 577, column: 5, scope: !1032)
!8122 = !DILocation(line: 578, column: 20, scope: !1032)
!8123 = !DILocation(line: 578, column: 28, scope: !1032)
!8124 = !DILocation(line: 578, column: 5, scope: !1032)
!8125 = !DILocation(line: 579, column: 20, scope: !1032)
!8126 = !DILocation(line: 579, column: 26, scope: !1032)
!8127 = !DILocation(line: 579, column: 5, scope: !1032)
!8128 = !DILocation(line: 580, column: 20, scope: !1032)
!8129 = !DILocation(line: 580, column: 25, scope: !1032)
!8130 = !DILocation(line: 580, column: 5, scope: !1032)
!8131 = !DILocation(line: 581, column: 27, scope: !1032)
!8132 = !DILocation(line: 581, column: 33, scope: !1032)
!8133 = !DILocation(line: 581, column: 40, scope: !1032)
!8134 = !DILocation(line: 581, column: 12, scope: !1032)
!8135 = !DILocation(line: 581, column: 5, scope: !1032)
!8136 = !DILocation(line: 450, column: 21, scope: !1043)
!8137 = !DILocation(line: 450, column: 30, scope: !1043)
!8138 = !DILocation(line: 450, column: 38, scope: !1043)
!8139 = !DILocation(line: 454, column: 10, scope: !1052)
!8140 = !DILocation(line: 454, column: 9, scope: !1052)
!8141 = !DILocation(line: 454, column: 13, scope: !1052)
!8142 = !DILocation(line: 454, column: 17, scope: !1052)
!8143 = !DILocation(line: 454, column: 21, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !1052, file: !450, discriminator: 1)
!8145 = !DILocation(line: 454, column: 20, scope: !1052)
!8146 = !DILocation(line: 454, column: 27, scope: !1052)
!8147 = !DILocation(line: 454, column: 24, scope: !1052)
!8148 = !DILocation(line: 454, column: 9, scope: !1043)
!8149 = !DILocation(line: 455, column: 9, scope: !1051)
!8150 = !DILocation(line: 455, column: 19, scope: !1051)
!8151 = !DILocation(line: 455, column: 36, scope: !1051)
!8152 = !DILocation(line: 455, column: 35, scope: !1051)
!8153 = !DILocation(line: 455, column: 40, scope: !1051)
!8154 = !DILocation(line: 455, column: 48, scope: !1051)
!8155 = !DILocation(line: 455, column: 28, scope: !1051)
!8156 = !DILocation(line: 456, column: 9, scope: !1051)
!8157 = !DILocation(line: 456, column: 19, scope: !1051)
!8158 = !DILocation(line: 456, column: 29, scope: !1051)
!8159 = !DILocation(line: 456, column: 28, scope: !1051)
!8160 = !DILocation(line: 456, column: 34, scope: !1051)
!8161 = !DILocation(line: 456, column: 32, scope: !1051)
!8162 = !DILocation(line: 458, column: 15, scope: !1051)
!8163 = !DILocation(line: 458, column: 10, scope: !1051)
!8164 = !DILocation(line: 458, column: 13, scope: !1051)
!8165 = !DILocation(line: 459, column: 5, scope: !1052)
!8166 = !DILocation(line: 459, column: 5, scope: !1051)
!8167 = !DILocation(line: 461, column: 1, scope: !1043)
!8168 = !DILocation(line: 4339, column: 30, scope: !1101)
!8169 = !DILocation(line: 4339, column: 46, scope: !1101)
!8170 = !DILocation(line: 4340, column: 57, scope: !1101)
!8171 = !DILocation(line: 4340, column: 30, scope: !1101)
!8172 = !DILocation(line: 4340, column: 65, scope: !1101)
!8173 = !DILocation(line: 4340, column: 28, scope: !1101)
!8174 = !DILocation(line: 4340, column: 103, scope: !8175)
!8175 = !DILexicalBlockFile(scope: !1101, file: !450, discriminator: 1)
!8176 = !DILocation(line: 4340, column: 79, scope: !1101)
!8177 = !DILocation(line: 4340, column: 111, scope: !1101)
!8178 = !DILocation(line: 4340, column: 28, scope: !8179)
!8179 = !DILexicalBlockFile(scope: !1101, file: !450, discriminator: 2)
!8180 = !DILocation(line: 4340, column: 140, scope: !8181)
!8181 = !DILexicalBlockFile(scope: !8182, file: !450, discriminator: 4)
!8182 = !DILexicalBlockFile(scope: !1101, file: !450, discriminator: 3)
!8183 = !DILocation(line: 4340, column: 12, scope: !1101)
!8184 = !DILocation(line: 4340, column: 5, scope: !1101)
!8185 = !DILocation(line: 1801, column: 21, scope: !1105)
!8186 = !DILocation(line: 1801, column: 37, scope: !1105)
!8187 = !DILocation(line: 1803, column: 5, scope: !1105)
!8188 = !DILocation(line: 1803, column: 9, scope: !1105)
!8189 = !DILocation(line: 1803, column: 39, scope: !1105)
!8190 = !DILocation(line: 1803, column: 18, scope: !1105)
!8191 = !DILocation(line: 1803, column: 47, scope: !1105)
!8192 = !DILocation(line: 1803, column: 78, scope: !1105)
!8193 = !DILocation(line: 1803, column: 57, scope: !1105)
!8194 = !DILocation(line: 1803, column: 87, scope: !1105)
!8195 = !DILocation(line: 1803, column: 53, scope: !1105)
!8196 = !DILocation(line: 1804, column: 9, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !1105, file: !450, line: 1804, column: 9)
!8198 = !DILocation(line: 1804, column: 14, scope: !8197)
!8199 = !DILocation(line: 1804, column: 9, scope: !1105)
!8200 = !DILocation(line: 1805, column: 39, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8197, file: !450, line: 1804, column: 20)
!8202 = !DILocation(line: 1805, column: 18, scope: !8201)
!8203 = !DILocation(line: 1805, column: 47, scope: !8201)
!8204 = !DILocation(line: 1805, column: 81, scope: !8201)
!8205 = !DILocation(line: 1805, column: 60, scope: !8201)
!8206 = !DILocation(line: 1805, column: 90, scope: !8201)
!8207 = !DILocation(line: 1805, column: 56, scope: !8201)
!8208 = !DILocation(line: 1805, column: 14, scope: !8201)
!8209 = !DILocation(line: 1806, column: 13, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8201, file: !450, line: 1806, column: 13)
!8211 = !DILocation(line: 1806, column: 18, scope: !8210)
!8212 = !DILocation(line: 1806, column: 13, scope: !8201)
!8213 = !DILocation(line: 1807, column: 43, scope: !8210)
!8214 = !DILocation(line: 1807, column: 22, scope: !8210)
!8215 = !DILocation(line: 1807, column: 51, scope: !8210)
!8216 = !DILocation(line: 1808, column: 40, scope: !8210)
!8217 = !DILocation(line: 1808, column: 19, scope: !8210)
!8218 = !DILocation(line: 1808, column: 49, scope: !8210)
!8219 = !DILocation(line: 1807, column: 65, scope: !8210)
!8220 = !DILocation(line: 1807, column: 18, scope: !8210)
!8221 = !DILocation(line: 1807, column: 13, scope: !8210)
!8222 = !DILocation(line: 1809, column: 5, scope: !8201)
!8223 = !DILocation(line: 1810, column: 12, scope: !1105)
!8224 = !DILocation(line: 1811, column: 1, scope: !1105)
!8225 = !DILocation(line: 1810, column: 5, scope: !1105)
!8226 = !DILocation(line: 1779, column: 26, scope: !1110)
!8227 = !DILocation(line: 1779, column: 42, scope: !1110)
!8228 = !DILocation(line: 1781, column: 5, scope: !1110)
!8229 = !DILocation(line: 1781, column: 15, scope: !1110)
!8230 = !DILocation(line: 1783, column: 24, scope: !1117)
!8231 = !DILocation(line: 1783, column: 32, scope: !1117)
!8232 = !DILocation(line: 1783, column: 41, scope: !1117)
!8233 = !DILocation(line: 1783, column: 68, scope: !1117)
!8234 = !DILocation(line: 1783, column: 102, scope: !8235)
!8235 = !DILexicalBlockFile(scope: !1117, file: !450, discriminator: 2)
!8236 = !DILocation(line: 1783, column: 110, scope: !1117)
!8237 = !DILocation(line: 1783, column: 71, scope: !1117)
!8238 = !DILocation(line: 1783, column: 146, scope: !1117)
!8239 = !DILocation(line: 1783, column: 164, scope: !8240)
!8240 = !DILexicalBlockFile(scope: !8241, file: !450, discriminator: 3)
!8241 = !DILexicalBlockFile(scope: !1117, file: !450, discriminator: 1)
!8242 = !DILocation(line: 1783, column: 173, scope: !1117)
!8243 = !DILocation(line: 1783, column: 182, scope: !1117)
!8244 = !DILocation(line: 1783, column: 209, scope: !1117)
!8245 = !DILocation(line: 1783, column: 243, scope: !8246)
!8246 = !DILexicalBlockFile(scope: !1117, file: !450, discriminator: 4)
!8247 = !DILocation(line: 1783, column: 252, scope: !1117)
!8248 = !DILocation(line: 1783, column: 212, scope: !1117)
!8249 = !DILocation(line: 1783, column: 9, scope: !1110)
!8250 = !DILocation(line: 1788, column: 9, scope: !1116)
!8251 = !DILocation(line: 1788, column: 13, scope: !1116)
!8252 = !DILocation(line: 1788, column: 43, scope: !1116)
!8253 = !DILocation(line: 1788, column: 22, scope: !1116)
!8254 = !DILocation(line: 1788, column: 51, scope: !1116)
!8255 = !DILocation(line: 1788, column: 82, scope: !1116)
!8256 = !DILocation(line: 1788, column: 61, scope: !1116)
!8257 = !DILocation(line: 1788, column: 91, scope: !1116)
!8258 = !DILocation(line: 1788, column: 57, scope: !1116)
!8259 = !DILocation(line: 1789, column: 9, scope: !1116)
!8260 = !DILocation(line: 1789, column: 13, scope: !1116)
!8261 = !DILocation(line: 1789, column: 46, scope: !1116)
!8262 = !DILocation(line: 1789, column: 25, scope: !1116)
!8263 = !DILocation(line: 1789, column: 54, scope: !1116)
!8264 = !DILocation(line: 1789, column: 88, scope: !1116)
!8265 = !DILocation(line: 1789, column: 67, scope: !1116)
!8266 = !DILocation(line: 1789, column: 97, scope: !1116)
!8267 = !DILocation(line: 1789, column: 63, scope: !1116)
!8268 = !DILocation(line: 1790, column: 9, scope: !1116)
!8269 = !DILocation(line: 1790, column: 13, scope: !1116)
!8270 = !DILocation(line: 1790, column: 51, scope: !1116)
!8271 = !DILocation(line: 1790, column: 30, scope: !1116)
!8272 = !DILocation(line: 1790, column: 59, scope: !1116)
!8273 = !DILocation(line: 1791, column: 51, scope: !1116)
!8274 = !DILocation(line: 1791, column: 30, scope: !1116)
!8275 = !DILocation(line: 1791, column: 60, scope: !1116)
!8276 = !DILocation(line: 1790, column: 73, scope: !1116)
!8277 = !DILocation(line: 1792, column: 31, scope: !1116)
!8278 = !DILocation(line: 1792, column: 37, scope: !1116)
!8279 = !DILocation(line: 1792, column: 46, scope: !1116)
!8280 = !DILocation(line: 1792, column: 18, scope: !1116)
!8281 = !DILocation(line: 1792, column: 16, scope: !1116)
!8282 = !DILocation(line: 1793, column: 5, scope: !1117)
!8283 = !DILocation(line: 1793, column: 5, scope: !1116)
!8284 = !DILocation(line: 1795, column: 9, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !1110, file: !450, line: 1795, column: 9)
!8286 = !DILocation(line: 1795, column: 16, scope: !8285)
!8287 = !DILocation(line: 1795, column: 9, scope: !1110)
!8288 = !DILocation(line: 1796, column: 25, scope: !8285)
!8289 = !DILocation(line: 1796, column: 35, scope: !8285)
!8290 = !DILocation(line: 1796, column: 44, scope: !8285)
!8291 = !DILocation(line: 1796, column: 9, scope: !8285)
!8292 = !DILocation(line: 1797, column: 12, scope: !1110)
!8293 = !DILocation(line: 1798, column: 1, scope: !1110)
!8294 = !DILocation(line: 1797, column: 5, scope: !1110)
!8295 = !DILocation(line: 1383, column: 20, scope: !1173)
!8296 = !DILocation(line: 1383, column: 33, scope: !1173)
!8297 = !DILocation(line: 1385, column: 18, scope: !1173)
!8298 = !DILocation(line: 1387, column: 32, scope: !1173)
!8299 = !DILocation(line: 1387, column: 37, scope: !1173)
!8300 = !DILocation(line: 1387, column: 47, scope: !1173)
!8301 = !DILocation(line: 1387, column: 70, scope: !1173)
!8302 = !DILocation(line: 1387, column: 75, scope: !1173)
!8303 = !DILocation(line: 1387, column: 85, scope: !1173)
!8304 = !DILocation(line: 1385, column: 5, scope: !1173)
!8305 = !DILocation(line: 1388, column: 5, scope: !1173)
!8306 = !DILocation(line: 4179, column: 37, scope: !1177)
!8307 = !DILocation(line: 4179, column: 53, scope: !1177)
!8308 = !DILocation(line: 4179, column: 69, scope: !1177)
!8309 = !DILocation(line: 4181, column: 5, scope: !1177)
!8310 = !DILocation(line: 4181, column: 15, scope: !1177)
!8311 = !DILocation(line: 4183, column: 5, scope: !1177)
!8312 = !DILocation(line: 4183, column: 15, scope: !1177)
!8313 = !DILocation(line: 4185, column: 38, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !1177, file: !450, line: 4185, column: 9)
!8315 = !DILocation(line: 4185, column: 44, scope: !8314)
!8316 = !DILocation(line: 4185, column: 10, scope: !8314)
!8317 = !DILocation(line: 4185, column: 9, scope: !1177)
!8318 = !DILocation(line: 4188, column: 9, scope: !8314)
!8319 = !DILocation(line: 4189, column: 47, scope: !1177)
!8320 = !DILocation(line: 4189, column: 53, scope: !1177)
!8321 = !DILocation(line: 4189, column: 20, scope: !1177)
!8322 = !DILocation(line: 4189, column: 18, scope: !1177)
!8323 = !DILocation(line: 4189, column: 5, scope: !1177)
!8324 = !DILocation(line: 4192, column: 12, scope: !1177)
!8325 = !DILocation(line: 4193, column: 1, scope: !1177)
!8326 = !DILocation(line: 4192, column: 5, scope: !1177)
!8327 = !DILocation(line: 4224, column: 27, scope: !1230)
!8328 = !DILocation(line: 4224, column: 42, scope: !1230)
!8329 = !DILocation(line: 4226, column: 35, scope: !1230)
!8330 = !DILocation(line: 4226, column: 12, scope: !1230)
!8331 = !DILocation(line: 4226, column: 5, scope: !1230)
!8332 = !DILocation(line: 4231, column: 34, scope: !1234)
!8333 = !DILocation(line: 4231, column: 49, scope: !1234)
!8334 = !DILocation(line: 4231, column: 65, scope: !1234)
!8335 = !DILocation(line: 4233, column: 5, scope: !1234)
!8336 = !DILocation(line: 4233, column: 15, scope: !1234)
!8337 = !DILocation(line: 4234, column: 5, scope: !1234)
!8338 = !DILocation(line: 4234, column: 15, scope: !1234)
!8339 = !DILocation(line: 4235, column: 5, scope: !1234)
!8340 = !DILocation(line: 4235, column: 15, scope: !1234)
!8341 = !DILocation(line: 4238, column: 39, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !1234, file: !450, line: 4238, column: 9)
!8343 = !DILocation(line: 4238, column: 45, scope: !8342)
!8344 = !DILocation(line: 4238, column: 11, scope: !8342)
!8345 = !DILocation(line: 4238, column: 9, scope: !1234)
!8346 = !DILocation(line: 4240, column: 9, scope: !8342)
!8347 = !DILocation(line: 4241, column: 31, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !1234, file: !450, line: 4241, column: 9)
!8349 = !DILocation(line: 4241, column: 9, scope: !8348)
!8350 = !DILocation(line: 4241, column: 39, scope: !8348)
!8351 = !DILocation(line: 4241, column: 9, scope: !1234)
!8352 = !DILocation(line: 4242, column: 9, scope: !8348)
!8353 = !DILocation(line: 4244, column: 36, scope: !1234)
!8354 = !DILocation(line: 4245, column: 36, scope: !1234)
!8355 = !DILocation(line: 4245, column: 43, scope: !1234)
!8356 = !DILocation(line: 4246, column: 36, scope: !1234)
!8357 = !DILocation(line: 4247, column: 36, scope: !1234)
!8358 = !DILocation(line: 4244, column: 12, scope: !1234)
!8359 = !DILocation(line: 4244, column: 10, scope: !1234)
!8360 = !DILocation(line: 4248, column: 9, scope: !1244)
!8361 = !DILocation(line: 4248, column: 14, scope: !1244)
!8362 = !DILocation(line: 4248, column: 28, scope: !1244)
!8363 = !DILocation(line: 4248, column: 31, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !1244, file: !450, discriminator: 1)
!8365 = !DILocation(line: 4248, column: 38, scope: !1244)
!8366 = !DILocation(line: 4248, column: 9, scope: !1234)
!8367 = !DILocation(line: 4250, column: 9, scope: !1243)
!8368 = !DILocation(line: 4250, column: 19, scope: !1243)
!8369 = !DILocation(line: 4250, column: 26, scope: !1243)
!8370 = !DILocation(line: 4252, column: 39, scope: !1243)
!8371 = !DILocation(line: 4252, column: 67, scope: !1243)
!8372 = !DILocation(line: 4252, column: 16, scope: !1243)
!8373 = !DILocation(line: 4252, column: 14, scope: !1243)
!8374 = !DILocation(line: 4253, column: 9, scope: !1243)
!8375 = !DILocation(line: 4253, column: 14, scope: !8376)
!8376 = !DILexicalBlockFile(scope: !1246, file: !450, discriminator: 1)
!8377 = !DILocation(line: 4253, column: 24, scope: !1246)
!8378 = !DILocation(line: 4253, column: 54, scope: !1246)
!8379 = !DILocation(line: 4253, column: 69, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !1246, file: !450, line: 4253, column: 66)
!8381 = !DILocation(line: 4253, column: 86, scope: !8380)
!8382 = !DILocation(line: 4253, column: 66, scope: !8380)
!8383 = !DILocation(line: 4253, column: 96, scope: !8380)
!8384 = !DILocation(line: 4253, column: 66, scope: !1246)
!8385 = !DILocation(line: 4253, column: 66, scope: !8386)
!8386 = !DILexicalBlockFile(scope: !1246, file: !450, discriminator: 2)
!8387 = !DILocation(line: 4253, column: 127, scope: !8388)
!8388 = !DILexicalBlockFile(scope: !8380, file: !450, discriminator: 3)
!8389 = !DILocation(line: 4253, column: 145, scope: !8380)
!8390 = !DILocation(line: 4253, column: 155, scope: !8380)
!8391 = !DILocation(line: 4253, column: 180, scope: !8380)
!8392 = !DILocation(line: 4253, column: 111, scope: !8380)
!8393 = !DILocation(line: 4253, column: 199, scope: !8394)
!8394 = !DILexicalBlockFile(scope: !1243, file: !450, discriminator: 4)
!8395 = !DILocation(line: 4253, column: 199, scope: !1246)
!8396 = !DILocation(line: 4253, column: 199, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !1246, file: !450, discriminator: 5)
!8398 = !DILocation(line: 4254, column: 5, scope: !1244)
!8399 = !DILocation(line: 4254, column: 5, scope: !1243)
!8400 = !DILocation(line: 4255, column: 12, scope: !1234)
!8401 = !DILocation(line: 4255, column: 5, scope: !1234)
!8402 = !DILocation(line: 4256, column: 1, scope: !1234)
!8403 = !DILocation(line: 4260, column: 37, scope: !1257)
!8404 = !DILocation(line: 4260, column: 52, scope: !1257)
!8405 = !DILocation(line: 4262, column: 5, scope: !1257)
!8406 = !DILocation(line: 4262, column: 15, scope: !1257)
!8407 = !DILocation(line: 4263, column: 5, scope: !1257)
!8408 = !DILocation(line: 4263, column: 15, scope: !1257)
!8409 = !DILocation(line: 4265, column: 26, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !1257, file: !450, line: 4265, column: 9)
!8411 = !DILocation(line: 4265, column: 9, scope: !8410)
!8412 = !DILocation(line: 4265, column: 9, scope: !1257)
!8413 = !DILocation(line: 4266, column: 42, scope: !8410)
!8414 = !DILocation(line: 4266, column: 55, scope: !8410)
!8415 = !DILocation(line: 4266, column: 18, scope: !8410)
!8416 = !DILocation(line: 4266, column: 16, scope: !8410)
!8417 = !DILocation(line: 4266, column: 9, scope: !8410)
!8418 = !DILocation(line: 4268, column: 12, scope: !1257)
!8419 = !DILocation(line: 4269, column: 1, scope: !1257)
!8420 = !DILocation(line: 4268, column: 5, scope: !1257)
!8421 = !DILocation(line: 4273, column: 29, scope: !1263)
!8422 = !DILocation(line: 4273, column: 44, scope: !1263)
!8423 = !DILocation(line: 4276, column: 5, scope: !1263)
!8424 = !DILocation(line: 4276, column: 15, scope: !1263)
!8425 = !DILocation(line: 4276, column: 24, scope: !1263)
!8426 = !DILocation(line: 4279, column: 27, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !1263, file: !450, line: 4279, column: 9)
!8428 = !DILocation(line: 4279, column: 10, scope: !8427)
!8429 = !DILocation(line: 4279, column: 9, scope: !1263)
!8430 = !DILocation(line: 4280, column: 9, scope: !8427)
!8431 = !DILocation(line: 4282, column: 9, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !1263, file: !450, line: 4282, column: 9)
!8433 = !DILocation(line: 4282, column: 16, scope: !8432)
!8434 = !DILocation(line: 4282, column: 9, scope: !1263)
!8435 = !DILocation(line: 4283, column: 18, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8432, file: !450, line: 4282, column: 31)
!8437 = !DILocation(line: 4283, column: 16, scope: !8436)
!8438 = !DILocation(line: 4284, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !450, line: 4284, column: 13)
!8440 = !DILocation(line: 4284, column: 20, scope: !8439)
!8441 = !DILocation(line: 4284, column: 13, scope: !8436)
!8442 = !DILocation(line: 4285, column: 13, scope: !8439)
!8443 = !DILocation(line: 4286, column: 5, scope: !8436)
!8444 = !DILocation(line: 4287, column: 35, scope: !1263)
!8445 = !DILocation(line: 4288, column: 34, scope: !1263)
!8446 = !DILocation(line: 4288, column: 39, scope: !1263)
!8447 = !DILocation(line: 4288, column: 47, scope: !1263)
!8448 = !DILocation(line: 4287, column: 12, scope: !1263)
!8449 = !DILocation(line: 4287, column: 5, scope: !1263)
!8450 = !DILocation(line: 4289, column: 1, scope: !1263)
!8451 = !DILocation(line: 4293, column: 28, scope: !1269)
!8452 = !DILocation(line: 4293, column: 43, scope: !1269)
!8453 = !DILocation(line: 4293, column: 59, scope: !1269)
!8454 = !DILocation(line: 4296, column: 5, scope: !1269)
!8455 = !DILocation(line: 4296, column: 15, scope: !1269)
!8456 = !DILocation(line: 4297, column: 5, scope: !1269)
!8457 = !DILocation(line: 4297, column: 15, scope: !1269)
!8458 = !DILocation(line: 4298, column: 5, scope: !1269)
!8459 = !DILocation(line: 4298, column: 15, scope: !1269)
!8460 = !DILocation(line: 4300, column: 37, scope: !1279)
!8461 = !DILocation(line: 4300, column: 43, scope: !1279)
!8462 = !DILocation(line: 4300, column: 9, scope: !1279)
!8463 = !DILocation(line: 4300, column: 9, scope: !1269)
!8464 = !DILocation(line: 4303, column: 9, scope: !1278)
!8465 = !DILocation(line: 4303, column: 19, scope: !1278)
!8466 = !DILocation(line: 4305, column: 42, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !1278, file: !450, line: 4305, column: 13)
!8468 = !DILocation(line: 4305, column: 15, scope: !8467)
!8469 = !DILocation(line: 4305, column: 50, scope: !8467)
!8470 = !DILocation(line: 4305, column: 13, scope: !8467)
!8471 = !DILocation(line: 4305, column: 13, scope: !1278)
!8472 = !DILocation(line: 4306, column: 42, scope: !8467)
!8473 = !DILocation(line: 4306, column: 23, scope: !8467)
!8474 = !DILocation(line: 4306, column: 49, scope: !8467)
!8475 = !DILocation(line: 4306, column: 20, scope: !8467)
!8476 = !DILocation(line: 4306, column: 13, scope: !8467)
!8477 = !DILocation(line: 4307, column: 40, scope: !1278)
!8478 = !DILocation(line: 4308, column: 62, scope: !1278)
!8479 = !DILocation(line: 4308, column: 44, scope: !1278)
!8480 = !DILocation(line: 4308, column: 69, scope: !1278)
!8481 = !DILocation(line: 4308, column: 43, scope: !1278)
!8482 = !DILocation(line: 4308, column: 77, scope: !1278)
!8483 = !DILocation(line: 4308, column: 104, scope: !1278)
!8484 = !DILocation(line: 4308, column: 86, scope: !1278)
!8485 = !DILocation(line: 4308, column: 111, scope: !1278)
!8486 = !DILocation(line: 4308, column: 85, scope: !1278)
!8487 = !DILocation(line: 4308, column: 83, scope: !1278)
!8488 = !DILocation(line: 4309, column: 61, scope: !1278)
!8489 = !DILocation(line: 4309, column: 43, scope: !1278)
!8490 = !DILocation(line: 4309, column: 68, scope: !1278)
!8491 = !DILocation(line: 4309, column: 42, scope: !1278)
!8492 = !DILocation(line: 4309, column: 41, scope: !1278)
!8493 = !DILocation(line: 4310, column: 61, scope: !1278)
!8494 = !DILocation(line: 4310, column: 43, scope: !1278)
!8495 = !DILocation(line: 4310, column: 68, scope: !1278)
!8496 = !DILocation(line: 4310, column: 42, scope: !1278)
!8497 = !DILocation(line: 4310, column: 41, scope: !1278)
!8498 = !DILocation(line: 4311, column: 61, scope: !1278)
!8499 = !DILocation(line: 4311, column: 43, scope: !1278)
!8500 = !DILocation(line: 4311, column: 68, scope: !1278)
!8501 = !DILocation(line: 4311, column: 42, scope: !1278)
!8502 = !DILocation(line: 4311, column: 41, scope: !1278)
!8503 = !DILocation(line: 4312, column: 61, scope: !1278)
!8504 = !DILocation(line: 4312, column: 43, scope: !1278)
!8505 = !DILocation(line: 4312, column: 68, scope: !1278)
!8506 = !DILocation(line: 4312, column: 42, scope: !1278)
!8507 = !DILocation(line: 4312, column: 41, scope: !1278)
!8508 = !DILocation(line: 4313, column: 61, scope: !1278)
!8509 = !DILocation(line: 4313, column: 43, scope: !1278)
!8510 = !DILocation(line: 4313, column: 68, scope: !1278)
!8511 = !DILocation(line: 4313, column: 42, scope: !1278)
!8512 = !DILocation(line: 4313, column: 41, scope: !1278)
!8513 = !DILocation(line: 4314, column: 62, scope: !1278)
!8514 = !DILocation(line: 4314, column: 44, scope: !1278)
!8515 = !DILocation(line: 4314, column: 69, scope: !1278)
!8516 = !DILocation(line: 4314, column: 43, scope: !1278)
!8517 = !DILocation(line: 4314, column: 77, scope: !1278)
!8518 = !DILocation(line: 4314, column: 106, scope: !1278)
!8519 = !DILocation(line: 4314, column: 88, scope: !1278)
!8520 = !DILocation(line: 4314, column: 113, scope: !1278)
!8521 = !DILocation(line: 4314, column: 87, scope: !1278)
!8522 = !DILocation(line: 4314, column: 121, scope: !1278)
!8523 = !DILocation(line: 4314, column: 84, scope: !1278)
!8524 = !DILocation(line: 4314, column: 148, scope: !1278)
!8525 = !DILocation(line: 4314, column: 130, scope: !1278)
!8526 = !DILocation(line: 4314, column: 155, scope: !1278)
!8527 = !DILocation(line: 4314, column: 129, scope: !1278)
!8528 = !DILocation(line: 4314, column: 127, scope: !1278)
!8529 = !DILocation(line: 4315, column: 41, scope: !1278)
!8530 = !DILocation(line: 4307, column: 18, scope: !1278)
!8531 = !DILocation(line: 4307, column: 16, scope: !1278)
!8532 = !DILocation(line: 4316, column: 5, scope: !1279)
!8533 = !DILocation(line: 4316, column: 5, scope: !1278)
!8534 = !DILocation(line: 4317, column: 12, scope: !1269)
!8535 = !DILocation(line: 4318, column: 1, scope: !1269)
!8536 = !DILocation(line: 4317, column: 5, scope: !1269)
!8537 = !DILocation(line: 4944, column: 39, scope: !1280)
!8538 = !DILocation(line: 4946, column: 45, scope: !1280)
!8539 = !DILocation(line: 4946, column: 27, scope: !1280)
!8540 = !DILocation(line: 4946, column: 52, scope: !1280)
!8541 = !DILocation(line: 4946, column: 26, scope: !1280)
!8542 = !DILocation(line: 4946, column: 60, scope: !1280)
!8543 = !DILocation(line: 4946, column: 87, scope: !1280)
!8544 = !DILocation(line: 4946, column: 69, scope: !1280)
!8545 = !DILocation(line: 4946, column: 94, scope: !1280)
!8546 = !DILocation(line: 4946, column: 68, scope: !1280)
!8547 = !DILocation(line: 4946, column: 66, scope: !1280)
!8548 = !DILocation(line: 4946, column: 124, scope: !1280)
!8549 = !DILocation(line: 4946, column: 106, scope: !1280)
!8550 = !DILocation(line: 4946, column: 131, scope: !1280)
!8551 = !DILocation(line: 4946, column: 105, scope: !1280)
!8552 = !DILocation(line: 4946, column: 104, scope: !1280)
!8553 = !DILocation(line: 4946, column: 161, scope: !1280)
!8554 = !DILocation(line: 4946, column: 143, scope: !1280)
!8555 = !DILocation(line: 4946, column: 168, scope: !1280)
!8556 = !DILocation(line: 4946, column: 142, scope: !1280)
!8557 = !DILocation(line: 4946, column: 141, scope: !1280)
!8558 = !DILocation(line: 4946, column: 12, scope: !1280)
!8559 = !DILocation(line: 4946, column: 5, scope: !1280)
!8560 = !DILocation(line: 4952, column: 39, scope: !1283)
!8561 = !DILocation(line: 4954, column: 48, scope: !1283)
!8562 = !DILocation(line: 4954, column: 55, scope: !1283)
!8563 = !DILocation(line: 4954, column: 25, scope: !1283)
!8564 = !DILocation(line: 4954, column: 24, scope: !1283)
!8565 = !DILocation(line: 4954, column: 89, scope: !1283)
!8566 = !DILocation(line: 4954, column: 96, scope: !1283)
!8567 = !DILocation(line: 4954, column: 66, scope: !1283)
!8568 = !DILocation(line: 4954, column: 65, scope: !1283)
!8569 = !DILocation(line: 4954, column: 130, scope: !1283)
!8570 = !DILocation(line: 4954, column: 137, scope: !1283)
!8571 = !DILocation(line: 4954, column: 107, scope: !1283)
!8572 = !DILocation(line: 4954, column: 106, scope: !1283)
!8573 = !DILocation(line: 4954, column: 172, scope: !1283)
!8574 = !DILocation(line: 4954, column: 179, scope: !1283)
!8575 = !DILocation(line: 4954, column: 149, scope: !1283)
!8576 = !DILocation(line: 4954, column: 187, scope: !1283)
!8577 = !DILocation(line: 4954, column: 220, scope: !1283)
!8578 = !DILocation(line: 4954, column: 227, scope: !1283)
!8579 = !DILocation(line: 4954, column: 197, scope: !1283)
!8580 = !DILocation(line: 4954, column: 235, scope: !1283)
!8581 = !DILocation(line: 4954, column: 194, scope: !1283)
!8582 = !DILocation(line: 4954, column: 266, scope: !1283)
!8583 = !DILocation(line: 4954, column: 273, scope: !1283)
!8584 = !DILocation(line: 4954, column: 243, scope: !1283)
!8585 = !DILocation(line: 4954, column: 241, scope: !1283)
!8586 = !DILocation(line: 4954, column: 12, scope: !1283)
!8587 = !DILocation(line: 4954, column: 5, scope: !1283)
!8588 = !DILocation(line: 4962, column: 41, scope: !1286)
!8589 = !DILocation(line: 4964, column: 48, scope: !1286)
!8590 = !DILocation(line: 4964, column: 55, scope: !1286)
!8591 = !DILocation(line: 4964, column: 25, scope: !1286)
!8592 = !DILocation(line: 4964, column: 24, scope: !1286)
!8593 = !DILocation(line: 4964, column: 89, scope: !1286)
!8594 = !DILocation(line: 4964, column: 96, scope: !1286)
!8595 = !DILocation(line: 4964, column: 66, scope: !1286)
!8596 = !DILocation(line: 4964, column: 65, scope: !1286)
!8597 = !DILocation(line: 4964, column: 130, scope: !1286)
!8598 = !DILocation(line: 4964, column: 137, scope: !1286)
!8599 = !DILocation(line: 4964, column: 107, scope: !1286)
!8600 = !DILocation(line: 4964, column: 106, scope: !1286)
!8601 = !DILocation(line: 4964, column: 172, scope: !1286)
!8602 = !DILocation(line: 4964, column: 179, scope: !1286)
!8603 = !DILocation(line: 4964, column: 149, scope: !1286)
!8604 = !DILocation(line: 4964, column: 187, scope: !1286)
!8605 = !DILocation(line: 4964, column: 220, scope: !1286)
!8606 = !DILocation(line: 4964, column: 227, scope: !1286)
!8607 = !DILocation(line: 4964, column: 197, scope: !1286)
!8608 = !DILocation(line: 4964, column: 235, scope: !1286)
!8609 = !DILocation(line: 4964, column: 194, scope: !1286)
!8610 = !DILocation(line: 4964, column: 266, scope: !1286)
!8611 = !DILocation(line: 4964, column: 273, scope: !1286)
!8612 = !DILocation(line: 4964, column: 243, scope: !1286)
!8613 = !DILocation(line: 4964, column: 241, scope: !1286)
!8614 = !DILocation(line: 4964, column: 313, scope: !1286)
!8615 = !DILocation(line: 4964, column: 286, scope: !1286)
!8616 = !DILocation(line: 4964, column: 321, scope: !1286)
!8617 = !DILocation(line: 4964, column: 284, scope: !1286)
!8618 = !DILocation(line: 4964, column: 359, scope: !8619)
!8619 = !DILexicalBlockFile(scope: !1286, file: !450, discriminator: 1)
!8620 = !DILocation(line: 4964, column: 367, scope: !1286)
!8621 = !DILocation(line: 4964, column: 284, scope: !8622)
!8622 = !DILexicalBlockFile(scope: !1286, file: !450, discriminator: 2)
!8623 = !DILocation(line: 4964, column: 12, scope: !8624)
!8624 = !DILexicalBlockFile(scope: !8625, file: !450, discriminator: 4)
!8625 = !DILexicalBlockFile(scope: !1286, file: !450, discriminator: 3)
!8626 = !DILocation(line: 4964, column: 5, scope: !1286)
!8627 = !DILocation(line: 4577, column: 37, scope: !1289)
!8628 = !DILocation(line: 4579, column: 44, scope: !1289)
!8629 = !DILocation(line: 4579, column: 25, scope: !1289)
!8630 = !DILocation(line: 4580, column: 49, scope: !1289)
!8631 = !DILocation(line: 4580, column: 56, scope: !1289)
!8632 = !DILocation(line: 4580, column: 26, scope: !1289)
!8633 = !DILocation(line: 4580, column: 25, scope: !1289)
!8634 = !DILocation(line: 4581, column: 49, scope: !1289)
!8635 = !DILocation(line: 4581, column: 56, scope: !1289)
!8636 = !DILocation(line: 4581, column: 26, scope: !1289)
!8637 = !DILocation(line: 4581, column: 25, scope: !1289)
!8638 = !DILocation(line: 4582, column: 49, scope: !1289)
!8639 = !DILocation(line: 4582, column: 56, scope: !1289)
!8640 = !DILocation(line: 4582, column: 26, scope: !1289)
!8641 = !DILocation(line: 4582, column: 25, scope: !1289)
!8642 = !DILocation(line: 4579, column: 12, scope: !1289)
!8643 = !DILocation(line: 4579, column: 5, scope: !1289)
!8644 = !DILocation(line: 4874, column: 41, scope: !1292)
!8645 = !DILocation(line: 4876, column: 5, scope: !1292)
!8646 = !DILocation(line: 4876, column: 9, scope: !1292)
!8647 = !DILocation(line: 4878, column: 38, scope: !1298)
!8648 = !DILocation(line: 4878, column: 11, scope: !1298)
!8649 = !DILocation(line: 4878, column: 46, scope: !1298)
!8650 = !DILocation(line: 4878, column: 9, scope: !1298)
!8651 = !DILocation(line: 4878, column: 57, scope: !1298)
!8652 = !DILocation(line: 4878, column: 60, scope: !8653)
!8653 = !DILexicalBlockFile(scope: !1298, file: !450, discriminator: 1)
!8654 = !DILocation(line: 4878, column: 66, scope: !1298)
!8655 = !DILocation(line: 4878, column: 73, scope: !1298)
!8656 = !DILocation(line: 4878, column: 9, scope: !1292)
!8657 = !DILocation(line: 4879, column: 9, scope: !1297)
!8658 = !DILocation(line: 4879, column: 20, scope: !1297)
!8659 = !DILocation(line: 4881, column: 24, scope: !1297)
!8660 = !DILocation(line: 4881, column: 30, scope: !1297)
!8661 = !DILocation(line: 4881, column: 50, scope: !1297)
!8662 = !DILocation(line: 4881, column: 38, scope: !1297)
!8663 = !DILocation(line: 4881, column: 15, scope: !1297)
!8664 = !DILocation(line: 4881, column: 13, scope: !1297)
!8665 = !DILocation(line: 4882, column: 13, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !1297, file: !450, line: 4882, column: 13)
!8667 = !DILocation(line: 4882, column: 17, scope: !8666)
!8668 = !DILocation(line: 4882, column: 13, scope: !1297)
!8669 = !DILocation(line: 4883, column: 13, scope: !8666)
!8670 = !DILocation(line: 4885, column: 13, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !1297, file: !450, line: 4885, column: 13)
!8672 = !DILocation(line: 4885, column: 17, scope: !8671)
!8673 = !DILocation(line: 4885, column: 13, scope: !1297)
!8674 = !DILocation(line: 4886, column: 54, scope: !8671)
!8675 = !DILocation(line: 4886, column: 34, scope: !8671)
!8676 = !DILocation(line: 4886, column: 23, scope: !8671)
!8677 = !DILocation(line: 4886, column: 21, scope: !8671)
!8678 = !DILocation(line: 4886, column: 13, scope: !8671)
!8679 = !DILocation(line: 4887, column: 9, scope: !1297)
!8680 = !DILocation(line: 4887, column: 14, scope: !8681)
!8681 = !DILexicalBlockFile(scope: !1300, file: !450, discriminator: 1)
!8682 = !DILocation(line: 4887, column: 24, scope: !1300)
!8683 = !DILocation(line: 4887, column: 54, scope: !1300)
!8684 = !DILocation(line: 4887, column: 68, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !1300, file: !450, line: 4887, column: 65)
!8686 = !DILocation(line: 4887, column: 85, scope: !8685)
!8687 = !DILocation(line: 4887, column: 65, scope: !8685)
!8688 = !DILocation(line: 4887, column: 95, scope: !8685)
!8689 = !DILocation(line: 4887, column: 65, scope: !1300)
!8690 = !DILocation(line: 4887, column: 65, scope: !8691)
!8691 = !DILexicalBlockFile(scope: !1300, file: !450, discriminator: 2)
!8692 = !DILocation(line: 4887, column: 126, scope: !8693)
!8693 = !DILexicalBlockFile(scope: !8685, file: !450, discriminator: 3)
!8694 = !DILocation(line: 4887, column: 144, scope: !8685)
!8695 = !DILocation(line: 4887, column: 154, scope: !8685)
!8696 = !DILocation(line: 4887, column: 179, scope: !8685)
!8697 = !DILocation(line: 4887, column: 110, scope: !8685)
!8698 = !DILocation(line: 4887, column: 198, scope: !8699)
!8699 = !DILexicalBlockFile(scope: !1297, file: !450, discriminator: 4)
!8700 = !DILocation(line: 4887, column: 198, scope: !1300)
!8701 = !DILocation(line: 4887, column: 198, scope: !8702)
!8702 = !DILexicalBlockFile(scope: !1300, file: !450, discriminator: 5)
!8703 = !DILocation(line: 4888, column: 5, scope: !1298)
!8704 = !DILocation(line: 4888, column: 5, scope: !8653)
!8705 = !DILocation(line: 4888, column: 5, scope: !1297)
!8706 = !DILocation(line: 4889, column: 51, scope: !1292)
!8707 = !DILocation(line: 4889, column: 33, scope: !1292)
!8708 = !DILocation(line: 4889, column: 58, scope: !1292)
!8709 = !DILocation(line: 4889, column: 32, scope: !1292)
!8710 = !DILocation(line: 4889, column: 66, scope: !1292)
!8711 = !DILocation(line: 4889, column: 93, scope: !1292)
!8712 = !DILocation(line: 4889, column: 75, scope: !1292)
!8713 = !DILocation(line: 4889, column: 100, scope: !1292)
!8714 = !DILocation(line: 4889, column: 74, scope: !1292)
!8715 = !DILocation(line: 4889, column: 72, scope: !1292)
!8716 = !DILocation(line: 4890, column: 50, scope: !1292)
!8717 = !DILocation(line: 4890, column: 32, scope: !1292)
!8718 = !DILocation(line: 4890, column: 57, scope: !1292)
!8719 = !DILocation(line: 4890, column: 31, scope: !1292)
!8720 = !DILocation(line: 4890, column: 30, scope: !1292)
!8721 = !DILocation(line: 4891, column: 50, scope: !1292)
!8722 = !DILocation(line: 4891, column: 32, scope: !1292)
!8723 = !DILocation(line: 4891, column: 57, scope: !1292)
!8724 = !DILocation(line: 4891, column: 31, scope: !1292)
!8725 = !DILocation(line: 4891, column: 30, scope: !1292)
!8726 = !DILocation(line: 4892, column: 54, scope: !1292)
!8727 = !DILocation(line: 4892, column: 61, scope: !1292)
!8728 = !DILocation(line: 4892, column: 31, scope: !1292)
!8729 = !DILocation(line: 4892, column: 30, scope: !1292)
!8730 = !DILocation(line: 4893, column: 54, scope: !1292)
!8731 = !DILocation(line: 4893, column: 61, scope: !1292)
!8732 = !DILocation(line: 4893, column: 31, scope: !1292)
!8733 = !DILocation(line: 4893, column: 30, scope: !1292)
!8734 = !DILocation(line: 4894, column: 54, scope: !1292)
!8735 = !DILocation(line: 4894, column: 61, scope: !1292)
!8736 = !DILocation(line: 4894, column: 31, scope: !1292)
!8737 = !DILocation(line: 4894, column: 30, scope: !1292)
!8738 = !DILocation(line: 4895, column: 30, scope: !1292)
!8739 = !DILocation(line: 4889, column: 12, scope: !1292)
!8740 = !DILocation(line: 4889, column: 5, scope: !1292)
!8741 = !DILocation(line: 4896, column: 1, scope: !1292)
!8742 = !DILocation(line: 4899, column: 41, scope: !1310)
!8743 = !DILocation(line: 4901, column: 5, scope: !1310)
!8744 = !DILocation(line: 4901, column: 15, scope: !1310)
!8745 = !DILocation(line: 4903, column: 38, scope: !1316)
!8746 = !DILocation(line: 4903, column: 11, scope: !1316)
!8747 = !DILocation(line: 4903, column: 46, scope: !1316)
!8748 = !DILocation(line: 4903, column: 9, scope: !1316)
!8749 = !DILocation(line: 4903, column: 57, scope: !1316)
!8750 = !DILocation(line: 4903, column: 60, scope: !8751)
!8751 = !DILexicalBlockFile(scope: !1316, file: !450, discriminator: 1)
!8752 = !DILocation(line: 4903, column: 66, scope: !1316)
!8753 = !DILocation(line: 4903, column: 73, scope: !1316)
!8754 = !DILocation(line: 4903, column: 9, scope: !1310)
!8755 = !DILocation(line: 4904, column: 9, scope: !1315)
!8756 = !DILocation(line: 4904, column: 19, scope: !1315)
!8757 = !DILocation(line: 4905, column: 47, scope: !1315)
!8758 = !DILocation(line: 4905, column: 35, scope: !1315)
!8759 = !DILocation(line: 4905, column: 53, scope: !1315)
!8760 = !DILocation(line: 4905, column: 17, scope: !1315)
!8761 = !DILocation(line: 4905, column: 15, scope: !1315)
!8762 = !DILocation(line: 4906, column: 13, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !1315, file: !450, line: 4906, column: 13)
!8764 = !DILocation(line: 4906, column: 19, scope: !8763)
!8765 = !DILocation(line: 4906, column: 13, scope: !1315)
!8766 = !DILocation(line: 4907, column: 13, scope: !8763)
!8767 = !DILocation(line: 4908, column: 38, scope: !1315)
!8768 = !DILocation(line: 4908, column: 18, scope: !1315)
!8769 = !DILocation(line: 4908, column: 16, scope: !1315)
!8770 = !DILocation(line: 4909, column: 9, scope: !1315)
!8771 = !DILocation(line: 4909, column: 14, scope: !8772)
!8772 = !DILexicalBlockFile(scope: !1318, file: !450, discriminator: 1)
!8773 = !DILocation(line: 4909, column: 24, scope: !1318)
!8774 = !DILocation(line: 4909, column: 54, scope: !1318)
!8775 = !DILocation(line: 4909, column: 70, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !1318, file: !450, line: 4909, column: 67)
!8777 = !DILocation(line: 4909, column: 87, scope: !8776)
!8778 = !DILocation(line: 4909, column: 67, scope: !8776)
!8779 = !DILocation(line: 4909, column: 97, scope: !8776)
!8780 = !DILocation(line: 4909, column: 67, scope: !1318)
!8781 = !DILocation(line: 4909, column: 67, scope: !8782)
!8782 = !DILexicalBlockFile(scope: !1318, file: !450, discriminator: 2)
!8783 = !DILocation(line: 4909, column: 128, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !8776, file: !450, discriminator: 3)
!8785 = !DILocation(line: 4909, column: 146, scope: !8776)
!8786 = !DILocation(line: 4909, column: 156, scope: !8776)
!8787 = !DILocation(line: 4909, column: 181, scope: !8776)
!8788 = !DILocation(line: 4909, column: 112, scope: !8776)
!8789 = !DILocation(line: 4909, column: 200, scope: !8790)
!8790 = !DILexicalBlockFile(scope: !1315, file: !450, discriminator: 4)
!8791 = !DILocation(line: 4909, column: 200, scope: !1318)
!8792 = !DILocation(line: 4909, column: 200, scope: !8793)
!8793 = !DILexicalBlockFile(scope: !1318, file: !450, discriminator: 5)
!8794 = !DILocation(line: 4910, column: 5, scope: !1316)
!8795 = !DILocation(line: 4910, column: 5, scope: !8751)
!8796 = !DILocation(line: 4910, column: 5, scope: !1315)
!8797 = !DILocation(line: 4912, column: 9, scope: !1320)
!8798 = !DILocation(line: 4912, column: 19, scope: !1320)
!8799 = !DILocation(line: 4913, column: 9, scope: !1320)
!8800 = !DILocation(line: 4913, column: 16, scope: !1320)
!8801 = !DILocation(line: 4914, column: 16, scope: !1320)
!8802 = !DILocation(line: 4914, column: 9, scope: !1320)
!8803 = !DILocation(line: 4915, column: 45, scope: !1320)
!8804 = !DILocation(line: 4915, column: 27, scope: !1320)
!8805 = !DILocation(line: 4915, column: 52, scope: !1320)
!8806 = !DILocation(line: 4915, column: 26, scope: !1320)
!8807 = !DILocation(line: 4915, column: 60, scope: !1320)
!8808 = !DILocation(line: 4915, column: 87, scope: !1320)
!8809 = !DILocation(line: 4915, column: 69, scope: !1320)
!8810 = !DILocation(line: 4915, column: 94, scope: !1320)
!8811 = !DILocation(line: 4915, column: 68, scope: !1320)
!8812 = !DILocation(line: 4915, column: 66, scope: !1320)
!8813 = !DILocation(line: 4915, column: 103, scope: !1320)
!8814 = !DILocation(line: 4915, column: 14, scope: !1320)
!8815 = !DILocation(line: 4915, column: 22, scope: !1320)
!8816 = !DILocation(line: 4916, column: 43, scope: !1320)
!8817 = !DILocation(line: 4916, column: 25, scope: !1320)
!8818 = !DILocation(line: 4916, column: 50, scope: !1320)
!8819 = !DILocation(line: 4916, column: 24, scope: !1320)
!8820 = !DILocation(line: 4916, column: 23, scope: !1320)
!8821 = !DILocation(line: 4916, column: 59, scope: !1320)
!8822 = !DILocation(line: 4916, column: 14, scope: !1320)
!8823 = !DILocation(line: 4916, column: 21, scope: !1320)
!8824 = !DILocation(line: 4917, column: 44, scope: !1320)
!8825 = !DILocation(line: 4917, column: 26, scope: !1320)
!8826 = !DILocation(line: 4917, column: 51, scope: !1320)
!8827 = !DILocation(line: 4917, column: 25, scope: !1320)
!8828 = !DILocation(line: 4917, column: 24, scope: !1320)
!8829 = !DILocation(line: 4917, column: 14, scope: !1320)
!8830 = !DILocation(line: 4917, column: 22, scope: !1320)
!8831 = !DILocation(line: 4918, column: 48, scope: !1320)
!8832 = !DILocation(line: 4918, column: 55, scope: !1320)
!8833 = !DILocation(line: 4918, column: 25, scope: !1320)
!8834 = !DILocation(line: 4918, column: 24, scope: !1320)
!8835 = !DILocation(line: 4918, column: 14, scope: !1320)
!8836 = !DILocation(line: 4918, column: 22, scope: !1320)
!8837 = !{!4929, !2608, i64 8}
!8838 = !DILocation(line: 4919, column: 47, scope: !1320)
!8839 = !DILocation(line: 4919, column: 54, scope: !1320)
!8840 = !DILocation(line: 4919, column: 24, scope: !1320)
!8841 = !DILocation(line: 4919, column: 23, scope: !1320)
!8842 = !DILocation(line: 4919, column: 14, scope: !1320)
!8843 = !DILocation(line: 4919, column: 21, scope: !1320)
!8844 = !{!4929, !2608, i64 4}
!8845 = !DILocation(line: 4920, column: 47, scope: !1320)
!8846 = !DILocation(line: 4920, column: 54, scope: !1320)
!8847 = !DILocation(line: 4920, column: 24, scope: !1320)
!8848 = !DILocation(line: 4920, column: 23, scope: !1320)
!8849 = !DILocation(line: 4920, column: 14, scope: !1320)
!8850 = !DILocation(line: 4920, column: 21, scope: !1320)
!8851 = !{!4929, !2608, i64 0}
!8852 = !DILocation(line: 4921, column: 14, scope: !1320)
!8853 = !DILocation(line: 4921, column: 22, scope: !1320)
!8854 = !{!4929, !2608, i64 24}
!8855 = !DILocation(line: 4922, column: 14, scope: !1320)
!8856 = !DILocation(line: 4922, column: 23, scope: !1320)
!8857 = !{!4929, !2608, i64 32}
!8858 = !DILocation(line: 4923, column: 21, scope: !1320)
!8859 = !DILocation(line: 4923, column: 19, scope: !1320)
!8860 = !DILocation(line: 4924, column: 13, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !1320, file: !450, line: 4924, column: 13)
!8862 = !DILocation(line: 4924, column: 23, scope: !8861)
!8863 = !DILocation(line: 4928, column: 13, scope: !8861)
!8864 = !DILocation(line: 4928, column: 21, scope: !8865)
!8865 = !DILexicalBlockFile(scope: !8861, file: !450, discriminator: 1)
!8866 = !DILocation(line: 4928, column: 29, scope: !8861)
!8867 = !DILocation(line: 4924, column: 13, scope: !1320)
!8868 = !DILocation(line: 4934, column: 29, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8861, file: !450, line: 4933, column: 9)
!8870 = !DILocation(line: 4934, column: 13, scope: !8869)
!8871 = !DILocation(line: 4936, column: 13, scope: !8869)
!8872 = !DILocation(line: 4938, column: 37, scope: !1320)
!8873 = !DILocation(line: 4938, column: 74, scope: !1320)
!8874 = !DILocation(line: 4938, column: 81, scope: !1320)
!8875 = !DILocation(line: 4938, column: 51, scope: !1320)
!8876 = !DILocation(line: 4938, column: 89, scope: !1320)
!8877 = !DILocation(line: 4938, column: 122, scope: !1320)
!8878 = !DILocation(line: 4938, column: 129, scope: !1320)
!8879 = !DILocation(line: 4938, column: 99, scope: !1320)
!8880 = !DILocation(line: 4938, column: 137, scope: !1320)
!8881 = !DILocation(line: 4938, column: 96, scope: !1320)
!8882 = !DILocation(line: 4938, column: 168, scope: !1320)
!8883 = !DILocation(line: 4938, column: 175, scope: !1320)
!8884 = !DILocation(line: 4938, column: 145, scope: !1320)
!8885 = !DILocation(line: 4938, column: 143, scope: !1320)
!8886 = !DILocation(line: 4938, column: 49, scope: !1320)
!8887 = !DILocation(line: 4938, column: 184, scope: !1320)
!8888 = !DILocation(line: 4938, column: 47, scope: !1320)
!8889 = !DILocation(line: 4938, column: 18, scope: !1320)
!8890 = !DILocation(line: 4938, column: 16, scope: !1320)
!8891 = !DILocation(line: 4939, column: 5, scope: !1316)
!8892 = !DILocation(line: 4939, column: 5, scope: !8751)
!8893 = !DILocation(line: 4940, column: 12, scope: !1310)
!8894 = !DILocation(line: 4940, column: 5, scope: !1310)
!8895 = !DILocation(line: 4941, column: 1, scope: !1310)
!8896 = !DILocation(line: 4972, column: 44, scope: !1359)
!8897 = !DILocation(line: 4974, column: 5, scope: !1359)
!8898 = !DILocation(line: 4974, column: 9, scope: !1359)
!8899 = !DILocation(line: 4974, column: 12, scope: !1359)
!8900 = !DILocation(line: 4974, column: 15, scope: !1359)
!8901 = !DILocation(line: 4974, column: 18, scope: !1359)
!8902 = !DILocation(line: 4974, column: 22, scope: !1359)
!8903 = !DILocation(line: 4974, column: 26, scope: !1359)
!8904 = !DILocation(line: 4975, column: 5, scope: !1359)
!8905 = !DILocation(line: 4975, column: 15, scope: !1359)
!8906 = !DILocation(line: 4976, column: 5, scope: !1359)
!8907 = !DILocation(line: 4976, column: 26, scope: !1359)
!8908 = !DILocation(line: 4978, column: 44, scope: !1359)
!8909 = !DILocation(line: 4978, column: 17, scope: !1359)
!8910 = !DILocation(line: 4978, column: 52, scope: !1359)
!8911 = !DILocation(line: 4978, column: 15, scope: !1359)
!8912 = !DILocation(line: 4978, column: 90, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !1359, file: !450, discriminator: 1)
!8914 = !DILocation(line: 4978, column: 98, scope: !1359)
!8915 = !DILocation(line: 4978, column: 15, scope: !8916)
!8916 = !DILexicalBlockFile(scope: !1359, file: !450, discriminator: 2)
!8917 = !DILocation(line: 4978, column: 12, scope: !8918)
!8918 = !DILexicalBlockFile(scope: !8919, file: !450, discriminator: 4)
!8919 = !DILexicalBlockFile(scope: !1359, file: !450, discriminator: 3)
!8920 = !DILocation(line: 4979, column: 9, scope: !1372)
!8921 = !DILocation(line: 4979, column: 16, scope: !1372)
!8922 = !DILocation(line: 4979, column: 9, scope: !1359)
!8923 = !DILocation(line: 4980, column: 19, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !1372, file: !450, line: 4979, column: 38)
!8925 = !DILocation(line: 4980, column: 17, scope: !8924)
!8926 = !DILocation(line: 4981, column: 25, scope: !8924)
!8927 = !DILocation(line: 4981, column: 12, scope: !8924)
!8928 = !DILocation(line: 4981, column: 36, scope: !8924)
!8929 = !DILocation(line: 4981, column: 45, scope: !8924)
!8930 = !DILocation(line: 4982, column: 5, scope: !8924)
!8931 = !DILocation(line: 4984, column: 9, scope: !1371)
!8932 = !DILocation(line: 4984, column: 19, scope: !1371)
!8933 = !DILocation(line: 4985, column: 33, scope: !1371)
!8934 = !DILocation(line: 4985, column: 53, scope: !1371)
!8935 = !DILocation(line: 4985, column: 41, scope: !1371)
!8936 = !DILocation(line: 4985, column: 18, scope: !1371)
!8937 = !DILocation(line: 4985, column: 16, scope: !1371)
!8938 = !DILocation(line: 4986, column: 13, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !1371, file: !450, line: 4986, column: 13)
!8940 = !DILocation(line: 4986, column: 20, scope: !8939)
!8941 = !DILocation(line: 4986, column: 13, scope: !1371)
!8942 = !DILocation(line: 4987, column: 13, scope: !8939)
!8943 = !DILocation(line: 4988, column: 13, scope: !1376)
!8944 = !DILocation(line: 4988, column: 20, scope: !1376)
!8945 = !DILocation(line: 4988, column: 13, scope: !1371)
!8946 = !DILocation(line: 4989, column: 13, scope: !1375)
!8947 = !DILocation(line: 4989, column: 18, scope: !8948)
!8948 = !DILexicalBlockFile(scope: !1374, file: !450, discriminator: 1)
!8949 = !DILocation(line: 4989, column: 28, scope: !1374)
!8950 = !DILocation(line: 4989, column: 58, scope: !1374)
!8951 = !DILocation(line: 4989, column: 75, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !1374, file: !450, line: 4989, column: 72)
!8953 = !DILocation(line: 4989, column: 92, scope: !8952)
!8954 = !DILocation(line: 4989, column: 72, scope: !8952)
!8955 = !DILocation(line: 4989, column: 102, scope: !8952)
!8956 = !DILocation(line: 4989, column: 72, scope: !1374)
!8957 = !DILocation(line: 4989, column: 72, scope: !8958)
!8958 = !DILexicalBlockFile(scope: !1374, file: !450, discriminator: 2)
!8959 = !DILocation(line: 4989, column: 133, scope: !8960)
!8960 = !DILexicalBlockFile(scope: !8952, file: !450, discriminator: 3)
!8961 = !DILocation(line: 4989, column: 151, scope: !8952)
!8962 = !DILocation(line: 4989, column: 161, scope: !8952)
!8963 = !DILocation(line: 4989, column: 186, scope: !8952)
!8964 = !DILocation(line: 4989, column: 117, scope: !8952)
!8965 = !DILocation(line: 4989, column: 205, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !1375, file: !450, discriminator: 4)
!8967 = !DILocation(line: 4989, column: 205, scope: !1374)
!8968 = !DILocation(line: 4989, column: 205, scope: !8969)
!8969 = !DILexicalBlockFile(scope: !1374, file: !450, discriminator: 5)
!8970 = !DILocation(line: 4990, column: 23, scope: !1375)
!8971 = !DILocation(line: 4990, column: 21, scope: !1375)
!8972 = !DILocation(line: 4991, column: 29, scope: !1375)
!8973 = !DILocation(line: 4991, column: 16, scope: !1375)
!8974 = !DILocation(line: 4991, column: 40, scope: !1375)
!8975 = !DILocation(line: 4991, column: 49, scope: !1375)
!8976 = !DILocation(line: 4992, column: 9, scope: !1375)
!8977 = !DILocation(line: 4994, column: 69, scope: !1379)
!8978 = !DILocation(line: 4995, column: 69, scope: !1379)
!8979 = !DILocation(line: 4995, column: 49, scope: !1379)
!8980 = !DILocation(line: 4994, column: 46, scope: !1379)
!8981 = !DILocation(line: 4994, column: 23, scope: !1379)
!8982 = !DILocation(line: 4994, column: 21, scope: !1379)
!8983 = !DILocation(line: 4996, column: 13, scope: !1379)
!8984 = !DILocation(line: 4996, column: 18, scope: !8985)
!8985 = !DILexicalBlockFile(scope: !1378, file: !450, discriminator: 1)
!8986 = !DILocation(line: 4996, column: 28, scope: !1378)
!8987 = !DILocation(line: 4996, column: 58, scope: !1378)
!8988 = !DILocation(line: 4996, column: 75, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !1378, file: !450, line: 4996, column: 72)
!8990 = !DILocation(line: 4996, column: 92, scope: !8989)
!8991 = !DILocation(line: 4996, column: 72, scope: !8989)
!8992 = !DILocation(line: 4996, column: 102, scope: !8989)
!8993 = !DILocation(line: 4996, column: 72, scope: !1378)
!8994 = !DILocation(line: 4996, column: 72, scope: !8995)
!8995 = !DILexicalBlockFile(scope: !1378, file: !450, discriminator: 2)
!8996 = !DILocation(line: 4996, column: 133, scope: !8997)
!8997 = !DILexicalBlockFile(scope: !8989, file: !450, discriminator: 3)
!8998 = !DILocation(line: 4996, column: 151, scope: !8989)
!8999 = !DILocation(line: 4996, column: 161, scope: !8989)
!9000 = !DILocation(line: 4996, column: 186, scope: !8989)
!9001 = !DILocation(line: 4996, column: 117, scope: !8989)
!9002 = !DILocation(line: 4996, column: 205, scope: !9003)
!9003 = !DILexicalBlockFile(scope: !1379, file: !450, discriminator: 4)
!9004 = !DILocation(line: 4996, column: 205, scope: !1378)
!9005 = !DILocation(line: 4996, column: 205, scope: !9006)
!9006 = !DILexicalBlockFile(scope: !1378, file: !450, discriminator: 5)
!9007 = !DILocation(line: 4997, column: 17, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !1379, file: !450, line: 4997, column: 17)
!9009 = !DILocation(line: 4997, column: 25, scope: !9008)
!9010 = !DILocation(line: 4997, column: 17, scope: !1379)
!9011 = !DILocation(line: 4998, column: 17, scope: !9008)
!9012 = !DILocation(line: 5000, column: 5, scope: !1372)
!9013 = !DILocation(line: 5000, column: 5, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !1372, file: !450, discriminator: 1)
!9015 = !DILocation(line: 5001, column: 30, scope: !1359)
!9016 = !DILocation(line: 5001, column: 12, scope: !1359)
!9017 = !DILocation(line: 5001, column: 40, scope: !1359)
!9018 = !DILocation(line: 5001, column: 11, scope: !1359)
!9019 = !DILocation(line: 5001, column: 48, scope: !1359)
!9020 = !DILocation(line: 5001, column: 75, scope: !1359)
!9021 = !DILocation(line: 5001, column: 57, scope: !1359)
!9022 = !DILocation(line: 5001, column: 85, scope: !1359)
!9023 = !DILocation(line: 5001, column: 56, scope: !1359)
!9024 = !DILocation(line: 5001, column: 54, scope: !1359)
!9025 = !DILocation(line: 5001, column: 7, scope: !1359)
!9026 = !DILocation(line: 5002, column: 29, scope: !1359)
!9027 = !DILocation(line: 5002, column: 11, scope: !1359)
!9028 = !DILocation(line: 5002, column: 39, scope: !1359)
!9029 = !DILocation(line: 5002, column: 10, scope: !1359)
!9030 = !DILocation(line: 5002, column: 9, scope: !1359)
!9031 = !DILocation(line: 5002, column: 7, scope: !1359)
!9032 = !DILocation(line: 5003, column: 29, scope: !1359)
!9033 = !DILocation(line: 5003, column: 11, scope: !1359)
!9034 = !DILocation(line: 5003, column: 39, scope: !1359)
!9035 = !DILocation(line: 5003, column: 10, scope: !1359)
!9036 = !DILocation(line: 5003, column: 9, scope: !1359)
!9037 = !DILocation(line: 5003, column: 7, scope: !1359)
!9038 = !DILocation(line: 5004, column: 34, scope: !1359)
!9039 = !DILocation(line: 5004, column: 44, scope: !1359)
!9040 = !DILocation(line: 5004, column: 11, scope: !1359)
!9041 = !DILocation(line: 5004, column: 10, scope: !1359)
!9042 = !DILocation(line: 5004, column: 8, scope: !1359)
!9043 = !DILocation(line: 5005, column: 34, scope: !1359)
!9044 = !DILocation(line: 5005, column: 44, scope: !1359)
!9045 = !DILocation(line: 5005, column: 11, scope: !1359)
!9046 = !DILocation(line: 5005, column: 10, scope: !1359)
!9047 = !DILocation(line: 5005, column: 8, scope: !1359)
!9048 = !DILocation(line: 5006, column: 34, scope: !1359)
!9049 = !DILocation(line: 5006, column: 44, scope: !1359)
!9050 = !DILocation(line: 5006, column: 11, scope: !1359)
!9051 = !DILocation(line: 5006, column: 10, scope: !1359)
!9052 = !DILocation(line: 5006, column: 8, scope: !1359)
!9053 = !DILocation(line: 5008, column: 5, scope: !1359)
!9054 = !DILocation(line: 5008, column: 10, scope: !9055)
!9055 = !DILexicalBlockFile(scope: !1381, file: !450, discriminator: 1)
!9056 = !DILocation(line: 5008, column: 20, scope: !1381)
!9057 = !DILocation(line: 5008, column: 50, scope: !1381)
!9058 = !DILocation(line: 5008, column: 37, scope: !1381)
!9059 = !DILocation(line: 5008, column: 68, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !1381, file: !450, line: 5008, column: 65)
!9061 = !DILocation(line: 5008, column: 85, scope: !9060)
!9062 = !DILocation(line: 5008, column: 65, scope: !9060)
!9063 = !DILocation(line: 5008, column: 95, scope: !9060)
!9064 = !DILocation(line: 5008, column: 65, scope: !1381)
!9065 = !DILocation(line: 5008, column: 65, scope: !9066)
!9066 = !DILexicalBlockFile(scope: !1381, file: !450, discriminator: 2)
!9067 = !DILocation(line: 5008, column: 126, scope: !9068)
!9068 = !DILexicalBlockFile(scope: !9060, file: !450, discriminator: 3)
!9069 = !DILocation(line: 5008, column: 144, scope: !9060)
!9070 = !DILocation(line: 5008, column: 154, scope: !9060)
!9071 = !DILocation(line: 5008, column: 179, scope: !9060)
!9072 = !DILocation(line: 5008, column: 110, scope: !9060)
!9073 = !DILocation(line: 5008, column: 198, scope: !9074)
!9074 = !DILexicalBlockFile(scope: !1359, file: !450, discriminator: 4)
!9075 = !DILocation(line: 5008, column: 198, scope: !1381)
!9076 = !DILocation(line: 5008, column: 198, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !1381, file: !450, discriminator: 5)
!9078 = !DILocation(line: 5009, column: 30, scope: !1359)
!9079 = !DILocation(line: 5009, column: 33, scope: !1359)
!9080 = !DILocation(line: 5009, column: 36, scope: !1359)
!9081 = !DILocation(line: 5009, column: 39, scope: !1359)
!9082 = !DILocation(line: 5009, column: 43, scope: !1359)
!9083 = !DILocation(line: 5009, column: 47, scope: !1359)
!9084 = !DILocation(line: 5009, column: 12, scope: !1359)
!9085 = !DILocation(line: 5009, column: 5, scope: !1359)
!9086 = !DILocation(line: 5010, column: 1, scope: !1359)
!9087 = !DILocation(line: 4540, column: 41, scope: !1382)
!9088 = !DILocation(line: 4540, column: 57, scope: !1382)
!9089 = !DILocation(line: 4540, column: 73, scope: !1382)
!9090 = !DILocation(line: 4542, column: 5, scope: !1382)
!9091 = !DILocation(line: 4542, column: 9, scope: !1382)
!9092 = !DILocation(line: 4544, column: 5, scope: !1382)
!9093 = !DILocation(line: 4544, column: 10, scope: !1382)
!9094 = !DILocation(line: 4545, column: 5, scope: !1382)
!9095 = !DILocation(line: 4545, column: 15, scope: !1382)
!9096 = !DILocation(line: 4546, column: 5, scope: !1382)
!9097 = !DILocation(line: 4546, column: 9, scope: !1382)
!9098 = !DILocation(line: 4546, column: 39, scope: !1382)
!9099 = !DILocation(line: 4546, column: 46, scope: !1382)
!9100 = !DILocation(line: 4546, column: 16, scope: !1382)
!9101 = !DILocation(line: 4546, column: 54, scope: !1382)
!9102 = !DILocation(line: 4546, column: 87, scope: !1382)
!9103 = !DILocation(line: 4546, column: 94, scope: !1382)
!9104 = !DILocation(line: 4546, column: 64, scope: !1382)
!9105 = !DILocation(line: 4546, column: 102, scope: !1382)
!9106 = !DILocation(line: 4546, column: 61, scope: !1382)
!9107 = !DILocation(line: 4546, column: 133, scope: !1382)
!9108 = !DILocation(line: 4546, column: 140, scope: !1382)
!9109 = !DILocation(line: 4546, column: 110, scope: !1382)
!9110 = !DILocation(line: 4546, column: 108, scope: !1382)
!9111 = !DILocation(line: 4548, column: 38, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !1382, file: !450, line: 4548, column: 9)
!9113 = !DILocation(line: 4548, column: 44, scope: !9112)
!9114 = !DILocation(line: 4548, column: 10, scope: !9112)
!9115 = !DILocation(line: 4548, column: 9, scope: !1382)
!9116 = !DILocation(line: 4549, column: 9, scope: !9112)
!9117 = !DILocation(line: 4550, column: 9, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !1382, file: !450, line: 4550, column: 9)
!9119 = !DILocation(line: 4550, column: 9, scope: !1382)
!9120 = !DILocation(line: 4552, column: 60, scope: !9118)
!9121 = !DILocation(line: 4552, column: 42, scope: !9118)
!9122 = !DILocation(line: 4552, column: 67, scope: !9118)
!9123 = !DILocation(line: 4552, column: 41, scope: !9118)
!9124 = !DILocation(line: 4552, column: 75, scope: !9118)
!9125 = !DILocation(line: 4552, column: 102, scope: !9118)
!9126 = !DILocation(line: 4552, column: 84, scope: !9118)
!9127 = !DILocation(line: 4552, column: 109, scope: !9118)
!9128 = !DILocation(line: 4552, column: 83, scope: !9118)
!9129 = !DILocation(line: 4552, column: 81, scope: !9118)
!9130 = !DILocation(line: 4552, column: 139, scope: !9118)
!9131 = !DILocation(line: 4552, column: 121, scope: !9118)
!9132 = !DILocation(line: 4552, column: 146, scope: !9118)
!9133 = !DILocation(line: 4552, column: 120, scope: !9118)
!9134 = !DILocation(line: 4552, column: 119, scope: !9118)
!9135 = !DILocation(line: 4553, column: 59, scope: !9118)
!9136 = !DILocation(line: 4553, column: 41, scope: !9118)
!9137 = !DILocation(line: 4553, column: 66, scope: !9118)
!9138 = !DILocation(line: 4553, column: 40, scope: !9118)
!9139 = !DILocation(line: 4553, column: 39, scope: !9118)
!9140 = !DILocation(line: 4553, column: 81, scope: !9118)
!9141 = !DILocation(line: 4554, column: 63, scope: !9118)
!9142 = !DILocation(line: 4554, column: 70, scope: !9118)
!9143 = !DILocation(line: 4554, column: 40, scope: !9118)
!9144 = !DILocation(line: 4554, column: 39, scope: !9118)
!9145 = !DILocation(line: 4554, column: 104, scope: !9118)
!9146 = !DILocation(line: 4554, column: 111, scope: !9118)
!9147 = !DILocation(line: 4554, column: 81, scope: !9118)
!9148 = !DILocation(line: 4554, column: 80, scope: !9118)
!9149 = !DILocation(line: 4555, column: 63, scope: !9118)
!9150 = !DILocation(line: 4555, column: 70, scope: !9118)
!9151 = !DILocation(line: 4555, column: 40, scope: !9118)
!9152 = !DILocation(line: 4555, column: 39, scope: !9118)
!9153 = !DILocation(line: 4555, column: 80, scope: !9118)
!9154 = !DILocation(line: 4551, column: 18, scope: !9118)
!9155 = !DILocation(line: 4551, column: 16, scope: !9118)
!9156 = !DILocation(line: 4551, column: 9, scope: !9118)
!9157 = !DILocation(line: 4558, column: 60, scope: !9118)
!9158 = !DILocation(line: 4558, column: 42, scope: !9118)
!9159 = !DILocation(line: 4558, column: 67, scope: !9118)
!9160 = !DILocation(line: 4558, column: 41, scope: !9118)
!9161 = !DILocation(line: 4558, column: 75, scope: !9118)
!9162 = !DILocation(line: 4558, column: 102, scope: !9118)
!9163 = !DILocation(line: 4558, column: 84, scope: !9118)
!9164 = !DILocation(line: 4558, column: 109, scope: !9118)
!9165 = !DILocation(line: 4558, column: 83, scope: !9118)
!9166 = !DILocation(line: 4558, column: 81, scope: !9118)
!9167 = !DILocation(line: 4558, column: 139, scope: !9118)
!9168 = !DILocation(line: 4558, column: 121, scope: !9118)
!9169 = !DILocation(line: 4558, column: 146, scope: !9118)
!9170 = !DILocation(line: 4558, column: 120, scope: !9118)
!9171 = !DILocation(line: 4558, column: 119, scope: !9118)
!9172 = !DILocation(line: 4559, column: 59, scope: !9118)
!9173 = !DILocation(line: 4559, column: 41, scope: !9118)
!9174 = !DILocation(line: 4559, column: 66, scope: !9118)
!9175 = !DILocation(line: 4559, column: 40, scope: !9118)
!9176 = !DILocation(line: 4559, column: 39, scope: !9118)
!9177 = !DILocation(line: 4559, column: 81, scope: !9118)
!9178 = !DILocation(line: 4560, column: 63, scope: !9118)
!9179 = !DILocation(line: 4560, column: 70, scope: !9118)
!9180 = !DILocation(line: 4560, column: 40, scope: !9118)
!9181 = !DILocation(line: 4560, column: 39, scope: !9118)
!9182 = !DILocation(line: 4560, column: 104, scope: !9118)
!9183 = !DILocation(line: 4560, column: 111, scope: !9118)
!9184 = !DILocation(line: 4560, column: 81, scope: !9118)
!9185 = !DILocation(line: 4560, column: 80, scope: !9118)
!9186 = !DILocation(line: 4561, column: 63, scope: !9118)
!9187 = !DILocation(line: 4561, column: 70, scope: !9118)
!9188 = !DILocation(line: 4561, column: 40, scope: !9118)
!9189 = !DILocation(line: 4561, column: 39, scope: !9118)
!9190 = !DILocation(line: 4557, column: 18, scope: !9118)
!9191 = !DILocation(line: 4557, column: 16, scope: !9118)
!9192 = !DILocation(line: 4563, column: 10, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !1382, file: !450, line: 4563, column: 9)
!9194 = !DILocation(line: 4563, column: 17, scope: !9193)
!9195 = !DILocation(line: 4563, column: 50, scope: !9196)
!9196 = !DILexicalBlockFile(scope: !9193, file: !450, discriminator: 1)
!9197 = !DILocation(line: 4563, column: 23, scope: !9193)
!9198 = !DILocation(line: 4563, column: 58, scope: !9193)
!9199 = !DILocation(line: 4563, column: 21, scope: !9193)
!9200 = !DILocation(line: 4563, column: 9, scope: !1382)
!9201 = !DILocation(line: 4564, column: 16, scope: !9193)
!9202 = !DILocation(line: 4564, column: 9, scope: !9193)
!9203 = !DILocation(line: 4567, column: 26, scope: !1396)
!9204 = !DILocation(line: 4567, column: 55, scope: !1396)
!9205 = !DILocation(line: 4567, column: 61, scope: !1396)
!9206 = !DILocation(line: 4568, column: 38, scope: !1396)
!9207 = !DILocation(line: 4568, column: 26, scope: !1396)
!9208 = !DILocation(line: 4567, column: 9, scope: !1396)
!9209 = !DILocation(line: 4568, column: 44, scope: !1396)
!9210 = !DILocation(line: 4567, column: 9, scope: !1382)
!9211 = !DILocation(line: 4569, column: 9, scope: !1395)
!9212 = !DILocation(line: 4569, column: 14, scope: !9213)
!9213 = !DILexicalBlockFile(scope: !1394, file: !450, discriminator: 1)
!9214 = !DILocation(line: 4569, column: 24, scope: !1394)
!9215 = !DILocation(line: 4569, column: 54, scope: !1394)
!9216 = !DILocation(line: 4569, column: 71, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !1394, file: !450, line: 4569, column: 68)
!9218 = !DILocation(line: 4569, column: 88, scope: !9217)
!9219 = !DILocation(line: 4569, column: 68, scope: !9217)
!9220 = !DILocation(line: 4569, column: 98, scope: !9217)
!9221 = !DILocation(line: 4569, column: 68, scope: !1394)
!9222 = !DILocation(line: 4569, column: 68, scope: !9223)
!9223 = !DILexicalBlockFile(scope: !1394, file: !450, discriminator: 2)
!9224 = !DILocation(line: 4569, column: 129, scope: !9225)
!9225 = !DILexicalBlockFile(scope: !9217, file: !450, discriminator: 3)
!9226 = !DILocation(line: 4569, column: 147, scope: !9217)
!9227 = !DILocation(line: 4569, column: 157, scope: !9217)
!9228 = !DILocation(line: 4569, column: 182, scope: !9217)
!9229 = !DILocation(line: 4569, column: 113, scope: !9217)
!9230 = !DILocation(line: 4569, column: 201, scope: !9231)
!9231 = !DILexicalBlockFile(scope: !1395, file: !450, discriminator: 4)
!9232 = !DILocation(line: 4569, column: 201, scope: !1394)
!9233 = !DILocation(line: 4569, column: 201, scope: !9234)
!9234 = !DILexicalBlockFile(scope: !1394, file: !450, discriminator: 5)
!9235 = !DILocation(line: 4570, column: 9, scope: !1395)
!9236 = !DILocation(line: 4572, column: 58, scope: !1382)
!9237 = !DILocation(line: 4572, column: 37, scope: !1382)
!9238 = !DILocation(line: 4572, column: 5, scope: !1382)
!9239 = !DILocation(line: 4573, column: 12, scope: !1382)
!9240 = !DILocation(line: 4573, column: 5, scope: !1382)
!9241 = !DILocation(line: 4574, column: 1, scope: !1382)
!9242 = !DILocation(line: 4349, column: 27, scope: !1397)
!9243 = !DILocation(line: 4349, column: 43, scope: !1397)
!9244 = !DILocation(line: 4350, column: 54, scope: !1397)
!9245 = !DILocation(line: 4350, column: 27, scope: !1397)
!9246 = !DILocation(line: 4350, column: 62, scope: !1397)
!9247 = !DILocation(line: 4350, column: 25, scope: !1397)
!9248 = !DILocation(line: 4350, column: 100, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !1397, file: !450, discriminator: 1)
!9250 = !DILocation(line: 4350, column: 76, scope: !1397)
!9251 = !DILocation(line: 4350, column: 108, scope: !1397)
!9252 = !DILocation(line: 4350, column: 25, scope: !9253)
!9253 = !DILexicalBlockFile(scope: !1397, file: !450, discriminator: 2)
!9254 = !DILocation(line: 4350, column: 137, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !9256, file: !450, discriminator: 4)
!9256 = !DILexicalBlockFile(scope: !1397, file: !450, discriminator: 3)
!9257 = !DILocation(line: 4350, column: 12, scope: !1397)
!9258 = !DILocation(line: 4350, column: 5, scope: !1397)
!9259 = !DILocation(line: 4344, column: 24, scope: !1401)
!9260 = !DILocation(line: 4344, column: 40, scope: !1401)
!9261 = !DILocation(line: 4345, column: 51, scope: !1401)
!9262 = !DILocation(line: 4345, column: 24, scope: !1401)
!9263 = !DILocation(line: 4345, column: 59, scope: !1401)
!9264 = !DILocation(line: 4345, column: 22, scope: !1401)
!9265 = !DILocation(line: 4345, column: 97, scope: !9266)
!9266 = !DILexicalBlockFile(scope: !1401, file: !450, discriminator: 1)
!9267 = !DILocation(line: 4345, column: 73, scope: !1401)
!9268 = !DILocation(line: 4345, column: 105, scope: !1401)
!9269 = !DILocation(line: 4345, column: 22, scope: !9270)
!9270 = !DILexicalBlockFile(scope: !1401, file: !450, discriminator: 2)
!9271 = !DILocation(line: 4345, column: 134, scope: !9272)
!9272 = !DILexicalBlockFile(scope: !9273, file: !450, discriminator: 4)
!9273 = !DILexicalBlockFile(scope: !1401, file: !450, discriminator: 3)
!9274 = !DILocation(line: 4345, column: 12, scope: !1401)
!9275 = !DILocation(line: 4345, column: 5, scope: !1401)
!9276 = !DILocation(line: 4718, column: 39, scope: !1405)
!9277 = !DILocation(line: 4718, column: 55, scope: !1405)
!9278 = !DILocation(line: 4718, column: 71, scope: !1405)
!9279 = !DILocation(line: 4720, column: 5, scope: !1405)
!9280 = !DILocation(line: 4720, column: 15, scope: !1405)
!9281 = !DILocation(line: 4721, column: 5, scope: !1405)
!9282 = !DILocation(line: 4721, column: 15, scope: !1405)
!9283 = !DILocation(line: 4722, column: 5, scope: !1405)
!9284 = !DILocation(line: 4722, column: 9, scope: !1405)
!9285 = !DILocation(line: 4722, column: 34, scope: !1405)
!9286 = !DILocation(line: 4722, column: 16, scope: !1405)
!9287 = !DILocation(line: 4722, column: 41, scope: !1405)
!9288 = !DILocation(line: 4722, column: 15, scope: !1405)
!9289 = !DILocation(line: 4722, column: 49, scope: !1405)
!9290 = !DILocation(line: 4722, column: 76, scope: !1405)
!9291 = !DILocation(line: 4722, column: 58, scope: !1405)
!9292 = !DILocation(line: 4722, column: 83, scope: !1405)
!9293 = !DILocation(line: 4722, column: 57, scope: !1405)
!9294 = !DILocation(line: 4722, column: 55, scope: !1405)
!9295 = !DILocation(line: 4723, column: 5, scope: !1405)
!9296 = !DILocation(line: 4723, column: 9, scope: !1405)
!9297 = !DILocation(line: 4723, column: 33, scope: !1405)
!9298 = !DILocation(line: 4723, column: 15, scope: !1405)
!9299 = !DILocation(line: 4723, column: 40, scope: !1405)
!9300 = !DILocation(line: 4723, column: 14, scope: !1405)
!9301 = !DILocation(line: 4723, column: 13, scope: !1405)
!9302 = !DILocation(line: 4724, column: 5, scope: !1405)
!9303 = !DILocation(line: 4724, column: 9, scope: !1405)
!9304 = !DILocation(line: 4724, column: 33, scope: !1405)
!9305 = !DILocation(line: 4724, column: 15, scope: !1405)
!9306 = !DILocation(line: 4724, column: 40, scope: !1405)
!9307 = !DILocation(line: 4724, column: 14, scope: !1405)
!9308 = !DILocation(line: 4724, column: 13, scope: !1405)
!9309 = !DILocation(line: 4725, column: 5, scope: !1405)
!9310 = !DILocation(line: 4725, column: 9, scope: !1405)
!9311 = !DILocation(line: 4725, column: 38, scope: !1405)
!9312 = !DILocation(line: 4725, column: 45, scope: !1405)
!9313 = !DILocation(line: 4725, column: 15, scope: !1405)
!9314 = !DILocation(line: 4725, column: 14, scope: !1405)
!9315 = !DILocation(line: 4726, column: 5, scope: !1405)
!9316 = !DILocation(line: 4726, column: 9, scope: !1405)
!9317 = !DILocation(line: 4726, column: 38, scope: !1405)
!9318 = !DILocation(line: 4726, column: 45, scope: !1405)
!9319 = !DILocation(line: 4726, column: 15, scope: !1405)
!9320 = !DILocation(line: 4726, column: 14, scope: !1405)
!9321 = !DILocation(line: 4727, column: 5, scope: !1405)
!9322 = !DILocation(line: 4727, column: 9, scope: !1405)
!9323 = !DILocation(line: 4727, column: 38, scope: !1405)
!9324 = !DILocation(line: 4727, column: 45, scope: !1405)
!9325 = !DILocation(line: 4727, column: 15, scope: !1405)
!9326 = !DILocation(line: 4727, column: 14, scope: !1405)
!9327 = !DILocation(line: 4728, column: 5, scope: !1405)
!9328 = !DILocation(line: 4728, column: 9, scope: !1405)
!9329 = !DILocation(line: 4728, column: 39, scope: !1405)
!9330 = !DILocation(line: 4728, column: 46, scope: !1405)
!9331 = !DILocation(line: 4728, column: 16, scope: !1405)
!9332 = !DILocation(line: 4728, column: 54, scope: !1405)
!9333 = !DILocation(line: 4728, column: 87, scope: !1405)
!9334 = !DILocation(line: 4728, column: 94, scope: !1405)
!9335 = !DILocation(line: 4728, column: 64, scope: !1405)
!9336 = !DILocation(line: 4728, column: 102, scope: !1405)
!9337 = !DILocation(line: 4728, column: 61, scope: !1405)
!9338 = !DILocation(line: 4728, column: 133, scope: !1405)
!9339 = !DILocation(line: 4728, column: 140, scope: !1405)
!9340 = !DILocation(line: 4728, column: 110, scope: !1405)
!9341 = !DILocation(line: 4728, column: 108, scope: !1405)
!9342 = !DILocation(line: 4729, column: 5, scope: !1405)
!9343 = !DILocation(line: 4729, column: 15, scope: !1405)
!9344 = !DILocation(line: 4729, column: 53, scope: !1405)
!9345 = !DILocation(line: 4729, column: 26, scope: !1405)
!9346 = !DILocation(line: 4729, column: 61, scope: !1405)
!9347 = !DILocation(line: 4729, column: 24, scope: !1405)
!9348 = !DILocation(line: 4729, column: 74, scope: !9349)
!9349 = !DILexicalBlockFile(scope: !1405, file: !450, discriminator: 1)
!9350 = !DILocation(line: 4729, column: 80, scope: !1405)
!9351 = !DILocation(line: 4729, column: 24, scope: !9352)
!9352 = !DILexicalBlockFile(scope: !1405, file: !450, discriminator: 2)
!9353 = !DILocation(line: 4729, column: 15, scope: !9354)
!9354 = !DILexicalBlockFile(scope: !9355, file: !450, discriminator: 4)
!9355 = !DILexicalBlockFile(scope: !1405, file: !450, discriminator: 3)
!9356 = !DILocation(line: 4731, column: 39, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !1405, file: !450, line: 4731, column: 9)
!9358 = !DILocation(line: 4731, column: 45, scope: !9357)
!9359 = !DILocation(line: 4731, column: 11, scope: !9357)
!9360 = !DILocation(line: 4731, column: 9, scope: !1405)
!9361 = !DILocation(line: 4735, column: 9, scope: !9357)
!9362 = !DILocation(line: 4736, column: 39, scope: !1405)
!9363 = !DILocation(line: 4736, column: 42, scope: !1405)
!9364 = !DILocation(line: 4736, column: 45, scope: !1405)
!9365 = !DILocation(line: 4736, column: 48, scope: !1405)
!9366 = !DILocation(line: 4736, column: 52, scope: !1405)
!9367 = !DILocation(line: 4736, column: 56, scope: !1405)
!9368 = !DILocation(line: 4736, column: 60, scope: !1405)
!9369 = !DILocation(line: 4736, column: 64, scope: !1405)
!9370 = !DILocation(line: 4736, column: 13, scope: !1405)
!9371 = !DILocation(line: 4736, column: 11, scope: !1405)
!9372 = !DILocation(line: 4737, column: 9, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !1405, file: !450, line: 4737, column: 9)
!9374 = !DILocation(line: 4737, column: 15, scope: !9373)
!9375 = !DILocation(line: 4737, column: 9, scope: !1405)
!9376 = !DILocation(line: 4738, column: 9, scope: !9373)
!9377 = !DILocation(line: 4739, column: 40, scope: !1405)
!9378 = !DILocation(line: 4739, column: 28, scope: !1405)
!9379 = !DILocation(line: 4739, column: 48, scope: !1405)
!9380 = !DILocation(line: 4739, column: 58, scope: !1405)
!9381 = !DILocation(line: 4739, column: 13, scope: !1405)
!9382 = !DILocation(line: 4739, column: 11, scope: !1405)
!9383 = !DILocation(line: 4740, column: 5, scope: !1405)
!9384 = !DILocation(line: 4740, column: 10, scope: !9385)
!9385 = !DILexicalBlockFile(scope: !1421, file: !450, discriminator: 1)
!9386 = !DILocation(line: 4740, column: 20, scope: !1421)
!9387 = !DILocation(line: 4740, column: 50, scope: !1421)
!9388 = !DILocation(line: 4740, column: 66, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !1421, file: !450, line: 4740, column: 63)
!9390 = !DILocation(line: 4740, column: 83, scope: !9389)
!9391 = !DILocation(line: 4740, column: 63, scope: !9389)
!9392 = !DILocation(line: 4740, column: 93, scope: !9389)
!9393 = !DILocation(line: 4740, column: 63, scope: !1421)
!9394 = !DILocation(line: 4740, column: 63, scope: !9395)
!9395 = !DILexicalBlockFile(scope: !1421, file: !450, discriminator: 2)
!9396 = !DILocation(line: 4740, column: 124, scope: !9397)
!9397 = !DILexicalBlockFile(scope: !9389, file: !450, discriminator: 3)
!9398 = !DILocation(line: 4740, column: 142, scope: !9389)
!9399 = !DILocation(line: 4740, column: 152, scope: !9389)
!9400 = !DILocation(line: 4740, column: 177, scope: !9389)
!9401 = !DILocation(line: 4740, column: 108, scope: !9389)
!9402 = !DILocation(line: 4740, column: 196, scope: !9403)
!9403 = !DILexicalBlockFile(scope: !1405, file: !450, discriminator: 4)
!9404 = !DILocation(line: 4740, column: 196, scope: !1421)
!9405 = !DILocation(line: 4740, column: 196, scope: !9406)
!9406 = !DILexicalBlockFile(scope: !1421, file: !450, discriminator: 5)
!9407 = !DILocation(line: 4741, column: 12, scope: !1405)
!9408 = !DILocation(line: 4741, column: 5, scope: !1405)
!9409 = !DILocation(line: 4742, column: 1, scope: !1405)
!9410 = !DILocation(line: 4808, column: 42, scope: !1422)
!9411 = !DILocation(line: 4808, column: 58, scope: !1422)
!9412 = !DILocation(line: 4808, column: 74, scope: !1422)
!9413 = !DILocation(line: 4810, column: 5, scope: !1422)
!9414 = !DILocation(line: 4810, column: 26, scope: !1422)
!9415 = !DILocation(line: 4811, column: 5, scope: !1422)
!9416 = !DILocation(line: 4811, column: 15, scope: !1422)
!9417 = !DILocation(line: 4812, column: 5, scope: !1422)
!9418 = !DILocation(line: 4812, column: 15, scope: !1422)
!9419 = !DILocation(line: 4813, column: 5, scope: !1422)
!9420 = !DILocation(line: 4813, column: 15, scope: !1422)
!9421 = !DILocation(line: 4816, column: 39, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4816, column: 9)
!9423 = !DILocation(line: 4816, column: 45, scope: !9422)
!9424 = !DILocation(line: 4816, column: 11, scope: !9422)
!9425 = !DILocation(line: 4816, column: 9, scope: !1422)
!9426 = !DILocation(line: 4818, column: 9, scope: !9422)
!9427 = !DILocation(line: 4820, column: 31, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4820, column: 9)
!9429 = !DILocation(line: 4820, column: 9, scope: !9428)
!9430 = !DILocation(line: 4820, column: 39, scope: !9428)
!9431 = !DILocation(line: 4820, column: 9, scope: !1422)
!9432 = !DILocation(line: 4821, column: 9, scope: !9428)
!9433 = !DILocation(line: 4823, column: 39, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4823, column: 9)
!9435 = !DILocation(line: 4823, column: 12, scope: !9434)
!9436 = !DILocation(line: 4823, column: 47, scope: !9434)
!9437 = !DILocation(line: 4823, column: 10, scope: !9434)
!9438 = !DILocation(line: 4823, column: 58, scope: !9434)
!9439 = !DILocation(line: 4823, column: 61, scope: !9440)
!9440 = !DILexicalBlockFile(scope: !9434, file: !450, discriminator: 1)
!9441 = !DILocation(line: 4823, column: 67, scope: !9434)
!9442 = !DILocation(line: 4823, column: 74, scope: !9434)
!9443 = !DILocation(line: 4823, column: 9, scope: !1422)
!9444 = !DILocation(line: 4824, column: 9, scope: !9434)
!9445 = !DILocation(line: 4827, column: 9, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4827, column: 9)
!9447 = !DILocation(line: 4827, column: 15, scope: !9446)
!9448 = !DILocation(line: 4827, column: 25, scope: !9446)
!9449 = !DILocation(line: 4827, column: 22, scope: !9446)
!9450 = !DILocation(line: 4827, column: 9, scope: !1422)
!9451 = !DILocation(line: 4828, column: 25, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9446, file: !450, line: 4827, column: 33)
!9453 = !DILocation(line: 4828, column: 12, scope: !9452)
!9454 = !DILocation(line: 4828, column: 33, scope: !9452)
!9455 = !DILocation(line: 4828, column: 42, scope: !9452)
!9456 = !DILocation(line: 4829, column: 16, scope: !9452)
!9457 = !DILocation(line: 4829, column: 9, scope: !9452)
!9458 = !DILocation(line: 4833, column: 45, scope: !1422)
!9459 = !DILocation(line: 4833, column: 33, scope: !1422)
!9460 = !DILocation(line: 4833, column: 14, scope: !1422)
!9461 = !DILocation(line: 4833, column: 12, scope: !1422)
!9462 = !DILocation(line: 4834, column: 9, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4834, column: 9)
!9464 = !DILocation(line: 4834, column: 16, scope: !9463)
!9465 = !DILocation(line: 4834, column: 9, scope: !1422)
!9466 = !DILocation(line: 4835, column: 9, scope: !9463)
!9467 = !DILocation(line: 4836, column: 9, scope: !1436)
!9468 = !DILocation(line: 4836, column: 16, scope: !1436)
!9469 = !DILocation(line: 4836, column: 9, scope: !1422)
!9470 = !DILocation(line: 4837, column: 9, scope: !1435)
!9471 = !DILocation(line: 4837, column: 14, scope: !9472)
!9472 = !DILexicalBlockFile(scope: !1434, file: !450, discriminator: 1)
!9473 = !DILocation(line: 4837, column: 24, scope: !1434)
!9474 = !DILocation(line: 4837, column: 54, scope: !1434)
!9475 = !DILocation(line: 4837, column: 71, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !1434, file: !450, line: 4837, column: 68)
!9477 = !DILocation(line: 4837, column: 88, scope: !9476)
!9478 = !DILocation(line: 4837, column: 68, scope: !9476)
!9479 = !DILocation(line: 4837, column: 98, scope: !9476)
!9480 = !DILocation(line: 4837, column: 68, scope: !1434)
!9481 = !DILocation(line: 4837, column: 68, scope: !9482)
!9482 = !DILexicalBlockFile(scope: !1434, file: !450, discriminator: 2)
!9483 = !DILocation(line: 4837, column: 129, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !9476, file: !450, discriminator: 3)
!9485 = !DILocation(line: 4837, column: 147, scope: !9476)
!9486 = !DILocation(line: 4837, column: 157, scope: !9476)
!9487 = !DILocation(line: 4837, column: 182, scope: !9476)
!9488 = !DILocation(line: 4837, column: 113, scope: !9476)
!9489 = !DILocation(line: 4837, column: 201, scope: !9490)
!9490 = !DILexicalBlockFile(scope: !1435, file: !450, discriminator: 4)
!9491 = !DILocation(line: 4837, column: 201, scope: !1434)
!9492 = !DILocation(line: 4837, column: 201, scope: !9493)
!9493 = !DILexicalBlockFile(scope: !1434, file: !450, discriminator: 5)
!9494 = !DILocation(line: 4837, column: 201, scope: !9495)
!9495 = !DILexicalBlockFile(scope: !1434, file: !450, discriminator: 6)
!9496 = !DILocation(line: 4839, column: 25, scope: !1435)
!9497 = !DILocation(line: 4839, column: 9, scope: !1435)
!9498 = !DILocation(line: 4841, column: 9, scope: !1435)
!9499 = !DILocation(line: 4845, column: 60, scope: !1422)
!9500 = !DILocation(line: 4846, column: 60, scope: !1422)
!9501 = !DILocation(line: 4846, column: 40, scope: !1422)
!9502 = !DILocation(line: 4845, column: 37, scope: !1422)
!9503 = !DILocation(line: 4845, column: 14, scope: !1422)
!9504 = !DILocation(line: 4845, column: 12, scope: !1422)
!9505 = !DILocation(line: 4847, column: 5, scope: !1422)
!9506 = !DILocation(line: 4847, column: 10, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !1438, file: !450, discriminator: 1)
!9508 = !DILocation(line: 4847, column: 20, scope: !1438)
!9509 = !DILocation(line: 4847, column: 50, scope: !1438)
!9510 = !DILocation(line: 4847, column: 67, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !1438, file: !450, line: 4847, column: 64)
!9512 = !DILocation(line: 4847, column: 84, scope: !9511)
!9513 = !DILocation(line: 4847, column: 64, scope: !9511)
!9514 = !DILocation(line: 4847, column: 94, scope: !9511)
!9515 = !DILocation(line: 4847, column: 64, scope: !1438)
!9516 = !DILocation(line: 4847, column: 64, scope: !9517)
!9517 = !DILexicalBlockFile(scope: !1438, file: !450, discriminator: 2)
!9518 = !DILocation(line: 4847, column: 125, scope: !9519)
!9519 = !DILexicalBlockFile(scope: !9511, file: !450, discriminator: 3)
!9520 = !DILocation(line: 4847, column: 143, scope: !9511)
!9521 = !DILocation(line: 4847, column: 153, scope: !9511)
!9522 = !DILocation(line: 4847, column: 178, scope: !9511)
!9523 = !DILocation(line: 4847, column: 109, scope: !9511)
!9524 = !DILocation(line: 4847, column: 197, scope: !9525)
!9525 = !DILexicalBlockFile(scope: !1422, file: !450, discriminator: 4)
!9526 = !DILocation(line: 4847, column: 197, scope: !1438)
!9527 = !DILocation(line: 4847, column: 197, scope: !9528)
!9528 = !DILexicalBlockFile(scope: !1438, file: !450, discriminator: 5)
!9529 = !DILocation(line: 4848, column: 9, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !1422, file: !450, line: 4848, column: 9)
!9531 = !DILocation(line: 4848, column: 16, scope: !9530)
!9532 = !DILocation(line: 4848, column: 9, scope: !1422)
!9533 = !DILocation(line: 4849, column: 9, scope: !9530)
!9534 = !DILocation(line: 4852, column: 12, scope: !1422)
!9535 = !DILocation(line: 4852, column: 20, scope: !1422)
!9536 = !DILocation(line: 4852, column: 10, scope: !1422)
!9537 = !DILocation(line: 4853, column: 9, scope: !1444)
!9538 = !DILocation(line: 4853, column: 16, scope: !1444)
!9539 = !DILocation(line: 4853, column: 9, scope: !1422)
!9540 = !DILocation(line: 4854, column: 33, scope: !1443)
!9541 = !DILocation(line: 4854, column: 18, scope: !1443)
!9542 = !DILocation(line: 4854, column: 16, scope: !1443)
!9543 = !DILocation(line: 4855, column: 13, scope: !1442)
!9544 = !DILocation(line: 4855, column: 20, scope: !1442)
!9545 = !DILocation(line: 4855, column: 13, scope: !1443)
!9546 = !DILocation(line: 4856, column: 13, scope: !1441)
!9547 = !DILocation(line: 4856, column: 18, scope: !9548)
!9548 = !DILexicalBlockFile(scope: !1440, file: !450, discriminator: 1)
!9549 = !DILocation(line: 4856, column: 28, scope: !1440)
!9550 = !DILocation(line: 4856, column: 58, scope: !1440)
!9551 = !DILocation(line: 4856, column: 45, scope: !1440)
!9552 = !DILocation(line: 4856, column: 75, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !1440, file: !450, line: 4856, column: 72)
!9554 = !DILocation(line: 4856, column: 92, scope: !9553)
!9555 = !DILocation(line: 4856, column: 72, scope: !9553)
!9556 = !DILocation(line: 4856, column: 102, scope: !9553)
!9557 = !DILocation(line: 4856, column: 72, scope: !1440)
!9558 = !DILocation(line: 4856, column: 72, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !1440, file: !450, discriminator: 2)
!9560 = !DILocation(line: 4856, column: 133, scope: !9561)
!9561 = !DILexicalBlockFile(scope: !9553, file: !450, discriminator: 3)
!9562 = !DILocation(line: 4856, column: 151, scope: !9553)
!9563 = !DILocation(line: 4856, column: 161, scope: !9553)
!9564 = !DILocation(line: 4856, column: 186, scope: !9553)
!9565 = !DILocation(line: 4856, column: 117, scope: !9553)
!9566 = !DILocation(line: 4856, column: 205, scope: !9567)
!9567 = !DILexicalBlockFile(scope: !1441, file: !450, discriminator: 4)
!9568 = !DILocation(line: 4856, column: 205, scope: !1440)
!9569 = !DILocation(line: 4856, column: 205, scope: !9570)
!9570 = !DILexicalBlockFile(scope: !1440, file: !450, discriminator: 5)
!9571 = !DILocation(line: 4857, column: 13, scope: !1441)
!9572 = !DILocation(line: 4859, column: 5, scope: !1443)
!9573 = !DILocation(line: 4861, column: 23, scope: !1444)
!9574 = !DILocation(line: 4861, column: 33, scope: !1444)
!9575 = !DILocation(line: 4861, column: 42, scope: !1444)
!9576 = !DILocation(line: 4862, column: 22, scope: !1422)
!9577 = !DILocation(line: 4862, column: 5, scope: !1422)
!9578 = !DILocation(line: 4862, column: 13, scope: !1422)
!9579 = !DILocation(line: 4862, column: 20, scope: !1422)
!9580 = !DILocation(line: 4863, column: 5, scope: !1422)
!9581 = !DILocation(line: 4863, column: 10, scope: !9582)
!9582 = !DILexicalBlockFile(scope: !1446, file: !450, discriminator: 1)
!9583 = !DILocation(line: 4863, column: 20, scope: !1446)
!9584 = !DILocation(line: 4863, column: 50, scope: !1446)
!9585 = !DILocation(line: 4863, column: 65, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !1446, file: !450, line: 4863, column: 62)
!9587 = !DILocation(line: 4863, column: 82, scope: !9586)
!9588 = !DILocation(line: 4863, column: 62, scope: !9586)
!9589 = !DILocation(line: 4863, column: 92, scope: !9586)
!9590 = !DILocation(line: 4863, column: 62, scope: !1446)
!9591 = !DILocation(line: 4863, column: 62, scope: !9592)
!9592 = !DILexicalBlockFile(scope: !1446, file: !450, discriminator: 2)
!9593 = !DILocation(line: 4863, column: 123, scope: !9594)
!9594 = !DILexicalBlockFile(scope: !9586, file: !450, discriminator: 3)
!9595 = !DILocation(line: 4863, column: 141, scope: !9586)
!9596 = !DILocation(line: 4863, column: 151, scope: !9586)
!9597 = !DILocation(line: 4863, column: 176, scope: !9586)
!9598 = !DILocation(line: 4863, column: 107, scope: !9586)
!9599 = !DILocation(line: 4863, column: 195, scope: !9525)
!9600 = !DILocation(line: 4863, column: 195, scope: !1446)
!9601 = !DILocation(line: 4863, column: 195, scope: !9602)
!9602 = !DILexicalBlockFile(scope: !1446, file: !450, discriminator: 5)
!9603 = !DILocation(line: 4865, column: 24, scope: !1422)
!9604 = !DILocation(line: 4865, column: 12, scope: !1422)
!9605 = !DILocation(line: 4865, column: 10, scope: !1422)
!9606 = !DILocation(line: 4867, column: 32, scope: !1422)
!9607 = !DILocation(line: 4867, column: 60, scope: !1422)
!9608 = !DILocation(line: 4867, column: 9, scope: !1422)
!9609 = !DILocation(line: 4866, column: 14, scope: !1422)
!9610 = !DILocation(line: 4866, column: 12, scope: !1422)
!9611 = !DILocation(line: 4868, column: 5, scope: !1422)
!9612 = !DILocation(line: 4868, column: 10, scope: !9613)
!9613 = !DILexicalBlockFile(scope: !1448, file: !450, discriminator: 1)
!9614 = !DILocation(line: 4868, column: 20, scope: !1448)
!9615 = !DILocation(line: 4868, column: 50, scope: !1448)
!9616 = !DILocation(line: 4868, column: 65, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !1448, file: !450, line: 4868, column: 62)
!9618 = !DILocation(line: 4868, column: 82, scope: !9617)
!9619 = !DILocation(line: 4868, column: 62, scope: !9617)
!9620 = !DILocation(line: 4868, column: 92, scope: !9617)
!9621 = !DILocation(line: 4868, column: 62, scope: !1448)
!9622 = !DILocation(line: 4868, column: 62, scope: !9623)
!9623 = !DILexicalBlockFile(scope: !1448, file: !450, discriminator: 2)
!9624 = !DILocation(line: 4868, column: 123, scope: !9625)
!9625 = !DILexicalBlockFile(scope: !9617, file: !450, discriminator: 3)
!9626 = !DILocation(line: 4868, column: 141, scope: !9617)
!9627 = !DILocation(line: 4868, column: 151, scope: !9617)
!9628 = !DILocation(line: 4868, column: 176, scope: !9617)
!9629 = !DILocation(line: 4868, column: 107, scope: !9617)
!9630 = !DILocation(line: 4868, column: 195, scope: !9525)
!9631 = !DILocation(line: 4868, column: 195, scope: !1448)
!9632 = !DILocation(line: 4868, column: 195, scope: !9633)
!9633 = !DILexicalBlockFile(scope: !1448, file: !450, discriminator: 5)
!9634 = !DILocation(line: 4870, column: 12, scope: !1422)
!9635 = !DILocation(line: 4870, column: 5, scope: !1422)
!9636 = !DILocation(line: 4871, column: 1, scope: !1422)
!9637 = !DILocation(line: 5038, column: 38, scope: !1494)
!9638 = !DILocation(line: 5038, column: 54, scope: !1494)
!9639 = !DILocation(line: 5040, column: 48, scope: !1494)
!9640 = !DILocation(line: 5040, column: 36, scope: !1494)
!9641 = !DILocation(line: 5040, column: 56, scope: !1494)
!9642 = !DILocation(line: 5040, column: 84, scope: !1494)
!9643 = !DILocation(line: 5040, column: 66, scope: !1494)
!9644 = !DILocation(line: 5040, column: 12, scope: !1494)
!9645 = !DILocation(line: 5040, column: 5, scope: !1494)
!9646 = !DILocation(line: 4196, column: 42, scope: !1184)
!9647 = !DILocation(line: 4196, column: 58, scope: !1184)
!9648 = !DILocation(line: 4199, column: 5, scope: !1184)
!9649 = !DILocation(line: 4199, column: 15, scope: !1184)
!9650 = !DILocation(line: 4204, column: 31, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !1184, file: !450, line: 4204, column: 9)
!9652 = !DILocation(line: 4204, column: 9, scope: !9651)
!9653 = !DILocation(line: 4204, column: 35, scope: !9651)
!9654 = !DILocation(line: 4204, column: 9, scope: !1184)
!9655 = !DILocation(line: 4205, column: 9, scope: !9651)
!9656 = !DILocation(line: 4207, column: 47, scope: !1184)
!9657 = !DILocation(line: 4207, column: 35, scope: !1184)
!9658 = !DILocation(line: 4208, column: 35, scope: !1184)
!9659 = !DILocation(line: 4208, column: 38, scope: !1184)
!9660 = !DILocation(line: 4209, column: 35, scope: !1184)
!9661 = !DILocation(line: 4207, column: 12, scope: !1184)
!9662 = !DILocation(line: 4207, column: 10, scope: !1184)
!9663 = !DILocation(line: 4210, column: 9, scope: !1193)
!9664 = !DILocation(line: 4210, column: 14, scope: !1193)
!9665 = !DILocation(line: 4210, column: 28, scope: !1193)
!9666 = !DILocation(line: 4210, column: 31, scope: !9667)
!9667 = !DILexicalBlockFile(scope: !1193, file: !450, discriminator: 1)
!9668 = !DILocation(line: 4210, column: 34, scope: !1193)
!9669 = !DILocation(line: 4210, column: 9, scope: !1184)
!9670 = !DILocation(line: 4212, column: 9, scope: !1192)
!9671 = !DILocation(line: 4212, column: 19, scope: !1192)
!9672 = !DILocation(line: 4212, column: 26, scope: !1192)
!9673 = !DILocation(line: 4214, column: 39, scope: !1192)
!9674 = !DILocation(line: 4214, column: 63, scope: !1192)
!9675 = !DILocation(line: 4214, column: 16, scope: !1192)
!9676 = !DILocation(line: 4214, column: 14, scope: !1192)
!9677 = !DILocation(line: 4215, column: 9, scope: !1192)
!9678 = !DILocation(line: 4215, column: 14, scope: !9679)
!9679 = !DILexicalBlockFile(scope: !1195, file: !450, discriminator: 1)
!9680 = !DILocation(line: 4215, column: 24, scope: !1195)
!9681 = !DILocation(line: 4215, column: 54, scope: !1195)
!9682 = !DILocation(line: 4215, column: 69, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !1195, file: !450, line: 4215, column: 66)
!9684 = !DILocation(line: 4215, column: 86, scope: !9683)
!9685 = !DILocation(line: 4215, column: 66, scope: !9683)
!9686 = !DILocation(line: 4215, column: 96, scope: !9683)
!9687 = !DILocation(line: 4215, column: 66, scope: !1195)
!9688 = !DILocation(line: 4215, column: 66, scope: !9689)
!9689 = !DILexicalBlockFile(scope: !1195, file: !450, discriminator: 2)
!9690 = !DILocation(line: 4215, column: 127, scope: !9691)
!9691 = !DILexicalBlockFile(scope: !9683, file: !450, discriminator: 3)
!9692 = !DILocation(line: 4215, column: 145, scope: !9683)
!9693 = !DILocation(line: 4215, column: 155, scope: !9683)
!9694 = !DILocation(line: 4215, column: 180, scope: !9683)
!9695 = !DILocation(line: 4215, column: 111, scope: !9683)
!9696 = !DILocation(line: 4215, column: 199, scope: !9697)
!9697 = !DILexicalBlockFile(scope: !1192, file: !450, discriminator: 4)
!9698 = !DILocation(line: 4215, column: 199, scope: !1195)
!9699 = !DILocation(line: 4215, column: 199, scope: !9700)
!9700 = !DILexicalBlockFile(scope: !1195, file: !450, discriminator: 5)
!9701 = !DILocation(line: 4216, column: 5, scope: !1193)
!9702 = !DILocation(line: 4216, column: 5, scope: !1192)
!9703 = !DILocation(line: 4217, column: 12, scope: !1184)
!9704 = !DILocation(line: 4217, column: 5, scope: !1184)
!9705 = !DILocation(line: 4218, column: 1, scope: !1184)
!9706 = !DILocation(line: 834, column: 33, scope: !1196)
!9707 = !DILocation(line: 836, column: 9, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !1196, file: !450, line: 836, column: 9)
!9709 = !DILocation(line: 836, column: 11, scope: !9708)
!9710 = !DILocation(line: 836, column: 32, scope: !9708)
!9711 = !DILocation(line: 836, column: 50, scope: !9712)
!9712 = !DILexicalBlockFile(scope: !9708, file: !450, discriminator: 1)
!9713 = !DILocation(line: 836, column: 55, scope: !9708)
!9714 = !DILocation(line: 836, column: 64, scope: !9708)
!9715 = !DILocation(line: 836, column: 92, scope: !9708)
!9716 = !DILocation(line: 836, column: 126, scope: !9717)
!9717 = !DILexicalBlockFile(scope: !9708, file: !450, discriminator: 2)
!9718 = !DILocation(line: 836, column: 131, scope: !9708)
!9719 = !DILocation(line: 836, column: 95, scope: !9708)
!9720 = !DILocation(line: 836, column: 9, scope: !1196)
!9721 = !DILocation(line: 837, column: 9, scope: !9708)
!9722 = !DILocation(line: 838, column: 18, scope: !1196)
!9723 = !DILocation(line: 841, column: 32, scope: !1196)
!9724 = !DILocation(line: 841, column: 37, scope: !1196)
!9725 = !DILocation(line: 841, column: 47, scope: !1196)
!9726 = !DILocation(line: 838, column: 5, scope: !1196)
!9727 = !DILocation(line: 842, column: 5, scope: !1196)
!9728 = !DILocation(line: 843, column: 1, scope: !1196)
!9729 = !DILocation(line: 4140, column: 34, scope: !1199)
!9730 = !DILocation(line: 4140, column: 47, scope: !1199)
!9731 = !DILocation(line: 4140, column: 60, scope: !1199)
!9732 = !DILocation(line: 4142, column: 5, scope: !1199)
!9733 = !DILocation(line: 4142, column: 21, scope: !1199)
!9734 = !DILocation(line: 4143, column: 5, scope: !1199)
!9735 = !DILocation(line: 4144, column: 39, scope: !1199)
!9736 = !DILocation(line: 4144, column: 44, scope: !1199)
!9737 = !DILocation(line: 4144, column: 49, scope: !1199)
!9738 = !{!9739, !2607, i64 0}
!9739 = !{!"timeval", !2607, i64 0, !2607, i64 8}
!9740 = !DILocation(line: 4144, column: 64, scope: !1199)
!9741 = !{!9739, !2607, i64 8}
!9742 = !DILocation(line: 4144, column: 57, scope: !1199)
!9743 = !DILocation(line: 4145, column: 39, scope: !1199)
!9744 = !DILocation(line: 4144, column: 12, scope: !1199)
!9745 = !DILocation(line: 4146, column: 1, scope: !1199)
!9746 = !DILocation(line: 4144, column: 5, scope: !1199)
!9747 = !DILocation(line: 4083, column: 38, scope: !1220)
!9748 = !DILocation(line: 4083, column: 51, scope: !1220)
!9749 = !DILocation(line: 4083, column: 61, scope: !1220)
!9750 = !DILocation(line: 4083, column: 72, scope: !1220)
!9751 = !DILocation(line: 4084, column: 38, scope: !1220)
!9752 = !DILocation(line: 4086, column: 5, scope: !1220)
!9753 = !DILocation(line: 4086, column: 16, scope: !1220)
!9754 = !DILocation(line: 4088, column: 10, scope: !1220)
!9755 = !DILocation(line: 4088, column: 8, scope: !1220)
!9756 = !DILocation(line: 4089, column: 9, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !1220, file: !450, line: 4089, column: 9)
!9758 = !DILocation(line: 4089, column: 12, scope: !9757)
!9759 = !DILocation(line: 4089, column: 9, scope: !1220)
!9760 = !DILocation(line: 4091, column: 15, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9762, file: !450, line: 4091, column: 13)
!9762 = distinct !DILexicalBlock(scope: !9757, file: !450, line: 4089, column: 27)
!9763 = !DILocation(line: 4091, column: 14, scope: !9761)
!9764 = !DILocation(line: 4091, column: 36, scope: !9761)
!9765 = !DILocation(line: 4091, column: 13, scope: !9762)
!9766 = !DILocation(line: 4092, column: 15, scope: !9761)
!9767 = !DILocation(line: 4092, column: 36, scope: !9761)
!9768 = !DILocation(line: 4092, column: 13, scope: !9761)
!9769 = !DILocation(line: 4094, column: 35, scope: !9762)
!9770 = !DILocation(line: 4094, column: 16, scope: !9762)
!9771 = !DILocation(line: 4094, column: 9, scope: !9762)
!9772 = !DILocation(line: 4103, column: 9, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !1220, file: !450, line: 4103, column: 9)
!9774 = !DILocation(line: 4103, column: 13, scope: !9773)
!9775 = !DILocation(line: 4103, column: 20, scope: !9773)
!9776 = !DILocation(line: 4103, column: 9, scope: !1220)
!9777 = !DILocation(line: 4104, column: 9, scope: !9773)
!9778 = !DILocation(line: 4104, column: 13, scope: !9773)
!9779 = !DILocation(line: 4104, column: 20, scope: !9773)
!9780 = !DILocation(line: 4105, column: 34, scope: !1220)
!9781 = !DILocation(line: 4106, column: 34, scope: !1220)
!9782 = !DILocation(line: 4106, column: 38, scope: !1220)
!9783 = !DILocation(line: 4106, column: 46, scope: !1220)
!9784 = !DILocation(line: 4107, column: 34, scope: !1220)
!9785 = !DILocation(line: 4107, column: 38, scope: !1220)
!9786 = !DILocation(line: 4107, column: 45, scope: !1220)
!9787 = !DILocation(line: 4108, column: 34, scope: !1220)
!9788 = !DILocation(line: 4108, column: 38, scope: !1220)
!9789 = !DILocation(line: 4109, column: 34, scope: !1220)
!9790 = !DILocation(line: 4109, column: 38, scope: !1220)
!9791 = !DILocation(line: 4110, column: 34, scope: !1220)
!9792 = !DILocation(line: 4110, column: 38, scope: !1220)
!9793 = !DILocation(line: 4111, column: 34, scope: !1220)
!9794 = !DILocation(line: 4111, column: 38, scope: !1220)
!9795 = !DILocation(line: 4112, column: 34, scope: !1220)
!9796 = !DILocation(line: 4113, column: 34, scope: !1220)
!9797 = !DILocation(line: 4105, column: 12, scope: !1220)
!9798 = !DILocation(line: 4105, column: 5, scope: !1220)
!9799 = !DILocation(line: 4114, column: 1, scope: !1220)
!9800 = !DILocation(line: 4124, column: 35, scope: !1247)
!9801 = !DILocation(line: 4124, column: 48, scope: !1247)
!9802 = !DILocation(line: 4124, column: 61, scope: !1247)
!9803 = !DILocation(line: 4125, column: 35, scope: !1247)
!9804 = !DILocation(line: 4127, column: 5, scope: !1247)
!9805 = !DILocation(line: 4127, column: 12, scope: !1247)
!9806 = !DILocation(line: 4128, column: 5, scope: !1247)
!9807 = !DILocation(line: 4128, column: 10, scope: !1247)
!9808 = !DILocation(line: 4130, column: 33, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !1247, file: !450, line: 4130, column: 9)
!9810 = !DILocation(line: 4130, column: 9, scope: !9809)
!9811 = !DILocation(line: 4130, column: 77, scope: !9809)
!9812 = !DILocation(line: 4130, column: 9, scope: !1247)
!9813 = !DILocation(line: 4131, column: 9, scope: !9809)
!9814 = !DILocation(line: 4132, column: 39, scope: !1247)
!9815 = !DILocation(line: 4132, column: 44, scope: !1247)
!9816 = !DILocation(line: 4132, column: 47, scope: !1247)
!9817 = !DILocation(line: 4132, column: 59, scope: !1247)
!9818 = !DILocation(line: 4132, column: 54, scope: !1247)
!9819 = !DILocation(line: 4132, column: 63, scope: !1247)
!9820 = !DILocation(line: 4132, column: 12, scope: !1247)
!9821 = !DILocation(line: 4132, column: 5, scope: !1247)
!9822 = !DILocation(line: 4133, column: 1, scope: !1247)
!9823 = !DILocation(line: 934, column: 20, scope: !1301)
!9824 = !DILocation(line: 934, column: 38, scope: !1301)
!9825 = !DILocation(line: 936, column: 31, scope: !1301)
!9826 = !DILocation(line: 936, column: 46, scope: !1301)
!9827 = !DILocation(line: 936, column: 12, scope: !1301)
!9828 = !DILocation(line: 936, column: 5, scope: !1301)
!9829 = !DILocation(line: 2190, column: 30, scope: !1305)
!9830 = !DILocation(line: 2192, column: 36, scope: !1305)
!9831 = !DILocation(line: 2192, column: 44, scope: !1305)
!9832 = !DILocation(line: 2192, column: 50, scope: !1305)
!9833 = !DILocation(line: 2193, column: 9, scope: !1305)
!9834 = !DILocation(line: 2193, column: 35, scope: !9835)
!9835 = !DILexicalBlockFile(scope: !1305, file: !450, discriminator: 1)
!9836 = !DILocation(line: 2193, column: 43, scope: !1305)
!9837 = !DILocation(line: 2193, column: 52, scope: !1305)
!9838 = !DILocation(line: 2194, column: 9, scope: !1305)
!9839 = !DILocation(line: 2194, column: 35, scope: !9840)
!9840 = !DILexicalBlockFile(scope: !1305, file: !450, discriminator: 2)
!9841 = !DILocation(line: 2194, column: 43, scope: !1305)
!9842 = !DILocation(line: 2194, column: 57, scope: !1305)
!9843 = !DILocation(line: 2194, column: 9, scope: !9844)
!9844 = !DILexicalBlockFile(scope: !9835, file: !450, discriminator: 3)
!9845 = !DILocation(line: 2192, column: 5, scope: !1305)
!9846 = !DILocation(line: 2258, column: 31, scope: !1322)
!9847 = !DILocation(line: 2260, column: 5, scope: !1322)
!9848 = !DILocation(line: 2260, column: 15, scope: !1322)
!9849 = !DILocation(line: 2261, column: 5, scope: !1322)
!9850 = !DILocation(line: 2261, column: 15, scope: !1322)
!9851 = !DILocation(line: 2263, column: 68, scope: !1322)
!9852 = !DILocation(line: 2263, column: 48, scope: !1322)
!9853 = !DILocation(line: 2263, column: 26, scope: !1322)
!9854 = !DILocation(line: 2263, column: 24, scope: !1322)
!9855 = !DILocation(line: 2264, column: 9, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !1322, file: !450, line: 2264, column: 9)
!9857 = !DILocation(line: 2264, column: 28, scope: !9856)
!9858 = !DILocation(line: 2264, column: 9, scope: !1322)
!9859 = !DILocation(line: 2265, column: 9, scope: !9856)
!9860 = !DILocation(line: 2267, column: 41, scope: !1322)
!9861 = !DILocation(line: 2267, column: 61, scope: !1322)
!9862 = !DILocation(line: 2267, column: 21, scope: !1322)
!9863 = !DILocation(line: 2267, column: 19, scope: !1322)
!9864 = !DILocation(line: 2269, column: 5, scope: !1322)
!9865 = !DILocation(line: 2269, column: 10, scope: !9866)
!9866 = !DILexicalBlockFile(scope: !1328, file: !450, discriminator: 1)
!9867 = !DILocation(line: 2269, column: 20, scope: !1328)
!9868 = !DILocation(line: 2269, column: 50, scope: !1328)
!9869 = !DILocation(line: 2269, column: 79, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !1328, file: !450, line: 2269, column: 76)
!9871 = !DILocation(line: 2269, column: 96, scope: !9870)
!9872 = !DILocation(line: 2269, column: 76, scope: !9870)
!9873 = !DILocation(line: 2269, column: 106, scope: !9870)
!9874 = !DILocation(line: 2269, column: 76, scope: !1328)
!9875 = !DILocation(line: 2269, column: 76, scope: !9876)
!9876 = !DILexicalBlockFile(scope: !1328, file: !450, discriminator: 2)
!9877 = !DILocation(line: 2269, column: 137, scope: !9878)
!9878 = !DILexicalBlockFile(scope: !9870, file: !450, discriminator: 3)
!9879 = !DILocation(line: 2269, column: 155, scope: !9870)
!9880 = !DILocation(line: 2269, column: 165, scope: !9870)
!9881 = !DILocation(line: 2269, column: 190, scope: !9870)
!9882 = !DILocation(line: 2269, column: 121, scope: !9870)
!9883 = !DILocation(line: 2269, column: 209, scope: !9884)
!9884 = !DILexicalBlockFile(scope: !1322, file: !450, discriminator: 4)
!9885 = !DILocation(line: 2269, column: 209, scope: !1328)
!9886 = !DILocation(line: 2269, column: 209, scope: !9887)
!9887 = !DILexicalBlockFile(scope: !1328, file: !450, discriminator: 5)
!9888 = !DILocation(line: 2270, column: 12, scope: !1322)
!9889 = !DILocation(line: 2270, column: 5, scope: !1322)
!9890 = !DILocation(line: 2271, column: 1, scope: !1322)
!9891 = !DILocation(line: 1420, column: 41, scope: !1329)
!9892 = !DILocation(line: 1422, column: 5, scope: !1329)
!9893 = !DILocation(line: 1422, column: 15, scope: !1329)
!9894 = !DILocation(line: 1423, column: 5, scope: !1329)
!9895 = !DILocation(line: 1423, column: 15, scope: !1329)
!9896 = !DILocation(line: 1424, column: 5, scope: !1329)
!9897 = !DILocation(line: 1424, column: 15, scope: !1329)
!9898 = !DILocation(line: 1425, column: 5, scope: !1329)
!9899 = !DILocation(line: 1425, column: 15, scope: !1329)
!9900 = !DILocation(line: 1427, column: 49, scope: !1329)
!9901 = !DILocation(line: 1427, column: 57, scope: !1329)
!9902 = !DILocation(line: 1427, column: 26, scope: !1329)
!9903 = !DILocation(line: 1427, column: 10, scope: !1329)
!9904 = !DILocation(line: 1427, column: 8, scope: !1329)
!9905 = !DILocation(line: 1428, column: 9, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1428, column: 9)
!9907 = !DILocation(line: 1428, column: 12, scope: !9906)
!9908 = !DILocation(line: 1428, column: 9, scope: !1329)
!9909 = !DILocation(line: 1429, column: 9, scope: !9906)
!9910 = !DILocation(line: 1430, column: 28, scope: !1329)
!9911 = !DILocation(line: 1430, column: 32, scope: !1329)
!9912 = !DILocation(line: 1430, column: 10, scope: !1329)
!9913 = !DILocation(line: 1430, column: 8, scope: !1329)
!9914 = !DILocation(line: 1431, column: 9, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1431, column: 9)
!9916 = !DILocation(line: 1431, column: 12, scope: !9915)
!9917 = !DILocation(line: 1431, column: 9, scope: !1329)
!9918 = !DILocation(line: 1432, column: 9, scope: !9915)
!9919 = !DILocation(line: 1433, column: 5, scope: !1329)
!9920 = !DILocation(line: 1433, column: 10, scope: !9921)
!9921 = !DILexicalBlockFile(scope: !1337, file: !450, discriminator: 1)
!9922 = !DILocation(line: 1433, column: 20, scope: !1337)
!9923 = !DILocation(line: 1433, column: 50, scope: !1337)
!9924 = !DILocation(line: 1433, column: 63, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !1337, file: !450, line: 1433, column: 60)
!9926 = !DILocation(line: 1433, column: 80, scope: !9925)
!9927 = !DILocation(line: 1433, column: 60, scope: !9925)
!9928 = !DILocation(line: 1433, column: 90, scope: !9925)
!9929 = !DILocation(line: 1433, column: 60, scope: !1337)
!9930 = !DILocation(line: 1433, column: 60, scope: !9931)
!9931 = !DILexicalBlockFile(scope: !1337, file: !450, discriminator: 2)
!9932 = !DILocation(line: 1433, column: 121, scope: !9933)
!9933 = !DILexicalBlockFile(scope: !9925, file: !450, discriminator: 3)
!9934 = !DILocation(line: 1433, column: 139, scope: !9925)
!9935 = !DILocation(line: 1433, column: 149, scope: !9925)
!9936 = !DILocation(line: 1433, column: 174, scope: !9925)
!9937 = !DILocation(line: 1433, column: 105, scope: !9925)
!9938 = !DILocation(line: 1433, column: 193, scope: !9939)
!9939 = !DILexicalBlockFile(scope: !1329, file: !450, discriminator: 4)
!9940 = !DILocation(line: 1433, column: 193, scope: !1337)
!9941 = !DILocation(line: 1433, column: 193, scope: !9942)
!9942 = !DILexicalBlockFile(scope: !1337, file: !450, discriminator: 5)
!9943 = !DILocation(line: 1434, column: 8, scope: !1329)
!9944 = !DILocation(line: 1437, column: 49, scope: !1329)
!9945 = !DILocation(line: 1437, column: 57, scope: !1329)
!9946 = !DILocation(line: 1437, column: 26, scope: !1329)
!9947 = !DILocation(line: 1437, column: 10, scope: !1329)
!9948 = !DILocation(line: 1437, column: 8, scope: !1329)
!9949 = !DILocation(line: 1438, column: 9, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1438, column: 9)
!9951 = !DILocation(line: 1438, column: 12, scope: !9950)
!9952 = !DILocation(line: 1438, column: 9, scope: !1329)
!9953 = !DILocation(line: 1439, column: 9, scope: !9950)
!9954 = !DILocation(line: 1440, column: 23, scope: !1329)
!9955 = !DILocation(line: 1440, column: 27, scope: !1329)
!9956 = !DILocation(line: 1440, column: 10, scope: !1329)
!9957 = !DILocation(line: 1440, column: 8, scope: !1329)
!9958 = !DILocation(line: 1441, column: 9, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1441, column: 9)
!9960 = !DILocation(line: 1441, column: 12, scope: !9959)
!9961 = !DILocation(line: 1441, column: 9, scope: !1329)
!9962 = !DILocation(line: 1442, column: 9, scope: !9959)
!9963 = !DILocation(line: 1443, column: 5, scope: !1329)
!9964 = !DILocation(line: 1443, column: 10, scope: !9965)
!9965 = !DILexicalBlockFile(scope: !1339, file: !450, discriminator: 1)
!9966 = !DILocation(line: 1443, column: 20, scope: !1339)
!9967 = !DILocation(line: 1443, column: 50, scope: !1339)
!9968 = !DILocation(line: 1443, column: 63, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !1339, file: !450, line: 1443, column: 60)
!9970 = !DILocation(line: 1443, column: 80, scope: !9969)
!9971 = !DILocation(line: 1443, column: 60, scope: !9969)
!9972 = !DILocation(line: 1443, column: 90, scope: !9969)
!9973 = !DILocation(line: 1443, column: 60, scope: !1339)
!9974 = !DILocation(line: 1443, column: 60, scope: !9975)
!9975 = !DILexicalBlockFile(scope: !1339, file: !450, discriminator: 2)
!9976 = !DILocation(line: 1443, column: 121, scope: !9977)
!9977 = !DILexicalBlockFile(scope: !9969, file: !450, discriminator: 3)
!9978 = !DILocation(line: 1443, column: 139, scope: !9969)
!9979 = !DILocation(line: 1443, column: 149, scope: !9969)
!9980 = !DILocation(line: 1443, column: 174, scope: !9969)
!9981 = !DILocation(line: 1443, column: 105, scope: !9969)
!9982 = !DILocation(line: 1443, column: 193, scope: !9939)
!9983 = !DILocation(line: 1443, column: 193, scope: !1339)
!9984 = !DILocation(line: 1443, column: 193, scope: !9985)
!9985 = !DILexicalBlockFile(scope: !1339, file: !450, discriminator: 5)
!9986 = !DILocation(line: 1444, column: 5, scope: !1329)
!9987 = !DILocation(line: 1444, column: 10, scope: !9988)
!9988 = !DILexicalBlockFile(scope: !1341, file: !450, discriminator: 1)
!9989 = !DILocation(line: 1444, column: 20, scope: !1341)
!9990 = !DILocation(line: 1444, column: 50, scope: !1341)
!9991 = !DILocation(line: 1444, column: 63, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !1341, file: !450, line: 1444, column: 60)
!9993 = !DILocation(line: 1444, column: 80, scope: !9992)
!9994 = !DILocation(line: 1444, column: 60, scope: !9992)
!9995 = !DILocation(line: 1444, column: 90, scope: !9992)
!9996 = !DILocation(line: 1444, column: 60, scope: !1341)
!9997 = !DILocation(line: 1444, column: 60, scope: !9998)
!9998 = !DILexicalBlockFile(scope: !1341, file: !450, discriminator: 2)
!9999 = !DILocation(line: 1444, column: 121, scope: !10000)
!10000 = !DILexicalBlockFile(scope: !9992, file: !450, discriminator: 3)
!10001 = !DILocation(line: 1444, column: 139, scope: !9992)
!10002 = !DILocation(line: 1444, column: 149, scope: !9992)
!10003 = !DILocation(line: 1444, column: 174, scope: !9992)
!10004 = !DILocation(line: 1444, column: 105, scope: !9992)
!10005 = !DILocation(line: 1444, column: 193, scope: !9939)
!10006 = !DILocation(line: 1444, column: 193, scope: !1341)
!10007 = !DILocation(line: 1444, column: 193, scope: !10008)
!10008 = !DILexicalBlockFile(scope: !1341, file: !450, discriminator: 5)
!10009 = !DILocation(line: 1445, column: 19, scope: !1329)
!10010 = !DILocation(line: 1448, column: 28, scope: !1329)
!10011 = !DILocation(line: 1448, column: 32, scope: !1329)
!10012 = !DILocation(line: 1448, column: 10, scope: !1329)
!10013 = !DILocation(line: 1448, column: 8, scope: !1329)
!10014 = !DILocation(line: 1449, column: 9, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1449, column: 9)
!10016 = !DILocation(line: 1449, column: 12, scope: !10015)
!10017 = !DILocation(line: 1449, column: 9, scope: !1329)
!10018 = !DILocation(line: 1450, column: 9, scope: !10015)
!10019 = !DILocation(line: 1451, column: 5, scope: !1329)
!10020 = !DILocation(line: 1451, column: 10, scope: !10021)
!10021 = !DILexicalBlockFile(scope: !1343, file: !450, discriminator: 1)
!10022 = !DILocation(line: 1451, column: 20, scope: !1343)
!10023 = !DILocation(line: 1451, column: 50, scope: !1343)
!10024 = !DILocation(line: 1451, column: 63, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !1343, file: !450, line: 1451, column: 60)
!10026 = !DILocation(line: 1451, column: 80, scope: !10025)
!10027 = !DILocation(line: 1451, column: 60, scope: !10025)
!10028 = !DILocation(line: 1451, column: 90, scope: !10025)
!10029 = !DILocation(line: 1451, column: 60, scope: !1343)
!10030 = !DILocation(line: 1451, column: 60, scope: !10031)
!10031 = !DILexicalBlockFile(scope: !1343, file: !450, discriminator: 2)
!10032 = !DILocation(line: 1451, column: 121, scope: !10033)
!10033 = !DILexicalBlockFile(scope: !10025, file: !450, discriminator: 3)
!10034 = !DILocation(line: 1451, column: 139, scope: !10025)
!10035 = !DILocation(line: 1451, column: 149, scope: !10025)
!10036 = !DILocation(line: 1451, column: 174, scope: !10025)
!10037 = !DILocation(line: 1451, column: 105, scope: !10025)
!10038 = !DILocation(line: 1451, column: 193, scope: !9939)
!10039 = !DILocation(line: 1451, column: 193, scope: !1343)
!10040 = !DILocation(line: 1451, column: 193, scope: !10041)
!10041 = !DILexicalBlockFile(scope: !1343, file: !450, discriminator: 5)
!10042 = !DILocation(line: 1452, column: 8, scope: !1329)
!10043 = !DILocation(line: 1455, column: 49, scope: !1329)
!10044 = !DILocation(line: 1455, column: 57, scope: !1329)
!10045 = !DILocation(line: 1455, column: 26, scope: !1329)
!10046 = !DILocation(line: 1455, column: 10, scope: !1329)
!10047 = !DILocation(line: 1455, column: 8, scope: !1329)
!10048 = !DILocation(line: 1456, column: 9, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !1329, file: !450, line: 1456, column: 9)
!10050 = !DILocation(line: 1456, column: 12, scope: !10049)
!10051 = !DILocation(line: 1456, column: 9, scope: !1329)
!10052 = !DILocation(line: 1457, column: 9, scope: !10049)
!10053 = !DILocation(line: 1458, column: 27, scope: !1329)
!10054 = !DILocation(line: 1458, column: 31, scope: !1329)
!10055 = !DILocation(line: 1458, column: 14, scope: !1329)
!10056 = !DILocation(line: 1458, column: 12, scope: !1329)
!10057 = !DILocation(line: 1458, column: 5, scope: !1329)
!10058 = !DILocation(line: 1461, column: 5, scope: !1329)
!10059 = !DILocation(line: 1461, column: 10, scope: !10060)
!10060 = !DILexicalBlockFile(scope: !1345, file: !450, discriminator: 1)
!10061 = !DILocation(line: 1461, column: 20, scope: !1345)
!10062 = !DILocation(line: 1461, column: 51, scope: !1345)
!10063 = !DILocation(line: 1461, column: 60, scope: !1348)
!10064 = !DILocation(line: 1461, column: 76, scope: !1348)
!10065 = !DILocation(line: 1461, column: 60, scope: !1345)
!10066 = !DILocation(line: 1461, column: 91, scope: !10067)
!10067 = !DILexicalBlockFile(scope: !1348, file: !450, discriminator: 2)
!10068 = !DILocation(line: 1461, column: 96, scope: !10069)
!10069 = !DILexicalBlockFile(scope: !1347, file: !450, discriminator: 4)
!10070 = !DILocation(line: 1461, column: 106, scope: !1347)
!10071 = !DILocation(line: 1461, column: 136, scope: !1347)
!10072 = !DILocation(line: 1461, column: 162, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !1347, file: !450, line: 1461, column: 159)
!10074 = !DILocation(line: 1461, column: 179, scope: !10073)
!10075 = !DILocation(line: 1461, column: 159, scope: !10073)
!10076 = !DILocation(line: 1461, column: 189, scope: !10073)
!10077 = !DILocation(line: 1461, column: 159, scope: !1347)
!10078 = !DILocation(line: 1461, column: 159, scope: !10079)
!10079 = !DILexicalBlockFile(scope: !1347, file: !450, discriminator: 5)
!10080 = !DILocation(line: 1461, column: 220, scope: !10081)
!10081 = !DILexicalBlockFile(scope: !10073, file: !450, discriminator: 6)
!10082 = !DILocation(line: 1461, column: 238, scope: !10073)
!10083 = !DILocation(line: 1461, column: 248, scope: !10073)
!10084 = !DILocation(line: 1461, column: 273, scope: !10073)
!10085 = !DILocation(line: 1461, column: 204, scope: !10073)
!10086 = !DILocation(line: 1461, column: 292, scope: !10087)
!10087 = !DILexicalBlockFile(scope: !1348, file: !450, discriminator: 7)
!10088 = !DILocation(line: 1461, column: 292, scope: !1347)
!10089 = !DILocation(line: 1461, column: 292, scope: !10090)
!10090 = !DILexicalBlockFile(scope: !1347, file: !450, discriminator: 8)
!10091 = !DILocation(line: 1461, column: 292, scope: !10092)
!10092 = !DILexicalBlockFile(scope: !1347, file: !450, discriminator: 9)
!10093 = !DILocation(line: 1461, column: 305, scope: !10094)
!10094 = !DILexicalBlockFile(scope: !10095, file: !450, discriminator: 10)
!10095 = !DILexicalBlockFile(scope: !1329, file: !450, discriminator: 3)
!10096 = !DILocation(line: 1461, column: 305, scope: !1345)
!10097 = !DILocation(line: 1461, column: 305, scope: !10098)
!10098 = !DILexicalBlockFile(scope: !1345, file: !450, discriminator: 11)
!10099 = !DILocation(line: 1462, column: 5, scope: !1329)
!10100 = !DILocation(line: 1462, column: 10, scope: !10101)
!10101 = !DILexicalBlockFile(scope: !1350, file: !450, discriminator: 1)
!10102 = !DILocation(line: 1462, column: 20, scope: !1350)
!10103 = !DILocation(line: 1462, column: 51, scope: !1350)
!10104 = !DILocation(line: 1462, column: 60, scope: !1353)
!10105 = !DILocation(line: 1462, column: 76, scope: !1353)
!10106 = !DILocation(line: 1462, column: 60, scope: !1350)
!10107 = !DILocation(line: 1462, column: 91, scope: !10108)
!10108 = !DILexicalBlockFile(scope: !1353, file: !450, discriminator: 2)
!10109 = !DILocation(line: 1462, column: 96, scope: !10110)
!10110 = !DILexicalBlockFile(scope: !1352, file: !450, discriminator: 4)
!10111 = !DILocation(line: 1462, column: 106, scope: !1352)
!10112 = !DILocation(line: 1462, column: 136, scope: !1352)
!10113 = !DILocation(line: 1462, column: 162, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !1352, file: !450, line: 1462, column: 159)
!10115 = !DILocation(line: 1462, column: 179, scope: !10114)
!10116 = !DILocation(line: 1462, column: 159, scope: !10114)
!10117 = !DILocation(line: 1462, column: 189, scope: !10114)
!10118 = !DILocation(line: 1462, column: 159, scope: !1352)
!10119 = !DILocation(line: 1462, column: 159, scope: !10120)
!10120 = !DILexicalBlockFile(scope: !1352, file: !450, discriminator: 5)
!10121 = !DILocation(line: 1462, column: 220, scope: !10122)
!10122 = !DILexicalBlockFile(scope: !10114, file: !450, discriminator: 6)
!10123 = !DILocation(line: 1462, column: 238, scope: !10114)
!10124 = !DILocation(line: 1462, column: 248, scope: !10114)
!10125 = !DILocation(line: 1462, column: 273, scope: !10114)
!10126 = !DILocation(line: 1462, column: 204, scope: !10114)
!10127 = !DILocation(line: 1462, column: 292, scope: !10128)
!10128 = !DILexicalBlockFile(scope: !1353, file: !450, discriminator: 7)
!10129 = !DILocation(line: 1462, column: 292, scope: !1352)
!10130 = !DILocation(line: 1462, column: 292, scope: !10131)
!10131 = !DILexicalBlockFile(scope: !1352, file: !450, discriminator: 8)
!10132 = !DILocation(line: 1462, column: 292, scope: !10133)
!10133 = !DILexicalBlockFile(scope: !1352, file: !450, discriminator: 9)
!10134 = !DILocation(line: 1462, column: 305, scope: !10094)
!10135 = !DILocation(line: 1462, column: 305, scope: !1350)
!10136 = !DILocation(line: 1462, column: 305, scope: !10137)
!10137 = !DILexicalBlockFile(scope: !1350, file: !450, discriminator: 11)
!10138 = !DILocation(line: 1463, column: 5, scope: !1329)
!10139 = !DILocation(line: 1463, column: 10, scope: !10140)
!10140 = !DILexicalBlockFile(scope: !1355, file: !450, discriminator: 1)
!10141 = !DILocation(line: 1463, column: 20, scope: !1355)
!10142 = !DILocation(line: 1463, column: 51, scope: !1355)
!10143 = !DILocation(line: 1463, column: 60, scope: !1358)
!10144 = !DILocation(line: 1463, column: 76, scope: !1358)
!10145 = !DILocation(line: 1463, column: 60, scope: !1355)
!10146 = !DILocation(line: 1463, column: 91, scope: !10147)
!10147 = !DILexicalBlockFile(scope: !1358, file: !450, discriminator: 2)
!10148 = !DILocation(line: 1463, column: 96, scope: !10149)
!10149 = !DILexicalBlockFile(scope: !1357, file: !450, discriminator: 4)
!10150 = !DILocation(line: 1463, column: 106, scope: !1357)
!10151 = !DILocation(line: 1463, column: 136, scope: !1357)
!10152 = !DILocation(line: 1463, column: 162, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !1357, file: !450, line: 1463, column: 159)
!10154 = !DILocation(line: 1463, column: 179, scope: !10153)
!10155 = !DILocation(line: 1463, column: 159, scope: !10153)
!10156 = !DILocation(line: 1463, column: 189, scope: !10153)
!10157 = !DILocation(line: 1463, column: 159, scope: !1357)
!10158 = !DILocation(line: 1463, column: 159, scope: !10159)
!10159 = !DILexicalBlockFile(scope: !1357, file: !450, discriminator: 5)
!10160 = !DILocation(line: 1463, column: 220, scope: !10161)
!10161 = !DILexicalBlockFile(scope: !10153, file: !450, discriminator: 6)
!10162 = !DILocation(line: 1463, column: 238, scope: !10153)
!10163 = !DILocation(line: 1463, column: 248, scope: !10153)
!10164 = !DILocation(line: 1463, column: 273, scope: !10153)
!10165 = !DILocation(line: 1463, column: 204, scope: !10153)
!10166 = !DILocation(line: 1463, column: 292, scope: !10167)
!10167 = !DILexicalBlockFile(scope: !1358, file: !450, discriminator: 7)
!10168 = !DILocation(line: 1463, column: 292, scope: !1357)
!10169 = !DILocation(line: 1463, column: 292, scope: !10170)
!10170 = !DILexicalBlockFile(scope: !1357, file: !450, discriminator: 8)
!10171 = !DILocation(line: 1463, column: 292, scope: !10172)
!10172 = !DILexicalBlockFile(scope: !1357, file: !450, discriminator: 9)
!10173 = !DILocation(line: 1463, column: 305, scope: !10094)
!10174 = !DILocation(line: 1463, column: 305, scope: !1355)
!10175 = !DILocation(line: 1463, column: 305, scope: !10176)
!10176 = !DILexicalBlockFile(scope: !1355, file: !450, discriminator: 11)
!10177 = !DILocation(line: 1464, column: 12, scope: !1329)
!10178 = !DILocation(line: 1465, column: 1, scope: !1329)
!10179 = !DILocation(line: 1464, column: 5, scope: !1329)
!10180 = !DILocation(line: 4745, column: 37, scope: !1449)
!10181 = !DILocation(line: 4747, column: 5, scope: !1449)
!10182 = !DILocation(line: 4747, column: 15, scope: !1449)
!10183 = !DILocation(line: 4748, column: 5, scope: !1449)
!10184 = !DILocation(line: 4748, column: 16, scope: !1449)
!10185 = !DILocation(line: 4749, column: 5, scope: !1449)
!10186 = !DILocation(line: 4749, column: 12, scope: !1449)
!10187 = !DILocation(line: 4750, column: 5, scope: !1449)
!10188 = !DILocation(line: 4750, column: 15, scope: !1449)
!10189 = !DILocation(line: 4751, column: 5, scope: !1449)
!10190 = !DILocation(line: 4751, column: 15, scope: !1449)
!10191 = !DILocation(line: 4752, column: 5, scope: !1449)
!10192 = !DILocation(line: 4752, column: 15, scope: !1449)
!10193 = !DILocation(line: 4753, column: 5, scope: !1449)
!10194 = !DILocation(line: 4753, column: 15, scope: !1449)
!10195 = !DILocation(line: 4754, column: 5, scope: !1449)
!10196 = !DILocation(line: 4754, column: 17, scope: !1449)
!10197 = !DILocation(line: 4756, column: 43, scope: !1449)
!10198 = !DILocation(line: 4756, column: 31, scope: !1449)
!10199 = !DILocation(line: 4756, column: 53, scope: !1449)
!10200 = !DILocation(line: 4756, column: 13, scope: !1449)
!10201 = !DILocation(line: 4756, column: 11, scope: !1449)
!10202 = !DILocation(line: 4757, column: 9, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4757, column: 9)
!10204 = !DILocation(line: 4757, column: 15, scope: !10203)
!10205 = !DILocation(line: 4757, column: 9, scope: !1449)
!10206 = !DILocation(line: 4758, column: 9, scope: !10203)
!10207 = !DILocation(line: 4759, column: 18, scope: !1449)
!10208 = !DILocation(line: 4759, column: 16, scope: !1449)
!10209 = !DILocation(line: 4760, column: 9, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4760, column: 9)
!10211 = !DILocation(line: 4760, column: 20, scope: !10210)
!10212 = !DILocation(line: 4760, column: 9, scope: !1449)
!10213 = !DILocation(line: 4761, column: 9, scope: !10210)
!10214 = !DILocation(line: 4762, column: 62, scope: !1449)
!10215 = !DILocation(line: 4762, column: 42, scope: !1449)
!10216 = !DILocation(line: 4763, column: 62, scope: !1449)
!10217 = !DILocation(line: 4763, column: 42, scope: !1449)
!10218 = !DILocation(line: 4762, column: 15, scope: !1449)
!10219 = !DILocation(line: 4762, column: 13, scope: !1449)
!10220 = !DILocation(line: 4764, column: 5, scope: !1449)
!10221 = !DILocation(line: 4764, column: 10, scope: !10222)
!10222 = !DILexicalBlockFile(scope: !1461, file: !450, discriminator: 1)
!10223 = !DILocation(line: 4764, column: 20, scope: !1461)
!10224 = !DILocation(line: 4764, column: 50, scope: !1461)
!10225 = !DILocation(line: 4764, column: 71, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !1461, file: !450, line: 4764, column: 68)
!10227 = !DILocation(line: 4764, column: 88, scope: !10226)
!10228 = !DILocation(line: 4764, column: 68, scope: !10226)
!10229 = !DILocation(line: 4764, column: 98, scope: !10226)
!10230 = !DILocation(line: 4764, column: 68, scope: !1461)
!10231 = !DILocation(line: 4764, column: 68, scope: !10232)
!10232 = !DILexicalBlockFile(scope: !1461, file: !450, discriminator: 2)
!10233 = !DILocation(line: 4764, column: 129, scope: !10234)
!10234 = !DILexicalBlockFile(scope: !10226, file: !450, discriminator: 3)
!10235 = !DILocation(line: 4764, column: 147, scope: !10226)
!10236 = !DILocation(line: 4764, column: 157, scope: !10226)
!10237 = !DILocation(line: 4764, column: 182, scope: !10226)
!10238 = !DILocation(line: 4764, column: 113, scope: !10226)
!10239 = !DILocation(line: 4764, column: 201, scope: !10240)
!10240 = !DILexicalBlockFile(scope: !1449, file: !450, discriminator: 4)
!10241 = !DILocation(line: 4764, column: 201, scope: !1461)
!10242 = !DILocation(line: 4764, column: 201, scope: !10243)
!10243 = !DILexicalBlockFile(scope: !1461, file: !450, discriminator: 5)
!10244 = !DILocation(line: 4765, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4765, column: 9)
!10246 = !DILocation(line: 4765, column: 17, scope: !10245)
!10247 = !DILocation(line: 4765, column: 9, scope: !1449)
!10248 = !DILocation(line: 4766, column: 9, scope: !10245)
!10249 = !DILocation(line: 4767, column: 5, scope: !1449)
!10250 = !DILocation(line: 4767, column: 10, scope: !10251)
!10251 = !DILexicalBlockFile(scope: !1463, file: !450, discriminator: 1)
!10252 = !DILocation(line: 4767, column: 20, scope: !1463)
!10253 = !DILocation(line: 4767, column: 50, scope: !1463)
!10254 = !DILocation(line: 4767, column: 66, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !1463, file: !450, line: 4767, column: 63)
!10256 = !DILocation(line: 4767, column: 83, scope: !10255)
!10257 = !DILocation(line: 4767, column: 63, scope: !10255)
!10258 = !DILocation(line: 4767, column: 93, scope: !10255)
!10259 = !DILocation(line: 4767, column: 63, scope: !1463)
!10260 = !DILocation(line: 4767, column: 63, scope: !10261)
!10261 = !DILexicalBlockFile(scope: !1463, file: !450, discriminator: 2)
!10262 = !DILocation(line: 4767, column: 124, scope: !10263)
!10263 = !DILexicalBlockFile(scope: !10255, file: !450, discriminator: 3)
!10264 = !DILocation(line: 4767, column: 142, scope: !10255)
!10265 = !DILocation(line: 4767, column: 152, scope: !10255)
!10266 = !DILocation(line: 4767, column: 177, scope: !10255)
!10267 = !DILocation(line: 4767, column: 108, scope: !10255)
!10268 = !DILocation(line: 4767, column: 196, scope: !10240)
!10269 = !DILocation(line: 4767, column: 196, scope: !1463)
!10270 = !DILocation(line: 4767, column: 196, scope: !10271)
!10271 = !DILexicalBlockFile(scope: !1463, file: !450, discriminator: 5)
!10272 = !DILocation(line: 4768, column: 31, scope: !1449)
!10273 = !DILocation(line: 4768, column: 17, scope: !1449)
!10274 = !DILocation(line: 4768, column: 15, scope: !1449)
!10275 = !DILocation(line: 4769, column: 5, scope: !1449)
!10276 = !DILocation(line: 4769, column: 10, scope: !10277)
!10277 = !DILexicalBlockFile(scope: !1465, file: !450, discriminator: 1)
!10278 = !DILocation(line: 4769, column: 20, scope: !1465)
!10279 = !DILocation(line: 4769, column: 50, scope: !1465)
!10280 = !DILocation(line: 4769, column: 68, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !1465, file: !450, line: 4769, column: 65)
!10282 = !DILocation(line: 4769, column: 85, scope: !10281)
!10283 = !DILocation(line: 4769, column: 65, scope: !10281)
!10284 = !DILocation(line: 4769, column: 95, scope: !10281)
!10285 = !DILocation(line: 4769, column: 65, scope: !1465)
!10286 = !DILocation(line: 4769, column: 65, scope: !10287)
!10287 = !DILexicalBlockFile(scope: !1465, file: !450, discriminator: 2)
!10288 = !DILocation(line: 4769, column: 126, scope: !10289)
!10289 = !DILexicalBlockFile(scope: !10281, file: !450, discriminator: 3)
!10290 = !DILocation(line: 4769, column: 144, scope: !10281)
!10291 = !DILocation(line: 4769, column: 154, scope: !10281)
!10292 = !DILocation(line: 4769, column: 179, scope: !10281)
!10293 = !DILocation(line: 4769, column: 110, scope: !10281)
!10294 = !DILocation(line: 4769, column: 198, scope: !10240)
!10295 = !DILocation(line: 4769, column: 198, scope: !1465)
!10296 = !DILocation(line: 4769, column: 198, scope: !10297)
!10297 = !DILexicalBlockFile(scope: !1465, file: !450, discriminator: 5)
!10298 = !DILocation(line: 4770, column: 9, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4770, column: 9)
!10300 = !DILocation(line: 4770, column: 19, scope: !10299)
!10301 = !DILocation(line: 4770, column: 25, scope: !10299)
!10302 = !DILocation(line: 4770, column: 28, scope: !10303)
!10303 = !DILexicalBlockFile(scope: !10299, file: !450, discriminator: 1)
!10304 = !DILocation(line: 4770, column: 9, scope: !1449)
!10305 = !DILocation(line: 4771, column: 9, scope: !10299)
!10306 = !DILocation(line: 4772, column: 13, scope: !1449)
!10307 = !DILocation(line: 4772, column: 11, scope: !1449)
!10308 = !DILocation(line: 4774, column: 12, scope: !1449)
!10309 = !DILocation(line: 4774, column: 19, scope: !1449)
!10310 = !{!4929, !2564, i64 48}
!10311 = !DILocation(line: 4774, column: 10, scope: !1449)
!10312 = !DILocation(line: 4775, column: 29, scope: !1449)
!10313 = !DILocation(line: 4775, column: 36, scope: !1449)
!10314 = !{!4929, !2607, i64 40}
!10315 = !DILocation(line: 4775, column: 13, scope: !1449)
!10316 = !DILocation(line: 4775, column: 11, scope: !1449)
!10317 = !DILocation(line: 4795, column: 9, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !1449, file: !450, line: 4795, column: 9)
!10319 = !DILocation(line: 4795, column: 14, scope: !10318)
!10320 = !DILocation(line: 4795, column: 9, scope: !1449)
!10321 = !DILocation(line: 4796, column: 40, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10318, file: !450, line: 4795, column: 29)
!10323 = !DILocation(line: 4796, column: 17, scope: !10322)
!10324 = !DILocation(line: 4796, column: 15, scope: !10322)
!10325 = !DILocation(line: 4797, column: 13, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10322, file: !450, line: 4797, column: 13)
!10327 = !DILocation(line: 4797, column: 19, scope: !10326)
!10328 = !DILocation(line: 4797, column: 13, scope: !10322)
!10329 = !DILocation(line: 4798, column: 13, scope: !10326)
!10330 = !DILocation(line: 4799, column: 5, scope: !10322)
!10331 = !DILocation(line: 4800, column: 27, scope: !1449)
!10332 = !DILocation(line: 4800, column: 34, scope: !1449)
!10333 = !DILocation(line: 4800, column: 14, scope: !1449)
!10334 = !DILocation(line: 4800, column: 12, scope: !1449)
!10335 = !DILocation(line: 4801, column: 5, scope: !1449)
!10336 = !DILocation(line: 4801, column: 10, scope: !10337)
!10337 = !DILexicalBlockFile(scope: !1467, file: !450, discriminator: 1)
!10338 = !DILocation(line: 4801, column: 20, scope: !1467)
!10339 = !DILocation(line: 4801, column: 51, scope: !1467)
!10340 = !DILocation(line: 4801, column: 63, scope: !1470)
!10341 = !DILocation(line: 4801, column: 79, scope: !1470)
!10342 = !DILocation(line: 4801, column: 63, scope: !1467)
!10343 = !DILocation(line: 4801, column: 94, scope: !10344)
!10344 = !DILexicalBlockFile(scope: !1470, file: !450, discriminator: 2)
!10345 = !DILocation(line: 4801, column: 99, scope: !10346)
!10346 = !DILexicalBlockFile(scope: !1469, file: !450, discriminator: 4)
!10347 = !DILocation(line: 4801, column: 109, scope: !1469)
!10348 = !DILocation(line: 4801, column: 139, scope: !1469)
!10349 = !DILocation(line: 4801, column: 165, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !1469, file: !450, line: 4801, column: 162)
!10351 = !DILocation(line: 4801, column: 182, scope: !10350)
!10352 = !DILocation(line: 4801, column: 162, scope: !10350)
!10353 = !DILocation(line: 4801, column: 192, scope: !10350)
!10354 = !DILocation(line: 4801, column: 162, scope: !1469)
!10355 = !DILocation(line: 4801, column: 162, scope: !10356)
!10356 = !DILexicalBlockFile(scope: !1469, file: !450, discriminator: 5)
!10357 = !DILocation(line: 4801, column: 223, scope: !10358)
!10358 = !DILexicalBlockFile(scope: !10350, file: !450, discriminator: 6)
!10359 = !DILocation(line: 4801, column: 241, scope: !10350)
!10360 = !DILocation(line: 4801, column: 251, scope: !10350)
!10361 = !DILocation(line: 4801, column: 276, scope: !10350)
!10362 = !DILocation(line: 4801, column: 207, scope: !10350)
!10363 = !DILocation(line: 4801, column: 295, scope: !10364)
!10364 = !DILexicalBlockFile(scope: !1470, file: !450, discriminator: 7)
!10365 = !DILocation(line: 4801, column: 295, scope: !1469)
!10366 = !DILocation(line: 4801, column: 295, scope: !10367)
!10367 = !DILexicalBlockFile(scope: !1469, file: !450, discriminator: 8)
!10368 = !DILocation(line: 4801, column: 295, scope: !10369)
!10369 = !DILexicalBlockFile(scope: !1469, file: !450, discriminator: 9)
!10370 = !DILocation(line: 4801, column: 308, scope: !10371)
!10371 = !DILexicalBlockFile(scope: !10372, file: !450, discriminator: 10)
!10372 = !DILexicalBlockFile(scope: !1449, file: !450, discriminator: 3)
!10373 = !DILocation(line: 4801, column: 308, scope: !1467)
!10374 = !DILocation(line: 4801, column: 308, scope: !10375)
!10375 = !DILexicalBlockFile(scope: !1467, file: !450, discriminator: 11)
!10376 = !DILocation(line: 4801, column: 308, scope: !10377)
!10377 = !DILexicalBlockFile(scope: !1467, file: !450, discriminator: 12)
!10378 = !DILocation(line: 4803, column: 5, scope: !1449)
!10379 = !DILocation(line: 4803, column: 10, scope: !10380)
!10380 = !DILexicalBlockFile(scope: !1472, file: !450, discriminator: 1)
!10381 = !DILocation(line: 4803, column: 20, scope: !1472)
!10382 = !DILocation(line: 4803, column: 50, scope: !1472)
!10383 = !DILocation(line: 4803, column: 66, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !1472, file: !450, line: 4803, column: 63)
!10385 = !DILocation(line: 4803, column: 83, scope: !10384)
!10386 = !DILocation(line: 4803, column: 63, scope: !10384)
!10387 = !DILocation(line: 4803, column: 93, scope: !10384)
!10388 = !DILocation(line: 4803, column: 63, scope: !1472)
!10389 = !DILocation(line: 4803, column: 63, scope: !10390)
!10390 = !DILexicalBlockFile(scope: !1472, file: !450, discriminator: 2)
!10391 = !DILocation(line: 4803, column: 124, scope: !10392)
!10392 = !DILexicalBlockFile(scope: !10384, file: !450, discriminator: 3)
!10393 = !DILocation(line: 4803, column: 142, scope: !10384)
!10394 = !DILocation(line: 4803, column: 152, scope: !10384)
!10395 = !DILocation(line: 4803, column: 177, scope: !10384)
!10396 = !DILocation(line: 4803, column: 108, scope: !10384)
!10397 = !DILocation(line: 4803, column: 196, scope: !10240)
!10398 = !DILocation(line: 4803, column: 196, scope: !1472)
!10399 = !DILocation(line: 4803, column: 196, scope: !10400)
!10400 = !DILexicalBlockFile(scope: !1472, file: !450, discriminator: 5)
!10401 = !DILocation(line: 4804, column: 12, scope: !1449)
!10402 = !DILocation(line: 4804, column: 5, scope: !1449)
!10403 = !DILocation(line: 4805, column: 1, scope: !1449)
!10404 = !DILocation(line: 1625, column: 46, scope: !1473)
!10405 = !DILocation(line: 1625, column: 70, scope: !1473)
!10406 = !DILocation(line: 1627, column: 5, scope: !1473)
!10407 = !DILocation(line: 1627, column: 15, scope: !1473)
!10408 = !DILocation(line: 1628, column: 5, scope: !1473)
!10409 = !DILocation(line: 1628, column: 15, scope: !1473)
!10410 = !DILocation(line: 1629, column: 5, scope: !1473)
!10411 = !DILocation(line: 1629, column: 15, scope: !1473)
!10412 = !DILocation(line: 1631, column: 39, scope: !1473)
!10413 = !DILocation(line: 1631, column: 17, scope: !1473)
!10414 = !DILocation(line: 1631, column: 15, scope: !1473)
!10415 = !DILocation(line: 1632, column: 9, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !1473, file: !450, line: 1632, column: 9)
!10417 = !DILocation(line: 1632, column: 19, scope: !10416)
!10418 = !DILocation(line: 1632, column: 9, scope: !1473)
!10419 = !DILocation(line: 1633, column: 9, scope: !10416)
!10420 = !DILocation(line: 1635, column: 40, scope: !1473)
!10421 = !DILocation(line: 1635, column: 18, scope: !1473)
!10422 = !DILocation(line: 1635, column: 16, scope: !1473)
!10423 = !DILocation(line: 1636, column: 9, scope: !1485)
!10424 = !DILocation(line: 1636, column: 20, scope: !1485)
!10425 = !DILocation(line: 1636, column: 9, scope: !1473)
!10426 = !DILocation(line: 1637, column: 9, scope: !1484)
!10427 = !DILocation(line: 1637, column: 14, scope: !10428)
!10428 = !DILexicalBlockFile(scope: !1483, file: !450, discriminator: 1)
!10429 = !DILocation(line: 1637, column: 24, scope: !1483)
!10430 = !DILocation(line: 1637, column: 54, scope: !1483)
!10431 = !DILocation(line: 1637, column: 74, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !1483, file: !450, line: 1637, column: 71)
!10433 = !DILocation(line: 1637, column: 91, scope: !10432)
!10434 = !DILocation(line: 1637, column: 71, scope: !10432)
!10435 = !DILocation(line: 1637, column: 101, scope: !10432)
!10436 = !DILocation(line: 1637, column: 71, scope: !1483)
!10437 = !DILocation(line: 1637, column: 71, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !1483, file: !450, discriminator: 2)
!10439 = !DILocation(line: 1637, column: 132, scope: !10440)
!10440 = !DILexicalBlockFile(scope: !10432, file: !450, discriminator: 3)
!10441 = !DILocation(line: 1637, column: 150, scope: !10432)
!10442 = !DILocation(line: 1637, column: 160, scope: !10432)
!10443 = !DILocation(line: 1637, column: 185, scope: !10432)
!10444 = !DILocation(line: 1637, column: 116, scope: !10432)
!10445 = !DILocation(line: 1637, column: 204, scope: !10446)
!10446 = !DILexicalBlockFile(scope: !1484, file: !450, discriminator: 4)
!10447 = !DILocation(line: 1637, column: 204, scope: !1483)
!10448 = !DILocation(line: 1637, column: 204, scope: !10449)
!10449 = !DILexicalBlockFile(scope: !1483, file: !450, discriminator: 5)
!10450 = !DILocation(line: 1638, column: 9, scope: !1484)
!10451 = !DILocation(line: 1641, column: 35, scope: !1473)
!10452 = !DILocation(line: 1641, column: 46, scope: !1473)
!10453 = !DILocation(line: 1641, column: 14, scope: !1473)
!10454 = !DILocation(line: 1641, column: 12, scope: !1473)
!10455 = !DILocation(line: 1642, column: 5, scope: !1473)
!10456 = !DILocation(line: 1642, column: 10, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !1487, file: !450, discriminator: 1)
!10458 = !DILocation(line: 1642, column: 20, scope: !1487)
!10459 = !DILocation(line: 1642, column: 50, scope: !1487)
!10460 = !DILocation(line: 1642, column: 70, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !1487, file: !450, line: 1642, column: 67)
!10462 = !DILocation(line: 1642, column: 87, scope: !10461)
!10463 = !DILocation(line: 1642, column: 67, scope: !10461)
!10464 = !DILocation(line: 1642, column: 97, scope: !10461)
!10465 = !DILocation(line: 1642, column: 67, scope: !1487)
!10466 = !DILocation(line: 1642, column: 67, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !1487, file: !450, discriminator: 2)
!10468 = !DILocation(line: 1642, column: 128, scope: !10469)
!10469 = !DILexicalBlockFile(scope: !10461, file: !450, discriminator: 3)
!10470 = !DILocation(line: 1642, column: 146, scope: !10461)
!10471 = !DILocation(line: 1642, column: 156, scope: !10461)
!10472 = !DILocation(line: 1642, column: 181, scope: !10461)
!10473 = !DILocation(line: 1642, column: 112, scope: !10461)
!10474 = !DILocation(line: 1642, column: 200, scope: !10475)
!10475 = !DILexicalBlockFile(scope: !1473, file: !450, discriminator: 4)
!10476 = !DILocation(line: 1642, column: 200, scope: !1487)
!10477 = !DILocation(line: 1642, column: 200, scope: !10478)
!10478 = !DILexicalBlockFile(scope: !1487, file: !450, discriminator: 5)
!10479 = !DILocation(line: 1643, column: 5, scope: !1473)
!10480 = !DILocation(line: 1643, column: 10, scope: !10481)
!10481 = !DILexicalBlockFile(scope: !1489, file: !450, discriminator: 1)
!10482 = !DILocation(line: 1643, column: 20, scope: !1489)
!10483 = !DILocation(line: 1643, column: 50, scope: !1489)
!10484 = !DILocation(line: 1643, column: 71, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !1489, file: !450, line: 1643, column: 68)
!10486 = !DILocation(line: 1643, column: 88, scope: !10485)
!10487 = !DILocation(line: 1643, column: 68, scope: !10485)
!10488 = !DILocation(line: 1643, column: 98, scope: !10485)
!10489 = !DILocation(line: 1643, column: 68, scope: !1489)
!10490 = !DILocation(line: 1643, column: 68, scope: !10491)
!10491 = !DILexicalBlockFile(scope: !1489, file: !450, discriminator: 2)
!10492 = !DILocation(line: 1643, column: 129, scope: !10493)
!10493 = !DILexicalBlockFile(scope: !10485, file: !450, discriminator: 3)
!10494 = !DILocation(line: 1643, column: 147, scope: !10485)
!10495 = !DILocation(line: 1643, column: 157, scope: !10485)
!10496 = !DILocation(line: 1643, column: 182, scope: !10485)
!10497 = !DILocation(line: 1643, column: 113, scope: !10485)
!10498 = !DILocation(line: 1643, column: 201, scope: !10475)
!10499 = !DILocation(line: 1643, column: 201, scope: !1489)
!10500 = !DILocation(line: 1643, column: 201, scope: !10501)
!10501 = !DILexicalBlockFile(scope: !1489, file: !450, discriminator: 5)
!10502 = !DILocation(line: 1644, column: 12, scope: !1473)
!10503 = !DILocation(line: 1644, column: 5, scope: !1473)
!10504 = !DILocation(line: 1645, column: 1, scope: !1473)
!10505 = !DILocation(line: 798, column: 24, scope: !1490)
!10506 = !DILocation(line: 798, column: 42, scope: !1490)
!10507 = !DILocation(line: 804, column: 9, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !1490, file: !450, line: 804, column: 9)
!10509 = !DILocation(line: 804, column: 14, scope: !10508)
!10510 = !DILocation(line: 804, column: 28, scope: !10508)
!10511 = !DILocation(line: 804, column: 62, scope: !10512)
!10512 = !DILexicalBlockFile(scope: !10508, file: !450, discriminator: 1)
!10513 = !DILocation(line: 804, column: 42, scope: !10508)
!10514 = !DILocation(line: 804, column: 31, scope: !10508)
!10515 = !DILocation(line: 804, column: 70, scope: !10508)
!10516 = !DILocation(line: 804, column: 9, scope: !1490)
!10517 = !DILocation(line: 805, column: 25, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10508, file: !450, line: 804, column: 76)
!10519 = !DILocation(line: 805, column: 52, scope: !10518)
!10520 = !DILocation(line: 805, column: 61, scope: !10518)
!10521 = !DILocation(line: 806, column: 16, scope: !10518)
!10522 = !DILocation(line: 806, column: 9, scope: !10518)
!10523 = !DILocation(line: 808, column: 32, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !1490, file: !450, line: 808, column: 9)
!10525 = !DILocation(line: 808, column: 11, scope: !10524)
!10526 = !DILocation(line: 808, column: 42, scope: !10524)
!10527 = !DILocation(line: 808, column: 56, scope: !10524)
!10528 = !DILocation(line: 808, column: 61, scope: !10524)
!10529 = !DILocation(line: 808, column: 87, scope: !10530)
!10530 = !DILexicalBlockFile(scope: !10524, file: !450, discriminator: 1)
!10531 = !DILocation(line: 808, column: 66, scope: !10524)
!10532 = !DILocation(line: 808, column: 97, scope: !10524)
!10533 = !DILocation(line: 808, column: 106, scope: !10524)
!10534 = !DILocation(line: 808, column: 111, scope: !10524)
!10535 = !DILocation(line: 808, column: 9, scope: !1490)
!10536 = !DILocation(line: 809, column: 22, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10524, file: !450, line: 808, column: 117)
!10538 = !DILocation(line: 811, column: 34, scope: !10537)
!10539 = !DILocation(line: 809, column: 9, scope: !10537)
!10540 = !DILocation(line: 812, column: 9, scope: !10537)
!10541 = !DILocation(line: 814, column: 33, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !1490, file: !450, line: 814, column: 9)
!10543 = !DILocation(line: 814, column: 12, scope: !10542)
!10544 = !DILocation(line: 814, column: 43, scope: !10542)
!10545 = !DILocation(line: 814, column: 49, scope: !10542)
!10546 = !DILocation(line: 814, column: 55, scope: !10542)
!10547 = !DILocation(line: 814, column: 81, scope: !10548)
!10548 = !DILexicalBlockFile(scope: !10542, file: !450, discriminator: 1)
!10549 = !DILocation(line: 814, column: 60, scope: !10542)
!10550 = !DILocation(line: 814, column: 91, scope: !10542)
!10551 = !DILocation(line: 814, column: 100, scope: !10542)
!10552 = !DILocation(line: 814, column: 106, scope: !10542)
!10553 = !DILocation(line: 815, column: 32, scope: !10542)
!10554 = !DILocation(line: 815, column: 11, scope: !10542)
!10555 = !DILocation(line: 815, column: 42, scope: !10542)
!10556 = !DILocation(line: 815, column: 48, scope: !10542)
!10557 = !DILocation(line: 815, column: 53, scope: !10542)
!10558 = !DILocation(line: 815, column: 79, scope: !10548)
!10559 = !DILocation(line: 815, column: 58, scope: !10542)
!10560 = !DILocation(line: 815, column: 89, scope: !10542)
!10561 = !DILocation(line: 815, column: 95, scope: !10542)
!10562 = !DILocation(line: 814, column: 9, scope: !1490)
!10563 = !DILocation(line: 816, column: 22, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10542, file: !450, line: 815, column: 101)
!10565 = !DILocation(line: 819, column: 34, scope: !10564)
!10566 = !DILocation(line: 816, column: 9, scope: !10564)
!10567 = !DILocation(line: 820, column: 9, scope: !10564)
!10568 = !DILocation(line: 823, column: 28, scope: !1490)
!10569 = !DILocation(line: 823, column: 36, scope: !1490)
!10570 = !DILocation(line: 823, column: 12, scope: !1490)
!10571 = !DILocation(line: 823, column: 5, scope: !1490)
!10572 = !DILocation(line: 824, column: 1, scope: !1490)
!10573 = !DILocation(line: 5020, column: 40, scope: !1500)
!10574 = !DILocation(line: 5022, column: 5, scope: !1500)
!10575 = !DILocation(line: 5022, column: 15, scope: !1500)
!10576 = !DILocation(line: 5023, column: 5, scope: !1500)
!10577 = !DILocation(line: 5023, column: 15, scope: !1500)
!10578 = !DILocation(line: 5025, column: 51, scope: !1500)
!10579 = !DILocation(line: 5025, column: 57, scope: !1500)
!10580 = !DILocation(line: 5025, column: 17, scope: !1500)
!10581 = !DILocation(line: 5025, column: 15, scope: !1500)
!10582 = !DILocation(line: 5027, column: 9, scope: !1508)
!10583 = !DILocation(line: 5027, column: 19, scope: !1508)
!10584 = !DILocation(line: 5027, column: 9, scope: !1500)
!10585 = !DILocation(line: 5028, column: 44, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !1507, file: !450, line: 5028, column: 13)
!10587 = !DILocation(line: 5028, column: 17, scope: !10586)
!10588 = !DILocation(line: 5028, column: 52, scope: !10586)
!10589 = !DILocation(line: 5028, column: 15, scope: !10586)
!10590 = !DILocation(line: 5028, column: 63, scope: !10586)
!10591 = !DILocation(line: 5028, column: 66, scope: !10592)
!10592 = !DILexicalBlockFile(scope: !10586, file: !450, discriminator: 1)
!10593 = !DILocation(line: 5028, column: 72, scope: !10586)
!10594 = !DILocation(line: 5028, column: 79, scope: !10586)
!10595 = !DILocation(line: 5028, column: 13, scope: !1507)
!10596 = !DILocation(line: 5029, column: 38, scope: !10586)
!10597 = !DILocation(line: 5029, column: 22, scope: !10586)
!10598 = !DILocation(line: 5029, column: 20, scope: !10586)
!10599 = !DILocation(line: 5029, column: 13, scope: !10586)
!10600 = !DILocation(line: 5031, column: 38, scope: !10586)
!10601 = !DILocation(line: 5031, column: 49, scope: !10586)
!10602 = !DILocation(line: 5031, column: 55, scope: !10586)
!10603 = !DILocation(line: 5031, column: 22, scope: !10586)
!10604 = !DILocation(line: 5031, column: 20, scope: !10586)
!10605 = !DILocation(line: 5032, column: 9, scope: !1507)
!10606 = !DILocation(line: 5032, column: 14, scope: !10607)
!10607 = !DILexicalBlockFile(scope: !1506, file: !450, discriminator: 1)
!10608 = !DILocation(line: 5032, column: 24, scope: !1506)
!10609 = !DILocation(line: 5032, column: 54, scope: !1506)
!10610 = !DILocation(line: 5032, column: 74, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !1506, file: !450, line: 5032, column: 71)
!10612 = !DILocation(line: 5032, column: 91, scope: !10611)
!10613 = !DILocation(line: 5032, column: 71, scope: !10611)
!10614 = !DILocation(line: 5032, column: 101, scope: !10611)
!10615 = !DILocation(line: 5032, column: 71, scope: !1506)
!10616 = !DILocation(line: 5032, column: 71, scope: !10617)
!10617 = !DILexicalBlockFile(scope: !1506, file: !450, discriminator: 2)
!10618 = !DILocation(line: 5032, column: 132, scope: !10619)
!10619 = !DILexicalBlockFile(scope: !10611, file: !450, discriminator: 3)
!10620 = !DILocation(line: 5032, column: 150, scope: !10611)
!10621 = !DILocation(line: 5032, column: 160, scope: !10611)
!10622 = !DILocation(line: 5032, column: 185, scope: !10611)
!10623 = !DILocation(line: 5032, column: 116, scope: !10611)
!10624 = !DILocation(line: 5032, column: 204, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !1507, file: !450, discriminator: 4)
!10626 = !DILocation(line: 5032, column: 204, scope: !1506)
!10627 = !DILocation(line: 5032, column: 204, scope: !10628)
!10628 = !DILexicalBlockFile(scope: !1506, file: !450, discriminator: 5)
!10629 = !DILocation(line: 5033, column: 5, scope: !1507)
!10630 = !DILocation(line: 5034, column: 12, scope: !1500)
!10631 = !DILocation(line: 5035, column: 1, scope: !1500)
!10632 = !DILocation(line: 5034, column: 5, scope: !1500)
!10633 = !DILocation(line: 3962, column: 36, scope: !1509)
!10634 = !DILocation(line: 3962, column: 48, scope: !1509)
!10635 = !DILocation(line: 3964, column: 52, scope: !1509)
!10636 = !DILocation(line: 3964, column: 59, scope: !1509)
!10637 = !DILocation(line: 3964, column: 29, scope: !1509)
!10638 = !DILocation(line: 3964, column: 28, scope: !1509)
!10639 = !DILocation(line: 3964, column: 12, scope: !1509)
!10640 = !DILocation(line: 3964, column: 5, scope: !1509)
!10641 = !DILocation(line: 3968, column: 38, scope: !1515)
!10642 = !DILocation(line: 3968, column: 50, scope: !1515)
!10643 = !DILocation(line: 3970, column: 52, scope: !1515)
!10644 = !DILocation(line: 3970, column: 59, scope: !1515)
!10645 = !DILocation(line: 3970, column: 29, scope: !1515)
!10646 = !DILocation(line: 3970, column: 28, scope: !1515)
!10647 = !DILocation(line: 3970, column: 12, scope: !1515)
!10648 = !DILocation(line: 3970, column: 5, scope: !1515)
!10649 = !DILocation(line: 3974, column: 38, scope: !1519)
!10650 = !DILocation(line: 3974, column: 50, scope: !1519)
!10651 = !DILocation(line: 3976, column: 52, scope: !1519)
!10652 = !DILocation(line: 3976, column: 59, scope: !1519)
!10653 = !DILocation(line: 3976, column: 29, scope: !1519)
!10654 = !DILocation(line: 3976, column: 28, scope: !1519)
!10655 = !DILocation(line: 3976, column: 12, scope: !1519)
!10656 = !DILocation(line: 3976, column: 5, scope: !1519)
!10657 = !DILocation(line: 3980, column: 43, scope: !1523)
!10658 = !DILocation(line: 3980, column: 55, scope: !1523)
!10659 = !DILocation(line: 3982, column: 53, scope: !1523)
!10660 = !DILocation(line: 3982, column: 60, scope: !1523)
!10661 = !DILocation(line: 3982, column: 30, scope: !1523)
!10662 = !DILocation(line: 3982, column: 68, scope: !1523)
!10663 = !DILocation(line: 3982, column: 101, scope: !1523)
!10664 = !DILocation(line: 3982, column: 108, scope: !1523)
!10665 = !DILocation(line: 3982, column: 78, scope: !1523)
!10666 = !DILocation(line: 3982, column: 116, scope: !1523)
!10667 = !DILocation(line: 3982, column: 75, scope: !1523)
!10668 = !DILocation(line: 3982, column: 147, scope: !1523)
!10669 = !DILocation(line: 3982, column: 154, scope: !1523)
!10670 = !DILocation(line: 3982, column: 124, scope: !1523)
!10671 = !DILocation(line: 3982, column: 122, scope: !1523)
!10672 = !DILocation(line: 3982, column: 28, scope: !1523)
!10673 = !DILocation(line: 3982, column: 12, scope: !1523)
!10674 = !DILocation(line: 3982, column: 5, scope: !1523)
!10675 = !DILocation(line: 3986, column: 38, scope: !1527)
!10676 = !DILocation(line: 3986, column: 50, scope: !1527)
!10677 = !DILocation(line: 3988, column: 5, scope: !1527)
!10678 = !DILocation(line: 3988, column: 15, scope: !1527)
!10679 = !DILocation(line: 3988, column: 53, scope: !1527)
!10680 = !DILocation(line: 3988, column: 26, scope: !1527)
!10681 = !DILocation(line: 3988, column: 61, scope: !1527)
!10682 = !DILocation(line: 3988, column: 24, scope: !1527)
!10683 = !DILocation(line: 3988, column: 74, scope: !10684)
!10684 = !DILexicalBlockFile(scope: !1527, file: !450, discriminator: 1)
!10685 = !DILocation(line: 3988, column: 80, scope: !1527)
!10686 = !DILocation(line: 3988, column: 24, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !1527, file: !450, discriminator: 2)
!10688 = !DILocation(line: 3988, column: 15, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !10690, file: !450, discriminator: 4)
!10690 = !DILexicalBlockFile(scope: !1527, file: !450, discriminator: 3)
!10691 = !DILocation(line: 3989, column: 21, scope: !1527)
!10692 = !DILocation(line: 3989, column: 31, scope: !1527)
!10693 = !DILocation(line: 3989, column: 40, scope: !1527)
!10694 = !DILocation(line: 3990, column: 12, scope: !1527)
!10695 = !DILocation(line: 3991, column: 1, scope: !1527)
!10696 = !DILocation(line: 3990, column: 5, scope: !1527)
!10697 = !DILocation(line: 414, column: 21, scope: !1561)
!10698 = !DILocation(line: 414, column: 28, scope: !1561)
!10699 = !DILocation(line: 414, column: 35, scope: !1561)
!10700 = !DILocation(line: 414, column: 42, scope: !1561)
!10701 = !DILocation(line: 416, column: 9, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !1561, file: !450, line: 416, column: 9)
!10703 = !DILocation(line: 416, column: 11, scope: !10702)
!10704 = !DILocation(line: 416, column: 15, scope: !10702)
!10705 = !DILocation(line: 416, column: 18, scope: !10706)
!10706 = !DILexicalBlockFile(scope: !10702, file: !450, discriminator: 1)
!10707 = !DILocation(line: 416, column: 20, scope: !10702)
!10708 = !DILocation(line: 416, column: 9, scope: !1561)
!10709 = !DILocation(line: 417, column: 25, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10702, file: !450, line: 416, column: 26)
!10711 = !DILocation(line: 417, column: 9, scope: !10710)
!10712 = !DILocation(line: 419, column: 9, scope: !10710)
!10713 = !DILocation(line: 421, column: 9, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !1561, file: !450, line: 421, column: 9)
!10715 = !DILocation(line: 421, column: 11, scope: !10714)
!10716 = !DILocation(line: 421, column: 15, scope: !10714)
!10717 = !DILocation(line: 421, column: 18, scope: !10718)
!10718 = !DILexicalBlockFile(scope: !10714, file: !450, discriminator: 1)
!10719 = !DILocation(line: 421, column: 20, scope: !10714)
!10720 = !DILocation(line: 421, column: 9, scope: !1561)
!10721 = !DILocation(line: 422, column: 25, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10714, file: !450, line: 421, column: 26)
!10723 = !DILocation(line: 422, column: 9, scope: !10722)
!10724 = !DILocation(line: 424, column: 9, scope: !10722)
!10725 = !DILocation(line: 426, column: 9, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !1561, file: !450, line: 426, column: 9)
!10727 = !DILocation(line: 426, column: 11, scope: !10726)
!10728 = !DILocation(line: 426, column: 15, scope: !10726)
!10729 = !DILocation(line: 426, column: 18, scope: !10730)
!10730 = !DILexicalBlockFile(scope: !10726, file: !450, discriminator: 1)
!10731 = !DILocation(line: 426, column: 20, scope: !10726)
!10732 = !DILocation(line: 426, column: 9, scope: !1561)
!10733 = !DILocation(line: 427, column: 25, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10726, file: !450, line: 426, column: 26)
!10735 = !DILocation(line: 427, column: 9, scope: !10734)
!10736 = !DILocation(line: 429, column: 9, scope: !10734)
!10737 = !DILocation(line: 431, column: 9, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !1561, file: !450, line: 431, column: 9)
!10739 = !DILocation(line: 431, column: 12, scope: !10738)
!10740 = !DILocation(line: 431, column: 16, scope: !10738)
!10741 = !DILocation(line: 431, column: 19, scope: !10742)
!10742 = !DILexicalBlockFile(scope: !10738, file: !450, discriminator: 1)
!10743 = !DILocation(line: 431, column: 22, scope: !10738)
!10744 = !DILocation(line: 431, column: 9, scope: !1561)
!10745 = !DILocation(line: 432, column: 25, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10738, file: !450, line: 431, column: 32)
!10747 = !DILocation(line: 432, column: 9, scope: !10746)
!10748 = !DILocation(line: 434, column: 9, scope: !10746)
!10749 = !DILocation(line: 436, column: 5, scope: !1561)
!10750 = !DILocation(line: 437, column: 1, scope: !1561)
!10751 = !DILocation(line: 2198, column: 30, scope: !1569)
!10752 = !DILocation(line: 2200, column: 32, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !1569, file: !450, line: 2200, column: 9)
!10754 = !DILocation(line: 2200, column: 40, scope: !10753)
!10755 = !DILocation(line: 2200, column: 54, scope: !10753)
!10756 = !DILocation(line: 2200, column: 9, scope: !1569)
!10757 = !DILocation(line: 2202, column: 51, scope: !10753)
!10758 = !DILocation(line: 2202, column: 39, scope: !10753)
!10759 = !DILocation(line: 2202, column: 59, scope: !10753)
!10760 = !DILocation(line: 2202, column: 69, scope: !10753)
!10761 = !DILocation(line: 2203, column: 60, scope: !10753)
!10762 = !DILocation(line: 2203, column: 68, scope: !10753)
!10763 = !DILocation(line: 2204, column: 60, scope: !10753)
!10764 = !DILocation(line: 2204, column: 68, scope: !10753)
!10765 = !DILocation(line: 2205, column: 60, scope: !10753)
!10766 = !DILocation(line: 2205, column: 68, scope: !10753)
!10767 = !DILocation(line: 2201, column: 16, scope: !10753)
!10768 = !DILocation(line: 2201, column: 9, scope: !10753)
!10769 = !DILocation(line: 2206, column: 32, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !1569, file: !450, line: 2206, column: 9)
!10771 = !DILocation(line: 2206, column: 40, scope: !10770)
!10772 = !DILocation(line: 2206, column: 49, scope: !10770)
!10773 = !DILocation(line: 2206, column: 9, scope: !1569)
!10774 = !DILocation(line: 2208, column: 51, scope: !10770)
!10775 = !DILocation(line: 2208, column: 39, scope: !10770)
!10776 = !DILocation(line: 2208, column: 59, scope: !10770)
!10777 = !DILocation(line: 2208, column: 69, scope: !10770)
!10778 = !DILocation(line: 2209, column: 60, scope: !10770)
!10779 = !DILocation(line: 2209, column: 68, scope: !10770)
!10780 = !DILocation(line: 2210, column: 60, scope: !10770)
!10781 = !DILocation(line: 2210, column: 68, scope: !10770)
!10782 = !DILocation(line: 2207, column: 16, scope: !10770)
!10783 = !DILocation(line: 2207, column: 9, scope: !10770)
!10784 = !DILocation(line: 2213, column: 47, scope: !1569)
!10785 = !DILocation(line: 2213, column: 35, scope: !1569)
!10786 = !DILocation(line: 2213, column: 55, scope: !1569)
!10787 = !DILocation(line: 2213, column: 65, scope: !1569)
!10788 = !DILocation(line: 2214, column: 56, scope: !1569)
!10789 = !DILocation(line: 2214, column: 64, scope: !1569)
!10790 = !DILocation(line: 2212, column: 12, scope: !1569)
!10791 = !DILocation(line: 2212, column: 5, scope: !1569)
!10792 = !DILocation(line: 2215, column: 1, scope: !1569)
!10793 = !DILocation(line: 1828, column: 30, scope: !1784)
!10794 = !DILocation(line: 1830, column: 9, scope: !1791)
!10795 = !DILocation(line: 1830, column: 15, scope: !1791)
!10796 = !DILocation(line: 1830, column: 24, scope: !1791)
!10797 = !DILocation(line: 1830, column: 9, scope: !1784)
!10798 = !DILocation(line: 1831, column: 9, scope: !1790)
!10799 = !DILocation(line: 1831, column: 19, scope: !1790)
!10800 = !DILocation(line: 1831, column: 41, scope: !1790)
!10801 = !DILocation(line: 1831, column: 26, scope: !1790)
!10802 = !DILocation(line: 1832, column: 13, scope: !1795)
!10803 = !DILocation(line: 1832, column: 18, scope: !1795)
!10804 = !DILocation(line: 1832, column: 13, scope: !1790)
!10805 = !DILocation(line: 1833, column: 44, scope: !1794)
!10806 = !DILocation(line: 1833, column: 30, scope: !1794)
!10807 = !DILocation(line: 1833, column: 13, scope: !1794)
!10808 = !DILocation(line: 1833, column: 19, scope: !1794)
!10809 = !DILocation(line: 1833, column: 28, scope: !1794)
!10810 = !DILocation(line: 1834, column: 13, scope: !1794)
!10811 = !DILocation(line: 1834, column: 18, scope: !10812)
!10812 = !DILexicalBlockFile(scope: !1793, file: !450, discriminator: 1)
!10813 = !DILocation(line: 1834, column: 28, scope: !1793)
!10814 = !DILocation(line: 1834, column: 58, scope: !1793)
!10815 = !DILocation(line: 1834, column: 73, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !1793, file: !450, line: 1834, column: 70)
!10817 = !DILocation(line: 1834, column: 90, scope: !10816)
!10818 = !DILocation(line: 1834, column: 70, scope: !10816)
!10819 = !DILocation(line: 1834, column: 100, scope: !10816)
!10820 = !DILocation(line: 1834, column: 70, scope: !1793)
!10821 = !DILocation(line: 1834, column: 70, scope: !10822)
!10822 = !DILexicalBlockFile(scope: !1793, file: !450, discriminator: 2)
!10823 = !DILocation(line: 1834, column: 131, scope: !10824)
!10824 = !DILexicalBlockFile(scope: !10816, file: !450, discriminator: 3)
!10825 = !DILocation(line: 1834, column: 149, scope: !10816)
!10826 = !DILocation(line: 1834, column: 159, scope: !10816)
!10827 = !DILocation(line: 1834, column: 184, scope: !10816)
!10828 = !DILocation(line: 1834, column: 115, scope: !10816)
!10829 = !DILocation(line: 1834, column: 203, scope: !10830)
!10830 = !DILexicalBlockFile(scope: !1794, file: !450, discriminator: 4)
!10831 = !DILocation(line: 1834, column: 203, scope: !1793)
!10832 = !DILocation(line: 1834, column: 203, scope: !10833)
!10833 = !DILexicalBlockFile(scope: !1793, file: !450, discriminator: 5)
!10834 = !DILocation(line: 1835, column: 9, scope: !1794)
!10835 = !DILocation(line: 1836, column: 5, scope: !1791)
!10836 = !DILocation(line: 1836, column: 5, scope: !1790)
!10837 = !DILocation(line: 1837, column: 12, scope: !1784)
!10838 = !DILocation(line: 1837, column: 18, scope: !1784)
!10839 = !DILocation(line: 1837, column: 5, scope: !1784)
!10840 = !DILocation(line: 2218, column: 29, scope: !1799)
!10841 = !DILocation(line: 2220, column: 5, scope: !1799)
!10842 = !DILocation(line: 2220, column: 9, scope: !1799)
!10843 = !DILocation(line: 2220, column: 37, scope: !1799)
!10844 = !DILocation(line: 2220, column: 45, scope: !1799)
!10845 = !DILocation(line: 2221, column: 5, scope: !1799)
!10846 = !DILocation(line: 2221, column: 9, scope: !1799)
!10847 = !DILocation(line: 2221, column: 42, scope: !1799)
!10848 = !DILocation(line: 2221, column: 50, scope: !1799)
!10849 = !DILocation(line: 2222, column: 5, scope: !1799)
!10850 = !DILocation(line: 2222, column: 9, scope: !1799)
!10851 = !DILocation(line: 2222, column: 26, scope: !1799)
!10852 = !DILocation(line: 2222, column: 19, scope: !1799)
!10853 = !DILocation(line: 2223, column: 5, scope: !1799)
!10854 = !DILocation(line: 2223, column: 9, scope: !1799)
!10855 = !DILocation(line: 2223, column: 24, scope: !1799)
!10856 = !DILocation(line: 2223, column: 17, scope: !1799)
!10857 = !DILocation(line: 2224, column: 5, scope: !1799)
!10858 = !DILocation(line: 2224, column: 9, scope: !1799)
!10859 = !DILocation(line: 2224, column: 39, scope: !1799)
!10860 = !DILocation(line: 2224, column: 47, scope: !1799)
!10861 = !DILocation(line: 2226, column: 9, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !1799, file: !450, line: 2226, column: 9)
!10863 = !DILocation(line: 2226, column: 9, scope: !1799)
!10864 = !DILocation(line: 2227, column: 13, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !450, line: 2227, column: 13)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !450, line: 2226, column: 15)
!10867 = !DILocation(line: 2227, column: 13, scope: !10866)
!10868 = !DILocation(line: 2229, column: 41, scope: !10865)
!10869 = !DILocation(line: 2229, column: 48, scope: !10865)
!10870 = !DILocation(line: 2229, column: 53, scope: !10865)
!10871 = !DILocation(line: 2229, column: 58, scope: !10865)
!10872 = !DILocation(line: 2229, column: 61, scope: !10873)
!10873 = !DILexicalBlockFile(scope: !10865, file: !450, discriminator: 2)
!10874 = !DILocation(line: 2229, column: 66, scope: !10865)
!10875 = !DILocation(line: 2229, column: 47, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !10877, file: !450, discriminator: 3)
!10877 = !DILexicalBlockFile(scope: !10865, file: !450, discriminator: 1)
!10878 = !DILocation(line: 2230, column: 41, scope: !10865)
!10879 = !DILocation(line: 2230, column: 48, scope: !10865)
!10880 = !DILocation(line: 2230, column: 57, scope: !10865)
!10881 = !DILocation(line: 2230, column: 66, scope: !10865)
!10882 = !DILocation(line: 2228, column: 20, scope: !10865)
!10883 = !DILocation(line: 2228, column: 13, scope: !10865)
!10884 = !DILocation(line: 2233, column: 41, scope: !10865)
!10885 = !DILocation(line: 2233, column: 48, scope: !10865)
!10886 = !DILocation(line: 2233, column: 53, scope: !10865)
!10887 = !DILocation(line: 2233, column: 58, scope: !10865)
!10888 = !DILocation(line: 2233, column: 61, scope: !10873)
!10889 = !DILocation(line: 2233, column: 66, scope: !10865)
!10890 = !DILocation(line: 2233, column: 47, scope: !10876)
!10891 = !DILocation(line: 2234, column: 41, scope: !10865)
!10892 = !DILocation(line: 2234, column: 48, scope: !10865)
!10893 = !DILocation(line: 2234, column: 57, scope: !10865)
!10894 = !DILocation(line: 2232, column: 20, scope: !10865)
!10895 = !DILocation(line: 2232, column: 13, scope: !10865)
!10896 = !DILocation(line: 2236, column: 13, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !450, line: 2236, column: 13)
!10898 = distinct !DILexicalBlock(scope: !10862, file: !450, line: 2235, column: 12)
!10899 = !DILocation(line: 2236, column: 13, scope: !10898)
!10900 = !DILocation(line: 2238, column: 41, scope: !10897)
!10901 = !DILocation(line: 2238, column: 48, scope: !10897)
!10902 = !DILocation(line: 2238, column: 57, scope: !10897)
!10903 = !DILocation(line: 2238, column: 66, scope: !10897)
!10904 = !DILocation(line: 2237, column: 20, scope: !10897)
!10905 = !DILocation(line: 2237, column: 13, scope: !10897)
!10906 = !DILocation(line: 2241, column: 41, scope: !10897)
!10907 = !DILocation(line: 2241, column: 48, scope: !10897)
!10908 = !DILocation(line: 2241, column: 57, scope: !10897)
!10909 = !DILocation(line: 2240, column: 20, scope: !10897)
!10910 = !DILocation(line: 2240, column: 13, scope: !10897)
!10911 = !DILocation(line: 2244, column: 1, scope: !1799)
!10912 = !DILocation(line: 1814, column: 29, scope: !1807)
!10913 = !DILocation(line: 1814, column: 45, scope: !1807)
!10914 = !DILocation(line: 1814, column: 56, scope: !1807)
!10915 = !DILocation(line: 1816, column: 24, scope: !1814)
!10916 = !DILocation(line: 1816, column: 33, scope: !1814)
!10917 = !DILocation(line: 1816, column: 42, scope: !1814)
!10918 = !DILocation(line: 1816, column: 69, scope: !1814)
!10919 = !DILocation(line: 1816, column: 103, scope: !10920)
!10920 = !DILexicalBlockFile(scope: !1814, file: !450, discriminator: 1)
!10921 = !DILocation(line: 1816, column: 112, scope: !1814)
!10922 = !DILocation(line: 1816, column: 72, scope: !1814)
!10923 = !DILocation(line: 1816, column: 9, scope: !1807)
!10924 = !DILocation(line: 1817, column: 9, scope: !1813)
!10925 = !DILocation(line: 1817, column: 13, scope: !1813)
!10926 = !DILocation(line: 1817, column: 30, scope: !1813)
!10927 = !DILocation(line: 1817, column: 36, scope: !1813)
!10928 = !DILocation(line: 1817, column: 20, scope: !1813)
!10929 = !DILocation(line: 1818, column: 29, scope: !1813)
!10930 = !DILocation(line: 1818, column: 35, scope: !1813)
!10931 = !DILocation(line: 1818, column: 16, scope: !1813)
!10932 = !DILocation(line: 1818, column: 9, scope: !1813)
!10933 = !DILocation(line: 1819, column: 5, scope: !1814)
!10934 = !DILocation(line: 1821, column: 72, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !1814, file: !450, line: 1820, column: 10)
!10936 = !DILocation(line: 1821, column: 9, scope: !10935)
!10937 = !DILocation(line: 1823, column: 1, scope: !1807)
!10938 = !DILocation(line: 2077, column: 25, scope: !1818)
!10939 = !DILocation(line: 2077, column: 41, scope: !1818)
!10940 = !DILocation(line: 2077, column: 57, scope: !1818)
!10941 = !DILocation(line: 2079, column: 5, scope: !1818)
!10942 = !DILocation(line: 2079, column: 15, scope: !1818)
!10943 = !DILocation(line: 2082, column: 5, scope: !1818)
!10944 = !DILocation(line: 2082, column: 15, scope: !1818)
!10945 = !DILocation(line: 2083, column: 5, scope: !1818)
!10946 = !DILocation(line: 2083, column: 15, scope: !1818)
!10947 = !DILocation(line: 2084, column: 5, scope: !1818)
!10948 = !DILocation(line: 2084, column: 15, scope: !1818)
!10949 = !DILocation(line: 2085, column: 5, scope: !1818)
!10950 = !DILocation(line: 2085, column: 15, scope: !1818)
!10951 = !DILocation(line: 2086, column: 5, scope: !1818)
!10952 = !DILocation(line: 2086, column: 15, scope: !1818)
!10953 = !DILocation(line: 2087, column: 5, scope: !1818)
!10954 = !DILocation(line: 2087, column: 15, scope: !1818)
!10955 = !DILocation(line: 2088, column: 5, scope: !1818)
!10956 = !DILocation(line: 2088, column: 15, scope: !1818)
!10957 = !DILocation(line: 2090, column: 5, scope: !1818)
!10958 = !DILocation(line: 2090, column: 15, scope: !1818)
!10959 = !DILocation(line: 2091, column: 5, scope: !1818)
!10960 = !DILocation(line: 2091, column: 15, scope: !1818)
!10961 = !DILocation(line: 2092, column: 5, scope: !1818)
!10962 = !DILocation(line: 2092, column: 12, scope: !1818)
!10963 = !{!10964, !10964, i64 0}
!10964 = !{!"double", !2565, i64 0}
!10965 = !DILocation(line: 2099, column: 37, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2099, column: 9)
!10967 = !DILocation(line: 2099, column: 43, scope: !10966)
!10968 = !DILocation(line: 2099, column: 9, scope: !10966)
!10969 = !DILocation(line: 2102, column: 65, scope: !10966)
!10970 = !DILocation(line: 2099, column: 9, scope: !1818)
!10971 = !DILocation(line: 2103, column: 9, scope: !10966)
!10972 = !DILocation(line: 2105, column: 9, scope: !1818)
!10973 = !DILocation(line: 2105, column: 7, scope: !1818)
!10974 = !DILocation(line: 2106, column: 9, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !1818, file: !450, line: 2106, column: 9)
!10976 = !DILocation(line: 2106, column: 11, scope: !10975)
!10977 = !DILocation(line: 2106, column: 9, scope: !1818)
!10978 = !DILocation(line: 2107, column: 9, scope: !10975)
!10979 = !DILocation(line: 2115, column: 9, scope: !1838)
!10980 = !DILocation(line: 2115, column: 9, scope: !1818)
!10981 = !DILocation(line: 2116, column: 35, scope: !1837)
!10982 = !DILocation(line: 2116, column: 38, scope: !1837)
!10983 = !DILocation(line: 2116, column: 42, scope: !1837)
!10984 = !DILocation(line: 2116, column: 13, scope: !1837)
!10985 = !DILocation(line: 2116, column: 11, scope: !1837)
!10986 = !DILocation(line: 2117, column: 9, scope: !1837)
!10987 = !DILocation(line: 2117, column: 14, scope: !10988)
!10988 = !DILexicalBlockFile(scope: !1836, file: !450, discriminator: 1)
!10989 = !DILocation(line: 2117, column: 24, scope: !1836)
!10990 = !DILocation(line: 2117, column: 54, scope: !1836)
!10991 = !DILocation(line: 2117, column: 66, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !1836, file: !450, line: 2117, column: 63)
!10993 = !DILocation(line: 2117, column: 83, scope: !10992)
!10994 = !DILocation(line: 2117, column: 63, scope: !10992)
!10995 = !DILocation(line: 2117, column: 93, scope: !10992)
!10996 = !DILocation(line: 2117, column: 63, scope: !1836)
!10997 = !DILocation(line: 2117, column: 63, scope: !10998)
!10998 = !DILexicalBlockFile(scope: !1836, file: !450, discriminator: 2)
!10999 = !DILocation(line: 2117, column: 124, scope: !11000)
!11000 = !DILexicalBlockFile(scope: !10992, file: !450, discriminator: 3)
!11001 = !DILocation(line: 2117, column: 142, scope: !10992)
!11002 = !DILocation(line: 2117, column: 152, scope: !10992)
!11003 = !DILocation(line: 2117, column: 177, scope: !10992)
!11004 = !DILocation(line: 2117, column: 108, scope: !10992)
!11005 = !DILocation(line: 2117, column: 196, scope: !11006)
!11006 = !DILexicalBlockFile(scope: !1837, file: !450, discriminator: 4)
!11007 = !DILocation(line: 2117, column: 196, scope: !1836)
!11008 = !DILocation(line: 2117, column: 196, scope: !11009)
!11009 = !DILexicalBlockFile(scope: !1836, file: !450, discriminator: 5)
!11010 = !DILocation(line: 2117, column: 213, scope: !11011)
!11011 = !DILexicalBlockFile(scope: !1837, file: !450, discriminator: 6)
!11012 = !DILocation(line: 2117, column: 211, scope: !1837)
!11013 = !DILocation(line: 2117, column: 220, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !1837, file: !450, line: 2117, column: 220)
!11015 = !DILocation(line: 2117, column: 222, scope: !11014)
!11016 = !DILocation(line: 2117, column: 220, scope: !1837)
!11017 = !DILocation(line: 2117, column: 237, scope: !11018)
!11018 = !DILexicalBlockFile(scope: !11014, file: !450, discriminator: 7)
!11019 = !DILocation(line: 2118, column: 5, scope: !1837)
!11020 = !DILocation(line: 2119, column: 9, scope: !1842)
!11021 = !DILocation(line: 2119, column: 9, scope: !1818)
!11022 = !DILocation(line: 2120, column: 35, scope: !1841)
!11023 = !DILocation(line: 2120, column: 38, scope: !1841)
!11024 = !DILocation(line: 2120, column: 42, scope: !1841)
!11025 = !DILocation(line: 2120, column: 13, scope: !1841)
!11026 = !DILocation(line: 2120, column: 11, scope: !1841)
!11027 = !DILocation(line: 2121, column: 9, scope: !1841)
!11028 = !DILocation(line: 2121, column: 14, scope: !11029)
!11029 = !DILexicalBlockFile(scope: !1840, file: !450, discriminator: 1)
!11030 = !DILocation(line: 2121, column: 24, scope: !1840)
!11031 = !DILocation(line: 2121, column: 54, scope: !1840)
!11032 = !DILocation(line: 2121, column: 66, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !1840, file: !450, line: 2121, column: 63)
!11034 = !DILocation(line: 2121, column: 83, scope: !11033)
!11035 = !DILocation(line: 2121, column: 63, scope: !11033)
!11036 = !DILocation(line: 2121, column: 93, scope: !11033)
!11037 = !DILocation(line: 2121, column: 63, scope: !1840)
!11038 = !DILocation(line: 2121, column: 63, scope: !11039)
!11039 = !DILexicalBlockFile(scope: !1840, file: !450, discriminator: 2)
!11040 = !DILocation(line: 2121, column: 124, scope: !11041)
!11041 = !DILexicalBlockFile(scope: !11033, file: !450, discriminator: 3)
!11042 = !DILocation(line: 2121, column: 142, scope: !11033)
!11043 = !DILocation(line: 2121, column: 152, scope: !11033)
!11044 = !DILocation(line: 2121, column: 177, scope: !11033)
!11045 = !DILocation(line: 2121, column: 108, scope: !11033)
!11046 = !DILocation(line: 2121, column: 196, scope: !11047)
!11047 = !DILexicalBlockFile(scope: !1841, file: !450, discriminator: 4)
!11048 = !DILocation(line: 2121, column: 196, scope: !1840)
!11049 = !DILocation(line: 2121, column: 196, scope: !11050)
!11050 = !DILexicalBlockFile(scope: !1840, file: !450, discriminator: 5)
!11051 = !DILocation(line: 2121, column: 213, scope: !11052)
!11052 = !DILexicalBlockFile(scope: !1841, file: !450, discriminator: 6)
!11053 = !DILocation(line: 2121, column: 211, scope: !1841)
!11054 = !DILocation(line: 2121, column: 220, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !1841, file: !450, line: 2121, column: 220)
!11056 = !DILocation(line: 2121, column: 222, scope: !11055)
!11057 = !DILocation(line: 2121, column: 220, scope: !1841)
!11058 = !DILocation(line: 2121, column: 237, scope: !11059)
!11059 = !DILexicalBlockFile(scope: !11055, file: !450, discriminator: 7)
!11060 = !DILocation(line: 2122, column: 5, scope: !1841)
!11061 = !DILocation(line: 2123, column: 9, scope: !1846)
!11062 = !DILocation(line: 2123, column: 9, scope: !1818)
!11063 = !DILocation(line: 2124, column: 30, scope: !1845)
!11064 = !DILocation(line: 2124, column: 33, scope: !1845)
!11065 = !DILocation(line: 2124, column: 41, scope: !1845)
!11066 = !DILocation(line: 2124, column: 13, scope: !1845)
!11067 = !DILocation(line: 2124, column: 11, scope: !1845)
!11068 = !DILocation(line: 2125, column: 9, scope: !1845)
!11069 = !DILocation(line: 2125, column: 14, scope: !11070)
!11070 = !DILexicalBlockFile(scope: !1844, file: !450, discriminator: 1)
!11071 = !DILocation(line: 2125, column: 24, scope: !1844)
!11072 = !DILocation(line: 2125, column: 54, scope: !1844)
!11073 = !DILocation(line: 2125, column: 66, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !1844, file: !450, line: 2125, column: 63)
!11075 = !DILocation(line: 2125, column: 83, scope: !11074)
!11076 = !DILocation(line: 2125, column: 63, scope: !11074)
!11077 = !DILocation(line: 2125, column: 93, scope: !11074)
!11078 = !DILocation(line: 2125, column: 63, scope: !1844)
!11079 = !DILocation(line: 2125, column: 63, scope: !11080)
!11080 = !DILexicalBlockFile(scope: !1844, file: !450, discriminator: 2)
!11081 = !DILocation(line: 2125, column: 124, scope: !11082)
!11082 = !DILexicalBlockFile(scope: !11074, file: !450, discriminator: 3)
!11083 = !DILocation(line: 2125, column: 142, scope: !11074)
!11084 = !DILocation(line: 2125, column: 152, scope: !11074)
!11085 = !DILocation(line: 2125, column: 177, scope: !11074)
!11086 = !DILocation(line: 2125, column: 108, scope: !11074)
!11087 = !DILocation(line: 2125, column: 196, scope: !11088)
!11088 = !DILexicalBlockFile(scope: !1845, file: !450, discriminator: 4)
!11089 = !DILocation(line: 2125, column: 196, scope: !1844)
!11090 = !DILocation(line: 2125, column: 196, scope: !11091)
!11091 = !DILexicalBlockFile(scope: !1844, file: !450, discriminator: 5)
!11092 = !DILocation(line: 2125, column: 213, scope: !11093)
!11093 = !DILexicalBlockFile(scope: !1845, file: !450, discriminator: 6)
!11094 = !DILocation(line: 2125, column: 211, scope: !1845)
!11095 = !DILocation(line: 2125, column: 220, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !1845, file: !450, line: 2125, column: 220)
!11097 = !DILocation(line: 2125, column: 222, scope: !11096)
!11098 = !DILocation(line: 2125, column: 220, scope: !1845)
!11099 = !DILocation(line: 2125, column: 237, scope: !11100)
!11100 = !DILexicalBlockFile(scope: !11096, file: !450, discriminator: 7)
!11101 = !DILocation(line: 2126, column: 5, scope: !1845)
!11102 = !DILocation(line: 2127, column: 9, scope: !1850)
!11103 = !DILocation(line: 2127, column: 9, scope: !1818)
!11104 = !DILocation(line: 2128, column: 30, scope: !1849)
!11105 = !DILocation(line: 2128, column: 33, scope: !1849)
!11106 = !DILocation(line: 2128, column: 41, scope: !1849)
!11107 = !DILocation(line: 2128, column: 13, scope: !1849)
!11108 = !DILocation(line: 2128, column: 11, scope: !1849)
!11109 = !DILocation(line: 2129, column: 9, scope: !1849)
!11110 = !DILocation(line: 2129, column: 14, scope: !11111)
!11111 = !DILexicalBlockFile(scope: !1848, file: !450, discriminator: 1)
!11112 = !DILocation(line: 2129, column: 24, scope: !1848)
!11113 = !DILocation(line: 2129, column: 54, scope: !1848)
!11114 = !DILocation(line: 2129, column: 66, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !1848, file: !450, line: 2129, column: 63)
!11116 = !DILocation(line: 2129, column: 83, scope: !11115)
!11117 = !DILocation(line: 2129, column: 63, scope: !11115)
!11118 = !DILocation(line: 2129, column: 93, scope: !11115)
!11119 = !DILocation(line: 2129, column: 63, scope: !1848)
!11120 = !DILocation(line: 2129, column: 63, scope: !11121)
!11121 = !DILexicalBlockFile(scope: !1848, file: !450, discriminator: 2)
!11122 = !DILocation(line: 2129, column: 124, scope: !11123)
!11123 = !DILexicalBlockFile(scope: !11115, file: !450, discriminator: 3)
!11124 = !DILocation(line: 2129, column: 142, scope: !11115)
!11125 = !DILocation(line: 2129, column: 152, scope: !11115)
!11126 = !DILocation(line: 2129, column: 177, scope: !11115)
!11127 = !DILocation(line: 2129, column: 108, scope: !11115)
!11128 = !DILocation(line: 2129, column: 196, scope: !11129)
!11129 = !DILexicalBlockFile(scope: !1849, file: !450, discriminator: 4)
!11130 = !DILocation(line: 2129, column: 196, scope: !1848)
!11131 = !DILocation(line: 2129, column: 196, scope: !11132)
!11132 = !DILexicalBlockFile(scope: !1848, file: !450, discriminator: 5)
!11133 = !DILocation(line: 2129, column: 213, scope: !11134)
!11134 = !DILexicalBlockFile(scope: !1849, file: !450, discriminator: 6)
!11135 = !DILocation(line: 2129, column: 211, scope: !1849)
!11136 = !DILocation(line: 2129, column: 220, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !1849, file: !450, line: 2129, column: 220)
!11138 = !DILocation(line: 2129, column: 222, scope: !11137)
!11139 = !DILocation(line: 2129, column: 220, scope: !1849)
!11140 = !DILocation(line: 2129, column: 237, scope: !11141)
!11141 = !DILexicalBlockFile(scope: !11137, file: !450, discriminator: 7)
!11142 = !DILocation(line: 2130, column: 5, scope: !1849)
!11143 = !DILocation(line: 2131, column: 9, scope: !1854)
!11144 = !DILocation(line: 2131, column: 9, scope: !1818)
!11145 = !DILocation(line: 2132, column: 28, scope: !1853)
!11146 = !DILocation(line: 2132, column: 31, scope: !1853)
!11147 = !DILocation(line: 2132, column: 37, scope: !1853)
!11148 = !DILocation(line: 2132, column: 13, scope: !1853)
!11149 = !DILocation(line: 2132, column: 11, scope: !1853)
!11150 = !DILocation(line: 2133, column: 9, scope: !1853)
!11151 = !DILocation(line: 2133, column: 14, scope: !11152)
!11152 = !DILexicalBlockFile(scope: !1852, file: !450, discriminator: 1)
!11153 = !DILocation(line: 2133, column: 24, scope: !1852)
!11154 = !DILocation(line: 2133, column: 54, scope: !1852)
!11155 = !DILocation(line: 2133, column: 66, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !1852, file: !450, line: 2133, column: 63)
!11157 = !DILocation(line: 2133, column: 83, scope: !11156)
!11158 = !DILocation(line: 2133, column: 63, scope: !11156)
!11159 = !DILocation(line: 2133, column: 93, scope: !11156)
!11160 = !DILocation(line: 2133, column: 63, scope: !1852)
!11161 = !DILocation(line: 2133, column: 63, scope: !11162)
!11162 = !DILexicalBlockFile(scope: !1852, file: !450, discriminator: 2)
!11163 = !DILocation(line: 2133, column: 124, scope: !11164)
!11164 = !DILexicalBlockFile(scope: !11156, file: !450, discriminator: 3)
!11165 = !DILocation(line: 2133, column: 142, scope: !11156)
!11166 = !DILocation(line: 2133, column: 152, scope: !11156)
!11167 = !DILocation(line: 2133, column: 177, scope: !11156)
!11168 = !DILocation(line: 2133, column: 108, scope: !11156)
!11169 = !DILocation(line: 2133, column: 196, scope: !11170)
!11170 = !DILexicalBlockFile(scope: !1853, file: !450, discriminator: 4)
!11171 = !DILocation(line: 2133, column: 196, scope: !1852)
!11172 = !DILocation(line: 2133, column: 196, scope: !11173)
!11173 = !DILexicalBlockFile(scope: !1852, file: !450, discriminator: 5)
!11174 = !DILocation(line: 2133, column: 213, scope: !11175)
!11175 = !DILexicalBlockFile(scope: !1853, file: !450, discriminator: 6)
!11176 = !DILocation(line: 2133, column: 211, scope: !1853)
!11177 = !DILocation(line: 2133, column: 220, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !1853, file: !450, line: 2133, column: 220)
!11179 = !DILocation(line: 2133, column: 222, scope: !11178)
!11180 = !DILocation(line: 2133, column: 220, scope: !1853)
!11181 = !DILocation(line: 2133, column: 237, scope: !11182)
!11182 = !DILexicalBlockFile(scope: !11178, file: !450, discriminator: 7)
!11183 = !DILocation(line: 2134, column: 5, scope: !1853)
!11184 = !DILocation(line: 2135, column: 9, scope: !1858)
!11185 = !DILocation(line: 2135, column: 9, scope: !1818)
!11186 = !DILocation(line: 2136, column: 27, scope: !1857)
!11187 = !DILocation(line: 2136, column: 30, scope: !1857)
!11188 = !DILocation(line: 2136, column: 35, scope: !1857)
!11189 = !DILocation(line: 2136, column: 13, scope: !1857)
!11190 = !DILocation(line: 2136, column: 11, scope: !1857)
!11191 = !DILocation(line: 2137, column: 9, scope: !1857)
!11192 = !DILocation(line: 2137, column: 14, scope: !11193)
!11193 = !DILexicalBlockFile(scope: !1856, file: !450, discriminator: 1)
!11194 = !DILocation(line: 2137, column: 24, scope: !1856)
!11195 = !DILocation(line: 2137, column: 54, scope: !1856)
!11196 = !DILocation(line: 2137, column: 66, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !1856, file: !450, line: 2137, column: 63)
!11198 = !DILocation(line: 2137, column: 83, scope: !11197)
!11199 = !DILocation(line: 2137, column: 63, scope: !11197)
!11200 = !DILocation(line: 2137, column: 93, scope: !11197)
!11201 = !DILocation(line: 2137, column: 63, scope: !1856)
!11202 = !DILocation(line: 2137, column: 63, scope: !11203)
!11203 = !DILexicalBlockFile(scope: !1856, file: !450, discriminator: 2)
!11204 = !DILocation(line: 2137, column: 124, scope: !11205)
!11205 = !DILexicalBlockFile(scope: !11197, file: !450, discriminator: 3)
!11206 = !DILocation(line: 2137, column: 142, scope: !11197)
!11207 = !DILocation(line: 2137, column: 152, scope: !11197)
!11208 = !DILocation(line: 2137, column: 177, scope: !11197)
!11209 = !DILocation(line: 2137, column: 108, scope: !11197)
!11210 = !DILocation(line: 2137, column: 196, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !1857, file: !450, discriminator: 4)
!11212 = !DILocation(line: 2137, column: 196, scope: !1856)
!11213 = !DILocation(line: 2137, column: 196, scope: !11214)
!11214 = !DILexicalBlockFile(scope: !1856, file: !450, discriminator: 5)
!11215 = !DILocation(line: 2137, column: 213, scope: !11216)
!11216 = !DILexicalBlockFile(scope: !1857, file: !450, discriminator: 6)
!11217 = !DILocation(line: 2137, column: 211, scope: !1857)
!11218 = !DILocation(line: 2137, column: 220, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !1857, file: !450, line: 2137, column: 220)
!11220 = !DILocation(line: 2137, column: 222, scope: !11219)
!11221 = !DILocation(line: 2137, column: 220, scope: !1857)
!11222 = !DILocation(line: 2137, column: 237, scope: !11223)
!11223 = !DILexicalBlockFile(scope: !11219, file: !450, discriminator: 7)
!11224 = !DILocation(line: 2138, column: 5, scope: !1857)
!11225 = !DILocation(line: 2139, column: 9, scope: !1862)
!11226 = !DILocation(line: 2139, column: 9, scope: !1818)
!11227 = !DILocation(line: 2140, column: 28, scope: !1861)
!11228 = !DILocation(line: 2140, column: 31, scope: !1861)
!11229 = !DILocation(line: 2140, column: 37, scope: !1861)
!11230 = !DILocation(line: 2140, column: 13, scope: !1861)
!11231 = !DILocation(line: 2140, column: 11, scope: !1861)
!11232 = !DILocation(line: 2141, column: 9, scope: !1861)
!11233 = !DILocation(line: 2141, column: 14, scope: !11234)
!11234 = !DILexicalBlockFile(scope: !1860, file: !450, discriminator: 1)
!11235 = !DILocation(line: 2141, column: 24, scope: !1860)
!11236 = !DILocation(line: 2141, column: 54, scope: !1860)
!11237 = !DILocation(line: 2141, column: 66, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !1860, file: !450, line: 2141, column: 63)
!11239 = !DILocation(line: 2141, column: 83, scope: !11238)
!11240 = !DILocation(line: 2141, column: 63, scope: !11238)
!11241 = !DILocation(line: 2141, column: 93, scope: !11238)
!11242 = !DILocation(line: 2141, column: 63, scope: !1860)
!11243 = !DILocation(line: 2141, column: 63, scope: !11244)
!11244 = !DILexicalBlockFile(scope: !1860, file: !450, discriminator: 2)
!11245 = !DILocation(line: 2141, column: 124, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !11238, file: !450, discriminator: 3)
!11247 = !DILocation(line: 2141, column: 142, scope: !11238)
!11248 = !DILocation(line: 2141, column: 152, scope: !11238)
!11249 = !DILocation(line: 2141, column: 177, scope: !11238)
!11250 = !DILocation(line: 2141, column: 108, scope: !11238)
!11251 = !DILocation(line: 2141, column: 196, scope: !11252)
!11252 = !DILexicalBlockFile(scope: !1861, file: !450, discriminator: 4)
!11253 = !DILocation(line: 2141, column: 196, scope: !1860)
!11254 = !DILocation(line: 2141, column: 196, scope: !11255)
!11255 = !DILexicalBlockFile(scope: !1860, file: !450, discriminator: 5)
!11256 = !DILocation(line: 2141, column: 213, scope: !11257)
!11257 = !DILexicalBlockFile(scope: !1861, file: !450, discriminator: 6)
!11258 = !DILocation(line: 2141, column: 211, scope: !1861)
!11259 = !DILocation(line: 2141, column: 220, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !1861, file: !450, line: 2141, column: 220)
!11261 = !DILocation(line: 2141, column: 222, scope: !11260)
!11262 = !DILocation(line: 2141, column: 220, scope: !1861)
!11263 = !DILocation(line: 2141, column: 237, scope: !11264)
!11264 = !DILexicalBlockFile(scope: !11260, file: !450, discriminator: 7)
!11265 = !DILocation(line: 2142, column: 5, scope: !1861)
!11266 = !DILocation(line: 2143, column: 9, scope: !1865)
!11267 = !DILocation(line: 2143, column: 9, scope: !1818)
!11268 = !DILocation(line: 2145, column: 9, scope: !1864)
!11269 = !DILocation(line: 2145, column: 16, scope: !1864)
!11270 = !DILocation(line: 2145, column: 33, scope: !1864)
!11271 = !DILocation(line: 2145, column: 27, scope: !1864)
!11272 = !DILocation(line: 2146, column: 9, scope: !1864)
!11273 = !DILocation(line: 2146, column: 13, scope: !1864)
!11274 = !DILocation(line: 2147, column: 9, scope: !1864)
!11275 = !DILocation(line: 2147, column: 19, scope: !1864)
!11276 = !DILocation(line: 2149, column: 26, scope: !1864)
!11277 = !DILocation(line: 2149, column: 20, scope: !1864)
!11278 = !DILocation(line: 2149, column: 18, scope: !1864)
!11279 = !DILocation(line: 2150, column: 18, scope: !1873)
!11280 = !DILocation(line: 2150, column: 29, scope: !1873)
!11281 = !DILocation(line: 2150, column: 27, scope: !1873)
!11282 = !DILocation(line: 2150, column: 13, scope: !1873)
!11283 = !DILocation(line: 2150, column: 42, scope: !1873)
!11284 = !DILocation(line: 2150, column: 13, scope: !1864)
!11285 = !DILocation(line: 2156, column: 26, scope: !1872)
!11286 = !DILocation(line: 2156, column: 29, scope: !1872)
!11287 = !DILocation(line: 2156, column: 13, scope: !1872)
!11288 = !DILocation(line: 2156, column: 11, scope: !1872)
!11289 = !DILocation(line: 2157, column: 17, scope: !1871)
!11290 = !DILocation(line: 2157, column: 22, scope: !1871)
!11291 = !DILocation(line: 2157, column: 17, scope: !1872)
!11292 = !DILocation(line: 2158, column: 17, scope: !1870)
!11293 = !DILocation(line: 2158, column: 22, scope: !11294)
!11294 = !DILexicalBlockFile(scope: !1869, file: !450, discriminator: 1)
!11295 = !DILocation(line: 2158, column: 32, scope: !1869)
!11296 = !DILocation(line: 2158, column: 62, scope: !1869)
!11297 = !DILocation(line: 2158, column: 74, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !1869, file: !450, line: 2158, column: 71)
!11299 = !DILocation(line: 2158, column: 91, scope: !11298)
!11300 = !DILocation(line: 2158, column: 71, scope: !11298)
!11301 = !DILocation(line: 2158, column: 101, scope: !11298)
!11302 = !DILocation(line: 2158, column: 71, scope: !1869)
!11303 = !DILocation(line: 2158, column: 71, scope: !11304)
!11304 = !DILexicalBlockFile(scope: !1869, file: !450, discriminator: 2)
!11305 = !DILocation(line: 2158, column: 132, scope: !11306)
!11306 = !DILexicalBlockFile(scope: !11298, file: !450, discriminator: 3)
!11307 = !DILocation(line: 2158, column: 150, scope: !11298)
!11308 = !DILocation(line: 2158, column: 160, scope: !11298)
!11309 = !DILocation(line: 2158, column: 185, scope: !11298)
!11310 = !DILocation(line: 2158, column: 116, scope: !11298)
!11311 = !DILocation(line: 2158, column: 204, scope: !11312)
!11312 = !DILexicalBlockFile(scope: !1870, file: !450, discriminator: 4)
!11313 = !DILocation(line: 2158, column: 204, scope: !1869)
!11314 = !DILocation(line: 2158, column: 204, scope: !11315)
!11315 = !DILexicalBlockFile(scope: !1869, file: !450, discriminator: 5)
!11316 = !DILocation(line: 2159, column: 17, scope: !1870)
!11317 = !DILocation(line: 2161, column: 40, scope: !1872)
!11318 = !DILocation(line: 2161, column: 24, scope: !1872)
!11319 = !DILocation(line: 2161, column: 22, scope: !1872)
!11320 = !DILocation(line: 2162, column: 13, scope: !1872)
!11321 = !DILocation(line: 2162, column: 18, scope: !11322)
!11322 = !DILexicalBlockFile(scope: !1875, file: !450, discriminator: 1)
!11323 = !DILocation(line: 2162, column: 28, scope: !1875)
!11324 = !DILocation(line: 2162, column: 58, scope: !1875)
!11325 = !DILocation(line: 2162, column: 73, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !1875, file: !450, line: 2162, column: 70)
!11327 = !DILocation(line: 2162, column: 90, scope: !11326)
!11328 = !DILocation(line: 2162, column: 70, scope: !11326)
!11329 = !DILocation(line: 2162, column: 100, scope: !11326)
!11330 = !DILocation(line: 2162, column: 70, scope: !1875)
!11331 = !DILocation(line: 2162, column: 70, scope: !11332)
!11332 = !DILexicalBlockFile(scope: !1875, file: !450, discriminator: 2)
!11333 = !DILocation(line: 2162, column: 131, scope: !11334)
!11334 = !DILexicalBlockFile(scope: !11326, file: !450, discriminator: 3)
!11335 = !DILocation(line: 2162, column: 149, scope: !11326)
!11336 = !DILocation(line: 2162, column: 159, scope: !11326)
!11337 = !DILocation(line: 2162, column: 184, scope: !11326)
!11338 = !DILocation(line: 2162, column: 115, scope: !11326)
!11339 = !DILocation(line: 2162, column: 203, scope: !11340)
!11340 = !DILexicalBlockFile(scope: !1872, file: !450, discriminator: 4)
!11341 = !DILocation(line: 2162, column: 203, scope: !1875)
!11342 = !DILocation(line: 2162, column: 203, scope: !11343)
!11343 = !DILexicalBlockFile(scope: !1875, file: !450, discriminator: 5)
!11344 = !DILocation(line: 2163, column: 17, scope: !1879)
!11345 = !DILocation(line: 2163, column: 26, scope: !1879)
!11346 = !DILocation(line: 2163, column: 17, scope: !1872)
!11347 = !DILocation(line: 2164, column: 17, scope: !1878)
!11348 = !DILocation(line: 2164, column: 22, scope: !11349)
!11349 = !DILexicalBlockFile(scope: !1877, file: !450, discriminator: 1)
!11350 = !DILocation(line: 2164, column: 32, scope: !1877)
!11351 = !DILocation(line: 2164, column: 62, scope: !1877)
!11352 = !DILocation(line: 2164, column: 74, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !1877, file: !450, line: 2164, column: 71)
!11354 = !DILocation(line: 2164, column: 91, scope: !11353)
!11355 = !DILocation(line: 2164, column: 71, scope: !11353)
!11356 = !DILocation(line: 2164, column: 101, scope: !11353)
!11357 = !DILocation(line: 2164, column: 71, scope: !1877)
!11358 = !DILocation(line: 2164, column: 71, scope: !11359)
!11359 = !DILexicalBlockFile(scope: !1877, file: !450, discriminator: 2)
!11360 = !DILocation(line: 2164, column: 132, scope: !11361)
!11361 = !DILexicalBlockFile(scope: !11353, file: !450, discriminator: 3)
!11362 = !DILocation(line: 2164, column: 150, scope: !11353)
!11363 = !DILocation(line: 2164, column: 160, scope: !11353)
!11364 = !DILocation(line: 2164, column: 185, scope: !11353)
!11365 = !DILocation(line: 2164, column: 116, scope: !11353)
!11366 = !DILocation(line: 2164, column: 204, scope: !11367)
!11367 = !DILexicalBlockFile(scope: !1878, file: !450, discriminator: 4)
!11368 = !DILocation(line: 2164, column: 204, scope: !1877)
!11369 = !DILocation(line: 2164, column: 204, scope: !11370)
!11370 = !DILexicalBlockFile(scope: !1877, file: !450, discriminator: 5)
!11371 = !DILocation(line: 2165, column: 17, scope: !1878)
!11372 = !DILocation(line: 2167, column: 37, scope: !1872)
!11373 = !DILocation(line: 2167, column: 51, scope: !1872)
!11374 = !DILocation(line: 2167, column: 49, scope: !1872)
!11375 = !DILocation(line: 2167, column: 61, scope: !1872)
!11376 = !DILocation(line: 2167, column: 30, scope: !1872)
!11377 = !DILocation(line: 2167, column: 28, scope: !1872)
!11378 = !DILocation(line: 2167, column: 70, scope: !1872)
!11379 = !DILocation(line: 2167, column: 68, scope: !1872)
!11380 = !DILocation(line: 2167, column: 22, scope: !1872)
!11381 = !DILocation(line: 2168, column: 9, scope: !1872)
!11382 = !DILocation(line: 2170, column: 38, scope: !1864)
!11383 = !DILocation(line: 2170, column: 32, scope: !1864)
!11384 = !DILocation(line: 2170, column: 16, scope: !1864)
!11385 = !DILocation(line: 2170, column: 14, scope: !1864)
!11386 = !DILocation(line: 2172, column: 13, scope: !1883)
!11387 = !DILocation(line: 2172, column: 18, scope: !1883)
!11388 = !DILocation(line: 2172, column: 13, scope: !1864)
!11389 = !DILocation(line: 2173, column: 13, scope: !1882)
!11390 = !DILocation(line: 2173, column: 18, scope: !11391)
!11391 = !DILexicalBlockFile(scope: !1881, file: !450, discriminator: 1)
!11392 = !DILocation(line: 2173, column: 28, scope: !1881)
!11393 = !DILocation(line: 2173, column: 58, scope: !1881)
!11394 = !DILocation(line: 2173, column: 70, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !1881, file: !450, line: 2173, column: 67)
!11396 = !DILocation(line: 2173, column: 87, scope: !11395)
!11397 = !DILocation(line: 2173, column: 67, scope: !11395)
!11398 = !DILocation(line: 2173, column: 97, scope: !11395)
!11399 = !DILocation(line: 2173, column: 67, scope: !1881)
!11400 = !DILocation(line: 2173, column: 67, scope: !11401)
!11401 = !DILexicalBlockFile(scope: !1881, file: !450, discriminator: 2)
!11402 = !DILocation(line: 2173, column: 128, scope: !11403)
!11403 = !DILexicalBlockFile(scope: !11395, file: !450, discriminator: 3)
!11404 = !DILocation(line: 2173, column: 146, scope: !11395)
!11405 = !DILocation(line: 2173, column: 156, scope: !11395)
!11406 = !DILocation(line: 2173, column: 181, scope: !11395)
!11407 = !DILocation(line: 2173, column: 112, scope: !11395)
!11408 = !DILocation(line: 2173, column: 200, scope: !11409)
!11409 = !DILexicalBlockFile(scope: !1882, file: !450, discriminator: 4)
!11410 = !DILocation(line: 2173, column: 200, scope: !1881)
!11411 = !DILocation(line: 2173, column: 200, scope: !11412)
!11412 = !DILexicalBlockFile(scope: !1881, file: !450, discriminator: 5)
!11413 = !DILocation(line: 2174, column: 13, scope: !1882)
!11414 = !DILocation(line: 2176, column: 26, scope: !1864)
!11415 = !DILocation(line: 2176, column: 29, scope: !1864)
!11416 = !DILocation(line: 2176, column: 13, scope: !1864)
!11417 = !DILocation(line: 2176, column: 11, scope: !1864)
!11418 = !DILocation(line: 2177, column: 9, scope: !1864)
!11419 = !DILocation(line: 2177, column: 14, scope: !11420)
!11420 = !DILexicalBlockFile(scope: !1885, file: !450, discriminator: 1)
!11421 = !DILocation(line: 2177, column: 24, scope: !1885)
!11422 = !DILocation(line: 2177, column: 54, scope: !1885)
!11423 = !DILocation(line: 2177, column: 69, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !1885, file: !450, line: 2177, column: 66)
!11425 = !DILocation(line: 2177, column: 86, scope: !11424)
!11426 = !DILocation(line: 2177, column: 66, scope: !11424)
!11427 = !DILocation(line: 2177, column: 96, scope: !11424)
!11428 = !DILocation(line: 2177, column: 66, scope: !1885)
!11429 = !DILocation(line: 2177, column: 66, scope: !11430)
!11430 = !DILexicalBlockFile(scope: !1885, file: !450, discriminator: 2)
!11431 = !DILocation(line: 2177, column: 127, scope: !11432)
!11432 = !DILexicalBlockFile(scope: !11424, file: !450, discriminator: 3)
!11433 = !DILocation(line: 2177, column: 145, scope: !11424)
!11434 = !DILocation(line: 2177, column: 155, scope: !11424)
!11435 = !DILocation(line: 2177, column: 180, scope: !11424)
!11436 = !DILocation(line: 2177, column: 111, scope: !11424)
!11437 = !DILocation(line: 2177, column: 199, scope: !11438)
!11438 = !DILexicalBlockFile(scope: !1864, file: !450, discriminator: 4)
!11439 = !DILocation(line: 2177, column: 199, scope: !1885)
!11440 = !DILocation(line: 2177, column: 199, scope: !11441)
!11441 = !DILexicalBlockFile(scope: !1885, file: !450, discriminator: 5)
!11442 = !DILocation(line: 2178, column: 9, scope: !1864)
!11443 = !DILocation(line: 2178, column: 14, scope: !11444)
!11444 = !DILexicalBlockFile(scope: !1887, file: !450, discriminator: 1)
!11445 = !DILocation(line: 2178, column: 24, scope: !1887)
!11446 = !DILocation(line: 2178, column: 54, scope: !1887)
!11447 = !DILocation(line: 2178, column: 66, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !1887, file: !450, line: 2178, column: 63)
!11449 = !DILocation(line: 2178, column: 83, scope: !11448)
!11450 = !DILocation(line: 2178, column: 63, scope: !11448)
!11451 = !DILocation(line: 2178, column: 93, scope: !11448)
!11452 = !DILocation(line: 2178, column: 63, scope: !1887)
!11453 = !DILocation(line: 2178, column: 63, scope: !11454)
!11454 = !DILexicalBlockFile(scope: !1887, file: !450, discriminator: 2)
!11455 = !DILocation(line: 2178, column: 124, scope: !11456)
!11456 = !DILexicalBlockFile(scope: !11448, file: !450, discriminator: 3)
!11457 = !DILocation(line: 2178, column: 142, scope: !11448)
!11458 = !DILocation(line: 2178, column: 152, scope: !11448)
!11459 = !DILocation(line: 2178, column: 177, scope: !11448)
!11460 = !DILocation(line: 2178, column: 108, scope: !11448)
!11461 = !DILocation(line: 2178, column: 196, scope: !11438)
!11462 = !DILocation(line: 2178, column: 196, scope: !1887)
!11463 = !DILocation(line: 2178, column: 196, scope: !11464)
!11464 = !DILexicalBlockFile(scope: !1887, file: !450, discriminator: 5)
!11465 = !DILocation(line: 2178, column: 213, scope: !11466)
!11466 = !DILexicalBlockFile(scope: !1864, file: !450, discriminator: 6)
!11467 = !DILocation(line: 2178, column: 211, scope: !1864)
!11468 = !DILocation(line: 2178, column: 220, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !1864, file: !450, line: 2178, column: 220)
!11470 = !DILocation(line: 2178, column: 222, scope: !11469)
!11471 = !DILocation(line: 2178, column: 220, scope: !1864)
!11472 = !DILocation(line: 2178, column: 237, scope: !11469)
!11473 = !DILocation(line: 2179, column: 5, scope: !1865)
!11474 = !DILocation(line: 2179, column: 5, scope: !11475)
!11475 = !DILexicalBlockFile(scope: !1865, file: !450, discriminator: 1)
!11476 = !DILocation(line: 2179, column: 5, scope: !1864)
!11477 = !DILocation(line: 2181, column: 37, scope: !1818)
!11478 = !DILocation(line: 2181, column: 40, scope: !1818)
!11479 = !DILocation(line: 2181, column: 12, scope: !1818)
!11480 = !DILocation(line: 2181, column: 10, scope: !1818)
!11481 = !DILocation(line: 2182, column: 5, scope: !1818)
!11482 = !DILocation(line: 2182, column: 10, scope: !11483)
!11483 = !DILexicalBlockFile(scope: !1889, file: !450, discriminator: 1)
!11484 = !DILocation(line: 2182, column: 20, scope: !1889)
!11485 = !DILocation(line: 2182, column: 50, scope: !1889)
!11486 = !DILocation(line: 2182, column: 62, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !1889, file: !450, line: 2182, column: 59)
!11488 = !DILocation(line: 2182, column: 79, scope: !11487)
!11489 = !DILocation(line: 2182, column: 59, scope: !11487)
!11490 = !DILocation(line: 2182, column: 89, scope: !11487)
!11491 = !DILocation(line: 2182, column: 59, scope: !1889)
!11492 = !DILocation(line: 2182, column: 59, scope: !11493)
!11493 = !DILexicalBlockFile(scope: !1889, file: !450, discriminator: 2)
!11494 = !DILocation(line: 2182, column: 120, scope: !11495)
!11495 = !DILexicalBlockFile(scope: !11487, file: !450, discriminator: 3)
!11496 = !DILocation(line: 2182, column: 138, scope: !11487)
!11497 = !DILocation(line: 2182, column: 148, scope: !11487)
!11498 = !DILocation(line: 2182, column: 173, scope: !11487)
!11499 = !DILocation(line: 2182, column: 104, scope: !11487)
!11500 = !DILocation(line: 2182, column: 192, scope: !11501)
!11501 = !DILexicalBlockFile(scope: !1818, file: !450, discriminator: 4)
!11502 = !DILocation(line: 2182, column: 192, scope: !1889)
!11503 = !DILocation(line: 2182, column: 192, scope: !11504)
!11504 = !DILexicalBlockFile(scope: !1889, file: !450, discriminator: 5)
!11505 = !DILocation(line: 2182, column: 192, scope: !11506)
!11506 = !DILexicalBlockFile(scope: !1889, file: !450, discriminator: 6)
!11507 = !DILocation(line: 2184, column: 12, scope: !1818)
!11508 = !DILocation(line: 2184, column: 5, scope: !1818)
!11509 = !DILocation(line: 2187, column: 1, scope: !1818)
!11510 = !DILocation(line: 1720, column: 21, scope: !1572)
!11511 = !DILocation(line: 1720, column: 37, scope: !1572)
!11512 = !DILocation(line: 1722, column: 5, scope: !1572)
!11513 = !DILocation(line: 1722, column: 15, scope: !1572)
!11514 = !DILocation(line: 1724, column: 24, scope: !1579)
!11515 = !DILocation(line: 1724, column: 32, scope: !1579)
!11516 = !DILocation(line: 1724, column: 41, scope: !1579)
!11517 = !DILocation(line: 1724, column: 68, scope: !1579)
!11518 = !DILocation(line: 1724, column: 102, scope: !11519)
!11519 = !DILexicalBlockFile(scope: !1579, file: !450, discriminator: 2)
!11520 = !DILocation(line: 1724, column: 110, scope: !1579)
!11521 = !DILocation(line: 1724, column: 71, scope: !1579)
!11522 = !DILocation(line: 1724, column: 146, scope: !1579)
!11523 = !DILocation(line: 1724, column: 164, scope: !11524)
!11524 = !DILexicalBlockFile(scope: !11525, file: !450, discriminator: 3)
!11525 = !DILexicalBlockFile(scope: !1579, file: !450, discriminator: 1)
!11526 = !DILocation(line: 1724, column: 173, scope: !1579)
!11527 = !DILocation(line: 1724, column: 182, scope: !1579)
!11528 = !DILocation(line: 1724, column: 209, scope: !1579)
!11529 = !DILocation(line: 1724, column: 243, scope: !11530)
!11530 = !DILexicalBlockFile(scope: !1579, file: !450, discriminator: 4)
!11531 = !DILocation(line: 1724, column: 252, scope: !1579)
!11532 = !DILocation(line: 1724, column: 212, scope: !1579)
!11533 = !DILocation(line: 1724, column: 9, scope: !1572)
!11534 = !DILocation(line: 1729, column: 9, scope: !1578)
!11535 = !DILocation(line: 1729, column: 13, scope: !1578)
!11536 = !DILocation(line: 1729, column: 43, scope: !1578)
!11537 = !DILocation(line: 1729, column: 22, scope: !1578)
!11538 = !DILocation(line: 1729, column: 51, scope: !1578)
!11539 = !DILocation(line: 1729, column: 82, scope: !1578)
!11540 = !DILocation(line: 1729, column: 61, scope: !1578)
!11541 = !DILocation(line: 1729, column: 91, scope: !1578)
!11542 = !DILocation(line: 1729, column: 57, scope: !1578)
!11543 = !DILocation(line: 1730, column: 9, scope: !1578)
!11544 = !DILocation(line: 1730, column: 13, scope: !1578)
!11545 = !DILocation(line: 1730, column: 46, scope: !1578)
!11546 = !DILocation(line: 1730, column: 25, scope: !1578)
!11547 = !DILocation(line: 1730, column: 54, scope: !1578)
!11548 = !DILocation(line: 1730, column: 88, scope: !1578)
!11549 = !DILocation(line: 1730, column: 67, scope: !1578)
!11550 = !DILocation(line: 1730, column: 97, scope: !1578)
!11551 = !DILocation(line: 1730, column: 63, scope: !1578)
!11552 = !DILocation(line: 1731, column: 9, scope: !1578)
!11553 = !DILocation(line: 1731, column: 13, scope: !1578)
!11554 = !DILocation(line: 1731, column: 51, scope: !1578)
!11555 = !DILocation(line: 1731, column: 30, scope: !1578)
!11556 = !DILocation(line: 1731, column: 59, scope: !1578)
!11557 = !DILocation(line: 1732, column: 51, scope: !1578)
!11558 = !DILocation(line: 1732, column: 30, scope: !1578)
!11559 = !DILocation(line: 1732, column: 60, scope: !1578)
!11560 = !DILocation(line: 1731, column: 73, scope: !1578)
!11561 = !DILocation(line: 1733, column: 31, scope: !1578)
!11562 = !DILocation(line: 1733, column: 37, scope: !1578)
!11563 = !DILocation(line: 1733, column: 46, scope: !1578)
!11564 = !DILocation(line: 1733, column: 18, scope: !1578)
!11565 = !DILocation(line: 1733, column: 16, scope: !1578)
!11566 = !DILocation(line: 1734, column: 5, scope: !1579)
!11567 = !DILocation(line: 1734, column: 5, scope: !1578)
!11568 = !DILocation(line: 1736, column: 9, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !1572, file: !450, line: 1736, column: 9)
!11570 = !DILocation(line: 1736, column: 16, scope: !11569)
!11571 = !DILocation(line: 1736, column: 9, scope: !1572)
!11572 = !DILocation(line: 1737, column: 25, scope: !11569)
!11573 = !DILocation(line: 1737, column: 35, scope: !11569)
!11574 = !DILocation(line: 1737, column: 44, scope: !11569)
!11575 = !DILocation(line: 1737, column: 9, scope: !11569)
!11576 = !DILocation(line: 1738, column: 12, scope: !1572)
!11577 = !DILocation(line: 1739, column: 1, scope: !1572)
!11578 = !DILocation(line: 1738, column: 5, scope: !1572)
!11579 = !DILocation(line: 1841, column: 26, scope: !1582)
!11580 = !DILocation(line: 1841, column: 42, scope: !1582)
!11581 = !DILocation(line: 1843, column: 5, scope: !1582)
!11582 = !DILocation(line: 1843, column: 15, scope: !1582)
!11583 = !DILocation(line: 1845, column: 24, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !1582, file: !450, line: 1845, column: 9)
!11585 = !DILocation(line: 1845, column: 32, scope: !11584)
!11586 = !DILocation(line: 1845, column: 41, scope: !11584)
!11587 = !DILocation(line: 1845, column: 68, scope: !11584)
!11588 = !DILocation(line: 1845, column: 102, scope: !11589)
!11589 = !DILexicalBlockFile(scope: !11584, file: !450, discriminator: 1)
!11590 = !DILocation(line: 1845, column: 110, scope: !11584)
!11591 = !DILocation(line: 1845, column: 71, scope: !11584)
!11592 = !DILocation(line: 1845, column: 9, scope: !1582)
!11593 = !DILocation(line: 1847, column: 30, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11595, file: !450, line: 1847, column: 13)
!11595 = distinct !DILexicalBlock(scope: !11584, file: !450, line: 1845, column: 147)
!11596 = !DILocation(line: 1847, column: 39, scope: !11594)
!11597 = !DILocation(line: 1847, column: 50, scope: !11594)
!11598 = !DILocation(line: 1847, column: 59, scope: !11594)
!11599 = !DILocation(line: 1847, column: 76, scope: !11594)
!11600 = !DILocation(line: 1847, column: 13, scope: !11595)
!11601 = !DILocation(line: 1848, column: 45, scope: !11594)
!11602 = !DILocation(line: 1849, column: 50, scope: !11594)
!11603 = !DILocation(line: 1849, column: 29, scope: !11594)
!11604 = !DILocation(line: 1848, column: 22, scope: !11594)
!11605 = !DILocation(line: 1848, column: 20, scope: !11594)
!11606 = !DILocation(line: 1848, column: 13, scope: !11594)
!11607 = !DILocation(line: 1850, column: 33, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11594, file: !450, line: 1850, column: 18)
!11609 = !DILocation(line: 1850, column: 42, scope: !11608)
!11610 = !DILocation(line: 1850, column: 51, scope: !11608)
!11611 = !DILocation(line: 1850, column: 70, scope: !11608)
!11612 = !DILocation(line: 1850, column: 104, scope: !11613)
!11613 = !DILexicalBlockFile(scope: !11608, file: !450, discriminator: 1)
!11614 = !DILocation(line: 1850, column: 113, scope: !11608)
!11615 = !DILocation(line: 1850, column: 73, scope: !11608)
!11616 = !DILocation(line: 1850, column: 18, scope: !11594)
!11617 = !DILocation(line: 1851, column: 47, scope: !11608)
!11618 = !DILocation(line: 1852, column: 50, scope: !11608)
!11619 = !DILocation(line: 1852, column: 29, scope: !11608)
!11620 = !DILocation(line: 1851, column: 22, scope: !11608)
!11621 = !DILocation(line: 1851, column: 20, scope: !11608)
!11622 = !DILocation(line: 1851, column: 13, scope: !11608)
!11623 = !DILocation(line: 1853, column: 5, scope: !11595)
!11624 = !DILocation(line: 1854, column: 31, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11584, file: !450, line: 1854, column: 14)
!11626 = !DILocation(line: 1854, column: 39, scope: !11625)
!11627 = !DILocation(line: 1854, column: 50, scope: !11625)
!11628 = !DILocation(line: 1854, column: 59, scope: !11625)
!11629 = !DILocation(line: 1854, column: 76, scope: !11625)
!11630 = !DILocation(line: 1854, column: 14, scope: !11584)
!11631 = !DILocation(line: 1855, column: 41, scope: !11625)
!11632 = !DILocation(line: 1856, column: 46, scope: !11625)
!11633 = !DILocation(line: 1856, column: 25, scope: !11625)
!11634 = !DILocation(line: 1855, column: 18, scope: !11625)
!11635 = !DILocation(line: 1855, column: 16, scope: !11625)
!11636 = !DILocation(line: 1855, column: 9, scope: !11625)
!11637 = !DILocation(line: 1857, column: 29, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11625, file: !450, line: 1857, column: 14)
!11639 = !DILocation(line: 1857, column: 37, scope: !11638)
!11640 = !DILocation(line: 1857, column: 46, scope: !11638)
!11641 = !DILocation(line: 1857, column: 65, scope: !11638)
!11642 = !DILocation(line: 1857, column: 99, scope: !11643)
!11643 = !DILexicalBlockFile(scope: !11638, file: !450, discriminator: 1)
!11644 = !DILocation(line: 1857, column: 107, scope: !11638)
!11645 = !DILocation(line: 1857, column: 68, scope: !11638)
!11646 = !DILocation(line: 1857, column: 14, scope: !11625)
!11647 = !DILocation(line: 1858, column: 43, scope: !11638)
!11648 = !DILocation(line: 1859, column: 46, scope: !11638)
!11649 = !DILocation(line: 1859, column: 25, scope: !11638)
!11650 = !DILocation(line: 1858, column: 18, scope: !11638)
!11651 = !DILocation(line: 1858, column: 16, scope: !11638)
!11652 = !DILocation(line: 1858, column: 9, scope: !11638)
!11653 = !DILocation(line: 1861, column: 9, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !1582, file: !450, line: 1861, column: 9)
!11655 = !DILocation(line: 1861, column: 16, scope: !11654)
!11656 = !DILocation(line: 1861, column: 9, scope: !1582)
!11657 = !DILocation(line: 1862, column: 25, scope: !11654)
!11658 = !DILocation(line: 1862, column: 35, scope: !11654)
!11659 = !DILocation(line: 1862, column: 44, scope: !11654)
!11660 = !DILocation(line: 1862, column: 9, scope: !11654)
!11661 = !DILocation(line: 1863, column: 12, scope: !1582)
!11662 = !DILocation(line: 1864, column: 1, scope: !1582)
!11663 = !DILocation(line: 1863, column: 5, scope: !1582)
!11664 = !DILocation(line: 1912, column: 27, scope: !1660)
!11665 = !DILocation(line: 1912, column: 43, scope: !1660)
!11666 = !DILocation(line: 1914, column: 5, scope: !1660)
!11667 = !DILocation(line: 1914, column: 15, scope: !1660)
!11668 = !DILocation(line: 1915, column: 5, scope: !1660)
!11669 = !DILocation(line: 1915, column: 15, scope: !1660)
!11670 = !DILocation(line: 1916, column: 5, scope: !1660)
!11671 = !DILocation(line: 1916, column: 15, scope: !1660)
!11672 = !DILocation(line: 1917, column: 5, scope: !1660)
!11673 = !DILocation(line: 1917, column: 15, scope: !1660)
!11674 = !DILocation(line: 1919, column: 25, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1919, column: 9)
!11676 = !DILocation(line: 1919, column: 33, scope: !11675)
!11677 = !DILocation(line: 1919, column: 42, scope: !11675)
!11678 = !DILocation(line: 1919, column: 69, scope: !11675)
!11679 = !DILocation(line: 1919, column: 103, scope: !11680)
!11680 = !DILexicalBlockFile(scope: !11675, file: !450, discriminator: 2)
!11681 = !DILocation(line: 1919, column: 111, scope: !11675)
!11682 = !DILocation(line: 1919, column: 72, scope: !11675)
!11683 = !DILocation(line: 1919, column: 147, scope: !11675)
!11684 = !DILocation(line: 1919, column: 166, scope: !11685)
!11685 = !DILexicalBlockFile(scope: !11686, file: !450, discriminator: 3)
!11686 = !DILexicalBlockFile(scope: !11675, file: !450, discriminator: 1)
!11687 = !DILocation(line: 1919, column: 175, scope: !11675)
!11688 = !DILocation(line: 1919, column: 184, scope: !11675)
!11689 = !DILocation(line: 1919, column: 211, scope: !11675)
!11690 = !DILocation(line: 1919, column: 245, scope: !11691)
!11691 = !DILexicalBlockFile(scope: !11675, file: !450, discriminator: 4)
!11692 = !DILocation(line: 1919, column: 254, scope: !11675)
!11693 = !DILocation(line: 1919, column: 214, scope: !11675)
!11694 = !DILocation(line: 1919, column: 9, scope: !1660)
!11695 = !DILocation(line: 1920, column: 72, scope: !11675)
!11696 = !DILocation(line: 1920, column: 9, scope: !11675)
!11697 = !DILocation(line: 1922, column: 59, scope: !1660)
!11698 = !DILocation(line: 1922, column: 39, scope: !1660)
!11699 = !DILocation(line: 1922, column: 17, scope: !1660)
!11700 = !DILocation(line: 1922, column: 15, scope: !1660)
!11701 = !DILocation(line: 1923, column: 9, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1923, column: 9)
!11703 = !DILocation(line: 1923, column: 19, scope: !11702)
!11704 = !DILocation(line: 1923, column: 9, scope: !1660)
!11705 = !DILocation(line: 1924, column: 9, scope: !11702)
!11706 = !DILocation(line: 1926, column: 60, scope: !1660)
!11707 = !DILocation(line: 1926, column: 40, scope: !1660)
!11708 = !DILocation(line: 1926, column: 18, scope: !1660)
!11709 = !DILocation(line: 1926, column: 16, scope: !1660)
!11710 = !DILocation(line: 1927, column: 9, scope: !1671)
!11711 = !DILocation(line: 1927, column: 20, scope: !1671)
!11712 = !DILocation(line: 1927, column: 9, scope: !1660)
!11713 = !DILocation(line: 1928, column: 9, scope: !1670)
!11714 = !DILocation(line: 1928, column: 14, scope: !11715)
!11715 = !DILexicalBlockFile(scope: !1669, file: !450, discriminator: 1)
!11716 = !DILocation(line: 1928, column: 24, scope: !1669)
!11717 = !DILocation(line: 1928, column: 54, scope: !1669)
!11718 = !DILocation(line: 1928, column: 74, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !1669, file: !450, line: 1928, column: 71)
!11720 = !DILocation(line: 1928, column: 91, scope: !11719)
!11721 = !DILocation(line: 1928, column: 71, scope: !11719)
!11722 = !DILocation(line: 1928, column: 101, scope: !11719)
!11723 = !DILocation(line: 1928, column: 71, scope: !1669)
!11724 = !DILocation(line: 1928, column: 71, scope: !11725)
!11725 = !DILexicalBlockFile(scope: !1669, file: !450, discriminator: 2)
!11726 = !DILocation(line: 1928, column: 132, scope: !11727)
!11727 = !DILexicalBlockFile(scope: !11719, file: !450, discriminator: 3)
!11728 = !DILocation(line: 1928, column: 150, scope: !11719)
!11729 = !DILocation(line: 1928, column: 160, scope: !11719)
!11730 = !DILocation(line: 1928, column: 185, scope: !11719)
!11731 = !DILocation(line: 1928, column: 116, scope: !11719)
!11732 = !DILocation(line: 1928, column: 204, scope: !11733)
!11733 = !DILexicalBlockFile(scope: !1670, file: !450, discriminator: 4)
!11734 = !DILocation(line: 1928, column: 204, scope: !1669)
!11735 = !DILocation(line: 1928, column: 204, scope: !11736)
!11736 = !DILexicalBlockFile(scope: !1669, file: !450, discriminator: 5)
!11737 = !DILocation(line: 1929, column: 9, scope: !1670)
!11738 = !DILocation(line: 1932, column: 41, scope: !1660)
!11739 = !DILocation(line: 1932, column: 52, scope: !1660)
!11740 = !DILocation(line: 1932, column: 22, scope: !1660)
!11741 = !DILocation(line: 1932, column: 20, scope: !1660)
!11742 = !DILocation(line: 1933, column: 5, scope: !1660)
!11743 = !DILocation(line: 1933, column: 10, scope: !11744)
!11744 = !DILexicalBlockFile(scope: !1673, file: !450, discriminator: 1)
!11745 = !DILocation(line: 1933, column: 20, scope: !1673)
!11746 = !DILocation(line: 1933, column: 50, scope: !1673)
!11747 = !DILocation(line: 1933, column: 70, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !1673, file: !450, line: 1933, column: 67)
!11749 = !DILocation(line: 1933, column: 87, scope: !11748)
!11750 = !DILocation(line: 1933, column: 67, scope: !11748)
!11751 = !DILocation(line: 1933, column: 97, scope: !11748)
!11752 = !DILocation(line: 1933, column: 67, scope: !1673)
!11753 = !DILocation(line: 1933, column: 67, scope: !11754)
!11754 = !DILexicalBlockFile(scope: !1673, file: !450, discriminator: 2)
!11755 = !DILocation(line: 1933, column: 128, scope: !11756)
!11756 = !DILexicalBlockFile(scope: !11748, file: !450, discriminator: 3)
!11757 = !DILocation(line: 1933, column: 146, scope: !11748)
!11758 = !DILocation(line: 1933, column: 156, scope: !11748)
!11759 = !DILocation(line: 1933, column: 181, scope: !11748)
!11760 = !DILocation(line: 1933, column: 112, scope: !11748)
!11761 = !DILocation(line: 1933, column: 200, scope: !11762)
!11762 = !DILexicalBlockFile(scope: !1660, file: !450, discriminator: 4)
!11763 = !DILocation(line: 1933, column: 200, scope: !1673)
!11764 = !DILocation(line: 1933, column: 200, scope: !11765)
!11765 = !DILexicalBlockFile(scope: !1673, file: !450, discriminator: 5)
!11766 = !DILocation(line: 1934, column: 5, scope: !1660)
!11767 = !DILocation(line: 1934, column: 10, scope: !11768)
!11768 = !DILexicalBlockFile(scope: !1675, file: !450, discriminator: 1)
!11769 = !DILocation(line: 1934, column: 20, scope: !1675)
!11770 = !DILocation(line: 1934, column: 50, scope: !1675)
!11771 = !DILocation(line: 1934, column: 71, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !1675, file: !450, line: 1934, column: 68)
!11773 = !DILocation(line: 1934, column: 88, scope: !11772)
!11774 = !DILocation(line: 1934, column: 68, scope: !11772)
!11775 = !DILocation(line: 1934, column: 98, scope: !11772)
!11776 = !DILocation(line: 1934, column: 68, scope: !1675)
!11777 = !DILocation(line: 1934, column: 68, scope: !11778)
!11778 = !DILexicalBlockFile(scope: !1675, file: !450, discriminator: 2)
!11779 = !DILocation(line: 1934, column: 129, scope: !11780)
!11780 = !DILexicalBlockFile(scope: !11772, file: !450, discriminator: 3)
!11781 = !DILocation(line: 1934, column: 147, scope: !11772)
!11782 = !DILocation(line: 1934, column: 157, scope: !11772)
!11783 = !DILocation(line: 1934, column: 182, scope: !11772)
!11784 = !DILocation(line: 1934, column: 113, scope: !11772)
!11785 = !DILocation(line: 1934, column: 201, scope: !11762)
!11786 = !DILocation(line: 1934, column: 201, scope: !1675)
!11787 = !DILocation(line: 1934, column: 201, scope: !11788)
!11788 = !DILexicalBlockFile(scope: !1675, file: !450, discriminator: 5)
!11789 = !DILocation(line: 1935, column: 9, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1935, column: 9)
!11791 = !DILocation(line: 1935, column: 24, scope: !11790)
!11792 = !DILocation(line: 1935, column: 9, scope: !1660)
!11793 = !DILocation(line: 1936, column: 9, scope: !11790)
!11794 = !DILocation(line: 1938, column: 42, scope: !1660)
!11795 = !DILocation(line: 1938, column: 17, scope: !1660)
!11796 = !DILocation(line: 1938, column: 15, scope: !1660)
!11797 = !DILocation(line: 1939, column: 5, scope: !1660)
!11798 = !DILocation(line: 1939, column: 10, scope: !11799)
!11799 = !DILexicalBlockFile(scope: !1677, file: !450, discriminator: 1)
!11800 = !DILocation(line: 1939, column: 20, scope: !1677)
!11801 = !DILocation(line: 1939, column: 50, scope: !1677)
!11802 = !DILocation(line: 1939, column: 75, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !1677, file: !450, line: 1939, column: 72)
!11804 = !DILocation(line: 1939, column: 92, scope: !11803)
!11805 = !DILocation(line: 1939, column: 72, scope: !11803)
!11806 = !DILocation(line: 1939, column: 102, scope: !11803)
!11807 = !DILocation(line: 1939, column: 72, scope: !1677)
!11808 = !DILocation(line: 1939, column: 72, scope: !11809)
!11809 = !DILexicalBlockFile(scope: !1677, file: !450, discriminator: 2)
!11810 = !DILocation(line: 1939, column: 133, scope: !11811)
!11811 = !DILexicalBlockFile(scope: !11803, file: !450, discriminator: 3)
!11812 = !DILocation(line: 1939, column: 151, scope: !11803)
!11813 = !DILocation(line: 1939, column: 161, scope: !11803)
!11814 = !DILocation(line: 1939, column: 186, scope: !11803)
!11815 = !DILocation(line: 1939, column: 117, scope: !11803)
!11816 = !DILocation(line: 1939, column: 205, scope: !11762)
!11817 = !DILocation(line: 1939, column: 205, scope: !1677)
!11818 = !DILocation(line: 1939, column: 205, scope: !11819)
!11819 = !DILexicalBlockFile(scope: !1677, file: !450, discriminator: 5)
!11820 = !DILocation(line: 1940, column: 9, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !1660, file: !450, line: 1940, column: 9)
!11822 = !DILocation(line: 1940, column: 19, scope: !11821)
!11823 = !DILocation(line: 1940, column: 9, scope: !1660)
!11824 = !DILocation(line: 1941, column: 9, scope: !11821)
!11825 = !DILocation(line: 1943, column: 12, scope: !1660)
!11826 = !DILocation(line: 1943, column: 5, scope: !1660)
!11827 = !DILocation(line: 1944, column: 1, scope: !1660)
!11828 = !DILocation(line: 1947, column: 24, scope: !1678)
!11829 = !DILocation(line: 1947, column: 40, scope: !1678)
!11830 = !DILocation(line: 1949, column: 5, scope: !1678)
!11831 = !DILocation(line: 1949, column: 15, scope: !1678)
!11832 = !DILocation(line: 1950, column: 5, scope: !1678)
!11833 = !DILocation(line: 1950, column: 15, scope: !1678)
!11834 = !DILocation(line: 1951, column: 5, scope: !1678)
!11835 = !DILocation(line: 1951, column: 15, scope: !1678)
!11836 = !DILocation(line: 1952, column: 5, scope: !1678)
!11837 = !DILocation(line: 1952, column: 15, scope: !1678)
!11838 = !DILocation(line: 1953, column: 5, scope: !1678)
!11839 = !DILocation(line: 1953, column: 15, scope: !1678)
!11840 = !DILocation(line: 1955, column: 25, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1955, column: 9)
!11842 = !DILocation(line: 1955, column: 33, scope: !11841)
!11843 = !DILocation(line: 1955, column: 42, scope: !11841)
!11844 = !DILocation(line: 1955, column: 69, scope: !11841)
!11845 = !DILocation(line: 1955, column: 103, scope: !11846)
!11846 = !DILexicalBlockFile(scope: !11841, file: !450, discriminator: 2)
!11847 = !DILocation(line: 1955, column: 111, scope: !11841)
!11848 = !DILocation(line: 1955, column: 72, scope: !11841)
!11849 = !DILocation(line: 1955, column: 147, scope: !11841)
!11850 = !DILocation(line: 1955, column: 166, scope: !11851)
!11851 = !DILexicalBlockFile(scope: !11852, file: !450, discriminator: 3)
!11852 = !DILexicalBlockFile(scope: !11841, file: !450, discriminator: 1)
!11853 = !DILocation(line: 1955, column: 175, scope: !11841)
!11854 = !DILocation(line: 1955, column: 184, scope: !11841)
!11855 = !DILocation(line: 1955, column: 211, scope: !11841)
!11856 = !DILocation(line: 1955, column: 245, scope: !11857)
!11857 = !DILexicalBlockFile(scope: !11841, file: !450, discriminator: 4)
!11858 = !DILocation(line: 1955, column: 254, scope: !11841)
!11859 = !DILocation(line: 1955, column: 214, scope: !11841)
!11860 = !DILocation(line: 1955, column: 9, scope: !1678)
!11861 = !DILocation(line: 1956, column: 72, scope: !11841)
!11862 = !DILocation(line: 1956, column: 9, scope: !11841)
!11863 = !DILocation(line: 1958, column: 59, scope: !1678)
!11864 = !DILocation(line: 1958, column: 39, scope: !1678)
!11865 = !DILocation(line: 1958, column: 17, scope: !1678)
!11866 = !DILocation(line: 1958, column: 15, scope: !1678)
!11867 = !DILocation(line: 1959, column: 9, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1959, column: 9)
!11869 = !DILocation(line: 1959, column: 19, scope: !11868)
!11870 = !DILocation(line: 1959, column: 9, scope: !1678)
!11871 = !DILocation(line: 1960, column: 9, scope: !11868)
!11872 = !DILocation(line: 1962, column: 60, scope: !1678)
!11873 = !DILocation(line: 1962, column: 40, scope: !1678)
!11874 = !DILocation(line: 1962, column: 18, scope: !1678)
!11875 = !DILocation(line: 1962, column: 16, scope: !1678)
!11876 = !DILocation(line: 1963, column: 9, scope: !1690)
!11877 = !DILocation(line: 1963, column: 20, scope: !1690)
!11878 = !DILocation(line: 1963, column: 9, scope: !1678)
!11879 = !DILocation(line: 1964, column: 9, scope: !1689)
!11880 = !DILocation(line: 1964, column: 14, scope: !11881)
!11881 = !DILexicalBlockFile(scope: !1688, file: !450, discriminator: 1)
!11882 = !DILocation(line: 1964, column: 24, scope: !1688)
!11883 = !DILocation(line: 1964, column: 54, scope: !1688)
!11884 = !DILocation(line: 1964, column: 74, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !1688, file: !450, line: 1964, column: 71)
!11886 = !DILocation(line: 1964, column: 91, scope: !11885)
!11887 = !DILocation(line: 1964, column: 71, scope: !11885)
!11888 = !DILocation(line: 1964, column: 101, scope: !11885)
!11889 = !DILocation(line: 1964, column: 71, scope: !1688)
!11890 = !DILocation(line: 1964, column: 71, scope: !11891)
!11891 = !DILexicalBlockFile(scope: !1688, file: !450, discriminator: 2)
!11892 = !DILocation(line: 1964, column: 132, scope: !11893)
!11893 = !DILexicalBlockFile(scope: !11885, file: !450, discriminator: 3)
!11894 = !DILocation(line: 1964, column: 150, scope: !11885)
!11895 = !DILocation(line: 1964, column: 160, scope: !11885)
!11896 = !DILocation(line: 1964, column: 185, scope: !11885)
!11897 = !DILocation(line: 1964, column: 116, scope: !11885)
!11898 = !DILocation(line: 1964, column: 204, scope: !11899)
!11899 = !DILexicalBlockFile(scope: !1689, file: !450, discriminator: 4)
!11900 = !DILocation(line: 1964, column: 204, scope: !1688)
!11901 = !DILocation(line: 1964, column: 204, scope: !11902)
!11902 = !DILexicalBlockFile(scope: !1688, file: !450, discriminator: 5)
!11903 = !DILocation(line: 1965, column: 9, scope: !1689)
!11904 = !DILocation(line: 1968, column: 30, scope: !1678)
!11905 = !DILocation(line: 1968, column: 41, scope: !1678)
!11906 = !DILocation(line: 1968, column: 14, scope: !1678)
!11907 = !DILocation(line: 1968, column: 12, scope: !1678)
!11908 = !DILocation(line: 1969, column: 5, scope: !1678)
!11909 = !DILocation(line: 1969, column: 10, scope: !11910)
!11910 = !DILexicalBlockFile(scope: !1692, file: !450, discriminator: 1)
!11911 = !DILocation(line: 1969, column: 20, scope: !1692)
!11912 = !DILocation(line: 1969, column: 50, scope: !1692)
!11913 = !DILocation(line: 1969, column: 70, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !1692, file: !450, line: 1969, column: 67)
!11915 = !DILocation(line: 1969, column: 87, scope: !11914)
!11916 = !DILocation(line: 1969, column: 67, scope: !11914)
!11917 = !DILocation(line: 1969, column: 97, scope: !11914)
!11918 = !DILocation(line: 1969, column: 67, scope: !1692)
!11919 = !DILocation(line: 1969, column: 67, scope: !11920)
!11920 = !DILexicalBlockFile(scope: !1692, file: !450, discriminator: 2)
!11921 = !DILocation(line: 1969, column: 128, scope: !11922)
!11922 = !DILexicalBlockFile(scope: !11914, file: !450, discriminator: 3)
!11923 = !DILocation(line: 1969, column: 146, scope: !11914)
!11924 = !DILocation(line: 1969, column: 156, scope: !11914)
!11925 = !DILocation(line: 1969, column: 181, scope: !11914)
!11926 = !DILocation(line: 1969, column: 112, scope: !11914)
!11927 = !DILocation(line: 1969, column: 200, scope: !11928)
!11928 = !DILexicalBlockFile(scope: !1678, file: !450, discriminator: 4)
!11929 = !DILocation(line: 1969, column: 200, scope: !1692)
!11930 = !DILocation(line: 1969, column: 200, scope: !11931)
!11931 = !DILexicalBlockFile(scope: !1692, file: !450, discriminator: 5)
!11932 = !DILocation(line: 1970, column: 5, scope: !1678)
!11933 = !DILocation(line: 1970, column: 10, scope: !11934)
!11934 = !DILexicalBlockFile(scope: !1694, file: !450, discriminator: 1)
!11935 = !DILocation(line: 1970, column: 20, scope: !1694)
!11936 = !DILocation(line: 1970, column: 50, scope: !1694)
!11937 = !DILocation(line: 1970, column: 71, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !1694, file: !450, line: 1970, column: 68)
!11939 = !DILocation(line: 1970, column: 88, scope: !11938)
!11940 = !DILocation(line: 1970, column: 68, scope: !11938)
!11941 = !DILocation(line: 1970, column: 98, scope: !11938)
!11942 = !DILocation(line: 1970, column: 68, scope: !1694)
!11943 = !DILocation(line: 1970, column: 68, scope: !11944)
!11944 = !DILexicalBlockFile(scope: !1694, file: !450, discriminator: 2)
!11945 = !DILocation(line: 1970, column: 129, scope: !11946)
!11946 = !DILexicalBlockFile(scope: !11938, file: !450, discriminator: 3)
!11947 = !DILocation(line: 1970, column: 147, scope: !11938)
!11948 = !DILocation(line: 1970, column: 157, scope: !11938)
!11949 = !DILocation(line: 1970, column: 182, scope: !11938)
!11950 = !DILocation(line: 1970, column: 113, scope: !11938)
!11951 = !DILocation(line: 1970, column: 201, scope: !11928)
!11952 = !DILocation(line: 1970, column: 201, scope: !1694)
!11953 = !DILocation(line: 1970, column: 201, scope: !11954)
!11954 = !DILexicalBlockFile(scope: !1694, file: !450, discriminator: 5)
!11955 = !DILocation(line: 1971, column: 9, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !1678, file: !450, line: 1971, column: 9)
!11957 = !DILocation(line: 1971, column: 16, scope: !11956)
!11958 = !DILocation(line: 1971, column: 9, scope: !1678)
!11959 = !DILocation(line: 1972, column: 9, scope: !11956)
!11960 = !DILocation(line: 1975, column: 58, scope: !1678)
!11961 = !DILocation(line: 1975, column: 40, scope: !1678)
!11962 = !DILocation(line: 1975, column: 68, scope: !1678)
!11963 = !DILocation(line: 1975, column: 39, scope: !1678)
!11964 = !DILocation(line: 1975, column: 13, scope: !1678)
!11965 = !DILocation(line: 1975, column: 11, scope: !1678)
!11966 = !DILocation(line: 1976, column: 9, scope: !1698)
!11967 = !DILocation(line: 1976, column: 15, scope: !1698)
!11968 = !DILocation(line: 1976, column: 9, scope: !1678)
!11969 = !DILocation(line: 1977, column: 9, scope: !1697)
!11970 = !DILocation(line: 1977, column: 14, scope: !11971)
!11971 = !DILexicalBlockFile(scope: !1696, file: !450, discriminator: 1)
!11972 = !DILocation(line: 1977, column: 24, scope: !1696)
!11973 = !DILocation(line: 1977, column: 54, scope: !1696)
!11974 = !DILocation(line: 1977, column: 71, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !1696, file: !450, line: 1977, column: 68)
!11976 = !DILocation(line: 1977, column: 88, scope: !11975)
!11977 = !DILocation(line: 1977, column: 68, scope: !11975)
!11978 = !DILocation(line: 1977, column: 98, scope: !11975)
!11979 = !DILocation(line: 1977, column: 68, scope: !1696)
!11980 = !DILocation(line: 1977, column: 68, scope: !11981)
!11981 = !DILexicalBlockFile(scope: !1696, file: !450, discriminator: 2)
!11982 = !DILocation(line: 1977, column: 129, scope: !11983)
!11983 = !DILexicalBlockFile(scope: !11975, file: !450, discriminator: 3)
!11984 = !DILocation(line: 1977, column: 147, scope: !11975)
!11985 = !DILocation(line: 1977, column: 157, scope: !11975)
!11986 = !DILocation(line: 1977, column: 182, scope: !11975)
!11987 = !DILocation(line: 1977, column: 113, scope: !11975)
!11988 = !DILocation(line: 1977, column: 201, scope: !11989)
!11989 = !DILexicalBlockFile(scope: !1697, file: !450, discriminator: 4)
!11990 = !DILocation(line: 1977, column: 201, scope: !1696)
!11991 = !DILocation(line: 1977, column: 201, scope: !11992)
!11992 = !DILexicalBlockFile(scope: !1696, file: !450, discriminator: 5)
!11993 = !DILocation(line: 1978, column: 9, scope: !1697)
!11994 = !DILocation(line: 1980, column: 50, scope: !1678)
!11995 = !DILocation(line: 1980, column: 32, scope: !1678)
!11996 = !DILocation(line: 1980, column: 60, scope: !1678)
!11997 = !DILocation(line: 1980, column: 31, scope: !1678)
!11998 = !DILocation(line: 1980, column: 73, scope: !1678)
!11999 = !DILocation(line: 1980, column: 14, scope: !1678)
!12000 = !DILocation(line: 1980, column: 12, scope: !1678)
!12001 = !DILocation(line: 1981, column: 5, scope: !1678)
!12002 = !DILocation(line: 1981, column: 10, scope: !12003)
!12003 = !DILexicalBlockFile(scope: !1700, file: !450, discriminator: 1)
!12004 = !DILocation(line: 1981, column: 20, scope: !1700)
!12005 = !DILocation(line: 1981, column: 50, scope: !1700)
!12006 = !DILocation(line: 1981, column: 66, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !1700, file: !450, line: 1981, column: 63)
!12008 = !DILocation(line: 1981, column: 83, scope: !12007)
!12009 = !DILocation(line: 1981, column: 63, scope: !12007)
!12010 = !DILocation(line: 1981, column: 93, scope: !12007)
!12011 = !DILocation(line: 1981, column: 63, scope: !1700)
!12012 = !DILocation(line: 1981, column: 63, scope: !12013)
!12013 = !DILexicalBlockFile(scope: !1700, file: !450, discriminator: 2)
!12014 = !DILocation(line: 1981, column: 124, scope: !12015)
!12015 = !DILexicalBlockFile(scope: !12007, file: !450, discriminator: 3)
!12016 = !DILocation(line: 1981, column: 142, scope: !12007)
!12017 = !DILocation(line: 1981, column: 152, scope: !12007)
!12018 = !DILocation(line: 1981, column: 177, scope: !12007)
!12019 = !DILocation(line: 1981, column: 108, scope: !12007)
!12020 = !DILocation(line: 1981, column: 196, scope: !11928)
!12021 = !DILocation(line: 1981, column: 196, scope: !1700)
!12022 = !DILocation(line: 1981, column: 196, scope: !12023)
!12023 = !DILexicalBlockFile(scope: !1700, file: !450, discriminator: 5)
!12024 = !DILocation(line: 1982, column: 5, scope: !1678)
!12025 = !DILocation(line: 1982, column: 10, scope: !12026)
!12026 = !DILexicalBlockFile(scope: !1702, file: !450, discriminator: 1)
!12027 = !DILocation(line: 1982, column: 20, scope: !1702)
!12028 = !DILocation(line: 1982, column: 50, scope: !1702)
!12029 = !DILocation(line: 1982, column: 67, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !1702, file: !450, line: 1982, column: 64)
!12031 = !DILocation(line: 1982, column: 84, scope: !12030)
!12032 = !DILocation(line: 1982, column: 64, scope: !12030)
!12033 = !DILocation(line: 1982, column: 94, scope: !12030)
!12034 = !DILocation(line: 1982, column: 64, scope: !1702)
!12035 = !DILocation(line: 1982, column: 64, scope: !12036)
!12036 = !DILexicalBlockFile(scope: !1702, file: !450, discriminator: 2)
!12037 = !DILocation(line: 1982, column: 125, scope: !12038)
!12038 = !DILexicalBlockFile(scope: !12030, file: !450, discriminator: 3)
!12039 = !DILocation(line: 1982, column: 143, scope: !12030)
!12040 = !DILocation(line: 1982, column: 153, scope: !12030)
!12041 = !DILocation(line: 1982, column: 178, scope: !12030)
!12042 = !DILocation(line: 1982, column: 109, scope: !12030)
!12043 = !DILocation(line: 1982, column: 197, scope: !11928)
!12044 = !DILocation(line: 1982, column: 197, scope: !1702)
!12045 = !DILocation(line: 1982, column: 197, scope: !12046)
!12046 = !DILexicalBlockFile(scope: !1702, file: !450, discriminator: 5)
!12047 = !DILocation(line: 1983, column: 12, scope: !1678)
!12048 = !DILocation(line: 1983, column: 5, scope: !1678)
!12049 = !DILocation(line: 1984, column: 1, scope: !1678)
!12050 = !DILocation(line: 1751, column: 34, scope: !1703)
!12051 = !DILocation(line: 1756, column: 48, scope: !1703)
!12052 = !DILocation(line: 1756, column: 56, scope: !1703)
!12053 = !DILocation(line: 1756, column: 86, scope: !1703)
!12054 = !DILocation(line: 1756, column: 94, scope: !1703)
!12055 = !DILocation(line: 1756, column: 127, scope: !1703)
!12056 = !DILocation(line: 1756, column: 135, scope: !1703)
!12057 = !DILocation(line: 1756, column: 12, scope: !1703)
!12058 = !DILocation(line: 1756, column: 5, scope: !1703)
!12059 = !DILocation(line: 1763, column: 29, scope: !1706)
!12060 = !DILocation(line: 1765, column: 5, scope: !1706)
!12061 = !DILocation(line: 1765, column: 15, scope: !1706)
!12062 = !DILocation(line: 1770, column: 32, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !1706, file: !450, line: 1770, column: 9)
!12064 = !DILocation(line: 1770, column: 40, scope: !12063)
!12065 = !DILocation(line: 1770, column: 46, scope: !12063)
!12066 = !DILocation(line: 1770, column: 9, scope: !1706)
!12067 = !DILocation(line: 1771, column: 33, scope: !12063)
!12068 = !DILocation(line: 1771, column: 18, scope: !12063)
!12069 = !DILocation(line: 1771, column: 16, scope: !12063)
!12070 = !DILocation(line: 1771, column: 9, scope: !12063)
!12071 = !DILocation(line: 1773, column: 33, scope: !12063)
!12072 = !DILocation(line: 1773, column: 18, scope: !12063)
!12073 = !DILocation(line: 1773, column: 16, scope: !12063)
!12074 = !DILocation(line: 1775, column: 12, scope: !1706)
!12075 = !DILocation(line: 1776, column: 1, scope: !1706)
!12076 = !DILocation(line: 1775, column: 5, scope: !1706)
!12077 = !DILocation(line: 1867, column: 24, scope: !1710)
!12078 = !DILocation(line: 1867, column: 40, scope: !1710)
!12079 = !DILocation(line: 1869, column: 5, scope: !1710)
!12080 = !DILocation(line: 1869, column: 15, scope: !1710)
!12081 = !DILocation(line: 1871, column: 24, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !1710, file: !450, line: 1871, column: 9)
!12083 = !DILocation(line: 1871, column: 32, scope: !12082)
!12084 = !DILocation(line: 1871, column: 41, scope: !12082)
!12085 = !DILocation(line: 1871, column: 68, scope: !12082)
!12086 = !DILocation(line: 1871, column: 102, scope: !12087)
!12087 = !DILexicalBlockFile(scope: !12082, file: !450, discriminator: 1)
!12088 = !DILocation(line: 1871, column: 110, scope: !12082)
!12089 = !DILocation(line: 1871, column: 71, scope: !12082)
!12090 = !DILocation(line: 1871, column: 9, scope: !1710)
!12091 = !DILocation(line: 1873, column: 30, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !450, line: 1873, column: 13)
!12093 = distinct !DILexicalBlock(scope: !12082, file: !450, line: 1871, column: 147)
!12094 = !DILocation(line: 1873, column: 39, scope: !12092)
!12095 = !DILocation(line: 1873, column: 50, scope: !12092)
!12096 = !DILocation(line: 1873, column: 59, scope: !12092)
!12097 = !DILocation(line: 1873, column: 76, scope: !12092)
!12098 = !DILocation(line: 1873, column: 13, scope: !12093)
!12099 = !DILocation(line: 1875, column: 49, scope: !12092)
!12100 = !DILocation(line: 1875, column: 29, scope: !12092)
!12101 = !DILocation(line: 1876, column: 29, scope: !12092)
!12102 = !DILocation(line: 1874, column: 22, scope: !12092)
!12103 = !DILocation(line: 1874, column: 20, scope: !12092)
!12104 = !DILocation(line: 1874, column: 13, scope: !12092)
!12105 = !DILocation(line: 1877, column: 33, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12092, file: !450, line: 1877, column: 18)
!12107 = !DILocation(line: 1877, column: 42, scope: !12106)
!12108 = !DILocation(line: 1877, column: 51, scope: !12106)
!12109 = !DILocation(line: 1877, column: 78, scope: !12106)
!12110 = !DILocation(line: 1877, column: 112, scope: !12111)
!12111 = !DILexicalBlockFile(scope: !12106, file: !450, discriminator: 1)
!12112 = !DILocation(line: 1877, column: 121, scope: !12106)
!12113 = !DILocation(line: 1877, column: 81, scope: !12106)
!12114 = !DILocation(line: 1877, column: 18, scope: !12092)
!12115 = !DILocation(line: 1879, column: 49, scope: !12106)
!12116 = !DILocation(line: 1879, column: 29, scope: !12106)
!12117 = !DILocation(line: 1880, column: 49, scope: !12106)
!12118 = !DILocation(line: 1880, column: 29, scope: !12106)
!12119 = !DILocation(line: 1878, column: 22, scope: !12106)
!12120 = !DILocation(line: 1878, column: 20, scope: !12106)
!12121 = !DILocation(line: 1878, column: 13, scope: !12106)
!12122 = !DILocation(line: 1881, column: 5, scope: !12093)
!12123 = !DILocation(line: 1883, column: 9, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !1710, file: !450, line: 1883, column: 9)
!12125 = !DILocation(line: 1883, column: 16, scope: !12124)
!12126 = !DILocation(line: 1883, column: 9, scope: !1710)
!12127 = !DILocation(line: 1884, column: 25, scope: !12124)
!12128 = !DILocation(line: 1884, column: 35, scope: !12124)
!12129 = !DILocation(line: 1884, column: 44, scope: !12124)
!12130 = !DILocation(line: 1884, column: 9, scope: !12124)
!12131 = !DILocation(line: 1885, column: 12, scope: !1710)
!12132 = !DILocation(line: 1886, column: 1, scope: !1710)
!12133 = !DILocation(line: 1885, column: 5, scope: !1710)
!12134 = !DILocation(line: 1889, column: 28, scope: !1728)
!12135 = !DILocation(line: 1889, column: 44, scope: !1728)
!12136 = !DILocation(line: 1891, column: 5, scope: !1728)
!12137 = !DILocation(line: 1891, column: 15, scope: !1728)
!12138 = !DILocation(line: 1893, column: 24, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !1728, file: !450, line: 1893, column: 9)
!12140 = !DILocation(line: 1893, column: 32, scope: !12139)
!12141 = !DILocation(line: 1893, column: 41, scope: !12139)
!12142 = !DILocation(line: 1893, column: 68, scope: !12139)
!12143 = !DILocation(line: 1893, column: 102, scope: !12144)
!12144 = !DILexicalBlockFile(scope: !12139, file: !450, discriminator: 1)
!12145 = !DILocation(line: 1893, column: 110, scope: !12139)
!12146 = !DILocation(line: 1893, column: 71, scope: !12139)
!12147 = !DILocation(line: 1893, column: 9, scope: !1728)
!12148 = !DILocation(line: 1894, column: 28, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !450, line: 1894, column: 13)
!12150 = distinct !DILexicalBlock(scope: !12139, file: !450, line: 1893, column: 147)
!12151 = !DILocation(line: 1894, column: 37, scope: !12149)
!12152 = !DILocation(line: 1894, column: 46, scope: !12149)
!12153 = !DILocation(line: 1894, column: 73, scope: !12149)
!12154 = !DILocation(line: 1894, column: 107, scope: !12155)
!12155 = !DILexicalBlockFile(scope: !12149, file: !450, discriminator: 1)
!12156 = !DILocation(line: 1894, column: 116, scope: !12149)
!12157 = !DILocation(line: 1894, column: 76, scope: !12149)
!12158 = !DILocation(line: 1894, column: 13, scope: !12150)
!12159 = !DILocation(line: 1896, column: 49, scope: !12149)
!12160 = !DILocation(line: 1896, column: 29, scope: !12149)
!12161 = !DILocation(line: 1897, column: 49, scope: !12149)
!12162 = !DILocation(line: 1897, column: 29, scope: !12149)
!12163 = !DILocation(line: 1895, column: 22, scope: !12149)
!12164 = !DILocation(line: 1895, column: 20, scope: !12149)
!12165 = !DILocation(line: 1895, column: 13, scope: !12149)
!12166 = !DILocation(line: 1898, column: 33, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12149, file: !450, line: 1898, column: 18)
!12168 = !DILocation(line: 1898, column: 42, scope: !12167)
!12169 = !DILocation(line: 1898, column: 51, scope: !12167)
!12170 = !DILocation(line: 1898, column: 70, scope: !12167)
!12171 = !DILocation(line: 1898, column: 104, scope: !12172)
!12172 = !DILexicalBlockFile(scope: !12167, file: !450, discriminator: 1)
!12173 = !DILocation(line: 1898, column: 113, scope: !12167)
!12174 = !DILocation(line: 1898, column: 73, scope: !12167)
!12175 = !DILocation(line: 1898, column: 18, scope: !12149)
!12176 = !DILocation(line: 1900, column: 49, scope: !12167)
!12177 = !DILocation(line: 1900, column: 29, scope: !12167)
!12178 = !DILocation(line: 1900, column: 55, scope: !12167)
!12179 = !DILocation(line: 1899, column: 22, scope: !12167)
!12180 = !DILocation(line: 1899, column: 20, scope: !12167)
!12181 = !DILocation(line: 1899, column: 13, scope: !12167)
!12182 = !DILocation(line: 1901, column: 35, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12167, file: !450, line: 1901, column: 18)
!12184 = !DILocation(line: 1901, column: 44, scope: !12183)
!12185 = !DILocation(line: 1901, column: 55, scope: !12183)
!12186 = !DILocation(line: 1901, column: 64, scope: !12183)
!12187 = !DILocation(line: 1901, column: 81, scope: !12183)
!12188 = !DILocation(line: 1901, column: 18, scope: !12167)
!12189 = !DILocation(line: 1903, column: 49, scope: !12183)
!12190 = !DILocation(line: 1903, column: 29, scope: !12183)
!12191 = !DILocation(line: 1903, column: 55, scope: !12183)
!12192 = !DILocation(line: 1902, column: 22, scope: !12183)
!12193 = !DILocation(line: 1902, column: 20, scope: !12183)
!12194 = !DILocation(line: 1902, column: 13, scope: !12183)
!12195 = !DILocation(line: 1904, column: 5, scope: !12150)
!12196 = !DILocation(line: 1906, column: 9, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !1728, file: !450, line: 1906, column: 9)
!12198 = !DILocation(line: 1906, column: 16, scope: !12197)
!12199 = !DILocation(line: 1906, column: 9, scope: !1728)
!12200 = !DILocation(line: 1907, column: 25, scope: !12197)
!12201 = !DILocation(line: 1907, column: 35, scope: !12197)
!12202 = !DILocation(line: 1907, column: 44, scope: !12197)
!12203 = !DILocation(line: 1907, column: 9, scope: !12197)
!12204 = !DILocation(line: 1908, column: 12, scope: !1728)
!12205 = !DILocation(line: 1909, column: 1, scope: !1728)
!12206 = !DILocation(line: 1908, column: 5, scope: !1728)
!12207 = !DILocation(line: 1552, column: 34, scope: !1587)
!12208 = !DILocation(line: 1552, column: 60, scope: !1587)
!12209 = !DILocation(line: 1554, column: 5, scope: !1587)
!12210 = !DILocation(line: 1554, column: 15, scope: !1587)
!12211 = !DILocation(line: 1555, column: 5, scope: !1587)
!12212 = !DILocation(line: 1555, column: 15, scope: !1587)
!12213 = !DILocation(line: 1556, column: 5, scope: !1587)
!12214 = !DILocation(line: 1556, column: 15, scope: !1587)
!12215 = !DILocation(line: 1558, column: 37, scope: !1587)
!12216 = !DILocation(line: 1558, column: 15, scope: !1587)
!12217 = !DILocation(line: 1558, column: 13, scope: !1587)
!12218 = !DILocation(line: 1559, column: 9, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !1587, file: !450, line: 1559, column: 9)
!12220 = !DILocation(line: 1559, column: 17, scope: !12219)
!12221 = !DILocation(line: 1559, column: 9, scope: !1587)
!12222 = !DILocation(line: 1560, column: 9, scope: !12219)
!12223 = !DILocation(line: 1562, column: 34, scope: !1587)
!12224 = !DILocation(line: 1562, column: 43, scope: !1587)
!12225 = !DILocation(line: 1562, column: 16, scope: !1587)
!12226 = !DILocation(line: 1562, column: 14, scope: !1587)
!12227 = !DILocation(line: 1563, column: 5, scope: !1587)
!12228 = !DILocation(line: 1563, column: 10, scope: !12229)
!12229 = !DILexicalBlockFile(scope: !1597, file: !450, discriminator: 1)
!12230 = !DILocation(line: 1563, column: 20, scope: !1597)
!12231 = !DILocation(line: 1563, column: 50, scope: !1597)
!12232 = !DILocation(line: 1563, column: 68, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !1597, file: !450, line: 1563, column: 65)
!12234 = !DILocation(line: 1563, column: 85, scope: !12233)
!12235 = !DILocation(line: 1563, column: 65, scope: !12233)
!12236 = !DILocation(line: 1563, column: 95, scope: !12233)
!12237 = !DILocation(line: 1563, column: 65, scope: !1597)
!12238 = !DILocation(line: 1563, column: 65, scope: !12239)
!12239 = !DILexicalBlockFile(scope: !1597, file: !450, discriminator: 2)
!12240 = !DILocation(line: 1563, column: 126, scope: !12241)
!12241 = !DILexicalBlockFile(scope: !12233, file: !450, discriminator: 3)
!12242 = !DILocation(line: 1563, column: 144, scope: !12233)
!12243 = !DILocation(line: 1563, column: 154, scope: !12233)
!12244 = !DILocation(line: 1563, column: 179, scope: !12233)
!12245 = !DILocation(line: 1563, column: 110, scope: !12233)
!12246 = !DILocation(line: 1563, column: 198, scope: !12247)
!12247 = !DILexicalBlockFile(scope: !1587, file: !450, discriminator: 4)
!12248 = !DILocation(line: 1563, column: 198, scope: !1597)
!12249 = !DILocation(line: 1563, column: 198, scope: !12250)
!12250 = !DILexicalBlockFile(scope: !1597, file: !450, discriminator: 5)
!12251 = !DILocation(line: 1564, column: 9, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !1587, file: !450, line: 1564, column: 9)
!12253 = !DILocation(line: 1564, column: 18, scope: !12252)
!12254 = !DILocation(line: 1564, column: 9, scope: !1587)
!12255 = !DILocation(line: 1565, column: 9, scope: !12252)
!12256 = !DILocation(line: 1567, column: 39, scope: !1587)
!12257 = !DILocation(line: 1567, column: 14, scope: !1587)
!12258 = !DILocation(line: 1567, column: 12, scope: !1587)
!12259 = !DILocation(line: 1568, column: 5, scope: !1587)
!12260 = !DILocation(line: 1568, column: 10, scope: !12261)
!12261 = !DILexicalBlockFile(scope: !1599, file: !450, discriminator: 1)
!12262 = !DILocation(line: 1568, column: 20, scope: !1599)
!12263 = !DILocation(line: 1568, column: 50, scope: !1599)
!12264 = !DILocation(line: 1568, column: 69, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !1599, file: !450, line: 1568, column: 66)
!12266 = !DILocation(line: 1568, column: 86, scope: !12265)
!12267 = !DILocation(line: 1568, column: 66, scope: !12265)
!12268 = !DILocation(line: 1568, column: 96, scope: !12265)
!12269 = !DILocation(line: 1568, column: 66, scope: !1599)
!12270 = !DILocation(line: 1568, column: 66, scope: !12271)
!12271 = !DILexicalBlockFile(scope: !1599, file: !450, discriminator: 2)
!12272 = !DILocation(line: 1568, column: 127, scope: !12273)
!12273 = !DILexicalBlockFile(scope: !12265, file: !450, discriminator: 3)
!12274 = !DILocation(line: 1568, column: 145, scope: !12265)
!12275 = !DILocation(line: 1568, column: 155, scope: !12265)
!12276 = !DILocation(line: 1568, column: 180, scope: !12265)
!12277 = !DILocation(line: 1568, column: 111, scope: !12265)
!12278 = !DILocation(line: 1568, column: 199, scope: !12247)
!12279 = !DILocation(line: 1568, column: 199, scope: !1599)
!12280 = !DILocation(line: 1568, column: 199, scope: !12281)
!12281 = !DILexicalBlockFile(scope: !1599, file: !450, discriminator: 5)
!12282 = !DILocation(line: 1569, column: 12, scope: !1587)
!12283 = !DILocation(line: 1569, column: 5, scope: !1587)
!12284 = !DILocation(line: 1570, column: 1, scope: !1587)
!12285 = !DILocation(line: 1573, column: 36, scope: !1627)
!12286 = !DILocation(line: 1573, column: 64, scope: !1627)
!12287 = !DILocation(line: 1575, column: 5, scope: !1627)
!12288 = !DILocation(line: 1575, column: 15, scope: !1627)
!12289 = !DILocation(line: 1576, column: 5, scope: !1627)
!12290 = !DILocation(line: 1576, column: 15, scope: !1627)
!12291 = !DILocation(line: 1576, column: 38, scope: !1627)
!12292 = !DILocation(line: 1576, column: 45, scope: !1627)
!12293 = !DILocation(line: 1577, column: 5, scope: !1627)
!12294 = !DILocation(line: 1577, column: 15, scope: !1627)
!12295 = !DILocation(line: 1579, column: 37, scope: !1627)
!12296 = !DILocation(line: 1579, column: 15, scope: !1627)
!12297 = !DILocation(line: 1579, column: 13, scope: !1627)
!12298 = !DILocation(line: 1580, column: 9, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1580, column: 9)
!12300 = !DILocation(line: 1580, column: 17, scope: !12299)
!12301 = !DILocation(line: 1580, column: 9, scope: !1627)
!12302 = !DILocation(line: 1581, column: 9, scope: !12299)
!12303 = !DILocation(line: 1582, column: 36, scope: !1627)
!12304 = !DILocation(line: 1582, column: 13, scope: !1627)
!12305 = !DILocation(line: 1582, column: 11, scope: !1627)
!12306 = !DILocation(line: 1583, column: 9, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1583, column: 9)
!12308 = !DILocation(line: 1583, column: 15, scope: !12307)
!12309 = !DILocation(line: 1583, column: 9, scope: !1627)
!12310 = !DILocation(line: 1584, column: 9, scope: !12307)
!12311 = !DILocation(line: 1585, column: 30, scope: !1627)
!12312 = !DILocation(line: 1585, column: 59, scope: !1627)
!12313 = !DILocation(line: 1585, column: 41, scope: !1627)
!12314 = !DILocation(line: 1585, column: 68, scope: !1627)
!12315 = !DILocation(line: 1585, column: 40, scope: !1627)
!12316 = !DILocation(line: 1585, column: 12, scope: !1627)
!12317 = !DILocation(line: 1585, column: 10, scope: !1627)
!12318 = !DILocation(line: 1586, column: 5, scope: !1627)
!12319 = !DILocation(line: 1586, column: 10, scope: !12320)
!12320 = !DILexicalBlockFile(scope: !1637, file: !450, discriminator: 1)
!12321 = !DILocation(line: 1586, column: 20, scope: !1637)
!12322 = !DILocation(line: 1586, column: 50, scope: !1637)
!12323 = !DILocation(line: 1586, column: 68, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !1637, file: !450, line: 1586, column: 65)
!12325 = !DILocation(line: 1586, column: 85, scope: !12324)
!12326 = !DILocation(line: 1586, column: 65, scope: !12324)
!12327 = !DILocation(line: 1586, column: 95, scope: !12324)
!12328 = !DILocation(line: 1586, column: 65, scope: !1637)
!12329 = !DILocation(line: 1586, column: 65, scope: !12330)
!12330 = !DILexicalBlockFile(scope: !1637, file: !450, discriminator: 2)
!12331 = !DILocation(line: 1586, column: 126, scope: !12332)
!12332 = !DILexicalBlockFile(scope: !12324, file: !450, discriminator: 3)
!12333 = !DILocation(line: 1586, column: 144, scope: !12324)
!12334 = !DILocation(line: 1586, column: 154, scope: !12324)
!12335 = !DILocation(line: 1586, column: 179, scope: !12324)
!12336 = !DILocation(line: 1586, column: 110, scope: !12324)
!12337 = !DILocation(line: 1586, column: 198, scope: !12338)
!12338 = !DILexicalBlockFile(scope: !1627, file: !450, discriminator: 4)
!12339 = !DILocation(line: 1586, column: 198, scope: !1637)
!12340 = !DILocation(line: 1586, column: 198, scope: !12341)
!12341 = !DILexicalBlockFile(scope: !1637, file: !450, discriminator: 5)
!12342 = !DILocation(line: 1587, column: 13, scope: !1627)
!12343 = !DILocation(line: 1588, column: 9, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1588, column: 9)
!12345 = !DILocation(line: 1588, column: 14, scope: !12344)
!12346 = !DILocation(line: 1588, column: 9, scope: !1627)
!12347 = !DILocation(line: 1589, column: 9, scope: !12344)
!12348 = !DILocation(line: 1590, column: 31, scope: !1627)
!12349 = !DILocation(line: 1590, column: 57, scope: !1627)
!12350 = !DILocation(line: 1590, column: 39, scope: !1627)
!12351 = !DILocation(line: 1590, column: 66, scope: !1627)
!12352 = !DILocation(line: 1590, column: 38, scope: !1627)
!12353 = !DILocation(line: 1590, column: 16, scope: !1627)
!12354 = !DILocation(line: 1590, column: 14, scope: !1627)
!12355 = !DILocation(line: 1591, column: 5, scope: !1627)
!12356 = !DILocation(line: 1591, column: 10, scope: !12357)
!12357 = !DILexicalBlockFile(scope: !1639, file: !450, discriminator: 1)
!12358 = !DILocation(line: 1591, column: 20, scope: !1639)
!12359 = !DILocation(line: 1591, column: 50, scope: !1639)
!12360 = !DILocation(line: 1591, column: 65, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !1639, file: !450, line: 1591, column: 62)
!12362 = !DILocation(line: 1591, column: 82, scope: !12361)
!12363 = !DILocation(line: 1591, column: 62, scope: !12361)
!12364 = !DILocation(line: 1591, column: 92, scope: !12361)
!12365 = !DILocation(line: 1591, column: 62, scope: !1639)
!12366 = !DILocation(line: 1591, column: 62, scope: !12367)
!12367 = !DILexicalBlockFile(scope: !1639, file: !450, discriminator: 2)
!12368 = !DILocation(line: 1591, column: 123, scope: !12369)
!12369 = !DILexicalBlockFile(scope: !12361, file: !450, discriminator: 3)
!12370 = !DILocation(line: 1591, column: 141, scope: !12361)
!12371 = !DILocation(line: 1591, column: 151, scope: !12361)
!12372 = !DILocation(line: 1591, column: 176, scope: !12361)
!12373 = !DILocation(line: 1591, column: 107, scope: !12361)
!12374 = !DILocation(line: 1591, column: 195, scope: !12338)
!12375 = !DILocation(line: 1591, column: 195, scope: !1639)
!12376 = !DILocation(line: 1591, column: 195, scope: !12377)
!12377 = !DILexicalBlockFile(scope: !1639, file: !450, discriminator: 5)
!12378 = !DILocation(line: 1592, column: 9, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !1627, file: !450, line: 1592, column: 9)
!12380 = !DILocation(line: 1592, column: 18, scope: !12379)
!12381 = !DILocation(line: 1592, column: 9, scope: !1627)
!12382 = !DILocation(line: 1593, column: 9, scope: !12379)
!12383 = !DILocation(line: 1594, column: 39, scope: !1627)
!12384 = !DILocation(line: 1594, column: 14, scope: !1627)
!12385 = !DILocation(line: 1594, column: 12, scope: !1627)
!12386 = !DILocation(line: 1595, column: 5, scope: !1627)
!12387 = !DILocation(line: 1595, column: 10, scope: !12388)
!12388 = !DILexicalBlockFile(scope: !1641, file: !450, discriminator: 1)
!12389 = !DILocation(line: 1595, column: 20, scope: !1641)
!12390 = !DILocation(line: 1595, column: 50, scope: !1641)
!12391 = !DILocation(line: 1595, column: 69, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !1641, file: !450, line: 1595, column: 66)
!12393 = !DILocation(line: 1595, column: 86, scope: !12392)
!12394 = !DILocation(line: 1595, column: 66, scope: !12392)
!12395 = !DILocation(line: 1595, column: 96, scope: !12392)
!12396 = !DILocation(line: 1595, column: 66, scope: !1641)
!12397 = !DILocation(line: 1595, column: 66, scope: !12398)
!12398 = !DILexicalBlockFile(scope: !1641, file: !450, discriminator: 2)
!12399 = !DILocation(line: 1595, column: 127, scope: !12400)
!12400 = !DILexicalBlockFile(scope: !12392, file: !450, discriminator: 3)
!12401 = !DILocation(line: 1595, column: 145, scope: !12392)
!12402 = !DILocation(line: 1595, column: 155, scope: !12392)
!12403 = !DILocation(line: 1595, column: 180, scope: !12392)
!12404 = !DILocation(line: 1595, column: 111, scope: !12392)
!12405 = !DILocation(line: 1595, column: 199, scope: !12338)
!12406 = !DILocation(line: 1595, column: 199, scope: !1641)
!12407 = !DILocation(line: 1595, column: 199, scope: !12408)
!12408 = !DILexicalBlockFile(scope: !1641, file: !450, discriminator: 5)
!12409 = !DILocation(line: 1595, column: 199, scope: !12410)
!12410 = !DILexicalBlockFile(scope: !1641, file: !450, discriminator: 6)
!12411 = !DILocation(line: 1597, column: 5, scope: !1627)
!12412 = !DILocation(line: 1597, column: 10, scope: !12413)
!12413 = !DILexicalBlockFile(scope: !1643, file: !450, discriminator: 1)
!12414 = !DILocation(line: 1597, column: 20, scope: !1643)
!12415 = !DILocation(line: 1597, column: 51, scope: !1643)
!12416 = !DILocation(line: 1597, column: 65, scope: !1646)
!12417 = !DILocation(line: 1597, column: 81, scope: !1646)
!12418 = !DILocation(line: 1597, column: 65, scope: !1643)
!12419 = !DILocation(line: 1597, column: 96, scope: !12420)
!12420 = !DILexicalBlockFile(scope: !1646, file: !450, discriminator: 2)
!12421 = !DILocation(line: 1597, column: 101, scope: !12422)
!12422 = !DILexicalBlockFile(scope: !1645, file: !450, discriminator: 4)
!12423 = !DILocation(line: 1597, column: 111, scope: !1645)
!12424 = !DILocation(line: 1597, column: 141, scope: !1645)
!12425 = !DILocation(line: 1597, column: 167, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !1645, file: !450, line: 1597, column: 164)
!12427 = !DILocation(line: 1597, column: 184, scope: !12426)
!12428 = !DILocation(line: 1597, column: 164, scope: !12426)
!12429 = !DILocation(line: 1597, column: 194, scope: !12426)
!12430 = !DILocation(line: 1597, column: 164, scope: !1645)
!12431 = !DILocation(line: 1597, column: 164, scope: !12432)
!12432 = !DILexicalBlockFile(scope: !1645, file: !450, discriminator: 5)
!12433 = !DILocation(line: 1597, column: 225, scope: !12434)
!12434 = !DILexicalBlockFile(scope: !12426, file: !450, discriminator: 6)
!12435 = !DILocation(line: 1597, column: 243, scope: !12426)
!12436 = !DILocation(line: 1597, column: 253, scope: !12426)
!12437 = !DILocation(line: 1597, column: 278, scope: !12426)
!12438 = !DILocation(line: 1597, column: 209, scope: !12426)
!12439 = !DILocation(line: 1597, column: 297, scope: !12440)
!12440 = !DILexicalBlockFile(scope: !1646, file: !450, discriminator: 7)
!12441 = !DILocation(line: 1597, column: 297, scope: !1645)
!12442 = !DILocation(line: 1597, column: 297, scope: !12443)
!12443 = !DILexicalBlockFile(scope: !1645, file: !450, discriminator: 8)
!12444 = !DILocation(line: 1597, column: 297, scope: !12445)
!12445 = !DILexicalBlockFile(scope: !1645, file: !450, discriminator: 9)
!12446 = !DILocation(line: 1597, column: 310, scope: !12447)
!12447 = !DILexicalBlockFile(scope: !12448, file: !450, discriminator: 10)
!12448 = !DILexicalBlockFile(scope: !1627, file: !450, discriminator: 3)
!12449 = !DILocation(line: 1597, column: 310, scope: !1643)
!12450 = !DILocation(line: 1597, column: 310, scope: !12451)
!12451 = !DILexicalBlockFile(scope: !1643, file: !450, discriminator: 11)
!12452 = !DILocation(line: 1598, column: 5, scope: !1627)
!12453 = !DILocation(line: 1598, column: 10, scope: !12454)
!12454 = !DILexicalBlockFile(scope: !1648, file: !450, discriminator: 1)
!12455 = !DILocation(line: 1598, column: 20, scope: !1648)
!12456 = !DILocation(line: 1598, column: 51, scope: !1648)
!12457 = !DILocation(line: 1598, column: 63, scope: !1651)
!12458 = !DILocation(line: 1598, column: 79, scope: !1651)
!12459 = !DILocation(line: 1598, column: 63, scope: !1648)
!12460 = !DILocation(line: 1598, column: 94, scope: !12461)
!12461 = !DILexicalBlockFile(scope: !1651, file: !450, discriminator: 2)
!12462 = !DILocation(line: 1598, column: 99, scope: !12463)
!12463 = !DILexicalBlockFile(scope: !1650, file: !450, discriminator: 4)
!12464 = !DILocation(line: 1598, column: 109, scope: !1650)
!12465 = !DILocation(line: 1598, column: 139, scope: !1650)
!12466 = !DILocation(line: 1598, column: 165, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !1650, file: !450, line: 1598, column: 162)
!12468 = !DILocation(line: 1598, column: 182, scope: !12467)
!12469 = !DILocation(line: 1598, column: 162, scope: !12467)
!12470 = !DILocation(line: 1598, column: 192, scope: !12467)
!12471 = !DILocation(line: 1598, column: 162, scope: !1650)
!12472 = !DILocation(line: 1598, column: 162, scope: !12473)
!12473 = !DILexicalBlockFile(scope: !1650, file: !450, discriminator: 5)
!12474 = !DILocation(line: 1598, column: 223, scope: !12475)
!12475 = !DILexicalBlockFile(scope: !12467, file: !450, discriminator: 6)
!12476 = !DILocation(line: 1598, column: 241, scope: !12467)
!12477 = !DILocation(line: 1598, column: 251, scope: !12467)
!12478 = !DILocation(line: 1598, column: 276, scope: !12467)
!12479 = !DILocation(line: 1598, column: 207, scope: !12467)
!12480 = !DILocation(line: 1598, column: 295, scope: !12481)
!12481 = !DILexicalBlockFile(scope: !1651, file: !450, discriminator: 7)
!12482 = !DILocation(line: 1598, column: 295, scope: !1650)
!12483 = !DILocation(line: 1598, column: 295, scope: !12484)
!12484 = !DILexicalBlockFile(scope: !1650, file: !450, discriminator: 8)
!12485 = !DILocation(line: 1598, column: 295, scope: !12486)
!12486 = !DILexicalBlockFile(scope: !1650, file: !450, discriminator: 9)
!12487 = !DILocation(line: 1598, column: 308, scope: !12447)
!12488 = !DILocation(line: 1598, column: 308, scope: !1648)
!12489 = !DILocation(line: 1598, column: 308, scope: !12490)
!12490 = !DILexicalBlockFile(scope: !1648, file: !450, discriminator: 11)
!12491 = !DILocation(line: 1600, column: 12, scope: !1627)
!12492 = !DILocation(line: 1600, column: 5, scope: !1627)
!12493 = !DILocation(line: 1601, column: 1, scope: !1627)
!12494 = !DILocation(line: 1470, column: 36, scope: !1600)
!12495 = !DILocation(line: 1470, column: 56, scope: !1600)
!12496 = !DILocation(line: 1472, column: 5, scope: !1600)
!12497 = !DILocation(line: 1472, column: 9, scope: !1600)
!12498 = !DILocation(line: 1473, column: 5, scope: !1600)
!12499 = !DILocation(line: 1473, column: 9, scope: !1600)
!12500 = !DILocation(line: 1474, column: 5, scope: !1600)
!12501 = !DILocation(line: 1474, column: 9, scope: !1600)
!12502 = !DILocation(line: 1475, column: 5, scope: !1600)
!12503 = !DILocation(line: 1475, column: 10, scope: !1600)
!12504 = !DILocation(line: 1477, column: 5, scope: !1600)
!12505 = !DILocation(line: 1477, column: 15, scope: !1600)
!12506 = !DILocation(line: 1478, column: 5, scope: !1600)
!12507 = !DILocation(line: 1478, column: 15, scope: !1600)
!12508 = !DILocation(line: 1479, column: 5, scope: !1600)
!12509 = !DILocation(line: 1479, column: 15, scope: !1600)
!12510 = !DILocation(line: 1481, column: 29, scope: !1600)
!12511 = !DILocation(line: 1481, column: 35, scope: !1600)
!12512 = !DILocation(line: 1481, column: 13, scope: !1600)
!12513 = !DILocation(line: 1481, column: 11, scope: !1600)
!12514 = !DILocation(line: 1482, column: 9, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1482, column: 9)
!12516 = !DILocation(line: 1482, column: 15, scope: !12515)
!12517 = !DILocation(line: 1482, column: 9, scope: !1600)
!12518 = !DILocation(line: 1483, column: 9, scope: !12515)
!12519 = !DILocation(line: 1485, column: 27, scope: !1600)
!12520 = !DILocation(line: 1485, column: 11, scope: !1600)
!12521 = !DILocation(line: 1485, column: 9, scope: !1600)
!12522 = !DILocation(line: 1486, column: 9, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1486, column: 9)
!12524 = !DILocation(line: 1486, column: 13, scope: !12523)
!12525 = !DILocation(line: 1486, column: 9, scope: !1600)
!12526 = !DILocation(line: 1487, column: 9, scope: !12523)
!12527 = !DILocation(line: 1488, column: 26, scope: !1600)
!12528 = !DILocation(line: 1488, column: 12, scope: !1600)
!12529 = !DILocation(line: 1488, column: 10, scope: !1600)
!12530 = !DILocation(line: 1489, column: 9, scope: !1600)
!12531 = !DILocation(line: 1490, column: 9, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1490, column: 9)
!12533 = !DILocation(line: 1490, column: 14, scope: !12532)
!12534 = !DILocation(line: 1490, column: 20, scope: !12532)
!12535 = !DILocation(line: 1490, column: 23, scope: !12536)
!12536 = !DILexicalBlockFile(scope: !12532, file: !450, discriminator: 1)
!12537 = !DILocation(line: 1490, column: 9, scope: !1600)
!12538 = !DILocation(line: 1491, column: 9, scope: !12532)
!12539 = !DILocation(line: 1493, column: 15, scope: !1600)
!12540 = !DILocation(line: 1493, column: 10, scope: !1600)
!12541 = !DILocation(line: 1493, column: 8, scope: !1600)
!12542 = !DILocation(line: 1494, column: 9, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1494, column: 9)
!12544 = !DILocation(line: 1494, column: 12, scope: !12543)
!12545 = !DILocation(line: 1494, column: 9, scope: !1600)
!12546 = !DILocation(line: 1497, column: 9, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12543, file: !450, line: 1494, column: 17)
!12548 = !DILocation(line: 1500, column: 27, scope: !1600)
!12549 = !DILocation(line: 1500, column: 11, scope: !1600)
!12550 = !DILocation(line: 1500, column: 9, scope: !1600)
!12551 = !DILocation(line: 1501, column: 9, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1501, column: 9)
!12553 = !DILocation(line: 1501, column: 13, scope: !12552)
!12554 = !DILocation(line: 1501, column: 9, scope: !1600)
!12555 = !DILocation(line: 1502, column: 9, scope: !12552)
!12556 = !DILocation(line: 1503, column: 21, scope: !1600)
!12557 = !DILocation(line: 1503, column: 28, scope: !1600)
!12558 = !DILocation(line: 1503, column: 37, scope: !1600)
!12559 = !DILocation(line: 1504, column: 5, scope: !1600)
!12560 = !DILocation(line: 1504, column: 10, scope: !12561)
!12561 = !DILexicalBlockFile(scope: !1614, file: !450, discriminator: 1)
!12562 = !DILocation(line: 1504, column: 20, scope: !1614)
!12563 = !DILocation(line: 1504, column: 50, scope: !1614)
!12564 = !DILocation(line: 1504, column: 66, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !1614, file: !450, line: 1504, column: 63)
!12566 = !DILocation(line: 1504, column: 83, scope: !12565)
!12567 = !DILocation(line: 1504, column: 63, scope: !12565)
!12568 = !DILocation(line: 1504, column: 93, scope: !12565)
!12569 = !DILocation(line: 1504, column: 63, scope: !1614)
!12570 = !DILocation(line: 1504, column: 63, scope: !12571)
!12571 = !DILexicalBlockFile(scope: !1614, file: !450, discriminator: 2)
!12572 = !DILocation(line: 1504, column: 124, scope: !12573)
!12573 = !DILexicalBlockFile(scope: !12565, file: !450, discriminator: 3)
!12574 = !DILocation(line: 1504, column: 142, scope: !12565)
!12575 = !DILocation(line: 1504, column: 152, scope: !12565)
!12576 = !DILocation(line: 1504, column: 177, scope: !12565)
!12577 = !DILocation(line: 1504, column: 108, scope: !12565)
!12578 = !DILocation(line: 1504, column: 196, scope: !12579)
!12579 = !DILexicalBlockFile(scope: !1600, file: !450, discriminator: 4)
!12580 = !DILocation(line: 1504, column: 196, scope: !1614)
!12581 = !DILocation(line: 1504, column: 196, scope: !12582)
!12582 = !DILexicalBlockFile(scope: !1614, file: !450, discriminator: 5)
!12583 = !DILocation(line: 1506, column: 29, scope: !1600)
!12584 = !DILocation(line: 1506, column: 34, scope: !1600)
!12585 = !DILocation(line: 1506, column: 13, scope: !1600)
!12586 = !DILocation(line: 1506, column: 11, scope: !1600)
!12587 = !DILocation(line: 1507, column: 9, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1507, column: 9)
!12589 = !DILocation(line: 1507, column: 15, scope: !12588)
!12590 = !DILocation(line: 1507, column: 9, scope: !1600)
!12591 = !DILocation(line: 1508, column: 9, scope: !12588)
!12592 = !DILocation(line: 1509, column: 5, scope: !1600)
!12593 = !DILocation(line: 1509, column: 10, scope: !12594)
!12594 = !DILexicalBlockFile(scope: !1616, file: !450, discriminator: 1)
!12595 = !DILocation(line: 1509, column: 20, scope: !1616)
!12596 = !DILocation(line: 1509, column: 50, scope: !1616)
!12597 = !DILocation(line: 1509, column: 64, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !1616, file: !450, line: 1509, column: 61)
!12599 = !DILocation(line: 1509, column: 81, scope: !12598)
!12600 = !DILocation(line: 1509, column: 61, scope: !12598)
!12601 = !DILocation(line: 1509, column: 91, scope: !12598)
!12602 = !DILocation(line: 1509, column: 61, scope: !1616)
!12603 = !DILocation(line: 1509, column: 61, scope: !12604)
!12604 = !DILexicalBlockFile(scope: !1616, file: !450, discriminator: 2)
!12605 = !DILocation(line: 1509, column: 122, scope: !12606)
!12606 = !DILexicalBlockFile(scope: !12598, file: !450, discriminator: 3)
!12607 = !DILocation(line: 1509, column: 140, scope: !12598)
!12608 = !DILocation(line: 1509, column: 150, scope: !12598)
!12609 = !DILocation(line: 1509, column: 175, scope: !12598)
!12610 = !DILocation(line: 1509, column: 106, scope: !12598)
!12611 = !DILocation(line: 1509, column: 194, scope: !12579)
!12612 = !DILocation(line: 1509, column: 194, scope: !1616)
!12613 = !DILocation(line: 1509, column: 194, scope: !12614)
!12614 = !DILexicalBlockFile(scope: !1616, file: !450, discriminator: 5)
!12615 = !DILocation(line: 1511, column: 27, scope: !1600)
!12616 = !DILocation(line: 1511, column: 11, scope: !1600)
!12617 = !DILocation(line: 1511, column: 9, scope: !1600)
!12618 = !DILocation(line: 1512, column: 9, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1512, column: 9)
!12620 = !DILocation(line: 1512, column: 13, scope: !12619)
!12621 = !DILocation(line: 1512, column: 9, scope: !1600)
!12622 = !DILocation(line: 1513, column: 9, scope: !12619)
!12623 = !DILocation(line: 1514, column: 26, scope: !1600)
!12624 = !DILocation(line: 1514, column: 12, scope: !1600)
!12625 = !DILocation(line: 1514, column: 10, scope: !1600)
!12626 = !DILocation(line: 1515, column: 9, scope: !1600)
!12627 = !DILocation(line: 1516, column: 9, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1516, column: 9)
!12629 = !DILocation(line: 1516, column: 14, scope: !12628)
!12630 = !DILocation(line: 1516, column: 20, scope: !12628)
!12631 = !DILocation(line: 1516, column: 23, scope: !12632)
!12632 = !DILexicalBlockFile(scope: !12628, file: !450, discriminator: 1)
!12633 = !DILocation(line: 1516, column: 9, scope: !1600)
!12634 = !DILocation(line: 1517, column: 9, scope: !12628)
!12635 = !DILocation(line: 1519, column: 14, scope: !1600)
!12636 = !DILocation(line: 1519, column: 9, scope: !1600)
!12637 = !DILocation(line: 1519, column: 7, scope: !1600)
!12638 = !DILocation(line: 1521, column: 9, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1521, column: 9)
!12640 = !DILocation(line: 1521, column: 11, scope: !12639)
!12641 = !DILocation(line: 1521, column: 9, scope: !1600)
!12642 = !DILocation(line: 1524, column: 9, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12639, file: !450, line: 1521, column: 16)
!12644 = !DILocation(line: 1527, column: 27, scope: !1600)
!12645 = !DILocation(line: 1527, column: 11, scope: !1600)
!12646 = !DILocation(line: 1527, column: 9, scope: !1600)
!12647 = !DILocation(line: 1528, column: 9, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1528, column: 9)
!12649 = !DILocation(line: 1528, column: 13, scope: !12648)
!12650 = !DILocation(line: 1528, column: 9, scope: !1600)
!12651 = !DILocation(line: 1529, column: 9, scope: !12648)
!12652 = !DILocation(line: 1530, column: 21, scope: !1600)
!12653 = !DILocation(line: 1530, column: 28, scope: !1600)
!12654 = !DILocation(line: 1530, column: 37, scope: !1600)
!12655 = !DILocation(line: 1531, column: 26, scope: !1600)
!12656 = !DILocation(line: 1531, column: 12, scope: !1600)
!12657 = !DILocation(line: 1531, column: 10, scope: !1600)
!12658 = !DILocation(line: 1532, column: 9, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1532, column: 9)
!12660 = !DILocation(line: 1532, column: 14, scope: !12659)
!12661 = !DILocation(line: 1532, column: 20, scope: !12659)
!12662 = !DILocation(line: 1532, column: 23, scope: !12663)
!12663 = !DILexicalBlockFile(scope: !12659, file: !450, discriminator: 1)
!12664 = !DILocation(line: 1532, column: 9, scope: !1600)
!12665 = !DILocation(line: 1533, column: 9, scope: !12659)
!12666 = !DILocation(line: 1534, column: 14, scope: !1600)
!12667 = !DILocation(line: 1534, column: 9, scope: !1600)
!12668 = !DILocation(line: 1534, column: 7, scope: !1600)
!12669 = !DILocation(line: 1535, column: 15, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !1600, file: !450, line: 1535, column: 9)
!12671 = !DILocation(line: 1535, column: 9, scope: !12670)
!12672 = !DILocation(line: 1535, column: 20, scope: !12670)
!12673 = !DILocation(line: 1535, column: 17, scope: !12670)
!12674 = !DILocation(line: 1535, column: 9, scope: !1600)
!12675 = !DILocation(line: 1536, column: 25, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12670, file: !450, line: 1535, column: 26)
!12677 = !DILocation(line: 1536, column: 9, scope: !12676)
!12678 = !DILocation(line: 1538, column: 9, scope: !12676)
!12679 = !DILocation(line: 1540, column: 27, scope: !1600)
!12680 = !DILocation(line: 1540, column: 30, scope: !1600)
!12681 = !DILocation(line: 1540, column: 33, scope: !1600)
!12682 = !DILocation(line: 1540, column: 40, scope: !1600)
!12683 = !DILocation(line: 1540, column: 14, scope: !1600)
!12684 = !DILocation(line: 1540, column: 12, scope: !1600)
!12685 = !DILocation(line: 1540, column: 5, scope: !1600)
!12686 = !DILocation(line: 1543, column: 5, scope: !1600)
!12687 = !DILocation(line: 1543, column: 10, scope: !12688)
!12688 = !DILexicalBlockFile(scope: !1618, file: !450, discriminator: 1)
!12689 = !DILocation(line: 1543, column: 20, scope: !1618)
!12690 = !DILocation(line: 1543, column: 51, scope: !1618)
!12691 = !DILocation(line: 1543, column: 63, scope: !1621)
!12692 = !DILocation(line: 1543, column: 79, scope: !1621)
!12693 = !DILocation(line: 1543, column: 63, scope: !1618)
!12694 = !DILocation(line: 1543, column: 94, scope: !12695)
!12695 = !DILexicalBlockFile(scope: !1621, file: !450, discriminator: 2)
!12696 = !DILocation(line: 1543, column: 99, scope: !12697)
!12697 = !DILexicalBlockFile(scope: !1620, file: !450, discriminator: 4)
!12698 = !DILocation(line: 1543, column: 109, scope: !1620)
!12699 = !DILocation(line: 1543, column: 139, scope: !1620)
!12700 = !DILocation(line: 1543, column: 165, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !1620, file: !450, line: 1543, column: 162)
!12702 = !DILocation(line: 1543, column: 182, scope: !12701)
!12703 = !DILocation(line: 1543, column: 162, scope: !12701)
!12704 = !DILocation(line: 1543, column: 192, scope: !12701)
!12705 = !DILocation(line: 1543, column: 162, scope: !1620)
!12706 = !DILocation(line: 1543, column: 162, scope: !12707)
!12707 = !DILexicalBlockFile(scope: !1620, file: !450, discriminator: 5)
!12708 = !DILocation(line: 1543, column: 223, scope: !12709)
!12709 = !DILexicalBlockFile(scope: !12701, file: !450, discriminator: 6)
!12710 = !DILocation(line: 1543, column: 241, scope: !12701)
!12711 = !DILocation(line: 1543, column: 251, scope: !12701)
!12712 = !DILocation(line: 1543, column: 276, scope: !12701)
!12713 = !DILocation(line: 1543, column: 207, scope: !12701)
!12714 = !DILocation(line: 1543, column: 295, scope: !12715)
!12715 = !DILexicalBlockFile(scope: !1621, file: !450, discriminator: 7)
!12716 = !DILocation(line: 1543, column: 295, scope: !1620)
!12717 = !DILocation(line: 1543, column: 295, scope: !12718)
!12718 = !DILexicalBlockFile(scope: !1620, file: !450, discriminator: 8)
!12719 = !DILocation(line: 1543, column: 295, scope: !12720)
!12720 = !DILexicalBlockFile(scope: !1620, file: !450, discriminator: 9)
!12721 = !DILocation(line: 1543, column: 308, scope: !12722)
!12722 = !DILexicalBlockFile(scope: !12723, file: !450, discriminator: 10)
!12723 = !DILexicalBlockFile(scope: !1600, file: !450, discriminator: 3)
!12724 = !DILocation(line: 1543, column: 308, scope: !1618)
!12725 = !DILocation(line: 1543, column: 308, scope: !12726)
!12726 = !DILexicalBlockFile(scope: !1618, file: !450, discriminator: 11)
!12727 = !DILocation(line: 1544, column: 5, scope: !1600)
!12728 = !DILocation(line: 1544, column: 10, scope: !12729)
!12729 = !DILexicalBlockFile(scope: !1623, file: !450, discriminator: 1)
!12730 = !DILocation(line: 1544, column: 20, scope: !1623)
!12731 = !DILocation(line: 1544, column: 51, scope: !1623)
!12732 = !DILocation(line: 1544, column: 61, scope: !1626)
!12733 = !DILocation(line: 1544, column: 77, scope: !1626)
!12734 = !DILocation(line: 1544, column: 61, scope: !1623)
!12735 = !DILocation(line: 1544, column: 92, scope: !12736)
!12736 = !DILexicalBlockFile(scope: !1626, file: !450, discriminator: 2)
!12737 = !DILocation(line: 1544, column: 97, scope: !12738)
!12738 = !DILexicalBlockFile(scope: !1625, file: !450, discriminator: 4)
!12739 = !DILocation(line: 1544, column: 107, scope: !1625)
!12740 = !DILocation(line: 1544, column: 137, scope: !1625)
!12741 = !DILocation(line: 1544, column: 163, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !1625, file: !450, line: 1544, column: 160)
!12743 = !DILocation(line: 1544, column: 180, scope: !12742)
!12744 = !DILocation(line: 1544, column: 160, scope: !12742)
!12745 = !DILocation(line: 1544, column: 190, scope: !12742)
!12746 = !DILocation(line: 1544, column: 160, scope: !1625)
!12747 = !DILocation(line: 1544, column: 160, scope: !12748)
!12748 = !DILexicalBlockFile(scope: !1625, file: !450, discriminator: 5)
!12749 = !DILocation(line: 1544, column: 221, scope: !12750)
!12750 = !DILexicalBlockFile(scope: !12742, file: !450, discriminator: 6)
!12751 = !DILocation(line: 1544, column: 239, scope: !12742)
!12752 = !DILocation(line: 1544, column: 249, scope: !12742)
!12753 = !DILocation(line: 1544, column: 274, scope: !12742)
!12754 = !DILocation(line: 1544, column: 205, scope: !12742)
!12755 = !DILocation(line: 1544, column: 293, scope: !12756)
!12756 = !DILexicalBlockFile(scope: !1626, file: !450, discriminator: 7)
!12757 = !DILocation(line: 1544, column: 293, scope: !1625)
!12758 = !DILocation(line: 1544, column: 293, scope: !12759)
!12759 = !DILexicalBlockFile(scope: !1625, file: !450, discriminator: 8)
!12760 = !DILocation(line: 1544, column: 293, scope: !12761)
!12761 = !DILexicalBlockFile(scope: !1625, file: !450, discriminator: 9)
!12762 = !DILocation(line: 1544, column: 306, scope: !12722)
!12763 = !DILocation(line: 1544, column: 306, scope: !1623)
!12764 = !DILocation(line: 1544, column: 306, scope: !12765)
!12765 = !DILexicalBlockFile(scope: !1623, file: !450, discriminator: 11)
!12766 = !DILocation(line: 1545, column: 12, scope: !1600)
!12767 = !DILocation(line: 1546, column: 1, scope: !1600)
!12768 = !DILocation(line: 1545, column: 5, scope: !1600)
!12769 = !DILocation(line: 158, column: 26, scope: !1652)
!12770 = !DILocation(line: 158, column: 39, scope: !1652)
!12771 = !DILocation(line: 160, column: 5, scope: !1652)
!12772 = !DILocation(line: 160, column: 15, scope: !1652)
!12773 = !DILocation(line: 161, column: 5, scope: !1652)
!12774 = !DILocation(line: 161, column: 15, scope: !1652)
!12775 = !DILocation(line: 163, column: 31, scope: !1652)
!12776 = !DILocation(line: 163, column: 34, scope: !1652)
!12777 = !DILocation(line: 163, column: 12, scope: !1652)
!12778 = !DILocation(line: 163, column: 10, scope: !1652)
!12779 = !DILocation(line: 164, column: 9, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !1652, file: !450, line: 164, column: 9)
!12781 = !DILocation(line: 164, column: 14, scope: !12780)
!12782 = !DILocation(line: 164, column: 9, scope: !1652)
!12783 = !DILocation(line: 165, column: 9, scope: !12780)
!12784 = !DILocation(line: 166, column: 34, scope: !1652)
!12785 = !DILocation(line: 166, column: 16, scope: !1652)
!12786 = !DILocation(line: 166, column: 42, scope: !1652)
!12787 = !DILocation(line: 166, column: 15, scope: !1652)
!12788 = !DILocation(line: 166, column: 12, scope: !1652)
!12789 = !DILocation(line: 167, column: 21, scope: !1652)
!12790 = !DILocation(line: 167, column: 31, scope: !1652)
!12791 = !DILocation(line: 167, column: 40, scope: !1652)
!12792 = !DILocation(line: 168, column: 5, scope: !1652)
!12793 = !DILocation(line: 168, column: 10, scope: !12794)
!12794 = !DILexicalBlockFile(scope: !1659, file: !450, discriminator: 1)
!12795 = !DILocation(line: 168, column: 20, scope: !1659)
!12796 = !DILocation(line: 168, column: 50, scope: !1659)
!12797 = !DILocation(line: 168, column: 65, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !1659, file: !450, line: 168, column: 62)
!12799 = !DILocation(line: 168, column: 82, scope: !12798)
!12800 = !DILocation(line: 168, column: 62, scope: !12798)
!12801 = !DILocation(line: 168, column: 92, scope: !12798)
!12802 = !DILocation(line: 168, column: 62, scope: !1659)
!12803 = !DILocation(line: 168, column: 62, scope: !12804)
!12804 = !DILexicalBlockFile(scope: !1659, file: !450, discriminator: 2)
!12805 = !DILocation(line: 168, column: 123, scope: !12806)
!12806 = !DILexicalBlockFile(scope: !12798, file: !450, discriminator: 3)
!12807 = !DILocation(line: 168, column: 141, scope: !12798)
!12808 = !DILocation(line: 168, column: 151, scope: !12798)
!12809 = !DILocation(line: 168, column: 176, scope: !12798)
!12810 = !DILocation(line: 168, column: 107, scope: !12798)
!12811 = !DILocation(line: 168, column: 195, scope: !12812)
!12812 = !DILexicalBlockFile(scope: !1652, file: !450, discriminator: 4)
!12813 = !DILocation(line: 168, column: 195, scope: !1659)
!12814 = !DILocation(line: 168, column: 195, scope: !12815)
!12815 = !DILexicalBlockFile(scope: !1659, file: !450, discriminator: 5)
!12816 = !DILocation(line: 170, column: 12, scope: !1652)
!12817 = !DILocation(line: 170, column: 5, scope: !1652)
!12818 = !DILocation(line: 171, column: 1, scope: !1652)
!12819 = !DILocation(line: 1604, column: 40, scope: !1715)
!12820 = !DILocation(line: 1604, column: 57, scope: !1715)
!12821 = !DILocation(line: 1606, column: 5, scope: !1715)
!12822 = !DILocation(line: 1606, column: 15, scope: !1715)
!12823 = !DILocation(line: 1607, column: 5, scope: !1715)
!12824 = !DILocation(line: 1607, column: 15, scope: !1715)
!12825 = !DILocation(line: 1608, column: 5, scope: !1715)
!12826 = !DILocation(line: 1608, column: 15, scope: !1715)
!12827 = !DILocation(line: 1610, column: 37, scope: !1715)
!12828 = !DILocation(line: 1610, column: 15, scope: !1715)
!12829 = !DILocation(line: 1610, column: 13, scope: !1715)
!12830 = !DILocation(line: 1611, column: 9, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !1715, file: !450, line: 1611, column: 9)
!12832 = !DILocation(line: 1611, column: 17, scope: !12831)
!12833 = !DILocation(line: 1611, column: 9, scope: !1715)
!12834 = !DILocation(line: 1612, column: 9, scope: !12831)
!12835 = !DILocation(line: 1614, column: 37, scope: !1715)
!12836 = !DILocation(line: 1614, column: 46, scope: !1715)
!12837 = !DILocation(line: 1614, column: 16, scope: !1715)
!12838 = !DILocation(line: 1614, column: 14, scope: !1715)
!12839 = !DILocation(line: 1615, column: 5, scope: !1715)
!12840 = !DILocation(line: 1615, column: 10, scope: !12841)
!12841 = !DILexicalBlockFile(scope: !1725, file: !450, discriminator: 1)
!12842 = !DILocation(line: 1615, column: 20, scope: !1725)
!12843 = !DILocation(line: 1615, column: 50, scope: !1725)
!12844 = !DILocation(line: 1615, column: 68, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !1725, file: !450, line: 1615, column: 65)
!12846 = !DILocation(line: 1615, column: 85, scope: !12845)
!12847 = !DILocation(line: 1615, column: 65, scope: !12845)
!12848 = !DILocation(line: 1615, column: 95, scope: !12845)
!12849 = !DILocation(line: 1615, column: 65, scope: !1725)
!12850 = !DILocation(line: 1615, column: 65, scope: !12851)
!12851 = !DILexicalBlockFile(scope: !1725, file: !450, discriminator: 2)
!12852 = !DILocation(line: 1615, column: 126, scope: !12853)
!12853 = !DILexicalBlockFile(scope: !12845, file: !450, discriminator: 3)
!12854 = !DILocation(line: 1615, column: 144, scope: !12845)
!12855 = !DILocation(line: 1615, column: 154, scope: !12845)
!12856 = !DILocation(line: 1615, column: 179, scope: !12845)
!12857 = !DILocation(line: 1615, column: 110, scope: !12845)
!12858 = !DILocation(line: 1615, column: 198, scope: !12859)
!12859 = !DILexicalBlockFile(scope: !1715, file: !450, discriminator: 4)
!12860 = !DILocation(line: 1615, column: 198, scope: !1725)
!12861 = !DILocation(line: 1615, column: 198, scope: !12862)
!12862 = !DILexicalBlockFile(scope: !1725, file: !450, discriminator: 5)
!12863 = !DILocation(line: 1616, column: 9, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !1715, file: !450, line: 1616, column: 9)
!12865 = !DILocation(line: 1616, column: 18, scope: !12864)
!12866 = !DILocation(line: 1616, column: 9, scope: !1715)
!12867 = !DILocation(line: 1617, column: 9, scope: !12864)
!12868 = !DILocation(line: 1619, column: 39, scope: !1715)
!12869 = !DILocation(line: 1619, column: 14, scope: !1715)
!12870 = !DILocation(line: 1619, column: 12, scope: !1715)
!12871 = !DILocation(line: 1620, column: 5, scope: !1715)
!12872 = !DILocation(line: 1620, column: 10, scope: !12873)
!12873 = !DILexicalBlockFile(scope: !1727, file: !450, discriminator: 1)
!12874 = !DILocation(line: 1620, column: 20, scope: !1727)
!12875 = !DILocation(line: 1620, column: 50, scope: !1727)
!12876 = !DILocation(line: 1620, column: 69, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !1727, file: !450, line: 1620, column: 66)
!12878 = !DILocation(line: 1620, column: 86, scope: !12877)
!12879 = !DILocation(line: 1620, column: 66, scope: !12877)
!12880 = !DILocation(line: 1620, column: 96, scope: !12877)
!12881 = !DILocation(line: 1620, column: 66, scope: !1727)
!12882 = !DILocation(line: 1620, column: 66, scope: !12883)
!12883 = !DILexicalBlockFile(scope: !1727, file: !450, discriminator: 2)
!12884 = !DILocation(line: 1620, column: 127, scope: !12885)
!12885 = !DILexicalBlockFile(scope: !12877, file: !450, discriminator: 3)
!12886 = !DILocation(line: 1620, column: 145, scope: !12877)
!12887 = !DILocation(line: 1620, column: 155, scope: !12877)
!12888 = !DILocation(line: 1620, column: 180, scope: !12877)
!12889 = !DILocation(line: 1620, column: 111, scope: !12877)
!12890 = !DILocation(line: 1620, column: 199, scope: !12859)
!12891 = !DILocation(line: 1620, column: 199, scope: !1727)
!12892 = !DILocation(line: 1620, column: 199, scope: !12893)
!12893 = !DILexicalBlockFile(scope: !1727, file: !450, discriminator: 5)
!12894 = !DILocation(line: 1621, column: 12, scope: !1715)
!12895 = !DILocation(line: 1621, column: 5, scope: !1715)
!12896 = !DILocation(line: 1622, column: 1, scope: !1715)
!12897 = !DILocation(line: 1648, column: 50, scope: !1733)
!12898 = !DILocation(line: 1648, column: 74, scope: !1733)
!12899 = !DILocation(line: 1650, column: 5, scope: !1733)
!12900 = !DILocation(line: 1650, column: 15, scope: !1733)
!12901 = !DILocation(line: 1651, column: 5, scope: !1733)
!12902 = !DILocation(line: 1651, column: 15, scope: !1733)
!12903 = !DILocation(line: 1652, column: 5, scope: !1733)
!12904 = !DILocation(line: 1652, column: 15, scope: !1733)
!12905 = !DILocation(line: 1654, column: 39, scope: !1733)
!12906 = !DILocation(line: 1654, column: 17, scope: !1733)
!12907 = !DILocation(line: 1654, column: 15, scope: !1733)
!12908 = !DILocation(line: 1655, column: 9, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !1733, file: !450, line: 1655, column: 9)
!12910 = !DILocation(line: 1655, column: 19, scope: !12909)
!12911 = !DILocation(line: 1655, column: 9, scope: !1733)
!12912 = !DILocation(line: 1656, column: 9, scope: !12909)
!12913 = !DILocation(line: 1658, column: 40, scope: !1733)
!12914 = !DILocation(line: 1658, column: 18, scope: !1733)
!12915 = !DILocation(line: 1658, column: 16, scope: !1733)
!12916 = !DILocation(line: 1659, column: 9, scope: !1743)
!12917 = !DILocation(line: 1659, column: 20, scope: !1743)
!12918 = !DILocation(line: 1659, column: 9, scope: !1733)
!12919 = !DILocation(line: 1660, column: 9, scope: !1742)
!12920 = !DILocation(line: 1660, column: 14, scope: !12921)
!12921 = !DILexicalBlockFile(scope: !1741, file: !450, discriminator: 1)
!12922 = !DILocation(line: 1660, column: 24, scope: !1741)
!12923 = !DILocation(line: 1660, column: 54, scope: !1741)
!12924 = !DILocation(line: 1660, column: 74, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !1741, file: !450, line: 1660, column: 71)
!12926 = !DILocation(line: 1660, column: 91, scope: !12925)
!12927 = !DILocation(line: 1660, column: 71, scope: !12925)
!12928 = !DILocation(line: 1660, column: 101, scope: !12925)
!12929 = !DILocation(line: 1660, column: 71, scope: !1741)
!12930 = !DILocation(line: 1660, column: 71, scope: !12931)
!12931 = !DILexicalBlockFile(scope: !1741, file: !450, discriminator: 2)
!12932 = !DILocation(line: 1660, column: 132, scope: !12933)
!12933 = !DILexicalBlockFile(scope: !12925, file: !450, discriminator: 3)
!12934 = !DILocation(line: 1660, column: 150, scope: !12925)
!12935 = !DILocation(line: 1660, column: 160, scope: !12925)
!12936 = !DILocation(line: 1660, column: 185, scope: !12925)
!12937 = !DILocation(line: 1660, column: 116, scope: !12925)
!12938 = !DILocation(line: 1660, column: 204, scope: !12939)
!12939 = !DILexicalBlockFile(scope: !1742, file: !450, discriminator: 4)
!12940 = !DILocation(line: 1660, column: 204, scope: !1741)
!12941 = !DILocation(line: 1660, column: 204, scope: !12942)
!12942 = !DILexicalBlockFile(scope: !1741, file: !450, discriminator: 5)
!12943 = !DILocation(line: 1661, column: 9, scope: !1742)
!12944 = !DILocation(line: 1664, column: 34, scope: !1733)
!12945 = !DILocation(line: 1664, column: 45, scope: !1733)
!12946 = !DILocation(line: 1664, column: 14, scope: !1733)
!12947 = !DILocation(line: 1664, column: 12, scope: !1733)
!12948 = !DILocation(line: 1665, column: 5, scope: !1733)
!12949 = !DILocation(line: 1665, column: 10, scope: !12950)
!12950 = !DILexicalBlockFile(scope: !1745, file: !450, discriminator: 1)
!12951 = !DILocation(line: 1665, column: 20, scope: !1745)
!12952 = !DILocation(line: 1665, column: 50, scope: !1745)
!12953 = !DILocation(line: 1665, column: 70, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !1745, file: !450, line: 1665, column: 67)
!12955 = !DILocation(line: 1665, column: 87, scope: !12954)
!12956 = !DILocation(line: 1665, column: 67, scope: !12954)
!12957 = !DILocation(line: 1665, column: 97, scope: !12954)
!12958 = !DILocation(line: 1665, column: 67, scope: !1745)
!12959 = !DILocation(line: 1665, column: 67, scope: !12960)
!12960 = !DILexicalBlockFile(scope: !1745, file: !450, discriminator: 2)
!12961 = !DILocation(line: 1665, column: 128, scope: !12962)
!12962 = !DILexicalBlockFile(scope: !12954, file: !450, discriminator: 3)
!12963 = !DILocation(line: 1665, column: 146, scope: !12954)
!12964 = !DILocation(line: 1665, column: 156, scope: !12954)
!12965 = !DILocation(line: 1665, column: 181, scope: !12954)
!12966 = !DILocation(line: 1665, column: 112, scope: !12954)
!12967 = !DILocation(line: 1665, column: 200, scope: !12968)
!12968 = !DILexicalBlockFile(scope: !1733, file: !450, discriminator: 4)
!12969 = !DILocation(line: 1665, column: 200, scope: !1745)
!12970 = !DILocation(line: 1665, column: 200, scope: !12971)
!12971 = !DILexicalBlockFile(scope: !1745, file: !450, discriminator: 5)
!12972 = !DILocation(line: 1666, column: 5, scope: !1733)
!12973 = !DILocation(line: 1666, column: 10, scope: !12974)
!12974 = !DILexicalBlockFile(scope: !1747, file: !450, discriminator: 1)
!12975 = !DILocation(line: 1666, column: 20, scope: !1747)
!12976 = !DILocation(line: 1666, column: 50, scope: !1747)
!12977 = !DILocation(line: 1666, column: 71, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !1747, file: !450, line: 1666, column: 68)
!12979 = !DILocation(line: 1666, column: 88, scope: !12978)
!12980 = !DILocation(line: 1666, column: 68, scope: !12978)
!12981 = !DILocation(line: 1666, column: 98, scope: !12978)
!12982 = !DILocation(line: 1666, column: 68, scope: !1747)
!12983 = !DILocation(line: 1666, column: 68, scope: !12984)
!12984 = !DILexicalBlockFile(scope: !1747, file: !450, discriminator: 2)
!12985 = !DILocation(line: 1666, column: 129, scope: !12986)
!12986 = !DILexicalBlockFile(scope: !12978, file: !450, discriminator: 3)
!12987 = !DILocation(line: 1666, column: 147, scope: !12978)
!12988 = !DILocation(line: 1666, column: 157, scope: !12978)
!12989 = !DILocation(line: 1666, column: 182, scope: !12978)
!12990 = !DILocation(line: 1666, column: 113, scope: !12978)
!12991 = !DILocation(line: 1666, column: 201, scope: !12968)
!12992 = !DILocation(line: 1666, column: 201, scope: !1747)
!12993 = !DILocation(line: 1666, column: 201, scope: !12994)
!12994 = !DILexicalBlockFile(scope: !1747, file: !450, discriminator: 5)
!12995 = !DILocation(line: 1667, column: 12, scope: !1733)
!12996 = !DILocation(line: 1667, column: 5, scope: !1733)
!12997 = !DILocation(line: 1668, column: 1, scope: !1733)
!12998 = !DILocation(line: 1671, column: 46, scope: !1748)
!12999 = !DILocation(line: 1671, column: 63, scope: !1748)
!13000 = !DILocation(line: 1673, column: 5, scope: !1748)
!13001 = !DILocation(line: 1673, column: 15, scope: !1748)
!13002 = !DILocation(line: 1674, column: 5, scope: !1748)
!13003 = !DILocation(line: 1674, column: 15, scope: !1748)
!13004 = !DILocation(line: 1674, column: 38, scope: !1748)
!13005 = !DILocation(line: 1674, column: 45, scope: !1748)
!13006 = !DILocation(line: 1675, column: 5, scope: !1748)
!13007 = !DILocation(line: 1675, column: 15, scope: !1748)
!13008 = !DILocation(line: 1677, column: 37, scope: !1748)
!13009 = !DILocation(line: 1677, column: 15, scope: !1748)
!13010 = !DILocation(line: 1677, column: 13, scope: !1748)
!13011 = !DILocation(line: 1678, column: 9, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1678, column: 9)
!13013 = !DILocation(line: 1678, column: 17, scope: !13012)
!13014 = !DILocation(line: 1678, column: 9, scope: !1748)
!13015 = !DILocation(line: 1679, column: 9, scope: !13012)
!13016 = !DILocation(line: 1680, column: 36, scope: !1748)
!13017 = !DILocation(line: 1680, column: 13, scope: !1748)
!13018 = !DILocation(line: 1680, column: 11, scope: !1748)
!13019 = !DILocation(line: 1681, column: 9, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1681, column: 9)
!13021 = !DILocation(line: 1681, column: 15, scope: !13020)
!13022 = !DILocation(line: 1681, column: 9, scope: !1748)
!13023 = !DILocation(line: 1682, column: 9, scope: !13020)
!13024 = !DILocation(line: 1683, column: 30, scope: !1748)
!13025 = !DILocation(line: 1683, column: 59, scope: !1748)
!13026 = !DILocation(line: 1683, column: 41, scope: !1748)
!13027 = !DILocation(line: 1683, column: 68, scope: !1748)
!13028 = !DILocation(line: 1683, column: 40, scope: !1748)
!13029 = !DILocation(line: 1683, column: 12, scope: !1748)
!13030 = !DILocation(line: 1683, column: 10, scope: !1748)
!13031 = !DILocation(line: 1684, column: 5, scope: !1748)
!13032 = !DILocation(line: 1684, column: 10, scope: !13033)
!13033 = !DILexicalBlockFile(scope: !1758, file: !450, discriminator: 1)
!13034 = !DILocation(line: 1684, column: 20, scope: !1758)
!13035 = !DILocation(line: 1684, column: 50, scope: !1758)
!13036 = !DILocation(line: 1684, column: 68, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !1758, file: !450, line: 1684, column: 65)
!13038 = !DILocation(line: 1684, column: 85, scope: !13037)
!13039 = !DILocation(line: 1684, column: 65, scope: !13037)
!13040 = !DILocation(line: 1684, column: 95, scope: !13037)
!13041 = !DILocation(line: 1684, column: 65, scope: !1758)
!13042 = !DILocation(line: 1684, column: 65, scope: !13043)
!13043 = !DILexicalBlockFile(scope: !1758, file: !450, discriminator: 2)
!13044 = !DILocation(line: 1684, column: 126, scope: !13045)
!13045 = !DILexicalBlockFile(scope: !13037, file: !450, discriminator: 3)
!13046 = !DILocation(line: 1684, column: 144, scope: !13037)
!13047 = !DILocation(line: 1684, column: 154, scope: !13037)
!13048 = !DILocation(line: 1684, column: 179, scope: !13037)
!13049 = !DILocation(line: 1684, column: 110, scope: !13037)
!13050 = !DILocation(line: 1684, column: 198, scope: !13051)
!13051 = !DILexicalBlockFile(scope: !1748, file: !450, discriminator: 4)
!13052 = !DILocation(line: 1684, column: 198, scope: !1758)
!13053 = !DILocation(line: 1684, column: 198, scope: !13054)
!13054 = !DILexicalBlockFile(scope: !1758, file: !450, discriminator: 5)
!13055 = !DILocation(line: 1685, column: 13, scope: !1748)
!13056 = !DILocation(line: 1686, column: 9, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1686, column: 9)
!13058 = !DILocation(line: 1686, column: 14, scope: !13057)
!13059 = !DILocation(line: 1686, column: 9, scope: !1748)
!13060 = !DILocation(line: 1687, column: 9, scope: !13057)
!13061 = !DILocation(line: 1688, column: 31, scope: !1748)
!13062 = !DILocation(line: 1688, column: 57, scope: !1748)
!13063 = !DILocation(line: 1688, column: 39, scope: !1748)
!13064 = !DILocation(line: 1688, column: 66, scope: !1748)
!13065 = !DILocation(line: 1688, column: 38, scope: !1748)
!13066 = !DILocation(line: 1688, column: 16, scope: !1748)
!13067 = !DILocation(line: 1688, column: 14, scope: !1748)
!13068 = !DILocation(line: 1689, column: 5, scope: !1748)
!13069 = !DILocation(line: 1689, column: 10, scope: !13070)
!13070 = !DILexicalBlockFile(scope: !1760, file: !450, discriminator: 1)
!13071 = !DILocation(line: 1689, column: 20, scope: !1760)
!13072 = !DILocation(line: 1689, column: 50, scope: !1760)
!13073 = !DILocation(line: 1689, column: 65, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !1760, file: !450, line: 1689, column: 62)
!13075 = !DILocation(line: 1689, column: 82, scope: !13074)
!13076 = !DILocation(line: 1689, column: 62, scope: !13074)
!13077 = !DILocation(line: 1689, column: 92, scope: !13074)
!13078 = !DILocation(line: 1689, column: 62, scope: !1760)
!13079 = !DILocation(line: 1689, column: 62, scope: !13080)
!13080 = !DILexicalBlockFile(scope: !1760, file: !450, discriminator: 2)
!13081 = !DILocation(line: 1689, column: 123, scope: !13082)
!13082 = !DILexicalBlockFile(scope: !13074, file: !450, discriminator: 3)
!13083 = !DILocation(line: 1689, column: 141, scope: !13074)
!13084 = !DILocation(line: 1689, column: 151, scope: !13074)
!13085 = !DILocation(line: 1689, column: 176, scope: !13074)
!13086 = !DILocation(line: 1689, column: 107, scope: !13074)
!13087 = !DILocation(line: 1689, column: 195, scope: !13051)
!13088 = !DILocation(line: 1689, column: 195, scope: !1760)
!13089 = !DILocation(line: 1689, column: 195, scope: !13090)
!13090 = !DILexicalBlockFile(scope: !1760, file: !450, discriminator: 5)
!13091 = !DILocation(line: 1690, column: 9, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !1748, file: !450, line: 1690, column: 9)
!13093 = !DILocation(line: 1690, column: 18, scope: !13092)
!13094 = !DILocation(line: 1690, column: 9, scope: !1748)
!13095 = !DILocation(line: 1691, column: 9, scope: !13092)
!13096 = !DILocation(line: 1692, column: 39, scope: !1748)
!13097 = !DILocation(line: 1692, column: 14, scope: !1748)
!13098 = !DILocation(line: 1692, column: 12, scope: !1748)
!13099 = !DILocation(line: 1693, column: 5, scope: !1748)
!13100 = !DILocation(line: 1693, column: 10, scope: !13101)
!13101 = !DILexicalBlockFile(scope: !1762, file: !450, discriminator: 1)
!13102 = !DILocation(line: 1693, column: 20, scope: !1762)
!13103 = !DILocation(line: 1693, column: 50, scope: !1762)
!13104 = !DILocation(line: 1693, column: 69, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !1762, file: !450, line: 1693, column: 66)
!13106 = !DILocation(line: 1693, column: 86, scope: !13105)
!13107 = !DILocation(line: 1693, column: 66, scope: !13105)
!13108 = !DILocation(line: 1693, column: 96, scope: !13105)
!13109 = !DILocation(line: 1693, column: 66, scope: !1762)
!13110 = !DILocation(line: 1693, column: 66, scope: !13111)
!13111 = !DILexicalBlockFile(scope: !1762, file: !450, discriminator: 2)
!13112 = !DILocation(line: 1693, column: 127, scope: !13113)
!13113 = !DILexicalBlockFile(scope: !13105, file: !450, discriminator: 3)
!13114 = !DILocation(line: 1693, column: 145, scope: !13105)
!13115 = !DILocation(line: 1693, column: 155, scope: !13105)
!13116 = !DILocation(line: 1693, column: 180, scope: !13105)
!13117 = !DILocation(line: 1693, column: 111, scope: !13105)
!13118 = !DILocation(line: 1693, column: 199, scope: !13051)
!13119 = !DILocation(line: 1693, column: 199, scope: !1762)
!13120 = !DILocation(line: 1693, column: 199, scope: !13121)
!13121 = !DILexicalBlockFile(scope: !1762, file: !450, discriminator: 5)
!13122 = !DILocation(line: 1693, column: 199, scope: !13123)
!13123 = !DILexicalBlockFile(scope: !1762, file: !450, discriminator: 6)
!13124 = !DILocation(line: 1695, column: 5, scope: !1748)
!13125 = !DILocation(line: 1695, column: 10, scope: !13126)
!13126 = !DILexicalBlockFile(scope: !1764, file: !450, discriminator: 1)
!13127 = !DILocation(line: 1695, column: 20, scope: !1764)
!13128 = !DILocation(line: 1695, column: 51, scope: !1764)
!13129 = !DILocation(line: 1695, column: 65, scope: !1767)
!13130 = !DILocation(line: 1695, column: 81, scope: !1767)
!13131 = !DILocation(line: 1695, column: 65, scope: !1764)
!13132 = !DILocation(line: 1695, column: 96, scope: !13133)
!13133 = !DILexicalBlockFile(scope: !1767, file: !450, discriminator: 2)
!13134 = !DILocation(line: 1695, column: 101, scope: !13135)
!13135 = !DILexicalBlockFile(scope: !1766, file: !450, discriminator: 4)
!13136 = !DILocation(line: 1695, column: 111, scope: !1766)
!13137 = !DILocation(line: 1695, column: 141, scope: !1766)
!13138 = !DILocation(line: 1695, column: 167, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !1766, file: !450, line: 1695, column: 164)
!13140 = !DILocation(line: 1695, column: 184, scope: !13139)
!13141 = !DILocation(line: 1695, column: 164, scope: !13139)
!13142 = !DILocation(line: 1695, column: 194, scope: !13139)
!13143 = !DILocation(line: 1695, column: 164, scope: !1766)
!13144 = !DILocation(line: 1695, column: 164, scope: !13145)
!13145 = !DILexicalBlockFile(scope: !1766, file: !450, discriminator: 5)
!13146 = !DILocation(line: 1695, column: 225, scope: !13147)
!13147 = !DILexicalBlockFile(scope: !13139, file: !450, discriminator: 6)
!13148 = !DILocation(line: 1695, column: 243, scope: !13139)
!13149 = !DILocation(line: 1695, column: 253, scope: !13139)
!13150 = !DILocation(line: 1695, column: 278, scope: !13139)
!13151 = !DILocation(line: 1695, column: 209, scope: !13139)
!13152 = !DILocation(line: 1695, column: 297, scope: !13153)
!13153 = !DILexicalBlockFile(scope: !1767, file: !450, discriminator: 7)
!13154 = !DILocation(line: 1695, column: 297, scope: !1766)
!13155 = !DILocation(line: 1695, column: 297, scope: !13156)
!13156 = !DILexicalBlockFile(scope: !1766, file: !450, discriminator: 8)
!13157 = !DILocation(line: 1695, column: 297, scope: !13158)
!13158 = !DILexicalBlockFile(scope: !1766, file: !450, discriminator: 9)
!13159 = !DILocation(line: 1695, column: 310, scope: !13160)
!13160 = !DILexicalBlockFile(scope: !13161, file: !450, discriminator: 10)
!13161 = !DILexicalBlockFile(scope: !1748, file: !450, discriminator: 3)
!13162 = !DILocation(line: 1695, column: 310, scope: !1764)
!13163 = !DILocation(line: 1695, column: 310, scope: !13164)
!13164 = !DILexicalBlockFile(scope: !1764, file: !450, discriminator: 11)
!13165 = !DILocation(line: 1696, column: 5, scope: !1748)
!13166 = !DILocation(line: 1696, column: 10, scope: !13167)
!13167 = !DILexicalBlockFile(scope: !1769, file: !450, discriminator: 1)
!13168 = !DILocation(line: 1696, column: 20, scope: !1769)
!13169 = !DILocation(line: 1696, column: 51, scope: !1769)
!13170 = !DILocation(line: 1696, column: 63, scope: !1772)
!13171 = !DILocation(line: 1696, column: 79, scope: !1772)
!13172 = !DILocation(line: 1696, column: 63, scope: !1769)
!13173 = !DILocation(line: 1696, column: 94, scope: !13174)
!13174 = !DILexicalBlockFile(scope: !1772, file: !450, discriminator: 2)
!13175 = !DILocation(line: 1696, column: 99, scope: !13176)
!13176 = !DILexicalBlockFile(scope: !1771, file: !450, discriminator: 4)
!13177 = !DILocation(line: 1696, column: 109, scope: !1771)
!13178 = !DILocation(line: 1696, column: 139, scope: !1771)
!13179 = !DILocation(line: 1696, column: 165, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !1771, file: !450, line: 1696, column: 162)
!13181 = !DILocation(line: 1696, column: 182, scope: !13180)
!13182 = !DILocation(line: 1696, column: 162, scope: !13180)
!13183 = !DILocation(line: 1696, column: 192, scope: !13180)
!13184 = !DILocation(line: 1696, column: 162, scope: !1771)
!13185 = !DILocation(line: 1696, column: 162, scope: !13186)
!13186 = !DILexicalBlockFile(scope: !1771, file: !450, discriminator: 5)
!13187 = !DILocation(line: 1696, column: 223, scope: !13188)
!13188 = !DILexicalBlockFile(scope: !13180, file: !450, discriminator: 6)
!13189 = !DILocation(line: 1696, column: 241, scope: !13180)
!13190 = !DILocation(line: 1696, column: 251, scope: !13180)
!13191 = !DILocation(line: 1696, column: 276, scope: !13180)
!13192 = !DILocation(line: 1696, column: 207, scope: !13180)
!13193 = !DILocation(line: 1696, column: 295, scope: !13194)
!13194 = !DILexicalBlockFile(scope: !1772, file: !450, discriminator: 7)
!13195 = !DILocation(line: 1696, column: 295, scope: !1771)
!13196 = !DILocation(line: 1696, column: 295, scope: !13197)
!13197 = !DILexicalBlockFile(scope: !1771, file: !450, discriminator: 8)
!13198 = !DILocation(line: 1696, column: 295, scope: !13199)
!13199 = !DILexicalBlockFile(scope: !1771, file: !450, discriminator: 9)
!13200 = !DILocation(line: 1696, column: 308, scope: !13160)
!13201 = !DILocation(line: 1696, column: 308, scope: !1769)
!13202 = !DILocation(line: 1696, column: 308, scope: !13203)
!13203 = !DILexicalBlockFile(scope: !1769, file: !450, discriminator: 11)
!13204 = !DILocation(line: 1698, column: 12, scope: !1748)
!13205 = !DILocation(line: 1698, column: 5, scope: !1748)
!13206 = !DILocation(line: 1699, column: 1, scope: !1748)
!13207 = !DILocation(line: 1702, column: 44, scope: !1773)
!13208 = !DILocation(line: 1702, column: 61, scope: !1773)
!13209 = !DILocation(line: 1704, column: 5, scope: !1773)
!13210 = !DILocation(line: 1704, column: 15, scope: !1773)
!13211 = !DILocation(line: 1705, column: 5, scope: !1773)
!13212 = !DILocation(line: 1705, column: 15, scope: !1773)
!13213 = !DILocation(line: 1705, column: 25, scope: !1773)
!13214 = !DILocation(line: 1706, column: 37, scope: !1773)
!13215 = !DILocation(line: 1706, column: 15, scope: !1773)
!13216 = !DILocation(line: 1706, column: 13, scope: !1773)
!13217 = !DILocation(line: 1707, column: 9, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !1773, file: !450, line: 1707, column: 9)
!13219 = !DILocation(line: 1707, column: 17, scope: !13218)
!13220 = !DILocation(line: 1707, column: 9, scope: !1773)
!13221 = !DILocation(line: 1708, column: 9, scope: !13218)
!13222 = !DILocation(line: 1709, column: 31, scope: !1773)
!13223 = !DILocation(line: 1709, column: 40, scope: !1773)
!13224 = !DILocation(line: 1709, column: 16, scope: !1773)
!13225 = !DILocation(line: 1709, column: 14, scope: !1773)
!13226 = !DILocation(line: 1710, column: 5, scope: !1773)
!13227 = !DILocation(line: 1710, column: 10, scope: !13228)
!13228 = !DILexicalBlockFile(scope: !1781, file: !450, discriminator: 1)
!13229 = !DILocation(line: 1710, column: 20, scope: !1781)
!13230 = !DILocation(line: 1710, column: 50, scope: !1781)
!13231 = !DILocation(line: 1710, column: 68, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !1781, file: !450, line: 1710, column: 65)
!13233 = !DILocation(line: 1710, column: 85, scope: !13232)
!13234 = !DILocation(line: 1710, column: 65, scope: !13232)
!13235 = !DILocation(line: 1710, column: 95, scope: !13232)
!13236 = !DILocation(line: 1710, column: 65, scope: !1781)
!13237 = !DILocation(line: 1710, column: 65, scope: !13238)
!13238 = !DILexicalBlockFile(scope: !1781, file: !450, discriminator: 2)
!13239 = !DILocation(line: 1710, column: 126, scope: !13240)
!13240 = !DILexicalBlockFile(scope: !13232, file: !450, discriminator: 3)
!13241 = !DILocation(line: 1710, column: 144, scope: !13232)
!13242 = !DILocation(line: 1710, column: 154, scope: !13232)
!13243 = !DILocation(line: 1710, column: 179, scope: !13232)
!13244 = !DILocation(line: 1710, column: 110, scope: !13232)
!13245 = !DILocation(line: 1710, column: 198, scope: !13246)
!13246 = !DILexicalBlockFile(scope: !1773, file: !450, discriminator: 4)
!13247 = !DILocation(line: 1710, column: 198, scope: !1781)
!13248 = !DILocation(line: 1710, column: 198, scope: !13249)
!13249 = !DILexicalBlockFile(scope: !1781, file: !450, discriminator: 5)
!13250 = !DILocation(line: 1711, column: 9, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !1773, file: !450, line: 1711, column: 9)
!13252 = !DILocation(line: 1711, column: 18, scope: !13251)
!13253 = !DILocation(line: 1711, column: 9, scope: !1773)
!13254 = !DILocation(line: 1712, column: 9, scope: !13251)
!13255 = !DILocation(line: 1713, column: 39, scope: !1773)
!13256 = !DILocation(line: 1713, column: 14, scope: !1773)
!13257 = !DILocation(line: 1713, column: 12, scope: !1773)
!13258 = !DILocation(line: 1714, column: 5, scope: !1773)
!13259 = !DILocation(line: 1714, column: 10, scope: !13260)
!13260 = !DILexicalBlockFile(scope: !1783, file: !450, discriminator: 1)
!13261 = !DILocation(line: 1714, column: 20, scope: !1783)
!13262 = !DILocation(line: 1714, column: 50, scope: !1783)
!13263 = !DILocation(line: 1714, column: 69, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !1783, file: !450, line: 1714, column: 66)
!13265 = !DILocation(line: 1714, column: 86, scope: !13264)
!13266 = !DILocation(line: 1714, column: 66, scope: !13264)
!13267 = !DILocation(line: 1714, column: 96, scope: !13264)
!13268 = !DILocation(line: 1714, column: 66, scope: !1783)
!13269 = !DILocation(line: 1714, column: 66, scope: !13270)
!13270 = !DILexicalBlockFile(scope: !1783, file: !450, discriminator: 2)
!13271 = !DILocation(line: 1714, column: 127, scope: !13272)
!13272 = !DILexicalBlockFile(scope: !13264, file: !450, discriminator: 3)
!13273 = !DILocation(line: 1714, column: 145, scope: !13264)
!13274 = !DILocation(line: 1714, column: 155, scope: !13264)
!13275 = !DILocation(line: 1714, column: 180, scope: !13264)
!13276 = !DILocation(line: 1714, column: 111, scope: !13264)
!13277 = !DILocation(line: 1714, column: 199, scope: !13246)
!13278 = !DILocation(line: 1714, column: 199, scope: !1783)
!13279 = !DILocation(line: 1714, column: 199, scope: !13280)
!13280 = !DILexicalBlockFile(scope: !1783, file: !450, discriminator: 5)
!13281 = !DILocation(line: 1716, column: 12, scope: !1773)
!13282 = !DILocation(line: 1716, column: 5, scope: !1773)
!13283 = !DILocation(line: 1717, column: 1, scope: !1773)
!13284 = !DILocation(line: 2250, column: 34, scope: !1796)
!13285 = !DILocation(line: 2252, column: 56, scope: !1796)
!13286 = !DILocation(line: 2252, column: 64, scope: !1796)
!13287 = !DILocation(line: 2253, column: 56, scope: !1796)
!13288 = !DILocation(line: 2253, column: 64, scope: !1796)
!13289 = !DILocation(line: 2254, column: 56, scope: !1796)
!13290 = !DILocation(line: 2254, column: 64, scope: !1796)
!13291 = !DILocation(line: 2252, column: 12, scope: !1796)
!13292 = !DILocation(line: 2252, column: 5, scope: !1796)
!13293 = !DILocation(line: 2274, column: 32, scope: !1815)
!13294 = !DILocation(line: 2276, column: 46, scope: !1815)
!13295 = !DILocation(line: 2276, column: 34, scope: !1815)
!13296 = !DILocation(line: 2276, column: 54, scope: !1815)
!13297 = !DILocation(line: 2276, column: 79, scope: !1815)
!13298 = !DILocation(line: 2276, column: 64, scope: !1815)
!13299 = !DILocation(line: 2276, column: 12, scope: !1815)
!13300 = !DILocation(line: 2276, column: 5, scope: !1815)
!13301 = !DILocation(line: 1996, column: 19, scope: !1890)
!13302 = !DILocation(line: 1996, column: 34, scope: !1890)
!13303 = !DILocation(line: 1996, column: 51, scope: !1890)
!13304 = !DILocation(line: 1996, column: 66, scope: !1890)
!13305 = !DILocation(line: 1997, column: 15, scope: !1890)
!13306 = !DILocation(line: 1999, column: 5, scope: !1890)
!13307 = !DILocation(line: 1999, column: 15, scope: !1890)
!13308 = !DILocation(line: 2000, column: 5, scope: !1890)
!13309 = !DILocation(line: 2000, column: 15, scope: !1890)
!13310 = !DILocation(line: 2004, column: 26, scope: !1905)
!13311 = !DILocation(line: 2004, column: 33, scope: !1905)
!13312 = !DILocation(line: 2004, column: 44, scope: !1905)
!13313 = !DILocation(line: 2004, column: 53, scope: !1905)
!13314 = !DILocation(line: 2004, column: 70, scope: !1905)
!13315 = !DILocation(line: 2004, column: 9, scope: !1890)
!13316 = !DILocation(line: 2005, column: 34, scope: !1904)
!13317 = !DILocation(line: 2005, column: 39, scope: !1904)
!13318 = !DILocation(line: 2005, column: 16, scope: !1904)
!13319 = !DILocation(line: 2005, column: 14, scope: !1904)
!13320 = !DILocation(line: 2006, column: 13, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !1904, file: !450, line: 2006, column: 13)
!13322 = !DILocation(line: 2006, column: 18, scope: !13321)
!13323 = !DILocation(line: 2006, column: 13, scope: !1904)
!13324 = !DILocation(line: 2007, column: 13, scope: !13321)
!13325 = !DILocation(line: 2008, column: 28, scope: !1904)
!13326 = !DILocation(line: 2008, column: 35, scope: !1904)
!13327 = !DILocation(line: 2008, column: 15, scope: !1904)
!13328 = !DILocation(line: 2008, column: 13, scope: !1904)
!13329 = !DILocation(line: 2009, column: 9, scope: !1904)
!13330 = !DILocation(line: 2009, column: 14, scope: !13331)
!13331 = !DILexicalBlockFile(scope: !1903, file: !450, discriminator: 1)
!13332 = !DILocation(line: 2009, column: 24, scope: !1903)
!13333 = !DILocation(line: 2009, column: 54, scope: !1903)
!13334 = !DILocation(line: 2009, column: 69, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !1903, file: !450, line: 2009, column: 66)
!13336 = !DILocation(line: 2009, column: 86, scope: !13335)
!13337 = !DILocation(line: 2009, column: 66, scope: !13335)
!13338 = !DILocation(line: 2009, column: 96, scope: !13335)
!13339 = !DILocation(line: 2009, column: 66, scope: !1903)
!13340 = !DILocation(line: 2009, column: 66, scope: !13341)
!13341 = !DILexicalBlockFile(scope: !1903, file: !450, discriminator: 2)
!13342 = !DILocation(line: 2009, column: 127, scope: !13343)
!13343 = !DILexicalBlockFile(scope: !13335, file: !450, discriminator: 3)
!13344 = !DILocation(line: 2009, column: 145, scope: !13335)
!13345 = !DILocation(line: 2009, column: 155, scope: !13335)
!13346 = !DILocation(line: 2009, column: 180, scope: !13335)
!13347 = !DILocation(line: 2009, column: 111, scope: !13335)
!13348 = !DILocation(line: 2009, column: 199, scope: !13349)
!13349 = !DILexicalBlockFile(scope: !1904, file: !450, discriminator: 4)
!13350 = !DILocation(line: 2009, column: 199, scope: !1903)
!13351 = !DILocation(line: 2009, column: 199, scope: !13352)
!13352 = !DILexicalBlockFile(scope: !1903, file: !450, discriminator: 5)
!13353 = !DILocation(line: 2010, column: 16, scope: !1904)
!13354 = !DILocation(line: 2010, column: 9, scope: !1904)
!13355 = !DILocation(line: 2013, column: 24, scope: !1908)
!13356 = !DILocation(line: 2013, column: 31, scope: !1908)
!13357 = !DILocation(line: 2013, column: 40, scope: !1908)
!13358 = !DILocation(line: 2013, column: 59, scope: !1908)
!13359 = !DILocation(line: 2013, column: 93, scope: !13360)
!13360 = !DILexicalBlockFile(scope: !1908, file: !450, discriminator: 1)
!13361 = !DILocation(line: 2013, column: 100, scope: !1908)
!13362 = !DILocation(line: 2013, column: 62, scope: !1908)
!13363 = !DILocation(line: 2013, column: 9, scope: !1890)
!13364 = !DILocation(line: 2014, column: 9, scope: !1907)
!13365 = !DILocation(line: 2014, column: 16, scope: !1907)
!13366 = !DILocation(line: 2015, column: 9, scope: !1907)
!13367 = !DILocation(line: 2015, column: 16, scope: !1907)
!13368 = !DILocation(line: 2016, column: 9, scope: !1907)
!13369 = !DILocation(line: 2016, column: 16, scope: !1907)
!13370 = !DILocation(line: 2017, column: 9, scope: !1907)
!13371 = !DILocation(line: 2017, column: 19, scope: !1907)
!13372 = !DILocation(line: 2018, column: 9, scope: !1907)
!13373 = !DILocation(line: 2018, column: 19, scope: !1907)
!13374 = !DILocation(line: 2028, column: 33, scope: !1907)
!13375 = !DILocation(line: 2028, column: 16, scope: !1907)
!13376 = !DILocation(line: 2028, column: 14, scope: !1907)
!13377 = !DILocation(line: 2029, column: 13, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2029, column: 13)
!13379 = !DILocation(line: 2029, column: 18, scope: !13378)
!13380 = !DILocation(line: 2029, column: 26, scope: !13378)
!13381 = !DILocation(line: 2029, column: 29, scope: !13382)
!13382 = !DILexicalBlockFile(scope: !13378, file: !450, discriminator: 1)
!13383 = !DILocation(line: 2029, column: 13, scope: !1907)
!13384 = !DILocation(line: 2030, column: 13, scope: !13378)
!13385 = !DILocation(line: 2031, column: 25, scope: !1907)
!13386 = !DILocation(line: 2031, column: 20, scope: !1907)
!13387 = !DILocation(line: 2031, column: 18, scope: !1907)
!13388 = !DILocation(line: 2032, column: 31, scope: !1907)
!13389 = !DILocation(line: 2032, column: 13, scope: !1907)
!13390 = !DILocation(line: 2032, column: 11, scope: !1907)
!13391 = !DILocation(line: 2033, column: 13, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2033, column: 13)
!13393 = !DILocation(line: 2033, column: 15, scope: !13392)
!13394 = !DILocation(line: 2033, column: 13, scope: !1907)
!13395 = !DILocation(line: 2034, column: 13, scope: !13392)
!13396 = !DILocation(line: 2036, column: 34, scope: !1907)
!13397 = !DILocation(line: 2036, column: 37, scope: !1907)
!13398 = !DILocation(line: 2036, column: 16, scope: !1907)
!13399 = !DILocation(line: 2036, column: 14, scope: !1907)
!13400 = !DILocation(line: 2037, column: 9, scope: !1907)
!13401 = !DILocation(line: 2037, column: 14, scope: !13402)
!13402 = !DILexicalBlockFile(scope: !1914, file: !450, discriminator: 1)
!13403 = !DILocation(line: 2037, column: 24, scope: !1914)
!13404 = !DILocation(line: 2037, column: 54, scope: !1914)
!13405 = !DILocation(line: 2037, column: 66, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !1914, file: !450, line: 2037, column: 63)
!13407 = !DILocation(line: 2037, column: 83, scope: !13406)
!13408 = !DILocation(line: 2037, column: 63, scope: !13406)
!13409 = !DILocation(line: 2037, column: 93, scope: !13406)
!13410 = !DILocation(line: 2037, column: 63, scope: !1914)
!13411 = !DILocation(line: 2037, column: 63, scope: !13412)
!13412 = !DILexicalBlockFile(scope: !1914, file: !450, discriminator: 2)
!13413 = !DILocation(line: 2037, column: 124, scope: !13414)
!13414 = !DILexicalBlockFile(scope: !13406, file: !450, discriminator: 3)
!13415 = !DILocation(line: 2037, column: 142, scope: !13406)
!13416 = !DILocation(line: 2037, column: 152, scope: !13406)
!13417 = !DILocation(line: 2037, column: 177, scope: !13406)
!13418 = !DILocation(line: 2037, column: 108, scope: !13406)
!13419 = !DILocation(line: 2037, column: 196, scope: !13420)
!13420 = !DILexicalBlockFile(scope: !1907, file: !450, discriminator: 4)
!13421 = !DILocation(line: 2037, column: 196, scope: !1914)
!13422 = !DILocation(line: 2037, column: 196, scope: !13423)
!13423 = !DILexicalBlockFile(scope: !1914, file: !450, discriminator: 5)
!13424 = !DILocation(line: 2038, column: 13, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2038, column: 13)
!13426 = !DILocation(line: 2038, column: 18, scope: !13425)
!13427 = !DILocation(line: 2038, column: 13, scope: !1907)
!13428 = !DILocation(line: 2039, column: 13, scope: !13425)
!13429 = !DILocation(line: 2041, column: 28, scope: !1907)
!13430 = !DILocation(line: 2041, column: 35, scope: !1907)
!13431 = !DILocation(line: 2041, column: 15, scope: !1907)
!13432 = !DILocation(line: 2041, column: 13, scope: !1907)
!13433 = !DILocation(line: 2042, column: 9, scope: !1907)
!13434 = !DILocation(line: 2042, column: 14, scope: !13435)
!13435 = !DILexicalBlockFile(scope: !1916, file: !450, discriminator: 1)
!13436 = !DILocation(line: 2042, column: 24, scope: !1916)
!13437 = !DILocation(line: 2042, column: 54, scope: !1916)
!13438 = !DILocation(line: 2042, column: 69, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !1916, file: !450, line: 2042, column: 66)
!13440 = !DILocation(line: 2042, column: 86, scope: !13439)
!13441 = !DILocation(line: 2042, column: 66, scope: !13439)
!13442 = !DILocation(line: 2042, column: 96, scope: !13439)
!13443 = !DILocation(line: 2042, column: 66, scope: !1916)
!13444 = !DILocation(line: 2042, column: 66, scope: !13445)
!13445 = !DILexicalBlockFile(scope: !1916, file: !450, discriminator: 2)
!13446 = !DILocation(line: 2042, column: 127, scope: !13447)
!13447 = !DILexicalBlockFile(scope: !13439, file: !450, discriminator: 3)
!13448 = !DILocation(line: 2042, column: 145, scope: !13439)
!13449 = !DILocation(line: 2042, column: 155, scope: !13439)
!13450 = !DILocation(line: 2042, column: 180, scope: !13439)
!13451 = !DILocation(line: 2042, column: 111, scope: !13439)
!13452 = !DILocation(line: 2042, column: 199, scope: !13420)
!13453 = !DILocation(line: 2042, column: 199, scope: !1916)
!13454 = !DILocation(line: 2042, column: 199, scope: !13455)
!13455 = !DILexicalBlockFile(scope: !1916, file: !450, discriminator: 5)
!13456 = !DILocation(line: 2043, column: 13, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2043, column: 13)
!13458 = !DILocation(line: 2043, column: 17, scope: !13457)
!13459 = !DILocation(line: 2043, column: 13, scope: !1907)
!13460 = !DILocation(line: 2044, column: 13, scope: !13457)
!13461 = !DILocation(line: 2046, column: 13, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !1907, file: !450, line: 2046, column: 13)
!13463 = !DILocation(line: 2046, column: 22, scope: !13462)
!13464 = !DILocation(line: 2046, column: 13, scope: !1907)
!13465 = !DILocation(line: 2047, column: 20, scope: !13462)
!13466 = !DILocation(line: 2047, column: 13, scope: !13462)
!13467 = !DILocation(line: 2053, column: 32, scope: !1907)
!13468 = !DILocation(line: 2053, column: 16, scope: !1907)
!13469 = !DILocation(line: 2053, column: 14, scope: !1907)
!13470 = !DILocation(line: 2055, column: 17, scope: !1907)
!13471 = !DILocation(line: 2055, column: 14, scope: !1907)
!13472 = !DILocation(line: 2056, column: 25, scope: !1907)
!13473 = !DILocation(line: 2056, column: 20, scope: !1907)
!13474 = !DILocation(line: 2056, column: 18, scope: !1907)
!13475 = !DILocation(line: 2057, column: 31, scope: !1907)
!13476 = !DILocation(line: 2057, column: 13, scope: !1907)
!13477 = !DILocation(line: 2057, column: 11, scope: !1907)
!13478 = !DILocation(line: 2058, column: 13, scope: !1920)
!13479 = !DILocation(line: 2058, column: 15, scope: !1920)
!13480 = !DILocation(line: 2058, column: 13, scope: !1907)
!13481 = !DILocation(line: 2059, column: 13, scope: !1919)
!13482 = !DILocation(line: 2059, column: 18, scope: !13483)
!13483 = !DILexicalBlockFile(scope: !1918, file: !450, discriminator: 1)
!13484 = !DILocation(line: 2059, column: 28, scope: !1918)
!13485 = !DILocation(line: 2059, column: 58, scope: !1918)
!13486 = !DILocation(line: 2059, column: 72, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !1918, file: !450, line: 2059, column: 69)
!13488 = !DILocation(line: 2059, column: 89, scope: !13487)
!13489 = !DILocation(line: 2059, column: 69, scope: !13487)
!13490 = !DILocation(line: 2059, column: 99, scope: !13487)
!13491 = !DILocation(line: 2059, column: 69, scope: !1918)
!13492 = !DILocation(line: 2059, column: 69, scope: !13493)
!13493 = !DILexicalBlockFile(scope: !1918, file: !450, discriminator: 2)
!13494 = !DILocation(line: 2059, column: 130, scope: !13495)
!13495 = !DILexicalBlockFile(scope: !13487, file: !450, discriminator: 3)
!13496 = !DILocation(line: 2059, column: 148, scope: !13487)
!13497 = !DILocation(line: 2059, column: 158, scope: !13487)
!13498 = !DILocation(line: 2059, column: 183, scope: !13487)
!13499 = !DILocation(line: 2059, column: 114, scope: !13487)
!13500 = !DILocation(line: 2059, column: 202, scope: !13501)
!13501 = !DILexicalBlockFile(scope: !1919, file: !450, discriminator: 4)
!13502 = !DILocation(line: 2059, column: 202, scope: !1918)
!13503 = !DILocation(line: 2059, column: 202, scope: !13504)
!13504 = !DILexicalBlockFile(scope: !1918, file: !450, discriminator: 5)
!13505 = !DILocation(line: 2060, column: 13, scope: !1919)
!13506 = !DILocation(line: 2063, column: 26, scope: !1907)
!13507 = !DILocation(line: 2063, column: 31, scope: !1907)
!13508 = !DILocation(line: 2063, column: 13, scope: !1907)
!13509 = !DILocation(line: 2063, column: 11, scope: !1907)
!13510 = !DILocation(line: 2064, column: 9, scope: !1907)
!13511 = !DILocation(line: 2064, column: 14, scope: !13512)
!13512 = !DILexicalBlockFile(scope: !1922, file: !450, discriminator: 1)
!13513 = !DILocation(line: 2064, column: 24, scope: !1922)
!13514 = !DILocation(line: 2064, column: 54, scope: !1922)
!13515 = !DILocation(line: 2064, column: 68, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !1922, file: !450, line: 2064, column: 65)
!13517 = !DILocation(line: 2064, column: 85, scope: !13516)
!13518 = !DILocation(line: 2064, column: 65, scope: !13516)
!13519 = !DILocation(line: 2064, column: 95, scope: !13516)
!13520 = !DILocation(line: 2064, column: 65, scope: !1922)
!13521 = !DILocation(line: 2064, column: 65, scope: !13522)
!13522 = !DILexicalBlockFile(scope: !1922, file: !450, discriminator: 2)
!13523 = !DILocation(line: 2064, column: 126, scope: !13524)
!13524 = !DILexicalBlockFile(scope: !13516, file: !450, discriminator: 3)
!13525 = !DILocation(line: 2064, column: 144, scope: !13516)
!13526 = !DILocation(line: 2064, column: 154, scope: !13516)
!13527 = !DILocation(line: 2064, column: 179, scope: !13516)
!13528 = !DILocation(line: 2064, column: 110, scope: !13516)
!13529 = !DILocation(line: 2064, column: 198, scope: !13420)
!13530 = !DILocation(line: 2064, column: 198, scope: !1922)
!13531 = !DILocation(line: 2064, column: 198, scope: !13532)
!13532 = !DILexicalBlockFile(scope: !1922, file: !450, discriminator: 5)
!13533 = !DILocation(line: 2065, column: 9, scope: !1907)
!13534 = !DILocation(line: 2065, column: 14, scope: !13535)
!13535 = !DILexicalBlockFile(scope: !1924, file: !450, discriminator: 1)
!13536 = !DILocation(line: 2065, column: 24, scope: !1924)
!13537 = !DILocation(line: 2065, column: 54, scope: !1924)
!13538 = !DILocation(line: 2065, column: 66, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !1924, file: !450, line: 2065, column: 63)
!13540 = !DILocation(line: 2065, column: 83, scope: !13539)
!13541 = !DILocation(line: 2065, column: 63, scope: !13539)
!13542 = !DILocation(line: 2065, column: 93, scope: !13539)
!13543 = !DILocation(line: 2065, column: 63, scope: !1924)
!13544 = !DILocation(line: 2065, column: 63, scope: !13545)
!13545 = !DILexicalBlockFile(scope: !1924, file: !450, discriminator: 2)
!13546 = !DILocation(line: 2065, column: 124, scope: !13547)
!13547 = !DILexicalBlockFile(scope: !13539, file: !450, discriminator: 3)
!13548 = !DILocation(line: 2065, column: 142, scope: !13539)
!13549 = !DILocation(line: 2065, column: 152, scope: !13539)
!13550 = !DILocation(line: 2065, column: 177, scope: !13539)
!13551 = !DILocation(line: 2065, column: 108, scope: !13539)
!13552 = !DILocation(line: 2065, column: 196, scope: !13420)
!13553 = !DILocation(line: 2065, column: 196, scope: !1924)
!13554 = !DILocation(line: 2065, column: 196, scope: !13555)
!13555 = !DILexicalBlockFile(scope: !1924, file: !450, discriminator: 5)
!13556 = !DILocation(line: 2066, column: 22, scope: !1907)
!13557 = !DILocation(line: 2066, column: 10, scope: !1907)
!13558 = !DILocation(line: 2066, column: 19, scope: !1907)
!13559 = !DILocation(line: 2067, column: 16, scope: !1907)
!13560 = !DILocation(line: 2067, column: 9, scope: !1907)
!13561 = !DILocation(line: 2068, column: 5, scope: !1908)
!13562 = !DILocation(line: 2070, column: 18, scope: !1890)
!13563 = !DILocation(line: 2072, column: 18, scope: !1890)
!13564 = !DILocation(line: 2072, column: 37, scope: !1890)
!13565 = !DILocation(line: 2072, column: 44, scope: !1890)
!13566 = !DILocation(line: 2072, column: 54, scope: !1890)
!13567 = !DILocation(line: 2070, column: 5, scope: !1890)
!13568 = !DILocation(line: 2073, column: 5, scope: !1890)
!13569 = !DILocation(line: 2074, column: 1, scope: !1890)
!13570 = !DILocation(line: 3542, column: 31, scope: !1925)
!13571 = !DILocation(line: 3544, column: 38, scope: !1933)
!13572 = !DILocation(line: 3544, column: 11, scope: !1933)
!13573 = !DILocation(line: 3544, column: 46, scope: !1933)
!13574 = !DILocation(line: 3544, column: 9, scope: !1933)
!13575 = !DILocation(line: 3544, column: 9, scope: !1925)
!13576 = !DILocation(line: 3545, column: 9, scope: !1932)
!13577 = !DILocation(line: 3545, column: 14, scope: !13578)
!13578 = !DILexicalBlockFile(scope: !1931, file: !450, discriminator: 1)
!13579 = !DILocation(line: 3545, column: 24, scope: !1931)
!13580 = !DILocation(line: 3545, column: 55, scope: !1931)
!13581 = !DILocation(line: 3545, column: 61, scope: !1931)
!13582 = !DILocation(line: 3545, column: 74, scope: !1936)
!13583 = !DILocation(line: 3545, column: 90, scope: !1936)
!13584 = !DILocation(line: 3545, column: 74, scope: !1931)
!13585 = !DILocation(line: 3545, column: 105, scope: !13586)
!13586 = !DILexicalBlockFile(scope: !1936, file: !450, discriminator: 2)
!13587 = !DILocation(line: 3545, column: 110, scope: !13588)
!13588 = !DILexicalBlockFile(scope: !1935, file: !450, discriminator: 4)
!13589 = !DILocation(line: 3545, column: 120, scope: !1935)
!13590 = !DILocation(line: 3545, column: 150, scope: !1935)
!13591 = !DILocation(line: 3545, column: 176, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !1935, file: !450, line: 3545, column: 173)
!13593 = !DILocation(line: 3545, column: 193, scope: !13592)
!13594 = !DILocation(line: 3545, column: 173, scope: !13592)
!13595 = !DILocation(line: 3545, column: 203, scope: !13592)
!13596 = !DILocation(line: 3545, column: 173, scope: !1935)
!13597 = !DILocation(line: 3545, column: 173, scope: !13598)
!13598 = !DILexicalBlockFile(scope: !1935, file: !450, discriminator: 5)
!13599 = !DILocation(line: 3545, column: 234, scope: !13600)
!13600 = !DILexicalBlockFile(scope: !13592, file: !450, discriminator: 6)
!13601 = !DILocation(line: 3545, column: 252, scope: !13592)
!13602 = !DILocation(line: 3545, column: 262, scope: !13592)
!13603 = !DILocation(line: 3545, column: 287, scope: !13592)
!13604 = !DILocation(line: 3545, column: 218, scope: !13592)
!13605 = !DILocation(line: 3545, column: 306, scope: !13606)
!13606 = !DILexicalBlockFile(scope: !1936, file: !450, discriminator: 7)
!13607 = !DILocation(line: 3545, column: 306, scope: !1935)
!13608 = !DILocation(line: 3545, column: 306, scope: !13609)
!13609 = !DILexicalBlockFile(scope: !1935, file: !450, discriminator: 8)
!13610 = !DILocation(line: 3545, column: 306, scope: !13611)
!13611 = !DILexicalBlockFile(scope: !1935, file: !450, discriminator: 9)
!13612 = !DILocation(line: 3545, column: 319, scope: !13613)
!13613 = !DILexicalBlockFile(scope: !13614, file: !450, discriminator: 10)
!13614 = !DILexicalBlockFile(scope: !1932, file: !450, discriminator: 3)
!13615 = !DILocation(line: 3545, column: 319, scope: !1931)
!13616 = !DILocation(line: 3546, column: 5, scope: !1932)
!13617 = !DILocation(line: 3547, column: 19, scope: !1925)
!13618 = !DILocation(line: 3547, column: 7, scope: !1925)
!13619 = !DILocation(line: 3547, column: 27, scope: !1925)
!13620 = !DILocation(line: 3547, column: 37, scope: !1925)
!13621 = !DILocation(line: 3547, column: 57, scope: !1925)
!13622 = !DILocation(line: 3547, column: 45, scope: !1925)
!13623 = !DILocation(line: 3547, column: 5, scope: !1925)
!13624 = !DILocation(line: 3548, column: 1, scope: !1925)
!13625 = !DILocation(line: 3575, column: 28, scope: !1937)
!13626 = !DILocation(line: 3577, column: 5, scope: !1937)
!13627 = !DILocation(line: 3577, column: 17, scope: !1937)
!13628 = !DILocation(line: 3577, column: 43, scope: !1937)
!13629 = !DILocation(line: 3577, column: 31, scope: !1937)
!13630 = !DILocation(line: 3577, column: 51, scope: !1937)
!13631 = !DILocation(line: 3577, column: 61, scope: !1937)
!13632 = !DILocation(line: 3578, column: 5, scope: !1937)
!13633 = !DILocation(line: 3578, column: 9, scope: !1937)
!13634 = !DILocation(line: 3578, column: 33, scope: !1937)
!13635 = !DILocation(line: 3578, column: 40, scope: !1937)
!13636 = !DILocation(line: 3578, column: 14, scope: !1937)
!13637 = !DILocation(line: 3578, column: 13, scope: !1937)
!13638 = !DILocation(line: 3579, column: 5, scope: !1937)
!13639 = !DILocation(line: 3579, column: 9, scope: !1937)
!13640 = !DILocation(line: 3579, column: 33, scope: !1937)
!13641 = !DILocation(line: 3579, column: 40, scope: !1937)
!13642 = !DILocation(line: 3579, column: 14, scope: !1937)
!13643 = !DILocation(line: 3579, column: 13, scope: !1937)
!13644 = !DILocation(line: 3580, column: 5, scope: !1937)
!13645 = !DILocation(line: 3580, column: 9, scope: !1937)
!13646 = !DILocation(line: 3580, column: 33, scope: !1937)
!13647 = !DILocation(line: 3580, column: 40, scope: !1937)
!13648 = !DILocation(line: 3580, column: 14, scope: !1937)
!13649 = !DILocation(line: 3580, column: 13, scope: !1937)
!13650 = !DILocation(line: 3581, column: 5, scope: !1937)
!13651 = !DILocation(line: 3581, column: 9, scope: !1937)
!13652 = !DILocation(line: 3581, column: 35, scope: !1937)
!13653 = !DILocation(line: 3581, column: 42, scope: !1937)
!13654 = !DILocation(line: 3581, column: 16, scope: !1937)
!13655 = !DILocation(line: 3581, column: 50, scope: !1937)
!13656 = !DILocation(line: 3581, column: 79, scope: !1937)
!13657 = !DILocation(line: 3581, column: 86, scope: !1937)
!13658 = !DILocation(line: 3581, column: 60, scope: !1937)
!13659 = !DILocation(line: 3581, column: 94, scope: !1937)
!13660 = !DILocation(line: 3581, column: 57, scope: !1937)
!13661 = !DILocation(line: 3581, column: 121, scope: !1937)
!13662 = !DILocation(line: 3581, column: 128, scope: !1937)
!13663 = !DILocation(line: 3581, column: 102, scope: !1937)
!13664 = !DILocation(line: 3581, column: 100, scope: !1937)
!13665 = !DILocation(line: 3582, column: 5, scope: !1937)
!13666 = !DILocation(line: 3582, column: 15, scope: !1937)
!13667 = !DILocation(line: 3584, column: 9, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !1937, file: !450, line: 3584, column: 9)
!13669 = !DILocation(line: 3584, column: 9, scope: !1937)
!13670 = !DILocation(line: 3586, column: 39, scope: !13668)
!13671 = !DILocation(line: 3586, column: 50, scope: !13668)
!13672 = !DILocation(line: 3586, column: 53, scope: !13668)
!13673 = !DILocation(line: 3586, column: 56, scope: !13668)
!13674 = !DILocation(line: 3586, column: 59, scope: !13668)
!13675 = !DILocation(line: 3585, column: 18, scope: !13668)
!13676 = !DILocation(line: 3585, column: 16, scope: !13668)
!13677 = !DILocation(line: 3585, column: 9, scope: !13668)
!13678 = !DILocation(line: 3587, column: 14, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13668, file: !450, line: 3587, column: 14)
!13680 = !DILocation(line: 3587, column: 14, scope: !13668)
!13681 = !DILocation(line: 3589, column: 39, scope: !13679)
!13682 = !DILocation(line: 3589, column: 50, scope: !13679)
!13683 = !DILocation(line: 3589, column: 53, scope: !13679)
!13684 = !DILocation(line: 3589, column: 56, scope: !13679)
!13685 = !DILocation(line: 3588, column: 18, scope: !13679)
!13686 = !DILocation(line: 3588, column: 16, scope: !13679)
!13687 = !DILocation(line: 3588, column: 9, scope: !13679)
!13688 = !DILocation(line: 3591, column: 53, scope: !13679)
!13689 = !DILocation(line: 3591, column: 64, scope: !13679)
!13690 = !DILocation(line: 3591, column: 67, scope: !13679)
!13691 = !DILocation(line: 3591, column: 18, scope: !13679)
!13692 = !DILocation(line: 3591, column: 16, scope: !13679)
!13693 = !DILocation(line: 3592, column: 9, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !1937, file: !450, line: 3592, column: 9)
!13695 = !DILocation(line: 3592, column: 16, scope: !13694)
!13696 = !DILocation(line: 3592, column: 30, scope: !13694)
!13697 = !DILocation(line: 3592, column: 62, scope: !13698)
!13698 = !DILexicalBlockFile(scope: !13694, file: !450, discriminator: 1)
!13699 = !DILocation(line: 3592, column: 35, scope: !13694)
!13700 = !DILocation(line: 3592, column: 70, scope: !13694)
!13701 = !DILocation(line: 3592, column: 33, scope: !13694)
!13702 = !DILocation(line: 3592, column: 9, scope: !1937)
!13703 = !DILocation(line: 3593, column: 40, scope: !13694)
!13704 = !DILocation(line: 3593, column: 48, scope: !13694)
!13705 = !DILocation(line: 3593, column: 54, scope: !13694)
!13706 = !DILocation(line: 3593, column: 18, scope: !13694)
!13707 = !DILocation(line: 3593, column: 16, scope: !13694)
!13708 = !DILocation(line: 3593, column: 9, scope: !13694)
!13709 = !DILocation(line: 3594, column: 12, scope: !1937)
!13710 = !DILocation(line: 3595, column: 1, scope: !1937)
!13711 = !DILocation(line: 3594, column: 5, scope: !1937)
!13712 = !DILocation(line: 3744, column: 28, scope: !1958)
!13713 = !DILocation(line: 3746, column: 9, scope: !1965)
!13714 = !DILocation(line: 3746, column: 15, scope: !1965)
!13715 = !DILocation(line: 3746, column: 24, scope: !1965)
!13716 = !DILocation(line: 3746, column: 9, scope: !1958)
!13717 = !DILocation(line: 3747, column: 9, scope: !1964)
!13718 = !DILocation(line: 3747, column: 19, scope: !1964)
!13719 = !DILocation(line: 3749, column: 45, scope: !1964)
!13720 = !DILocation(line: 3749, column: 33, scope: !1964)
!13721 = !DILocation(line: 3749, column: 18, scope: !1964)
!13722 = !DILocation(line: 3749, column: 16, scope: !1964)
!13723 = !DILocation(line: 3751, column: 13, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !1964, file: !450, line: 3751, column: 13)
!13725 = !DILocation(line: 3751, column: 20, scope: !13724)
!13726 = !DILocation(line: 3751, column: 13, scope: !1964)
!13727 = !DILocation(line: 3752, column: 13, scope: !13724)
!13728 = !DILocation(line: 3755, column: 13, scope: !1968)
!13729 = !DILocation(line: 3755, column: 20, scope: !1968)
!13730 = !DILocation(line: 3755, column: 13, scope: !1964)
!13731 = !DILocation(line: 3757, column: 34, scope: !1968)
!13732 = !DILocation(line: 3757, column: 40, scope: !1968)
!13733 = !DILocation(line: 3756, column: 30, scope: !1968)
!13734 = !DILocation(line: 3756, column: 13, scope: !1968)
!13735 = !DILocation(line: 3756, column: 19, scope: !1968)
!13736 = !DILocation(line: 3756, column: 28, scope: !1968)
!13737 = !DILocation(line: 3759, column: 13, scope: !1967)
!13738 = !DILocation(line: 3759, column: 23, scope: !1967)
!13739 = !DILocation(line: 3759, column: 31, scope: !1967)
!13740 = !DILocation(line: 3760, column: 13, scope: !1967)
!13741 = !DILocation(line: 3760, column: 17, scope: !1967)
!13742 = !DILocation(line: 3760, column: 26, scope: !1967)
!13743 = !DILocation(line: 3762, column: 43, scope: !1967)
!13744 = !DILocation(line: 3762, column: 50, scope: !1967)
!13745 = !DILocation(line: 3762, column: 24, scope: !1967)
!13746 = !DILocation(line: 3762, column: 23, scope: !1967)
!13747 = !DILocation(line: 3762, column: 59, scope: !1967)
!13748 = !DILocation(line: 3763, column: 43, scope: !1967)
!13749 = !DILocation(line: 3763, column: 50, scope: !1967)
!13750 = !DILocation(line: 3763, column: 24, scope: !1967)
!13751 = !DILocation(line: 3763, column: 23, scope: !1967)
!13752 = !DILocation(line: 3763, column: 59, scope: !1967)
!13753 = !DILocation(line: 3762, column: 66, scope: !1967)
!13754 = !DILocation(line: 3764, column: 43, scope: !1967)
!13755 = !DILocation(line: 3764, column: 50, scope: !1967)
!13756 = !DILocation(line: 3764, column: 24, scope: !1967)
!13757 = !DILocation(line: 3764, column: 23, scope: !1967)
!13758 = !DILocation(line: 3763, column: 64, scope: !1967)
!13759 = !DILocation(line: 3762, column: 21, scope: !1967)
!13760 = !DILocation(line: 3765, column: 49, scope: !1967)
!13761 = !DILocation(line: 3765, column: 56, scope: !1967)
!13762 = !DILocation(line: 3765, column: 30, scope: !1967)
!13763 = !DILocation(line: 3765, column: 64, scope: !1967)
!13764 = !DILocation(line: 3765, column: 93, scope: !1967)
!13765 = !DILocation(line: 3765, column: 100, scope: !1967)
!13766 = !DILocation(line: 3765, column: 74, scope: !1967)
!13767 = !DILocation(line: 3765, column: 108, scope: !1967)
!13768 = !DILocation(line: 3765, column: 71, scope: !1967)
!13769 = !DILocation(line: 3765, column: 135, scope: !1967)
!13770 = !DILocation(line: 3765, column: 142, scope: !1967)
!13771 = !DILocation(line: 3765, column: 116, scope: !1967)
!13772 = !DILocation(line: 3765, column: 114, scope: !1967)
!13773 = !DILocation(line: 3765, column: 26, scope: !1967)
!13774 = !DILocation(line: 3766, column: 37, scope: !1967)
!13775 = !DILocation(line: 3766, column: 46, scope: !1967)
!13776 = !DILocation(line: 3766, column: 21, scope: !1967)
!13777 = !DILocation(line: 3766, column: 19, scope: !1967)
!13778 = !DILocation(line: 3767, column: 17, scope: !1975)
!13779 = !DILocation(line: 3767, column: 23, scope: !1975)
!13780 = !DILocation(line: 3767, column: 17, scope: !1967)
!13781 = !DILocation(line: 3768, column: 17, scope: !1974)
!13782 = !DILocation(line: 3768, column: 22, scope: !13783)
!13783 = !DILexicalBlockFile(scope: !1973, file: !450, discriminator: 1)
!13784 = !DILocation(line: 3768, column: 32, scope: !1973)
!13785 = !DILocation(line: 3768, column: 62, scope: !1973)
!13786 = !DILocation(line: 3768, column: 79, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !1973, file: !450, line: 3768, column: 76)
!13788 = !DILocation(line: 3768, column: 96, scope: !13787)
!13789 = !DILocation(line: 3768, column: 76, scope: !13787)
!13790 = !DILocation(line: 3768, column: 106, scope: !13787)
!13791 = !DILocation(line: 3768, column: 76, scope: !1973)
!13792 = !DILocation(line: 3768, column: 76, scope: !13793)
!13793 = !DILexicalBlockFile(scope: !1973, file: !450, discriminator: 2)
!13794 = !DILocation(line: 3768, column: 137, scope: !13795)
!13795 = !DILexicalBlockFile(scope: !13787, file: !450, discriminator: 3)
!13796 = !DILocation(line: 3768, column: 155, scope: !13787)
!13797 = !DILocation(line: 3768, column: 165, scope: !13787)
!13798 = !DILocation(line: 3768, column: 190, scope: !13787)
!13799 = !DILocation(line: 3768, column: 121, scope: !13787)
!13800 = !DILocation(line: 3768, column: 209, scope: !13801)
!13801 = !DILexicalBlockFile(scope: !1974, file: !450, discriminator: 4)
!13802 = !DILocation(line: 3768, column: 209, scope: !1973)
!13803 = !DILocation(line: 3768, column: 209, scope: !13804)
!13804 = !DILexicalBlockFile(scope: !1973, file: !450, discriminator: 5)
!13805 = !DILocation(line: 3769, column: 17, scope: !1974)
!13806 = !DILocation(line: 3771, column: 36, scope: !1967)
!13807 = !DILocation(line: 3771, column: 43, scope: !1967)
!13808 = !DILocation(line: 3771, column: 21, scope: !1967)
!13809 = !DILocation(line: 3771, column: 19, scope: !1967)
!13810 = !DILocation(line: 3772, column: 13, scope: !1967)
!13811 = !DILocation(line: 3772, column: 18, scope: !13812)
!13812 = !DILexicalBlockFile(scope: !1977, file: !450, discriminator: 1)
!13813 = !DILocation(line: 3772, column: 28, scope: !1977)
!13814 = !DILocation(line: 3772, column: 58, scope: !1977)
!13815 = !DILocation(line: 3772, column: 74, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !1977, file: !450, line: 3772, column: 71)
!13817 = !DILocation(line: 3772, column: 91, scope: !13816)
!13818 = !DILocation(line: 3772, column: 71, scope: !13816)
!13819 = !DILocation(line: 3772, column: 101, scope: !13816)
!13820 = !DILocation(line: 3772, column: 71, scope: !1977)
!13821 = !DILocation(line: 3772, column: 71, scope: !13822)
!13822 = !DILexicalBlockFile(scope: !1977, file: !450, discriminator: 2)
!13823 = !DILocation(line: 3772, column: 132, scope: !13824)
!13824 = !DILexicalBlockFile(scope: !13816, file: !450, discriminator: 3)
!13825 = !DILocation(line: 3772, column: 150, scope: !13816)
!13826 = !DILocation(line: 3772, column: 160, scope: !13816)
!13827 = !DILocation(line: 3772, column: 185, scope: !13816)
!13828 = !DILocation(line: 3772, column: 116, scope: !13816)
!13829 = !DILocation(line: 3772, column: 204, scope: !13830)
!13830 = !DILexicalBlockFile(scope: !1967, file: !450, discriminator: 4)
!13831 = !DILocation(line: 3772, column: 204, scope: !1977)
!13832 = !DILocation(line: 3772, column: 204, scope: !13833)
!13833 = !DILexicalBlockFile(scope: !1977, file: !450, discriminator: 5)
!13834 = !DILocation(line: 3773, column: 17, scope: !1981)
!13835 = !DILocation(line: 3773, column: 23, scope: !1981)
!13836 = !DILocation(line: 3773, column: 17, scope: !1967)
!13837 = !DILocation(line: 3774, column: 17, scope: !1980)
!13838 = !DILocation(line: 3774, column: 22, scope: !13839)
!13839 = !DILexicalBlockFile(scope: !1979, file: !450, discriminator: 1)
!13840 = !DILocation(line: 3774, column: 32, scope: !1979)
!13841 = !DILocation(line: 3774, column: 62, scope: !1979)
!13842 = !DILocation(line: 3774, column: 79, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !1979, file: !450, line: 3774, column: 76)
!13844 = !DILocation(line: 3774, column: 96, scope: !13843)
!13845 = !DILocation(line: 3774, column: 76, scope: !13843)
!13846 = !DILocation(line: 3774, column: 106, scope: !13843)
!13847 = !DILocation(line: 3774, column: 76, scope: !1979)
!13848 = !DILocation(line: 3774, column: 76, scope: !13849)
!13849 = !DILexicalBlockFile(scope: !1979, file: !450, discriminator: 2)
!13850 = !DILocation(line: 3774, column: 137, scope: !13851)
!13851 = !DILexicalBlockFile(scope: !13843, file: !450, discriminator: 3)
!13852 = !DILocation(line: 3774, column: 155, scope: !13843)
!13853 = !DILocation(line: 3774, column: 165, scope: !13843)
!13854 = !DILocation(line: 3774, column: 190, scope: !13843)
!13855 = !DILocation(line: 3774, column: 121, scope: !13843)
!13856 = !DILocation(line: 3774, column: 209, scope: !13857)
!13857 = !DILexicalBlockFile(scope: !1980, file: !450, discriminator: 4)
!13858 = !DILocation(line: 3774, column: 209, scope: !1979)
!13859 = !DILocation(line: 3774, column: 209, scope: !13860)
!13860 = !DILexicalBlockFile(scope: !1979, file: !450, discriminator: 5)
!13861 = !DILocation(line: 3775, column: 17, scope: !1980)
!13862 = !DILocation(line: 3777, column: 44, scope: !1967)
!13863 = !DILocation(line: 3777, column: 30, scope: !1967)
!13864 = !DILocation(line: 3777, column: 13, scope: !1967)
!13865 = !DILocation(line: 3777, column: 19, scope: !1967)
!13866 = !DILocation(line: 3777, column: 28, scope: !1967)
!13867 = !DILocation(line: 3778, column: 13, scope: !1967)
!13868 = !DILocation(line: 3778, column: 18, scope: !13869)
!13869 = !DILexicalBlockFile(scope: !1983, file: !450, discriminator: 1)
!13870 = !DILocation(line: 3778, column: 28, scope: !1983)
!13871 = !DILocation(line: 3778, column: 58, scope: !1983)
!13872 = !DILocation(line: 3778, column: 74, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !1983, file: !450, line: 3778, column: 71)
!13874 = !DILocation(line: 3778, column: 91, scope: !13873)
!13875 = !DILocation(line: 3778, column: 71, scope: !13873)
!13876 = !DILocation(line: 3778, column: 101, scope: !13873)
!13877 = !DILocation(line: 3778, column: 71, scope: !1983)
!13878 = !DILocation(line: 3778, column: 71, scope: !13879)
!13879 = !DILexicalBlockFile(scope: !1983, file: !450, discriminator: 2)
!13880 = !DILocation(line: 3778, column: 132, scope: !13881)
!13881 = !DILexicalBlockFile(scope: !13873, file: !450, discriminator: 3)
!13882 = !DILocation(line: 3778, column: 150, scope: !13873)
!13883 = !DILocation(line: 3778, column: 160, scope: !13873)
!13884 = !DILocation(line: 3778, column: 185, scope: !13873)
!13885 = !DILocation(line: 3778, column: 116, scope: !13873)
!13886 = !DILocation(line: 3778, column: 204, scope: !13830)
!13887 = !DILocation(line: 3778, column: 204, scope: !1983)
!13888 = !DILocation(line: 3778, column: 204, scope: !13889)
!13889 = !DILexicalBlockFile(scope: !1983, file: !450, discriminator: 5)
!13890 = !DILocation(line: 3779, column: 9, scope: !1968)
!13891 = !DILocation(line: 3779, column: 9, scope: !13892)
!13892 = !DILexicalBlockFile(scope: !1968, file: !450, discriminator: 1)
!13893 = !DILocation(line: 3780, column: 9, scope: !1964)
!13894 = !DILocation(line: 3780, column: 14, scope: !13895)
!13895 = !DILexicalBlockFile(scope: !1985, file: !450, discriminator: 1)
!13896 = !DILocation(line: 3780, column: 24, scope: !1985)
!13897 = !DILocation(line: 3780, column: 54, scope: !1985)
!13898 = !DILocation(line: 3780, column: 71, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !1985, file: !450, line: 3780, column: 68)
!13900 = !DILocation(line: 3780, column: 88, scope: !13899)
!13901 = !DILocation(line: 3780, column: 68, scope: !13899)
!13902 = !DILocation(line: 3780, column: 98, scope: !13899)
!13903 = !DILocation(line: 3780, column: 68, scope: !1985)
!13904 = !DILocation(line: 3780, column: 68, scope: !13905)
!13905 = !DILexicalBlockFile(scope: !1985, file: !450, discriminator: 2)
!13906 = !DILocation(line: 3780, column: 129, scope: !13907)
!13907 = !DILexicalBlockFile(scope: !13899, file: !450, discriminator: 3)
!13908 = !DILocation(line: 3780, column: 147, scope: !13899)
!13909 = !DILocation(line: 3780, column: 157, scope: !13899)
!13910 = !DILocation(line: 3780, column: 182, scope: !13899)
!13911 = !DILocation(line: 3780, column: 113, scope: !13899)
!13912 = !DILocation(line: 3780, column: 201, scope: !13913)
!13913 = !DILexicalBlockFile(scope: !1964, file: !450, discriminator: 4)
!13914 = !DILocation(line: 3780, column: 201, scope: !1985)
!13915 = !DILocation(line: 3780, column: 201, scope: !13916)
!13916 = !DILexicalBlockFile(scope: !1985, file: !450, discriminator: 5)
!13917 = !DILocation(line: 3781, column: 5, scope: !1965)
!13918 = !DILocation(line: 3781, column: 5, scope: !13919)
!13919 = !DILexicalBlockFile(scope: !1965, file: !450, discriminator: 1)
!13920 = !DILocation(line: 3781, column: 5, scope: !1964)
!13921 = !DILocation(line: 3782, column: 12, scope: !1958)
!13922 = !DILocation(line: 3782, column: 18, scope: !1958)
!13923 = !DILocation(line: 3782, column: 5, scope: !1958)
!13924 = !DILocation(line: 3783, column: 1, scope: !1958)
!13925 = !DILocation(line: 3598, column: 27, scope: !1990)
!13926 = !DILocation(line: 3600, column: 47, scope: !1990)
!13927 = !DILocation(line: 3600, column: 35, scope: !1990)
!13928 = !DILocation(line: 3600, column: 12, scope: !1990)
!13929 = !DILocation(line: 3600, column: 5, scope: !1990)
!13930 = !DILocation(line: 3671, column: 28, scope: !1993)
!13931 = !DILocation(line: 3671, column: 44, scope: !1993)
!13932 = !DILocation(line: 3671, column: 55, scope: !1993)
!13933 = !DILocation(line: 3673, column: 5, scope: !1993)
!13934 = !DILocation(line: 3673, column: 15, scope: !1993)
!13935 = !DILocation(line: 3674, column: 5, scope: !1993)
!13936 = !DILocation(line: 3674, column: 15, scope: !1993)
!13937 = !DILocation(line: 3674, column: 25, scope: !1993)
!13938 = !DILocation(line: 3675, column: 5, scope: !1993)
!13939 = !DILocation(line: 3675, column: 9, scope: !1993)
!13940 = !DILocation(line: 3677, column: 26, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3677, column: 9)
!13942 = !DILocation(line: 3677, column: 35, scope: !13941)
!13943 = !DILocation(line: 3677, column: 44, scope: !13941)
!13944 = !DILocation(line: 3677, column: 70, scope: !13941)
!13945 = !DILocation(line: 3677, column: 104, scope: !13946)
!13946 = !DILexicalBlockFile(scope: !13941, file: !450, discriminator: 1)
!13947 = !DILocation(line: 3677, column: 113, scope: !13941)
!13948 = !DILocation(line: 3677, column: 73, scope: !13941)
!13949 = !DILocation(line: 3677, column: 9, scope: !1993)
!13950 = !DILocation(line: 3678, column: 72, scope: !13941)
!13951 = !DILocation(line: 3678, column: 9, scope: !13941)
!13952 = !DILocation(line: 3680, column: 39, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3680, column: 9)
!13954 = !DILocation(line: 3680, column: 12, scope: !13953)
!13955 = !DILocation(line: 3680, column: 47, scope: !13953)
!13956 = !DILocation(line: 3680, column: 10, scope: !13953)
!13957 = !DILocation(line: 3680, column: 81, scope: !13958)
!13958 = !DILexicalBlockFile(scope: !13953, file: !450, discriminator: 1)
!13959 = !DILocation(line: 3680, column: 61, scope: !13953)
!13960 = !DILocation(line: 3680, column: 89, scope: !13953)
!13961 = !DILocation(line: 3680, column: 10, scope: !13962)
!13962 = !DILexicalBlockFile(scope: !13953, file: !450, discriminator: 2)
!13963 = !DILocation(line: 3680, column: 150, scope: !13964)
!13964 = !DILexicalBlockFile(scope: !13965, file: !450, discriminator: 4)
!13965 = !DILexicalBlockFile(scope: !13953, file: !450, discriminator: 3)
!13966 = !DILocation(line: 3680, column: 123, scope: !13953)
!13967 = !DILocation(line: 3680, column: 159, scope: !13953)
!13968 = !DILocation(line: 3680, column: 121, scope: !13953)
!13969 = !DILocation(line: 3680, column: 193, scope: !13970)
!13970 = !DILexicalBlockFile(scope: !13953, file: !450, discriminator: 5)
!13971 = !DILocation(line: 3680, column: 173, scope: !13953)
!13972 = !DILocation(line: 3680, column: 202, scope: !13953)
!13973 = !DILocation(line: 3680, column: 121, scope: !13974)
!13974 = !DILexicalBlockFile(scope: !13953, file: !450, discriminator: 6)
!13975 = !DILocation(line: 3680, column: 117, scope: !13976)
!13976 = !DILexicalBlockFile(scope: !13977, file: !450, discriminator: 8)
!13977 = !DILexicalBlockFile(scope: !13953, file: !450, discriminator: 7)
!13978 = !DILocation(line: 3680, column: 9, scope: !1993)
!13979 = !DILocation(line: 3681, column: 43, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13953, file: !450, line: 3680, column: 231)
!13981 = !DILocation(line: 3681, column: 24, scope: !13980)
!13982 = !DILocation(line: 3681, column: 50, scope: !13980)
!13983 = !DILocation(line: 3681, column: 23, scope: !13980)
!13984 = !DILocation(line: 3682, column: 43, scope: !13980)
!13985 = !DILocation(line: 3682, column: 24, scope: !13980)
!13986 = !DILocation(line: 3682, column: 51, scope: !13980)
!13987 = !DILocation(line: 3682, column: 23, scope: !13980)
!13988 = !DILocation(line: 3681, column: 16, scope: !13980)
!13989 = !DILocation(line: 3681, column: 14, scope: !13980)
!13990 = !DILocation(line: 3684, column: 29, scope: !13980)
!13991 = !DILocation(line: 3684, column: 35, scope: !13980)
!13992 = !DILocation(line: 3684, column: 16, scope: !13980)
!13993 = !DILocation(line: 3684, column: 9, scope: !13980)
!13994 = !DILocation(line: 3686, column: 30, scope: !1993)
!13995 = !DILocation(line: 3686, column: 15, scope: !1993)
!13996 = !DILocation(line: 3686, column: 13, scope: !1993)
!13997 = !DILocation(line: 3687, column: 9, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3687, column: 9)
!13999 = !DILocation(line: 3687, column: 17, scope: !13998)
!14000 = !DILocation(line: 3687, column: 9, scope: !1993)
!14001 = !DILocation(line: 3688, column: 9, scope: !13998)
!14002 = !DILocation(line: 3689, column: 30, scope: !1993)
!14003 = !DILocation(line: 3689, column: 15, scope: !1993)
!14004 = !DILocation(line: 3689, column: 13, scope: !1993)
!14005 = !DILocation(line: 3690, column: 9, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !1993, file: !450, line: 3690, column: 9)
!14007 = !DILocation(line: 3690, column: 17, scope: !14006)
!14008 = !DILocation(line: 3690, column: 9, scope: !1993)
!14009 = !DILocation(line: 3691, column: 9, scope: !14006)
!14010 = !DILocation(line: 3696, column: 10, scope: !2005)
!14011 = !DILocation(line: 3696, column: 21, scope: !2005)
!14012 = !DILocation(line: 3696, column: 18, scope: !2005)
!14013 = !DILocation(line: 3696, column: 30, scope: !2005)
!14014 = !DILocation(line: 3697, column: 25, scope: !2005)
!14015 = !DILocation(line: 3697, column: 36, scope: !2005)
!14016 = !DILocation(line: 3697, column: 45, scope: !2005)
!14017 = !DILocation(line: 3697, column: 72, scope: !2005)
!14018 = !DILocation(line: 3697, column: 106, scope: !14019)
!14019 = !DILexicalBlockFile(scope: !2005, file: !450, discriminator: 2)
!14020 = !DILocation(line: 3697, column: 117, scope: !2005)
!14021 = !DILocation(line: 3697, column: 75, scope: !2005)
!14022 = !DILocation(line: 3697, column: 153, scope: !2005)
!14023 = !DILocation(line: 3697, column: 171, scope: !14024)
!14024 = !DILexicalBlockFile(scope: !14025, file: !450, discriminator: 3)
!14025 = !DILexicalBlockFile(scope: !2005, file: !450, discriminator: 1)
!14026 = !DILocation(line: 3697, column: 182, scope: !2005)
!14027 = !DILocation(line: 3697, column: 191, scope: !2005)
!14028 = !DILocation(line: 3697, column: 218, scope: !2005)
!14029 = !DILocation(line: 3697, column: 252, scope: !14030)
!14030 = !DILexicalBlockFile(scope: !2005, file: !450, discriminator: 4)
!14031 = !DILocation(line: 3697, column: 263, scope: !2005)
!14032 = !DILocation(line: 3697, column: 221, scope: !2005)
!14033 = !DILocation(line: 3697, column: 299, scope: !2005)
!14034 = !DILocation(line: 3698, column: 20, scope: !2005)
!14035 = !DILocation(line: 3698, column: 29, scope: !2005)
!14036 = !DILocation(line: 3698, column: 10, scope: !2005)
!14037 = !DILocation(line: 3698, column: 38, scope: !2005)
!14038 = !DILocation(line: 3696, column: 9, scope: !1993)
!14039 = !DILocation(line: 3699, column: 43, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !2005, file: !450, line: 3698, column: 45)
!14041 = !DILocation(line: 3699, column: 24, scope: !14040)
!14042 = !DILocation(line: 3699, column: 50, scope: !14040)
!14043 = !DILocation(line: 3699, column: 23, scope: !14040)
!14044 = !DILocation(line: 3700, column: 43, scope: !14040)
!14045 = !DILocation(line: 3700, column: 24, scope: !14040)
!14046 = !DILocation(line: 3700, column: 51, scope: !14040)
!14047 = !DILocation(line: 3700, column: 23, scope: !14040)
!14048 = !DILocation(line: 3699, column: 16, scope: !14040)
!14049 = !DILocation(line: 3699, column: 14, scope: !14040)
!14050 = !DILocation(line: 3702, column: 31, scope: !14040)
!14051 = !DILocation(line: 3702, column: 37, scope: !14040)
!14052 = !DILocation(line: 3702, column: 18, scope: !14040)
!14053 = !DILocation(line: 3702, column: 16, scope: !14040)
!14054 = !DILocation(line: 3703, column: 5, scope: !14040)
!14055 = !DILocation(line: 3705, column: 14, scope: !2004)
!14056 = !DILocation(line: 3705, column: 22, scope: !2004)
!14057 = !DILocation(line: 3705, column: 43, scope: !2004)
!14058 = !DILocation(line: 3705, column: 46, scope: !14059)
!14059 = !DILexicalBlockFile(scope: !2004, file: !450, discriminator: 1)
!14060 = !DILocation(line: 3705, column: 54, scope: !2004)
!14061 = !DILocation(line: 3705, column: 14, scope: !2005)
!14062 = !DILocation(line: 3706, column: 9, scope: !2003)
!14063 = !DILocation(line: 3706, column: 13, scope: !2003)
!14064 = !DILocation(line: 3706, column: 23, scope: !2003)
!14065 = !DILocation(line: 3708, column: 40, scope: !2003)
!14066 = !DILocation(line: 3708, column: 22, scope: !2003)
!14067 = !DILocation(line: 3708, column: 47, scope: !2003)
!14068 = !DILocation(line: 3708, column: 21, scope: !2003)
!14069 = !DILocation(line: 3708, column: 20, scope: !2003)
!14070 = !DILocation(line: 3708, column: 56, scope: !2003)
!14071 = !DILocation(line: 3709, column: 40, scope: !2003)
!14072 = !DILocation(line: 3709, column: 22, scope: !2003)
!14073 = !DILocation(line: 3709, column: 47, scope: !2003)
!14074 = !DILocation(line: 3709, column: 21, scope: !2003)
!14075 = !DILocation(line: 3709, column: 20, scope: !2003)
!14076 = !DILocation(line: 3709, column: 56, scope: !2003)
!14077 = !DILocation(line: 3708, column: 63, scope: !2003)
!14078 = !DILocation(line: 3710, column: 40, scope: !2003)
!14079 = !DILocation(line: 3710, column: 22, scope: !2003)
!14080 = !DILocation(line: 3710, column: 47, scope: !2003)
!14081 = !DILocation(line: 3710, column: 21, scope: !2003)
!14082 = !DILocation(line: 3710, column: 20, scope: !2003)
!14083 = !DILocation(line: 3709, column: 61, scope: !2003)
!14084 = !DILocation(line: 3711, column: 43, scope: !2003)
!14085 = !DILocation(line: 3711, column: 22, scope: !2003)
!14086 = !DILocation(line: 3711, column: 54, scope: !2003)
!14087 = !DILocation(line: 3711, column: 60, scope: !2003)
!14088 = !DILocation(line: 3710, column: 56, scope: !2003)
!14089 = !DILocation(line: 3712, column: 43, scope: !2003)
!14090 = !DILocation(line: 3712, column: 22, scope: !2003)
!14091 = !DILocation(line: 3712, column: 54, scope: !2003)
!14092 = !DILocation(line: 3711, column: 68, scope: !2003)
!14093 = !DILocation(line: 3708, column: 18, scope: !2003)
!14094 = !DILocation(line: 3713, column: 40, scope: !2003)
!14095 = !DILocation(line: 3713, column: 22, scope: !2003)
!14096 = !DILocation(line: 3713, column: 48, scope: !2003)
!14097 = !DILocation(line: 3713, column: 21, scope: !2003)
!14098 = !DILocation(line: 3713, column: 20, scope: !2003)
!14099 = !DILocation(line: 3713, column: 57, scope: !2003)
!14100 = !DILocation(line: 3714, column: 40, scope: !2003)
!14101 = !DILocation(line: 3714, column: 22, scope: !2003)
!14102 = !DILocation(line: 3714, column: 48, scope: !2003)
!14103 = !DILocation(line: 3714, column: 21, scope: !2003)
!14104 = !DILocation(line: 3714, column: 20, scope: !2003)
!14105 = !DILocation(line: 3714, column: 57, scope: !2003)
!14106 = !DILocation(line: 3713, column: 64, scope: !2003)
!14107 = !DILocation(line: 3715, column: 40, scope: !2003)
!14108 = !DILocation(line: 3715, column: 22, scope: !2003)
!14109 = !DILocation(line: 3715, column: 48, scope: !2003)
!14110 = !DILocation(line: 3715, column: 21, scope: !2003)
!14111 = !DILocation(line: 3715, column: 20, scope: !2003)
!14112 = !DILocation(line: 3714, column: 62, scope: !2003)
!14113 = !DILocation(line: 3716, column: 43, scope: !2003)
!14114 = !DILocation(line: 3716, column: 22, scope: !2003)
!14115 = !DILocation(line: 3716, column: 54, scope: !2003)
!14116 = !DILocation(line: 3716, column: 60, scope: !2003)
!14117 = !DILocation(line: 3715, column: 57, scope: !2003)
!14118 = !DILocation(line: 3717, column: 43, scope: !2003)
!14119 = !DILocation(line: 3717, column: 22, scope: !2003)
!14120 = !DILocation(line: 3717, column: 54, scope: !2003)
!14121 = !DILocation(line: 3716, column: 68, scope: !2003)
!14122 = !DILocation(line: 3713, column: 18, scope: !2003)
!14123 = !DILocation(line: 3718, column: 16, scope: !2003)
!14124 = !DILocation(line: 3718, column: 27, scope: !2003)
!14125 = !DILocation(line: 3718, column: 25, scope: !2003)
!14126 = !DILocation(line: 3718, column: 14, scope: !2003)
!14127 = !DILocation(line: 3719, column: 13, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !2003, file: !450, line: 3719, column: 13)
!14129 = !DILocation(line: 3719, column: 18, scope: !14128)
!14130 = !DILocation(line: 3719, column: 13, scope: !2003)
!14131 = !DILocation(line: 3720, column: 41, scope: !14128)
!14132 = !DILocation(line: 3720, column: 23, scope: !14128)
!14133 = !DILocation(line: 3720, column: 48, scope: !14128)
!14134 = !DILocation(line: 3720, column: 22, scope: !14128)
!14135 = !DILocation(line: 3720, column: 56, scope: !14128)
!14136 = !DILocation(line: 3720, column: 85, scope: !14128)
!14137 = !DILocation(line: 3720, column: 67, scope: !14128)
!14138 = !DILocation(line: 3720, column: 92, scope: !14128)
!14139 = !DILocation(line: 3720, column: 66, scope: !14128)
!14140 = !DILocation(line: 3720, column: 100, scope: !14128)
!14141 = !DILocation(line: 3720, column: 63, scope: !14128)
!14142 = !DILocation(line: 3720, column: 127, scope: !14128)
!14143 = !DILocation(line: 3720, column: 109, scope: !14128)
!14144 = !DILocation(line: 3720, column: 134, scope: !14128)
!14145 = !DILocation(line: 3720, column: 108, scope: !14128)
!14146 = !DILocation(line: 3720, column: 106, scope: !14128)
!14147 = !DILocation(line: 3721, column: 41, scope: !14128)
!14148 = !DILocation(line: 3721, column: 23, scope: !14128)
!14149 = !DILocation(line: 3721, column: 49, scope: !14128)
!14150 = !DILocation(line: 3721, column: 22, scope: !14128)
!14151 = !DILocation(line: 3721, column: 57, scope: !14128)
!14152 = !DILocation(line: 3721, column: 86, scope: !14128)
!14153 = !DILocation(line: 3721, column: 68, scope: !14128)
!14154 = !DILocation(line: 3721, column: 94, scope: !14128)
!14155 = !DILocation(line: 3721, column: 67, scope: !14128)
!14156 = !DILocation(line: 3721, column: 102, scope: !14128)
!14157 = !DILocation(line: 3721, column: 64, scope: !14128)
!14158 = !DILocation(line: 3721, column: 129, scope: !14128)
!14159 = !DILocation(line: 3721, column: 111, scope: !14128)
!14160 = !DILocation(line: 3721, column: 137, scope: !14128)
!14161 = !DILocation(line: 3721, column: 110, scope: !14128)
!14162 = !DILocation(line: 3721, column: 108, scope: !14128)
!14163 = !DILocation(line: 3720, column: 143, scope: !14128)
!14164 = !DILocation(line: 3720, column: 18, scope: !14128)
!14165 = !DILocation(line: 3720, column: 13, scope: !14128)
!14166 = !DILocation(line: 3722, column: 31, scope: !2003)
!14167 = !DILocation(line: 3722, column: 37, scope: !2003)
!14168 = !DILocation(line: 3722, column: 18, scope: !2003)
!14169 = !DILocation(line: 3722, column: 16, scope: !2003)
!14170 = !DILocation(line: 3723, column: 5, scope: !2004)
!14171 = !DILocation(line: 3723, column: 5, scope: !2003)
!14172 = !DILocation(line: 3724, column: 14, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !2004, file: !450, line: 3724, column: 14)
!14174 = !DILocation(line: 3724, column: 17, scope: !14173)
!14175 = !DILocation(line: 3724, column: 14, scope: !2004)
!14176 = !DILocation(line: 3725, column: 16, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14173, file: !450, line: 3724, column: 23)
!14178 = !DILocation(line: 3726, column: 25, scope: !14177)
!14179 = !DILocation(line: 3726, column: 35, scope: !14177)
!14180 = !DILocation(line: 3726, column: 44, scope: !14177)
!14181 = !DILocation(line: 3727, column: 5, scope: !14177)
!14182 = !DILocation(line: 3728, column: 14, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14173, file: !450, line: 3728, column: 14)
!14184 = !DILocation(line: 3728, column: 17, scope: !14183)
!14185 = !DILocation(line: 3728, column: 14, scope: !14173)
!14186 = !DILocation(line: 3729, column: 16, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14183, file: !450, line: 3728, column: 23)
!14188 = !DILocation(line: 3730, column: 25, scope: !14187)
!14189 = !DILocation(line: 3730, column: 35, scope: !14187)
!14190 = !DILocation(line: 3730, column: 44, scope: !14187)
!14191 = !DILocation(line: 3731, column: 5, scope: !14187)
!14192 = !DILocation(line: 3733, column: 25, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14183, file: !450, line: 3732, column: 10)
!14194 = !DILocation(line: 3733, column: 9, scope: !14193)
!14195 = !DILocation(line: 3698, column: 42, scope: !2005)
!14196 = !DILocation(line: 3738, column: 5, scope: !1993)
!14197 = !DILocation(line: 3738, column: 10, scope: !14198)
!14198 = !DILexicalBlockFile(scope: !2008, file: !450, discriminator: 1)
!14199 = !DILocation(line: 3738, column: 20, scope: !2008)
!14200 = !DILocation(line: 3738, column: 50, scope: !2008)
!14201 = !DILocation(line: 3738, column: 68, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !2008, file: !450, line: 3738, column: 65)
!14203 = !DILocation(line: 3738, column: 85, scope: !14202)
!14204 = !DILocation(line: 3738, column: 65, scope: !14202)
!14205 = !DILocation(line: 3738, column: 95, scope: !14202)
!14206 = !DILocation(line: 3738, column: 65, scope: !2008)
!14207 = !DILocation(line: 3738, column: 65, scope: !14208)
!14208 = !DILexicalBlockFile(scope: !2008, file: !450, discriminator: 2)
!14209 = !DILocation(line: 3738, column: 126, scope: !14210)
!14210 = !DILexicalBlockFile(scope: !14202, file: !450, discriminator: 3)
!14211 = !DILocation(line: 3738, column: 144, scope: !14202)
!14212 = !DILocation(line: 3738, column: 154, scope: !14202)
!14213 = !DILocation(line: 3738, column: 179, scope: !14202)
!14214 = !DILocation(line: 3738, column: 110, scope: !14202)
!14215 = !DILocation(line: 3738, column: 198, scope: !14216)
!14216 = !DILexicalBlockFile(scope: !1993, file: !450, discriminator: 4)
!14217 = !DILocation(line: 3738, column: 198, scope: !2008)
!14218 = !DILocation(line: 3738, column: 198, scope: !14219)
!14219 = !DILexicalBlockFile(scope: !2008, file: !450, discriminator: 5)
!14220 = !DILocation(line: 3739, column: 5, scope: !1993)
!14221 = !DILocation(line: 3739, column: 10, scope: !14222)
!14222 = !DILexicalBlockFile(scope: !2010, file: !450, discriminator: 1)
!14223 = !DILocation(line: 3739, column: 20, scope: !2010)
!14224 = !DILocation(line: 3739, column: 51, scope: !2010)
!14225 = !DILocation(line: 3739, column: 65, scope: !2013)
!14226 = !DILocation(line: 3739, column: 81, scope: !2013)
!14227 = !DILocation(line: 3739, column: 65, scope: !2010)
!14228 = !DILocation(line: 3739, column: 96, scope: !14229)
!14229 = !DILexicalBlockFile(scope: !2013, file: !450, discriminator: 2)
!14230 = !DILocation(line: 3739, column: 101, scope: !14231)
!14231 = !DILexicalBlockFile(scope: !2012, file: !450, discriminator: 4)
!14232 = !DILocation(line: 3739, column: 111, scope: !2012)
!14233 = !DILocation(line: 3739, column: 141, scope: !2012)
!14234 = !DILocation(line: 3739, column: 167, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !2012, file: !450, line: 3739, column: 164)
!14236 = !DILocation(line: 3739, column: 184, scope: !14235)
!14237 = !DILocation(line: 3739, column: 164, scope: !14235)
!14238 = !DILocation(line: 3739, column: 194, scope: !14235)
!14239 = !DILocation(line: 3739, column: 164, scope: !2012)
!14240 = !DILocation(line: 3739, column: 164, scope: !14241)
!14241 = !DILexicalBlockFile(scope: !2012, file: !450, discriminator: 5)
!14242 = !DILocation(line: 3739, column: 225, scope: !14243)
!14243 = !DILexicalBlockFile(scope: !14235, file: !450, discriminator: 6)
!14244 = !DILocation(line: 3739, column: 243, scope: !14235)
!14245 = !DILocation(line: 3739, column: 253, scope: !14235)
!14246 = !DILocation(line: 3739, column: 278, scope: !14235)
!14247 = !DILocation(line: 3739, column: 209, scope: !14235)
!14248 = !DILocation(line: 3739, column: 297, scope: !14249)
!14249 = !DILexicalBlockFile(scope: !2013, file: !450, discriminator: 7)
!14250 = !DILocation(line: 3739, column: 297, scope: !2012)
!14251 = !DILocation(line: 3739, column: 297, scope: !14252)
!14252 = !DILexicalBlockFile(scope: !2012, file: !450, discriminator: 8)
!14253 = !DILocation(line: 3739, column: 297, scope: !14254)
!14254 = !DILexicalBlockFile(scope: !2012, file: !450, discriminator: 9)
!14255 = !DILocation(line: 3739, column: 310, scope: !14256)
!14256 = !DILexicalBlockFile(scope: !14257, file: !450, discriminator: 10)
!14257 = !DILexicalBlockFile(scope: !1993, file: !450, discriminator: 3)
!14258 = !DILocation(line: 3739, column: 310, scope: !2010)
!14259 = !DILocation(line: 3739, column: 310, scope: !14260)
!14260 = !DILexicalBlockFile(scope: !2010, file: !450, discriminator: 11)
!14261 = !DILocation(line: 3740, column: 12, scope: !1993)
!14262 = !DILocation(line: 3740, column: 5, scope: !1993)
!14263 = !DILocation(line: 3741, column: 1, scope: !1993)
!14264 = !DILocation(line: 606, column: 26, scope: !2097)
!14265 = !DILocation(line: 606, column: 43, scope: !2097)
!14266 = !DILocation(line: 608, column: 5, scope: !2097)
!14267 = !DILocation(line: 608, column: 15, scope: !2097)
!14268 = !DILocation(line: 611, column: 25, scope: !2097)
!14269 = !DILocation(line: 611, column: 9, scope: !2097)
!14270 = !DILocation(line: 610, column: 12, scope: !2097)
!14271 = !DILocation(line: 610, column: 10, scope: !2097)
!14272 = !DILocation(line: 614, column: 9, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !2097, file: !450, line: 614, column: 9)
!14274 = !DILocation(line: 614, column: 14, scope: !14273)
!14275 = !DILocation(line: 614, column: 9, scope: !2097)
!14276 = !DILocation(line: 615, column: 28, scope: !14273)
!14277 = !DILocation(line: 615, column: 9, scope: !14273)
!14278 = !DILocation(line: 616, column: 47, scope: !2097)
!14279 = !DILocation(line: 616, column: 27, scope: !2097)
!14280 = !DILocation(line: 616, column: 35, scope: !2097)
!14281 = !DILocation(line: 616, column: 44, scope: !2097)
!14282 = !DILocation(line: 616, column: 83, scope: !2097)
!14283 = !DILocation(line: 616, column: 92, scope: !2097)
!14284 = !DILocation(line: 616, column: 103, scope: !2097)
!14285 = !DILocation(line: 616, column: 110, scope: !2097)
!14286 = !DILocation(line: 617, column: 12, scope: !2097)
!14287 = !DILocation(line: 617, column: 5, scope: !2097)
!14288 = !DILocation(line: 618, column: 1, scope: !2097)
!14289 = !DILocation(line: 3480, column: 24, scope: !2102)
!14290 = !DILocation(line: 3480, column: 40, scope: !2102)
!14291 = !DILocation(line: 3480, column: 56, scope: !2102)
!14292 = !DILocation(line: 3482, column: 5, scope: !2102)
!14293 = !DILocation(line: 3482, column: 15, scope: !2102)
!14294 = !DILocation(line: 3483, column: 5, scope: !2102)
!14295 = !DILocation(line: 3483, column: 15, scope: !2102)
!14296 = !DILocation(line: 3484, column: 5, scope: !2102)
!14297 = !DILocation(line: 3484, column: 9, scope: !2102)
!14298 = !DILocation(line: 3485, column: 5, scope: !2102)
!14299 = !DILocation(line: 3485, column: 9, scope: !2102)
!14300 = !DILocation(line: 3486, column: 5, scope: !2102)
!14301 = !DILocation(line: 3486, column: 9, scope: !2102)
!14302 = !DILocation(line: 3487, column: 5, scope: !2102)
!14303 = !DILocation(line: 3487, column: 9, scope: !2102)
!14304 = !DILocation(line: 3488, column: 5, scope: !2102)
!14305 = !DILocation(line: 3488, column: 15, scope: !2102)
!14306 = !DILocation(line: 3491, column: 26, scope: !2116)
!14307 = !DILocation(line: 3491, column: 11, scope: !2116)
!14308 = !DILocation(line: 3491, column: 34, scope: !2116)
!14309 = !DILocation(line: 3491, column: 43, scope: !2116)
!14310 = !DILocation(line: 3491, column: 48, scope: !2116)
!14311 = !DILocation(line: 3492, column: 26, scope: !2116)
!14312 = !DILocation(line: 3492, column: 11, scope: !2116)
!14313 = !DILocation(line: 3492, column: 34, scope: !2116)
!14314 = !DILocation(line: 3492, column: 43, scope: !2116)
!14315 = !DILocation(line: 3492, column: 48, scope: !2116)
!14316 = !DILocation(line: 3493, column: 54, scope: !2116)
!14317 = !DILocation(line: 3493, column: 36, scope: !2116)
!14318 = !DILocation(line: 3493, column: 62, scope: !2116)
!14319 = !DILocation(line: 3493, column: 35, scope: !2116)
!14320 = !DILocation(line: 3493, column: 32, scope: !2116)
!14321 = !DILocation(line: 3493, column: 77, scope: !2116)
!14322 = !DILocation(line: 3493, column: 88, scope: !2116)
!14323 = !DILocation(line: 3493, column: 97, scope: !2116)
!14324 = !DILocation(line: 3493, column: 114, scope: !2116)
!14325 = !DILocation(line: 3493, column: 120, scope: !2116)
!14326 = !DILocation(line: 3494, column: 40, scope: !2116)
!14327 = !DILocation(line: 3494, column: 25, scope: !2116)
!14328 = !DILocation(line: 3494, column: 49, scope: !2116)
!14329 = !DILocation(line: 3494, column: 59, scope: !2116)
!14330 = !DILocation(line: 3494, column: 64, scope: !2116)
!14331 = !DILocation(line: 3495, column: 62, scope: !2116)
!14332 = !DILocation(line: 3495, column: 44, scope: !2116)
!14333 = !DILocation(line: 3495, column: 71, scope: !2116)
!14334 = !DILocation(line: 3495, column: 42, scope: !2116)
!14335 = !DILocation(line: 3495, column: 27, scope: !2116)
!14336 = !DILocation(line: 3495, column: 9, scope: !2116)
!14337 = !DILocation(line: 3495, column: 86, scope: !2116)
!14338 = !DILocation(line: 3491, column: 9, scope: !2102)
!14339 = !DILocation(line: 3497, column: 9, scope: !2115)
!14340 = !DILocation(line: 3497, column: 26, scope: !2115)
!14341 = !DILocation(line: 3498, column: 9, scope: !2115)
!14342 = !DILocation(line: 3498, column: 14, scope: !2115)
!14343 = !DILocation(line: 3500, column: 30, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !2115, file: !450, line: 3500, column: 13)
!14345 = !DILocation(line: 3500, column: 15, scope: !14344)
!14346 = !DILocation(line: 3500, column: 38, scope: !14344)
!14347 = !DILocation(line: 3500, column: 47, scope: !14344)
!14348 = !DILocation(line: 3500, column: 13, scope: !2115)
!14349 = !DILocation(line: 3501, column: 42, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14344, file: !450, line: 3500, column: 53)
!14351 = !DILocation(line: 3501, column: 24, scope: !14350)
!14352 = !DILocation(line: 3501, column: 50, scope: !14350)
!14353 = !DILocation(line: 3501, column: 23, scope: !14350)
!14354 = !DILocation(line: 3501, column: 20, scope: !14350)
!14355 = !DILocation(line: 3502, column: 39, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14350, file: !450, line: 3502, column: 17)
!14357 = !DILocation(line: 3502, column: 17, scope: !14356)
!14358 = !DILocation(line: 3502, column: 47, scope: !14356)
!14359 = !DILocation(line: 3502, column: 17, scope: !14350)
!14360 = !DILocation(line: 3503, column: 33, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14356, file: !450, line: 3502, column: 52)
!14362 = !DILocation(line: 3503, column: 17, scope: !14361)
!14363 = !DILocation(line: 3505, column: 17, scope: !14361)
!14364 = !DILocation(line: 3507, column: 9, scope: !14350)
!14365 = !DILocation(line: 3508, column: 24, scope: !2115)
!14366 = !DILocation(line: 3508, column: 31, scope: !2115)
!14367 = !DILocation(line: 3508, column: 17, scope: !2115)
!14368 = !DILocation(line: 3508, column: 15, scope: !2115)
!14369 = !DILocation(line: 3509, column: 35, scope: !2115)
!14370 = !DILocation(line: 3509, column: 41, scope: !2115)
!14371 = !DILocation(line: 3509, column: 50, scope: !2115)
!14372 = !DILocation(line: 3509, column: 56, scope: !2115)
!14373 = !DILocation(line: 3509, column: 14, scope: !2115)
!14374 = !DILocation(line: 3509, column: 12, scope: !2115)
!14375 = !DILocation(line: 3510, column: 13, scope: !2120)
!14376 = !DILocation(line: 3510, column: 16, scope: !2120)
!14377 = !DILocation(line: 3510, column: 13, scope: !2115)
!14378 = !DILocation(line: 3511, column: 13, scope: !2119)
!14379 = !DILocation(line: 3511, column: 19, scope: !2119)
!14380 = !DILocation(line: 3511, column: 62, scope: !2119)
!14381 = !DILocation(line: 3511, column: 44, scope: !2119)
!14382 = !DILocation(line: 3511, column: 71, scope: !2119)
!14383 = !DILocation(line: 3511, column: 42, scope: !2119)
!14384 = !DILocation(line: 3513, column: 20, scope: !2119)
!14385 = !DILocation(line: 3513, column: 24, scope: !2119)
!14386 = !DILocation(line: 3513, column: 13, scope: !2119)
!14387 = !DILocation(line: 3513, column: 30, scope: !2119)
!14388 = !DILocation(line: 3514, column: 13, scope: !2119)
!14389 = !DILocation(line: 3514, column: 17, scope: !2119)
!14390 = !DILocation(line: 3514, column: 26, scope: !2119)
!14391 = !DILocation(line: 3515, column: 29, scope: !2119)
!14392 = !DILocation(line: 3515, column: 13, scope: !2119)
!14393 = !DILocation(line: 3515, column: 17, scope: !2119)
!14394 = !DILocation(line: 3515, column: 27, scope: !2119)
!14395 = !DILocation(line: 3516, column: 17, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !2119, file: !450, line: 3516, column: 17)
!14397 = !DILocation(line: 3516, column: 17, scope: !2119)
!14398 = !DILocation(line: 3517, column: 33, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14396, file: !450, line: 3516, column: 24)
!14400 = !DILocation(line: 3517, column: 43, scope: !14399)
!14401 = !DILocation(line: 3517, column: 52, scope: !14399)
!14402 = !DILocation(line: 3518, column: 30, scope: !14399)
!14403 = !DILocation(line: 3518, column: 17, scope: !14399)
!14404 = !DILocation(line: 3518, column: 21, scope: !14399)
!14405 = !DILocation(line: 3518, column: 28, scope: !14399)
!14406 = !DILocation(line: 3519, column: 13, scope: !14399)
!14407 = !DILocation(line: 3520, column: 9, scope: !2120)
!14408 = !DILocation(line: 3520, column: 9, scope: !2119)
!14409 = !DILocation(line: 3521, column: 28, scope: !2115)
!14410 = !DILocation(line: 3521, column: 16, scope: !2115)
!14411 = !DILocation(line: 3521, column: 9, scope: !2115)
!14412 = !DILocation(line: 3522, column: 5, scope: !2116)
!14413 = !DILocation(line: 3524, column: 37, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !2102, file: !450, line: 3524, column: 9)
!14415 = !DILocation(line: 3524, column: 43, scope: !14414)
!14416 = !DILocation(line: 3524, column: 9, scope: !14414)
!14417 = !DILocation(line: 3524, column: 9, scope: !2102)
!14418 = !DILocation(line: 3527, column: 29, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14420, file: !450, line: 3527, column: 13)
!14420 = distinct !DILexicalBlock(scope: !14414, file: !450, line: 3526, column: 47)
!14421 = !DILocation(line: 3527, column: 35, scope: !14419)
!14422 = !DILocation(line: 3527, column: 43, scope: !14419)
!14423 = !DILocation(line: 3527, column: 51, scope: !14419)
!14424 = !DILocation(line: 3527, column: 13, scope: !14419)
!14425 = !DILocation(line: 3527, column: 60, scope: !14419)
!14426 = !DILocation(line: 3527, column: 13, scope: !14420)
!14427 = !DILocation(line: 3528, column: 13, scope: !14419)
!14428 = !DILocation(line: 3529, column: 35, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14420, file: !450, line: 3529, column: 13)
!14430 = !DILocation(line: 3529, column: 13, scope: !14429)
!14431 = !DILocation(line: 3529, column: 43, scope: !14429)
!14432 = !DILocation(line: 3529, column: 13, scope: !14420)
!14433 = !DILocation(line: 3530, column: 13, scope: !14429)
!14434 = !DILocation(line: 3531, column: 28, scope: !14420)
!14435 = !DILocation(line: 3531, column: 34, scope: !14420)
!14436 = !DILocation(line: 3531, column: 42, scope: !14420)
!14437 = !DILocation(line: 3531, column: 50, scope: !14420)
!14438 = !DILocation(line: 3531, column: 59, scope: !14420)
!14439 = !DILocation(line: 3532, column: 28, scope: !14420)
!14440 = !DILocation(line: 3531, column: 16, scope: !14420)
!14441 = !DILocation(line: 3531, column: 14, scope: !14420)
!14442 = !DILocation(line: 3533, column: 5, scope: !14420)
!14443 = !DILocation(line: 3534, column: 12, scope: !2102)
!14444 = !DILocation(line: 3534, column: 5, scope: !2102)
!14445 = !DILocation(line: 3535, column: 1, scope: !2102)
!14446 = !DILocation(line: 3809, column: 21, scope: !1948)
!14447 = !DILocation(line: 3811, column: 5, scope: !1948)
!14448 = !DILocation(line: 3811, column: 15, scope: !1948)
!14449 = !DILocation(line: 3811, column: 24, scope: !1948)
!14450 = !DILocation(line: 3812, column: 5, scope: !1948)
!14451 = !DILocation(line: 3812, column: 9, scope: !1948)
!14452 = !DILocation(line: 3814, column: 29, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !1948, file: !450, line: 3814, column: 9)
!14454 = !DILocation(line: 3814, column: 11, scope: !14453)
!14455 = !DILocation(line: 3814, column: 36, scope: !14453)
!14456 = !DILocation(line: 3814, column: 10, scope: !14453)
!14457 = !DILocation(line: 3814, column: 9, scope: !14453)
!14458 = !DILocation(line: 3814, column: 45, scope: !14453)
!14459 = !DILocation(line: 3814, column: 69, scope: !14460)
!14460 = !DILexicalBlockFile(scope: !14453, file: !450, discriminator: 1)
!14461 = !DILocation(line: 3814, column: 51, scope: !14453)
!14462 = !DILocation(line: 3814, column: 76, scope: !14453)
!14463 = !DILocation(line: 3814, column: 50, scope: !14453)
!14464 = !DILocation(line: 3814, column: 84, scope: !14453)
!14465 = !DILocation(line: 3814, column: 113, scope: !14453)
!14466 = !DILocation(line: 3814, column: 95, scope: !14453)
!14467 = !DILocation(line: 3814, column: 120, scope: !14453)
!14468 = !DILocation(line: 3814, column: 94, scope: !14453)
!14469 = !DILocation(line: 3814, column: 128, scope: !14453)
!14470 = !DILocation(line: 3814, column: 91, scope: !14453)
!14471 = !DILocation(line: 3814, column: 155, scope: !14453)
!14472 = !DILocation(line: 3814, column: 137, scope: !14453)
!14473 = !DILocation(line: 3814, column: 162, scope: !14453)
!14474 = !DILocation(line: 3814, column: 136, scope: !14453)
!14475 = !DILocation(line: 3814, column: 134, scope: !14453)
!14476 = !DILocation(line: 3814, column: 9, scope: !1948)
!14477 = !DILocation(line: 3818, column: 9, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14453, file: !450, line: 3814, column: 172)
!14479 = !DILocation(line: 3820, column: 44, scope: !1948)
!14480 = !DILocation(line: 3820, column: 17, scope: !1948)
!14481 = !DILocation(line: 3820, column: 52, scope: !1948)
!14482 = !DILocation(line: 3820, column: 15, scope: !1948)
!14483 = !DILocation(line: 3820, column: 86, scope: !14484)
!14484 = !DILexicalBlockFile(scope: !1948, file: !450, discriminator: 1)
!14485 = !DILocation(line: 3820, column: 66, scope: !1948)
!14486 = !DILocation(line: 3820, column: 94, scope: !1948)
!14487 = !DILocation(line: 3820, column: 15, scope: !14488)
!14488 = !DILexicalBlockFile(scope: !1948, file: !450, discriminator: 2)
!14489 = !DILocation(line: 3820, column: 12, scope: !14490)
!14490 = !DILexicalBlockFile(scope: !14491, file: !450, discriminator: 4)
!14491 = !DILexicalBlockFile(scope: !1948, file: !450, discriminator: 3)
!14492 = !DILocation(line: 3821, column: 9, scope: !1957)
!14493 = !DILocation(line: 3821, column: 16, scope: !1957)
!14494 = !DILocation(line: 3821, column: 9, scope: !1948)
!14495 = !DILocation(line: 3822, column: 33, scope: !1956)
!14496 = !DILocation(line: 3822, column: 18, scope: !1956)
!14497 = !DILocation(line: 3822, column: 16, scope: !1956)
!14498 = !DILocation(line: 3823, column: 13, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !1956, file: !450, line: 3823, column: 13)
!14500 = !DILocation(line: 3823, column: 20, scope: !14499)
!14501 = !DILocation(line: 3823, column: 13, scope: !1956)
!14502 = !DILocation(line: 3824, column: 13, scope: !14499)
!14503 = !DILocation(line: 3825, column: 42, scope: !1956)
!14504 = !DILocation(line: 3825, column: 21, scope: !1956)
!14505 = !DILocation(line: 3825, column: 52, scope: !1956)
!14506 = !DILocation(line: 3825, column: 57, scope: !1956)
!14507 = !DILocation(line: 3825, column: 89, scope: !1956)
!14508 = !DILocation(line: 3825, column: 68, scope: !1956)
!14509 = !DILocation(line: 3825, column: 99, scope: !1956)
!14510 = !DILocation(line: 3825, column: 64, scope: !1956)
!14511 = !DILocation(line: 3825, column: 17, scope: !1956)
!14512 = !DILocation(line: 3826, column: 9, scope: !1956)
!14513 = !DILocation(line: 3826, column: 14, scope: !14514)
!14514 = !DILexicalBlockFile(scope: !1955, file: !450, discriminator: 1)
!14515 = !DILocation(line: 3826, column: 24, scope: !1955)
!14516 = !DILocation(line: 3826, column: 54, scope: !1955)
!14517 = !DILocation(line: 3826, column: 71, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !1955, file: !450, line: 3826, column: 68)
!14519 = !DILocation(line: 3826, column: 88, scope: !14518)
!14520 = !DILocation(line: 3826, column: 68, scope: !14518)
!14521 = !DILocation(line: 3826, column: 98, scope: !14518)
!14522 = !DILocation(line: 3826, column: 68, scope: !1955)
!14523 = !DILocation(line: 3826, column: 68, scope: !14524)
!14524 = !DILexicalBlockFile(scope: !1955, file: !450, discriminator: 2)
!14525 = !DILocation(line: 3826, column: 129, scope: !14526)
!14526 = !DILexicalBlockFile(scope: !14518, file: !450, discriminator: 3)
!14527 = !DILocation(line: 3826, column: 147, scope: !14518)
!14528 = !DILocation(line: 3826, column: 157, scope: !14518)
!14529 = !DILocation(line: 3826, column: 182, scope: !14518)
!14530 = !DILocation(line: 3826, column: 113, scope: !14518)
!14531 = !DILocation(line: 3826, column: 201, scope: !14532)
!14532 = !DILexicalBlockFile(scope: !1956, file: !450, discriminator: 4)
!14533 = !DILocation(line: 3826, column: 201, scope: !1955)
!14534 = !DILocation(line: 3826, column: 201, scope: !14535)
!14535 = !DILexicalBlockFile(scope: !1955, file: !450, discriminator: 5)
!14536 = !DILocation(line: 3827, column: 5, scope: !1956)
!14537 = !DILocation(line: 3828, column: 33, scope: !1948)
!14538 = !DILocation(line: 3828, column: 15, scope: !1948)
!14539 = !DILocation(line: 3828, column: 40, scope: !1948)
!14540 = !DILocation(line: 3828, column: 14, scope: !1948)
!14541 = !DILocation(line: 3828, column: 13, scope: !1948)
!14542 = !DILocation(line: 3828, column: 48, scope: !1948)
!14543 = !DILocation(line: 3828, column: 54, scope: !1948)
!14544 = !DILocation(line: 3828, column: 52, scope: !1948)
!14545 = !DILocation(line: 3828, column: 84, scope: !1948)
!14546 = !DILocation(line: 3828, column: 66, scope: !1948)
!14547 = !DILocation(line: 3828, column: 91, scope: !1948)
!14548 = !DILocation(line: 3828, column: 65, scope: !1948)
!14549 = !DILocation(line: 3828, column: 64, scope: !1948)
!14550 = !DILocation(line: 3828, column: 99, scope: !1948)
!14551 = !DILocation(line: 3828, column: 62, scope: !1948)
!14552 = !DILocation(line: 3828, column: 106, scope: !1948)
!14553 = !DILocation(line: 3828, column: 5, scope: !1948)
!14554 = !DILocation(line: 3829, column: 1, scope: !1948)
!14555 = !DILocation(line: 3556, column: 26, scope: !1986)
!14556 = !DILocation(line: 3556, column: 42, scope: !1986)
!14557 = !DILocation(line: 3557, column: 57, scope: !1986)
!14558 = !DILocation(line: 3557, column: 30, scope: !1986)
!14559 = !DILocation(line: 3557, column: 65, scope: !1986)
!14560 = !DILocation(line: 3557, column: 28, scope: !1986)
!14561 = !DILocation(line: 3557, column: 99, scope: !14562)
!14562 = !DILexicalBlockFile(scope: !1986, file: !450, discriminator: 1)
!14563 = !DILocation(line: 3557, column: 79, scope: !1986)
!14564 = !DILocation(line: 3557, column: 107, scope: !1986)
!14565 = !DILocation(line: 3557, column: 28, scope: !14566)
!14566 = !DILexicalBlockFile(scope: !1986, file: !450, discriminator: 2)
!14567 = !DILocation(line: 3557, column: 12, scope: !14568)
!14568 = !DILexicalBlockFile(scope: !14569, file: !450, discriminator: 4)
!14569 = !DILexicalBlockFile(scope: !1986, file: !450, discriminator: 3)
!14570 = !DILocation(line: 3557, column: 5, scope: !1986)
!14571 = !DILocation(line: 3604, column: 33, scope: !2014)
!14572 = !DILocation(line: 3604, column: 49, scope: !2014)
!14573 = !DILocation(line: 3606, column: 5, scope: !2014)
!14574 = !DILocation(line: 3606, column: 10, scope: !2014)
!14575 = !DILocation(line: 3607, column: 5, scope: !2014)
!14576 = !DILocation(line: 3607, column: 15, scope: !2014)
!14577 = !DILocation(line: 3608, column: 5, scope: !2014)
!14578 = !DILocation(line: 3608, column: 9, scope: !2014)
!14579 = !DILocation(line: 3608, column: 35, scope: !2014)
!14580 = !DILocation(line: 3608, column: 42, scope: !2014)
!14581 = !DILocation(line: 3608, column: 16, scope: !2014)
!14582 = !DILocation(line: 3608, column: 50, scope: !2014)
!14583 = !DILocation(line: 3608, column: 79, scope: !2014)
!14584 = !DILocation(line: 3608, column: 86, scope: !2014)
!14585 = !DILocation(line: 3608, column: 60, scope: !2014)
!14586 = !DILocation(line: 3608, column: 94, scope: !2014)
!14587 = !DILocation(line: 3608, column: 57, scope: !2014)
!14588 = !DILocation(line: 3608, column: 121, scope: !2014)
!14589 = !DILocation(line: 3608, column: 128, scope: !2014)
!14590 = !DILocation(line: 3608, column: 102, scope: !2014)
!14591 = !DILocation(line: 3608, column: 100, scope: !2014)
!14592 = !DILocation(line: 3610, column: 9, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !2014, file: !450, line: 3610, column: 9)
!14594 = !DILocation(line: 3610, column: 9, scope: !2014)
!14595 = !DILocation(line: 3612, column: 59, scope: !14593)
!14596 = !DILocation(line: 3612, column: 66, scope: !14593)
!14597 = !DILocation(line: 3612, column: 40, scope: !14593)
!14598 = !DILocation(line: 3612, column: 39, scope: !14593)
!14599 = !DILocation(line: 3613, column: 59, scope: !14593)
!14600 = !DILocation(line: 3613, column: 66, scope: !14593)
!14601 = !DILocation(line: 3613, column: 40, scope: !14593)
!14602 = !DILocation(line: 3613, column: 39, scope: !14593)
!14603 = !DILocation(line: 3614, column: 59, scope: !14593)
!14604 = !DILocation(line: 3614, column: 66, scope: !14593)
!14605 = !DILocation(line: 3614, column: 40, scope: !14593)
!14606 = !DILocation(line: 3614, column: 39, scope: !14593)
!14607 = !DILocation(line: 3615, column: 39, scope: !14593)
!14608 = !DILocation(line: 3611, column: 18, scope: !14593)
!14609 = !DILocation(line: 3611, column: 16, scope: !14593)
!14610 = !DILocation(line: 3611, column: 9, scope: !14593)
!14611 = !DILocation(line: 3618, column: 59, scope: !14593)
!14612 = !DILocation(line: 3618, column: 66, scope: !14593)
!14613 = !DILocation(line: 3618, column: 40, scope: !14593)
!14614 = !DILocation(line: 3618, column: 39, scope: !14593)
!14615 = !DILocation(line: 3619, column: 59, scope: !14593)
!14616 = !DILocation(line: 3619, column: 66, scope: !14593)
!14617 = !DILocation(line: 3619, column: 40, scope: !14593)
!14618 = !DILocation(line: 3619, column: 39, scope: !14593)
!14619 = !DILocation(line: 3620, column: 59, scope: !14593)
!14620 = !DILocation(line: 3620, column: 66, scope: !14593)
!14621 = !DILocation(line: 3620, column: 40, scope: !14593)
!14622 = !DILocation(line: 3620, column: 39, scope: !14593)
!14623 = !DILocation(line: 3617, column: 18, scope: !14593)
!14624 = !DILocation(line: 3617, column: 16, scope: !14593)
!14625 = !DILocation(line: 3622, column: 9, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !2014, file: !450, line: 3622, column: 9)
!14627 = !DILocation(line: 3622, column: 16, scope: !14626)
!14628 = !DILocation(line: 3622, column: 30, scope: !14626)
!14629 = !DILocation(line: 3622, column: 63, scope: !14630)
!14630 = !DILexicalBlockFile(scope: !14626, file: !450, discriminator: 1)
!14631 = !DILocation(line: 3622, column: 36, scope: !14626)
!14632 = !DILocation(line: 3622, column: 71, scope: !14626)
!14633 = !DILocation(line: 3622, column: 34, scope: !14626)
!14634 = !DILocation(line: 3622, column: 82, scope: !14626)
!14635 = !DILocation(line: 3622, column: 85, scope: !14636)
!14636 = !DILexicalBlockFile(scope: !14626, file: !450, discriminator: 2)
!14637 = !DILocation(line: 3622, column: 91, scope: !14626)
!14638 = !DILocation(line: 3622, column: 98, scope: !14626)
!14639 = !DILocation(line: 3622, column: 9, scope: !2014)
!14640 = !DILocation(line: 3623, column: 16, scope: !14626)
!14641 = !DILocation(line: 3623, column: 9, scope: !14626)
!14642 = !DILocation(line: 3626, column: 26, scope: !2026)
!14643 = !DILocation(line: 3626, column: 49, scope: !2026)
!14644 = !DILocation(line: 3626, column: 55, scope: !2026)
!14645 = !DILocation(line: 3626, column: 9, scope: !2026)
!14646 = !DILocation(line: 3627, column: 45, scope: !2026)
!14647 = !DILocation(line: 3626, column: 9, scope: !2014)
!14648 = !DILocation(line: 3628, column: 9, scope: !2025)
!14649 = !DILocation(line: 3628, column: 14, scope: !14650)
!14650 = !DILexicalBlockFile(scope: !2024, file: !450, discriminator: 1)
!14651 = !DILocation(line: 3628, column: 24, scope: !2024)
!14652 = !DILocation(line: 3628, column: 54, scope: !2024)
!14653 = !DILocation(line: 3628, column: 71, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !2024, file: !450, line: 3628, column: 68)
!14655 = !DILocation(line: 3628, column: 88, scope: !14654)
!14656 = !DILocation(line: 3628, column: 68, scope: !14654)
!14657 = !DILocation(line: 3628, column: 98, scope: !14654)
!14658 = !DILocation(line: 3628, column: 68, scope: !2024)
!14659 = !DILocation(line: 3628, column: 68, scope: !14660)
!14660 = !DILexicalBlockFile(scope: !2024, file: !450, discriminator: 2)
!14661 = !DILocation(line: 3628, column: 129, scope: !14662)
!14662 = !DILexicalBlockFile(scope: !14654, file: !450, discriminator: 3)
!14663 = !DILocation(line: 3628, column: 147, scope: !14654)
!14664 = !DILocation(line: 3628, column: 157, scope: !14654)
!14665 = !DILocation(line: 3628, column: 182, scope: !14654)
!14666 = !DILocation(line: 3628, column: 113, scope: !14654)
!14667 = !DILocation(line: 3628, column: 201, scope: !14668)
!14668 = !DILexicalBlockFile(scope: !2025, file: !450, discriminator: 4)
!14669 = !DILocation(line: 3628, column: 201, scope: !2024)
!14670 = !DILocation(line: 3628, column: 201, scope: !14671)
!14671 = !DILexicalBlockFile(scope: !2024, file: !450, discriminator: 5)
!14672 = !DILocation(line: 3629, column: 9, scope: !2025)
!14673 = !DILocation(line: 3631, column: 58, scope: !2014)
!14674 = !DILocation(line: 3631, column: 37, scope: !2014)
!14675 = !DILocation(line: 3631, column: 5, scope: !2014)
!14676 = !DILocation(line: 3632, column: 12, scope: !2014)
!14677 = !DILocation(line: 3632, column: 5, scope: !2014)
!14678 = !DILocation(line: 3633, column: 1, scope: !2014)
!14679 = !DILocation(line: 3636, column: 32, scope: !2027)
!14680 = !DILocation(line: 3636, column: 48, scope: !2027)
!14681 = !DILocation(line: 3636, column: 64, scope: !2027)
!14682 = !DILocation(line: 3638, column: 5, scope: !2027)
!14683 = !DILocation(line: 3638, column: 15, scope: !2027)
!14684 = !DILocation(line: 3639, column: 5, scope: !2027)
!14685 = !DILocation(line: 3639, column: 15, scope: !2027)
!14686 = !DILocation(line: 3640, column: 5, scope: !2027)
!14687 = !DILocation(line: 3640, column: 15, scope: !2027)
!14688 = !DILocation(line: 3643, column: 39, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !2027, file: !450, line: 3643, column: 9)
!14690 = !DILocation(line: 3643, column: 45, scope: !14689)
!14691 = !DILocation(line: 3643, column: 11, scope: !14689)
!14692 = !DILocation(line: 3643, column: 9, scope: !2027)
!14693 = !DILocation(line: 3645, column: 9, scope: !14689)
!14694 = !DILocation(line: 3653, column: 39, scope: !2027)
!14695 = !DILocation(line: 3653, column: 46, scope: !2027)
!14696 = !DILocation(line: 3653, column: 20, scope: !2027)
!14697 = !DILocation(line: 3653, column: 19, scope: !2027)
!14698 = !DILocation(line: 3654, column: 39, scope: !2027)
!14699 = !DILocation(line: 3654, column: 46, scope: !2027)
!14700 = !DILocation(line: 3654, column: 20, scope: !2027)
!14701 = !DILocation(line: 3654, column: 19, scope: !2027)
!14702 = !DILocation(line: 3655, column: 39, scope: !2027)
!14703 = !DILocation(line: 3655, column: 46, scope: !2027)
!14704 = !DILocation(line: 3655, column: 20, scope: !2027)
!14705 = !DILocation(line: 3655, column: 19, scope: !2027)
!14706 = !DILocation(line: 3651, column: 13, scope: !2027)
!14707 = !DILocation(line: 3651, column: 11, scope: !2027)
!14708 = !DILocation(line: 3657, column: 9, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !2027, file: !450, line: 3657, column: 9)
!14710 = !DILocation(line: 3657, column: 15, scope: !14709)
!14711 = !DILocation(line: 3657, column: 9, scope: !2027)
!14712 = !DILocation(line: 3658, column: 9, scope: !14709)
!14713 = !DILocation(line: 3660, column: 40, scope: !2027)
!14714 = !DILocation(line: 3660, column: 28, scope: !2027)
!14715 = !DILocation(line: 3660, column: 46, scope: !2027)
!14716 = !DILocation(line: 3660, column: 54, scope: !2027)
!14717 = !DILocation(line: 3660, column: 14, scope: !2027)
!14718 = !DILocation(line: 3660, column: 12, scope: !2027)
!14719 = !DILocation(line: 3662, column: 5, scope: !2027)
!14720 = !DILocation(line: 3662, column: 10, scope: !14721)
!14721 = !DILexicalBlockFile(scope: !2038, file: !450, discriminator: 1)
!14722 = !DILocation(line: 3662, column: 20, scope: !2038)
!14723 = !DILocation(line: 3662, column: 50, scope: !2038)
!14724 = !DILocation(line: 3662, column: 66, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !2038, file: !450, line: 3662, column: 63)
!14726 = !DILocation(line: 3662, column: 83, scope: !14725)
!14727 = !DILocation(line: 3662, column: 63, scope: !14725)
!14728 = !DILocation(line: 3662, column: 93, scope: !14725)
!14729 = !DILocation(line: 3662, column: 63, scope: !2038)
!14730 = !DILocation(line: 3662, column: 63, scope: !14731)
!14731 = !DILexicalBlockFile(scope: !2038, file: !450, discriminator: 2)
!14732 = !DILocation(line: 3662, column: 124, scope: !14733)
!14733 = !DILexicalBlockFile(scope: !14725, file: !450, discriminator: 3)
!14734 = !DILocation(line: 3662, column: 142, scope: !14725)
!14735 = !DILocation(line: 3662, column: 152, scope: !14725)
!14736 = !DILocation(line: 3662, column: 177, scope: !14725)
!14737 = !DILocation(line: 3662, column: 108, scope: !14725)
!14738 = !DILocation(line: 3662, column: 196, scope: !14739)
!14739 = !DILexicalBlockFile(scope: !2027, file: !450, discriminator: 4)
!14740 = !DILocation(line: 3662, column: 196, scope: !2038)
!14741 = !DILocation(line: 3662, column: 196, scope: !14742)
!14742 = !DILexicalBlockFile(scope: !2038, file: !450, discriminator: 5)
!14743 = !DILocation(line: 3663, column: 12, scope: !2027)
!14744 = !DILocation(line: 3663, column: 5, scope: !2027)
!14745 = !DILocation(line: 3664, column: 1, scope: !2027)
!14746 = !DILocation(line: 3566, column: 30, scope: !2039)
!14747 = !DILocation(line: 3566, column: 46, scope: !2039)
!14748 = !DILocation(line: 3567, column: 54, scope: !2039)
!14749 = !DILocation(line: 3567, column: 27, scope: !2039)
!14750 = !DILocation(line: 3567, column: 62, scope: !2039)
!14751 = !DILocation(line: 3567, column: 25, scope: !2039)
!14752 = !DILocation(line: 3567, column: 96, scope: !14753)
!14753 = !DILexicalBlockFile(scope: !2039, file: !450, discriminator: 1)
!14754 = !DILocation(line: 3567, column: 104, scope: !2039)
!14755 = !DILocation(line: 3567, column: 25, scope: !14756)
!14756 = !DILexicalBlockFile(scope: !2039, file: !450, discriminator: 2)
!14757 = !DILocation(line: 3567, column: 12, scope: !14758)
!14758 = !DILexicalBlockFile(scope: !14759, file: !450, discriminator: 4)
!14759 = !DILexicalBlockFile(scope: !2039, file: !450, discriminator: 3)
!14760 = !DILocation(line: 3567, column: 5, scope: !2039)
!14761 = !DILocation(line: 3561, column: 20, scope: !2043)
!14762 = !DILocation(line: 3561, column: 36, scope: !2043)
!14763 = !DILocation(line: 3562, column: 51, scope: !2043)
!14764 = !DILocation(line: 3562, column: 24, scope: !2043)
!14765 = !DILocation(line: 3562, column: 59, scope: !2043)
!14766 = !DILocation(line: 3562, column: 22, scope: !2043)
!14767 = !DILocation(line: 3562, column: 93, scope: !14768)
!14768 = !DILexicalBlockFile(scope: !2043, file: !450, discriminator: 1)
!14769 = !DILocation(line: 3562, column: 73, scope: !2043)
!14770 = !DILocation(line: 3562, column: 101, scope: !2043)
!14771 = !DILocation(line: 3562, column: 22, scope: !14772)
!14772 = !DILexicalBlockFile(scope: !2043, file: !450, discriminator: 2)
!14773 = !DILocation(line: 3562, column: 12, scope: !14774)
!14774 = !DILexicalBlockFile(scope: !14775, file: !450, discriminator: 4)
!14775 = !DILexicalBlockFile(scope: !2043, file: !450, discriminator: 3)
!14776 = !DILocation(line: 3562, column: 5, scope: !2043)
!14777 = !DILocation(line: 3786, column: 31, scope: !2047)
!14778 = !DILocation(line: 3786, column: 47, scope: !2047)
!14779 = !DILocation(line: 3786, column: 63, scope: !2047)
!14780 = !DILocation(line: 3788, column: 5, scope: !2047)
!14781 = !DILocation(line: 3788, column: 15, scope: !2047)
!14782 = !DILocation(line: 3789, column: 5, scope: !2047)
!14783 = !DILocation(line: 3789, column: 15, scope: !2047)
!14784 = !DILocation(line: 3790, column: 5, scope: !2047)
!14785 = !DILocation(line: 3790, column: 9, scope: !2047)
!14786 = !DILocation(line: 3790, column: 34, scope: !2047)
!14787 = !DILocation(line: 3790, column: 41, scope: !2047)
!14788 = !DILocation(line: 3790, column: 15, scope: !2047)
!14789 = !DILocation(line: 3790, column: 14, scope: !2047)
!14790 = !DILocation(line: 3791, column: 5, scope: !2047)
!14791 = !DILocation(line: 3791, column: 9, scope: !2047)
!14792 = !DILocation(line: 3791, column: 34, scope: !2047)
!14793 = !DILocation(line: 3791, column: 41, scope: !2047)
!14794 = !DILocation(line: 3791, column: 15, scope: !2047)
!14795 = !DILocation(line: 3791, column: 14, scope: !2047)
!14796 = !DILocation(line: 3792, column: 5, scope: !2047)
!14797 = !DILocation(line: 3792, column: 9, scope: !2047)
!14798 = !DILocation(line: 3792, column: 34, scope: !2047)
!14799 = !DILocation(line: 3792, column: 41, scope: !2047)
!14800 = !DILocation(line: 3792, column: 15, scope: !2047)
!14801 = !DILocation(line: 3792, column: 14, scope: !2047)
!14802 = !DILocation(line: 3793, column: 5, scope: !2047)
!14803 = !DILocation(line: 3793, column: 9, scope: !2047)
!14804 = !DILocation(line: 3793, column: 35, scope: !2047)
!14805 = !DILocation(line: 3793, column: 42, scope: !2047)
!14806 = !DILocation(line: 3793, column: 16, scope: !2047)
!14807 = !DILocation(line: 3793, column: 50, scope: !2047)
!14808 = !DILocation(line: 3793, column: 79, scope: !2047)
!14809 = !DILocation(line: 3793, column: 86, scope: !2047)
!14810 = !DILocation(line: 3793, column: 60, scope: !2047)
!14811 = !DILocation(line: 3793, column: 94, scope: !2047)
!14812 = !DILocation(line: 3793, column: 57, scope: !2047)
!14813 = !DILocation(line: 3793, column: 121, scope: !2047)
!14814 = !DILocation(line: 3793, column: 128, scope: !2047)
!14815 = !DILocation(line: 3793, column: 102, scope: !2047)
!14816 = !DILocation(line: 3793, column: 100, scope: !2047)
!14817 = !DILocation(line: 3794, column: 5, scope: !2047)
!14818 = !DILocation(line: 3794, column: 15, scope: !2047)
!14819 = !DILocation(line: 3794, column: 53, scope: !2047)
!14820 = !DILocation(line: 3794, column: 26, scope: !2047)
!14821 = !DILocation(line: 3794, column: 61, scope: !2047)
!14822 = !DILocation(line: 3794, column: 24, scope: !2047)
!14823 = !DILocation(line: 3794, column: 74, scope: !14824)
!14824 = !DILexicalBlockFile(scope: !2047, file: !450, discriminator: 1)
!14825 = !DILocation(line: 3794, column: 80, scope: !2047)
!14826 = !DILocation(line: 3794, column: 24, scope: !14827)
!14827 = !DILexicalBlockFile(scope: !2047, file: !450, discriminator: 2)
!14828 = !DILocation(line: 3794, column: 15, scope: !14829)
!14829 = !DILexicalBlockFile(scope: !14830, file: !450, discriminator: 4)
!14830 = !DILexicalBlockFile(scope: !2047, file: !450, discriminator: 3)
!14831 = !DILocation(line: 3796, column: 39, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !2047, file: !450, line: 3796, column: 9)
!14833 = !DILocation(line: 3796, column: 45, scope: !14832)
!14834 = !DILocation(line: 3796, column: 11, scope: !14832)
!14835 = !DILocation(line: 3796, column: 9, scope: !2047)
!14836 = !DILocation(line: 3799, column: 9, scope: !14832)
!14837 = !DILocation(line: 3800, column: 36, scope: !2047)
!14838 = !DILocation(line: 3800, column: 40, scope: !2047)
!14839 = !DILocation(line: 3800, column: 44, scope: !2047)
!14840 = !DILocation(line: 3800, column: 48, scope: !2047)
!14841 = !DILocation(line: 3800, column: 52, scope: !2047)
!14842 = !DILocation(line: 3800, column: 13, scope: !2047)
!14843 = !DILocation(line: 3800, column: 11, scope: !2047)
!14844 = !DILocation(line: 3801, column: 9, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !2047, file: !450, line: 3801, column: 9)
!14846 = !DILocation(line: 3801, column: 15, scope: !14845)
!14847 = !DILocation(line: 3801, column: 9, scope: !2047)
!14848 = !DILocation(line: 3802, column: 9, scope: !14845)
!14849 = !DILocation(line: 3803, column: 36, scope: !2047)
!14850 = !DILocation(line: 3803, column: 24, scope: !2047)
!14851 = !DILocation(line: 3803, column: 44, scope: !2047)
!14852 = !DILocation(line: 3803, column: 54, scope: !2047)
!14853 = !DILocation(line: 3803, column: 13, scope: !2047)
!14854 = !DILocation(line: 3803, column: 11, scope: !2047)
!14855 = !DILocation(line: 3804, column: 5, scope: !2047)
!14856 = !DILocation(line: 3804, column: 10, scope: !14857)
!14857 = !DILexicalBlockFile(scope: !2060, file: !450, discriminator: 1)
!14858 = !DILocation(line: 3804, column: 20, scope: !2060)
!14859 = !DILocation(line: 3804, column: 50, scope: !2060)
!14860 = !DILocation(line: 3804, column: 66, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !2060, file: !450, line: 3804, column: 63)
!14862 = !DILocation(line: 3804, column: 83, scope: !14861)
!14863 = !DILocation(line: 3804, column: 63, scope: !14861)
!14864 = !DILocation(line: 3804, column: 93, scope: !14861)
!14865 = !DILocation(line: 3804, column: 63, scope: !2060)
!14866 = !DILocation(line: 3804, column: 63, scope: !14867)
!14867 = !DILexicalBlockFile(scope: !2060, file: !450, discriminator: 2)
!14868 = !DILocation(line: 3804, column: 124, scope: !14869)
!14869 = !DILexicalBlockFile(scope: !14861, file: !450, discriminator: 3)
!14870 = !DILocation(line: 3804, column: 142, scope: !14861)
!14871 = !DILocation(line: 3804, column: 152, scope: !14861)
!14872 = !DILocation(line: 3804, column: 177, scope: !14861)
!14873 = !DILocation(line: 3804, column: 108, scope: !14861)
!14874 = !DILocation(line: 3804, column: 196, scope: !14875)
!14875 = !DILexicalBlockFile(scope: !2047, file: !450, discriminator: 4)
!14876 = !DILocation(line: 3804, column: 196, scope: !2060)
!14877 = !DILocation(line: 3804, column: 196, scope: !14878)
!14878 = !DILexicalBlockFile(scope: !2060, file: !450, discriminator: 5)
!14879 = !DILocation(line: 3805, column: 12, scope: !2047)
!14880 = !DILocation(line: 3805, column: 5, scope: !2047)
!14881 = !DILocation(line: 3806, column: 1, scope: !2047)
!14882 = !DILocation(line: 3857, column: 30, scope: !2061)
!14883 = !DILocation(line: 3857, column: 46, scope: !2061)
!14884 = !DILocation(line: 3859, column: 48, scope: !2061)
!14885 = !DILocation(line: 3859, column: 36, scope: !2061)
!14886 = !DILocation(line: 3859, column: 56, scope: !2061)
!14887 = !DILocation(line: 3859, column: 80, scope: !2061)
!14888 = !DILocation(line: 3859, column: 66, scope: !2061)
!14889 = !DILocation(line: 3859, column: 12, scope: !2061)
!14890 = !DILocation(line: 3859, column: 5, scope: !2061)
!14891 = !DILocation(line: 3839, column: 32, scope: !2065)
!14892 = !DILocation(line: 3841, column: 5, scope: !2065)
!14893 = !DILocation(line: 3841, column: 15, scope: !2065)
!14894 = !DILocation(line: 3842, column: 5, scope: !2065)
!14895 = !DILocation(line: 3842, column: 15, scope: !2065)
!14896 = !DILocation(line: 3844, column: 51, scope: !2065)
!14897 = !DILocation(line: 3844, column: 57, scope: !2065)
!14898 = !DILocation(line: 3844, column: 17, scope: !2065)
!14899 = !DILocation(line: 3844, column: 15, scope: !2065)
!14900 = !DILocation(line: 3846, column: 9, scope: !2073)
!14901 = !DILocation(line: 3846, column: 19, scope: !2073)
!14902 = !DILocation(line: 3846, column: 9, scope: !2065)
!14903 = !DILocation(line: 3847, column: 44, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !2072, file: !450, line: 3847, column: 13)
!14905 = !DILocation(line: 3847, column: 17, scope: !14904)
!14906 = !DILocation(line: 3847, column: 52, scope: !14904)
!14907 = !DILocation(line: 3847, column: 15, scope: !14904)
!14908 = !DILocation(line: 3847, column: 63, scope: !14904)
!14909 = !DILocation(line: 3847, column: 66, scope: !14910)
!14910 = !DILexicalBlockFile(scope: !14904, file: !450, discriminator: 1)
!14911 = !DILocation(line: 3847, column: 72, scope: !14904)
!14912 = !DILocation(line: 3847, column: 79, scope: !14904)
!14913 = !DILocation(line: 3847, column: 13, scope: !2072)
!14914 = !DILocation(line: 3848, column: 38, scope: !14904)
!14915 = !DILocation(line: 3848, column: 22, scope: !14904)
!14916 = !DILocation(line: 3848, column: 20, scope: !14904)
!14917 = !DILocation(line: 3848, column: 13, scope: !14904)
!14918 = !DILocation(line: 3850, column: 38, scope: !14904)
!14919 = !DILocation(line: 3850, column: 49, scope: !14904)
!14920 = !DILocation(line: 3850, column: 55, scope: !14904)
!14921 = !DILocation(line: 3850, column: 22, scope: !14904)
!14922 = !DILocation(line: 3850, column: 20, scope: !14904)
!14923 = !DILocation(line: 3851, column: 9, scope: !2072)
!14924 = !DILocation(line: 3851, column: 14, scope: !14925)
!14925 = !DILexicalBlockFile(scope: !2071, file: !450, discriminator: 1)
!14926 = !DILocation(line: 3851, column: 24, scope: !2071)
!14927 = !DILocation(line: 3851, column: 54, scope: !2071)
!14928 = !DILocation(line: 3851, column: 74, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !2071, file: !450, line: 3851, column: 71)
!14930 = !DILocation(line: 3851, column: 91, scope: !14929)
!14931 = !DILocation(line: 3851, column: 71, scope: !14929)
!14932 = !DILocation(line: 3851, column: 101, scope: !14929)
!14933 = !DILocation(line: 3851, column: 71, scope: !2071)
!14934 = !DILocation(line: 3851, column: 71, scope: !14935)
!14935 = !DILexicalBlockFile(scope: !2071, file: !450, discriminator: 2)
!14936 = !DILocation(line: 3851, column: 132, scope: !14937)
!14937 = !DILexicalBlockFile(scope: !14929, file: !450, discriminator: 3)
!14938 = !DILocation(line: 3851, column: 150, scope: !14929)
!14939 = !DILocation(line: 3851, column: 160, scope: !14929)
!14940 = !DILocation(line: 3851, column: 185, scope: !14929)
!14941 = !DILocation(line: 3851, column: 116, scope: !14929)
!14942 = !DILocation(line: 3851, column: 204, scope: !14943)
!14943 = !DILexicalBlockFile(scope: !2072, file: !450, discriminator: 4)
!14944 = !DILocation(line: 3851, column: 204, scope: !2071)
!14945 = !DILocation(line: 3851, column: 204, scope: !14946)
!14946 = !DILexicalBlockFile(scope: !2071, file: !450, discriminator: 5)
!14947 = !DILocation(line: 3852, column: 5, scope: !2072)
!14948 = !DILocation(line: 3853, column: 12, scope: !2065)
!14949 = !DILocation(line: 3854, column: 1, scope: !2065)
!14950 = !DILocation(line: 3853, column: 5, scope: !2065)
!14951 = !DILocation(line: 3431, column: 28, scope: !2074)
!14952 = !DILocation(line: 3431, column: 40, scope: !2074)
!14953 = !DILocation(line: 3433, column: 48, scope: !2074)
!14954 = !DILocation(line: 3433, column: 55, scope: !2074)
!14955 = !DILocation(line: 3433, column: 29, scope: !2074)
!14956 = !DILocation(line: 3433, column: 28, scope: !2074)
!14957 = !DILocation(line: 3433, column: 12, scope: !2074)
!14958 = !DILocation(line: 3433, column: 5, scope: !2074)
!14959 = !DILocation(line: 3437, column: 30, scope: !2080)
!14960 = !DILocation(line: 3437, column: 42, scope: !2080)
!14961 = !DILocation(line: 3439, column: 48, scope: !2080)
!14962 = !DILocation(line: 3439, column: 55, scope: !2080)
!14963 = !DILocation(line: 3439, column: 29, scope: !2080)
!14964 = !DILocation(line: 3439, column: 28, scope: !2080)
!14965 = !DILocation(line: 3439, column: 12, scope: !2080)
!14966 = !DILocation(line: 3439, column: 5, scope: !2080)
!14967 = !DILocation(line: 3444, column: 33, scope: !2084)
!14968 = !DILocation(line: 3444, column: 45, scope: !2084)
!14969 = !DILocation(line: 3446, column: 48, scope: !2084)
!14970 = !DILocation(line: 3446, column: 55, scope: !2084)
!14971 = !DILocation(line: 3446, column: 29, scope: !2084)
!14972 = !DILocation(line: 3446, column: 28, scope: !2084)
!14973 = !DILocation(line: 3446, column: 12, scope: !2084)
!14974 = !DILocation(line: 3446, column: 5, scope: !2084)
!14975 = !DILocation(line: 3450, column: 35, scope: !2088)
!14976 = !DILocation(line: 3450, column: 47, scope: !2088)
!14977 = !DILocation(line: 3452, column: 49, scope: !2088)
!14978 = !DILocation(line: 3452, column: 56, scope: !2088)
!14979 = !DILocation(line: 3452, column: 30, scope: !2088)
!14980 = !DILocation(line: 3452, column: 64, scope: !2088)
!14981 = !DILocation(line: 3452, column: 93, scope: !2088)
!14982 = !DILocation(line: 3452, column: 100, scope: !2088)
!14983 = !DILocation(line: 3452, column: 74, scope: !2088)
!14984 = !DILocation(line: 3452, column: 108, scope: !2088)
!14985 = !DILocation(line: 3452, column: 71, scope: !2088)
!14986 = !DILocation(line: 3452, column: 135, scope: !2088)
!14987 = !DILocation(line: 3452, column: 142, scope: !2088)
!14988 = !DILocation(line: 3452, column: 116, scope: !2088)
!14989 = !DILocation(line: 3452, column: 114, scope: !2088)
!14990 = !DILocation(line: 3452, column: 28, scope: !2088)
!14991 = !DILocation(line: 3452, column: 12, scope: !2088)
!14992 = !DILocation(line: 3452, column: 5, scope: !2088)
!14993 = !DILocation(line: 3456, column: 30, scope: !2092)
!14994 = !DILocation(line: 3456, column: 42, scope: !2092)
!14995 = !DILocation(line: 3458, column: 5, scope: !2092)
!14996 = !DILocation(line: 3458, column: 15, scope: !2092)
!14997 = !DILocation(line: 3458, column: 53, scope: !2092)
!14998 = !DILocation(line: 3458, column: 26, scope: !2092)
!14999 = !DILocation(line: 3458, column: 61, scope: !2092)
!15000 = !DILocation(line: 3458, column: 24, scope: !2092)
!15001 = !DILocation(line: 3458, column: 74, scope: !15002)
!15002 = !DILexicalBlockFile(scope: !2092, file: !450, discriminator: 1)
!15003 = !DILocation(line: 3458, column: 80, scope: !2092)
!15004 = !DILocation(line: 3458, column: 24, scope: !15005)
!15005 = !DILexicalBlockFile(scope: !2092, file: !450, discriminator: 2)
!15006 = !DILocation(line: 3458, column: 15, scope: !15007)
!15007 = !DILexicalBlockFile(scope: !15008, file: !450, discriminator: 4)
!15008 = !DILexicalBlockFile(scope: !2092, file: !450, discriminator: 3)
!15009 = !DILocation(line: 3459, column: 21, scope: !2092)
!15010 = !DILocation(line: 3459, column: 31, scope: !2092)
!15011 = !DILocation(line: 3459, column: 40, scope: !2092)
!15012 = !DILocation(line: 3460, column: 12, scope: !2092)
!15013 = !DILocation(line: 3461, column: 1, scope: !2092)
!15014 = !DILocation(line: 3460, column: 5, scope: !2092)
!15015 = !DILocation(line: 2970, column: 34, scope: !2121)
!15016 = !DILocation(line: 2970, column: 50, scope: !2121)
!15017 = !DILocation(line: 2972, column: 12, scope: !2121)
!15018 = !DILocation(line: 2972, column: 5, scope: !2121)
!15019 = !DILocation(line: 2976, column: 37, scope: !2137)
!15020 = !DILocation(line: 2976, column: 53, scope: !2137)
!15021 = !DILocation(line: 2978, column: 12, scope: !2137)
!15022 = !DILocation(line: 2978, column: 5, scope: !2137)
!15023 = !DILocation(line: 2982, column: 31, scope: !2141)
!15024 = !DILocation(line: 2982, column: 47, scope: !2141)
!15025 = !DILocation(line: 2984, column: 12, scope: !2141)
!15026 = !DILocation(line: 2984, column: 5, scope: !2141)
!15027 = !DILocation(line: 2995, column: 35, scope: !2145)
!15028 = !DILocation(line: 2995, column: 51, scope: !2145)
!15029 = !DILocation(line: 2997, column: 5, scope: !2145)
!15030 = !DILocation(line: 2997, column: 15, scope: !2145)
!15031 = !DILocation(line: 2998, column: 5, scope: !2145)
!15032 = !DILocation(line: 2998, column: 15, scope: !2145)
!15033 = !DILocation(line: 2998, column: 34, scope: !2145)
!15034 = !DILocation(line: 2999, column: 5, scope: !2145)
!15035 = !DILocation(line: 2999, column: 23, scope: !2145)
!15036 = !DILocation(line: 3001, column: 25, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3001, column: 9)
!15038 = !DILocation(line: 3001, column: 31, scope: !15037)
!15039 = !DILocation(line: 3001, column: 40, scope: !15037)
!15040 = !DILocation(line: 3001, column: 70, scope: !15037)
!15041 = !DILocation(line: 3001, column: 104, scope: !15042)
!15042 = !DILexicalBlockFile(scope: !15037, file: !450, discriminator: 1)
!15043 = !DILocation(line: 3001, column: 110, scope: !15037)
!15044 = !DILocation(line: 3001, column: 73, scope: !15037)
!15045 = !DILocation(line: 3001, column: 9, scope: !2145)
!15046 = !DILocation(line: 3002, column: 25, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15037, file: !450, line: 3001, column: 150)
!15048 = !DILocation(line: 3002, column: 9, scope: !15047)
!15049 = !DILocation(line: 3004, column: 9, scope: !15047)
!15050 = !DILocation(line: 3006, column: 39, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3006, column: 9)
!15052 = !DILocation(line: 3006, column: 12, scope: !15051)
!15053 = !DILocation(line: 3006, column: 45, scope: !15051)
!15054 = !DILocation(line: 3006, column: 10, scope: !15051)
!15055 = !DILocation(line: 3006, column: 83, scope: !15056)
!15056 = !DILexicalBlockFile(scope: !15051, file: !450, discriminator: 1)
!15057 = !DILocation(line: 3006, column: 59, scope: !15051)
!15058 = !DILocation(line: 3006, column: 89, scope: !15051)
!15059 = !DILocation(line: 3006, column: 10, scope: !15060)
!15060 = !DILexicalBlockFile(scope: !15051, file: !450, discriminator: 2)
!15061 = !DILocation(line: 3006, column: 132, scope: !15062)
!15062 = !DILexicalBlockFile(scope: !15063, file: !450, discriminator: 4)
!15063 = !DILexicalBlockFile(scope: !15051, file: !450, discriminator: 3)
!15064 = !DILocation(line: 3006, column: 120, scope: !15051)
!15065 = !DILocation(line: 3006, column: 117, scope: !15051)
!15066 = !DILocation(line: 3006, column: 9, scope: !2145)
!15067 = !DILocation(line: 3007, column: 25, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15051, file: !450, line: 3006, column: 138)
!15069 = !DILocation(line: 3007, column: 9, scope: !15068)
!15070 = !DILocation(line: 3009, column: 9, scope: !15068)
!15071 = !DILocation(line: 3012, column: 30, scope: !2145)
!15072 = !DILocation(line: 3012, column: 11, scope: !2145)
!15073 = !DILocation(line: 3012, column: 9, scope: !2145)
!15074 = !DILocation(line: 3013, column: 9, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3013, column: 9)
!15076 = !DILocation(line: 3013, column: 13, scope: !15075)
!15077 = !DILocation(line: 3013, column: 9, scope: !2145)
!15078 = !DILocation(line: 3014, column: 9, scope: !15075)
!15079 = !DILocation(line: 3015, column: 9, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3015, column: 9)
!15081 = !DILocation(line: 3015, column: 13, scope: !15080)
!15082 = !DILocation(line: 3015, column: 9, scope: !2145)
!15083 = !DILocation(line: 3016, column: 25, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15080, file: !450, line: 3015, column: 35)
!15085 = !DILocation(line: 3016, column: 9, scope: !15084)
!15086 = !DILocation(line: 3018, column: 9, scope: !15084)
!15087 = !DILocation(line: 3021, column: 24, scope: !2145)
!15088 = !DILocation(line: 3021, column: 11, scope: !2145)
!15089 = !DILocation(line: 3021, column: 9, scope: !2145)
!15090 = !DILocation(line: 3022, column: 9, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3022, column: 9)
!15092 = !DILocation(line: 3022, column: 13, scope: !15091)
!15093 = !DILocation(line: 3022, column: 9, scope: !2145)
!15094 = !DILocation(line: 3023, column: 9, scope: !15091)
!15095 = !DILocation(line: 3024, column: 9, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3024, column: 9)
!15097 = !DILocation(line: 3024, column: 13, scope: !15096)
!15098 = !DILocation(line: 3024, column: 9, scope: !2145)
!15099 = !DILocation(line: 3025, column: 25, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15096, file: !450, line: 3024, column: 35)
!15101 = !DILocation(line: 3025, column: 9, scope: !15100)
!15102 = !DILocation(line: 3027, column: 9, scope: !15100)
!15103 = !DILocation(line: 3030, column: 48, scope: !2145)
!15104 = !DILocation(line: 3030, column: 53, scope: !2145)
!15105 = !DILocation(line: 3030, column: 33, scope: !2145)
!15106 = !DILocation(line: 3030, column: 13, scope: !2145)
!15107 = !DILocation(line: 3030, column: 11, scope: !2145)
!15108 = !DILocation(line: 3031, column: 9, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3031, column: 9)
!15110 = !DILocation(line: 3031, column: 15, scope: !15109)
!15111 = !DILocation(line: 3031, column: 9, scope: !2145)
!15112 = !DILocation(line: 3032, column: 9, scope: !15109)
!15113 = !DILocation(line: 3033, column: 60, scope: !2145)
!15114 = !DILocation(line: 3033, column: 37, scope: !2145)
!15115 = !DILocation(line: 3033, column: 64, scope: !2145)
!15116 = !DILocation(line: 3033, column: 14, scope: !2145)
!15117 = !DILocation(line: 3033, column: 12, scope: !2145)
!15118 = !DILocation(line: 3034, column: 9, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3034, column: 9)
!15120 = !DILocation(line: 3034, column: 16, scope: !15119)
!15121 = !DILocation(line: 3034, column: 9, scope: !2145)
!15122 = !DILocation(line: 3035, column: 9, scope: !15119)
!15123 = !DILocation(line: 3037, column: 5, scope: !2145)
!15124 = !DILocation(line: 3037, column: 10, scope: !15125)
!15125 = !DILexicalBlockFile(scope: !2154, file: !450, discriminator: 1)
!15126 = !DILocation(line: 3037, column: 20, scope: !2154)
!15127 = !DILocation(line: 3037, column: 50, scope: !2154)
!15128 = !DILocation(line: 3037, column: 64, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !2154, file: !450, line: 3037, column: 61)
!15130 = !DILocation(line: 3037, column: 81, scope: !15129)
!15131 = !DILocation(line: 3037, column: 61, scope: !15129)
!15132 = !DILocation(line: 3037, column: 91, scope: !15129)
!15133 = !DILocation(line: 3037, column: 61, scope: !2154)
!15134 = !DILocation(line: 3037, column: 61, scope: !15135)
!15135 = !DILexicalBlockFile(scope: !2154, file: !450, discriminator: 2)
!15136 = !DILocation(line: 3037, column: 122, scope: !15137)
!15137 = !DILexicalBlockFile(scope: !15129, file: !450, discriminator: 3)
!15138 = !DILocation(line: 3037, column: 140, scope: !15129)
!15139 = !DILocation(line: 3037, column: 150, scope: !15129)
!15140 = !DILocation(line: 3037, column: 175, scope: !15129)
!15141 = !DILocation(line: 3037, column: 106, scope: !15129)
!15142 = !DILocation(line: 3037, column: 194, scope: !15143)
!15143 = !DILexicalBlockFile(scope: !2145, file: !450, discriminator: 4)
!15144 = !DILocation(line: 3037, column: 194, scope: !2154)
!15145 = !DILocation(line: 3037, column: 194, scope: !15146)
!15146 = !DILexicalBlockFile(scope: !2154, file: !450, discriminator: 5)
!15147 = !DILocation(line: 3038, column: 50, scope: !2145)
!15148 = !DILocation(line: 3038, column: 23, scope: !2145)
!15149 = !DILocation(line: 3038, column: 56, scope: !2145)
!15150 = !DILocation(line: 3038, column: 21, scope: !2145)
!15151 = !DILocation(line: 3038, column: 94, scope: !15152)
!15152 = !DILexicalBlockFile(scope: !2145, file: !450, discriminator: 1)
!15153 = !DILocation(line: 3038, column: 70, scope: !2145)
!15154 = !DILocation(line: 3038, column: 100, scope: !2145)
!15155 = !DILocation(line: 3038, column: 21, scope: !15156)
!15156 = !DILexicalBlockFile(scope: !2145, file: !450, discriminator: 2)
!15157 = !DILocation(line: 3038, column: 129, scope: !15158)
!15158 = !DILexicalBlockFile(scope: !15159, file: !450, discriminator: 4)
!15159 = !DILexicalBlockFile(scope: !2145, file: !450, discriminator: 3)
!15160 = !DILocation(line: 3038, column: 11, scope: !2145)
!15161 = !DILocation(line: 3038, column: 9, scope: !2145)
!15162 = !DILocation(line: 3039, column: 9, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3039, column: 9)
!15164 = !DILocation(line: 3039, column: 13, scope: !15163)
!15165 = !DILocation(line: 3039, column: 9, scope: !2145)
!15166 = !DILocation(line: 3040, column: 9, scope: !15163)
!15167 = !DILocation(line: 3041, column: 9, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !2145, file: !450, line: 3041, column: 9)
!15169 = !DILocation(line: 3041, column: 13, scope: !15168)
!15170 = !DILocation(line: 3041, column: 9, scope: !2145)
!15171 = !DILocation(line: 3042, column: 9, scope: !15168)
!15172 = !DILocation(line: 3043, column: 20, scope: !2157)
!15173 = !DILocation(line: 3043, column: 9, scope: !2157)
!15174 = !DILocation(line: 3043, column: 27, scope: !2157)
!15175 = !DILocation(line: 3043, column: 9, scope: !2145)
!15176 = !DILocation(line: 3044, column: 9, scope: !2156)
!15177 = !DILocation(line: 3044, column: 19, scope: !2156)
!15178 = !DILocation(line: 3044, column: 26, scope: !2156)
!15179 = !DILocation(line: 3045, column: 64, scope: !2156)
!15180 = !DILocation(line: 3045, column: 41, scope: !2156)
!15181 = !DILocation(line: 3046, column: 61, scope: !2156)
!15182 = !DILocation(line: 3046, column: 41, scope: !2156)
!15183 = !DILocation(line: 3045, column: 18, scope: !2156)
!15184 = !DILocation(line: 3045, column: 16, scope: !2156)
!15185 = !DILocation(line: 3047, column: 9, scope: !2156)
!15186 = !DILocation(line: 3047, column: 14, scope: !15187)
!15187 = !DILexicalBlockFile(scope: !2159, file: !450, discriminator: 1)
!15188 = !DILocation(line: 3047, column: 24, scope: !2159)
!15189 = !DILocation(line: 3047, column: 54, scope: !2159)
!15190 = !DILocation(line: 3047, column: 69, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !2159, file: !450, line: 3047, column: 66)
!15192 = !DILocation(line: 3047, column: 86, scope: !15191)
!15193 = !DILocation(line: 3047, column: 66, scope: !15191)
!15194 = !DILocation(line: 3047, column: 96, scope: !15191)
!15195 = !DILocation(line: 3047, column: 66, scope: !2159)
!15196 = !DILocation(line: 3047, column: 66, scope: !15197)
!15197 = !DILexicalBlockFile(scope: !2159, file: !450, discriminator: 2)
!15198 = !DILocation(line: 3047, column: 127, scope: !15199)
!15199 = !DILexicalBlockFile(scope: !15191, file: !450, discriminator: 3)
!15200 = !DILocation(line: 3047, column: 145, scope: !15191)
!15201 = !DILocation(line: 3047, column: 155, scope: !15191)
!15202 = !DILocation(line: 3047, column: 180, scope: !15191)
!15203 = !DILocation(line: 3047, column: 111, scope: !15191)
!15204 = !DILocation(line: 3047, column: 199, scope: !15205)
!15205 = !DILexicalBlockFile(scope: !2156, file: !450, discriminator: 4)
!15206 = !DILocation(line: 3047, column: 199, scope: !2159)
!15207 = !DILocation(line: 3047, column: 199, scope: !15208)
!15208 = !DILexicalBlockFile(scope: !2159, file: !450, discriminator: 5)
!15209 = !DILocation(line: 3048, column: 13, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !2156, file: !450, line: 3048, column: 13)
!15211 = !DILocation(line: 3048, column: 20, scope: !15210)
!15212 = !DILocation(line: 3048, column: 13, scope: !2156)
!15213 = !DILocation(line: 3049, column: 13, scope: !15210)
!15214 = !DILocation(line: 3050, column: 5, scope: !2157)
!15215 = !DILocation(line: 3050, column: 5, scope: !15216)
!15216 = !DILexicalBlockFile(scope: !2157, file: !450, discriminator: 1)
!15217 = !DILocation(line: 3050, column: 5, scope: !2156)
!15218 = !DILocation(line: 3051, column: 5, scope: !2145)
!15219 = !DILocation(line: 3051, column: 10, scope: !15220)
!15220 = !DILexicalBlockFile(scope: !2161, file: !450, discriminator: 1)
!15221 = !DILocation(line: 3051, column: 20, scope: !2161)
!15222 = !DILocation(line: 3051, column: 50, scope: !2161)
!15223 = !DILocation(line: 3051, column: 37, scope: !2161)
!15224 = !DILocation(line: 3051, column: 66, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !2161, file: !450, line: 3051, column: 63)
!15226 = !DILocation(line: 3051, column: 83, scope: !15225)
!15227 = !DILocation(line: 3051, column: 63, scope: !15225)
!15228 = !DILocation(line: 3051, column: 93, scope: !15225)
!15229 = !DILocation(line: 3051, column: 63, scope: !2161)
!15230 = !DILocation(line: 3051, column: 63, scope: !15231)
!15231 = !DILexicalBlockFile(scope: !2161, file: !450, discriminator: 2)
!15232 = !DILocation(line: 3051, column: 124, scope: !15233)
!15233 = !DILexicalBlockFile(scope: !15225, file: !450, discriminator: 3)
!15234 = !DILocation(line: 3051, column: 142, scope: !15225)
!15235 = !DILocation(line: 3051, column: 152, scope: !15225)
!15236 = !DILocation(line: 3051, column: 177, scope: !15225)
!15237 = !DILocation(line: 3051, column: 108, scope: !15225)
!15238 = !DILocation(line: 3051, column: 196, scope: !15143)
!15239 = !DILocation(line: 3051, column: 196, scope: !2161)
!15240 = !DILocation(line: 3051, column: 196, scope: !15241)
!15241 = !DILexicalBlockFile(scope: !2161, file: !450, discriminator: 5)
!15242 = !DILocation(line: 3052, column: 5, scope: !2145)
!15243 = !DILocation(line: 3052, column: 10, scope: !15244)
!15244 = !DILexicalBlockFile(scope: !2163, file: !450, discriminator: 1)
!15245 = !DILocation(line: 3052, column: 20, scope: !2163)
!15246 = !DILocation(line: 3052, column: 50, scope: !2163)
!15247 = !DILocation(line: 3052, column: 64, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !2163, file: !450, line: 3052, column: 61)
!15249 = !DILocation(line: 3052, column: 81, scope: !15248)
!15250 = !DILocation(line: 3052, column: 61, scope: !15248)
!15251 = !DILocation(line: 3052, column: 91, scope: !15248)
!15252 = !DILocation(line: 3052, column: 61, scope: !2163)
!15253 = !DILocation(line: 3052, column: 61, scope: !15254)
!15254 = !DILexicalBlockFile(scope: !2163, file: !450, discriminator: 2)
!15255 = !DILocation(line: 3052, column: 122, scope: !15256)
!15256 = !DILexicalBlockFile(scope: !15248, file: !450, discriminator: 3)
!15257 = !DILocation(line: 3052, column: 140, scope: !15248)
!15258 = !DILocation(line: 3052, column: 150, scope: !15248)
!15259 = !DILocation(line: 3052, column: 175, scope: !15248)
!15260 = !DILocation(line: 3052, column: 106, scope: !15248)
!15261 = !DILocation(line: 3052, column: 194, scope: !15143)
!15262 = !DILocation(line: 3052, column: 194, scope: !2163)
!15263 = !DILocation(line: 3052, column: 194, scope: !15264)
!15264 = !DILexicalBlockFile(scope: !2163, file: !450, discriminator: 5)
!15265 = !DILocation(line: 3053, column: 5, scope: !2145)
!15266 = !DILocation(line: 3053, column: 10, scope: !15267)
!15267 = !DILexicalBlockFile(scope: !2165, file: !450, discriminator: 1)
!15268 = !DILocation(line: 3053, column: 20, scope: !2165)
!15269 = !DILocation(line: 3053, column: 50, scope: !2165)
!15270 = !DILocation(line: 3053, column: 64, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !2165, file: !450, line: 3053, column: 61)
!15272 = !DILocation(line: 3053, column: 81, scope: !15271)
!15273 = !DILocation(line: 3053, column: 61, scope: !15271)
!15274 = !DILocation(line: 3053, column: 91, scope: !15271)
!15275 = !DILocation(line: 3053, column: 61, scope: !2165)
!15276 = !DILocation(line: 3053, column: 61, scope: !15277)
!15277 = !DILexicalBlockFile(scope: !2165, file: !450, discriminator: 2)
!15278 = !DILocation(line: 3053, column: 122, scope: !15279)
!15279 = !DILexicalBlockFile(scope: !15271, file: !450, discriminator: 3)
!15280 = !DILocation(line: 3053, column: 140, scope: !15271)
!15281 = !DILocation(line: 3053, column: 150, scope: !15271)
!15282 = !DILocation(line: 3053, column: 175, scope: !15271)
!15283 = !DILocation(line: 3053, column: 106, scope: !15271)
!15284 = !DILocation(line: 3053, column: 194, scope: !15143)
!15285 = !DILocation(line: 3053, column: 194, scope: !2165)
!15286 = !DILocation(line: 3053, column: 194, scope: !15287)
!15287 = !DILexicalBlockFile(scope: !2165, file: !450, discriminator: 5)
!15288 = !DILocation(line: 3054, column: 12, scope: !2145)
!15289 = !DILocation(line: 3054, column: 5, scope: !2145)
!15290 = !DILocation(line: 3057, column: 21, scope: !2145)
!15291 = !DILocation(line: 3057, column: 5, scope: !2145)
!15292 = !DILocation(line: 3062, column: 5, scope: !2145)
!15293 = !DILocation(line: 3062, column: 10, scope: !15294)
!15294 = !DILexicalBlockFile(scope: !2167, file: !450, discriminator: 1)
!15295 = !DILocation(line: 3062, column: 20, scope: !2167)
!15296 = !DILocation(line: 3062, column: 51, scope: !2167)
!15297 = !DILocation(line: 3062, column: 61, scope: !2170)
!15298 = !DILocation(line: 3062, column: 77, scope: !2170)
!15299 = !DILocation(line: 3062, column: 61, scope: !2167)
!15300 = !DILocation(line: 3062, column: 92, scope: !15301)
!15301 = !DILexicalBlockFile(scope: !2170, file: !450, discriminator: 2)
!15302 = !DILocation(line: 3062, column: 97, scope: !15303)
!15303 = !DILexicalBlockFile(scope: !2169, file: !450, discriminator: 4)
!15304 = !DILocation(line: 3062, column: 107, scope: !2169)
!15305 = !DILocation(line: 3062, column: 137, scope: !2169)
!15306 = !DILocation(line: 3062, column: 163, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !2169, file: !450, line: 3062, column: 160)
!15308 = !DILocation(line: 3062, column: 180, scope: !15307)
!15309 = !DILocation(line: 3062, column: 160, scope: !15307)
!15310 = !DILocation(line: 3062, column: 190, scope: !15307)
!15311 = !DILocation(line: 3062, column: 160, scope: !2169)
!15312 = !DILocation(line: 3062, column: 160, scope: !15313)
!15313 = !DILexicalBlockFile(scope: !2169, file: !450, discriminator: 5)
!15314 = !DILocation(line: 3062, column: 221, scope: !15315)
!15315 = !DILexicalBlockFile(scope: !15307, file: !450, discriminator: 6)
!15316 = !DILocation(line: 3062, column: 239, scope: !15307)
!15317 = !DILocation(line: 3062, column: 249, scope: !15307)
!15318 = !DILocation(line: 3062, column: 274, scope: !15307)
!15319 = !DILocation(line: 3062, column: 205, scope: !15307)
!15320 = !DILocation(line: 3062, column: 293, scope: !15321)
!15321 = !DILexicalBlockFile(scope: !2170, file: !450, discriminator: 7)
!15322 = !DILocation(line: 3062, column: 293, scope: !2169)
!15323 = !DILocation(line: 3062, column: 293, scope: !15324)
!15324 = !DILexicalBlockFile(scope: !2169, file: !450, discriminator: 8)
!15325 = !DILocation(line: 3062, column: 293, scope: !15326)
!15326 = !DILexicalBlockFile(scope: !2169, file: !450, discriminator: 9)
!15327 = !DILocation(line: 3062, column: 306, scope: !15328)
!15328 = !DILexicalBlockFile(scope: !15159, file: !450, discriminator: 10)
!15329 = !DILocation(line: 3062, column: 306, scope: !2167)
!15330 = !DILocation(line: 3062, column: 306, scope: !15331)
!15331 = !DILexicalBlockFile(scope: !2167, file: !450, discriminator: 11)
!15332 = !DILocation(line: 3063, column: 5, scope: !2145)
!15333 = !DILocation(line: 3063, column: 10, scope: !15334)
!15334 = !DILexicalBlockFile(scope: !2172, file: !450, discriminator: 1)
!15335 = !DILocation(line: 3063, column: 20, scope: !2172)
!15336 = !DILocation(line: 3063, column: 51, scope: !2172)
!15337 = !DILocation(line: 3063, column: 61, scope: !2175)
!15338 = !DILocation(line: 3063, column: 77, scope: !2175)
!15339 = !DILocation(line: 3063, column: 61, scope: !2172)
!15340 = !DILocation(line: 3063, column: 92, scope: !15341)
!15341 = !DILexicalBlockFile(scope: !2175, file: !450, discriminator: 2)
!15342 = !DILocation(line: 3063, column: 97, scope: !15343)
!15343 = !DILexicalBlockFile(scope: !2174, file: !450, discriminator: 4)
!15344 = !DILocation(line: 3063, column: 107, scope: !2174)
!15345 = !DILocation(line: 3063, column: 137, scope: !2174)
!15346 = !DILocation(line: 3063, column: 163, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !2174, file: !450, line: 3063, column: 160)
!15348 = !DILocation(line: 3063, column: 180, scope: !15347)
!15349 = !DILocation(line: 3063, column: 160, scope: !15347)
!15350 = !DILocation(line: 3063, column: 190, scope: !15347)
!15351 = !DILocation(line: 3063, column: 160, scope: !2174)
!15352 = !DILocation(line: 3063, column: 160, scope: !15353)
!15353 = !DILexicalBlockFile(scope: !2174, file: !450, discriminator: 5)
!15354 = !DILocation(line: 3063, column: 221, scope: !15355)
!15355 = !DILexicalBlockFile(scope: !15347, file: !450, discriminator: 6)
!15356 = !DILocation(line: 3063, column: 239, scope: !15347)
!15357 = !DILocation(line: 3063, column: 249, scope: !15347)
!15358 = !DILocation(line: 3063, column: 274, scope: !15347)
!15359 = !DILocation(line: 3063, column: 205, scope: !15347)
!15360 = !DILocation(line: 3063, column: 293, scope: !15361)
!15361 = !DILexicalBlockFile(scope: !2175, file: !450, discriminator: 7)
!15362 = !DILocation(line: 3063, column: 293, scope: !2174)
!15363 = !DILocation(line: 3063, column: 293, scope: !15364)
!15364 = !DILexicalBlockFile(scope: !2174, file: !450, discriminator: 8)
!15365 = !DILocation(line: 3063, column: 293, scope: !15366)
!15366 = !DILexicalBlockFile(scope: !2174, file: !450, discriminator: 9)
!15367 = !DILocation(line: 3063, column: 306, scope: !15328)
!15368 = !DILocation(line: 3063, column: 306, scope: !2172)
!15369 = !DILocation(line: 3063, column: 306, scope: !15370)
!15370 = !DILexicalBlockFile(scope: !2172, file: !450, discriminator: 11)
!15371 = !DILocation(line: 3064, column: 5, scope: !2145)
!15372 = !DILocation(line: 3064, column: 10, scope: !15373)
!15373 = !DILexicalBlockFile(scope: !2177, file: !450, discriminator: 1)
!15374 = !DILocation(line: 3064, column: 20, scope: !2177)
!15375 = !DILocation(line: 3064, column: 51, scope: !2177)
!15376 = !DILocation(line: 3064, column: 38, scope: !2177)
!15377 = !DILocation(line: 3064, column: 63, scope: !2180)
!15378 = !DILocation(line: 3064, column: 79, scope: !2180)
!15379 = !DILocation(line: 3064, column: 63, scope: !2177)
!15380 = !DILocation(line: 3064, column: 94, scope: !15381)
!15381 = !DILexicalBlockFile(scope: !2180, file: !450, discriminator: 2)
!15382 = !DILocation(line: 3064, column: 99, scope: !15383)
!15383 = !DILexicalBlockFile(scope: !2179, file: !450, discriminator: 4)
!15384 = !DILocation(line: 3064, column: 109, scope: !2179)
!15385 = !DILocation(line: 3064, column: 139, scope: !2179)
!15386 = !DILocation(line: 3064, column: 165, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !2179, file: !450, line: 3064, column: 162)
!15388 = !DILocation(line: 3064, column: 182, scope: !15387)
!15389 = !DILocation(line: 3064, column: 162, scope: !15387)
!15390 = !DILocation(line: 3064, column: 192, scope: !15387)
!15391 = !DILocation(line: 3064, column: 162, scope: !2179)
!15392 = !DILocation(line: 3064, column: 162, scope: !15393)
!15393 = !DILexicalBlockFile(scope: !2179, file: !450, discriminator: 5)
!15394 = !DILocation(line: 3064, column: 223, scope: !15395)
!15395 = !DILexicalBlockFile(scope: !15387, file: !450, discriminator: 6)
!15396 = !DILocation(line: 3064, column: 241, scope: !15387)
!15397 = !DILocation(line: 3064, column: 251, scope: !15387)
!15398 = !DILocation(line: 3064, column: 276, scope: !15387)
!15399 = !DILocation(line: 3064, column: 207, scope: !15387)
!15400 = !DILocation(line: 3064, column: 295, scope: !15401)
!15401 = !DILexicalBlockFile(scope: !2180, file: !450, discriminator: 7)
!15402 = !DILocation(line: 3064, column: 295, scope: !2179)
!15403 = !DILocation(line: 3064, column: 295, scope: !15404)
!15404 = !DILexicalBlockFile(scope: !2179, file: !450, discriminator: 8)
!15405 = !DILocation(line: 3064, column: 295, scope: !15406)
!15406 = !DILexicalBlockFile(scope: !2179, file: !450, discriminator: 9)
!15407 = !DILocation(line: 3064, column: 308, scope: !15328)
!15408 = !DILocation(line: 3064, column: 308, scope: !2177)
!15409 = !DILocation(line: 3064, column: 308, scope: !15410)
!15410 = !DILexicalBlockFile(scope: !2177, file: !450, discriminator: 11)
!15411 = !DILocation(line: 3065, column: 5, scope: !2145)
!15412 = !DILocation(line: 3065, column: 10, scope: !15413)
!15413 = !DILexicalBlockFile(scope: !2182, file: !450, discriminator: 1)
!15414 = !DILocation(line: 3065, column: 20, scope: !2182)
!15415 = !DILocation(line: 3065, column: 51, scope: !2182)
!15416 = !DILocation(line: 3065, column: 64, scope: !2185)
!15417 = !DILocation(line: 3065, column: 80, scope: !2185)
!15418 = !DILocation(line: 3065, column: 64, scope: !2182)
!15419 = !DILocation(line: 3065, column: 95, scope: !15420)
!15420 = !DILexicalBlockFile(scope: !2185, file: !450, discriminator: 2)
!15421 = !DILocation(line: 3065, column: 100, scope: !15422)
!15422 = !DILexicalBlockFile(scope: !2184, file: !450, discriminator: 4)
!15423 = !DILocation(line: 3065, column: 110, scope: !2184)
!15424 = !DILocation(line: 3065, column: 140, scope: !2184)
!15425 = !DILocation(line: 3065, column: 166, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !2184, file: !450, line: 3065, column: 163)
!15427 = !DILocation(line: 3065, column: 183, scope: !15426)
!15428 = !DILocation(line: 3065, column: 163, scope: !15426)
!15429 = !DILocation(line: 3065, column: 193, scope: !15426)
!15430 = !DILocation(line: 3065, column: 163, scope: !2184)
!15431 = !DILocation(line: 3065, column: 163, scope: !15432)
!15432 = !DILexicalBlockFile(scope: !2184, file: !450, discriminator: 5)
!15433 = !DILocation(line: 3065, column: 224, scope: !15434)
!15434 = !DILexicalBlockFile(scope: !15426, file: !450, discriminator: 6)
!15435 = !DILocation(line: 3065, column: 242, scope: !15426)
!15436 = !DILocation(line: 3065, column: 252, scope: !15426)
!15437 = !DILocation(line: 3065, column: 277, scope: !15426)
!15438 = !DILocation(line: 3065, column: 208, scope: !15426)
!15439 = !DILocation(line: 3065, column: 296, scope: !15440)
!15440 = !DILexicalBlockFile(scope: !2185, file: !450, discriminator: 7)
!15441 = !DILocation(line: 3065, column: 296, scope: !2184)
!15442 = !DILocation(line: 3065, column: 296, scope: !15443)
!15443 = !DILexicalBlockFile(scope: !2184, file: !450, discriminator: 8)
!15444 = !DILocation(line: 3065, column: 296, scope: !15445)
!15445 = !DILexicalBlockFile(scope: !2184, file: !450, discriminator: 9)
!15446 = !DILocation(line: 3065, column: 309, scope: !15328)
!15447 = !DILocation(line: 3065, column: 309, scope: !2182)
!15448 = !DILocation(line: 3065, column: 309, scope: !15449)
!15449 = !DILexicalBlockFile(scope: !2182, file: !450, discriminator: 11)
!15450 = !DILocation(line: 3066, column: 5, scope: !2145)
!15451 = !DILocation(line: 3067, column: 1, scope: !2145)
!15452 = !DILocation(line: 3075, column: 25, scope: !2186)
!15453 = !DILocation(line: 3077, column: 5, scope: !2186)
!15454 = !DILocation(line: 3077, column: 15, scope: !2186)
!15455 = !DILocation(line: 3077, column: 22, scope: !2186)
!15456 = !DILocation(line: 3077, column: 30, scope: !2186)
!15457 = !DILocation(line: 3078, column: 5, scope: !2186)
!15458 = !DILocation(line: 3078, column: 15, scope: !2186)
!15459 = !DILocation(line: 3078, column: 29, scope: !2186)
!15460 = !DILocation(line: 3082, column: 11, scope: !2186)
!15461 = !DILocation(line: 3082, column: 9, scope: !2186)
!15462 = !DILocation(line: 3083, column: 9, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !2186, file: !450, line: 3083, column: 9)
!15464 = !DILocation(line: 3083, column: 13, scope: !15463)
!15465 = !DILocation(line: 3083, column: 9, scope: !2186)
!15466 = !DILocation(line: 3084, column: 9, scope: !15463)
!15467 = !DILocation(line: 3086, column: 39, scope: !2186)
!15468 = !DILocation(line: 3086, column: 19, scope: !2186)
!15469 = !DILocation(line: 3086, column: 17, scope: !2186)
!15470 = !DILocation(line: 3087, column: 9, scope: !2197)
!15471 = !DILocation(line: 3087, column: 21, scope: !2197)
!15472 = !DILocation(line: 3087, column: 9, scope: !2186)
!15473 = !DILocation(line: 3088, column: 36, scope: !2196)
!15474 = !DILocation(line: 3088, column: 49, scope: !2196)
!15475 = !DILocation(line: 3088, column: 16, scope: !2196)
!15476 = !DILocation(line: 3088, column: 14, scope: !2196)
!15477 = !DILocation(line: 3089, column: 9, scope: !2196)
!15478 = !DILocation(line: 3089, column: 14, scope: !15479)
!15479 = !DILexicalBlockFile(scope: !2195, file: !450, discriminator: 1)
!15480 = !DILocation(line: 3089, column: 24, scope: !2195)
!15481 = !DILocation(line: 3089, column: 54, scope: !2195)
!15482 = !DILocation(line: 3089, column: 76, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !2195, file: !450, line: 3089, column: 73)
!15484 = !DILocation(line: 3089, column: 93, scope: !15483)
!15485 = !DILocation(line: 3089, column: 73, scope: !15483)
!15486 = !DILocation(line: 3089, column: 103, scope: !15483)
!15487 = !DILocation(line: 3089, column: 73, scope: !2195)
!15488 = !DILocation(line: 3089, column: 73, scope: !15489)
!15489 = !DILexicalBlockFile(scope: !2195, file: !450, discriminator: 2)
!15490 = !DILocation(line: 3089, column: 134, scope: !15491)
!15491 = !DILexicalBlockFile(scope: !15483, file: !450, discriminator: 3)
!15492 = !DILocation(line: 3089, column: 152, scope: !15483)
!15493 = !DILocation(line: 3089, column: 162, scope: !15483)
!15494 = !DILocation(line: 3089, column: 187, scope: !15483)
!15495 = !DILocation(line: 3089, column: 118, scope: !15483)
!15496 = !DILocation(line: 3089, column: 206, scope: !15497)
!15497 = !DILexicalBlockFile(scope: !2196, file: !450, discriminator: 4)
!15498 = !DILocation(line: 3089, column: 206, scope: !2195)
!15499 = !DILocation(line: 3089, column: 206, scope: !15500)
!15500 = !DILexicalBlockFile(scope: !2195, file: !450, discriminator: 5)
!15501 = !DILocation(line: 3090, column: 13, scope: !2201)
!15502 = !DILocation(line: 3090, column: 18, scope: !2201)
!15503 = !DILocation(line: 3090, column: 13, scope: !2196)
!15504 = !DILocation(line: 3091, column: 13, scope: !2200)
!15505 = !DILocation(line: 3091, column: 18, scope: !15506)
!15506 = !DILexicalBlockFile(scope: !2199, file: !450, discriminator: 1)
!15507 = !DILocation(line: 3091, column: 28, scope: !2199)
!15508 = !DILocation(line: 3091, column: 58, scope: !2199)
!15509 = !DILocation(line: 3091, column: 72, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !2199, file: !450, line: 3091, column: 69)
!15511 = !DILocation(line: 3091, column: 89, scope: !15510)
!15512 = !DILocation(line: 3091, column: 69, scope: !15510)
!15513 = !DILocation(line: 3091, column: 99, scope: !15510)
!15514 = !DILocation(line: 3091, column: 69, scope: !2199)
!15515 = !DILocation(line: 3091, column: 69, scope: !15516)
!15516 = !DILexicalBlockFile(scope: !2199, file: !450, discriminator: 2)
!15517 = !DILocation(line: 3091, column: 130, scope: !15518)
!15518 = !DILexicalBlockFile(scope: !15510, file: !450, discriminator: 3)
!15519 = !DILocation(line: 3091, column: 148, scope: !15510)
!15520 = !DILocation(line: 3091, column: 158, scope: !15510)
!15521 = !DILocation(line: 3091, column: 183, scope: !15510)
!15522 = !DILocation(line: 3091, column: 114, scope: !15510)
!15523 = !DILocation(line: 3091, column: 202, scope: !15524)
!15524 = !DILexicalBlockFile(scope: !2200, file: !450, discriminator: 4)
!15525 = !DILocation(line: 3091, column: 202, scope: !2199)
!15526 = !DILocation(line: 3091, column: 202, scope: !15527)
!15527 = !DILexicalBlockFile(scope: !2199, file: !450, discriminator: 5)
!15528 = !DILocation(line: 3092, column: 13, scope: !2200)
!15529 = !DILocation(line: 3094, column: 5, scope: !2196)
!15530 = !DILocation(line: 3096, column: 9, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !2197, file: !450, line: 3095, column: 10)
!15532 = !DILocation(line: 3097, column: 16, scope: !15531)
!15533 = !DILocation(line: 3097, column: 14, scope: !15531)
!15534 = !DILocation(line: 3098, column: 25, scope: !15531)
!15535 = !DILocation(line: 3098, column: 33, scope: !15531)
!15536 = !DILocation(line: 3098, column: 42, scope: !15531)
!15537 = !DILocation(line: 3101, column: 36, scope: !2186)
!15538 = !DILocation(line: 3101, column: 16, scope: !2186)
!15539 = !DILocation(line: 3101, column: 14, scope: !2186)
!15540 = !DILocation(line: 3102, column: 9, scope: !2205)
!15541 = !DILocation(line: 3102, column: 18, scope: !2205)
!15542 = !DILocation(line: 3102, column: 9, scope: !2186)
!15543 = !DILocation(line: 3103, column: 37, scope: !2204)
!15544 = !DILocation(line: 3103, column: 47, scope: !2204)
!15545 = !DILocation(line: 3103, column: 17, scope: !2204)
!15546 = !DILocation(line: 3103, column: 15, scope: !2204)
!15547 = !DILocation(line: 3104, column: 9, scope: !2204)
!15548 = !DILocation(line: 3104, column: 14, scope: !15549)
!15549 = !DILexicalBlockFile(scope: !2203, file: !450, discriminator: 1)
!15550 = !DILocation(line: 3104, column: 24, scope: !2203)
!15551 = !DILocation(line: 3104, column: 54, scope: !2203)
!15552 = !DILocation(line: 3104, column: 73, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !2203, file: !450, line: 3104, column: 70)
!15554 = !DILocation(line: 3104, column: 90, scope: !15553)
!15555 = !DILocation(line: 3104, column: 70, scope: !15553)
!15556 = !DILocation(line: 3104, column: 100, scope: !15553)
!15557 = !DILocation(line: 3104, column: 70, scope: !2203)
!15558 = !DILocation(line: 3104, column: 70, scope: !15559)
!15559 = !DILexicalBlockFile(scope: !2203, file: !450, discriminator: 2)
!15560 = !DILocation(line: 3104, column: 131, scope: !15561)
!15561 = !DILexicalBlockFile(scope: !15553, file: !450, discriminator: 3)
!15562 = !DILocation(line: 3104, column: 149, scope: !15553)
!15563 = !DILocation(line: 3104, column: 159, scope: !15553)
!15564 = !DILocation(line: 3104, column: 184, scope: !15553)
!15565 = !DILocation(line: 3104, column: 115, scope: !15553)
!15566 = !DILocation(line: 3104, column: 203, scope: !15567)
!15567 = !DILexicalBlockFile(scope: !2204, file: !450, discriminator: 4)
!15568 = !DILocation(line: 3104, column: 203, scope: !2203)
!15569 = !DILocation(line: 3104, column: 203, scope: !15570)
!15570 = !DILexicalBlockFile(scope: !2203, file: !450, discriminator: 5)
!15571 = !DILocation(line: 3105, column: 13, scope: !2209)
!15572 = !DILocation(line: 3105, column: 19, scope: !2209)
!15573 = !DILocation(line: 3105, column: 13, scope: !2204)
!15574 = !DILocation(line: 3106, column: 13, scope: !2208)
!15575 = !DILocation(line: 3106, column: 18, scope: !15576)
!15576 = !DILexicalBlockFile(scope: !2207, file: !450, discriminator: 1)
!15577 = !DILocation(line: 3106, column: 28, scope: !2207)
!15578 = !DILocation(line: 3106, column: 58, scope: !2207)
!15579 = !DILocation(line: 3106, column: 73, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !2207, file: !450, line: 3106, column: 70)
!15581 = !DILocation(line: 3106, column: 90, scope: !15580)
!15582 = !DILocation(line: 3106, column: 70, scope: !15580)
!15583 = !DILocation(line: 3106, column: 100, scope: !15580)
!15584 = !DILocation(line: 3106, column: 70, scope: !2207)
!15585 = !DILocation(line: 3106, column: 70, scope: !15586)
!15586 = !DILexicalBlockFile(scope: !2207, file: !450, discriminator: 2)
!15587 = !DILocation(line: 3106, column: 131, scope: !15588)
!15588 = !DILexicalBlockFile(scope: !15580, file: !450, discriminator: 3)
!15589 = !DILocation(line: 3106, column: 149, scope: !15580)
!15590 = !DILocation(line: 3106, column: 159, scope: !15580)
!15591 = !DILocation(line: 3106, column: 184, scope: !15580)
!15592 = !DILocation(line: 3106, column: 115, scope: !15580)
!15593 = !DILocation(line: 3106, column: 203, scope: !15594)
!15594 = !DILexicalBlockFile(scope: !2208, file: !450, discriminator: 4)
!15595 = !DILocation(line: 3106, column: 203, scope: !2207)
!15596 = !DILocation(line: 3106, column: 203, scope: !15597)
!15597 = !DILexicalBlockFile(scope: !2207, file: !450, discriminator: 5)
!15598 = !DILocation(line: 3107, column: 13, scope: !2208)
!15599 = !DILocation(line: 3107, column: 18, scope: !15600)
!15600 = !DILexicalBlockFile(scope: !2211, file: !450, discriminator: 1)
!15601 = !DILocation(line: 3107, column: 28, scope: !2211)
!15602 = !DILocation(line: 3107, column: 58, scope: !2211)
!15603 = !DILocation(line: 3107, column: 72, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !2211, file: !450, line: 3107, column: 69)
!15605 = !DILocation(line: 3107, column: 89, scope: !15604)
!15606 = !DILocation(line: 3107, column: 69, scope: !15604)
!15607 = !DILocation(line: 3107, column: 99, scope: !15604)
!15608 = !DILocation(line: 3107, column: 69, scope: !2211)
!15609 = !DILocation(line: 3107, column: 69, scope: !15610)
!15610 = !DILexicalBlockFile(scope: !2211, file: !450, discriminator: 2)
!15611 = !DILocation(line: 3107, column: 130, scope: !15612)
!15612 = !DILexicalBlockFile(scope: !15604, file: !450, discriminator: 3)
!15613 = !DILocation(line: 3107, column: 148, scope: !15604)
!15614 = !DILocation(line: 3107, column: 158, scope: !15604)
!15615 = !DILocation(line: 3107, column: 183, scope: !15604)
!15616 = !DILocation(line: 3107, column: 114, scope: !15604)
!15617 = !DILocation(line: 3107, column: 202, scope: !15594)
!15618 = !DILocation(line: 3107, column: 202, scope: !2211)
!15619 = !DILocation(line: 3107, column: 202, scope: !15620)
!15620 = !DILexicalBlockFile(scope: !2211, file: !450, discriminator: 5)
!15621 = !DILocation(line: 3108, column: 13, scope: !2208)
!15622 = !DILocation(line: 3110, column: 5, scope: !2204)
!15623 = !DILocation(line: 3112, column: 9, scope: !2213)
!15624 = !DILocation(line: 3112, column: 20, scope: !2213)
!15625 = !DILocation(line: 3113, column: 9, scope: !2213)
!15626 = !DILocation(line: 3114, column: 15, scope: !2213)
!15627 = !DILocation(line: 3115, column: 40, scope: !2213)
!15628 = !DILocation(line: 3115, column: 19, scope: !2213)
!15629 = !DILocation(line: 3115, column: 17, scope: !2213)
!15630 = !DILocation(line: 3116, column: 13, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !2213, file: !450, line: 3116, column: 13)
!15632 = !DILocation(line: 3116, column: 21, scope: !15631)
!15633 = !DILocation(line: 3116, column: 25, scope: !15634)
!15634 = !DILexicalBlockFile(scope: !15631, file: !450, discriminator: 1)
!15635 = !DILocation(line: 3116, column: 24, scope: !15631)
!15636 = !DILocation(line: 3116, column: 33, scope: !15631)
!15637 = !DILocation(line: 3116, column: 49, scope: !15638)
!15638 = !DILexicalBlockFile(scope: !15631, file: !450, discriminator: 2)
!15639 = !DILocation(line: 3116, column: 48, scope: !15631)
!15640 = !DILocation(line: 3116, column: 36, scope: !15631)
!15641 = !DILocation(line: 3116, column: 13, scope: !2213)
!15642 = !DILocation(line: 3117, column: 22, scope: !15631)
!15643 = !DILocation(line: 3117, column: 21, scope: !15631)
!15644 = !DILocation(line: 3117, column: 19, scope: !15631)
!15645 = !DILocation(line: 3117, column: 13, scope: !15631)
!15646 = !DILocation(line: 3118, column: 25, scope: !2213)
!15647 = !DILocation(line: 3118, column: 34, scope: !2213)
!15648 = !DILocation(line: 3118, column: 43, scope: !2213)
!15649 = !DILocation(line: 3119, column: 5, scope: !2205)
!15650 = !DILocation(line: 3121, column: 5, scope: !2186)
!15651 = !DILocation(line: 3121, column: 10, scope: !15652)
!15652 = !DILexicalBlockFile(scope: !2216, file: !450, discriminator: 1)
!15653 = !DILocation(line: 3121, column: 20, scope: !2216)
!15654 = !DILocation(line: 3121, column: 50, scope: !2216)
!15655 = !DILocation(line: 3121, column: 64, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !2216, file: !450, line: 3121, column: 61)
!15657 = !DILocation(line: 3121, column: 81, scope: !15656)
!15658 = !DILocation(line: 3121, column: 61, scope: !15656)
!15659 = !DILocation(line: 3121, column: 91, scope: !15656)
!15660 = !DILocation(line: 3121, column: 61, scope: !2216)
!15661 = !DILocation(line: 3121, column: 61, scope: !15662)
!15662 = !DILexicalBlockFile(scope: !2216, file: !450, discriminator: 2)
!15663 = !DILocation(line: 3121, column: 122, scope: !15664)
!15664 = !DILexicalBlockFile(scope: !15656, file: !450, discriminator: 3)
!15665 = !DILocation(line: 3121, column: 140, scope: !15656)
!15666 = !DILocation(line: 3121, column: 150, scope: !15656)
!15667 = !DILocation(line: 3121, column: 175, scope: !15656)
!15668 = !DILocation(line: 3121, column: 106, scope: !15656)
!15669 = !DILocation(line: 3121, column: 194, scope: !15670)
!15670 = !DILexicalBlockFile(scope: !2186, file: !450, discriminator: 4)
!15671 = !DILocation(line: 3121, column: 194, scope: !2216)
!15672 = !DILocation(line: 3121, column: 194, scope: !15673)
!15673 = !DILexicalBlockFile(scope: !2216, file: !450, discriminator: 5)
!15674 = !DILocation(line: 3123, column: 9, scope: !2220)
!15675 = !DILocation(line: 3123, column: 15, scope: !2220)
!15676 = !DILocation(line: 3123, column: 9, scope: !2186)
!15677 = !DILocation(line: 3124, column: 9, scope: !2219)
!15678 = !DILocation(line: 3124, column: 14, scope: !15679)
!15679 = !DILexicalBlockFile(scope: !2218, file: !450, discriminator: 1)
!15680 = !DILocation(line: 3124, column: 24, scope: !2218)
!15681 = !DILocation(line: 3124, column: 54, scope: !2218)
!15682 = !DILocation(line: 3124, column: 70, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !2218, file: !450, line: 3124, column: 67)
!15684 = !DILocation(line: 3124, column: 87, scope: !15683)
!15685 = !DILocation(line: 3124, column: 67, scope: !15683)
!15686 = !DILocation(line: 3124, column: 97, scope: !15683)
!15687 = !DILocation(line: 3124, column: 67, scope: !2218)
!15688 = !DILocation(line: 3124, column: 67, scope: !15689)
!15689 = !DILexicalBlockFile(scope: !2218, file: !450, discriminator: 2)
!15690 = !DILocation(line: 3124, column: 128, scope: !15691)
!15691 = !DILexicalBlockFile(scope: !15683, file: !450, discriminator: 3)
!15692 = !DILocation(line: 3124, column: 146, scope: !15683)
!15693 = !DILocation(line: 3124, column: 156, scope: !15683)
!15694 = !DILocation(line: 3124, column: 181, scope: !15683)
!15695 = !DILocation(line: 3124, column: 112, scope: !15683)
!15696 = !DILocation(line: 3124, column: 200, scope: !15697)
!15697 = !DILexicalBlockFile(scope: !2219, file: !450, discriminator: 4)
!15698 = !DILocation(line: 3124, column: 200, scope: !2218)
!15699 = !DILocation(line: 3124, column: 200, scope: !15700)
!15700 = !DILexicalBlockFile(scope: !2218, file: !450, discriminator: 5)
!15701 = !DILocation(line: 3125, column: 52, scope: !2219)
!15702 = !DILocation(line: 3125, column: 60, scope: !2219)
!15703 = !DILocation(line: 3125, column: 70, scope: !2219)
!15704 = !DILocation(line: 3125, column: 16, scope: !2219)
!15705 = !DILocation(line: 3125, column: 9, scope: !2219)
!15706 = !DILocation(line: 3128, column: 53, scope: !2220)
!15707 = !DILocation(line: 3128, column: 61, scope: !2220)
!15708 = !DILocation(line: 3128, column: 71, scope: !2220)
!15709 = !DILocation(line: 3128, column: 77, scope: !2220)
!15710 = !DILocation(line: 3128, column: 16, scope: !2220)
!15711 = !DILocation(line: 3128, column: 9, scope: !2220)
!15712 = !DILocation(line: 3129, column: 1, scope: !2186)
!15713 = !DILocation(line: 2959, column: 25, scope: !2132)
!15714 = !DILocation(line: 2961, column: 18, scope: !2132)
!15715 = !DILocation(line: 2963, column: 18, scope: !2132)
!15716 = !DILocation(line: 2961, column: 5, scope: !2132)
!15717 = !DILocation(line: 2964, column: 5, scope: !2132)
!15718 = !DILocation(line: 3213, column: 39, scope: !2221)
!15719 = !DILocation(line: 3215, column: 5, scope: !2221)
!15720 = !DILocation(line: 3215, column: 10, scope: !15721)
!15721 = !DILexicalBlockFile(scope: !2227, file: !450, discriminator: 1)
!15722 = !DILocation(line: 3215, column: 20, scope: !2227)
!15723 = !DILocation(line: 3215, column: 43, scope: !2227)
!15724 = !DILocation(line: 3215, column: 49, scope: !2227)
!15725 = !DILocation(line: 3215, column: 62, scope: !2231)
!15726 = !DILocation(line: 3215, column: 70, scope: !2231)
!15727 = !DILocation(line: 3215, column: 62, scope: !2227)
!15728 = !DILocation(line: 3215, column: 88, scope: !15729)
!15729 = !DILexicalBlockFile(scope: !2230, file: !450, discriminator: 2)
!15730 = !DILocation(line: 3215, column: 94, scope: !2230)
!15731 = !DILocation(line: 3215, column: 102, scope: !2230)
!15732 = !DILocation(line: 3215, column: 116, scope: !2230)
!15733 = !DILocation(line: 3215, column: 121, scope: !15734)
!15734 = !DILexicalBlockFile(scope: !2229, file: !450, discriminator: 4)
!15735 = !DILocation(line: 3215, column: 131, scope: !2229)
!15736 = !DILocation(line: 3215, column: 161, scope: !2229)
!15737 = !DILocation(line: 3215, column: 179, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !2229, file: !450, line: 3215, column: 176)
!15739 = !DILocation(line: 3215, column: 196, scope: !15738)
!15740 = !DILocation(line: 3215, column: 176, scope: !15738)
!15741 = !DILocation(line: 3215, column: 206, scope: !15738)
!15742 = !DILocation(line: 3215, column: 176, scope: !2229)
!15743 = !DILocation(line: 3215, column: 176, scope: !15744)
!15744 = !DILexicalBlockFile(scope: !2229, file: !450, discriminator: 5)
!15745 = !DILocation(line: 3215, column: 237, scope: !15746)
!15746 = !DILexicalBlockFile(scope: !15738, file: !450, discriminator: 6)
!15747 = !DILocation(line: 3215, column: 255, scope: !15738)
!15748 = !DILocation(line: 3215, column: 265, scope: !15738)
!15749 = !DILocation(line: 3215, column: 290, scope: !15738)
!15750 = !DILocation(line: 3215, column: 221, scope: !15738)
!15751 = !DILocation(line: 3215, column: 309, scope: !15752)
!15752 = !DILexicalBlockFile(scope: !2230, file: !450, discriminator: 7)
!15753 = !DILocation(line: 3215, column: 309, scope: !2229)
!15754 = !DILocation(line: 3215, column: 309, scope: !15755)
!15755 = !DILexicalBlockFile(scope: !2229, file: !450, discriminator: 8)
!15756 = !DILocation(line: 3215, column: 322, scope: !15757)
!15757 = !DILexicalBlockFile(scope: !2230, file: !450, discriminator: 9)
!15758 = !DILocation(line: 3215, column: 324, scope: !15759)
!15759 = !DILexicalBlockFile(scope: !15760, file: !450, discriminator: 10)
!15760 = !DILexicalBlockFile(scope: !2221, file: !450, discriminator: 3)
!15761 = !DILocation(line: 3215, column: 324, scope: !2227)
!15762 = !DILocation(line: 3216, column: 5, scope: !2221)
!15763 = !DILocation(line: 3216, column: 10, scope: !15764)
!15764 = !DILexicalBlockFile(scope: !2233, file: !450, discriminator: 1)
!15765 = !DILocation(line: 3216, column: 20, scope: !2233)
!15766 = !DILocation(line: 3216, column: 43, scope: !2233)
!15767 = !DILocation(line: 3216, column: 49, scope: !2233)
!15768 = !DILocation(line: 3216, column: 60, scope: !2237)
!15769 = !DILocation(line: 3216, column: 68, scope: !2237)
!15770 = !DILocation(line: 3216, column: 60, scope: !2233)
!15771 = !DILocation(line: 3216, column: 86, scope: !15772)
!15772 = !DILexicalBlockFile(scope: !2236, file: !450, discriminator: 2)
!15773 = !DILocation(line: 3216, column: 92, scope: !2236)
!15774 = !DILocation(line: 3216, column: 98, scope: !2236)
!15775 = !DILocation(line: 3216, column: 112, scope: !2236)
!15776 = !DILocation(line: 3216, column: 117, scope: !15777)
!15777 = !DILexicalBlockFile(scope: !2235, file: !450, discriminator: 4)
!15778 = !DILocation(line: 3216, column: 127, scope: !2235)
!15779 = !DILocation(line: 3216, column: 157, scope: !2235)
!15780 = !DILocation(line: 3216, column: 175, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !2235, file: !450, line: 3216, column: 172)
!15782 = !DILocation(line: 3216, column: 192, scope: !15781)
!15783 = !DILocation(line: 3216, column: 172, scope: !15781)
!15784 = !DILocation(line: 3216, column: 202, scope: !15781)
!15785 = !DILocation(line: 3216, column: 172, scope: !2235)
!15786 = !DILocation(line: 3216, column: 172, scope: !15787)
!15787 = !DILexicalBlockFile(scope: !2235, file: !450, discriminator: 5)
!15788 = !DILocation(line: 3216, column: 233, scope: !15789)
!15789 = !DILexicalBlockFile(scope: !15781, file: !450, discriminator: 6)
!15790 = !DILocation(line: 3216, column: 251, scope: !15781)
!15791 = !DILocation(line: 3216, column: 261, scope: !15781)
!15792 = !DILocation(line: 3216, column: 286, scope: !15781)
!15793 = !DILocation(line: 3216, column: 217, scope: !15781)
!15794 = !DILocation(line: 3216, column: 305, scope: !15795)
!15795 = !DILexicalBlockFile(scope: !2236, file: !450, discriminator: 7)
!15796 = !DILocation(line: 3216, column: 305, scope: !2235)
!15797 = !DILocation(line: 3216, column: 305, scope: !15798)
!15798 = !DILexicalBlockFile(scope: !2235, file: !450, discriminator: 8)
!15799 = !DILocation(line: 3216, column: 318, scope: !15800)
!15800 = !DILexicalBlockFile(scope: !2236, file: !450, discriminator: 9)
!15801 = !DILocation(line: 3216, column: 320, scope: !15759)
!15802 = !DILocation(line: 3216, column: 320, scope: !2233)
!15803 = !DILocation(line: 3217, column: 19, scope: !2221)
!15804 = !DILocation(line: 3217, column: 7, scope: !2221)
!15805 = !DILocation(line: 3217, column: 27, scope: !2221)
!15806 = !DILocation(line: 3217, column: 37, scope: !2221)
!15807 = !DILocation(line: 3217, column: 57, scope: !2221)
!15808 = !DILocation(line: 3217, column: 45, scope: !2221)
!15809 = !DILocation(line: 3217, column: 5, scope: !2221)
!15810 = !DILocation(line: 3218, column: 1, scope: !2221)
!15811 = !DILocation(line: 3256, column: 36, scope: !2238)
!15812 = !DILocation(line: 3260, column: 5, scope: !2238)
!15813 = !DILocation(line: 3260, column: 17, scope: !2238)
!15814 = !DILocation(line: 3260, column: 43, scope: !2238)
!15815 = !DILocation(line: 3260, column: 31, scope: !2238)
!15816 = !DILocation(line: 3260, column: 51, scope: !2238)
!15817 = !DILocation(line: 3260, column: 61, scope: !2238)
!15818 = !DILocation(line: 3262, column: 22, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !2238, file: !450, line: 3262, column: 9)
!15820 = !DILocation(line: 3262, column: 10, scope: !15819)
!15821 = !DILocation(line: 3262, column: 31, scope: !15819)
!15822 = !DILocation(line: 3262, column: 28, scope: !15819)
!15823 = !DILocation(line: 3262, column: 9, scope: !2238)
!15824 = !DILocation(line: 3263, column: 47, scope: !15819)
!15825 = !DILocation(line: 3263, column: 16, scope: !15819)
!15826 = !DILocation(line: 3263, column: 9, scope: !15819)
!15827 = !DILocation(line: 3265, column: 9, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !2238, file: !450, line: 3265, column: 9)
!15829 = !DILocation(line: 3265, column: 15, scope: !15828)
!15830 = !DILocation(line: 3265, column: 20, scope: !15828)
!15831 = !DILocation(line: 3265, column: 9, scope: !2238)
!15832 = !DILocation(line: 3266, column: 47, scope: !15828)
!15833 = !DILocation(line: 3266, column: 58, scope: !15828)
!15834 = !DILocation(line: 3266, column: 64, scope: !15828)
!15835 = !DILocation(line: 3266, column: 16, scope: !15828)
!15836 = !DILocation(line: 3266, column: 9, scope: !15828)
!15837 = !DILocation(line: 3268, column: 47, scope: !2238)
!15838 = !DILocation(line: 3268, column: 58, scope: !2238)
!15839 = !DILocation(line: 3268, column: 64, scope: !2238)
!15840 = !DILocation(line: 3269, column: 33, scope: !2238)
!15841 = !DILocation(line: 3269, column: 39, scope: !2238)
!15842 = !DILocation(line: 3268, column: 12, scope: !2238)
!15843 = !DILocation(line: 3268, column: 5, scope: !2238)
!15844 = !DILocation(line: 3270, column: 1, scope: !2238)
!15845 = !DILocation(line: 3236, column: 36, scope: !2244)
!15846 = !DILocation(line: 3238, column: 43, scope: !2244)
!15847 = !DILocation(line: 3238, column: 49, scope: !2244)
!15848 = !DILocation(line: 3238, column: 23, scope: !2244)
!15849 = !DILocation(line: 3238, column: 12, scope: !2244)
!15850 = !DILocation(line: 3238, column: 5, scope: !2244)
!15851 = !DILocation(line: 3274, column: 35, scope: !2249)
!15852 = !DILocation(line: 3276, column: 5, scope: !2249)
!15853 = !DILocation(line: 3276, column: 9, scope: !2249)
!15854 = !DILocation(line: 3276, column: 16, scope: !2249)
!15855 = !DILocation(line: 3276, column: 25, scope: !2249)
!15856 = !DILocation(line: 3277, column: 5, scope: !2249)
!15857 = !DILocation(line: 3277, column: 15, scope: !2249)
!15858 = !DILocation(line: 3278, column: 5, scope: !2249)
!15859 = !DILocation(line: 3278, column: 10, scope: !2249)
!15860 = !DILocation(line: 3280, column: 9, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !2249, file: !450, line: 3280, column: 9)
!15862 = !DILocation(line: 3280, column: 15, scope: !15861)
!15863 = !DILocation(line: 3280, column: 20, scope: !15861)
!15864 = !DILocation(line: 3280, column: 9, scope: !2249)
!15865 = !DILocation(line: 3281, column: 25, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15861, file: !450, line: 3280, column: 35)
!15867 = !DILocation(line: 3281, column: 31, scope: !15866)
!15868 = !DILocation(line: 3281, column: 39, scope: !15866)
!15869 = !DILocation(line: 3281, column: 48, scope: !15866)
!15870 = !DILocation(line: 3282, column: 16, scope: !15866)
!15871 = !DILocation(line: 3282, column: 22, scope: !15866)
!15872 = !DILocation(line: 3282, column: 9, scope: !15866)
!15873 = !DILocation(line: 3285, column: 32, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !2249, file: !450, line: 3285, column: 9)
!15875 = !DILocation(line: 3285, column: 38, scope: !15874)
!15876 = !DILocation(line: 3285, column: 11, scope: !15874)
!15877 = !DILocation(line: 3285, column: 48, scope: !15874)
!15878 = !DILocation(line: 3285, column: 54, scope: !15874)
!15879 = !DILocation(line: 3285, column: 9, scope: !2249)
!15880 = !DILocation(line: 3286, column: 14, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15874, file: !450, line: 3285, column: 59)
!15882 = !DILocation(line: 3287, column: 53, scope: !15881)
!15883 = !DILocation(line: 3287, column: 59, scope: !15881)
!15884 = !DILocation(line: 3287, column: 33, scope: !15881)
!15885 = !DILocation(line: 3287, column: 18, scope: !15881)
!15886 = !DILocation(line: 3287, column: 16, scope: !15881)
!15887 = !DILocation(line: 3288, column: 13, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15881, file: !450, line: 3288, column: 13)
!15889 = !DILocation(line: 3288, column: 20, scope: !15888)
!15890 = !DILocation(line: 3288, column: 13, scope: !15881)
!15891 = !DILocation(line: 3289, column: 13, scope: !15888)
!15892 = !DILocation(line: 3290, column: 5, scope: !15881)
!15893 = !DILocation(line: 3292, column: 14, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15874, file: !450, line: 3291, column: 10)
!15895 = !DILocation(line: 3293, column: 18, scope: !15894)
!15896 = !DILocation(line: 3293, column: 24, scope: !15894)
!15897 = !DILocation(line: 3293, column: 16, scope: !15894)
!15898 = !DILocation(line: 3294, column: 25, scope: !15894)
!15899 = !DILocation(line: 3294, column: 35, scope: !15894)
!15900 = !DILocation(line: 3294, column: 44, scope: !15894)
!15901 = !DILocation(line: 3297, column: 38, scope: !2249)
!15902 = !DILocation(line: 3297, column: 17, scope: !2249)
!15903 = !DILocation(line: 3297, column: 48, scope: !2249)
!15904 = !DILocation(line: 3297, column: 13, scope: !2249)
!15905 = !DILocation(line: 3298, column: 5, scope: !2249)
!15906 = !DILocation(line: 3298, column: 10, scope: !15907)
!15907 = !DILexicalBlockFile(scope: !2258, file: !450, discriminator: 1)
!15908 = !DILocation(line: 3298, column: 20, scope: !2258)
!15909 = !DILocation(line: 3298, column: 50, scope: !2258)
!15910 = !DILocation(line: 3298, column: 67, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !2258, file: !450, line: 3298, column: 64)
!15912 = !DILocation(line: 3298, column: 84, scope: !15911)
!15913 = !DILocation(line: 3298, column: 64, scope: !15911)
!15914 = !DILocation(line: 3298, column: 94, scope: !15911)
!15915 = !DILocation(line: 3298, column: 64, scope: !2258)
!15916 = !DILocation(line: 3298, column: 64, scope: !15917)
!15917 = !DILexicalBlockFile(scope: !2258, file: !450, discriminator: 2)
!15918 = !DILocation(line: 3298, column: 125, scope: !15919)
!15919 = !DILexicalBlockFile(scope: !15911, file: !450, discriminator: 3)
!15920 = !DILocation(line: 3298, column: 143, scope: !15911)
!15921 = !DILocation(line: 3298, column: 153, scope: !15911)
!15922 = !DILocation(line: 3298, column: 178, scope: !15911)
!15923 = !DILocation(line: 3298, column: 109, scope: !15911)
!15924 = !DILocation(line: 3298, column: 197, scope: !15925)
!15925 = !DILexicalBlockFile(scope: !2249, file: !450, discriminator: 4)
!15926 = !DILocation(line: 3298, column: 197, scope: !2258)
!15927 = !DILocation(line: 3298, column: 197, scope: !15928)
!15928 = !DILexicalBlockFile(scope: !2258, file: !450, discriminator: 5)
!15929 = !DILocation(line: 3299, column: 22, scope: !2249)
!15930 = !DILocation(line: 3299, column: 15, scope: !2249)
!15931 = !DILocation(line: 3299, column: 13, scope: !2249)
!15932 = !DILocation(line: 3300, column: 20, scope: !2249)
!15933 = !DILocation(line: 3300, column: 13, scope: !2249)
!15934 = !DILocation(line: 3300, column: 11, scope: !2249)
!15935 = !DILocation(line: 3303, column: 51, scope: !2249)
!15936 = !DILocation(line: 3303, column: 57, scope: !2249)
!15937 = !DILocation(line: 3303, column: 64, scope: !2249)
!15938 = !DILocation(line: 3303, column: 12, scope: !2249)
!15939 = !DILocation(line: 3303, column: 5, scope: !2249)
!15940 = !DILocation(line: 3304, column: 1, scope: !2249)
!15941 = !DILocation(line: 3221, column: 43, scope: !2259)
!15942 = !DILocation(line: 3222, column: 43, scope: !2259)
!15943 = !DILocation(line: 3222, column: 54, scope: !2259)
!15944 = !DILocation(line: 3224, column: 9, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !2259, file: !450, line: 3224, column: 9)
!15946 = !DILocation(line: 3224, column: 12, scope: !15945)
!15947 = !DILocation(line: 3224, column: 17, scope: !15945)
!15948 = !DILocation(line: 3224, column: 20, scope: !15949)
!15949 = !DILexicalBlockFile(scope: !15945, file: !450, discriminator: 1)
!15950 = !DILocation(line: 3224, column: 23, scope: !15945)
!15951 = !DILocation(line: 3224, column: 9, scope: !2259)
!15952 = !DILocation(line: 3225, column: 72, scope: !15945)
!15953 = !DILocation(line: 3225, column: 9, scope: !15945)
!15954 = !DILocation(line: 3226, column: 23, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !2259, file: !450, line: 3226, column: 9)
!15956 = !DILocation(line: 3226, column: 11, scope: !15955)
!15957 = !DILocation(line: 3226, column: 32, scope: !15955)
!15958 = !DILocation(line: 3226, column: 41, scope: !15955)
!15959 = !DILocation(line: 3226, column: 9, scope: !2259)
!15960 = !DILocation(line: 3227, column: 6, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !450, line: 3227, column: 6)
!15962 = distinct !DILexicalBlock(scope: !15955, file: !450, line: 3226, column: 70)
!15963 = !DILocation(line: 3227, column: 9, scope: !15961)
!15964 = !DILocation(line: 3227, column: 6, scope: !15962)
!15965 = !DILocation(line: 3228, column: 73, scope: !15961)
!15966 = !DILocation(line: 3228, column: 6, scope: !15961)
!15967 = !DILocation(line: 3230, column: 72, scope: !15961)
!15968 = !DILocation(line: 3230, column: 6, scope: !15961)
!15969 = !DILocation(line: 3232, column: 30, scope: !2259)
!15970 = !DILocation(line: 3232, column: 36, scope: !2259)
!15971 = !DILocation(line: 3232, column: 44, scope: !2259)
!15972 = !DILocation(line: 3232, column: 51, scope: !2259)
!15973 = !DILocation(line: 3232, column: 59, scope: !2259)
!15974 = !DILocation(line: 3232, column: 12, scope: !2259)
!15975 = !DILocation(line: 3232, column: 5, scope: !2259)
!15976 = !DILocation(line: 3233, column: 1, scope: !2259)
!15977 = !DILocation(line: 3200, column: 28, scope: !2295)
!15978 = !DILocation(line: 3200, column: 44, scope: !2295)
!15979 = !DILocation(line: 3200, column: 60, scope: !2295)
!15980 = !DILocation(line: 3202, column: 5, scope: !2295)
!15981 = !DILocation(line: 3202, column: 15, scope: !2295)
!15982 = !DILocation(line: 3203, column: 5, scope: !2295)
!15983 = !DILocation(line: 3203, column: 15, scope: !2295)
!15984 = !DILocation(line: 3204, column: 37, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !2295, file: !450, line: 3204, column: 9)
!15986 = !DILocation(line: 3204, column: 43, scope: !15985)
!15987 = !DILocation(line: 3204, column: 9, scope: !15985)
!15988 = !DILocation(line: 3204, column: 9, scope: !2295)
!15989 = !DILocation(line: 3207, column: 29, scope: !15985)
!15990 = !DILocation(line: 3207, column: 37, scope: !15985)
!15991 = !DILocation(line: 3207, column: 16, scope: !15985)
!15992 = !DILocation(line: 3207, column: 9, scope: !15985)
!15993 = !DILocation(line: 3209, column: 5, scope: !2295)
!15994 = !DILocation(line: 3210, column: 1, scope: !2295)
!15995 = !DILocation(line: 3307, column: 38, scope: !2266)
!15996 = !DILocation(line: 3307, column: 54, scope: !2266)
!15997 = !DILocation(line: 3309, column: 34, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !2266, file: !450, line: 3309, column: 9)
!15999 = !DILocation(line: 3309, column: 9, scope: !15998)
!16000 = !DILocation(line: 3309, column: 48, scope: !15998)
!16001 = !DILocation(line: 3309, column: 9, scope: !2266)
!16002 = !DILocation(line: 3310, column: 9, scope: !15998)
!16003 = !DILocation(line: 3312, column: 25, scope: !2266)
!16004 = !DILocation(line: 3312, column: 12, scope: !2266)
!16005 = !DILocation(line: 3312, column: 5, scope: !2266)
!16006 = !DILocation(line: 3313, column: 1, scope: !2266)
!16007 = !DILocation(line: 3316, column: 41, scope: !2278)
!16008 = !DILocation(line: 3316, column: 57, scope: !2278)
!16009 = !DILocation(line: 3318, column: 34, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !2278, file: !450, line: 3318, column: 9)
!16011 = !DILocation(line: 3318, column: 9, scope: !16010)
!16012 = !DILocation(line: 3318, column: 51, scope: !16010)
!16013 = !DILocation(line: 3318, column: 9, scope: !2278)
!16014 = !DILocation(line: 3319, column: 9, scope: !16010)
!16015 = !DILocation(line: 3321, column: 21, scope: !2278)
!16016 = !DILocation(line: 3321, column: 27, scope: !2278)
!16017 = !DILocation(line: 3321, column: 37, scope: !2278)
!16018 = !DILocation(line: 3321, column: 46, scope: !2278)
!16019 = !DILocation(line: 3322, column: 12, scope: !2278)
!16020 = !DILocation(line: 3322, column: 18, scope: !2278)
!16021 = !DILocation(line: 3322, column: 5, scope: !2278)
!16022 = !DILocation(line: 3323, column: 1, scope: !2278)
!16023 = !DILocation(line: 3326, column: 24, scope: !2282)
!16024 = !DILocation(line: 3326, column: 40, scope: !2282)
!16025 = !DILocation(line: 3328, column: 34, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !2282, file: !450, line: 3328, column: 9)
!16027 = !DILocation(line: 3328, column: 9, scope: !16026)
!16028 = !DILocation(line: 3328, column: 45, scope: !16026)
!16029 = !DILocation(line: 3328, column: 9, scope: !2282)
!16030 = !DILocation(line: 3329, column: 9, scope: !16026)
!16031 = !DILocation(line: 3331, column: 58, scope: !2282)
!16032 = !DILocation(line: 3331, column: 5, scope: !2282)
!16033 = !DILocation(line: 3332, column: 1, scope: !2282)
!16034 = !DILocation(line: 3335, column: 39, scope: !2286)
!16035 = !DILocation(line: 3335, column: 66, scope: !2286)
!16036 = !DILocation(line: 3337, column: 25, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !2286, file: !450, line: 3337, column: 9)
!16038 = !DILocation(line: 3337, column: 13, scope: !16037)
!16039 = !DILocation(line: 3337, column: 31, scope: !16037)
!16040 = !DILocation(line: 3337, column: 40, scope: !16037)
!16041 = !DILocation(line: 3337, column: 70, scope: !16037)
!16042 = !DILocation(line: 3337, column: 104, scope: !16043)
!16043 = !DILexicalBlockFile(scope: !16037, file: !450, discriminator: 1)
!16044 = !DILocation(line: 3337, column: 92, scope: !16037)
!16045 = !DILocation(line: 3337, column: 110, scope: !16037)
!16046 = !DILocation(line: 3337, column: 73, scope: !16037)
!16047 = !DILocation(line: 3337, column: 9, scope: !2286)
!16048 = !DILocation(line: 3338, column: 25, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16037, file: !450, line: 3337, column: 150)
!16050 = !DILocation(line: 3338, column: 9, scope: !16049)
!16051 = !DILocation(line: 3340, column: 9, scope: !16049)
!16052 = !DILocation(line: 3342, column: 39, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !2286, file: !450, line: 3342, column: 9)
!16054 = !DILocation(line: 3342, column: 12, scope: !16053)
!16055 = !DILocation(line: 3342, column: 45, scope: !16053)
!16056 = !DILocation(line: 3342, column: 10, scope: !16053)
!16057 = !DILocation(line: 3342, column: 56, scope: !16053)
!16058 = !DILocation(line: 3342, column: 59, scope: !16059)
!16059 = !DILexicalBlockFile(scope: !16053, file: !450, discriminator: 1)
!16060 = !DILocation(line: 3342, column: 63, scope: !16053)
!16061 = !DILocation(line: 3342, column: 85, scope: !16053)
!16062 = !DILocation(line: 3342, column: 73, scope: !16053)
!16063 = !DILocation(line: 3342, column: 70, scope: !16053)
!16064 = !DILocation(line: 3342, column: 9, scope: !2286)
!16065 = !DILocation(line: 3343, column: 25, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16053, file: !450, line: 3342, column: 91)
!16067 = !DILocation(line: 3343, column: 9, scope: !16066)
!16068 = !DILocation(line: 3345, column: 9, scope: !16066)
!16069 = !DILocation(line: 3348, column: 35, scope: !2286)
!16070 = !DILocation(line: 3348, column: 59, scope: !2286)
!16071 = !DILocation(line: 3348, column: 65, scope: !2286)
!16072 = !DILocation(line: 3348, column: 39, scope: !2286)
!16073 = !DILocation(line: 3348, column: 12, scope: !2286)
!16074 = !DILocation(line: 3348, column: 5, scope: !2286)
!16075 = !DILocation(line: 3349, column: 1, scope: !2286)
!16076 = !DILocation(line: 3352, column: 43, scope: !2292)
!16077 = !DILocation(line: 3354, column: 9, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !2292, file: !450, line: 3354, column: 9)
!16079 = !DILocation(line: 3354, column: 15, scope: !16078)
!16080 = !DILocation(line: 3354, column: 20, scope: !16078)
!16081 = !DILocation(line: 3354, column: 9, scope: !2292)
!16082 = !DILocation(line: 3355, column: 37, scope: !16078)
!16083 = !DILocation(line: 3355, column: 43, scope: !16078)
!16084 = !DILocation(line: 3355, column: 16, scope: !16078)
!16085 = !DILocation(line: 3355, column: 9, scope: !16078)
!16086 = !DILocation(line: 3356, column: 34, scope: !2292)
!16087 = !DILocation(line: 3356, column: 40, scope: !2292)
!16088 = !DILocation(line: 3356, column: 48, scope: !2292)
!16089 = !DILocation(line: 3356, column: 54, scope: !2292)
!16090 = !DILocation(line: 3356, column: 12, scope: !2292)
!16091 = !DILocation(line: 3356, column: 5, scope: !2292)
!16092 = !DILocation(line: 3357, column: 1, scope: !2292)
!16093 = !DILocation(line: 3246, column: 36, scope: !2272)
!16094 = !DILocation(line: 3246, column: 52, scope: !2272)
!16095 = !DILocation(line: 3248, column: 9, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !2272, file: !450, line: 3248, column: 9)
!16097 = !DILocation(line: 3248, column: 12, scope: !16096)
!16098 = !DILocation(line: 3248, column: 33, scope: !16096)
!16099 = !DILocation(line: 3248, column: 51, scope: !16100)
!16100 = !DILexicalBlockFile(scope: !16096, file: !450, discriminator: 1)
!16101 = !DILocation(line: 3248, column: 57, scope: !16096)
!16102 = !DILocation(line: 3248, column: 66, scope: !16096)
!16103 = !DILocation(line: 3248, column: 96, scope: !16096)
!16104 = !DILocation(line: 3248, column: 130, scope: !16105)
!16105 = !DILexicalBlockFile(scope: !16096, file: !450, discriminator: 2)
!16106 = !DILocation(line: 3248, column: 136, scope: !16096)
!16107 = !DILocation(line: 3248, column: 99, scope: !16096)
!16108 = !DILocation(line: 3248, column: 9, scope: !2272)
!16109 = !DILocation(line: 3249, column: 9, scope: !16096)
!16110 = !DILocation(line: 3250, column: 18, scope: !2272)
!16111 = !DILocation(line: 3251, column: 42, scope: !2272)
!16112 = !DILocation(line: 3251, column: 62, scope: !2272)
!16113 = !DILocation(line: 3251, column: 68, scope: !2272)
!16114 = !DILocation(line: 3251, column: 78, scope: !2272)
!16115 = !DILocation(line: 3250, column: 5, scope: !2272)
!16116 = !DILocation(line: 3252, column: 5, scope: !2272)
!16117 = !DILocation(line: 3253, column: 1, scope: !2272)
!16118 = !DILocation(line: 470, column: 23, scope: !2312)
!16119 = !DILocation(line: 470, column: 31, scope: !2312)
!16120 = !DILocation(line: 470, column: 39, scope: !2312)
!16121 = !DILocation(line: 472, column: 10, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !2312, file: !450, line: 472, column: 9)
!16123 = !DILocation(line: 472, column: 9, scope: !16122)
!16124 = !DILocation(line: 472, column: 13, scope: !16122)
!16125 = !DILocation(line: 472, column: 17, scope: !16122)
!16126 = !DILocation(line: 472, column: 21, scope: !16127)
!16127 = !DILexicalBlockFile(scope: !16122, file: !450, discriminator: 1)
!16128 = !DILocation(line: 472, column: 20, scope: !16122)
!16129 = !DILocation(line: 472, column: 24, scope: !16122)
!16130 = !DILocation(line: 472, column: 9, scope: !2312)
!16131 = !DILocation(line: 473, column: 24, scope: !16132)
!16132 = distinct !DILexicalBlock(scope: !16122, file: !450, line: 472, column: 36)
!16133 = !DILocation(line: 473, column: 27, scope: !16132)
!16134 = !DILocation(line: 473, column: 9, scope: !16132)
!16135 = !DILocation(line: 478, column: 5, scope: !16132)
!16136 = !DILocation(line: 479, column: 10, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !2312, file: !450, line: 479, column: 9)
!16138 = !DILocation(line: 479, column: 9, scope: !16137)
!16139 = !DILocation(line: 479, column: 12, scope: !16137)
!16140 = !DILocation(line: 479, column: 16, scope: !16137)
!16141 = !DILocation(line: 479, column: 20, scope: !16142)
!16142 = !DILexicalBlockFile(scope: !16137, file: !450, discriminator: 1)
!16143 = !DILocation(line: 479, column: 19, scope: !16137)
!16144 = !DILocation(line: 479, column: 22, scope: !16137)
!16145 = !DILocation(line: 479, column: 9, scope: !2312)
!16146 = !DILocation(line: 480, column: 24, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16137, file: !450, line: 479, column: 34)
!16148 = !DILocation(line: 480, column: 27, scope: !16147)
!16149 = !DILocation(line: 480, column: 9, scope: !16147)
!16150 = !DILocation(line: 485, column: 5, scope: !16147)
!16151 = !DILocation(line: 488, column: 1, scope: !2312)
!16152 = !DILocation(line: 375, column: 27, scope: !2319)
!16153 = !DILocation(line: 377, column: 23, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !2319, file: !450, line: 377, column: 9)
!16155 = !DILocation(line: 377, column: 20, scope: !16154)
!16156 = !DILocation(line: 377, column: 28, scope: !16154)
!16157 = !DILocation(line: 377, column: 31, scope: !16158)
!16158 = !DILexicalBlockFile(scope: !16154, file: !450, discriminator: 1)
!16159 = !DILocation(line: 377, column: 36, scope: !16154)
!16160 = !DILocation(line: 377, column: 9, scope: !2319)
!16161 = !DILocation(line: 378, column: 9, scope: !16154)
!16162 = !DILocation(line: 379, column: 18, scope: !2319)
!16163 = !DILocation(line: 381, column: 18, scope: !2319)
!16164 = !DILocation(line: 379, column: 5, scope: !2319)
!16165 = !DILocation(line: 382, column: 5, scope: !2319)
!16166 = !DILocation(line: 383, column: 1, scope: !2319)
!16167 = !DILocation(line: 642, column: 34, scope: !2331)
!16168 = !DILocation(line: 642, column: 44, scope: !2331)
!16169 = !DILocation(line: 642, column: 51, scope: !2331)
!16170 = !DILocation(line: 642, column: 58, scope: !2331)
!16171 = !DILocation(line: 644, column: 5, scope: !2331)
!16172 = !DILocation(line: 644, column: 11, scope: !2331)
!16173 = !DILocation(line: 644, column: 20, scope: !2331)
!16174 = !DILocation(line: 645, column: 27, scope: !2331)
!16175 = !DILocation(line: 645, column: 30, scope: !2331)
!16176 = !DILocation(line: 645, column: 40, scope: !2331)
!16177 = !DILocation(line: 645, column: 25, scope: !2331)
!16178 = !DILocation(line: 645, column: 8, scope: !2331)
!16179 = !DILocation(line: 645, column: 15, scope: !2331)
!16180 = !DILocation(line: 645, column: 7, scope: !2331)
!16181 = !DILocation(line: 645, column: 23, scope: !2331)
!16182 = !DILocation(line: 645, column: 68, scope: !2331)
!16183 = !DILocation(line: 645, column: 71, scope: !2331)
!16184 = !DILocation(line: 645, column: 66, scope: !2331)
!16185 = !DILocation(line: 645, column: 49, scope: !2331)
!16186 = !DILocation(line: 645, column: 56, scope: !2331)
!16187 = !DILocation(line: 645, column: 48, scope: !2331)
!16188 = !DILocation(line: 645, column: 64, scope: !2331)
!16189 = !DILocation(line: 646, column: 45, scope: !2331)
!16190 = !DILocation(line: 646, column: 44, scope: !2331)
!16191 = !DILocation(line: 646, column: 26, scope: !2331)
!16192 = !DILocation(line: 646, column: 33, scope: !2331)
!16193 = !DILocation(line: 646, column: 7, scope: !2331)
!16194 = !DILocation(line: 646, column: 42, scope: !2331)
!16195 = !DILocation(line: 647, column: 45, scope: !2331)
!16196 = !DILocation(line: 647, column: 44, scope: !2331)
!16197 = !DILocation(line: 647, column: 26, scope: !2331)
!16198 = !DILocation(line: 647, column: 33, scope: !2331)
!16199 = !DILocation(line: 647, column: 7, scope: !2331)
!16200 = !DILocation(line: 647, column: 42, scope: !2331)
!16201 = !DILocation(line: 648, column: 1, scope: !2331)
